package HTML::Dojo::editions;
1;
__DATA__
__CPAN_EDITION__ ajax dojo.js
/*
	Copyright (c) 2004-2006, The Dojo Foundation
	All Rights Reserved.

	Licensed under the Academic Free License version 2.1 or above OR the
	modified BSD license. For more information on Dojo licensing, see:

		http://dojotoolkit.org/community/licensing.shtml
*/

/*
	This is a compiled version of Dojo, built for deployment and not for
	development. To get an editable version, please visit:

		http://dojotoolkit.org

	for documentation and information on getting the source.
*/

if(typeof dojo=="undefined"){
var dj_global=this;
var dj_currentContext=this;
function dj_undef(_1,_2){
return (typeof (_2||dj_currentContext)[_1]=="undefined");
}
if(dj_undef("djConfig",this)){
var djConfig={};
}
if(dj_undef("dojo",this)){
var dojo={};
}
dojo.global=function(){
return dj_currentContext;
};
dojo.locale=djConfig.locale;
dojo.version={major:0,minor:4,patch:1,flag:"",revision:Number("$Rev: 6824 $".match(/[0-9]+/)[0]),toString:function(){
with(dojo.version){
return major+"."+minor+"."+patch+flag+" ("+revision+")";
}
}};
dojo.evalProp=function(_3,_4,_5){
if((!_4)||(!_3)){
return undefined;
}
if(!dj_undef(_3,_4)){
return _4[_3];
}
return (_5?(_4[_3]={}):undefined);
};
dojo.parseObjPath=function(_6,_7,_8){
var _9=(_7||dojo.global());
var _a=_6.split(".");
var _b=_a.pop();
for(var i=0,l=_a.length;i<l&&_9;i++){
_9=dojo.evalProp(_a[i],_9,_8);
}
return {obj:_9,prop:_b};
};
dojo.evalObjPath=function(_e,_f){
if(typeof _e!="string"){
return dojo.global();
}
if(_e.indexOf(".")==-1){
return dojo.evalProp(_e,dojo.global(),_f);
}
var ref=dojo.parseObjPath(_e,dojo.global(),_f);
if(ref){
return dojo.evalProp(ref.prop,ref.obj,_f);
}
return null;
};
dojo.errorToString=function(_11){
if(!dj_undef("message",_11)){
return _11.message;
}else{
if(!dj_undef("description",_11)){
return _11.description;
}else{
return _11;
}
}
};
dojo.raise=function(_12,_13){
if(_13){
_12=_12+": "+dojo.errorToString(_13);
}else{
_12=dojo.errorToString(_12);
}
try{
if(djConfig.isDebug){
dojo.hostenv.println("FATAL exception raised: "+_12);
}
}
catch(e){
}
throw _13||Error(_12);
};
dojo.debug=function(){
};
dojo.debugShallow=function(obj){
};
dojo.profile={start:function(){
},end:function(){
},stop:function(){
},dump:function(){
}};
function dj_eval(_15){
return dj_global.eval?dj_global.eval(_15):eval(_15);
}
dojo.unimplemented=function(_16,_17){
var _18="'"+_16+"' not implemented";
if(_17!=null){
_18+=" "+_17;
}
dojo.raise(_18);
};
dojo.deprecated=function(_19,_1a,_1b){
var _1c="DEPRECATED: "+_19;
if(_1a){
_1c+=" "+_1a;
}
if(_1b){
_1c+=" -- will be removed in version: "+_1b;
}
dojo.debug(_1c);
};
dojo.render=(function(){
function vscaffold(_1d,_1e){
var tmp={capable:false,support:{builtin:false,plugin:false},prefixes:_1d};
for(var i=0;i<_1e.length;i++){
tmp[_1e[i]]=false;
}
return tmp;
}
return {name:"",ver:dojo.version,os:{win:false,linux:false,osx:false},html:vscaffold(["html"],["ie","opera","khtml","safari","moz"]),svg:vscaffold(["svg"],["corel","adobe","batik"]),vml:vscaffold(["vml"],["ie"]),swf:vscaffold(["Swf","Flash","Mm"],["mm"]),swt:vscaffold(["Swt"],["ibm"])};
})();
dojo.hostenv=(function(){
var _21={isDebug:false,allowQueryConfig:false,baseScriptUri:"",baseRelativePath:"",libraryScriptUri:"",iePreventClobber:false,ieClobberMinimal:true,preventBackButtonFix:true,delayMozLoadingFix:false,searchIds:[],parseWidgets:true};
if(typeof djConfig=="undefined"){
djConfig=_21;
}else{
for(var _22 in _21){
if(typeof djConfig[_22]=="undefined"){
djConfig[_22]=_21[_22];
}
}
}
return {name_:"(unset)",version_:"(unset)",getName:function(){
return this.name_;
},getVersion:function(){
return this.version_;
},getText:function(uri){
dojo.unimplemented("getText","uri="+uri);
}};
})();
dojo.hostenv.getBaseScriptUri=function(){
if(djConfig.baseScriptUri.length){
return djConfig.baseScriptUri;
}
var uri=new String(djConfig.libraryScriptUri||djConfig.baseRelativePath);
if(!uri){
dojo.raise("Nothing returned by getLibraryScriptUri(): "+uri);
}
var _25=uri.lastIndexOf("/");
djConfig.baseScriptUri=djConfig.baseRelativePath;
return djConfig.baseScriptUri;
};
(function(){
var _26={pkgFileName:"__package__",loading_modules_:{},loaded_modules_:{},addedToLoadingCount:[],removedFromLoadingCount:[],inFlightCount:0,modulePrefixes_:{dojo:{name:"dojo",value:"src"}},setModulePrefix:function(_27,_28){
this.modulePrefixes_[_27]={name:_27,value:_28};
},moduleHasPrefix:function(_29){
var mp=this.modulePrefixes_;
return Boolean(mp[_29]&&mp[_29].value);
},getModulePrefix:function(_2b){
if(this.moduleHasPrefix(_2b)){
return this.modulePrefixes_[_2b].value;
}
return _2b;
},getTextStack:[],loadUriStack:[],loadedUris:[],post_load_:false,modulesLoadedListeners:[],unloadListeners:[],loadNotifying:false};
for(var _2c in _26){
dojo.hostenv[_2c]=_26[_2c];
}
})();
dojo.hostenv.loadPath=function(_2d,_2e,cb){
var uri;
if(_2d.charAt(0)=="/"||_2d.match(/^\w+:/)){
uri=_2d;
}else{
uri=this.getBaseScriptUri()+_2d;
}
if(djConfig.cacheBust&&dojo.render.html.capable){
uri+="?"+String(djConfig.cacheBust).replace(/\W+/g,"");
}
try{
return !_2e?this.loadUri(uri,cb):this.loadUriAndCheck(uri,_2e,cb);
}
catch(e){
dojo.debug(e);
return false;
}
};
dojo.hostenv.loadUri=function(uri,cb){
if(this.loadedUris[uri]){
return true;
}
var _33=this.getText(uri,null,true);
if(!_33){
return false;
}
this.loadedUris[uri]=true;
if(cb){
_33="("+_33+")";
}
var _34=dj_eval(_33);
if(cb){
cb(_34);
}
return true;
};
dojo.hostenv.loadUriAndCheck=function(uri,_36,cb){
var ok=true;
try{
ok=this.loadUri(uri,cb);
}
catch(e){
dojo.debug("failed loading ",uri," with error: ",e);
}
return Boolean(ok&&this.findModule(_36,false));
};
dojo.loaded=function(){
};
dojo.unloaded=function(){
};
dojo.hostenv.loaded=function(){
this.loadNotifying=true;
this.post_load_=true;
var mll=this.modulesLoadedListeners;
for(var x=0;x<mll.length;x++){
mll[x]();
}
this.modulesLoadedListeners=[];
this.loadNotifying=false;
dojo.loaded();
};
dojo.hostenv.unloaded=function(){
var mll=this.unloadListeners;
while(mll.length){
(mll.pop())();
}
dojo.unloaded();
};
dojo.addOnLoad=function(obj,_3d){
var dh=dojo.hostenv;
if(arguments.length==1){
dh.modulesLoadedListeners.push(obj);
}else{
if(arguments.length>1){
dh.modulesLoadedListeners.push(function(){
obj[_3d]();
});
}
}
if(dh.post_load_&&dh.inFlightCount==0&&!dh.loadNotifying){
dh.callLoaded();
}
};
dojo.addOnUnload=function(obj,_40){
var dh=dojo.hostenv;
if(arguments.length==1){
dh.unloadListeners.push(obj);
}else{
if(arguments.length>1){
dh.unloadListeners.push(function(){
obj[_40]();
});
}
}
};
dojo.hostenv.modulesLoaded=function(){
if(this.post_load_){
return;
}
if(this.loadUriStack.length==0&&this.getTextStack.length==0){
if(this.inFlightCount>0){
dojo.debug("files still in flight!");
return;
}
dojo.hostenv.callLoaded();
}
};
dojo.hostenv.callLoaded=function(){
if(typeof setTimeout=="object"){
setTimeout("dojo.hostenv.loaded();",0);
}else{
dojo.hostenv.loaded();
}
};
dojo.hostenv.getModuleSymbols=function(_42){
var _43=_42.split(".");
for(var i=_43.length;i>0;i--){
var _45=_43.slice(0,i).join(".");
if((i==1)&&!this.moduleHasPrefix(_45)){
_43[0]="../"+_43[0];
}else{
var _46=this.getModulePrefix(_45);
if(_46!=_45){
_43.splice(0,i,_46);
break;
}
}
}
return _43;
};
dojo.hostenv._global_omit_module_check=false;
dojo.hostenv.loadModule=function(_47,_48,_49){
if(!_47){
return;
}
_49=this._global_omit_module_check||_49;
var _4a=this.findModule(_47,false);
if(_4a){
return _4a;
}
if(dj_undef(_47,this.loading_modules_)){
this.addedToLoadingCount.push(_47);
}
this.loading_modules_[_47]=1;
var _4b=_47.replace(/\./g,"/")+".js";
var _4c=_47.split(".");
var _4d=this.getModuleSymbols(_47);
var _4e=((_4d[0].charAt(0)!="/")&&!_4d[0].match(/^\w+:/));
var _4f=_4d[_4d.length-1];
var ok;
if(_4f=="*"){
_47=_4c.slice(0,-1).join(".");
while(_4d.length){
_4d.pop();
_4d.push(this.pkgFileName);
_4b=_4d.join("/")+".js";
if(_4e&&_4b.charAt(0)=="/"){
_4b=_4b.slice(1);
}
ok=this.loadPath(_4b,!_49?_47:null);
if(ok){
break;
}
_4d.pop();
}
}else{
_4b=_4d.join("/")+".js";
_47=_4c.join(".");
var _51=!_49?_47:null;
ok=this.loadPath(_4b,_51);
if(!ok&&!_48){
_4d.pop();
while(_4d.length){
_4b=_4d.join("/")+".js";
ok=this.loadPath(_4b,_51);
if(ok){
break;
}
_4d.pop();
_4b=_4d.join("/")+"/"+this.pkgFileName+".js";
if(_4e&&_4b.charAt(0)=="/"){
_4b=_4b.slice(1);
}
ok=this.loadPath(_4b,_51);
if(ok){
break;
}
}
}
if(!ok&&!_49){
dojo.raise("Could not load '"+_47+"'; last tried '"+_4b+"'");
}
}
if(!_49&&!this["isXDomain"]){
_4a=this.findModule(_47,false);
if(!_4a){
dojo.raise("symbol '"+_47+"' is not defined after loading '"+_4b+"'");
}
}
return _4a;
};
dojo.hostenv.startPackage=function(_52){
var _53=String(_52);
var _54=_53;
var _55=_52.split(/\./);
if(_55[_55.length-1]=="*"){
_55.pop();
_54=_55.join(".");
}
var _56=dojo.evalObjPath(_54,true);
this.loaded_modules_[_53]=_56;
this.loaded_modules_[_54]=_56;
return _56;
};
dojo.hostenv.findModule=function(_57,_58){
var lmn=String(_57);
if(this.loaded_modules_[lmn]){
return this.loaded_modules_[lmn];
}
if(_58){
dojo.raise("no loaded module named '"+_57+"'");
}
return null;
};
dojo.kwCompoundRequire=function(_5a){
var _5b=_5a["common"]||[];
var _5c=_5a[dojo.hostenv.name_]?_5b.concat(_5a[dojo.hostenv.name_]||[]):_5b.concat(_5a["default"]||[]);
for(var x=0;x<_5c.length;x++){
var _5e=_5c[x];
if(_5e.constructor==Array){
dojo.hostenv.loadModule.apply(dojo.hostenv,_5e);
}else{
dojo.hostenv.loadModule(_5e);
}
}
};
dojo.require=function(_5f){
dojo.hostenv.loadModule.apply(dojo.hostenv,arguments);
};
dojo.requireIf=function(_60,_61){
var _62=arguments[0];
if((_62===true)||(_62=="common")||(_62&&dojo.render[_62].capable)){
var _63=[];
for(var i=1;i<arguments.length;i++){
_63.push(arguments[i]);
}
dojo.require.apply(dojo,_63);
}
};
dojo.requireAfterIf=dojo.requireIf;
dojo.provide=function(_65){
return dojo.hostenv.startPackage.apply(dojo.hostenv,arguments);
};
dojo.registerModulePath=function(_66,_67){
return dojo.hostenv.setModulePrefix(_66,_67);
};
dojo.setModulePrefix=function(_68,_69){
dojo.deprecated("dojo.setModulePrefix(\""+_68+"\", \""+_69+"\")","replaced by dojo.registerModulePath","0.5");
return dojo.registerModulePath(_68,_69);
};
dojo.exists=function(obj,_6b){
var p=_6b.split(".");
for(var i=0;i<p.length;i++){
if(!obj[p[i]]){
return false;
}
obj=obj[p[i]];
}
return true;
};
dojo.hostenv.normalizeLocale=function(_6e){
var _6f=_6e?_6e.toLowerCase():dojo.locale;
if(_6f=="root"){
_6f="ROOT";
}
return _6f;
};
dojo.hostenv.searchLocalePath=function(_70,_71,_72){
_70=dojo.hostenv.normalizeLocale(_70);
var _73=_70.split("-");
var _74=[];
for(var i=_73.length;i>0;i--){
_74.push(_73.slice(0,i).join("-"));
}
_74.push(false);
if(_71){
_74.reverse();
}
for(var j=_74.length-1;j>=0;j--){
var loc=_74[j]||"ROOT";
var _78=_72(loc);
if(_78){
break;
}
}
};
dojo.hostenv.localesGenerated;
dojo.hostenv.registerNlsPrefix=function(){
dojo.registerModulePath("nls","nls");
};
dojo.hostenv.preloadLocalizations=function(){
if(dojo.hostenv.localesGenerated){
dojo.hostenv.registerNlsPrefix();
function preload(_79){
_79=dojo.hostenv.normalizeLocale(_79);
dojo.hostenv.searchLocalePath(_79,true,function(loc){
for(var i=0;i<dojo.hostenv.localesGenerated.length;i++){
if(dojo.hostenv.localesGenerated[i]==loc){
dojo["require"]("nls.dojo_"+loc);
return true;
}
}
return false;
});
}
preload();
var _7c=djConfig.extraLocale||[];
for(var i=0;i<_7c.length;i++){
preload(_7c[i]);
}
}
dojo.hostenv.preloadLocalizations=function(){
};
};
dojo.requireLocalization=function(_7e,_7f,_80,_81){
dojo.hostenv.preloadLocalizations();
var _82=dojo.hostenv.normalizeLocale(_80);
var _83=[_7e,"nls",_7f].join(".");
var _84="";
if(_81){
var _85=_81.split(",");
for(var i=0;i<_85.length;i++){
if(_82.indexOf(_85[i])==0){
if(_85[i].length>_84.length){
_84=_85[i];
}
}
}
if(!_84){
_84="ROOT";
}
}
var _87=_81?_84:_82;
var _88=dojo.hostenv.findModule(_83);
var _89=null;
if(_88){
if(djConfig.localizationComplete&&_88._built){
return;
}
var _8a=_87.replace("-","_");
var _8b=_83+"."+_8a;
_89=dojo.hostenv.findModule(_8b);
}
if(!_89){
_88=dojo.hostenv.startPackage(_83);
var _8c=dojo.hostenv.getModuleSymbols(_7e);
var _8d=_8c.concat("nls").join("/");
var _8e;
dojo.hostenv.searchLocalePath(_87,_81,function(loc){
var _90=loc.replace("-","_");
var _91=_83+"."+_90;
var _92=false;
if(!dojo.hostenv.findModule(_91)){
dojo.hostenv.startPackage(_91);
var _93=[_8d];
if(loc!="ROOT"){
_93.push(loc);
}
_93.push(_7f);
var _94=_93.join("/")+".js";
_92=dojo.hostenv.loadPath(_94,null,function(_95){
var _96=function(){
};
_96.prototype=_8e;
_88[_90]=new _96();
for(var j in _95){
_88[_90][j]=_95[j];
}
});
}else{
_92=true;
}
if(_92&&_88[_90]){
_8e=_88[_90];
}else{
_88[_90]=_8e;
}
if(_81){
return true;
}
});
}
if(_81&&_82!=_84){
_88[_82.replace("-","_")]=_88[_84.replace("-","_")];
}
};
(function(){
var _98=djConfig.extraLocale;
if(_98){
if(!_98 instanceof Array){
_98=[_98];
}
var req=dojo.requireLocalization;
dojo.requireLocalization=function(m,b,_9c,_9d){
req(m,b,_9c,_9d);
if(_9c){
return;
}
for(var i=0;i<_98.length;i++){
req(m,b,_98[i],_9d);
}
};
}
})();
}
if(typeof window!="undefined"){
(function(){
if(djConfig.allowQueryConfig){
var _9f=document.location.toString();
var _a0=_9f.split("?",2);
if(_a0.length>1){
var _a1=_a0[1];
var _a2=_a1.split("&");
for(var x in _a2){
var sp=_a2[x].split("=");
if((sp[0].length>9)&&(sp[0].substr(0,9)=="djConfig.")){
var opt=sp[0].substr(9);
try{
djConfig[opt]=eval(sp[1]);
}
catch(e){
djConfig[opt]=sp[1];
}
}
}
}
}
if(((djConfig["baseScriptUri"]=="")||(djConfig["baseRelativePath"]==""))&&(document&&document.getElementsByTagName)){
var _a6=document.getElementsByTagName("script");
var _a7=/(__package__|dojo|bootstrap1)\.js([\?\.]|$)/i;
for(var i=0;i<_a6.length;i++){
var src=_a6[i].getAttribute("src");
if(!src){
continue;
}
var m=src.match(_a7);
if(m){
var _ab=src.substring(0,m.index);
if(src.indexOf("bootstrap1")>-1){
_ab+="../";
}
if(!this["djConfig"]){
djConfig={};
}
if(djConfig["baseScriptUri"]==""){
djConfig["baseScriptUri"]=_ab;
}
if(djConfig["baseRelativePath"]==""){
djConfig["baseRelativePath"]=_ab;
}
break;
}
}
}
var dr=dojo.render;
var drh=dojo.render.html;
var drs=dojo.render.svg;
var dua=(drh.UA=navigator.userAgent);
var dav=(drh.AV=navigator.appVersion);
var t=true;
var f=false;
drh.capable=t;
drh.support.builtin=t;
dr.ver=parseFloat(drh.AV);
dr.os.mac=dav.indexOf("Macintosh")>=0;
dr.os.win=dav.indexOf("Windows")>=0;
dr.os.linux=dav.indexOf("X11")>=0;
drh.opera=dua.indexOf("Opera")>=0;
drh.khtml=(dav.indexOf("Konqueror")>=0)||(dav.indexOf("Safari")>=0);
drh.safari=dav.indexOf("Safari")>=0;
var _b3=dua.indexOf("Gecko");
drh.mozilla=drh.moz=(_b3>=0)&&(!drh.khtml);
if(drh.mozilla){
drh.geckoVersion=dua.substring(_b3+6,_b3+14);
}
drh.ie=(document.all)&&(!drh.opera);
drh.ie50=drh.ie&&dav.indexOf("MSIE 5.0")>=0;
drh.ie55=drh.ie&&dav.indexOf("MSIE 5.5")>=0;
drh.ie60=drh.ie&&dav.indexOf("MSIE 6.0")>=0;
drh.ie70=drh.ie&&dav.indexOf("MSIE 7.0")>=0;
var cm=document["compatMode"];
drh.quirks=(cm=="BackCompat")||(cm=="QuirksMode")||drh.ie55||drh.ie50;
dojo.locale=dojo.locale||(drh.ie?navigator.userLanguage:navigator.language).toLowerCase();
dr.vml.capable=drh.ie;
drs.capable=f;
drs.support.plugin=f;
drs.support.builtin=f;
var _b5=window["document"];
var tdi=_b5["implementation"];
if((tdi)&&(tdi["hasFeature"])&&(tdi.hasFeature("org.w3c.dom.svg","1.0"))){
drs.capable=t;
drs.support.builtin=t;
drs.support.plugin=f;
}
if(drh.safari){
var tmp=dua.split("AppleWebKit/")[1];
var ver=parseFloat(tmp.split(" ")[0]);
if(ver>=420){
drs.capable=t;
drs.support.builtin=t;
drs.support.plugin=f;
}
}else{
}
})();
dojo.hostenv.startPackage("dojo.hostenv");
dojo.render.name=dojo.hostenv.name_="browser";
dojo.hostenv.searchIds=[];
dojo.hostenv._XMLHTTP_PROGIDS=["Msxml2.XMLHTTP","Microsoft.XMLHTTP","Msxml2.XMLHTTP.4.0"];
dojo.hostenv.getXmlhttpObject=function(){
var _b9=null;
var _ba=null;
try{
_b9=new XMLHttpRequest();
}
catch(e){
}
if(!_b9){
for(var i=0;i<3;++i){
var _bc=dojo.hostenv._XMLHTTP_PROGIDS[i];
try{
_b9=new ActiveXObject(_bc);
}
catch(e){
_ba=e;
}
if(_b9){
dojo.hostenv._XMLHTTP_PROGIDS=[_bc];
break;
}
}
}
if(!_b9){
return dojo.raise("XMLHTTP not available",_ba);
}
return _b9;
};
dojo.hostenv._blockAsync=false;
dojo.hostenv.getText=function(uri,_be,_bf){
if(!_be){
this._blockAsync=true;
}
var _c0=this.getXmlhttpObject();
function isDocumentOk(_c1){
var _c2=_c1["status"];
return Boolean((!_c2)||((200<=_c2)&&(300>_c2))||(_c2==304));
}
if(_be){
var _c3=this,_c4=null,gbl=dojo.global();
var xhr=dojo.evalObjPath("dojo.io.XMLHTTPTransport");
_c0.onreadystatechange=function(){
if(_c4){
gbl.clearTimeout(_c4);
_c4=null;
}
if(_c3._blockAsync||(xhr&&xhr._blockAsync)){
_c4=gbl.setTimeout(function(){
_c0.onreadystatechange.apply(this);
},10);
}else{
if(4==_c0.readyState){
if(isDocumentOk(_c0)){
_be(_c0.responseText);
}
}
}
};
}
_c0.open("GET",uri,_be?true:false);
try{
_c0.send(null);
if(_be){
return null;
}
if(!isDocumentOk(_c0)){
var err=Error("Unable to load "+uri+" status:"+_c0.status);
err.status=_c0.status;
err.responseText=_c0.responseText;
throw err;
}
}
catch(e){
this._blockAsync=false;
if((_bf)&&(!_be)){
return null;
}else{
throw e;
}
}
this._blockAsync=false;
return _c0.responseText;
};
dojo.hostenv.defaultDebugContainerId="dojoDebug";
dojo.hostenv._println_buffer=[];
dojo.hostenv._println_safe=false;
dojo.hostenv.println=function(_c8){
if(!dojo.hostenv._println_safe){
dojo.hostenv._println_buffer.push(_c8);
}else{
try{
var _c9=document.getElementById(djConfig.debugContainerId?djConfig.debugContainerId:dojo.hostenv.defaultDebugContainerId);
if(!_c9){
_c9=dojo.body();
}
var div=document.createElement("div");
div.appendChild(document.createTextNode(_c8));
_c9.appendChild(div);
}
catch(e){
try{
document.write("<div>"+_c8+"</div>");
}
catch(e2){
window.status=_c8;
}
}
}
};
dojo.addOnLoad(function(){
dojo.hostenv._println_safe=true;
while(dojo.hostenv._println_buffer.length>0){
dojo.hostenv.println(dojo.hostenv._println_buffer.shift());
}
});
function dj_addNodeEvtHdlr(_cb,_cc,fp){
var _ce=_cb["on"+_cc]||function(){
};
_cb["on"+_cc]=function(){
fp.apply(_cb,arguments);
_ce.apply(_cb,arguments);
};
return true;
}
function dj_load_init(e){
var _d0=(e&&e.type)?e.type.toLowerCase():"load";
if(arguments.callee.initialized||(_d0!="domcontentloaded"&&_d0!="load")){
return;
}
arguments.callee.initialized=true;
if(typeof (_timer)!="undefined"){
clearInterval(_timer);
delete _timer;
}
var _d1=function(){
if(dojo.render.html.ie){
dojo.hostenv.makeWidgets();
}
};
if(dojo.hostenv.inFlightCount==0){
_d1();
dojo.hostenv.modulesLoaded();
}else{
dojo.hostenv.modulesLoadedListeners.unshift(_d1);
}
}
if(document.addEventListener){
if(dojo.render.html.opera||(dojo.render.html.moz&&!djConfig.delayMozLoadingFix)){
document.addEventListener("DOMContentLoaded",dj_load_init,null);
}
window.addEventListener("load",dj_load_init,null);
}
if(dojo.render.html.ie&&dojo.render.os.win){
document.attachEvent("onreadystatechange",function(e){
if(document.readyState=="complete"){
dj_load_init();
}
});
}
if(/(WebKit|khtml)/i.test(navigator.userAgent)){
var _timer=setInterval(function(){
if(/loaded|complete/.test(document.readyState)){
dj_load_init();
}
},10);
}
if(dojo.render.html.ie){
dj_addNodeEvtHdlr(window,"beforeunload",function(){
dojo.hostenv._unloading=true;
window.setTimeout(function(){
dojo.hostenv._unloading=false;
},0);
});
}
dj_addNodeEvtHdlr(window,"unload",function(){
dojo.hostenv.unloaded();
if((!dojo.render.html.ie)||(dojo.render.html.ie&&dojo.hostenv._unloading)){
dojo.hostenv.unloaded();
}
});
dojo.hostenv.makeWidgets=function(){
var _d3=[];
if(djConfig.searchIds&&djConfig.searchIds.length>0){
_d3=_d3.concat(djConfig.searchIds);
}
if(dojo.hostenv.searchIds&&dojo.hostenv.searchIds.length>0){
_d3=_d3.concat(dojo.hostenv.searchIds);
}
if((djConfig.parseWidgets)||(_d3.length>0)){
if(dojo.evalObjPath("dojo.widget.Parse")){
var _d4=new dojo.xml.Parse();
if(_d3.length>0){
for(var x=0;x<_d3.length;x++){
var _d6=document.getElementById(_d3[x]);
if(!_d6){
continue;
}
var _d7=_d4.parseElement(_d6,null,true);
dojo.widget.getParser().createComponents(_d7);
}
}else{
if(djConfig.parseWidgets){
var _d7=_d4.parseElement(dojo.body(),null,true);
dojo.widget.getParser().createComponents(_d7);
}
}
}
}
};
dojo.addOnLoad(function(){
if(!dojo.render.html.ie){
dojo.hostenv.makeWidgets();
}
});
try{
if(dojo.render.html.ie){
document.namespaces.add("v","urn:schemas-microsoft-com:vml");
document.createStyleSheet().addRule("v\\:*","behavior:url(#default#VML)");
}
}
catch(e){
}
dojo.hostenv.writeIncludes=function(){
};
if(!dj_undef("document",this)){
dj_currentDocument=this.document;
}
dojo.doc=function(){
return dj_currentDocument;
};
dojo.body=function(){
return dojo.doc().body||dojo.doc().getElementsByTagName("body")[0];
};
dojo.byId=function(id,doc){
if((id)&&((typeof id=="string")||(id instanceof String))){
if(!doc){
doc=dj_currentDocument;
}
var ele=doc.getElementById(id);
if(ele&&(ele.id!=id)&&doc.all){
ele=null;
eles=doc.all[id];
if(eles){
if(eles.length){
for(var i=0;i<eles.length;i++){
if(eles[i].id==id){
ele=eles[i];
break;
}
}
}else{
ele=eles;
}
}
}
return ele;
}
return id;
};
dojo.setContext=function(_dc,_dd){
dj_currentContext=_dc;
dj_currentDocument=_dd;
};
dojo._fireCallback=function(_de,_df,_e0){
if((_df)&&((typeof _de=="string")||(_de instanceof String))){
_de=_df[_de];
}
return (_df?_de.apply(_df,_e0||[]):_de());
};
dojo.withGlobal=function(_e1,_e2,_e3,_e4){
var _e5;
var _e6=dj_currentContext;
var _e7=dj_currentDocument;
try{
dojo.setContext(_e1,_e1.document);
_e5=dojo._fireCallback(_e2,_e3,_e4);
}
finally{
dojo.setContext(_e6,_e7);
}
return _e5;
};
dojo.withDoc=function(_e8,_e9,_ea,_eb){
var _ec;
var _ed=dj_currentDocument;
try{
dj_currentDocument=_e8;
_ec=dojo._fireCallback(_e9,_ea,_eb);
}
finally{
dj_currentDocument=_ed;
}
return _ec;
};
}
(function(){
if(typeof dj_usingBootstrap!="undefined"){
return;
}
var _ee=false;
var _ef=false;
var _f0=false;
if((typeof this["load"]=="function")&&((typeof this["Packages"]=="function")||(typeof this["Packages"]=="object"))){
_ee=true;
}else{
if(typeof this["load"]=="function"){
_ef=true;
}else{
if(window.widget){
_f0=true;
}
}
}
var _f1=[];
if((this["djConfig"])&&((djConfig["isDebug"])||(djConfig["debugAtAllCosts"]))){
_f1.push("debug.js");
}
if((this["djConfig"])&&(djConfig["debugAtAllCosts"])&&(!_ee)&&(!_f0)){
_f1.push("browser_debug.js");
}
var _f2=djConfig["baseScriptUri"];
if((this["djConfig"])&&(djConfig["baseLoaderUri"])){
_f2=djConfig["baseLoaderUri"];
}
for(var x=0;x<_f1.length;x++){
var _f4=_f2+"src/"+_f1[x];
if(_ee||_ef){
load(_f4);
}else{
try{
document.write("<scr"+"ipt type='text/javascript' src='"+_f4+"'></scr"+"ipt>");
}
catch(e){
var _f5=document.createElement("script");
_f5.src=_f4;
document.getElementsByTagName("head")[0].appendChild(_f5);
}
}
}
})();
dojo.provide("dojo.string.common");
dojo.string.trim=function(str,wh){
if(!str.replace){
return str;
}
if(!str.length){
return str;
}
var re=(wh>0)?(/^\s+/):(wh<0)?(/\s+$/):(/^\s+|\s+$/g);
return str.replace(re,"");
};
dojo.string.trimStart=function(str){
return dojo.string.trim(str,1);
};
dojo.string.trimEnd=function(str){
return dojo.string.trim(str,-1);
};
dojo.string.repeat=function(str,_fc,_fd){
var out="";
for(var i=0;i<_fc;i++){
out+=str;
if(_fd&&i<_fc-1){
out+=_fd;
}
}
return out;
};
dojo.string.pad=function(str,len,c,dir){
var out=String(str);
if(!c){
c="0";
}
if(!dir){
dir=1;
}
while(out.length<len){
if(dir>0){
out=c+out;
}else{
out+=c;
}
}
return out;
};
dojo.string.padLeft=function(str,len,c){
return dojo.string.pad(str,len,c,1);
};
dojo.string.padRight=function(str,len,c){
return dojo.string.pad(str,len,c,-1);
};
dojo.provide("dojo.string");
dojo.provide("dojo.lang.common");
dojo.lang.inherits=function(_10b,_10c){
if(!dojo.lang.isFunction(_10c)){
dojo.raise("dojo.inherits: superclass argument ["+_10c+"] must be a function (subclass: ["+_10b+"']");
}
_10b.prototype=new _10c();
_10b.prototype.constructor=_10b;
_10b.superclass=_10c.prototype;
_10b["super"]=_10c.prototype;
};
dojo.lang._mixin=function(obj,_10e){
var tobj={};
for(var x in _10e){
if((typeof tobj[x]=="undefined")||(tobj[x]!=_10e[x])){
obj[x]=_10e[x];
}
}
if(dojo.render.html.ie&&(typeof (_10e["toString"])=="function")&&(_10e["toString"]!=obj["toString"])&&(_10e["toString"]!=tobj["toString"])){
obj.toString=_10e.toString;
}
return obj;
};
dojo.lang.mixin=function(obj,_112){
for(var i=1,l=arguments.length;i<l;i++){
dojo.lang._mixin(obj,arguments[i]);
}
return obj;
};
dojo.lang.extend=function(_115,_116){
for(var i=1,l=arguments.length;i<l;i++){
dojo.lang._mixin(_115.prototype,arguments[i]);
}
return _115;
};
dojo.inherits=dojo.lang.inherits;
dojo.mixin=dojo.lang.mixin;
dojo.extend=dojo.lang.extend;
dojo.lang.find=function(_119,_11a,_11b,_11c){
if(!dojo.lang.isArrayLike(_119)&&dojo.lang.isArrayLike(_11a)){
dojo.deprecated("dojo.lang.find(value, array)","use dojo.lang.find(array, value) instead","0.5");
var temp=_119;
_119=_11a;
_11a=temp;
}
var _11e=dojo.lang.isString(_119);
if(_11e){
_119=_119.split("");
}
if(_11c){
var step=-1;
var i=_119.length-1;
var end=-1;
}else{
var step=1;
var i=0;
var end=_119.length;
}
if(_11b){
while(i!=end){
if(_119[i]===_11a){
return i;
}
i+=step;
}
}else{
while(i!=end){
if(_119[i]==_11a){
return i;
}
i+=step;
}
}
return -1;
};
dojo.lang.indexOf=dojo.lang.find;
dojo.lang.findLast=function(_122,_123,_124){
return dojo.lang.find(_122,_123,_124,true);
};
dojo.lang.lastIndexOf=dojo.lang.findLast;
dojo.lang.inArray=function(_125,_126){
return dojo.lang.find(_125,_126)>-1;
};
dojo.lang.isObject=function(it){
if(typeof it=="undefined"){
return false;
}
return (typeof it=="object"||it===null||dojo.lang.isArray(it)||dojo.lang.isFunction(it));
};
dojo.lang.isArray=function(it){
return (it&&it instanceof Array||typeof it=="array");
};
dojo.lang.isArrayLike=function(it){
if((!it)||(dojo.lang.isUndefined(it))){
return false;
}
if(dojo.lang.isString(it)){
return false;
}
if(dojo.lang.isFunction(it)){
return false;
}
if(dojo.lang.isArray(it)){
return true;
}
if((it.tagName)&&(it.tagName.toLowerCase()=="form")){
return false;
}
if(dojo.lang.isNumber(it.length)&&isFinite(it.length)){
return true;
}
return false;
};
dojo.lang.isFunction=function(it){
return (it instanceof Function||typeof it=="function");
};
(function(){
if((dojo.render.html.capable)&&(dojo.render.html["safari"])){
dojo.lang.isFunction=function(it){
if((typeof (it)=="function")&&(it=="[object NodeList]")){
return false;
}
return (it instanceof Function||typeof it=="function");
};
}
})();
dojo.lang.isString=function(it){
return (typeof it=="string"||it instanceof String);
};
dojo.lang.isAlien=function(it){
if(!it){
return false;
}
return !dojo.lang.isFunction(it)&&/\{\s*\[native code\]\s*\}/.test(String(it));
};
dojo.lang.isBoolean=function(it){
return (it instanceof Boolean||typeof it=="boolean");
};
dojo.lang.isNumber=function(it){
return (it instanceof Number||typeof it=="number");
};
dojo.lang.isUndefined=function(it){
return ((typeof (it)=="undefined")&&(it==undefined));
};
dojo.provide("dojo.lang.extras");
dojo.lang.setTimeout=function(func,_132){
var _133=window,_134=2;
if(!dojo.lang.isFunction(func)){
_133=func;
func=_132;
_132=arguments[2];
_134++;
}
if(dojo.lang.isString(func)){
func=_133[func];
}
var args=[];
for(var i=_134;i<arguments.length;i++){
args.push(arguments[i]);
}
return dojo.global().setTimeout(function(){
func.apply(_133,args);
},_132);
};
dojo.lang.clearTimeout=function(_137){
dojo.global().clearTimeout(_137);
};
dojo.lang.getNameInObj=function(ns,item){
if(!ns){
ns=dj_global;
}
for(var x in ns){
if(ns[x]===item){
return new String(x);
}
}
return null;
};
dojo.lang.shallowCopy=function(obj,deep){
var i,ret;
if(obj===null){
return null;
}
if(dojo.lang.isObject(obj)){
ret=new obj.constructor();
for(i in obj){
if(dojo.lang.isUndefined(ret[i])){
ret[i]=deep?dojo.lang.shallowCopy(obj[i],deep):obj[i];
}
}
}else{
if(dojo.lang.isArray(obj)){
ret=[];
for(i=0;i<obj.length;i++){
ret[i]=deep?dojo.lang.shallowCopy(obj[i],deep):obj[i];
}
}else{
ret=obj;
}
}
return ret;
};
dojo.lang.firstValued=function(){
for(var i=0;i<arguments.length;i++){
if(typeof arguments[i]!="undefined"){
return arguments[i];
}
}
return undefined;
};
dojo.lang.getObjPathValue=function(_140,_141,_142){
with(dojo.parseObjPath(_140,_141,_142)){
return dojo.evalProp(prop,obj,_142);
}
};
dojo.lang.setObjPathValue=function(_143,_144,_145,_146){
dojo.deprecated("dojo.lang.setObjPathValue","use dojo.parseObjPath and the '=' operator","0.6");
if(arguments.length<4){
_146=true;
}
with(dojo.parseObjPath(_143,_145,_146)){
if(obj&&(_146||(prop in obj))){
obj[prop]=_144;
}
}
};
dojo.provide("dojo.io.common");
dojo.io.transports=[];
dojo.io.hdlrFuncNames=["load","error","timeout"];
dojo.io.Request=function(url,_148,_149,_14a){
if((arguments.length==1)&&(arguments[0].constructor==Object)){
this.fromKwArgs(arguments[0]);
}else{
this.url=url;
if(_148){
this.mimetype=_148;
}
if(_149){
this.transport=_149;
}
if(arguments.length>=4){
this.changeUrl=_14a;
}
}
};
dojo.lang.extend(dojo.io.Request,{url:"",mimetype:"text/plain",method:"GET",content:undefined,transport:undefined,changeUrl:undefined,formNode:undefined,sync:false,bindSuccess:false,useCache:false,preventCache:false,load:function(type,data,_14d,_14e){
},error:function(type,_150,_151,_152){
},timeout:function(type,_154,_155,_156){
},handle:function(type,data,_159,_15a){
},timeoutSeconds:0,abort:function(){
},fromKwArgs:function(_15b){
if(_15b["url"]){
_15b.url=_15b.url.toString();
}
if(_15b["formNode"]){
_15b.formNode=dojo.byId(_15b.formNode);
}
if(!_15b["method"]&&_15b["formNode"]&&_15b["formNode"].method){
_15b.method=_15b["formNode"].method;
}
if(!_15b["handle"]&&_15b["handler"]){
_15b.handle=_15b.handler;
}
if(!_15b["load"]&&_15b["loaded"]){
_15b.load=_15b.loaded;
}
if(!_15b["changeUrl"]&&_15b["changeURL"]){
_15b.changeUrl=_15b.changeURL;
}
_15b.encoding=dojo.lang.firstValued(_15b["encoding"],djConfig["bindEncoding"],"");
_15b.sendTransport=dojo.lang.firstValued(_15b["sendTransport"],djConfig["ioSendTransport"],false);
var _15c=dojo.lang.isFunction;
for(var x=0;x<dojo.io.hdlrFuncNames.length;x++){
var fn=dojo.io.hdlrFuncNames[x];
if(_15b[fn]&&_15c(_15b[fn])){
continue;
}
if(_15b["handle"]&&_15c(_15b["handle"])){
_15b[fn]=_15b.handle;
}
}
dojo.lang.mixin(this,_15b);
}});
dojo.io.Error=function(msg,type,num){
this.message=msg;
this.type=type||"unknown";
this.number=num||0;
};
dojo.io.transports.addTransport=function(name){
this.push(name);
this[name]=dojo.io[name];
};
dojo.io.bind=function(_163){
if(!(_163 instanceof dojo.io.Request)){
try{
_163=new dojo.io.Request(_163);
}
catch(e){
dojo.debug(e);
}
}
var _164="";
if(_163["transport"]){
_164=_163["transport"];
if(!this[_164]){
dojo.io.sendBindError(_163,"No dojo.io.bind() transport with name '"+_163["transport"]+"'.");
return _163;
}
if(!this[_164].canHandle(_163)){
dojo.io.sendBindError(_163,"dojo.io.bind() transport with name '"+_163["transport"]+"' cannot handle this type of request.");
return _163;
}
}else{
for(var x=0;x<dojo.io.transports.length;x++){
var tmp=dojo.io.transports[x];
if((this[tmp])&&(this[tmp].canHandle(_163))){
_164=tmp;
break;
}
}
if(_164==""){
dojo.io.sendBindError(_163,"None of the loaded transports for dojo.io.bind()"+" can handle the request.");
return _163;
}
}
this[_164].bind(_163);
_163.bindSuccess=true;
return _163;
};
dojo.io.sendBindError=function(_167,_168){
if((typeof _167.error=="function"||typeof _167.handle=="function")&&(typeof setTimeout=="function"||typeof setTimeout=="object")){
var _169=new dojo.io.Error(_168);
setTimeout(function(){
_167[(typeof _167.error=="function")?"error":"handle"]("error",_169,null,_167);
},50);
}else{
dojo.raise(_168);
}
};
dojo.io.queueBind=function(_16a){
if(!(_16a instanceof dojo.io.Request)){
try{
_16a=new dojo.io.Request(_16a);
}
catch(e){
dojo.debug(e);
}
}
var _16b=_16a.load;
_16a.load=function(){
dojo.io._queueBindInFlight=false;
var ret=_16b.apply(this,arguments);
dojo.io._dispatchNextQueueBind();
return ret;
};
var _16d=_16a.error;
_16a.error=function(){
dojo.io._queueBindInFlight=false;
var ret=_16d.apply(this,arguments);
dojo.io._dispatchNextQueueBind();
return ret;
};
dojo.io._bindQueue.push(_16a);
dojo.io._dispatchNextQueueBind();
return _16a;
};
dojo.io._dispatchNextQueueBind=function(){
if(!dojo.io._queueBindInFlight){
dojo.io._queueBindInFlight=true;
if(dojo.io._bindQueue.length>0){
dojo.io.bind(dojo.io._bindQueue.shift());
}else{
dojo.io._queueBindInFlight=false;
}
}
};
dojo.io._bindQueue=[];
dojo.io._queueBindInFlight=false;
dojo.io.argsFromMap=function(map,_170,last){
var enc=/utf/i.test(_170||"")?encodeURIComponent:dojo.string.encodeAscii;
var _173=[];
var _174=new Object();
for(var name in map){
var _176=function(elt){
var val=enc(name)+"="+enc(elt);
_173[(last==name)?"push":"unshift"](val);
};
if(!_174[name]){
var _179=map[name];
if(dojo.lang.isArray(_179)){
dojo.lang.forEach(_179,_176);
}else{
_176(_179);
}
}
}
return _173.join("&");
};
dojo.io.setIFrameSrc=function(_17a,src,_17c){
try{
var r=dojo.render.html;
if(!_17c){
if(r.safari){
_17a.location=src;
}else{
frames[_17a.name].location=src;
}
}else{
var idoc;
if(r.ie){
idoc=_17a.contentWindow.document;
}else{
if(r.safari){
idoc=_17a.document;
}else{
idoc=_17a.contentWindow;
}
}
if(!idoc){
_17a.location=src;
return;
}else{
idoc.location.replace(src);
}
}
}
catch(e){
dojo.debug(e);
dojo.debug("setIFrameSrc: "+e);
}
};
dojo.provide("dojo.lang.array");
dojo.lang.mixin(dojo.lang,{has:function(obj,name){
try{
return typeof obj[name]!="undefined";
}
catch(e){
return false;
}
},isEmpty:function(obj){
if(dojo.lang.isObject(obj)){
var tmp={};
var _183=0;
for(var x in obj){
if(obj[x]&&(!tmp[x])){
_183++;
break;
}
}
return _183==0;
}else{
if(dojo.lang.isArrayLike(obj)||dojo.lang.isString(obj)){
return obj.length==0;
}
}
},map:function(arr,obj,_187){
var _188=dojo.lang.isString(arr);
if(_188){
arr=arr.split("");
}
if(dojo.lang.isFunction(obj)&&(!_187)){
_187=obj;
obj=dj_global;
}else{
if(dojo.lang.isFunction(obj)&&_187){
var _189=obj;
obj=_187;
_187=_189;
}
}
if(Array.map){
var _18a=Array.map(arr,_187,obj);
}else{
var _18a=[];
for(var i=0;i<arr.length;++i){
_18a.push(_187.call(obj,arr[i]));
}
}
if(_188){
return _18a.join("");
}else{
return _18a;
}
},reduce:function(arr,_18d,obj,_18f){
var _190=_18d;
if(arguments.length==1){
dojo.debug("dojo.lang.reduce called with too few arguments!");
return false;
}else{
if(arguments.length==2){
_18f=_18d;
_190=arr.shift();
}else{
if(arguments.lenght==3){
if(dojo.lang.isFunction(obj)){
_18f=obj;
obj=null;
}
}else{
if(dojo.lang.isFunction(obj)){
var tmp=_18f;
_18f=obj;
obj=tmp;
}
}
}
}
var ob=obj?obj:dj_global;
dojo.lang.map(arr,function(val){
_190=_18f.call(ob,_190,val);
});
return _190;
},forEach:function(_194,_195,_196){
if(dojo.lang.isString(_194)){
_194=_194.split("");
}
if(Array.forEach){
Array.forEach(_194,_195,_196);
}else{
if(!_196){
_196=dj_global;
}
for(var i=0,l=_194.length;i<l;i++){
_195.call(_196,_194[i],i,_194);
}
}
},_everyOrSome:function(_199,arr,_19b,_19c){
if(dojo.lang.isString(arr)){
arr=arr.split("");
}
if(Array.every){
return Array[_199?"every":"some"](arr,_19b,_19c);
}else{
if(!_19c){
_19c=dj_global;
}
for(var i=0,l=arr.length;i<l;i++){
var _19f=_19b.call(_19c,arr[i],i,arr);
if(_199&&!_19f){
return false;
}else{
if((!_199)&&(_19f)){
return true;
}
}
}
return Boolean(_199);
}
},every:function(arr,_1a1,_1a2){
return this._everyOrSome(true,arr,_1a1,_1a2);
},some:function(arr,_1a4,_1a5){
return this._everyOrSome(false,arr,_1a4,_1a5);
},filter:function(arr,_1a7,_1a8){
var _1a9=dojo.lang.isString(arr);
if(_1a9){
arr=arr.split("");
}
var _1aa;
if(Array.filter){
_1aa=Array.filter(arr,_1a7,_1a8);
}else{
if(!_1a8){
if(arguments.length>=3){
dojo.raise("thisObject doesn't exist!");
}
_1a8=dj_global;
}
_1aa=[];
for(var i=0;i<arr.length;i++){
if(_1a7.call(_1a8,arr[i],i,arr)){
_1aa.push(arr[i]);
}
}
}
if(_1a9){
return _1aa.join("");
}else{
return _1aa;
}
},unnest:function(){
var out=[];
for(var i=0;i<arguments.length;i++){
if(dojo.lang.isArrayLike(arguments[i])){
var add=dojo.lang.unnest.apply(this,arguments[i]);
out=out.concat(add);
}else{
out.push(arguments[i]);
}
}
return out;
},toArray:function(_1af,_1b0){
var _1b1=[];
for(var i=_1b0||0;i<_1af.length;i++){
_1b1.push(_1af[i]);
}
return _1b1;
}});
dojo.provide("dojo.lang.func");
dojo.lang.hitch=function(_1b3,_1b4){
var fcn=(dojo.lang.isString(_1b4)?_1b3[_1b4]:_1b4)||function(){
};
return function(){
return fcn.apply(_1b3,arguments);
};
};
dojo.lang.anonCtr=0;
dojo.lang.anon={};
dojo.lang.nameAnonFunc=function(_1b6,_1b7,_1b8){
var nso=(_1b7||dojo.lang.anon);
if((_1b8)||((dj_global["djConfig"])&&(djConfig["slowAnonFuncLookups"]==true))){
for(var x in nso){
try{
if(nso[x]===_1b6){
return x;
}
}
catch(e){
}
}
}
var ret="__"+dojo.lang.anonCtr++;
while(typeof nso[ret]!="undefined"){
ret="__"+dojo.lang.anonCtr++;
}
nso[ret]=_1b6;
return ret;
};
dojo.lang.forward=function(_1bc){
return function(){
return this[_1bc].apply(this,arguments);
};
};
dojo.lang.curry=function(_1bd,func){
var _1bf=[];
_1bd=_1bd||dj_global;
if(dojo.lang.isString(func)){
func=_1bd[func];
}
for(var x=2;x<arguments.length;x++){
_1bf.push(arguments[x]);
}
var _1c1=(func["__preJoinArity"]||func.length)-_1bf.length;
function gather(_1c2,_1c3,_1c4){
var _1c5=_1c4;
var _1c6=_1c3.slice(0);
for(var x=0;x<_1c2.length;x++){
_1c6.push(_1c2[x]);
}
_1c4=_1c4-_1c2.length;
if(_1c4<=0){
var res=func.apply(_1bd,_1c6);
_1c4=_1c5;
return res;
}else{
return function(){
return gather(arguments,_1c6,_1c4);
};
}
}
return gather([],_1bf,_1c1);
};
dojo.lang.curryArguments=function(_1c9,func,args,_1cc){
var _1cd=[];
var x=_1cc||0;
for(x=_1cc;x<args.length;x++){
_1cd.push(args[x]);
}
return dojo.lang.curry.apply(dojo.lang,[_1c9,func].concat(_1cd));
};
dojo.lang.tryThese=function(){
for(var x=0;x<arguments.length;x++){
try{
if(typeof arguments[x]=="function"){
var ret=(arguments[x]());
if(ret){
return ret;
}
}
}
catch(e){
dojo.debug(e);
}
}
};
dojo.lang.delayThese=function(farr,cb,_1d3,_1d4){
if(!farr.length){
if(typeof _1d4=="function"){
_1d4();
}
return;
}
if((typeof _1d3=="undefined")&&(typeof cb=="number")){
_1d3=cb;
cb=function(){
};
}else{
if(!cb){
cb=function(){
};
if(!_1d3){
_1d3=0;
}
}
}
setTimeout(function(){
(farr.shift())();
cb();
dojo.lang.delayThese(farr,cb,_1d3,_1d4);
},_1d3);
};
dojo.provide("dojo.string.extras");
dojo.string.substituteParams=function(_1d5,hash){
var map=(typeof hash=="object")?hash:dojo.lang.toArray(arguments,1);
return _1d5.replace(/\%\{(\w+)\}/g,function(_1d8,key){
if(typeof (map[key])!="undefined"&&map[key]!=null){
return map[key];
}
dojo.raise("Substitution not found: "+key);
});
};
dojo.string.capitalize=function(str){
if(!dojo.lang.isString(str)){
return "";
}
if(arguments.length==0){
str=this;
}
var _1db=str.split(" ");
for(var i=0;i<_1db.length;i++){
_1db[i]=_1db[i].charAt(0).toUpperCase()+_1db[i].substring(1);
}
return _1db.join(" ");
};
dojo.string.isBlank=function(str){
if(!dojo.lang.isString(str)){
return true;
}
return (dojo.string.trim(str).length==0);
};
dojo.string.encodeAscii=function(str){
if(!dojo.lang.isString(str)){
return str;
}
var ret="";
var _1e0=escape(str);
var _1e1,re=/%u([0-9A-F]{4})/i;
while((_1e1=_1e0.match(re))){
var num=Number("0x"+_1e1[1]);
var _1e4=escape("&#"+num+";");
ret+=_1e0.substring(0,_1e1.index)+_1e4;
_1e0=_1e0.substring(_1e1.index+_1e1[0].length);
}
ret+=_1e0.replace(/\+/g,"%2B");
return ret;
};
dojo.string.escape=function(type,str){
var args=dojo.lang.toArray(arguments,1);
switch(type.toLowerCase()){
case "xml":
case "html":
case "xhtml":
return dojo.string.escapeXml.apply(this,args);
case "sql":
return dojo.string.escapeSql.apply(this,args);
case "regexp":
case "regex":
return dojo.string.escapeRegExp.apply(this,args);
case "javascript":
case "jscript":
case "js":
return dojo.string.escapeJavaScript.apply(this,args);
case "ascii":
return dojo.string.encodeAscii.apply(this,args);
default:
return str;
}
};
dojo.string.escapeXml=function(str,_1e9){
str=str.replace(/&/gm,"&amp;").replace(/</gm,"&lt;").replace(/>/gm,"&gt;").replace(/"/gm,"&quot;");
if(!_1e9){
str=str.replace(/'/gm,"&#39;");
}
return str;
};
dojo.string.escapeSql=function(str){
return str.replace(/'/gm,"''");
};
dojo.string.escapeRegExp=function(str){
return str.replace(/\\/gm,"\\\\").replace(/([\f\b\n\t\r[\^$|?*+(){}])/gm,"\\$1");
};
dojo.string.escapeJavaScript=function(str){
return str.replace(/(["'\f\b\n\t\r])/gm,"\\$1");
};
dojo.string.escapeString=function(str){
return ("\""+str.replace(/(["\\])/g,"\\$1")+"\"").replace(/[\f]/g,"\\f").replace(/[\b]/g,"\\b").replace(/[\n]/g,"\\n").replace(/[\t]/g,"\\t").replace(/[\r]/g,"\\r");
};
dojo.string.summary=function(str,len){
if(!len||str.length<=len){
return str;
}
return str.substring(0,len).replace(/\.+$/,"")+"...";
};
dojo.string.endsWith=function(str,end,_1f2){
if(_1f2){
str=str.toLowerCase();
end=end.toLowerCase();
}
if((str.length-end.length)<0){
return false;
}
return str.lastIndexOf(end)==str.length-end.length;
};
dojo.string.endsWithAny=function(str){
for(var i=1;i<arguments.length;i++){
if(dojo.string.endsWith(str,arguments[i])){
return true;
}
}
return false;
};
dojo.string.startsWith=function(str,_1f6,_1f7){
if(_1f7){
str=str.toLowerCase();
_1f6=_1f6.toLowerCase();
}
return str.indexOf(_1f6)==0;
};
dojo.string.startsWithAny=function(str){
for(var i=1;i<arguments.length;i++){
if(dojo.string.startsWith(str,arguments[i])){
return true;
}
}
return false;
};
dojo.string.has=function(str){
for(var i=1;i<arguments.length;i++){
if(str.indexOf(arguments[i])>-1){
return true;
}
}
return false;
};
dojo.string.normalizeNewlines=function(text,_1fd){
if(_1fd=="\n"){
text=text.replace(/\r\n/g,"\n");
text=text.replace(/\r/g,"\n");
}else{
if(_1fd=="\r"){
text=text.replace(/\r\n/g,"\r");
text=text.replace(/\n/g,"\r");
}else{
text=text.replace(/([^\r])\n/g,"$1\r\n").replace(/\r([^\n])/g,"\r\n$1");
}
}
return text;
};
dojo.string.splitEscaped=function(str,_1ff){
var _200=[];
for(var i=0,_202=0;i<str.length;i++){
if(str.charAt(i)=="\\"){
i++;
continue;
}
if(str.charAt(i)==_1ff){
_200.push(str.substring(_202,i));
_202=i+1;
}
}
_200.push(str.substr(_202));
return _200;
};
dojo.provide("dojo.dom");
dojo.dom.ELEMENT_NODE=1;
dojo.dom.ATTRIBUTE_NODE=2;
dojo.dom.TEXT_NODE=3;
dojo.dom.CDATA_SECTION_NODE=4;
dojo.dom.ENTITY_REFERENCE_NODE=5;
dojo.dom.ENTITY_NODE=6;
dojo.dom.PROCESSING_INSTRUCTION_NODE=7;
dojo.dom.COMMENT_NODE=8;
dojo.dom.DOCUMENT_NODE=9;
dojo.dom.DOCUMENT_TYPE_NODE=10;
dojo.dom.DOCUMENT_FRAGMENT_NODE=11;
dojo.dom.NOTATION_NODE=12;
dojo.dom.dojoml="http://www.dojotoolkit.org/2004/dojoml";
dojo.dom.xmlns={svg:"http://www.w3.org/2000/svg",smil:"http://www.w3.org/2001/SMIL20/",mml:"http://www.w3.org/1998/Math/MathML",cml:"http://www.xml-cml.org",xlink:"http://www.w3.org/1999/xlink",xhtml:"http://www.w3.org/1999/xhtml",xul:"http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul",xbl:"http://www.mozilla.org/xbl",fo:"http://www.w3.org/1999/XSL/Format",xsl:"http://www.w3.org/1999/XSL/Transform",xslt:"http://www.w3.org/1999/XSL/Transform",xi:"http://www.w3.org/2001/XInclude",xforms:"http://www.w3.org/2002/01/xforms",saxon:"http://icl.com/saxon",xalan:"http://xml.apache.org/xslt",xsd:"http://www.w3.org/2001/XMLSchema",dt:"http://www.w3.org/2001/XMLSchema-datatypes",xsi:"http://www.w3.org/2001/XMLSchema-instance",rdf:"http://www.w3.org/1999/02/22-rdf-syntax-ns#",rdfs:"http://www.w3.org/2000/01/rdf-schema#",dc:"http://purl.org/dc/elements/1.1/",dcq:"http://purl.org/dc/qualifiers/1.0","soap-env":"http://schemas.xmlsoap.org/soap/envelope/",wsdl:"http://schemas.xmlsoap.org/wsdl/",AdobeExtensions:"http://ns.adobe.com/AdobeSVGViewerExtensions/3.0/"};
dojo.dom.isNode=function(wh){
if(typeof Element=="function"){
try{
return wh instanceof Element;
}
catch(e){
}
}else{
return wh&&!isNaN(wh.nodeType);
}
};
dojo.dom.getUniqueId=function(){
var _204=dojo.doc();
do{
var id="dj_unique_"+(++arguments.callee._idIncrement);
}while(_204.getElementById(id));
return id;
};
dojo.dom.getUniqueId._idIncrement=0;
dojo.dom.firstElement=dojo.dom.getFirstChildElement=function(_206,_207){
var node=_206.firstChild;
while(node&&node.nodeType!=dojo.dom.ELEMENT_NODE){
node=node.nextSibling;
}
if(_207&&node&&node.tagName&&node.tagName.toLowerCase()!=_207.toLowerCase()){
node=dojo.dom.nextElement(node,_207);
}
return node;
};
dojo.dom.lastElement=dojo.dom.getLastChildElement=function(_209,_20a){
var node=_209.lastChild;
while(node&&node.nodeType!=dojo.dom.ELEMENT_NODE){
node=node.previousSibling;
}
if(_20a&&node&&node.tagName&&node.tagName.toLowerCase()!=_20a.toLowerCase()){
node=dojo.dom.prevElement(node,_20a);
}
return node;
};
dojo.dom.nextElement=dojo.dom.getNextSiblingElement=function(node,_20d){
if(!node){
return null;
}
do{
node=node.nextSibling;
}while(node&&node.nodeType!=dojo.dom.ELEMENT_NODE);
if(node&&_20d&&_20d.toLowerCase()!=node.tagName.toLowerCase()){
return dojo.dom.nextElement(node,_20d);
}
return node;
};
dojo.dom.prevElement=dojo.dom.getPreviousSiblingElement=function(node,_20f){
if(!node){
return null;
}
if(_20f){
_20f=_20f.toLowerCase();
}
do{
node=node.previousSibling;
}while(node&&node.nodeType!=dojo.dom.ELEMENT_NODE);
if(node&&_20f&&_20f.toLowerCase()!=node.tagName.toLowerCase()){
return dojo.dom.prevElement(node,_20f);
}
return node;
};
dojo.dom.moveChildren=function(_210,_211,trim){
var _213=0;
if(trim){
while(_210.hasChildNodes()&&_210.firstChild.nodeType==dojo.dom.TEXT_NODE){
_210.removeChild(_210.firstChild);
}
while(_210.hasChildNodes()&&_210.lastChild.nodeType==dojo.dom.TEXT_NODE){
_210.removeChild(_210.lastChild);
}
}
while(_210.hasChildNodes()){
_211.appendChild(_210.firstChild);
_213++;
}
return _213;
};
dojo.dom.copyChildren=function(_214,_215,trim){
var _217=_214.cloneNode(true);
return this.moveChildren(_217,_215,trim);
};
dojo.dom.replaceChildren=function(node,_219){
var _21a=[];
if(dojo.render.html.ie){
for(var i=0;i<node.childNodes.length;i++){
_21a.push(node.childNodes[i]);
}
}
dojo.dom.removeChildren(node);
node.appendChild(_219);
for(var i=0;i<_21a.length;i++){
dojo.dom.destroyNode(_21a[i]);
}
};
dojo.dom.removeChildren=function(node){
var _21d=node.childNodes.length;
while(node.hasChildNodes()){
dojo.dom.removeNode(node.firstChild);
}
return _21d;
};
dojo.dom.replaceNode=function(node,_21f){
return node.parentNode.replaceChild(_21f,node);
};
dojo.dom.destroyNode=function(node){
if(node.parentNode){
node=dojo.dom.removeNode(node);
}
if(node.nodeType!=3){
if(dojo.evalObjPath("dojo.event.browser.clean",false)){
dojo.event.browser.clean(node);
}
if(dojo.render.html.ie){
node.outerHTML="";
}
}
};
dojo.dom.removeNode=function(node){
if(node&&node.parentNode){
return node.parentNode.removeChild(node);
}
};
dojo.dom.getAncestors=function(node,_223,_224){
var _225=[];
var _226=(_223&&(_223 instanceof Function||typeof _223=="function"));
while(node){
if(!_226||_223(node)){
_225.push(node);
}
if(_224&&_225.length>0){
return _225[0];
}
node=node.parentNode;
}
if(_224){
return null;
}
return _225;
};
dojo.dom.getAncestorsByTag=function(node,tag,_229){
tag=tag.toLowerCase();
return dojo.dom.getAncestors(node,function(el){
return ((el.tagName)&&(el.tagName.toLowerCase()==tag));
},_229);
};
dojo.dom.getFirstAncestorByTag=function(node,tag){
return dojo.dom.getAncestorsByTag(node,tag,true);
};
dojo.dom.isDescendantOf=function(node,_22e,_22f){
if(_22f&&node){
node=node.parentNode;
}
while(node){
if(node==_22e){
return true;
}
node=node.parentNode;
}
return false;
};
dojo.dom.innerXML=function(node){
if(node.innerXML){
return node.innerXML;
}else{
if(node.xml){
return node.xml;
}else{
if(typeof XMLSerializer!="undefined"){
return (new XMLSerializer()).serializeToString(node);
}
}
}
};
dojo.dom.createDocument=function(){
var doc=null;
var _232=dojo.doc();
if(!dj_undef("ActiveXObject")){
var _233=["MSXML2","Microsoft","MSXML","MSXML3"];
for(var i=0;i<_233.length;i++){
try{
doc=new ActiveXObject(_233[i]+".XMLDOM");
}
catch(e){
}
if(doc){
break;
}
}
}else{
if((_232.implementation)&&(_232.implementation.createDocument)){
doc=_232.implementation.createDocument("","",null);
}
}
return doc;
};
dojo.dom.createDocumentFromText=function(str,_236){
if(!_236){
_236="text/xml";
}
if(!dj_undef("DOMParser")){
var _237=new DOMParser();
return _237.parseFromString(str,_236);
}else{
if(!dj_undef("ActiveXObject")){
var _238=dojo.dom.createDocument();
if(_238){
_238.async=false;
_238.loadXML(str);
return _238;
}else{
dojo.debug("toXml didn't work?");
}
}else{
var _239=dojo.doc();
if(_239.createElement){
var tmp=_239.createElement("xml");
tmp.innerHTML=str;
if(_239.implementation&&_239.implementation.createDocument){
var _23b=_239.implementation.createDocument("foo","",null);
for(var i=0;i<tmp.childNodes.length;i++){
_23b.importNode(tmp.childNodes.item(i),true);
}
return _23b;
}
return ((tmp.document)&&(tmp.document.firstChild?tmp.document.firstChild:tmp));
}
}
}
return null;
};
dojo.dom.prependChild=function(node,_23e){
if(_23e.firstChild){
_23e.insertBefore(node,_23e.firstChild);
}else{
_23e.appendChild(node);
}
return true;
};
dojo.dom.insertBefore=function(node,ref,_241){
if((_241!=true)&&(node===ref||node.nextSibling===ref)){
return false;
}
var _242=ref.parentNode;
_242.insertBefore(node,ref);
return true;
};
dojo.dom.insertAfter=function(node,ref,_245){
var pn=ref.parentNode;
if(ref==pn.lastChild){
if((_245!=true)&&(node===ref)){
return false;
}
pn.appendChild(node);
}else{
return this.insertBefore(node,ref.nextSibling,_245);
}
return true;
};
dojo.dom.insertAtPosition=function(node,ref,_249){
if((!node)||(!ref)||(!_249)){
return false;
}
switch(_249.toLowerCase()){
case "before":
return dojo.dom.insertBefore(node,ref);
case "after":
return dojo.dom.insertAfter(node,ref);
case "first":
if(ref.firstChild){
return dojo.dom.insertBefore(node,ref.firstChild);
}else{
ref.appendChild(node);
return true;
}
break;
default:
ref.appendChild(node);
return true;
}
};
dojo.dom.insertAtIndex=function(node,_24b,_24c){
var _24d=_24b.childNodes;
if(!_24d.length||_24d.length==_24c){
_24b.appendChild(node);
return true;
}
if(_24c==0){
return dojo.dom.prependChild(node,_24b);
}
return dojo.dom.insertAfter(node,_24d[_24c-1]);
};
dojo.dom.textContent=function(node,text){
if(arguments.length>1){
var _250=dojo.doc();
dojo.dom.replaceChildren(node,_250.createTextNode(text));
return text;
}else{
if(node.textContent!=undefined){
return node.textContent;
}
var _251="";
if(node==null){
return _251;
}
for(var i=0;i<node.childNodes.length;i++){
switch(node.childNodes[i].nodeType){
case 1:
case 5:
_251+=dojo.dom.textContent(node.childNodes[i]);
break;
case 3:
case 2:
case 4:
_251+=node.childNodes[i].nodeValue;
break;
default:
break;
}
}
return _251;
}
};
dojo.dom.hasParent=function(node){
return Boolean(node&&node.parentNode&&dojo.dom.isNode(node.parentNode));
};
dojo.dom.isTag=function(node){
if(node&&node.tagName){
for(var i=1;i<arguments.length;i++){
if(node.tagName==String(arguments[i])){
return String(arguments[i]);
}
}
}
return "";
};
dojo.dom.setAttributeNS=function(elem,_257,_258,_259){
if(elem==null||((elem==undefined)&&(typeof elem=="undefined"))){
dojo.raise("No element given to dojo.dom.setAttributeNS");
}
if(!((elem.setAttributeNS==undefined)&&(typeof elem.setAttributeNS=="undefined"))){
elem.setAttributeNS(_257,_258,_259);
}else{
var _25a=elem.ownerDocument;
var _25b=_25a.createNode(2,_258,_257);
_25b.nodeValue=_259;
elem.setAttributeNode(_25b);
}
};
dojo.provide("dojo.undo.browser");
try{
if((!djConfig["preventBackButtonFix"])&&(!dojo.hostenv.post_load_)){
document.write("<iframe style='border: 0px; width: 1px; height: 1px; position: absolute; bottom: 0px; right: 0px; visibility: visible;' name='djhistory' id='djhistory' src='"+(dojo.hostenv.getBaseScriptUri()+"iframe_history.html")+"'></iframe>");
}
}
catch(e){
}
if(dojo.render.html.opera){
dojo.debug("Opera is not supported with dojo.undo.browser, so back/forward detection will not work.");
}
dojo.undo.browser={initialHref:(!dj_undef("window"))?window.location.href:"",initialHash:(!dj_undef("window"))?window.location.hash:"",moveForward:false,historyStack:[],forwardStack:[],historyIframe:null,bookmarkAnchor:null,locationTimer:null,setInitialState:function(args){
this.initialState=this._createState(this.initialHref,args,this.initialHash);
},addToHistory:function(args){
this.forwardStack=[];
var hash=null;
var url=null;
if(!this.historyIframe){
this.historyIframe=window.frames["djhistory"];
}
if(!this.bookmarkAnchor){
this.bookmarkAnchor=document.createElement("a");
dojo.body().appendChild(this.bookmarkAnchor);
this.bookmarkAnchor.style.display="none";
}
if(args["changeUrl"]){
hash="#"+((args["changeUrl"]!==true)?args["changeUrl"]:(new Date()).getTime());
if(this.historyStack.length==0&&this.initialState.urlHash==hash){
this.initialState=this._createState(url,args,hash);
return;
}else{
if(this.historyStack.length>0&&this.historyStack[this.historyStack.length-1].urlHash==hash){
this.historyStack[this.historyStack.length-1]=this._createState(url,args,hash);
return;
}
}
this.changingUrl=true;
setTimeout("window.location.href = '"+hash+"'; dojo.undo.browser.changingUrl = false;",1);
this.bookmarkAnchor.href=hash;
if(dojo.render.html.ie){
url=this._loadIframeHistory();
var _260=args["back"]||args["backButton"]||args["handle"];
var tcb=function(_262){
if(window.location.hash!=""){
setTimeout("window.location.href = '"+hash+"';",1);
}
_260.apply(this,[_262]);
};
if(args["back"]){
args.back=tcb;
}else{
if(args["backButton"]){
args.backButton=tcb;
}else{
if(args["handle"]){
args.handle=tcb;
}
}
}
var _263=args["forward"]||args["forwardButton"]||args["handle"];
var tfw=function(_265){
if(window.location.hash!=""){
window.location.href=hash;
}
if(_263){
_263.apply(this,[_265]);
}
};
if(args["forward"]){
args.forward=tfw;
}else{
if(args["forwardButton"]){
args.forwardButton=tfw;
}else{
if(args["handle"]){
args.handle=tfw;
}
}
}
}else{
if(dojo.render.html.moz){
if(!this.locationTimer){
this.locationTimer=setInterval("dojo.undo.browser.checkLocation();",200);
}
}
}
}else{
url=this._loadIframeHistory();
}
this.historyStack.push(this._createState(url,args,hash));
},checkLocation:function(){
if(!this.changingUrl){
var hsl=this.historyStack.length;
if((window.location.hash==this.initialHash||window.location.href==this.initialHref)&&(hsl==1)){
this.handleBackButton();
return;
}
if(this.forwardStack.length>0){
if(this.forwardStack[this.forwardStack.length-1].urlHash==window.location.hash){
this.handleForwardButton();
return;
}
}
if((hsl>=2)&&(this.historyStack[hsl-2])){
if(this.historyStack[hsl-2].urlHash==window.location.hash){
this.handleBackButton();
return;
}
}
}
},iframeLoaded:function(evt,_268){
if(!dojo.render.html.opera){
var _269=this._getUrlQuery(_268.href);
if(_269==null){
if(this.historyStack.length==1){
this.handleBackButton();
}
return;
}
if(this.moveForward){
this.moveForward=false;
return;
}
if(this.historyStack.length>=2&&_269==this._getUrlQuery(this.historyStack[this.historyStack.length-2].url)){
this.handleBackButton();
}else{
if(this.forwardStack.length>0&&_269==this._getUrlQuery(this.forwardStack[this.forwardStack.length-1].url)){
this.handleForwardButton();
}
}
}
},handleBackButton:function(){
var _26a=this.historyStack.pop();
if(!_26a){
return;
}
var last=this.historyStack[this.historyStack.length-1];
if(!last&&this.historyStack.length==0){
last=this.initialState;
}
if(last){
if(last.kwArgs["back"]){
last.kwArgs["back"]();
}else{
if(last.kwArgs["backButton"]){
last.kwArgs["backButton"]();
}else{
if(last.kwArgs["handle"]){
last.kwArgs.handle("back");
}
}
}
}
this.forwardStack.push(_26a);
},handleForwardButton:function(){
var last=this.forwardStack.pop();
if(!last){
return;
}
if(last.kwArgs["forward"]){
last.kwArgs.forward();
}else{
if(last.kwArgs["forwardButton"]){
last.kwArgs.forwardButton();
}else{
if(last.kwArgs["handle"]){
last.kwArgs.handle("forward");
}
}
}
this.historyStack.push(last);
},_createState:function(url,args,hash){
return {"url":url,"kwArgs":args,"urlHash":hash};
},_getUrlQuery:function(url){
var _271=url.split("?");
if(_271.length<2){
return null;
}else{
return _271[1];
}
},_loadIframeHistory:function(){
var url=dojo.hostenv.getBaseScriptUri()+"iframe_history.html?"+(new Date()).getTime();
this.moveForward=true;
dojo.io.setIFrameSrc(this.historyIframe,url,false);
return url;
}};
dojo.provide("dojo.io.BrowserIO");
if(!dj_undef("window")){
dojo.io.checkChildrenForFile=function(node){
var _274=false;
var _275=node.getElementsByTagName("input");
dojo.lang.forEach(_275,function(_276){
if(_274){
return;
}
if(_276.getAttribute("type")=="file"){
_274=true;
}
});
return _274;
};
dojo.io.formHasFile=function(_277){
return dojo.io.checkChildrenForFile(_277);
};
dojo.io.updateNode=function(node,_279){
node=dojo.byId(node);
var args=_279;
if(dojo.lang.isString(_279)){
args={url:_279};
}
args.mimetype="text/html";
args.load=function(t,d,e){
while(node.firstChild){
dojo.dom.destroyNode(node.firstChild);
}
node.innerHTML=d;
};
dojo.io.bind(args);
};
dojo.io.formFilter=function(node){
var type=(node.type||"").toLowerCase();
return !node.disabled&&node.name&&!dojo.lang.inArray(["file","submit","image","reset","button"],type);
};
dojo.io.encodeForm=function(_280,_281,_282){
if((!_280)||(!_280.tagName)||(!_280.tagName.toLowerCase()=="form")){
dojo.raise("Attempted to encode a non-form element.");
}
if(!_282){
_282=dojo.io.formFilter;
}
var enc=/utf/i.test(_281||"")?encodeURIComponent:dojo.string.encodeAscii;
var _284=[];
for(var i=0;i<_280.elements.length;i++){
var elm=_280.elements[i];
if(!elm||elm.tagName.toLowerCase()=="fieldset"||!_282(elm)){
continue;
}
var name=enc(elm.name);
var type=elm.type.toLowerCase();
if(type=="select-multiple"){
for(var j=0;j<elm.options.length;j++){
if(elm.options[j].selected){
_284.push(name+"="+enc(elm.options[j].value));
}
}
}else{
if(dojo.lang.inArray(["radio","checkbox"],type)){
if(elm.checked){
_284.push(name+"="+enc(elm.value));
}
}else{
_284.push(name+"="+enc(elm.value));
}
}
}
var _28a=_280.getElementsByTagName("input");
for(var i=0;i<_28a.length;i++){
var _28b=_28a[i];
if(_28b.type.toLowerCase()=="image"&&_28b.form==_280&&_282(_28b)){
var name=enc(_28b.name);
_284.push(name+"="+enc(_28b.value));
_284.push(name+".x=0");
_284.push(name+".y=0");
}
}
return _284.join("&")+"&";
};
dojo.io.FormBind=function(args){
this.bindArgs={};
if(args&&args.formNode){
this.init(args);
}else{
if(args){
this.init({formNode:args});
}
}
};
dojo.lang.extend(dojo.io.FormBind,{form:null,bindArgs:null,clickedButton:null,init:function(args){
var form=dojo.byId(args.formNode);
if(!form||!form.tagName||form.tagName.toLowerCase()!="form"){
throw new Error("FormBind: Couldn't apply, invalid form");
}else{
if(this.form==form){
return;
}else{
if(this.form){
throw new Error("FormBind: Already applied to a form");
}
}
}
dojo.lang.mixin(this.bindArgs,args);
this.form=form;
this.connect(form,"onsubmit","submit");
for(var i=0;i<form.elements.length;i++){
var node=form.elements[i];
if(node&&node.type&&dojo.lang.inArray(["submit","button"],node.type.toLowerCase())){
this.connect(node,"onclick","click");
}
}
var _291=form.getElementsByTagName("input");
for(var i=0;i<_291.length;i++){
var _292=_291[i];
if(_292.type.toLowerCase()=="image"&&_292.form==form){
this.connect(_292,"onclick","click");
}
}
},onSubmit:function(form){
return true;
},submit:function(e){
e.preventDefault();
if(this.onSubmit(this.form)){
dojo.io.bind(dojo.lang.mixin(this.bindArgs,{formFilter:dojo.lang.hitch(this,"formFilter")}));
}
},click:function(e){
var node=e.currentTarget;
if(node.disabled){
return;
}
this.clickedButton=node;
},formFilter:function(node){
var type=(node.type||"").toLowerCase();
var _299=false;
if(node.disabled||!node.name){
_299=false;
}else{
if(dojo.lang.inArray(["submit","button","image"],type)){
if(!this.clickedButton){
this.clickedButton=node;
}
_299=node==this.clickedButton;
}else{
_299=!dojo.lang.inArray(["file","submit","reset","button"],type);
}
}
return _299;
},connect:function(_29a,_29b,_29c){
if(dojo.evalObjPath("dojo.event.connect")){
dojo.event.connect(_29a,_29b,this,_29c);
}else{
var fcn=dojo.lang.hitch(this,_29c);
_29a[_29b]=function(e){
if(!e){
e=window.event;
}
if(!e.currentTarget){
e.currentTarget=e.srcElement;
}
if(!e.preventDefault){
e.preventDefault=function(){
window.event.returnValue=false;
};
}
fcn(e);
};
}
}});
dojo.io.XMLHTTPTransport=new function(){
var _29f=this;
var _2a0={};
this.useCache=false;
this.preventCache=false;
function getCacheKey(url,_2a2,_2a3){
return url+"|"+_2a2+"|"+_2a3.toLowerCase();
}
function addToCache(url,_2a5,_2a6,http){
_2a0[getCacheKey(url,_2a5,_2a6)]=http;
}
function getFromCache(url,_2a9,_2aa){
return _2a0[getCacheKey(url,_2a9,_2aa)];
}
this.clearCache=function(){
_2a0={};
};
function doLoad(_2ab,http,url,_2ae,_2af){
if(((http.status>=200)&&(http.status<300))||(http.status==304)||(location.protocol=="file:"&&(http.status==0||http.status==undefined))||(location.protocol=="chrome:"&&(http.status==0||http.status==undefined))){
var ret;
if(_2ab.method.toLowerCase()=="head"){
var _2b1=http.getAllResponseHeaders();
ret={};
ret.toString=function(){
return _2b1;
};
var _2b2=_2b1.split(/[\r\n]+/g);
for(var i=0;i<_2b2.length;i++){
var pair=_2b2[i].match(/^([^:]+)\s*:\s*(.+)$/i);
if(pair){
ret[pair[1]]=pair[2];
}
}
}else{
if(_2ab.mimetype=="text/javascript"){
try{
ret=dj_eval(http.responseText);
}
catch(e){
dojo.debug(e);
dojo.debug(http.responseText);
ret=null;
}
}else{
if(_2ab.mimetype=="text/json"||_2ab.mimetype=="application/json"){
try{
ret=dj_eval("("+http.responseText+")");
}
catch(e){
dojo.debug(e);
dojo.debug(http.responseText);
ret=false;
}
}else{
if((_2ab.mimetype=="application/xml")||(_2ab.mimetype=="text/xml")){
ret=http.responseXML;
if(!ret||typeof ret=="string"||!http.getResponseHeader("Content-Type")){
ret=dojo.dom.createDocumentFromText(http.responseText);
}
}else{
ret=http.responseText;
}
}
}
}
if(_2af){
addToCache(url,_2ae,_2ab.method,http);
}
_2ab[(typeof _2ab.load=="function")?"load":"handle"]("load",ret,http,_2ab);
}else{
var _2b5=new dojo.io.Error("XMLHttpTransport Error: "+http.status+" "+http.statusText);
_2ab[(typeof _2ab.error=="function")?"error":"handle"]("error",_2b5,http,_2ab);
}
}
function setHeaders(http,_2b7){
if(_2b7["headers"]){
for(var _2b8 in _2b7["headers"]){
if(_2b8.toLowerCase()=="content-type"&&!_2b7["contentType"]){
_2b7["contentType"]=_2b7["headers"][_2b8];
}else{
http.setRequestHeader(_2b8,_2b7["headers"][_2b8]);
}
}
}
}
this.inFlight=[];
this.inFlightTimer=null;
this.startWatchingInFlight=function(){
if(!this.inFlightTimer){
this.inFlightTimer=setTimeout("dojo.io.XMLHTTPTransport.watchInFlight();",10);
}
};
this.watchInFlight=function(){
var now=null;
if(!dojo.hostenv._blockAsync&&!_29f._blockAsync){
for(var x=this.inFlight.length-1;x>=0;x--){
try{
var tif=this.inFlight[x];
if(!tif||tif.http._aborted||!tif.http.readyState){
this.inFlight.splice(x,1);
continue;
}
if(4==tif.http.readyState){
this.inFlight.splice(x,1);
doLoad(tif.req,tif.http,tif.url,tif.query,tif.useCache);
}else{
if(tif.startTime){
if(!now){
now=(new Date()).getTime();
}
if(tif.startTime+(tif.req.timeoutSeconds*1000)<now){
if(typeof tif.http.abort=="function"){
tif.http.abort();
}
this.inFlight.splice(x,1);
tif.req[(typeof tif.req.timeout=="function")?"timeout":"handle"]("timeout",null,tif.http,tif.req);
}
}
}
}
catch(e){
try{
var _2bc=new dojo.io.Error("XMLHttpTransport.watchInFlight Error: "+e);
tif.req[(typeof tif.req.error=="function")?"error":"handle"]("error",_2bc,tif.http,tif.req);
}
catch(e2){
dojo.debug("XMLHttpTransport error callback failed: "+e2);
}
}
}
}
clearTimeout(this.inFlightTimer);
if(this.inFlight.length==0){
this.inFlightTimer=null;
return;
}
this.inFlightTimer=setTimeout("dojo.io.XMLHTTPTransport.watchInFlight();",10);
};
var _2bd=dojo.hostenv.getXmlhttpObject()?true:false;
this.canHandle=function(_2be){
return _2bd&&dojo.lang.inArray(["text/plain","text/html","application/xml","text/xml","text/javascript","text/json","application/json"],(_2be["mimetype"].toLowerCase()||""))&&!(_2be["formNode"]&&dojo.io.formHasFile(_2be["formNode"]));
};
this.multipartBoundary="45309FFF-BD65-4d50-99C9-36986896A96F";
this.bind=function(_2bf){
if(!_2bf["url"]){
if(!_2bf["formNode"]&&(_2bf["backButton"]||_2bf["back"]||_2bf["changeUrl"]||_2bf["watchForURL"])&&(!djConfig.preventBackButtonFix)){
dojo.deprecated("Using dojo.io.XMLHTTPTransport.bind() to add to browser history without doing an IO request","Use dojo.undo.browser.addToHistory() instead.","0.4");
dojo.undo.browser.addToHistory(_2bf);
return true;
}
}
var url=_2bf.url;
var _2c1="";
if(_2bf["formNode"]){
var ta=_2bf.formNode.getAttribute("action");
if((ta)&&(!_2bf["url"])){
url=ta;
}
var tp=_2bf.formNode.getAttribute("method");
if((tp)&&(!_2bf["method"])){
_2bf.method=tp;
}
_2c1+=dojo.io.encodeForm(_2bf.formNode,_2bf.encoding,_2bf["formFilter"]);
}
if(url.indexOf("#")>-1){
dojo.debug("Warning: dojo.io.bind: stripping hash values from url:",url);
url=url.split("#")[0];
}
if(_2bf["file"]){
_2bf.method="post";
}
if(!_2bf["method"]){
_2bf.method="get";
}
if(_2bf.method.toLowerCase()=="get"){
_2bf.multipart=false;
}else{
if(_2bf["file"]){
_2bf.multipart=true;
}else{
if(!_2bf["multipart"]){
_2bf.multipart=false;
}
}
}
if(_2bf["backButton"]||_2bf["back"]||_2bf["changeUrl"]){
dojo.undo.browser.addToHistory(_2bf);
}
var _2c4=_2bf["content"]||{};
if(_2bf.sendTransport){
_2c4["dojo.transport"]="xmlhttp";
}
do{
if(_2bf.postContent){
_2c1=_2bf.postContent;
break;
}
if(_2c4){
_2c1+=dojo.io.argsFromMap(_2c4,_2bf.encoding);
}
if(_2bf.method.toLowerCase()=="get"||!_2bf.multipart){
break;
}
var t=[];
if(_2c1.length){
var q=_2c1.split("&");
for(var i=0;i<q.length;++i){
if(q[i].length){
var p=q[i].split("=");
t.push("--"+this.multipartBoundary,"Content-Disposition: form-data; name=\""+p[0]+"\"","",p[1]);
}
}
}
if(_2bf.file){
if(dojo.lang.isArray(_2bf.file)){
for(var i=0;i<_2bf.file.length;++i){
var o=_2bf.file[i];
t.push("--"+this.multipartBoundary,"Content-Disposition: form-data; name=\""+o.name+"\"; filename=\""+("fileName" in o?o.fileName:o.name)+"\"","Content-Type: "+("contentType" in o?o.contentType:"application/octet-stream"),"",o.content);
}
}else{
var o=_2bf.file;
t.push("--"+this.multipartBoundary,"Content-Disposition: form-data; name=\""+o.name+"\"; filename=\""+("fileName" in o?o.fileName:o.name)+"\"","Content-Type: "+("contentType" in o?o.contentType:"application/octet-stream"),"",o.content);
}
}
if(t.length){
t.push("--"+this.multipartBoundary+"--","");
_2c1=t.join("\r\n");
}
}while(false);
var _2ca=_2bf["sync"]?false:true;
var _2cb=_2bf["preventCache"]||(this.preventCache==true&&_2bf["preventCache"]!=false);
var _2cc=_2bf["useCache"]==true||(this.useCache==true&&_2bf["useCache"]!=false);
if(!_2cb&&_2cc){
var _2cd=getFromCache(url,_2c1,_2bf.method);
if(_2cd){
doLoad(_2bf,_2cd,url,_2c1,false);
return;
}
}
var http=dojo.hostenv.getXmlhttpObject(_2bf);
var _2cf=false;
if(_2ca){
var _2d0=this.inFlight.push({"req":_2bf,"http":http,"url":url,"query":_2c1,"useCache":_2cc,"startTime":_2bf.timeoutSeconds?(new Date()).getTime():0});
this.startWatchingInFlight();
}else{
_29f._blockAsync=true;
}
if(_2bf.method.toLowerCase()=="post"){
if(!_2bf.user){
http.open("POST",url,_2ca);
}else{
http.open("POST",url,_2ca,_2bf.user,_2bf.password);
}
setHeaders(http,_2bf);
http.setRequestHeader("Content-Type",_2bf.multipart?("multipart/form-data; boundary="+this.multipartBoundary):(_2bf.contentType||"application/x-www-form-urlencoded"));
try{
http.send(_2c1);
}
catch(e){
if(typeof http.abort=="function"){
http.abort();
}
doLoad(_2bf,{status:404},url,_2c1,_2cc);
}
}else{
var _2d1=url;
if(_2c1!=""){
_2d1+=(_2d1.indexOf("?")>-1?"&":"?")+_2c1;
}
if(_2cb){
_2d1+=(dojo.string.endsWithAny(_2d1,"?","&")?"":(_2d1.indexOf("?")>-1?"&":"?"))+"dojo.preventCache="+new Date().valueOf();
}
if(!_2bf.user){
http.open(_2bf.method.toUpperCase(),_2d1,_2ca);
}else{
http.open(_2bf.method.toUpperCase(),_2d1,_2ca,_2bf.user,_2bf.password);
}
setHeaders(http,_2bf);
try{
http.send(null);
}
catch(e){
if(typeof http.abort=="function"){
http.abort();
}
doLoad(_2bf,{status:404},url,_2c1,_2cc);
}
}
if(!_2ca){
doLoad(_2bf,http,url,_2c1,_2cc);
_29f._blockAsync=false;
}
_2bf.abort=function(){
try{
http._aborted=true;
}
catch(e){
}
return http.abort();
};
return;
};
dojo.io.transports.addTransport("XMLHTTPTransport");
};
}
dojo.provide("dojo.io.cookie");
dojo.io.cookie.setCookie=function(name,_2d3,days,path,_2d6,_2d7){
var _2d8=-1;
if((typeof days=="number")&&(days>=0)){
var d=new Date();
d.setTime(d.getTime()+(days*24*60*60*1000));
_2d8=d.toGMTString();
}
_2d3=escape(_2d3);
document.cookie=name+"="+_2d3+";"+(_2d8!=-1?" expires="+_2d8+";":"")+(path?"path="+path:"")+(_2d6?"; domain="+_2d6:"")+(_2d7?"; secure":"");
};
dojo.io.cookie.set=dojo.io.cookie.setCookie;
dojo.io.cookie.getCookie=function(name){
var idx=document.cookie.lastIndexOf(name+"=");
if(idx==-1){
return null;
}
var _2dc=document.cookie.substring(idx+name.length+1);
var end=_2dc.indexOf(";");
if(end==-1){
end=_2dc.length;
}
_2dc=_2dc.substring(0,end);
_2dc=unescape(_2dc);
return _2dc;
};
dojo.io.cookie.get=dojo.io.cookie.getCookie;
dojo.io.cookie.deleteCookie=function(name){
dojo.io.cookie.setCookie(name,"-",0);
};
dojo.io.cookie.setObjectCookie=function(name,obj,days,path,_2e3,_2e4,_2e5){
if(arguments.length==5){
_2e5=_2e3;
_2e3=null;
_2e4=null;
}
var _2e6=[],_2e7,_2e8="";
if(!_2e5){
_2e7=dojo.io.cookie.getObjectCookie(name);
}
if(days>=0){
if(!_2e7){
_2e7={};
}
for(var prop in obj){
if(obj[prop]==null){
delete _2e7[prop];
}else{
if((typeof obj[prop]=="string")||(typeof obj[prop]=="number")){
_2e7[prop]=obj[prop];
}
}
}
prop=null;
for(var prop in _2e7){
_2e6.push(escape(prop)+"="+escape(_2e7[prop]));
}
_2e8=_2e6.join("&");
}
dojo.io.cookie.setCookie(name,_2e8,days,path,_2e3,_2e4);
};
dojo.io.cookie.getObjectCookie=function(name){
var _2eb=null,_2ec=dojo.io.cookie.getCookie(name);
if(_2ec){
_2eb={};
var _2ed=_2ec.split("&");
for(var i=0;i<_2ed.length;i++){
var pair=_2ed[i].split("=");
var _2f0=pair[1];
if(isNaN(_2f0)){
_2f0=unescape(pair[1]);
}
_2eb[unescape(pair[0])]=_2f0;
}
}
return _2eb;
};
dojo.io.cookie.isSupported=function(){
if(typeof navigator.cookieEnabled!="boolean"){
dojo.io.cookie.setCookie("__TestingYourBrowserForCookieSupport__","CookiesAllowed",90,null);
var _2f1=dojo.io.cookie.getCookie("__TestingYourBrowserForCookieSupport__");
navigator.cookieEnabled=(_2f1=="CookiesAllowed");
if(navigator.cookieEnabled){
this.deleteCookie("__TestingYourBrowserForCookieSupport__");
}
}
return navigator.cookieEnabled;
};
if(!dojo.io.cookies){
dojo.io.cookies=dojo.io.cookie;
}
dojo.provide("dojo.io.*");
dojo.provide("dojo.event.common");
dojo.event=new function(){
this._canTimeout=dojo.lang.isFunction(dj_global["setTimeout"])||dojo.lang.isAlien(dj_global["setTimeout"]);
function interpolateArgs(args,_2f3){
var dl=dojo.lang;
var ao={srcObj:dj_global,srcFunc:null,adviceObj:dj_global,adviceFunc:null,aroundObj:null,aroundFunc:null,adviceType:(args.length>2)?args[0]:"after",precedence:"last",once:false,delay:null,rate:0,adviceMsg:false};
switch(args.length){
case 0:
return;
case 1:
return;
case 2:
ao.srcFunc=args[0];
ao.adviceFunc=args[1];
break;
case 3:
if((dl.isObject(args[0]))&&(dl.isString(args[1]))&&(dl.isString(args[2]))){
ao.adviceType="after";
ao.srcObj=args[0];
ao.srcFunc=args[1];
ao.adviceFunc=args[2];
}else{
if((dl.isString(args[1]))&&(dl.isString(args[2]))){
ao.srcFunc=args[1];
ao.adviceFunc=args[2];
}else{
if((dl.isObject(args[0]))&&(dl.isString(args[1]))&&(dl.isFunction(args[2]))){
ao.adviceType="after";
ao.srcObj=args[0];
ao.srcFunc=args[1];
var _2f6=dl.nameAnonFunc(args[2],ao.adviceObj,_2f3);
ao.adviceFunc=_2f6;
}else{
if((dl.isFunction(args[0]))&&(dl.isObject(args[1]))&&(dl.isString(args[2]))){
ao.adviceType="after";
ao.srcObj=dj_global;
var _2f6=dl.nameAnonFunc(args[0],ao.srcObj,_2f3);
ao.srcFunc=_2f6;
ao.adviceObj=args[1];
ao.adviceFunc=args[2];
}
}
}
}
break;
case 4:
if((dl.isObject(args[0]))&&(dl.isObject(args[2]))){
ao.adviceType="after";
ao.srcObj=args[0];
ao.srcFunc=args[1];
ao.adviceObj=args[2];
ao.adviceFunc=args[3];
}else{
if((dl.isString(args[0]))&&(dl.isString(args[1]))&&(dl.isObject(args[2]))){
ao.adviceType=args[0];
ao.srcObj=dj_global;
ao.srcFunc=args[1];
ao.adviceObj=args[2];
ao.adviceFunc=args[3];
}else{
if((dl.isString(args[0]))&&(dl.isFunction(args[1]))&&(dl.isObject(args[2]))){
ao.adviceType=args[0];
ao.srcObj=dj_global;
var _2f6=dl.nameAnonFunc(args[1],dj_global,_2f3);
ao.srcFunc=_2f6;
ao.adviceObj=args[2];
ao.adviceFunc=args[3];
}else{
if((dl.isString(args[0]))&&(dl.isObject(args[1]))&&(dl.isString(args[2]))&&(dl.isFunction(args[3]))){
ao.srcObj=args[1];
ao.srcFunc=args[2];
var _2f6=dl.nameAnonFunc(args[3],dj_global,_2f3);
ao.adviceObj=dj_global;
ao.adviceFunc=_2f6;
}else{
if(dl.isObject(args[1])){
ao.srcObj=args[1];
ao.srcFunc=args[2];
ao.adviceObj=dj_global;
ao.adviceFunc=args[3];
}else{
if(dl.isObject(args[2])){
ao.srcObj=dj_global;
ao.srcFunc=args[1];
ao.adviceObj=args[2];
ao.adviceFunc=args[3];
}else{
ao.srcObj=ao.adviceObj=ao.aroundObj=dj_global;
ao.srcFunc=args[1];
ao.adviceFunc=args[2];
ao.aroundFunc=args[3];
}
}
}
}
}
}
break;
case 6:
ao.srcObj=args[1];
ao.srcFunc=args[2];
ao.adviceObj=args[3];
ao.adviceFunc=args[4];
ao.aroundFunc=args[5];
ao.aroundObj=dj_global;
break;
default:
ao.srcObj=args[1];
ao.srcFunc=args[2];
ao.adviceObj=args[3];
ao.adviceFunc=args[4];
ao.aroundObj=args[5];
ao.aroundFunc=args[6];
ao.once=args[7];
ao.delay=args[8];
ao.rate=args[9];
ao.adviceMsg=args[10];
break;
}
if(dl.isFunction(ao.aroundFunc)){
var _2f6=dl.nameAnonFunc(ao.aroundFunc,ao.aroundObj,_2f3);
ao.aroundFunc=_2f6;
}
if(dl.isFunction(ao.srcFunc)){
ao.srcFunc=dl.getNameInObj(ao.srcObj,ao.srcFunc);
}
if(dl.isFunction(ao.adviceFunc)){
ao.adviceFunc=dl.getNameInObj(ao.adviceObj,ao.adviceFunc);
}
if((ao.aroundObj)&&(dl.isFunction(ao.aroundFunc))){
ao.aroundFunc=dl.getNameInObj(ao.aroundObj,ao.aroundFunc);
}
if(!ao.srcObj){
dojo.raise("bad srcObj for srcFunc: "+ao.srcFunc);
}
if(!ao.adviceObj){
dojo.raise("bad adviceObj for adviceFunc: "+ao.adviceFunc);
}
if(!ao.adviceFunc){
dojo.debug("bad adviceFunc for srcFunc: "+ao.srcFunc);
dojo.debugShallow(ao);
}
return ao;
}
this.connect=function(){
if(arguments.length==1){
var ao=arguments[0];
}else{
var ao=interpolateArgs(arguments,true);
}
if(dojo.lang.isString(ao.srcFunc)&&(ao.srcFunc.toLowerCase()=="onkey")){
if(dojo.render.html.ie){
ao.srcFunc="onkeydown";
this.connect(ao);
}
ao.srcFunc="onkeypress";
}
if(dojo.lang.isArray(ao.srcObj)&&ao.srcObj!=""){
var _2f8={};
for(var x in ao){
_2f8[x]=ao[x];
}
var mjps=[];
dojo.lang.forEach(ao.srcObj,function(src){
if((dojo.render.html.capable)&&(dojo.lang.isString(src))){
src=dojo.byId(src);
}
_2f8.srcObj=src;
mjps.push(dojo.event.connect.call(dojo.event,_2f8));
});
return mjps;
}
var mjp=dojo.event.MethodJoinPoint.getForMethod(ao.srcObj,ao.srcFunc);
if(ao.adviceFunc){
var mjp2=dojo.event.MethodJoinPoint.getForMethod(ao.adviceObj,ao.adviceFunc);
}
mjp.kwAddAdvice(ao);
return mjp;
};
this.log=function(a1,a2){
var _300;
if((arguments.length==1)&&(typeof a1=="object")){
_300=a1;
}else{
_300={srcObj:a1,srcFunc:a2};
}
_300.adviceFunc=function(){
var _301=[];
for(var x=0;x<arguments.length;x++){
_301.push(arguments[x]);
}
dojo.debug("("+_300.srcObj+")."+_300.srcFunc,":",_301.join(", "));
};
this.kwConnect(_300);
};
this.connectBefore=function(){
var args=["before"];
for(var i=0;i<arguments.length;i++){
args.push(arguments[i]);
}
return this.connect.apply(this,args);
};
this.connectAround=function(){
var args=["around"];
for(var i=0;i<arguments.length;i++){
args.push(arguments[i]);
}
return this.connect.apply(this,args);
};
this.connectOnce=function(){
var ao=interpolateArgs(arguments,true);
ao.once=true;
return this.connect(ao);
};
this._kwConnectImpl=function(_308,_309){
var fn=(_309)?"disconnect":"connect";
if(typeof _308["srcFunc"]=="function"){
_308.srcObj=_308["srcObj"]||dj_global;
var _30b=dojo.lang.nameAnonFunc(_308.srcFunc,_308.srcObj,true);
_308.srcFunc=_30b;
}
if(typeof _308["adviceFunc"]=="function"){
_308.adviceObj=_308["adviceObj"]||dj_global;
var _30b=dojo.lang.nameAnonFunc(_308.adviceFunc,_308.adviceObj,true);
_308.adviceFunc=_30b;
}
_308.srcObj=_308["srcObj"]||dj_global;
_308.adviceObj=_308["adviceObj"]||_308["targetObj"]||dj_global;
_308.adviceFunc=_308["adviceFunc"]||_308["targetFunc"];
return dojo.event[fn](_308);
};
this.kwConnect=function(_30c){
return this._kwConnectImpl(_30c,false);
};
this.disconnect=function(){
if(arguments.length==1){
var ao=arguments[0];
}else{
var ao=interpolateArgs(arguments,true);
}
if(!ao.adviceFunc){
return;
}
if(dojo.lang.isString(ao.srcFunc)&&(ao.srcFunc.toLowerCase()=="onkey")){
if(dojo.render.html.ie){
ao.srcFunc="onkeydown";
this.disconnect(ao);
}
ao.srcFunc="onkeypress";
}
if(!ao.srcObj[ao.srcFunc]){
return null;
}
var mjp=dojo.event.MethodJoinPoint.getForMethod(ao.srcObj,ao.srcFunc,true);
mjp.removeAdvice(ao.adviceObj,ao.adviceFunc,ao.adviceType,ao.once);
return mjp;
};
this.kwDisconnect=function(_30f){
return this._kwConnectImpl(_30f,true);
};
};
dojo.event.MethodInvocation=function(_310,obj,args){
this.jp_=_310;
this.object=obj;
this.args=[];
for(var x=0;x<args.length;x++){
this.args[x]=args[x];
}
this.around_index=-1;
};
dojo.event.MethodInvocation.prototype.proceed=function(){
this.around_index++;
if(this.around_index>=this.jp_.around.length){
return this.jp_.object[this.jp_.methodname].apply(this.jp_.object,this.args);
}else{
var ti=this.jp_.around[this.around_index];
var mobj=ti[0]||dj_global;
var meth=ti[1];
return mobj[meth].call(mobj,this);
}
};
dojo.event.MethodJoinPoint=function(obj,_318){
this.object=obj||dj_global;
this.methodname=_318;
this.methodfunc=this.object[_318];
this.squelch=false;
};
dojo.event.MethodJoinPoint.getForMethod=function(obj,_31a){
if(!obj){
obj=dj_global;
}
if(!obj[_31a]){
obj[_31a]=function(){
};
if(!obj[_31a]){
dojo.raise("Cannot set do-nothing method on that object "+_31a);
}
}else{
if((!dojo.lang.isFunction(obj[_31a]))&&(!dojo.lang.isAlien(obj[_31a]))){
return null;
}
}
var _31b=_31a+"$joinpoint";
var _31c=_31a+"$joinpoint$method";
var _31d=obj[_31b];
if(!_31d){
var _31e=false;
if(dojo.event["browser"]){
if((obj["attachEvent"])||(obj["nodeType"])||(obj["addEventListener"])){
_31e=true;
dojo.event.browser.addClobberNodeAttrs(obj,[_31b,_31c,_31a]);
}
}
var _31f=obj[_31a].length;
obj[_31c]=obj[_31a];
_31d=obj[_31b]=new dojo.event.MethodJoinPoint(obj,_31c);
obj[_31a]=function(){
var args=[];
if((_31e)&&(!arguments.length)){
var evt=null;
try{
if(obj.ownerDocument){
evt=obj.ownerDocument.parentWindow.event;
}else{
if(obj.documentElement){
evt=obj.documentElement.ownerDocument.parentWindow.event;
}else{
if(obj.event){
evt=obj.event;
}else{
evt=window.event;
}
}
}
}
catch(e){
evt=window.event;
}
if(evt){
args.push(dojo.event.browser.fixEvent(evt,this));
}
}else{
for(var x=0;x<arguments.length;x++){
if((x==0)&&(_31e)&&(dojo.event.browser.isEvent(arguments[x]))){
args.push(dojo.event.browser.fixEvent(arguments[x],this));
}else{
args.push(arguments[x]);
}
}
}
return _31d.run.apply(_31d,args);
};
obj[_31a].__preJoinArity=_31f;
}
return _31d;
};
dojo.lang.extend(dojo.event.MethodJoinPoint,{unintercept:function(){
this.object[this.methodname]=this.methodfunc;
this.before=[];
this.after=[];
this.around=[];
},disconnect:dojo.lang.forward("unintercept"),run:function(){
var obj=this.object||dj_global;
var args=arguments;
var _325=[];
for(var x=0;x<args.length;x++){
_325[x]=args[x];
}
var _327=function(marr){
if(!marr){
dojo.debug("Null argument to unrollAdvice()");
return;
}
var _329=marr[0]||dj_global;
var _32a=marr[1];
if(!_329[_32a]){
dojo.raise("function \""+_32a+"\" does not exist on \""+_329+"\"");
}
var _32b=marr[2]||dj_global;
var _32c=marr[3];
var msg=marr[6];
var _32e;
var to={args:[],jp_:this,object:obj,proceed:function(){
return _329[_32a].apply(_329,to.args);
}};
to.args=_325;
var _330=parseInt(marr[4]);
var _331=((!isNaN(_330))&&(marr[4]!==null)&&(typeof marr[4]!="undefined"));
if(marr[5]){
var rate=parseInt(marr[5]);
var cur=new Date();
var _334=false;
if((marr["last"])&&((cur-marr.last)<=rate)){
if(dojo.event._canTimeout){
if(marr["delayTimer"]){
clearTimeout(marr.delayTimer);
}
var tod=parseInt(rate*2);
var mcpy=dojo.lang.shallowCopy(marr);
marr.delayTimer=setTimeout(function(){
mcpy[5]=0;
_327(mcpy);
},tod);
}
return;
}else{
marr.last=cur;
}
}
if(_32c){
_32b[_32c].call(_32b,to);
}else{
if((_331)&&((dojo.render.html)||(dojo.render.svg))){
dj_global["setTimeout"](function(){
if(msg){
_329[_32a].call(_329,to);
}else{
_329[_32a].apply(_329,args);
}
},_330);
}else{
if(msg){
_329[_32a].call(_329,to);
}else{
_329[_32a].apply(_329,args);
}
}
}
};
var _337=function(){
if(this.squelch){
try{
return _327.apply(this,arguments);
}
catch(e){
dojo.debug(e);
}
}else{
return _327.apply(this,arguments);
}
};
if((this["before"])&&(this.before.length>0)){
dojo.lang.forEach(this.before.concat(new Array()),_337);
}
var _338;
try{
if((this["around"])&&(this.around.length>0)){
var mi=new dojo.event.MethodInvocation(this,obj,args);
_338=mi.proceed();
}else{
if(this.methodfunc){
_338=this.object[this.methodname].apply(this.object,args);
}
}
}
catch(e){
if(!this.squelch){
dojo.debug(e,"when calling",this.methodname,"on",this.object,"with arguments",args);
dojo.raise(e);
}
}
if((this["after"])&&(this.after.length>0)){
dojo.lang.forEach(this.after.concat(new Array()),_337);
}
return (this.methodfunc)?_338:null;
},getArr:function(kind){
var type="after";
if((typeof kind=="string")&&(kind.indexOf("before")!=-1)){
type="before";
}else{
if(kind=="around"){
type="around";
}
}
if(!this[type]){
this[type]=[];
}
return this[type];
},kwAddAdvice:function(args){
this.addAdvice(args["adviceObj"],args["adviceFunc"],args["aroundObj"],args["aroundFunc"],args["adviceType"],args["precedence"],args["once"],args["delay"],args["rate"],args["adviceMsg"]);
},addAdvice:function(_33d,_33e,_33f,_340,_341,_342,once,_344,rate,_346){
var arr=this.getArr(_341);
if(!arr){
dojo.raise("bad this: "+this);
}
var ao=[_33d,_33e,_33f,_340,_344,rate,_346];
if(once){
if(this.hasAdvice(_33d,_33e,_341,arr)>=0){
return;
}
}
if(_342=="first"){
arr.unshift(ao);
}else{
arr.push(ao);
}
},hasAdvice:function(_349,_34a,_34b,arr){
if(!arr){
arr=this.getArr(_34b);
}
var ind=-1;
for(var x=0;x<arr.length;x++){
var aao=(typeof _34a=="object")?(new String(_34a)).toString():_34a;
var a1o=(typeof arr[x][1]=="object")?(new String(arr[x][1])).toString():arr[x][1];
if((arr[x][0]==_349)&&(a1o==aao)){
ind=x;
}
}
return ind;
},removeAdvice:function(_351,_352,_353,once){
var arr=this.getArr(_353);
var ind=this.hasAdvice(_351,_352,_353,arr);
if(ind==-1){
return false;
}
while(ind!=-1){
arr.splice(ind,1);
if(once){
break;
}
ind=this.hasAdvice(_351,_352,_353,arr);
}
return true;
}});
dojo.provide("dojo.event.topic");
dojo.event.topic=new function(){
this.topics={};
this.getTopic=function(_357){
if(!this.topics[_357]){
this.topics[_357]=new this.TopicImpl(_357);
}
return this.topics[_357];
};
this.registerPublisher=function(_358,obj,_35a){
var _358=this.getTopic(_358);
_358.registerPublisher(obj,_35a);
};
this.subscribe=function(_35b,obj,_35d){
var _35b=this.getTopic(_35b);
_35b.subscribe(obj,_35d);
};
this.unsubscribe=function(_35e,obj,_360){
var _35e=this.getTopic(_35e);
_35e.unsubscribe(obj,_360);
};
this.destroy=function(_361){
this.getTopic(_361).destroy();
delete this.topics[_361];
};
this.publishApply=function(_362,args){
var _362=this.getTopic(_362);
_362.sendMessage.apply(_362,args);
};
this.publish=function(_364,_365){
var _364=this.getTopic(_364);
var args=[];
for(var x=1;x<arguments.length;x++){
args.push(arguments[x]);
}
_364.sendMessage.apply(_364,args);
};
};
dojo.event.topic.TopicImpl=function(_368){
this.topicName=_368;
this.subscribe=function(_369,_36a){
var tf=_36a||_369;
var to=(!_36a)?dj_global:_369;
return dojo.event.kwConnect({srcObj:this,srcFunc:"sendMessage",adviceObj:to,adviceFunc:tf});
};
this.unsubscribe=function(_36d,_36e){
var tf=(!_36e)?_36d:_36e;
var to=(!_36e)?null:_36d;
return dojo.event.kwDisconnect({srcObj:this,srcFunc:"sendMessage",adviceObj:to,adviceFunc:tf});
};
this._getJoinPoint=function(){
return dojo.event.MethodJoinPoint.getForMethod(this,"sendMessage");
};
this.setSquelch=function(_371){
this._getJoinPoint().squelch=_371;
};
this.destroy=function(){
this._getJoinPoint().disconnect();
};
this.registerPublisher=function(_372,_373){
dojo.event.connect(_372,_373,this,"sendMessage");
};
this.sendMessage=function(_374){
};
};
dojo.provide("dojo.event.browser");
dojo._ie_clobber=new function(){
this.clobberNodes=[];
function nukeProp(node,prop){
try{
node[prop]=null;
}
catch(e){
}
try{
delete node[prop];
}
catch(e){
}
try{
node.removeAttribute(prop);
}
catch(e){
}
}
this.clobber=function(_377){
var na;
var tna;
if(_377){
tna=_377.all||_377.getElementsByTagName("*");
na=[_377];
for(var x=0;x<tna.length;x++){
if(tna[x]["__doClobber__"]){
na.push(tna[x]);
}
}
}else{
try{
window.onload=null;
}
catch(e){
}
na=(this.clobberNodes.length)?this.clobberNodes:document.all;
}
tna=null;
var _37b={};
for(var i=na.length-1;i>=0;i=i-1){
var el=na[i];
try{
if(el&&el["__clobberAttrs__"]){
for(var j=0;j<el.__clobberAttrs__.length;j++){
nukeProp(el,el.__clobberAttrs__[j]);
}
nukeProp(el,"__clobberAttrs__");
nukeProp(el,"__doClobber__");
}
}
catch(e){
}
}
na=null;
};
};
if(dojo.render.html.ie){
dojo.addOnUnload(function(){
dojo._ie_clobber.clobber();
try{
if((dojo["widget"])&&(dojo.widget["manager"])){
dojo.widget.manager.destroyAll();
}
}
catch(e){
}
if(dojo.widget){
for(var name in dojo.widget._templateCache){
if(dojo.widget._templateCache[name].node){
dojo.dom.destroyNode(dojo.widget._templateCache[name].node);
dojo.widget._templateCache[name].node=null;
delete dojo.widget._templateCache[name].node;
}
}
}
try{
window.onload=null;
}
catch(e){
}
try{
window.onunload=null;
}
catch(e){
}
dojo._ie_clobber.clobberNodes=[];
});
}
dojo.event.browser=new function(){
var _380=0;
this.normalizedEventName=function(_381){
switch(_381){
case "CheckboxStateChange":
case "DOMAttrModified":
case "DOMMenuItemActive":
case "DOMMenuItemInactive":
case "DOMMouseScroll":
case "DOMNodeInserted":
case "DOMNodeRemoved":
case "RadioStateChange":
return _381;
break;
default:
return _381.toLowerCase();
break;
}
};
this.clean=function(node){
if(dojo.render.html.ie){
dojo._ie_clobber.clobber(node);
}
};
this.addClobberNode=function(node){
if(!dojo.render.html.ie){
return;
}
if(!node["__doClobber__"]){
node.__doClobber__=true;
dojo._ie_clobber.clobberNodes.push(node);
node.__clobberAttrs__=[];
}
};
this.addClobberNodeAttrs=function(node,_385){
if(!dojo.render.html.ie){
return;
}
this.addClobberNode(node);
for(var x=0;x<_385.length;x++){
node.__clobberAttrs__.push(_385[x]);
}
};
this.removeListener=function(node,_388,fp,_38a){
if(!_38a){
var _38a=false;
}
_388=dojo.event.browser.normalizedEventName(_388);
if((_388=="onkey")||(_388=="key")){
if(dojo.render.html.ie){
this.removeListener(node,"onkeydown",fp,_38a);
}
_388="onkeypress";
}
if(_388.substr(0,2)=="on"){
_388=_388.substr(2);
}
if(node.removeEventListener){
node.removeEventListener(_388,fp,_38a);
}
};
this.addListener=function(node,_38c,fp,_38e,_38f){
if(!node){
return;
}
if(!_38e){
var _38e=false;
}
_38c=dojo.event.browser.normalizedEventName(_38c);
if((_38c=="onkey")||(_38c=="key")){
if(dojo.render.html.ie){
this.addListener(node,"onkeydown",fp,_38e,_38f);
}
_38c="onkeypress";
}
if(_38c.substr(0,2)!="on"){
_38c="on"+_38c;
}
if(!_38f){
var _390=function(evt){
if(!evt){
evt=window.event;
}
var ret=fp(dojo.event.browser.fixEvent(evt,this));
if(_38e){
dojo.event.browser.stopEvent(evt);
}
return ret;
};
}else{
_390=fp;
}
if(node.addEventListener){
node.addEventListener(_38c.substr(2),_390,_38e);
return _390;
}else{
if(typeof node[_38c]=="function"){
var _393=node[_38c];
node[_38c]=function(e){
_393(e);
return _390(e);
};
}else{
node[_38c]=_390;
}
if(dojo.render.html.ie){
this.addClobberNodeAttrs(node,[_38c]);
}
return _390;
}
};
this.isEvent=function(obj){
return (typeof obj!="undefined")&&(obj)&&(typeof Event!="undefined")&&(obj.eventPhase);
};
this.currentEvent=null;
this.callListener=function(_396,_397){
if(typeof _396!="function"){
dojo.raise("listener not a function: "+_396);
}
dojo.event.browser.currentEvent.currentTarget=_397;
return _396.call(_397,dojo.event.browser.currentEvent);
};
this._stopPropagation=function(){
dojo.event.browser.currentEvent.cancelBubble=true;
};
this._preventDefault=function(){
dojo.event.browser.currentEvent.returnValue=false;
};
this.keys={KEY_BACKSPACE:8,KEY_TAB:9,KEY_CLEAR:12,KEY_ENTER:13,KEY_SHIFT:16,KEY_CTRL:17,KEY_ALT:18,KEY_PAUSE:19,KEY_CAPS_LOCK:20,KEY_ESCAPE:27,KEY_SPACE:32,KEY_PAGE_UP:33,KEY_PAGE_DOWN:34,KEY_END:35,KEY_HOME:36,KEY_LEFT_ARROW:37,KEY_UP_ARROW:38,KEY_RIGHT_ARROW:39,KEY_DOWN_ARROW:40,KEY_INSERT:45,KEY_DELETE:46,KEY_HELP:47,KEY_LEFT_WINDOW:91,KEY_RIGHT_WINDOW:92,KEY_SELECT:93,KEY_NUMPAD_0:96,KEY_NUMPAD_1:97,KEY_NUMPAD_2:98,KEY_NUMPAD_3:99,KEY_NUMPAD_4:100,KEY_NUMPAD_5:101,KEY_NUMPAD_6:102,KEY_NUMPAD_7:103,KEY_NUMPAD_8:104,KEY_NUMPAD_9:105,KEY_NUMPAD_MULTIPLY:106,KEY_NUMPAD_PLUS:107,KEY_NUMPAD_ENTER:108,KEY_NUMPAD_MINUS:109,KEY_NUMPAD_PERIOD:110,KEY_NUMPAD_DIVIDE:111,KEY_F1:112,KEY_F2:113,KEY_F3:114,KEY_F4:115,KEY_F5:116,KEY_F6:117,KEY_F7:118,KEY_F8:119,KEY_F9:120,KEY_F10:121,KEY_F11:122,KEY_F12:123,KEY_F13:124,KEY_F14:125,KEY_F15:126,KEY_NUM_LOCK:144,KEY_SCROLL_LOCK:145};
this.revKeys=[];
for(var key in this.keys){
this.revKeys[this.keys[key]]=key;
}
this.fixEvent=function(evt,_39a){
if(!evt){
if(window["event"]){
evt=window.event;
}
}
if((evt["type"])&&(evt["type"].indexOf("key")==0)){
evt.keys=this.revKeys;
for(var key in this.keys){
evt[key]=this.keys[key];
}
if(evt["type"]=="keydown"&&dojo.render.html.ie){
switch(evt.keyCode){
case evt.KEY_SHIFT:
case evt.KEY_CTRL:
case evt.KEY_ALT:
case evt.KEY_CAPS_LOCK:
case evt.KEY_LEFT_WINDOW:
case evt.KEY_RIGHT_WINDOW:
case evt.KEY_SELECT:
case evt.KEY_NUM_LOCK:
case evt.KEY_SCROLL_LOCK:
case evt.KEY_NUMPAD_0:
case evt.KEY_NUMPAD_1:
case evt.KEY_NUMPAD_2:
case evt.KEY_NUMPAD_3:
case evt.KEY_NUMPAD_4:
case evt.KEY_NUMPAD_5:
case evt.KEY_NUMPAD_6:
case evt.KEY_NUMPAD_7:
case evt.KEY_NUMPAD_8:
case evt.KEY_NUMPAD_9:
case evt.KEY_NUMPAD_PERIOD:
break;
case evt.KEY_NUMPAD_MULTIPLY:
case evt.KEY_NUMPAD_PLUS:
case evt.KEY_NUMPAD_ENTER:
case evt.KEY_NUMPAD_MINUS:
case evt.KEY_NUMPAD_DIVIDE:
break;
case evt.KEY_PAUSE:
case evt.KEY_TAB:
case evt.KEY_BACKSPACE:
case evt.KEY_ENTER:
case evt.KEY_ESCAPE:
case evt.KEY_PAGE_UP:
case evt.KEY_PAGE_DOWN:
case evt.KEY_END:
case evt.KEY_HOME:
case evt.KEY_LEFT_ARROW:
case evt.KEY_UP_ARROW:
case evt.KEY_RIGHT_ARROW:
case evt.KEY_DOWN_ARROW:
case evt.KEY_INSERT:
case evt.KEY_DELETE:
case evt.KEY_F1:
case evt.KEY_F2:
case evt.KEY_F3:
case evt.KEY_F4:
case evt.KEY_F5:
case evt.KEY_F6:
case evt.KEY_F7:
case evt.KEY_F8:
case evt.KEY_F9:
case evt.KEY_F10:
case evt.KEY_F11:
case evt.KEY_F12:
case evt.KEY_F12:
case evt.KEY_F13:
case evt.KEY_F14:
case evt.KEY_F15:
case evt.KEY_CLEAR:
case evt.KEY_HELP:
evt.key=evt.keyCode;
break;
default:
if(evt.ctrlKey||evt.altKey){
var _39c=evt.keyCode;
if(_39c>=65&&_39c<=90&&evt.shiftKey==false){
_39c+=32;
}
if(_39c>=1&&_39c<=26&&evt.ctrlKey){
_39c+=96;
}
evt.key=String.fromCharCode(_39c);
}
}
}else{
if(evt["type"]=="keypress"){
if(dojo.render.html.opera){
if(evt.which==0){
evt.key=evt.keyCode;
}else{
if(evt.which>0){
switch(evt.which){
case evt.KEY_SHIFT:
case evt.KEY_CTRL:
case evt.KEY_ALT:
case evt.KEY_CAPS_LOCK:
case evt.KEY_NUM_LOCK:
case evt.KEY_SCROLL_LOCK:
break;
case evt.KEY_PAUSE:
case evt.KEY_TAB:
case evt.KEY_BACKSPACE:
case evt.KEY_ENTER:
case evt.KEY_ESCAPE:
evt.key=evt.which;
break;
default:
var _39c=evt.which;
if((evt.ctrlKey||evt.altKey||evt.metaKey)&&(evt.which>=65&&evt.which<=90&&evt.shiftKey==false)){
_39c+=32;
}
evt.key=String.fromCharCode(_39c);
}
}
}
}else{
if(dojo.render.html.ie){
if(!evt.ctrlKey&&!evt.altKey&&evt.keyCode>=evt.KEY_SPACE){
evt.key=String.fromCharCode(evt.keyCode);
}
}else{
if(dojo.render.html.safari){
switch(evt.keyCode){
case 25:
evt.key=evt.KEY_TAB;
evt.shift=true;
break;
case 63232:
evt.key=evt.KEY_UP_ARROW;
break;
case 63233:
evt.key=evt.KEY_DOWN_ARROW;
break;
case 63234:
evt.key=evt.KEY_LEFT_ARROW;
break;
case 63235:
evt.key=evt.KEY_RIGHT_ARROW;
break;
case 63236:
evt.key=evt.KEY_F1;
break;
case 63237:
evt.key=evt.KEY_F2;
break;
case 63238:
evt.key=evt.KEY_F3;
break;
case 63239:
evt.key=evt.KEY_F4;
break;
case 63240:
evt.key=evt.KEY_F5;
break;
case 63241:
evt.key=evt.KEY_F6;
break;
case 63242:
evt.key=evt.KEY_F7;
break;
case 63243:
evt.key=evt.KEY_F8;
break;
case 63244:
evt.key=evt.KEY_F9;
break;
case 63245:
evt.key=evt.KEY_F10;
break;
case 63246:
evt.key=evt.KEY_F11;
break;
case 63247:
evt.key=evt.KEY_F12;
break;
case 63250:
evt.key=evt.KEY_PAUSE;
break;
case 63272:
evt.key=evt.KEY_DELETE;
break;
case 63273:
evt.key=evt.KEY_HOME;
break;
case 63275:
evt.key=evt.KEY_END;
break;
case 63276:
evt.key=evt.KEY_PAGE_UP;
break;
case 63277:
evt.key=evt.KEY_PAGE_DOWN;
break;
case 63302:
evt.key=evt.KEY_INSERT;
break;
case 63248:
case 63249:
case 63289:
break;
default:
evt.key=evt.charCode>=evt.KEY_SPACE?String.fromCharCode(evt.charCode):evt.keyCode;
}
}else{
evt.key=evt.charCode>0?String.fromCharCode(evt.charCode):evt.keyCode;
}
}
}
}
}
}
if(dojo.render.html.ie){
if(!evt.target){
evt.target=evt.srcElement;
}
if(!evt.currentTarget){
evt.currentTarget=(_39a?_39a:evt.srcElement);
}
if(!evt.layerX){
evt.layerX=evt.offsetX;
}
if(!evt.layerY){
evt.layerY=evt.offsetY;
}
var doc=(evt.srcElement&&evt.srcElement.ownerDocument)?evt.srcElement.ownerDocument:document;
var _39e=((dojo.render.html.ie55)||(doc["compatMode"]=="BackCompat"))?doc.body:doc.documentElement;
if(!evt.pageX){
evt.pageX=evt.clientX+(_39e.scrollLeft||0);
}
if(!evt.pageY){
evt.pageY=evt.clientY+(_39e.scrollTop||0);
}
if(evt.type=="mouseover"){
evt.relatedTarget=evt.fromElement;
}
if(evt.type=="mouseout"){
evt.relatedTarget=evt.toElement;
}
this.currentEvent=evt;
evt.callListener=this.callListener;
evt.stopPropagation=this._stopPropagation;
evt.preventDefault=this._preventDefault;
}
return evt;
};
this.stopEvent=function(evt){
if(window.event){
evt.cancelBubble=true;
evt.returnValue=false;
}else{
evt.preventDefault();
evt.stopPropagation();
}
};
};
dojo.provide("dojo.event.*");
dojo.provide("dojo.gfx.color");
dojo.gfx.color.Color=function(r,g,b,a){
if(dojo.lang.isArray(r)){
this.r=r[0];
this.g=r[1];
this.b=r[2];
this.a=r[3]||1;
}else{
if(dojo.lang.isString(r)){
var rgb=dojo.gfx.color.extractRGB(r);
this.r=rgb[0];
this.g=rgb[1];
this.b=rgb[2];
this.a=g||1;
}else{
if(r instanceof dojo.gfx.color.Color){
this.r=r.r;
this.b=r.b;
this.g=r.g;
this.a=r.a;
}else{
this.r=r;
this.g=g;
this.b=b;
this.a=a;
}
}
}
};
dojo.gfx.color.Color.fromArray=function(arr){
return new dojo.gfx.color.Color(arr[0],arr[1],arr[2],arr[3]);
};
dojo.extend(dojo.gfx.color.Color,{toRgb:function(_3a6){
if(_3a6){
return this.toRgba();
}else{
return [this.r,this.g,this.b];
}
},toRgba:function(){
return [this.r,this.g,this.b,this.a];
},toHex:function(){
return dojo.gfx.color.rgb2hex(this.toRgb());
},toCss:function(){
return "rgb("+this.toRgb().join()+")";
},toString:function(){
return this.toHex();
},blend:function(_3a7,_3a8){
var rgb=null;
if(dojo.lang.isArray(_3a7)){
rgb=_3a7;
}else{
if(_3a7 instanceof dojo.gfx.color.Color){
rgb=_3a7.toRgb();
}else{
rgb=new dojo.gfx.color.Color(_3a7).toRgb();
}
}
return dojo.gfx.color.blend(this.toRgb(),rgb,_3a8);
}});
dojo.gfx.color.named={white:[255,255,255],black:[0,0,0],red:[255,0,0],green:[0,255,0],lime:[0,255,0],blue:[0,0,255],navy:[0,0,128],gray:[128,128,128],silver:[192,192,192]};
dojo.gfx.color.blend=function(a,b,_3ac){
if(typeof a=="string"){
return dojo.gfx.color.blendHex(a,b,_3ac);
}
if(!_3ac){
_3ac=0;
}
_3ac=Math.min(Math.max(-1,_3ac),1);
_3ac=((_3ac+1)/2);
var c=[];
for(var x=0;x<3;x++){
c[x]=parseInt(b[x]+((a[x]-b[x])*_3ac));
}
return c;
};
dojo.gfx.color.blendHex=function(a,b,_3b1){
return dojo.gfx.color.rgb2hex(dojo.gfx.color.blend(dojo.gfx.color.hex2rgb(a),dojo.gfx.color.hex2rgb(b),_3b1));
};
dojo.gfx.color.extractRGB=function(_3b2){
var hex="0123456789abcdef";
_3b2=_3b2.toLowerCase();
if(_3b2.indexOf("rgb")==0){
var _3b4=_3b2.match(/rgba*\((\d+), *(\d+), *(\d+)/i);
var ret=_3b4.splice(1,3);
return ret;
}else{
var _3b6=dojo.gfx.color.hex2rgb(_3b2);
if(_3b6){
return _3b6;
}else{
return dojo.gfx.color.named[_3b2]||[255,255,255];
}
}
};
dojo.gfx.color.hex2rgb=function(hex){
var _3b8="0123456789ABCDEF";
var rgb=new Array(3);
if(hex.indexOf("#")==0){
hex=hex.substring(1);
}
hex=hex.toUpperCase();
if(hex.replace(new RegExp("["+_3b8+"]","g"),"")!=""){
return null;
}
if(hex.length==3){
rgb[0]=hex.charAt(0)+hex.charAt(0);
rgb[1]=hex.charAt(1)+hex.charAt(1);
rgb[2]=hex.charAt(2)+hex.charAt(2);
}else{
rgb[0]=hex.substring(0,2);
rgb[1]=hex.substring(2,4);
rgb[2]=hex.substring(4);
}
for(var i=0;i<rgb.length;i++){
rgb[i]=_3b8.indexOf(rgb[i].charAt(0))*16+_3b8.indexOf(rgb[i].charAt(1));
}
return rgb;
};
dojo.gfx.color.rgb2hex=function(r,g,b){
if(dojo.lang.isArray(r)){
g=r[1]||0;
b=r[2]||0;
r=r[0]||0;
}
var ret=dojo.lang.map([r,g,b],function(x){
x=new Number(x);
var s=x.toString(16);
while(s.length<2){
s="0"+s;
}
return s;
});
ret.unshift("#");
return ret.join("");
};
dojo.provide("dojo.lfx.Animation");
dojo.lfx.Line=function(_3c1,end){
this.start=_3c1;
this.end=end;
if(dojo.lang.isArray(_3c1)){
var diff=[];
dojo.lang.forEach(this.start,function(s,i){
diff[i]=this.end[i]-s;
},this);
this.getValue=function(n){
var res=[];
dojo.lang.forEach(this.start,function(s,i){
res[i]=(diff[i]*n)+s;
},this);
return res;
};
}else{
var diff=end-_3c1;
this.getValue=function(n){
return (diff*n)+this.start;
};
}
};
dojo.lfx.easeDefault=function(n){
if(dojo.render.html.khtml){
return (parseFloat("0.5")+((Math.sin((n+parseFloat("1.5"))*Math.PI))/2));
}else{
return (0.5+((Math.sin((n+1.5)*Math.PI))/2));
}
};
dojo.lfx.easeIn=function(n){
return Math.pow(n,3);
};
dojo.lfx.easeOut=function(n){
return (1-Math.pow(1-n,3));
};
dojo.lfx.easeInOut=function(n){
return ((3*Math.pow(n,2))-(2*Math.pow(n,3)));
};
dojo.lfx.IAnimation=function(){
};
dojo.lang.extend(dojo.lfx.IAnimation,{curve:null,duration:1000,easing:null,repeatCount:0,rate:25,handler:null,beforeBegin:null,onBegin:null,onAnimate:null,onEnd:null,onPlay:null,onPause:null,onStop:null,play:null,pause:null,stop:null,connect:function(evt,_3d0,_3d1){
if(!_3d1){
_3d1=_3d0;
_3d0=this;
}
_3d1=dojo.lang.hitch(_3d0,_3d1);
var _3d2=this[evt]||function(){
};
this[evt]=function(){
var ret=_3d2.apply(this,arguments);
_3d1.apply(this,arguments);
return ret;
};
return this;
},fire:function(evt,args){
if(this[evt]){
this[evt].apply(this,(args||[]));
}
return this;
},repeat:function(_3d6){
this.repeatCount=_3d6;
return this;
},_active:false,_paused:false});
dojo.lfx.Animation=function(_3d7,_3d8,_3d9,_3da,_3db,rate){
dojo.lfx.IAnimation.call(this);
if(dojo.lang.isNumber(_3d7)||(!_3d7&&_3d8.getValue)){
rate=_3db;
_3db=_3da;
_3da=_3d9;
_3d9=_3d8;
_3d8=_3d7;
_3d7=null;
}else{
if(_3d7.getValue||dojo.lang.isArray(_3d7)){
rate=_3da;
_3db=_3d9;
_3da=_3d8;
_3d9=_3d7;
_3d8=null;
_3d7=null;
}
}
if(dojo.lang.isArray(_3d9)){
this.curve=new dojo.lfx.Line(_3d9[0],_3d9[1]);
}else{
this.curve=_3d9;
}
if(_3d8!=null&&_3d8>0){
this.duration=_3d8;
}
if(_3db){
this.repeatCount=_3db;
}
if(rate){
this.rate=rate;
}
if(_3d7){
dojo.lang.forEach(["handler","beforeBegin","onBegin","onEnd","onPlay","onStop","onAnimate"],function(item){
if(_3d7[item]){
this.connect(item,_3d7[item]);
}
},this);
}
if(_3da&&dojo.lang.isFunction(_3da)){
this.easing=_3da;
}
};
dojo.inherits(dojo.lfx.Animation,dojo.lfx.IAnimation);
dojo.lang.extend(dojo.lfx.Animation,{_startTime:null,_endTime:null,_timer:null,_percent:0,_startRepeatCount:0,play:function(_3de,_3df){
if(_3df){
clearTimeout(this._timer);
this._active=false;
this._paused=false;
this._percent=0;
}else{
if(this._active&&!this._paused){
return this;
}
}
this.fire("handler",["beforeBegin"]);
this.fire("beforeBegin");
if(_3de>0){
setTimeout(dojo.lang.hitch(this,function(){
this.play(null,_3df);
}),_3de);
return this;
}
this._startTime=new Date().valueOf();
if(this._paused){
this._startTime-=(this.duration*this._percent/100);
}
this._endTime=this._startTime+this.duration;
this._active=true;
this._paused=false;
var step=this._percent/100;
var _3e1=this.curve.getValue(step);
if(this._percent==0){
if(!this._startRepeatCount){
this._startRepeatCount=this.repeatCount;
}
this.fire("handler",["begin",_3e1]);
this.fire("onBegin",[_3e1]);
}
this.fire("handler",["play",_3e1]);
this.fire("onPlay",[_3e1]);
this._cycle();
return this;
},pause:function(){
clearTimeout(this._timer);
if(!this._active){
return this;
}
this._paused=true;
var _3e2=this.curve.getValue(this._percent/100);
this.fire("handler",["pause",_3e2]);
this.fire("onPause",[_3e2]);
return this;
},gotoPercent:function(pct,_3e4){
clearTimeout(this._timer);
this._active=true;
this._paused=true;
this._percent=pct;
if(_3e4){
this.play();
}
return this;
},stop:function(_3e5){
clearTimeout(this._timer);
var step=this._percent/100;
if(_3e5){
step=1;
}
var _3e7=this.curve.getValue(step);
this.fire("handler",["stop",_3e7]);
this.fire("onStop",[_3e7]);
this._active=false;
this._paused=false;
return this;
},status:function(){
if(this._active){
return this._paused?"paused":"playing";
}else{
return "stopped";
}
return this;
},_cycle:function(){
clearTimeout(this._timer);
if(this._active){
var curr=new Date().valueOf();
var step=(curr-this._startTime)/(this._endTime-this._startTime);
if(step>=1){
step=1;
this._percent=100;
}else{
this._percent=step*100;
}
if((this.easing)&&(dojo.lang.isFunction(this.easing))){
step=this.easing(step);
}
var _3ea=this.curve.getValue(step);
this.fire("handler",["animate",_3ea]);
this.fire("onAnimate",[_3ea]);
if(step<1){
this._timer=setTimeout(dojo.lang.hitch(this,"_cycle"),this.rate);
}else{
this._active=false;
this.fire("handler",["end"]);
this.fire("onEnd");
if(this.repeatCount>0){
this.repeatCount--;
this.play(null,true);
}else{
if(this.repeatCount==-1){
this.play(null,true);
}else{
if(this._startRepeatCount){
this.repeatCount=this._startRepeatCount;
this._startRepeatCount=0;
}
}
}
}
}
return this;
}});
dojo.lfx.Combine=function(_3eb){
dojo.lfx.IAnimation.call(this);
this._anims=[];
this._animsEnded=0;
var _3ec=arguments;
if(_3ec.length==1&&(dojo.lang.isArray(_3ec[0])||dojo.lang.isArrayLike(_3ec[0]))){
_3ec=_3ec[0];
}
dojo.lang.forEach(_3ec,function(anim){
this._anims.push(anim);
anim.connect("onEnd",dojo.lang.hitch(this,"_onAnimsEnded"));
},this);
};
dojo.inherits(dojo.lfx.Combine,dojo.lfx.IAnimation);
dojo.lang.extend(dojo.lfx.Combine,{_animsEnded:0,play:function(_3ee,_3ef){
if(!this._anims.length){
return this;
}
this.fire("beforeBegin");
if(_3ee>0){
setTimeout(dojo.lang.hitch(this,function(){
this.play(null,_3ef);
}),_3ee);
return this;
}
if(_3ef||this._anims[0].percent==0){
this.fire("onBegin");
}
this.fire("onPlay");
this._animsCall("play",null,_3ef);
return this;
},pause:function(){
this.fire("onPause");
this._animsCall("pause");
return this;
},stop:function(_3f0){
this.fire("onStop");
this._animsCall("stop",_3f0);
return this;
},_onAnimsEnded:function(){
this._animsEnded++;
if(this._animsEnded>=this._anims.length){
this.fire("onEnd");
}
return this;
},_animsCall:function(_3f1){
var args=[];
if(arguments.length>1){
for(var i=1;i<arguments.length;i++){
args.push(arguments[i]);
}
}
var _3f4=this;
dojo.lang.forEach(this._anims,function(anim){
anim[_3f1](args);
},_3f4);
return this;
}});
dojo.lfx.Chain=function(_3f6){
dojo.lfx.IAnimation.call(this);
this._anims=[];
this._currAnim=-1;
var _3f7=arguments;
if(_3f7.length==1&&(dojo.lang.isArray(_3f7[0])||dojo.lang.isArrayLike(_3f7[0]))){
_3f7=_3f7[0];
}
var _3f8=this;
dojo.lang.forEach(_3f7,function(anim,i,_3fb){
this._anims.push(anim);
if(i<_3fb.length-1){
anim.connect("onEnd",dojo.lang.hitch(this,"_playNext"));
}else{
anim.connect("onEnd",dojo.lang.hitch(this,function(){
this.fire("onEnd");
}));
}
},this);
};
dojo.inherits(dojo.lfx.Chain,dojo.lfx.IAnimation);
dojo.lang.extend(dojo.lfx.Chain,{_currAnim:-1,play:function(_3fc,_3fd){
if(!this._anims.length){
return this;
}
if(_3fd||!this._anims[this._currAnim]){
this._currAnim=0;
}
var _3fe=this._anims[this._currAnim];
this.fire("beforeBegin");
if(_3fc>0){
setTimeout(dojo.lang.hitch(this,function(){
this.play(null,_3fd);
}),_3fc);
return this;
}
if(_3fe){
if(this._currAnim==0){
this.fire("handler",["begin",this._currAnim]);
this.fire("onBegin",[this._currAnim]);
}
this.fire("onPlay",[this._currAnim]);
_3fe.play(null,_3fd);
}
return this;
},pause:function(){
if(this._anims[this._currAnim]){
this._anims[this._currAnim].pause();
this.fire("onPause",[this._currAnim]);
}
return this;
},playPause:function(){
if(this._anims.length==0){
return this;
}
if(this._currAnim==-1){
this._currAnim=0;
}
var _3ff=this._anims[this._currAnim];
if(_3ff){
if(!_3ff._active||_3ff._paused){
this.play();
}else{
this.pause();
}
}
return this;
},stop:function(){
var _400=this._anims[this._currAnim];
if(_400){
_400.stop();
this.fire("onStop",[this._currAnim]);
}
return _400;
},_playNext:function(){
if(this._currAnim==-1||this._anims.length==0){
return this;
}
this._currAnim++;
if(this._anims[this._currAnim]){
this._anims[this._currAnim].play(null,true);
}
return this;
}});
dojo.lfx.combine=function(_401){
var _402=arguments;
if(dojo.lang.isArray(arguments[0])){
_402=arguments[0];
}
if(_402.length==1){
return _402[0];
}
return new dojo.lfx.Combine(_402);
};
dojo.lfx.chain=function(_403){
var _404=arguments;
if(dojo.lang.isArray(arguments[0])){
_404=arguments[0];
}
if(_404.length==1){
return _404[0];
}
return new dojo.lfx.Chain(_404);
};
dojo.provide("dojo.html.common");
dojo.lang.mixin(dojo.html,dojo.dom);
dojo.html.body=function(){
dojo.deprecated("dojo.html.body() moved to dojo.body()","0.5");
return dojo.body();
};
dojo.html.getEventTarget=function(evt){
if(!evt){
evt=dojo.global().event||{};
}
var t=(evt.srcElement?evt.srcElement:(evt.target?evt.target:null));
while((t)&&(t.nodeType!=1)){
t=t.parentNode;
}
return t;
};
dojo.html.getViewport=function(){
var _407=dojo.global();
var _408=dojo.doc();
var w=0;
var h=0;
if(dojo.render.html.mozilla){
w=_408.documentElement.clientWidth;
h=_407.innerHeight;
}else{
if(!dojo.render.html.opera&&_407.innerWidth){
w=_407.innerWidth;
h=_407.innerHeight;
}else{
if(!dojo.render.html.opera&&dojo.exists(_408,"documentElement.clientWidth")){
var w2=_408.documentElement.clientWidth;
if(!w||w2&&w2<w){
w=w2;
}
h=_408.documentElement.clientHeight;
}else{
if(dojo.body().clientWidth){
w=dojo.body().clientWidth;
h=dojo.body().clientHeight;
}
}
}
}
return {width:w,height:h};
};
dojo.html.getScroll=function(){
var _40c=dojo.global();
var _40d=dojo.doc();
var top=_40c.pageYOffset||_40d.documentElement.scrollTop||dojo.body().scrollTop||0;
var left=_40c.pageXOffset||_40d.documentElement.scrollLeft||dojo.body().scrollLeft||0;
return {top:top,left:left,offset:{x:left,y:top}};
};
dojo.html.getParentByType=function(node,type){
var _412=dojo.doc();
var _413=dojo.byId(node);
type=type.toLowerCase();
while((_413)&&(_413.nodeName.toLowerCase()!=type)){
if(_413==(_412["body"]||_412["documentElement"])){
return null;
}
_413=_413.parentNode;
}
return _413;
};
dojo.html.getAttribute=function(node,attr){
node=dojo.byId(node);
if((!node)||(!node.getAttribute)){
return null;
}
var ta=typeof attr=="string"?attr:new String(attr);
var v=node.getAttribute(ta.toUpperCase());
if((v)&&(typeof v=="string")&&(v!="")){
return v;
}
if(v&&v.value){
return v.value;
}
if((node.getAttributeNode)&&(node.getAttributeNode(ta))){
return (node.getAttributeNode(ta)).value;
}else{
if(node.getAttribute(ta)){
return node.getAttribute(ta);
}else{
if(node.getAttribute(ta.toLowerCase())){
return node.getAttribute(ta.toLowerCase());
}
}
}
return null;
};
dojo.html.hasAttribute=function(node,attr){
return dojo.html.getAttribute(dojo.byId(node),attr)?true:false;
};
dojo.html.getCursorPosition=function(e){
e=e||dojo.global().event;
var _41b={x:0,y:0};
if(e.pageX||e.pageY){
_41b.x=e.pageX;
_41b.y=e.pageY;
}else{
var de=dojo.doc().documentElement;
var db=dojo.body();
_41b.x=e.clientX+((de||db)["scrollLeft"])-((de||db)["clientLeft"]);
_41b.y=e.clientY+((de||db)["scrollTop"])-((de||db)["clientTop"]);
}
return _41b;
};
dojo.html.isTag=function(node){
node=dojo.byId(node);
if(node&&node.tagName){
for(var i=1;i<arguments.length;i++){
if(node.tagName.toLowerCase()==String(arguments[i]).toLowerCase()){
return String(arguments[i]).toLowerCase();
}
}
}
return "";
};
if(dojo.render.html.ie&&!dojo.render.html.ie70){
if(window.location.href.substr(0,6).toLowerCase()!="https:"){
(function(){
var _420=dojo.doc().createElement("script");
_420.src="javascript:'dojo.html.createExternalElement=function(doc, tag){ return doc.createElement(tag); }'";
dojo.doc().getElementsByTagName("head")[0].appendChild(_420);
})();
}
}else{
dojo.html.createExternalElement=function(doc,tag){
return doc.createElement(tag);
};
}
dojo.html._callDeprecated=function(_423,_424,args,_426,_427){
dojo.deprecated("dojo.html."+_423,"replaced by dojo.html."+_424+"("+(_426?"node, {"+_426+": "+_426+"}":"")+")"+(_427?"."+_427:""),"0.5");
var _428=[];
if(_426){
var _429={};
_429[_426]=args[1];
_428.push(args[0]);
_428.push(_429);
}else{
_428=args;
}
var ret=dojo.html[_424].apply(dojo.html,args);
if(_427){
return ret[_427];
}else{
return ret;
}
};
dojo.html.getViewportWidth=function(){
return dojo.html._callDeprecated("getViewportWidth","getViewport",arguments,null,"width");
};
dojo.html.getViewportHeight=function(){
return dojo.html._callDeprecated("getViewportHeight","getViewport",arguments,null,"height");
};
dojo.html.getViewportSize=function(){
return dojo.html._callDeprecated("getViewportSize","getViewport",arguments);
};
dojo.html.getScrollTop=function(){
return dojo.html._callDeprecated("getScrollTop","getScroll",arguments,null,"top");
};
dojo.html.getScrollLeft=function(){
return dojo.html._callDeprecated("getScrollLeft","getScroll",arguments,null,"left");
};
dojo.html.getScrollOffset=function(){
return dojo.html._callDeprecated("getScrollOffset","getScroll",arguments,null,"offset");
};
dojo.provide("dojo.uri.Uri");
dojo.uri=new function(){
this.dojoUri=function(uri){
return new dojo.uri.Uri(dojo.hostenv.getBaseScriptUri(),uri);
};
this.moduleUri=function(_42c,uri){
var loc=dojo.hostenv.getModuleSymbols(_42c).join("/");
if(!loc){
return null;
}
if(loc.lastIndexOf("/")!=loc.length-1){
loc+="/";
}
return new dojo.uri.Uri(dojo.hostenv.getBaseScriptUri()+loc,uri);
};
this.Uri=function(){
var uri=arguments[0];
for(var i=1;i<arguments.length;i++){
if(!arguments[i]){
continue;
}
var _431=new dojo.uri.Uri(arguments[i].toString());
var _432=new dojo.uri.Uri(uri.toString());
if((_431.path=="")&&(_431.scheme==null)&&(_431.authority==null)&&(_431.query==null)){
if(_431.fragment!=null){
_432.fragment=_431.fragment;
}
_431=_432;
}else{
if(_431.scheme==null){
_431.scheme=_432.scheme;
if(_431.authority==null){
_431.authority=_432.authority;
if(_431.path.charAt(0)!="/"){
var path=_432.path.substring(0,_432.path.lastIndexOf("/")+1)+_431.path;
var segs=path.split("/");
for(var j=0;j<segs.length;j++){
if(segs[j]=="."){
if(j==segs.length-1){
segs[j]="";
}else{
segs.splice(j,1);
j--;
}
}else{
if(j>0&&!(j==1&&segs[0]=="")&&segs[j]==".."&&segs[j-1]!=".."){
if(j==segs.length-1){
segs.splice(j,1);
segs[j-1]="";
}else{
segs.splice(j-1,2);
j-=2;
}
}
}
}
_431.path=segs.join("/");
}
}
}
}
uri="";
if(_431.scheme!=null){
uri+=_431.scheme+":";
}
if(_431.authority!=null){
uri+="//"+_431.authority;
}
uri+=_431.path;
if(_431.query!=null){
uri+="?"+_431.query;
}
if(_431.fragment!=null){
uri+="#"+_431.fragment;
}
}
this.uri=uri.toString();
var _436="^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$";
var r=this.uri.match(new RegExp(_436));
this.scheme=r[2]||(r[1]?"":null);
this.authority=r[4]||(r[3]?"":null);
this.path=r[5];
this.query=r[7]||(r[6]?"":null);
this.fragment=r[9]||(r[8]?"":null);
if(this.authority!=null){
_436="^((([^:]+:)?([^@]+))@)?([^:]*)(:([0-9]+))?$";
r=this.authority.match(new RegExp(_436));
this.user=r[3]||null;
this.password=r[4]||null;
this.host=r[5];
this.port=r[7]||null;
}
this.toString=function(){
return this.uri;
};
};
};
dojo.provide("dojo.html.style");
dojo.html.getClass=function(node){
node=dojo.byId(node);
if(!node){
return "";
}
var cs="";
if(node.className){
cs=node.className;
}else{
if(dojo.html.hasAttribute(node,"class")){
cs=dojo.html.getAttribute(node,"class");
}
}
return cs.replace(/^\s+|\s+$/g,"");
};
dojo.html.getClasses=function(node){
var c=dojo.html.getClass(node);
return (c=="")?[]:c.split(/\s+/g);
};
dojo.html.hasClass=function(node,_43d){
return (new RegExp("(^|\\s+)"+_43d+"(\\s+|$)")).test(dojo.html.getClass(node));
};
dojo.html.prependClass=function(node,_43f){
_43f+=" "+dojo.html.getClass(node);
return dojo.html.setClass(node,_43f);
};
dojo.html.addClass=function(node,_441){
if(dojo.html.hasClass(node,_441)){
return false;
}
_441=(dojo.html.getClass(node)+" "+_441).replace(/^\s+|\s+$/g,"");
return dojo.html.setClass(node,_441);
};
dojo.html.setClass=function(node,_443){
node=dojo.byId(node);
var cs=new String(_443);
try{
if(typeof node.className=="string"){
node.className=cs;
}else{
if(node.setAttribute){
node.setAttribute("class",_443);
node.className=cs;
}else{
return false;
}
}
}
catch(e){
dojo.debug("dojo.html.setClass() failed",e);
}
return true;
};
dojo.html.removeClass=function(node,_446,_447){
try{
if(!_447){
var _448=dojo.html.getClass(node).replace(new RegExp("(^|\\s+)"+_446+"(\\s+|$)"),"$1$2");
}else{
var _448=dojo.html.getClass(node).replace(_446,"");
}
dojo.html.setClass(node,_448);
}
catch(e){
dojo.debug("dojo.html.removeClass() failed",e);
}
return true;
};
dojo.html.replaceClass=function(node,_44a,_44b){
dojo.html.removeClass(node,_44b);
dojo.html.addClass(node,_44a);
};
dojo.html.classMatchType={ContainsAll:0,ContainsAny:1,IsOnly:2};
dojo.html.getElementsByClass=function(_44c,_44d,_44e,_44f,_450){
_450=false;
var _451=dojo.doc();
_44d=dojo.byId(_44d)||_451;
var _452=_44c.split(/\s+/g);
var _453=[];
if(_44f!=1&&_44f!=2){
_44f=0;
}
var _454=new RegExp("(\\s|^)(("+_452.join(")|(")+"))(\\s|$)");
var _455=_452.join(" ").length;
var _456=[];
if(!_450&&_451.evaluate){
var _457=".//"+(_44e||"*")+"[contains(";
if(_44f!=dojo.html.classMatchType.ContainsAny){
_457+="concat(' ',@class,' '), ' "+_452.join(" ') and contains(concat(' ',@class,' '), ' ")+" ')";
if(_44f==2){
_457+=" and string-length(@class)="+_455+"]";
}else{
_457+="]";
}
}else{
_457+="concat(' ',@class,' '), ' "+_452.join(" ') or contains(concat(' ',@class,' '), ' ")+" ')]";
}
var _458=_451.evaluate(_457,_44d,null,XPathResult.ANY_TYPE,null);
var _459=_458.iterateNext();
while(_459){
try{
_456.push(_459);
_459=_458.iterateNext();
}
catch(e){
break;
}
}
return _456;
}else{
if(!_44e){
_44e="*";
}
_456=_44d.getElementsByTagName(_44e);
var node,i=0;
outer:
while(node=_456[i++]){
var _45c=dojo.html.getClasses(node);
if(_45c.length==0){
continue outer;
}
var _45d=0;
for(var j=0;j<_45c.length;j++){
if(_454.test(_45c[j])){
if(_44f==dojo.html.classMatchType.ContainsAny){
_453.push(node);
continue outer;
}else{
_45d++;
}
}else{
if(_44f==dojo.html.classMatchType.IsOnly){
continue outer;
}
}
}
if(_45d==_452.length){
if((_44f==dojo.html.classMatchType.IsOnly)&&(_45d==_45c.length)){
_453.push(node);
}else{
if(_44f==dojo.html.classMatchType.ContainsAll){
_453.push(node);
}
}
}
}
return _453;
}
};
dojo.html.getElementsByClassName=dojo.html.getElementsByClass;
dojo.html.toCamelCase=function(_45f){
var arr=_45f.split("-"),cc=arr[0];
for(var i=1;i<arr.length;i++){
cc+=arr[i].charAt(0).toUpperCase()+arr[i].substring(1);
}
return cc;
};
dojo.html.toSelectorCase=function(_463){
return _463.replace(/([A-Z])/g,"-$1").toLowerCase();
};
dojo.html.getComputedStyle=function(node,_465,_466){
node=dojo.byId(node);
var _465=dojo.html.toSelectorCase(_465);
var _467=dojo.html.toCamelCase(_465);
if(!node||!node.style){
return _466;
}else{
if(document.defaultView&&dojo.html.isDescendantOf(node,node.ownerDocument)){
try{
var cs=document.defaultView.getComputedStyle(node,"");
if(cs){
return cs.getPropertyValue(_465);
}
}
catch(e){
if(node.style.getPropertyValue){
return node.style.getPropertyValue(_465);
}else{
return _466;
}
}
}else{
if(node.currentStyle){
return node.currentStyle[_467];
}
}
}
if(node.style.getPropertyValue){
return node.style.getPropertyValue(_465);
}else{
return _466;
}
};
dojo.html.getStyleProperty=function(node,_46a){
node=dojo.byId(node);
return (node&&node.style?node.style[dojo.html.toCamelCase(_46a)]:undefined);
};
dojo.html.getStyle=function(node,_46c){
var _46d=dojo.html.getStyleProperty(node,_46c);
return (_46d?_46d:dojo.html.getComputedStyle(node,_46c));
};
dojo.html.setStyle=function(node,_46f,_470){
node=dojo.byId(node);
if(node&&node.style){
var _471=dojo.html.toCamelCase(_46f);
node.style[_471]=_470;
}
};
dojo.html.setStyleText=function(_472,text){
try{
_472.style.cssText=text;
}
catch(e){
_472.setAttribute("style",text);
}
};
dojo.html.copyStyle=function(_474,_475){
if(!_475.style.cssText){
_474.setAttribute("style",_475.getAttribute("style"));
}else{
_474.style.cssText=_475.style.cssText;
}
dojo.html.addClass(_474,dojo.html.getClass(_475));
};
dojo.html.getUnitValue=function(node,_477,_478){
var s=dojo.html.getComputedStyle(node,_477);
if((!s)||((s=="auto")&&(_478))){
return {value:0,units:"px"};
}
var _47a=s.match(/(\-?[\d.]+)([a-z%]*)/i);
if(!_47a){
return dojo.html.getUnitValue.bad;
}
return {value:Number(_47a[1]),units:_47a[2].toLowerCase()};
};
dojo.html.getUnitValue.bad={value:NaN,units:""};
dojo.html.getPixelValue=function(node,_47c,_47d){
var _47e=dojo.html.getUnitValue(node,_47c,_47d);
if(isNaN(_47e.value)){
return 0;
}
if((_47e.value)&&(_47e.units!="px")){
return NaN;
}
return _47e.value;
};
dojo.html.setPositivePixelValue=function(node,_480,_481){
if(isNaN(_481)){
return false;
}
node.style[_480]=Math.max(0,_481)+"px";
return true;
};
dojo.html.styleSheet=null;
dojo.html.insertCssRule=function(_482,_483,_484){
if(!dojo.html.styleSheet){
if(document.createStyleSheet){
dojo.html.styleSheet=document.createStyleSheet();
}else{
if(document.styleSheets[0]){
dojo.html.styleSheet=document.styleSheets[0];
}else{
return null;
}
}
}
if(arguments.length<3){
if(dojo.html.styleSheet.cssRules){
_484=dojo.html.styleSheet.cssRules.length;
}else{
if(dojo.html.styleSheet.rules){
_484=dojo.html.styleSheet.rules.length;
}else{
return null;
}
}
}
if(dojo.html.styleSheet.insertRule){
var rule=_482+" { "+_483+" }";
return dojo.html.styleSheet.insertRule(rule,_484);
}else{
if(dojo.html.styleSheet.addRule){
return dojo.html.styleSheet.addRule(_482,_483,_484);
}else{
return null;
}
}
};
dojo.html.removeCssRule=function(_486){
if(!dojo.html.styleSheet){
dojo.debug("no stylesheet defined for removing rules");
return false;
}
if(dojo.render.html.ie){
if(!_486){
_486=dojo.html.styleSheet.rules.length;
dojo.html.styleSheet.removeRule(_486);
}
}else{
if(document.styleSheets[0]){
if(!_486){
_486=dojo.html.styleSheet.cssRules.length;
}
dojo.html.styleSheet.deleteRule(_486);
}
}
return true;
};
dojo.html._insertedCssFiles=[];
dojo.html.insertCssFile=function(URI,doc,_489,_48a){
if(!URI){
return;
}
if(!doc){
doc=document;
}
var _48b=dojo.hostenv.getText(URI,false,_48a);
if(_48b===null){
return;
}
_48b=dojo.html.fixPathsInCssText(_48b,URI);
if(_489){
var idx=-1,node,ent=dojo.html._insertedCssFiles;
for(var i=0;i<ent.length;i++){
if((ent[i].doc==doc)&&(ent[i].cssText==_48b)){
idx=i;
node=ent[i].nodeRef;
break;
}
}
if(node){
var _490=doc.getElementsByTagName("style");
for(var i=0;i<_490.length;i++){
if(_490[i]==node){
return;
}
}
dojo.html._insertedCssFiles.shift(idx,1);
}
}
var _491=dojo.html.insertCssText(_48b,doc);
dojo.html._insertedCssFiles.push({"doc":doc,"cssText":_48b,"nodeRef":_491});
if(_491&&djConfig.isDebug){
_491.setAttribute("dbgHref",URI);
}
return _491;
};
dojo.html.insertCssText=function(_492,doc,URI){
if(!_492){
return;
}
if(!doc){
doc=document;
}
if(URI){
_492=dojo.html.fixPathsInCssText(_492,URI);
}
var _495=doc.createElement("style");
_495.setAttribute("type","text/css");
var head=doc.getElementsByTagName("head")[0];
if(!head){
dojo.debug("No head tag in document, aborting styles");
return;
}else{
head.appendChild(_495);
}
if(_495.styleSheet){
var _497=function(){
try{
_495.styleSheet.cssText=_492;
}
catch(e){
dojo.debug(e);
}
};
if(_495.styleSheet.disabled){
setTimeout(_497,10);
}else{
_497();
}
}else{
var _498=doc.createTextNode(_492);
_495.appendChild(_498);
}
return _495;
};
dojo.html.fixPathsInCssText=function(_499,URI){
if(!_499||!URI){
return;
}
var _49b,str="",url="",_49e="[\\t\\s\\w\\(\\)\\/\\.\\\\'\"-:#=&?~]+";
var _49f=new RegExp("url\\(\\s*("+_49e+")\\s*\\)");
var _4a0=/(file|https?|ftps?):\/\//;
regexTrim=new RegExp("^[\\s]*(['\"]?)("+_49e+")\\1[\\s]*?$");
if(dojo.render.html.ie55||dojo.render.html.ie60){
var _4a1=new RegExp("AlphaImageLoader\\((.*)src=['\"]("+_49e+")['\"]");
while(_49b=_4a1.exec(_499)){
url=_49b[2].replace(regexTrim,"$2");
if(!_4a0.exec(url)){
url=(new dojo.uri.Uri(URI,url).toString());
}
str+=_499.substring(0,_49b.index)+"AlphaImageLoader("+_49b[1]+"src='"+url+"'";
_499=_499.substr(_49b.index+_49b[0].length);
}
_499=str+_499;
str="";
}
while(_49b=_49f.exec(_499)){
url=_49b[1].replace(regexTrim,"$2");
if(!_4a0.exec(url)){
url=(new dojo.uri.Uri(URI,url).toString());
}
str+=_499.substring(0,_49b.index)+"url("+url+")";
_499=_499.substr(_49b.index+_49b[0].length);
}
return str+_499;
};
dojo.html.setActiveStyleSheet=function(_4a2){
var i=0,a,els=dojo.doc().getElementsByTagName("link");
while(a=els[i++]){
if(a.getAttribute("rel").indexOf("style")!=-1&&a.getAttribute("title")){
a.disabled=true;
if(a.getAttribute("title")==_4a2){
a.disabled=false;
}
}
}
};
dojo.html.getActiveStyleSheet=function(){
var i=0,a,els=dojo.doc().getElementsByTagName("link");
while(a=els[i++]){
if(a.getAttribute("rel").indexOf("style")!=-1&&a.getAttribute("title")&&!a.disabled){
return a.getAttribute("title");
}
}
return null;
};
dojo.html.getPreferredStyleSheet=function(){
var i=0,a,els=dojo.doc().getElementsByTagName("link");
while(a=els[i++]){
if(a.getAttribute("rel").indexOf("style")!=-1&&a.getAttribute("rel").indexOf("alt")==-1&&a.getAttribute("title")){
return a.getAttribute("title");
}
}
return null;
};
dojo.html.applyBrowserClass=function(node){
var drh=dojo.render.html;
var _4ae={dj_ie:drh.ie,dj_ie55:drh.ie55,dj_ie6:drh.ie60,dj_ie7:drh.ie70,dj_iequirks:drh.ie&&drh.quirks,dj_opera:drh.opera,dj_opera8:drh.opera&&(Math.floor(dojo.render.version)==8),dj_opera9:drh.opera&&(Math.floor(dojo.render.version)==9),dj_khtml:drh.khtml,dj_safari:drh.safari,dj_gecko:drh.mozilla};
for(var p in _4ae){
if(_4ae[p]){
dojo.html.addClass(node,p);
}
}
};
dojo.provide("dojo.html.display");
dojo.html._toggle=function(node,_4b1,_4b2){
node=dojo.byId(node);
_4b2(node,!_4b1(node));
return _4b1(node);
};
dojo.html.show=function(node){
node=dojo.byId(node);
if(dojo.html.getStyleProperty(node,"display")=="none"){
dojo.html.setStyle(node,"display",(node.dojoDisplayCache||""));
node.dojoDisplayCache=undefined;
}
};
dojo.html.hide=function(node){
node=dojo.byId(node);
if(typeof node["dojoDisplayCache"]=="undefined"){
var d=dojo.html.getStyleProperty(node,"display");
if(d!="none"){
node.dojoDisplayCache=d;
}
}
dojo.html.setStyle(node,"display","none");
};
dojo.html.setShowing=function(node,_4b7){
dojo.html[(_4b7?"show":"hide")](node);
};
dojo.html.isShowing=function(node){
return (dojo.html.getStyleProperty(node,"display")!="none");
};
dojo.html.toggleShowing=function(node){
return dojo.html._toggle(node,dojo.html.isShowing,dojo.html.setShowing);
};
dojo.html.displayMap={tr:"",td:"",th:"",img:"inline",span:"inline",input:"inline",button:"inline"};
dojo.html.suggestDisplayByTagName=function(node){
node=dojo.byId(node);
if(node&&node.tagName){
var tag=node.tagName.toLowerCase();
return (tag in dojo.html.displayMap?dojo.html.displayMap[tag]:"block");
}
};
dojo.html.setDisplay=function(node,_4bd){
dojo.html.setStyle(node,"display",((_4bd instanceof String||typeof _4bd=="string")?_4bd:(_4bd?dojo.html.suggestDisplayByTagName(node):"none")));
};
dojo.html.isDisplayed=function(node){
return (dojo.html.getComputedStyle(node,"display")!="none");
};
dojo.html.toggleDisplay=function(node){
return dojo.html._toggle(node,dojo.html.isDisplayed,dojo.html.setDisplay);
};
dojo.html.setVisibility=function(node,_4c1){
dojo.html.setStyle(node,"visibility",((_4c1 instanceof String||typeof _4c1=="string")?_4c1:(_4c1?"visible":"hidden")));
};
dojo.html.isVisible=function(node){
return (dojo.html.getComputedStyle(node,"visibility")!="hidden");
};
dojo.html.toggleVisibility=function(node){
return dojo.html._toggle(node,dojo.html.isVisible,dojo.html.setVisibility);
};
dojo.html.setOpacity=function(node,_4c5,_4c6){
node=dojo.byId(node);
var h=dojo.render.html;
if(!_4c6){
if(_4c5>=1){
if(h.ie){
dojo.html.clearOpacity(node);
return;
}else{
_4c5=0.999999;
}
}else{
if(_4c5<0){
_4c5=0;
}
}
}
if(h.ie){
if(node.nodeName.toLowerCase()=="tr"){
var tds=node.getElementsByTagName("td");
for(var x=0;x<tds.length;x++){
tds[x].style.filter="Alpha(Opacity="+_4c5*100+")";
}
}
node.style.filter="Alpha(Opacity="+_4c5*100+")";
}else{
if(h.moz){
node.style.opacity=_4c5;
node.style.MozOpacity=_4c5;
}else{
if(h.safari){
node.style.opacity=_4c5;
node.style.KhtmlOpacity=_4c5;
}else{
node.style.opacity=_4c5;
}
}
}
};
dojo.html.clearOpacity=function(node){
node=dojo.byId(node);
var ns=node.style;
var h=dojo.render.html;
if(h.ie){
try{
if(node.filters&&node.filters.alpha){
ns.filter="";
}
}
catch(e){
}
}else{
if(h.moz){
ns.opacity=1;
ns.MozOpacity=1;
}else{
if(h.safari){
ns.opacity=1;
ns.KhtmlOpacity=1;
}else{
ns.opacity=1;
}
}
}
};
dojo.html.getOpacity=function(node){
node=dojo.byId(node);
var h=dojo.render.html;
if(h.ie){
var opac=(node.filters&&node.filters.alpha&&typeof node.filters.alpha.opacity=="number"?node.filters.alpha.opacity:100)/100;
}else{
var opac=node.style.opacity||node.style.MozOpacity||node.style.KhtmlOpacity||1;
}
return opac>=0.999999?1:Number(opac);
};
dojo.provide("dojo.html.color");
dojo.html.getBackgroundColor=function(node){
node=dojo.byId(node);
var _4d1;
do{
_4d1=dojo.html.getStyle(node,"background-color");
if(_4d1.toLowerCase()=="rgba(0, 0, 0, 0)"){
_4d1="transparent";
}
if(node==document.getElementsByTagName("body")[0]){
node=null;
break;
}
node=node.parentNode;
}while(node&&dojo.lang.inArray(["transparent",""],_4d1));
if(_4d1=="transparent"){
_4d1=[255,255,255,0];
}else{
_4d1=dojo.gfx.color.extractRGB(_4d1);
}
return _4d1;
};
dojo.provide("dojo.html.layout");
dojo.html.sumAncestorProperties=function(node,prop){
node=dojo.byId(node);
if(!node){
return 0;
}
var _4d4=0;
while(node){
if(dojo.html.getComputedStyle(node,"position")=="fixed"){
return 0;
}
var val=node[prop];
if(val){
_4d4+=val-0;
if(node==dojo.body()){
break;
}
}
node=node.parentNode;
}
return _4d4;
};
dojo.html.setStyleAttributes=function(node,_4d7){
node=dojo.byId(node);
var _4d8=_4d7.replace(/(;)?\s*$/,"").split(";");
for(var i=0;i<_4d8.length;i++){
var _4da=_4d8[i].split(":");
var name=_4da[0].replace(/\s*$/,"").replace(/^\s*/,"").toLowerCase();
var _4dc=_4da[1].replace(/\s*$/,"").replace(/^\s*/,"");
switch(name){
case "opacity":
dojo.html.setOpacity(node,_4dc);
break;
case "content-height":
dojo.html.setContentBox(node,{height:_4dc});
break;
case "content-width":
dojo.html.setContentBox(node,{width:_4dc});
break;
case "outer-height":
dojo.html.setMarginBox(node,{height:_4dc});
break;
case "outer-width":
dojo.html.setMarginBox(node,{width:_4dc});
break;
default:
node.style[dojo.html.toCamelCase(name)]=_4dc;
}
}
};
dojo.html.boxSizing={MARGIN_BOX:"margin-box",BORDER_BOX:"border-box",PADDING_BOX:"padding-box",CONTENT_BOX:"content-box"};
dojo.html.getAbsolutePosition=dojo.html.abs=function(node,_4de,_4df){
node=dojo.byId(node,node.ownerDocument);
var ret={x:0,y:0};
var bs=dojo.html.boxSizing;
if(!_4df){
_4df=bs.CONTENT_BOX;
}
var _4e2=2;
var _4e3;
switch(_4df){
case bs.MARGIN_BOX:
_4e3=3;
break;
case bs.BORDER_BOX:
_4e3=2;
break;
case bs.PADDING_BOX:
default:
_4e3=1;
break;
case bs.CONTENT_BOX:
_4e3=0;
break;
}
var h=dojo.render.html;
var db=document["body"]||document["documentElement"];
if(h.ie){
with(node.getBoundingClientRect()){
ret.x=left-2;
ret.y=top-2;
}
}else{
if(document.getBoxObjectFor){
_4e2=1;
try{
var bo=document.getBoxObjectFor(node);
ret.x=bo.x-dojo.html.sumAncestorProperties(node,"scrollLeft");
ret.y=bo.y-dojo.html.sumAncestorProperties(node,"scrollTop");
}
catch(e){
}
}else{
if(node["offsetParent"]){
var _4e7;
if((h.safari)&&(node.style.getPropertyValue("position")=="absolute")&&(node.parentNode==db)){
_4e7=db;
}else{
_4e7=db.parentNode;
}
if(node.parentNode!=db){
var nd=node;
if(dojo.render.html.opera){
nd=db;
}
ret.x-=dojo.html.sumAncestorProperties(nd,"scrollLeft");
ret.y-=dojo.html.sumAncestorProperties(nd,"scrollTop");
}
var _4e9=node;
do{
var n=_4e9["offsetLeft"];
if(!h.opera||n>0){
ret.x+=isNaN(n)?0:n;
}
var m=_4e9["offsetTop"];
ret.y+=isNaN(m)?0:m;
_4e9=_4e9.offsetParent;
}while((_4e9!=_4e7)&&(_4e9!=null));
}else{
if(node["x"]&&node["y"]){
ret.x+=isNaN(node.x)?0:node.x;
ret.y+=isNaN(node.y)?0:node.y;
}
}
}
}
if(_4de){
var _4ec=dojo.html.getScroll();
ret.y+=_4ec.top;
ret.x+=_4ec.left;
}
var _4ed=[dojo.html.getPaddingExtent,dojo.html.getBorderExtent,dojo.html.getMarginExtent];
if(_4e2>_4e3){
for(var i=_4e3;i<_4e2;++i){
ret.y+=_4ed[i](node,"top");
ret.x+=_4ed[i](node,"left");
}
}else{
if(_4e2<_4e3){
for(var i=_4e3;i>_4e2;--i){
ret.y-=_4ed[i-1](node,"top");
ret.x-=_4ed[i-1](node,"left");
}
}
}
ret.top=ret.y;
ret.left=ret.x;
return ret;
};
dojo.html.isPositionAbsolute=function(node){
return (dojo.html.getComputedStyle(node,"position")=="absolute");
};
dojo.html._sumPixelValues=function(node,_4f1,_4f2){
var _4f3=0;
for(var x=0;x<_4f1.length;x++){
_4f3+=dojo.html.getPixelValue(node,_4f1[x],_4f2);
}
return _4f3;
};
dojo.html.getMargin=function(node){
return {width:dojo.html._sumPixelValues(node,["margin-left","margin-right"],(dojo.html.getComputedStyle(node,"position")=="absolute")),height:dojo.html._sumPixelValues(node,["margin-top","margin-bottom"],(dojo.html.getComputedStyle(node,"position")=="absolute"))};
};
dojo.html.getBorder=function(node){
return {width:dojo.html.getBorderExtent(node,"left")+dojo.html.getBorderExtent(node,"right"),height:dojo.html.getBorderExtent(node,"top")+dojo.html.getBorderExtent(node,"bottom")};
};
dojo.html.getBorderExtent=function(node,side){
return (dojo.html.getStyle(node,"border-"+side+"-style")=="none"?0:dojo.html.getPixelValue(node,"border-"+side+"-width"));
};
dojo.html.getMarginExtent=function(node,side){
return dojo.html._sumPixelValues(node,["margin-"+side],dojo.html.isPositionAbsolute(node));
};
dojo.html.getPaddingExtent=function(node,side){
return dojo.html._sumPixelValues(node,["padding-"+side],true);
};
dojo.html.getPadding=function(node){
return {width:dojo.html._sumPixelValues(node,["padding-left","padding-right"],true),height:dojo.html._sumPixelValues(node,["padding-top","padding-bottom"],true)};
};
dojo.html.getPadBorder=function(node){
var pad=dojo.html.getPadding(node);
var _500=dojo.html.getBorder(node);
return {width:pad.width+_500.width,height:pad.height+_500.height};
};
dojo.html.getBoxSizing=function(node){
var h=dojo.render.html;
var bs=dojo.html.boxSizing;
if(((h.ie)||(h.opera))&&node.nodeName!="IMG"){
var cm=document["compatMode"];
if((cm=="BackCompat")||(cm=="QuirksMode")){
return bs.BORDER_BOX;
}else{
return bs.CONTENT_BOX;
}
}else{
if(arguments.length==0){
node=document.documentElement;
}
var _505=dojo.html.getStyle(node,"-moz-box-sizing");
if(!_505){
_505=dojo.html.getStyle(node,"box-sizing");
}
return (_505?_505:bs.CONTENT_BOX);
}
};
dojo.html.isBorderBox=function(node){
return (dojo.html.getBoxSizing(node)==dojo.html.boxSizing.BORDER_BOX);
};
dojo.html.getBorderBox=function(node){
node=dojo.byId(node);
return {width:node.offsetWidth,height:node.offsetHeight};
};
dojo.html.getPaddingBox=function(node){
var box=dojo.html.getBorderBox(node);
var _50a=dojo.html.getBorder(node);
return {width:box.width-_50a.width,height:box.height-_50a.height};
};
dojo.html.getContentBox=function(node){
node=dojo.byId(node);
var _50c=dojo.html.getPadBorder(node);
return {width:node.offsetWidth-_50c.width,height:node.offsetHeight-_50c.height};
};
dojo.html.setContentBox=function(node,args){
node=dojo.byId(node);
var _50f=0;
var _510=0;
var isbb=dojo.html.isBorderBox(node);
var _512=(isbb?dojo.html.getPadBorder(node):{width:0,height:0});
var ret={};
if(typeof args.width!="undefined"){
_50f=args.width+_512.width;
ret.width=dojo.html.setPositivePixelValue(node,"width",_50f);
}
if(typeof args.height!="undefined"){
_510=args.height+_512.height;
ret.height=dojo.html.setPositivePixelValue(node,"height",_510);
}
return ret;
};
dojo.html.getMarginBox=function(node){
var _515=dojo.html.getBorderBox(node);
var _516=dojo.html.getMargin(node);
return {width:_515.width+_516.width,height:_515.height+_516.height};
};
dojo.html.setMarginBox=function(node,args){
node=dojo.byId(node);
var _519=0;
var _51a=0;
var isbb=dojo.html.isBorderBox(node);
var _51c=(!isbb?dojo.html.getPadBorder(node):{width:0,height:0});
var _51d=dojo.html.getMargin(node);
var ret={};
if(typeof args.width!="undefined"){
_519=args.width-_51c.width;
_519-=_51d.width;
ret.width=dojo.html.setPositivePixelValue(node,"width",_519);
}
if(typeof args.height!="undefined"){
_51a=args.height-_51c.height;
_51a-=_51d.height;
ret.height=dojo.html.setPositivePixelValue(node,"height",_51a);
}
return ret;
};
dojo.html.getElementBox=function(node,type){
var bs=dojo.html.boxSizing;
switch(type){
case bs.MARGIN_BOX:
return dojo.html.getMarginBox(node);
case bs.BORDER_BOX:
return dojo.html.getBorderBox(node);
case bs.PADDING_BOX:
return dojo.html.getPaddingBox(node);
case bs.CONTENT_BOX:
default:
return dojo.html.getContentBox(node);
}
};
dojo.html.toCoordinateObject=dojo.html.toCoordinateArray=function(_522,_523,_524){
if(_522 instanceof Array||typeof _522=="array"){
dojo.deprecated("dojo.html.toCoordinateArray","use dojo.html.toCoordinateObject({left: , top: , width: , height: }) instead","0.5");
while(_522.length<4){
_522.push(0);
}
while(_522.length>4){
_522.pop();
}
var ret={left:_522[0],top:_522[1],width:_522[2],height:_522[3]};
}else{
if(!_522.nodeType&&!(_522 instanceof String||typeof _522=="string")&&("width" in _522||"height" in _522||"left" in _522||"x" in _522||"top" in _522||"y" in _522)){
var ret={left:_522.left||_522.x||0,top:_522.top||_522.y||0,width:_522.width||0,height:_522.height||0};
}else{
var node=dojo.byId(_522);
var pos=dojo.html.abs(node,_523,_524);
var _528=dojo.html.getMarginBox(node);
var ret={left:pos.left,top:pos.top,width:_528.width,height:_528.height};
}
}
ret.x=ret.left;
ret.y=ret.top;
return ret;
};
dojo.html.setMarginBoxWidth=dojo.html.setOuterWidth=function(node,_52a){
return dojo.html._callDeprecated("setMarginBoxWidth","setMarginBox",arguments,"width");
};
dojo.html.setMarginBoxHeight=dojo.html.setOuterHeight=function(){
return dojo.html._callDeprecated("setMarginBoxHeight","setMarginBox",arguments,"height");
};
dojo.html.getMarginBoxWidth=dojo.html.getOuterWidth=function(){
return dojo.html._callDeprecated("getMarginBoxWidth","getMarginBox",arguments,null,"width");
};
dojo.html.getMarginBoxHeight=dojo.html.getOuterHeight=function(){
return dojo.html._callDeprecated("getMarginBoxHeight","getMarginBox",arguments,null,"height");
};
dojo.html.getTotalOffset=function(node,type,_52d){
return dojo.html._callDeprecated("getTotalOffset","getAbsolutePosition",arguments,null,type);
};
dojo.html.getAbsoluteX=function(node,_52f){
return dojo.html._callDeprecated("getAbsoluteX","getAbsolutePosition",arguments,null,"x");
};
dojo.html.getAbsoluteY=function(node,_531){
return dojo.html._callDeprecated("getAbsoluteY","getAbsolutePosition",arguments,null,"y");
};
dojo.html.totalOffsetLeft=function(node,_533){
return dojo.html._callDeprecated("totalOffsetLeft","getAbsolutePosition",arguments,null,"left");
};
dojo.html.totalOffsetTop=function(node,_535){
return dojo.html._callDeprecated("totalOffsetTop","getAbsolutePosition",arguments,null,"top");
};
dojo.html.getMarginWidth=function(node){
return dojo.html._callDeprecated("getMarginWidth","getMargin",arguments,null,"width");
};
dojo.html.getMarginHeight=function(node){
return dojo.html._callDeprecated("getMarginHeight","getMargin",arguments,null,"height");
};
dojo.html.getBorderWidth=function(node){
return dojo.html._callDeprecated("getBorderWidth","getBorder",arguments,null,"width");
};
dojo.html.getBorderHeight=function(node){
return dojo.html._callDeprecated("getBorderHeight","getBorder",arguments,null,"height");
};
dojo.html.getPaddingWidth=function(node){
return dojo.html._callDeprecated("getPaddingWidth","getPadding",arguments,null,"width");
};
dojo.html.getPaddingHeight=function(node){
return dojo.html._callDeprecated("getPaddingHeight","getPadding",arguments,null,"height");
};
dojo.html.getPadBorderWidth=function(node){
return dojo.html._callDeprecated("getPadBorderWidth","getPadBorder",arguments,null,"width");
};
dojo.html.getPadBorderHeight=function(node){
return dojo.html._callDeprecated("getPadBorderHeight","getPadBorder",arguments,null,"height");
};
dojo.html.getBorderBoxWidth=dojo.html.getInnerWidth=function(){
return dojo.html._callDeprecated("getBorderBoxWidth","getBorderBox",arguments,null,"width");
};
dojo.html.getBorderBoxHeight=dojo.html.getInnerHeight=function(){
return dojo.html._callDeprecated("getBorderBoxHeight","getBorderBox",arguments,null,"height");
};
dojo.html.getContentBoxWidth=dojo.html.getContentWidth=function(){
return dojo.html._callDeprecated("getContentBoxWidth","getContentBox",arguments,null,"width");
};
dojo.html.getContentBoxHeight=dojo.html.getContentHeight=function(){
return dojo.html._callDeprecated("getContentBoxHeight","getContentBox",arguments,null,"height");
};
dojo.html.setContentBoxWidth=dojo.html.setContentWidth=function(node,_53f){
return dojo.html._callDeprecated("setContentBoxWidth","setContentBox",arguments,"width");
};
dojo.html.setContentBoxHeight=dojo.html.setContentHeight=function(node,_541){
return dojo.html._callDeprecated("setContentBoxHeight","setContentBox",arguments,"height");
};
dojo.provide("dojo.lfx.html");
dojo.lfx.html._byId=function(_542){
if(!_542){
return [];
}
if(dojo.lang.isArrayLike(_542)){
if(!_542.alreadyChecked){
var n=[];
dojo.lang.forEach(_542,function(node){
n.push(dojo.byId(node));
});
n.alreadyChecked=true;
return n;
}else{
return _542;
}
}else{
var n=[];
n.push(dojo.byId(_542));
n.alreadyChecked=true;
return n;
}
};
dojo.lfx.html.propertyAnimation=function(_545,_546,_547,_548,_549){
_545=dojo.lfx.html._byId(_545);
var _54a={"propertyMap":_546,"nodes":_545,"duration":_547,"easing":_548||dojo.lfx.easeDefault};
var _54b=function(args){
if(args.nodes.length==1){
var pm=args.propertyMap;
if(!dojo.lang.isArray(args.propertyMap)){
var parr=[];
for(var _54f in pm){
pm[_54f].property=_54f;
parr.push(pm[_54f]);
}
pm=args.propertyMap=parr;
}
dojo.lang.forEach(pm,function(prop){
if(dj_undef("start",prop)){
if(prop.property!="opacity"){
prop.start=parseInt(dojo.html.getComputedStyle(args.nodes[0],prop.property));
}else{
prop.start=dojo.html.getOpacity(args.nodes[0]);
}
}
});
}
};
var _551=function(_552){
var _553=[];
dojo.lang.forEach(_552,function(c){
_553.push(Math.round(c));
});
return _553;
};
var _555=function(n,_557){
n=dojo.byId(n);
if(!n||!n.style){
return;
}
for(var s in _557){
try{
if(s=="opacity"){
dojo.html.setOpacity(n,_557[s]);
}else{
n.style[s]=_557[s];
}
}
catch(e){
dojo.debug(e);
}
}
};
var _559=function(_55a){
this._properties=_55a;
this.diffs=new Array(_55a.length);
dojo.lang.forEach(_55a,function(prop,i){
if(dojo.lang.isFunction(prop.start)){
prop.start=prop.start(prop,i);
}
if(dojo.lang.isFunction(prop.end)){
prop.end=prop.end(prop,i);
}
if(dojo.lang.isArray(prop.start)){
this.diffs[i]=null;
}else{
if(prop.start instanceof dojo.gfx.color.Color){
prop.startRgb=prop.start.toRgb();
prop.endRgb=prop.end.toRgb();
}else{
this.diffs[i]=prop.end-prop.start;
}
}
},this);
this.getValue=function(n){
var ret={};
dojo.lang.forEach(this._properties,function(prop,i){
var _561=null;
if(dojo.lang.isArray(prop.start)){
}else{
if(prop.start instanceof dojo.gfx.color.Color){
_561=(prop.units||"rgb")+"(";
for(var j=0;j<prop.startRgb.length;j++){
_561+=Math.round(((prop.endRgb[j]-prop.startRgb[j])*n)+prop.startRgb[j])+(j<prop.startRgb.length-1?",":"");
}
_561+=")";
}else{
_561=((this.diffs[i])*n)+prop.start+(prop.property!="opacity"?prop.units||"px":"");
}
}
ret[dojo.html.toCamelCase(prop.property)]=_561;
},this);
return ret;
};
};
var anim=new dojo.lfx.Animation({beforeBegin:function(){
_54b(_54a);
anim.curve=new _559(_54a.propertyMap);
},onAnimate:function(_564){
dojo.lang.forEach(_54a.nodes,function(node){
_555(node,_564);
});
}},_54a.duration,null,_54a.easing);
if(_549){
for(var x in _549){
if(dojo.lang.isFunction(_549[x])){
anim.connect(x,anim,_549[x]);
}
}
}
return anim;
};
dojo.lfx.html._makeFadeable=function(_567){
var _568=function(node){
if(dojo.render.html.ie){
if((node.style.zoom.length==0)&&(dojo.html.getStyle(node,"zoom")=="normal")){
node.style.zoom="1";
}
if((node.style.width.length==0)&&(dojo.html.getStyle(node,"width")=="auto")){
node.style.width="auto";
}
}
};
if(dojo.lang.isArrayLike(_567)){
dojo.lang.forEach(_567,_568);
}else{
_568(_567);
}
};
dojo.lfx.html.fade=function(_56a,_56b,_56c,_56d,_56e){
_56a=dojo.lfx.html._byId(_56a);
var _56f={property:"opacity"};
if(!dj_undef("start",_56b)){
_56f.start=_56b.start;
}else{
_56f.start=function(){
return dojo.html.getOpacity(_56a[0]);
};
}
if(!dj_undef("end",_56b)){
_56f.end=_56b.end;
}else{
dojo.raise("dojo.lfx.html.fade needs an end value");
}
var anim=dojo.lfx.propertyAnimation(_56a,[_56f],_56c,_56d);
anim.connect("beforeBegin",function(){
dojo.lfx.html._makeFadeable(_56a);
});
if(_56e){
anim.connect("onEnd",function(){
_56e(_56a,anim);
});
}
return anim;
};
dojo.lfx.html.fadeIn=function(_571,_572,_573,_574){
return dojo.lfx.html.fade(_571,{end:1},_572,_573,_574);
};
dojo.lfx.html.fadeOut=function(_575,_576,_577,_578){
return dojo.lfx.html.fade(_575,{end:0},_576,_577,_578);
};
dojo.lfx.html.fadeShow=function(_579,_57a,_57b,_57c){
_579=dojo.lfx.html._byId(_579);
dojo.lang.forEach(_579,function(node){
dojo.html.setOpacity(node,0);
});
var anim=dojo.lfx.html.fadeIn(_579,_57a,_57b,_57c);
anim.connect("beforeBegin",function(){
if(dojo.lang.isArrayLike(_579)){
dojo.lang.forEach(_579,dojo.html.show);
}else{
dojo.html.show(_579);
}
});
return anim;
};
dojo.lfx.html.fadeHide=function(_57f,_580,_581,_582){
var anim=dojo.lfx.html.fadeOut(_57f,_580,_581,function(){
if(dojo.lang.isArrayLike(_57f)){
dojo.lang.forEach(_57f,dojo.html.hide);
}else{
dojo.html.hide(_57f);
}
if(_582){
_582(_57f,anim);
}
});
return anim;
};
dojo.lfx.html.wipeIn=function(_584,_585,_586,_587){
_584=dojo.lfx.html._byId(_584);
var _588=[];
dojo.lang.forEach(_584,function(node){
var _58a={};
var _58b,_58c,_58d;
with(node.style){
_58b=top;
_58c=left;
_58d=position;
top="-9999px";
left="-9999px";
position="absolute";
display="";
}
var _58e=dojo.html.getBorderBox(node).height;
with(node.style){
top=_58b;
left=_58c;
position=_58d;
display="none";
}
var anim=dojo.lfx.propertyAnimation(node,{"height":{start:1,end:function(){
return _58e;
}}},_585,_586);
anim.connect("beforeBegin",function(){
_58a.overflow=node.style.overflow;
_58a.height=node.style.height;
with(node.style){
overflow="hidden";
_58e="1px";
}
dojo.html.show(node);
});
anim.connect("onEnd",function(){
with(node.style){
overflow=_58a.overflow;
_58e=_58a.height;
}
if(_587){
_587(node,anim);
}
});
_588.push(anim);
});
return dojo.lfx.combine(_588);
};
dojo.lfx.html.wipeOut=function(_590,_591,_592,_593){
_590=dojo.lfx.html._byId(_590);
var _594=[];
dojo.lang.forEach(_590,function(node){
var _596={};
var anim=dojo.lfx.propertyAnimation(node,{"height":{start:function(){
return dojo.html.getContentBox(node).height;
},end:1}},_591,_592,{"beforeBegin":function(){
_596.overflow=node.style.overflow;
_596.height=node.style.height;
with(node.style){
overflow="hidden";
}
dojo.html.show(node);
},"onEnd":function(){
dojo.html.hide(node);
with(node.style){
overflow=_596.overflow;
height=_596.height;
}
if(_593){
_593(node,anim);
}
}});
_594.push(anim);
});
return dojo.lfx.combine(_594);
};
dojo.lfx.html.slideTo=function(_598,_599,_59a,_59b,_59c){
_598=dojo.lfx.html._byId(_598);
var _59d=[];
var _59e=dojo.html.getComputedStyle;
if(dojo.lang.isArray(_599)){
dojo.deprecated("dojo.lfx.html.slideTo(node, array)","use dojo.lfx.html.slideTo(node, {top: value, left: value});","0.5");
_599={top:_599[0],left:_599[1]};
}
dojo.lang.forEach(_598,function(node){
var top=null;
var left=null;
var init=(function(){
var _5a3=node;
return function(){
var pos=_59e(_5a3,"position");
top=(pos=="absolute"?node.offsetTop:parseInt(_59e(node,"top"))||0);
left=(pos=="absolute"?node.offsetLeft:parseInt(_59e(node,"left"))||0);
if(!dojo.lang.inArray(["absolute","relative"],pos)){
var ret=dojo.html.abs(_5a3,true);
dojo.html.setStyleAttributes(_5a3,"position:absolute;top:"+ret.y+"px;left:"+ret.x+"px;");
top=ret.y;
left=ret.x;
}
};
})();
init();
var anim=dojo.lfx.propertyAnimation(node,{"top":{start:top,end:(_599.top||0)},"left":{start:left,end:(_599.left||0)}},_59a,_59b,{"beforeBegin":init});
if(_59c){
anim.connect("onEnd",function(){
_59c(_598,anim);
});
}
_59d.push(anim);
});
return dojo.lfx.combine(_59d);
};
dojo.lfx.html.slideBy=function(_5a7,_5a8,_5a9,_5aa,_5ab){
_5a7=dojo.lfx.html._byId(_5a7);
var _5ac=[];
var _5ad=dojo.html.getComputedStyle;
if(dojo.lang.isArray(_5a8)){
dojo.deprecated("dojo.lfx.html.slideBy(node, array)","use dojo.lfx.html.slideBy(node, {top: value, left: value});","0.5");
_5a8={top:_5a8[0],left:_5a8[1]};
}
dojo.lang.forEach(_5a7,function(node){
var top=null;
var left=null;
var init=(function(){
var _5b2=node;
return function(){
var pos=_5ad(_5b2,"position");
top=(pos=="absolute"?node.offsetTop:parseInt(_5ad(node,"top"))||0);
left=(pos=="absolute"?node.offsetLeft:parseInt(_5ad(node,"left"))||0);
if(!dojo.lang.inArray(["absolute","relative"],pos)){
var ret=dojo.html.abs(_5b2,true);
dojo.html.setStyleAttributes(_5b2,"position:absolute;top:"+ret.y+"px;left:"+ret.x+"px;");
top=ret.y;
left=ret.x;
}
};
})();
init();
var anim=dojo.lfx.propertyAnimation(node,{"top":{start:top,end:top+(_5a8.top||0)},"left":{start:left,end:left+(_5a8.left||0)}},_5a9,_5aa).connect("beforeBegin",init);
if(_5ab){
anim.connect("onEnd",function(){
_5ab(_5a7,anim);
});
}
_5ac.push(anim);
});
return dojo.lfx.combine(_5ac);
};
dojo.lfx.html.explode=function(_5b6,_5b7,_5b8,_5b9,_5ba){
var h=dojo.html;
_5b6=dojo.byId(_5b6);
_5b7=dojo.byId(_5b7);
var _5bc=h.toCoordinateObject(_5b6,true);
var _5bd=document.createElement("div");
h.copyStyle(_5bd,_5b7);
if(_5b7.explodeClassName){
_5bd.className=_5b7.explodeClassName;
}
with(_5bd.style){
position="absolute";
display="none";
var _5be=h.getStyle(_5b6,"background-color");
backgroundColor=_5be?_5be.toLowerCase():"transparent";
backgroundColor=(backgroundColor=="transparent")?"rgb(221, 221, 221)":backgroundColor;
}
dojo.body().appendChild(_5bd);
with(_5b7.style){
visibility="hidden";
display="block";
}
var _5bf=h.toCoordinateObject(_5b7,true);
with(_5b7.style){
display="none";
visibility="visible";
}
var _5c0={opacity:{start:0.5,end:1}};
dojo.lang.forEach(["height","width","top","left"],function(type){
_5c0[type]={start:_5bc[type],end:_5bf[type]};
});
var anim=new dojo.lfx.propertyAnimation(_5bd,_5c0,_5b8,_5b9,{"beforeBegin":function(){
h.setDisplay(_5bd,"block");
},"onEnd":function(){
h.setDisplay(_5b7,"block");
_5bd.parentNode.removeChild(_5bd);
}});
if(_5ba){
anim.connect("onEnd",function(){
_5ba(_5b7,anim);
});
}
return anim;
};
dojo.lfx.html.implode=function(_5c3,end,_5c5,_5c6,_5c7){
var h=dojo.html;
_5c3=dojo.byId(_5c3);
end=dojo.byId(end);
var _5c9=dojo.html.toCoordinateObject(_5c3,true);
var _5ca=dojo.html.toCoordinateObject(end,true);
var _5cb=document.createElement("div");
dojo.html.copyStyle(_5cb,_5c3);
if(_5c3.explodeClassName){
_5cb.className=_5c3.explodeClassName;
}
dojo.html.setOpacity(_5cb,0.3);
with(_5cb.style){
position="absolute";
display="none";
backgroundColor=h.getStyle(_5c3,"background-color").toLowerCase();
}
dojo.body().appendChild(_5cb);
var _5cc={opacity:{start:1,end:0.5}};
dojo.lang.forEach(["height","width","top","left"],function(type){
_5cc[type]={start:_5c9[type],end:_5ca[type]};
});
var anim=new dojo.lfx.propertyAnimation(_5cb,_5cc,_5c5,_5c6,{"beforeBegin":function(){
dojo.html.hide(_5c3);
dojo.html.show(_5cb);
},"onEnd":function(){
_5cb.parentNode.removeChild(_5cb);
}});
if(_5c7){
anim.connect("onEnd",function(){
_5c7(_5c3,anim);
});
}
return anim;
};
dojo.lfx.html.highlight=function(_5cf,_5d0,_5d1,_5d2,_5d3){
_5cf=dojo.lfx.html._byId(_5cf);
var _5d4=[];
dojo.lang.forEach(_5cf,function(node){
var _5d6=dojo.html.getBackgroundColor(node);
var bg=dojo.html.getStyle(node,"background-color").toLowerCase();
var _5d8=dojo.html.getStyle(node,"background-image");
var _5d9=(bg=="transparent"||bg=="rgba(0, 0, 0, 0)");
while(_5d6.length>3){
_5d6.pop();
}
var rgb=new dojo.gfx.color.Color(_5d0);
var _5db=new dojo.gfx.color.Color(_5d6);
var anim=dojo.lfx.propertyAnimation(node,{"background-color":{start:rgb,end:_5db}},_5d1,_5d2,{"beforeBegin":function(){
if(_5d8){
node.style.backgroundImage="none";
}
node.style.backgroundColor="rgb("+rgb.toRgb().join(",")+")";
},"onEnd":function(){
if(_5d8){
node.style.backgroundImage=_5d8;
}
if(_5d9){
node.style.backgroundColor="transparent";
}
if(_5d3){
_5d3(node,anim);
}
}});
_5d4.push(anim);
});
return dojo.lfx.combine(_5d4);
};
dojo.lfx.html.unhighlight=function(_5dd,_5de,_5df,_5e0,_5e1){
_5dd=dojo.lfx.html._byId(_5dd);
var _5e2=[];
dojo.lang.forEach(_5dd,function(node){
var _5e4=new dojo.gfx.color.Color(dojo.html.getBackgroundColor(node));
var rgb=new dojo.gfx.color.Color(_5de);
var _5e6=dojo.html.getStyle(node,"background-image");
var anim=dojo.lfx.propertyAnimation(node,{"background-color":{start:_5e4,end:rgb}},_5df,_5e0,{"beforeBegin":function(){
if(_5e6){
node.style.backgroundImage="none";
}
node.style.backgroundColor="rgb("+_5e4.toRgb().join(",")+")";
},"onEnd":function(){
if(_5e1){
_5e1(node,anim);
}
}});
_5e2.push(anim);
});
return dojo.lfx.combine(_5e2);
};
dojo.lang.mixin(dojo.lfx,dojo.lfx.html);
dojo.provide("dojo.lfx.*");


__CPAN_EDITION__ ajax build.txt

Files baked into this package:

dojoGuardStart.js,
../src/bootstrap1.js,
../src/loader.js,
dojoGuardEnd.js,
../src/hostenv_browser.js,
../src/bootstrap2.js,
../src/string/common.js,
../src/string.js,
../src/lang/common.js,
../src/lang/extras.js,
../src/io/common.js,
../src/lang/array.js,
../src/lang/func.js,
../src/string/extras.js,
../src/dom.js,
../src/undo/browser.js,
../src/io/BrowserIO.js,
../src/io/cookie.js,
../src/io/__package__.js,
../src/event/common.js,
../src/event/topic.js,
../src/event/browser.js,
../src/event/__package__.js,
../src/gfx/color.js,
../src/lfx/Animation.js,
../src/html/common.js,
../src/uri/Uri.js,
../src/html/style.js,
../src/html/display.js,
../src/html/color.js,
../src/html/layout.js,
../src/lfx/html.js,
../src/lfx/__package__.js

		
__CPAN_EDITION__ browserio dojo.js
/*
	Copyright (c) 2004-2006, The Dojo Foundation
	All Rights Reserved.

	Licensed under the Academic Free License version 2.1 or above OR the
	modified BSD license. For more information on Dojo licensing, see:

		http://dojotoolkit.org/community/licensing.shtml
*/

/*
	This is a compiled version of Dojo, built for deployment and not for
	development. To get an editable version, please visit:

		http://dojotoolkit.org

	for documentation and information on getting the source.
*/

if(typeof dojo=="undefined"){
var dj_global=this;
var dj_currentContext=this;
function dj_undef(_1,_2){
return (typeof (_2||dj_currentContext)[_1]=="undefined");
}
if(dj_undef("djConfig",this)){
var djConfig={};
}
if(dj_undef("dojo",this)){
var dojo={};
}
dojo.global=function(){
return dj_currentContext;
};
dojo.locale=djConfig.locale;
dojo.version={major:0,minor:4,patch:1,flag:"",revision:Number("$Rev: 6824 $".match(/[0-9]+/)[0]),toString:function(){
with(dojo.version){
return major+"."+minor+"."+patch+flag+" ("+revision+")";
}
}};
dojo.evalProp=function(_3,_4,_5){
if((!_4)||(!_3)){
return undefined;
}
if(!dj_undef(_3,_4)){
return _4[_3];
}
return (_5?(_4[_3]={}):undefined);
};
dojo.parseObjPath=function(_6,_7,_8){
var _9=(_7||dojo.global());
var _a=_6.split(".");
var _b=_a.pop();
for(var i=0,l=_a.length;i<l&&_9;i++){
_9=dojo.evalProp(_a[i],_9,_8);
}
return {obj:_9,prop:_b};
};
dojo.evalObjPath=function(_e,_f){
if(typeof _e!="string"){
return dojo.global();
}
if(_e.indexOf(".")==-1){
return dojo.evalProp(_e,dojo.global(),_f);
}
var ref=dojo.parseObjPath(_e,dojo.global(),_f);
if(ref){
return dojo.evalProp(ref.prop,ref.obj,_f);
}
return null;
};
dojo.errorToString=function(_11){
if(!dj_undef("message",_11)){
return _11.message;
}else{
if(!dj_undef("description",_11)){
return _11.description;
}else{
return _11;
}
}
};
dojo.raise=function(_12,_13){
if(_13){
_12=_12+": "+dojo.errorToString(_13);
}else{
_12=dojo.errorToString(_12);
}
try{
if(djConfig.isDebug){
dojo.hostenv.println("FATAL exception raised: "+_12);
}
}
catch(e){
}
throw _13||Error(_12);
};
dojo.debug=function(){
};
dojo.debugShallow=function(obj){
};
dojo.profile={start:function(){
},end:function(){
},stop:function(){
},dump:function(){
}};
function dj_eval(_15){
return dj_global.eval?dj_global.eval(_15):eval(_15);
}
dojo.unimplemented=function(_16,_17){
var _18="'"+_16+"' not implemented";
if(_17!=null){
_18+=" "+_17;
}
dojo.raise(_18);
};
dojo.deprecated=function(_19,_1a,_1b){
var _1c="DEPRECATED: "+_19;
if(_1a){
_1c+=" "+_1a;
}
if(_1b){
_1c+=" -- will be removed in version: "+_1b;
}
dojo.debug(_1c);
};
dojo.render=(function(){
function vscaffold(_1d,_1e){
var tmp={capable:false,support:{builtin:false,plugin:false},prefixes:_1d};
for(var i=0;i<_1e.length;i++){
tmp[_1e[i]]=false;
}
return tmp;
}
return {name:"",ver:dojo.version,os:{win:false,linux:false,osx:false},html:vscaffold(["html"],["ie","opera","khtml","safari","moz"]),svg:vscaffold(["svg"],["corel","adobe","batik"]),vml:vscaffold(["vml"],["ie"]),swf:vscaffold(["Swf","Flash","Mm"],["mm"]),swt:vscaffold(["Swt"],["ibm"])};
})();
dojo.hostenv=(function(){
var _21={isDebug:false,allowQueryConfig:false,baseScriptUri:"",baseRelativePath:"",libraryScriptUri:"",iePreventClobber:false,ieClobberMinimal:true,preventBackButtonFix:true,delayMozLoadingFix:false,searchIds:[],parseWidgets:true};
if(typeof djConfig=="undefined"){
djConfig=_21;
}else{
for(var _22 in _21){
if(typeof djConfig[_22]=="undefined"){
djConfig[_22]=_21[_22];
}
}
}
return {name_:"(unset)",version_:"(unset)",getName:function(){
return this.name_;
},getVersion:function(){
return this.version_;
},getText:function(uri){
dojo.unimplemented("getText","uri="+uri);
}};
})();
dojo.hostenv.getBaseScriptUri=function(){
if(djConfig.baseScriptUri.length){
return djConfig.baseScriptUri;
}
var uri=new String(djConfig.libraryScriptUri||djConfig.baseRelativePath);
if(!uri){
dojo.raise("Nothing returned by getLibraryScriptUri(): "+uri);
}
var _25=uri.lastIndexOf("/");
djConfig.baseScriptUri=djConfig.baseRelativePath;
return djConfig.baseScriptUri;
};
(function(){
var _26={pkgFileName:"__package__",loading_modules_:{},loaded_modules_:{},addedToLoadingCount:[],removedFromLoadingCount:[],inFlightCount:0,modulePrefixes_:{dojo:{name:"dojo",value:"src"}},setModulePrefix:function(_27,_28){
this.modulePrefixes_[_27]={name:_27,value:_28};
},moduleHasPrefix:function(_29){
var mp=this.modulePrefixes_;
return Boolean(mp[_29]&&mp[_29].value);
},getModulePrefix:function(_2b){
if(this.moduleHasPrefix(_2b)){
return this.modulePrefixes_[_2b].value;
}
return _2b;
},getTextStack:[],loadUriStack:[],loadedUris:[],post_load_:false,modulesLoadedListeners:[],unloadListeners:[],loadNotifying:false};
for(var _2c in _26){
dojo.hostenv[_2c]=_26[_2c];
}
})();
dojo.hostenv.loadPath=function(_2d,_2e,cb){
var uri;
if(_2d.charAt(0)=="/"||_2d.match(/^\w+:/)){
uri=_2d;
}else{
uri=this.getBaseScriptUri()+_2d;
}
if(djConfig.cacheBust&&dojo.render.html.capable){
uri+="?"+String(djConfig.cacheBust).replace(/\W+/g,"");
}
try{
return !_2e?this.loadUri(uri,cb):this.loadUriAndCheck(uri,_2e,cb);
}
catch(e){
dojo.debug(e);
return false;
}
};
dojo.hostenv.loadUri=function(uri,cb){
if(this.loadedUris[uri]){
return true;
}
var _33=this.getText(uri,null,true);
if(!_33){
return false;
}
this.loadedUris[uri]=true;
if(cb){
_33="("+_33+")";
}
var _34=dj_eval(_33);
if(cb){
cb(_34);
}
return true;
};
dojo.hostenv.loadUriAndCheck=function(uri,_36,cb){
var ok=true;
try{
ok=this.loadUri(uri,cb);
}
catch(e){
dojo.debug("failed loading ",uri," with error: ",e);
}
return Boolean(ok&&this.findModule(_36,false));
};
dojo.loaded=function(){
};
dojo.unloaded=function(){
};
dojo.hostenv.loaded=function(){
this.loadNotifying=true;
this.post_load_=true;
var mll=this.modulesLoadedListeners;
for(var x=0;x<mll.length;x++){
mll[x]();
}
this.modulesLoadedListeners=[];
this.loadNotifying=false;
dojo.loaded();
};
dojo.hostenv.unloaded=function(){
var mll=this.unloadListeners;
while(mll.length){
(mll.pop())();
}
dojo.unloaded();
};
dojo.addOnLoad=function(obj,_3d){
var dh=dojo.hostenv;
if(arguments.length==1){
dh.modulesLoadedListeners.push(obj);
}else{
if(arguments.length>1){
dh.modulesLoadedListeners.push(function(){
obj[_3d]();
});
}
}
if(dh.post_load_&&dh.inFlightCount==0&&!dh.loadNotifying){
dh.callLoaded();
}
};
dojo.addOnUnload=function(obj,_40){
var dh=dojo.hostenv;
if(arguments.length==1){
dh.unloadListeners.push(obj);
}else{
if(arguments.length>1){
dh.unloadListeners.push(function(){
obj[_40]();
});
}
}
};
dojo.hostenv.modulesLoaded=function(){
if(this.post_load_){
return;
}
if(this.loadUriStack.length==0&&this.getTextStack.length==0){
if(this.inFlightCount>0){
dojo.debug("files still in flight!");
return;
}
dojo.hostenv.callLoaded();
}
};
dojo.hostenv.callLoaded=function(){
if(typeof setTimeout=="object"){
setTimeout("dojo.hostenv.loaded();",0);
}else{
dojo.hostenv.loaded();
}
};
dojo.hostenv.getModuleSymbols=function(_42){
var _43=_42.split(".");
for(var i=_43.length;i>0;i--){
var _45=_43.slice(0,i).join(".");
if((i==1)&&!this.moduleHasPrefix(_45)){
_43[0]="../"+_43[0];
}else{
var _46=this.getModulePrefix(_45);
if(_46!=_45){
_43.splice(0,i,_46);
break;
}
}
}
return _43;
};
dojo.hostenv._global_omit_module_check=false;
dojo.hostenv.loadModule=function(_47,_48,_49){
if(!_47){
return;
}
_49=this._global_omit_module_check||_49;
var _4a=this.findModule(_47,false);
if(_4a){
return _4a;
}
if(dj_undef(_47,this.loading_modules_)){
this.addedToLoadingCount.push(_47);
}
this.loading_modules_[_47]=1;
var _4b=_47.replace(/\./g,"/")+".js";
var _4c=_47.split(".");
var _4d=this.getModuleSymbols(_47);
var _4e=((_4d[0].charAt(0)!="/")&&!_4d[0].match(/^\w+:/));
var _4f=_4d[_4d.length-1];
var ok;
if(_4f=="*"){
_47=_4c.slice(0,-1).join(".");
while(_4d.length){
_4d.pop();
_4d.push(this.pkgFileName);
_4b=_4d.join("/")+".js";
if(_4e&&_4b.charAt(0)=="/"){
_4b=_4b.slice(1);
}
ok=this.loadPath(_4b,!_49?_47:null);
if(ok){
break;
}
_4d.pop();
}
}else{
_4b=_4d.join("/")+".js";
_47=_4c.join(".");
var _51=!_49?_47:null;
ok=this.loadPath(_4b,_51);
if(!ok&&!_48){
_4d.pop();
while(_4d.length){
_4b=_4d.join("/")+".js";
ok=this.loadPath(_4b,_51);
if(ok){
break;
}
_4d.pop();
_4b=_4d.join("/")+"/"+this.pkgFileName+".js";
if(_4e&&_4b.charAt(0)=="/"){
_4b=_4b.slice(1);
}
ok=this.loadPath(_4b,_51);
if(ok){
break;
}
}
}
if(!ok&&!_49){
dojo.raise("Could not load '"+_47+"'; last tried '"+_4b+"'");
}
}
if(!_49&&!this["isXDomain"]){
_4a=this.findModule(_47,false);
if(!_4a){
dojo.raise("symbol '"+_47+"' is not defined after loading '"+_4b+"'");
}
}
return _4a;
};
dojo.hostenv.startPackage=function(_52){
var _53=String(_52);
var _54=_53;
var _55=_52.split(/\./);
if(_55[_55.length-1]=="*"){
_55.pop();
_54=_55.join(".");
}
var _56=dojo.evalObjPath(_54,true);
this.loaded_modules_[_53]=_56;
this.loaded_modules_[_54]=_56;
return _56;
};
dojo.hostenv.findModule=function(_57,_58){
var lmn=String(_57);
if(this.loaded_modules_[lmn]){
return this.loaded_modules_[lmn];
}
if(_58){
dojo.raise("no loaded module named '"+_57+"'");
}
return null;
};
dojo.kwCompoundRequire=function(_5a){
var _5b=_5a["common"]||[];
var _5c=_5a[dojo.hostenv.name_]?_5b.concat(_5a[dojo.hostenv.name_]||[]):_5b.concat(_5a["default"]||[]);
for(var x=0;x<_5c.length;x++){
var _5e=_5c[x];
if(_5e.constructor==Array){
dojo.hostenv.loadModule.apply(dojo.hostenv,_5e);
}else{
dojo.hostenv.loadModule(_5e);
}
}
};
dojo.require=function(_5f){
dojo.hostenv.loadModule.apply(dojo.hostenv,arguments);
};
dojo.requireIf=function(_60,_61){
var _62=arguments[0];
if((_62===true)||(_62=="common")||(_62&&dojo.render[_62].capable)){
var _63=[];
for(var i=1;i<arguments.length;i++){
_63.push(arguments[i]);
}
dojo.require.apply(dojo,_63);
}
};
dojo.requireAfterIf=dojo.requireIf;
dojo.provide=function(_65){
return dojo.hostenv.startPackage.apply(dojo.hostenv,arguments);
};
dojo.registerModulePath=function(_66,_67){
return dojo.hostenv.setModulePrefix(_66,_67);
};
dojo.setModulePrefix=function(_68,_69){
dojo.deprecated("dojo.setModulePrefix(\""+_68+"\", \""+_69+"\")","replaced by dojo.registerModulePath","0.5");
return dojo.registerModulePath(_68,_69);
};
dojo.exists=function(obj,_6b){
var p=_6b.split(".");
for(var i=0;i<p.length;i++){
if(!obj[p[i]]){
return false;
}
obj=obj[p[i]];
}
return true;
};
dojo.hostenv.normalizeLocale=function(_6e){
var _6f=_6e?_6e.toLowerCase():dojo.locale;
if(_6f=="root"){
_6f="ROOT";
}
return _6f;
};
dojo.hostenv.searchLocalePath=function(_70,_71,_72){
_70=dojo.hostenv.normalizeLocale(_70);
var _73=_70.split("-");
var _74=[];
for(var i=_73.length;i>0;i--){
_74.push(_73.slice(0,i).join("-"));
}
_74.push(false);
if(_71){
_74.reverse();
}
for(var j=_74.length-1;j>=0;j--){
var loc=_74[j]||"ROOT";
var _78=_72(loc);
if(_78){
break;
}
}
};
dojo.hostenv.localesGenerated;
dojo.hostenv.registerNlsPrefix=function(){
dojo.registerModulePath("nls","nls");
};
dojo.hostenv.preloadLocalizations=function(){
if(dojo.hostenv.localesGenerated){
dojo.hostenv.registerNlsPrefix();
function preload(_79){
_79=dojo.hostenv.normalizeLocale(_79);
dojo.hostenv.searchLocalePath(_79,true,function(loc){
for(var i=0;i<dojo.hostenv.localesGenerated.length;i++){
if(dojo.hostenv.localesGenerated[i]==loc){
dojo["require"]("nls.dojo_"+loc);
return true;
}
}
return false;
});
}
preload();
var _7c=djConfig.extraLocale||[];
for(var i=0;i<_7c.length;i++){
preload(_7c[i]);
}
}
dojo.hostenv.preloadLocalizations=function(){
};
};
dojo.requireLocalization=function(_7e,_7f,_80,_81){
dojo.hostenv.preloadLocalizations();
var _82=dojo.hostenv.normalizeLocale(_80);
var _83=[_7e,"nls",_7f].join(".");
var _84="";
if(_81){
var _85=_81.split(",");
for(var i=0;i<_85.length;i++){
if(_82.indexOf(_85[i])==0){
if(_85[i].length>_84.length){
_84=_85[i];
}
}
}
if(!_84){
_84="ROOT";
}
}
var _87=_81?_84:_82;
var _88=dojo.hostenv.findModule(_83);
var _89=null;
if(_88){
if(djConfig.localizationComplete&&_88._built){
return;
}
var _8a=_87.replace("-","_");
var _8b=_83+"."+_8a;
_89=dojo.hostenv.findModule(_8b);
}
if(!_89){
_88=dojo.hostenv.startPackage(_83);
var _8c=dojo.hostenv.getModuleSymbols(_7e);
var _8d=_8c.concat("nls").join("/");
var _8e;
dojo.hostenv.searchLocalePath(_87,_81,function(loc){
var _90=loc.replace("-","_");
var _91=_83+"."+_90;
var _92=false;
if(!dojo.hostenv.findModule(_91)){
dojo.hostenv.startPackage(_91);
var _93=[_8d];
if(loc!="ROOT"){
_93.push(loc);
}
_93.push(_7f);
var _94=_93.join("/")+".js";
_92=dojo.hostenv.loadPath(_94,null,function(_95){
var _96=function(){
};
_96.prototype=_8e;
_88[_90]=new _96();
for(var j in _95){
_88[_90][j]=_95[j];
}
});
}else{
_92=true;
}
if(_92&&_88[_90]){
_8e=_88[_90];
}else{
_88[_90]=_8e;
}
if(_81){
return true;
}
});
}
if(_81&&_82!=_84){
_88[_82.replace("-","_")]=_88[_84.replace("-","_")];
}
};
(function(){
var _98=djConfig.extraLocale;
if(_98){
if(!_98 instanceof Array){
_98=[_98];
}
var req=dojo.requireLocalization;
dojo.requireLocalization=function(m,b,_9c,_9d){
req(m,b,_9c,_9d);
if(_9c){
return;
}
for(var i=0;i<_98.length;i++){
req(m,b,_98[i],_9d);
}
};
}
})();
}
if(typeof window!="undefined"){
(function(){
if(djConfig.allowQueryConfig){
var _9f=document.location.toString();
var _a0=_9f.split("?",2);
if(_a0.length>1){
var _a1=_a0[1];
var _a2=_a1.split("&");
for(var x in _a2){
var sp=_a2[x].split("=");
if((sp[0].length>9)&&(sp[0].substr(0,9)=="djConfig.")){
var opt=sp[0].substr(9);
try{
djConfig[opt]=eval(sp[1]);
}
catch(e){
djConfig[opt]=sp[1];
}
}
}
}
}
if(((djConfig["baseScriptUri"]=="")||(djConfig["baseRelativePath"]==""))&&(document&&document.getElementsByTagName)){
var _a6=document.getElementsByTagName("script");
var _a7=/(__package__|dojo|bootstrap1)\.js([\?\.]|$)/i;
for(var i=0;i<_a6.length;i++){
var src=_a6[i].getAttribute("src");
if(!src){
continue;
}
var m=src.match(_a7);
if(m){
var _ab=src.substring(0,m.index);
if(src.indexOf("bootstrap1")>-1){
_ab+="../";
}
if(!this["djConfig"]){
djConfig={};
}
if(djConfig["baseScriptUri"]==""){
djConfig["baseScriptUri"]=_ab;
}
if(djConfig["baseRelativePath"]==""){
djConfig["baseRelativePath"]=_ab;
}
break;
}
}
}
var dr=dojo.render;
var drh=dojo.render.html;
var drs=dojo.render.svg;
var dua=(drh.UA=navigator.userAgent);
var dav=(drh.AV=navigator.appVersion);
var t=true;
var f=false;
drh.capable=t;
drh.support.builtin=t;
dr.ver=parseFloat(drh.AV);
dr.os.mac=dav.indexOf("Macintosh")>=0;
dr.os.win=dav.indexOf("Windows")>=0;
dr.os.linux=dav.indexOf("X11")>=0;
drh.opera=dua.indexOf("Opera")>=0;
drh.khtml=(dav.indexOf("Konqueror")>=0)||(dav.indexOf("Safari")>=0);
drh.safari=dav.indexOf("Safari")>=0;
var _b3=dua.indexOf("Gecko");
drh.mozilla=drh.moz=(_b3>=0)&&(!drh.khtml);
if(drh.mozilla){
drh.geckoVersion=dua.substring(_b3+6,_b3+14);
}
drh.ie=(document.all)&&(!drh.opera);
drh.ie50=drh.ie&&dav.indexOf("MSIE 5.0")>=0;
drh.ie55=drh.ie&&dav.indexOf("MSIE 5.5")>=0;
drh.ie60=drh.ie&&dav.indexOf("MSIE 6.0")>=0;
drh.ie70=drh.ie&&dav.indexOf("MSIE 7.0")>=0;
var cm=document["compatMode"];
drh.quirks=(cm=="BackCompat")||(cm=="QuirksMode")||drh.ie55||drh.ie50;
dojo.locale=dojo.locale||(drh.ie?navigator.userLanguage:navigator.language).toLowerCase();
dr.vml.capable=drh.ie;
drs.capable=f;
drs.support.plugin=f;
drs.support.builtin=f;
var _b5=window["document"];
var tdi=_b5["implementation"];
if((tdi)&&(tdi["hasFeature"])&&(tdi.hasFeature("org.w3c.dom.svg","1.0"))){
drs.capable=t;
drs.support.builtin=t;
drs.support.plugin=f;
}
if(drh.safari){
var tmp=dua.split("AppleWebKit/")[1];
var ver=parseFloat(tmp.split(" ")[0]);
if(ver>=420){
drs.capable=t;
drs.support.builtin=t;
drs.support.plugin=f;
}
}else{
}
})();
dojo.hostenv.startPackage("dojo.hostenv");
dojo.render.name=dojo.hostenv.name_="browser";
dojo.hostenv.searchIds=[];
dojo.hostenv._XMLHTTP_PROGIDS=["Msxml2.XMLHTTP","Microsoft.XMLHTTP","Msxml2.XMLHTTP.4.0"];
dojo.hostenv.getXmlhttpObject=function(){
var _b9=null;
var _ba=null;
try{
_b9=new XMLHttpRequest();
}
catch(e){
}
if(!_b9){
for(var i=0;i<3;++i){
var _bc=dojo.hostenv._XMLHTTP_PROGIDS[i];
try{
_b9=new ActiveXObject(_bc);
}
catch(e){
_ba=e;
}
if(_b9){
dojo.hostenv._XMLHTTP_PROGIDS=[_bc];
break;
}
}
}
if(!_b9){
return dojo.raise("XMLHTTP not available",_ba);
}
return _b9;
};
dojo.hostenv._blockAsync=false;
dojo.hostenv.getText=function(uri,_be,_bf){
if(!_be){
this._blockAsync=true;
}
var _c0=this.getXmlhttpObject();
function isDocumentOk(_c1){
var _c2=_c1["status"];
return Boolean((!_c2)||((200<=_c2)&&(300>_c2))||(_c2==304));
}
if(_be){
var _c3=this,_c4=null,gbl=dojo.global();
var xhr=dojo.evalObjPath("dojo.io.XMLHTTPTransport");
_c0.onreadystatechange=function(){
if(_c4){
gbl.clearTimeout(_c4);
_c4=null;
}
if(_c3._blockAsync||(xhr&&xhr._blockAsync)){
_c4=gbl.setTimeout(function(){
_c0.onreadystatechange.apply(this);
},10);
}else{
if(4==_c0.readyState){
if(isDocumentOk(_c0)){
_be(_c0.responseText);
}
}
}
};
}
_c0.open("GET",uri,_be?true:false);
try{
_c0.send(null);
if(_be){
return null;
}
if(!isDocumentOk(_c0)){
var err=Error("Unable to load "+uri+" status:"+_c0.status);
err.status=_c0.status;
err.responseText=_c0.responseText;
throw err;
}
}
catch(e){
this._blockAsync=false;
if((_bf)&&(!_be)){
return null;
}else{
throw e;
}
}
this._blockAsync=false;
return _c0.responseText;
};
dojo.hostenv.defaultDebugContainerId="dojoDebug";
dojo.hostenv._println_buffer=[];
dojo.hostenv._println_safe=false;
dojo.hostenv.println=function(_c8){
if(!dojo.hostenv._println_safe){
dojo.hostenv._println_buffer.push(_c8);
}else{
try{
var _c9=document.getElementById(djConfig.debugContainerId?djConfig.debugContainerId:dojo.hostenv.defaultDebugContainerId);
if(!_c9){
_c9=dojo.body();
}
var div=document.createElement("div");
div.appendChild(document.createTextNode(_c8));
_c9.appendChild(div);
}
catch(e){
try{
document.write("<div>"+_c8+"</div>");
}
catch(e2){
window.status=_c8;
}
}
}
};
dojo.addOnLoad(function(){
dojo.hostenv._println_safe=true;
while(dojo.hostenv._println_buffer.length>0){
dojo.hostenv.println(dojo.hostenv._println_buffer.shift());
}
});
function dj_addNodeEvtHdlr(_cb,_cc,fp){
var _ce=_cb["on"+_cc]||function(){
};
_cb["on"+_cc]=function(){
fp.apply(_cb,arguments);
_ce.apply(_cb,arguments);
};
return true;
}
function dj_load_init(e){
var _d0=(e&&e.type)?e.type.toLowerCase():"load";
if(arguments.callee.initialized||(_d0!="domcontentloaded"&&_d0!="load")){
return;
}
arguments.callee.initialized=true;
if(typeof (_timer)!="undefined"){
clearInterval(_timer);
delete _timer;
}
var _d1=function(){
if(dojo.render.html.ie){
dojo.hostenv.makeWidgets();
}
};
if(dojo.hostenv.inFlightCount==0){
_d1();
dojo.hostenv.modulesLoaded();
}else{
dojo.hostenv.modulesLoadedListeners.unshift(_d1);
}
}
if(document.addEventListener){
if(dojo.render.html.opera||(dojo.render.html.moz&&!djConfig.delayMozLoadingFix)){
document.addEventListener("DOMContentLoaded",dj_load_init,null);
}
window.addEventListener("load",dj_load_init,null);
}
if(dojo.render.html.ie&&dojo.render.os.win){
document.attachEvent("onreadystatechange",function(e){
if(document.readyState=="complete"){
dj_load_init();
}
});
}
if(/(WebKit|khtml)/i.test(navigator.userAgent)){
var _timer=setInterval(function(){
if(/loaded|complete/.test(document.readyState)){
dj_load_init();
}
},10);
}
if(dojo.render.html.ie){
dj_addNodeEvtHdlr(window,"beforeunload",function(){
dojo.hostenv._unloading=true;
window.setTimeout(function(){
dojo.hostenv._unloading=false;
},0);
});
}
dj_addNodeEvtHdlr(window,"unload",function(){
dojo.hostenv.unloaded();
if((!dojo.render.html.ie)||(dojo.render.html.ie&&dojo.hostenv._unloading)){
dojo.hostenv.unloaded();
}
});
dojo.hostenv.makeWidgets=function(){
var _d3=[];
if(djConfig.searchIds&&djConfig.searchIds.length>0){
_d3=_d3.concat(djConfig.searchIds);
}
if(dojo.hostenv.searchIds&&dojo.hostenv.searchIds.length>0){
_d3=_d3.concat(dojo.hostenv.searchIds);
}
if((djConfig.parseWidgets)||(_d3.length>0)){
if(dojo.evalObjPath("dojo.widget.Parse")){
var _d4=new dojo.xml.Parse();
if(_d3.length>0){
for(var x=0;x<_d3.length;x++){
var _d6=document.getElementById(_d3[x]);
if(!_d6){
continue;
}
var _d7=_d4.parseElement(_d6,null,true);
dojo.widget.getParser().createComponents(_d7);
}
}else{
if(djConfig.parseWidgets){
var _d7=_d4.parseElement(dojo.body(),null,true);
dojo.widget.getParser().createComponents(_d7);
}
}
}
}
};
dojo.addOnLoad(function(){
if(!dojo.render.html.ie){
dojo.hostenv.makeWidgets();
}
});
try{
if(dojo.render.html.ie){
document.namespaces.add("v","urn:schemas-microsoft-com:vml");
document.createStyleSheet().addRule("v\\:*","behavior:url(#default#VML)");
}
}
catch(e){
}
dojo.hostenv.writeIncludes=function(){
};
if(!dj_undef("document",this)){
dj_currentDocument=this.document;
}
dojo.doc=function(){
return dj_currentDocument;
};
dojo.body=function(){
return dojo.doc().body||dojo.doc().getElementsByTagName("body")[0];
};
dojo.byId=function(id,doc){
if((id)&&((typeof id=="string")||(id instanceof String))){
if(!doc){
doc=dj_currentDocument;
}
var ele=doc.getElementById(id);
if(ele&&(ele.id!=id)&&doc.all){
ele=null;
eles=doc.all[id];
if(eles){
if(eles.length){
for(var i=0;i<eles.length;i++){
if(eles[i].id==id){
ele=eles[i];
break;
}
}
}else{
ele=eles;
}
}
}
return ele;
}
return id;
};
dojo.setContext=function(_dc,_dd){
dj_currentContext=_dc;
dj_currentDocument=_dd;
};
dojo._fireCallback=function(_de,_df,_e0){
if((_df)&&((typeof _de=="string")||(_de instanceof String))){
_de=_df[_de];
}
return (_df?_de.apply(_df,_e0||[]):_de());
};
dojo.withGlobal=function(_e1,_e2,_e3,_e4){
var _e5;
var _e6=dj_currentContext;
var _e7=dj_currentDocument;
try{
dojo.setContext(_e1,_e1.document);
_e5=dojo._fireCallback(_e2,_e3,_e4);
}
finally{
dojo.setContext(_e6,_e7);
}
return _e5;
};
dojo.withDoc=function(_e8,_e9,_ea,_eb){
var _ec;
var _ed=dj_currentDocument;
try{
dj_currentDocument=_e8;
_ec=dojo._fireCallback(_e9,_ea,_eb);
}
finally{
dj_currentDocument=_ed;
}
return _ec;
};
}
(function(){
if(typeof dj_usingBootstrap!="undefined"){
return;
}
var _ee=false;
var _ef=false;
var _f0=false;
if((typeof this["load"]=="function")&&((typeof this["Packages"]=="function")||(typeof this["Packages"]=="object"))){
_ee=true;
}else{
if(typeof this["load"]=="function"){
_ef=true;
}else{
if(window.widget){
_f0=true;
}
}
}
var _f1=[];
if((this["djConfig"])&&((djConfig["isDebug"])||(djConfig["debugAtAllCosts"]))){
_f1.push("debug.js");
}
if((this["djConfig"])&&(djConfig["debugAtAllCosts"])&&(!_ee)&&(!_f0)){
_f1.push("browser_debug.js");
}
var _f2=djConfig["baseScriptUri"];
if((this["djConfig"])&&(djConfig["baseLoaderUri"])){
_f2=djConfig["baseLoaderUri"];
}
for(var x=0;x<_f1.length;x++){
var _f4=_f2+"src/"+_f1[x];
if(_ee||_ef){
load(_f4);
}else{
try{
document.write("<scr"+"ipt type='text/javascript' src='"+_f4+"'></scr"+"ipt>");
}
catch(e){
var _f5=document.createElement("script");
_f5.src=_f4;
document.getElementsByTagName("head")[0].appendChild(_f5);
}
}
}
})();
dojo.provide("dojo.string.common");
dojo.string.trim=function(str,wh){
if(!str.replace){
return str;
}
if(!str.length){
return str;
}
var re=(wh>0)?(/^\s+/):(wh<0)?(/\s+$/):(/^\s+|\s+$/g);
return str.replace(re,"");
};
dojo.string.trimStart=function(str){
return dojo.string.trim(str,1);
};
dojo.string.trimEnd=function(str){
return dojo.string.trim(str,-1);
};
dojo.string.repeat=function(str,_fc,_fd){
var out="";
for(var i=0;i<_fc;i++){
out+=str;
if(_fd&&i<_fc-1){
out+=_fd;
}
}
return out;
};
dojo.string.pad=function(str,len,c,dir){
var out=String(str);
if(!c){
c="0";
}
if(!dir){
dir=1;
}
while(out.length<len){
if(dir>0){
out=c+out;
}else{
out+=c;
}
}
return out;
};
dojo.string.padLeft=function(str,len,c){
return dojo.string.pad(str,len,c,1);
};
dojo.string.padRight=function(str,len,c){
return dojo.string.pad(str,len,c,-1);
};
dojo.provide("dojo.string");
dojo.provide("dojo.lang.common");
dojo.lang.inherits=function(_10b,_10c){
if(!dojo.lang.isFunction(_10c)){
dojo.raise("dojo.inherits: superclass argument ["+_10c+"] must be a function (subclass: ["+_10b+"']");
}
_10b.prototype=new _10c();
_10b.prototype.constructor=_10b;
_10b.superclass=_10c.prototype;
_10b["super"]=_10c.prototype;
};
dojo.lang._mixin=function(obj,_10e){
var tobj={};
for(var x in _10e){
if((typeof tobj[x]=="undefined")||(tobj[x]!=_10e[x])){
obj[x]=_10e[x];
}
}
if(dojo.render.html.ie&&(typeof (_10e["toString"])=="function")&&(_10e["toString"]!=obj["toString"])&&(_10e["toString"]!=tobj["toString"])){
obj.toString=_10e.toString;
}
return obj;
};
dojo.lang.mixin=function(obj,_112){
for(var i=1,l=arguments.length;i<l;i++){
dojo.lang._mixin(obj,arguments[i]);
}
return obj;
};
dojo.lang.extend=function(_115,_116){
for(var i=1,l=arguments.length;i<l;i++){
dojo.lang._mixin(_115.prototype,arguments[i]);
}
return _115;
};
dojo.inherits=dojo.lang.inherits;
dojo.mixin=dojo.lang.mixin;
dojo.extend=dojo.lang.extend;
dojo.lang.find=function(_119,_11a,_11b,_11c){
if(!dojo.lang.isArrayLike(_119)&&dojo.lang.isArrayLike(_11a)){
dojo.deprecated("dojo.lang.find(value, array)","use dojo.lang.find(array, value) instead","0.5");
var temp=_119;
_119=_11a;
_11a=temp;
}
var _11e=dojo.lang.isString(_119);
if(_11e){
_119=_119.split("");
}
if(_11c){
var step=-1;
var i=_119.length-1;
var end=-1;
}else{
var step=1;
var i=0;
var end=_119.length;
}
if(_11b){
while(i!=end){
if(_119[i]===_11a){
return i;
}
i+=step;
}
}else{
while(i!=end){
if(_119[i]==_11a){
return i;
}
i+=step;
}
}
return -1;
};
dojo.lang.indexOf=dojo.lang.find;
dojo.lang.findLast=function(_122,_123,_124){
return dojo.lang.find(_122,_123,_124,true);
};
dojo.lang.lastIndexOf=dojo.lang.findLast;
dojo.lang.inArray=function(_125,_126){
return dojo.lang.find(_125,_126)>-1;
};
dojo.lang.isObject=function(it){
if(typeof it=="undefined"){
return false;
}
return (typeof it=="object"||it===null||dojo.lang.isArray(it)||dojo.lang.isFunction(it));
};
dojo.lang.isArray=function(it){
return (it&&it instanceof Array||typeof it=="array");
};
dojo.lang.isArrayLike=function(it){
if((!it)||(dojo.lang.isUndefined(it))){
return false;
}
if(dojo.lang.isString(it)){
return false;
}
if(dojo.lang.isFunction(it)){
return false;
}
if(dojo.lang.isArray(it)){
return true;
}
if((it.tagName)&&(it.tagName.toLowerCase()=="form")){
return false;
}
if(dojo.lang.isNumber(it.length)&&isFinite(it.length)){
return true;
}
return false;
};
dojo.lang.isFunction=function(it){
return (it instanceof Function||typeof it=="function");
};
(function(){
if((dojo.render.html.capable)&&(dojo.render.html["safari"])){
dojo.lang.isFunction=function(it){
if((typeof (it)=="function")&&(it=="[object NodeList]")){
return false;
}
return (it instanceof Function||typeof it=="function");
};
}
})();
dojo.lang.isString=function(it){
return (typeof it=="string"||it instanceof String);
};
dojo.lang.isAlien=function(it){
if(!it){
return false;
}
return !dojo.lang.isFunction(it)&&/\{\s*\[native code\]\s*\}/.test(String(it));
};
dojo.lang.isBoolean=function(it){
return (it instanceof Boolean||typeof it=="boolean");
};
dojo.lang.isNumber=function(it){
return (it instanceof Number||typeof it=="number");
};
dojo.lang.isUndefined=function(it){
return ((typeof (it)=="undefined")&&(it==undefined));
};
dojo.provide("dojo.lang.extras");
dojo.lang.setTimeout=function(func,_132){
var _133=window,_134=2;
if(!dojo.lang.isFunction(func)){
_133=func;
func=_132;
_132=arguments[2];
_134++;
}
if(dojo.lang.isString(func)){
func=_133[func];
}
var args=[];
for(var i=_134;i<arguments.length;i++){
args.push(arguments[i]);
}
return dojo.global().setTimeout(function(){
func.apply(_133,args);
},_132);
};
dojo.lang.clearTimeout=function(_137){
dojo.global().clearTimeout(_137);
};
dojo.lang.getNameInObj=function(ns,item){
if(!ns){
ns=dj_global;
}
for(var x in ns){
if(ns[x]===item){
return new String(x);
}
}
return null;
};
dojo.lang.shallowCopy=function(obj,deep){
var i,ret;
if(obj===null){
return null;
}
if(dojo.lang.isObject(obj)){
ret=new obj.constructor();
for(i in obj){
if(dojo.lang.isUndefined(ret[i])){
ret[i]=deep?dojo.lang.shallowCopy(obj[i],deep):obj[i];
}
}
}else{
if(dojo.lang.isArray(obj)){
ret=[];
for(i=0;i<obj.length;i++){
ret[i]=deep?dojo.lang.shallowCopy(obj[i],deep):obj[i];
}
}else{
ret=obj;
}
}
return ret;
};
dojo.lang.firstValued=function(){
for(var i=0;i<arguments.length;i++){
if(typeof arguments[i]!="undefined"){
return arguments[i];
}
}
return undefined;
};
dojo.lang.getObjPathValue=function(_140,_141,_142){
with(dojo.parseObjPath(_140,_141,_142)){
return dojo.evalProp(prop,obj,_142);
}
};
dojo.lang.setObjPathValue=function(_143,_144,_145,_146){
dojo.deprecated("dojo.lang.setObjPathValue","use dojo.parseObjPath and the '=' operator","0.6");
if(arguments.length<4){
_146=true;
}
with(dojo.parseObjPath(_143,_145,_146)){
if(obj&&(_146||(prop in obj))){
obj[prop]=_144;
}
}
};
dojo.provide("dojo.io.common");
dojo.io.transports=[];
dojo.io.hdlrFuncNames=["load","error","timeout"];
dojo.io.Request=function(url,_148,_149,_14a){
if((arguments.length==1)&&(arguments[0].constructor==Object)){
this.fromKwArgs(arguments[0]);
}else{
this.url=url;
if(_148){
this.mimetype=_148;
}
if(_149){
this.transport=_149;
}
if(arguments.length>=4){
this.changeUrl=_14a;
}
}
};
dojo.lang.extend(dojo.io.Request,{url:"",mimetype:"text/plain",method:"GET",content:undefined,transport:undefined,changeUrl:undefined,formNode:undefined,sync:false,bindSuccess:false,useCache:false,preventCache:false,load:function(type,data,_14d,_14e){
},error:function(type,_150,_151,_152){
},timeout:function(type,_154,_155,_156){
},handle:function(type,data,_159,_15a){
},timeoutSeconds:0,abort:function(){
},fromKwArgs:function(_15b){
if(_15b["url"]){
_15b.url=_15b.url.toString();
}
if(_15b["formNode"]){
_15b.formNode=dojo.byId(_15b.formNode);
}
if(!_15b["method"]&&_15b["formNode"]&&_15b["formNode"].method){
_15b.method=_15b["formNode"].method;
}
if(!_15b["handle"]&&_15b["handler"]){
_15b.handle=_15b.handler;
}
if(!_15b["load"]&&_15b["loaded"]){
_15b.load=_15b.loaded;
}
if(!_15b["changeUrl"]&&_15b["changeURL"]){
_15b.changeUrl=_15b.changeURL;
}
_15b.encoding=dojo.lang.firstValued(_15b["encoding"],djConfig["bindEncoding"],"");
_15b.sendTransport=dojo.lang.firstValued(_15b["sendTransport"],djConfig["ioSendTransport"],false);
var _15c=dojo.lang.isFunction;
for(var x=0;x<dojo.io.hdlrFuncNames.length;x++){
var fn=dojo.io.hdlrFuncNames[x];
if(_15b[fn]&&_15c(_15b[fn])){
continue;
}
if(_15b["handle"]&&_15c(_15b["handle"])){
_15b[fn]=_15b.handle;
}
}
dojo.lang.mixin(this,_15b);
}});
dojo.io.Error=function(msg,type,num){
this.message=msg;
this.type=type||"unknown";
this.number=num||0;
};
dojo.io.transports.addTransport=function(name){
this.push(name);
this[name]=dojo.io[name];
};
dojo.io.bind=function(_163){
if(!(_163 instanceof dojo.io.Request)){
try{
_163=new dojo.io.Request(_163);
}
catch(e){
dojo.debug(e);
}
}
var _164="";
if(_163["transport"]){
_164=_163["transport"];
if(!this[_164]){
dojo.io.sendBindError(_163,"No dojo.io.bind() transport with name '"+_163["transport"]+"'.");
return _163;
}
if(!this[_164].canHandle(_163)){
dojo.io.sendBindError(_163,"dojo.io.bind() transport with name '"+_163["transport"]+"' cannot handle this type of request.");
return _163;
}
}else{
for(var x=0;x<dojo.io.transports.length;x++){
var tmp=dojo.io.transports[x];
if((this[tmp])&&(this[tmp].canHandle(_163))){
_164=tmp;
break;
}
}
if(_164==""){
dojo.io.sendBindError(_163,"None of the loaded transports for dojo.io.bind()"+" can handle the request.");
return _163;
}
}
this[_164].bind(_163);
_163.bindSuccess=true;
return _163;
};
dojo.io.sendBindError=function(_167,_168){
if((typeof _167.error=="function"||typeof _167.handle=="function")&&(typeof setTimeout=="function"||typeof setTimeout=="object")){
var _169=new dojo.io.Error(_168);
setTimeout(function(){
_167[(typeof _167.error=="function")?"error":"handle"]("error",_169,null,_167);
},50);
}else{
dojo.raise(_168);
}
};
dojo.io.queueBind=function(_16a){
if(!(_16a instanceof dojo.io.Request)){
try{
_16a=new dojo.io.Request(_16a);
}
catch(e){
dojo.debug(e);
}
}
var _16b=_16a.load;
_16a.load=function(){
dojo.io._queueBindInFlight=false;
var ret=_16b.apply(this,arguments);
dojo.io._dispatchNextQueueBind();
return ret;
};
var _16d=_16a.error;
_16a.error=function(){
dojo.io._queueBindInFlight=false;
var ret=_16d.apply(this,arguments);
dojo.io._dispatchNextQueueBind();
return ret;
};
dojo.io._bindQueue.push(_16a);
dojo.io._dispatchNextQueueBind();
return _16a;
};
dojo.io._dispatchNextQueueBind=function(){
if(!dojo.io._queueBindInFlight){
dojo.io._queueBindInFlight=true;
if(dojo.io._bindQueue.length>0){
dojo.io.bind(dojo.io._bindQueue.shift());
}else{
dojo.io._queueBindInFlight=false;
}
}
};
dojo.io._bindQueue=[];
dojo.io._queueBindInFlight=false;
dojo.io.argsFromMap=function(map,_170,last){
var enc=/utf/i.test(_170||"")?encodeURIComponent:dojo.string.encodeAscii;
var _173=[];
var _174=new Object();
for(var name in map){
var _176=function(elt){
var val=enc(name)+"="+enc(elt);
_173[(last==name)?"push":"unshift"](val);
};
if(!_174[name]){
var _179=map[name];
if(dojo.lang.isArray(_179)){
dojo.lang.forEach(_179,_176);
}else{
_176(_179);
}
}
}
return _173.join("&");
};
dojo.io.setIFrameSrc=function(_17a,src,_17c){
try{
var r=dojo.render.html;
if(!_17c){
if(r.safari){
_17a.location=src;
}else{
frames[_17a.name].location=src;
}
}else{
var idoc;
if(r.ie){
idoc=_17a.contentWindow.document;
}else{
if(r.safari){
idoc=_17a.document;
}else{
idoc=_17a.contentWindow;
}
}
if(!idoc){
_17a.location=src;
return;
}else{
idoc.location.replace(src);
}
}
}
catch(e){
dojo.debug(e);
dojo.debug("setIFrameSrc: "+e);
}
};
dojo.provide("dojo.lang.array");
dojo.lang.mixin(dojo.lang,{has:function(obj,name){
try{
return typeof obj[name]!="undefined";
}
catch(e){
return false;
}
},isEmpty:function(obj){
if(dojo.lang.isObject(obj)){
var tmp={};
var _183=0;
for(var x in obj){
if(obj[x]&&(!tmp[x])){
_183++;
break;
}
}
return _183==0;
}else{
if(dojo.lang.isArrayLike(obj)||dojo.lang.isString(obj)){
return obj.length==0;
}
}
},map:function(arr,obj,_187){
var _188=dojo.lang.isString(arr);
if(_188){
arr=arr.split("");
}
if(dojo.lang.isFunction(obj)&&(!_187)){
_187=obj;
obj=dj_global;
}else{
if(dojo.lang.isFunction(obj)&&_187){
var _189=obj;
obj=_187;
_187=_189;
}
}
if(Array.map){
var _18a=Array.map(arr,_187,obj);
}else{
var _18a=[];
for(var i=0;i<arr.length;++i){
_18a.push(_187.call(obj,arr[i]));
}
}
if(_188){
return _18a.join("");
}else{
return _18a;
}
},reduce:function(arr,_18d,obj,_18f){
var _190=_18d;
if(arguments.length==1){
dojo.debug("dojo.lang.reduce called with too few arguments!");
return false;
}else{
if(arguments.length==2){
_18f=_18d;
_190=arr.shift();
}else{
if(arguments.lenght==3){
if(dojo.lang.isFunction(obj)){
_18f=obj;
obj=null;
}
}else{
if(dojo.lang.isFunction(obj)){
var tmp=_18f;
_18f=obj;
obj=tmp;
}
}
}
}
var ob=obj?obj:dj_global;
dojo.lang.map(arr,function(val){
_190=_18f.call(ob,_190,val);
});
return _190;
},forEach:function(_194,_195,_196){
if(dojo.lang.isString(_194)){
_194=_194.split("");
}
if(Array.forEach){
Array.forEach(_194,_195,_196);
}else{
if(!_196){
_196=dj_global;
}
for(var i=0,l=_194.length;i<l;i++){
_195.call(_196,_194[i],i,_194);
}
}
},_everyOrSome:function(_199,arr,_19b,_19c){
if(dojo.lang.isString(arr)){
arr=arr.split("");
}
if(Array.every){
return Array[_199?"every":"some"](arr,_19b,_19c);
}else{
if(!_19c){
_19c=dj_global;
}
for(var i=0,l=arr.length;i<l;i++){
var _19f=_19b.call(_19c,arr[i],i,arr);
if(_199&&!_19f){
return false;
}else{
if((!_199)&&(_19f)){
return true;
}
}
}
return Boolean(_199);
}
},every:function(arr,_1a1,_1a2){
return this._everyOrSome(true,arr,_1a1,_1a2);
},some:function(arr,_1a4,_1a5){
return this._everyOrSome(false,arr,_1a4,_1a5);
},filter:function(arr,_1a7,_1a8){
var _1a9=dojo.lang.isString(arr);
if(_1a9){
arr=arr.split("");
}
var _1aa;
if(Array.filter){
_1aa=Array.filter(arr,_1a7,_1a8);
}else{
if(!_1a8){
if(arguments.length>=3){
dojo.raise("thisObject doesn't exist!");
}
_1a8=dj_global;
}
_1aa=[];
for(var i=0;i<arr.length;i++){
if(_1a7.call(_1a8,arr[i],i,arr)){
_1aa.push(arr[i]);
}
}
}
if(_1a9){
return _1aa.join("");
}else{
return _1aa;
}
},unnest:function(){
var out=[];
for(var i=0;i<arguments.length;i++){
if(dojo.lang.isArrayLike(arguments[i])){
var add=dojo.lang.unnest.apply(this,arguments[i]);
out=out.concat(add);
}else{
out.push(arguments[i]);
}
}
return out;
},toArray:function(_1af,_1b0){
var _1b1=[];
for(var i=_1b0||0;i<_1af.length;i++){
_1b1.push(_1af[i]);
}
return _1b1;
}});
dojo.provide("dojo.lang.func");
dojo.lang.hitch=function(_1b3,_1b4){
var fcn=(dojo.lang.isString(_1b4)?_1b3[_1b4]:_1b4)||function(){
};
return function(){
return fcn.apply(_1b3,arguments);
};
};
dojo.lang.anonCtr=0;
dojo.lang.anon={};
dojo.lang.nameAnonFunc=function(_1b6,_1b7,_1b8){
var nso=(_1b7||dojo.lang.anon);
if((_1b8)||((dj_global["djConfig"])&&(djConfig["slowAnonFuncLookups"]==true))){
for(var x in nso){
try{
if(nso[x]===_1b6){
return x;
}
}
catch(e){
}
}
}
var ret="__"+dojo.lang.anonCtr++;
while(typeof nso[ret]!="undefined"){
ret="__"+dojo.lang.anonCtr++;
}
nso[ret]=_1b6;
return ret;
};
dojo.lang.forward=function(_1bc){
return function(){
return this[_1bc].apply(this,arguments);
};
};
dojo.lang.curry=function(_1bd,func){
var _1bf=[];
_1bd=_1bd||dj_global;
if(dojo.lang.isString(func)){
func=_1bd[func];
}
for(var x=2;x<arguments.length;x++){
_1bf.push(arguments[x]);
}
var _1c1=(func["__preJoinArity"]||func.length)-_1bf.length;
function gather(_1c2,_1c3,_1c4){
var _1c5=_1c4;
var _1c6=_1c3.slice(0);
for(var x=0;x<_1c2.length;x++){
_1c6.push(_1c2[x]);
}
_1c4=_1c4-_1c2.length;
if(_1c4<=0){
var res=func.apply(_1bd,_1c6);
_1c4=_1c5;
return res;
}else{
return function(){
return gather(arguments,_1c6,_1c4);
};
}
}
return gather([],_1bf,_1c1);
};
dojo.lang.curryArguments=function(_1c9,func,args,_1cc){
var _1cd=[];
var x=_1cc||0;
for(x=_1cc;x<args.length;x++){
_1cd.push(args[x]);
}
return dojo.lang.curry.apply(dojo.lang,[_1c9,func].concat(_1cd));
};
dojo.lang.tryThese=function(){
for(var x=0;x<arguments.length;x++){
try{
if(typeof arguments[x]=="function"){
var ret=(arguments[x]());
if(ret){
return ret;
}
}
}
catch(e){
dojo.debug(e);
}
}
};
dojo.lang.delayThese=function(farr,cb,_1d3,_1d4){
if(!farr.length){
if(typeof _1d4=="function"){
_1d4();
}
return;
}
if((typeof _1d3=="undefined")&&(typeof cb=="number")){
_1d3=cb;
cb=function(){
};
}else{
if(!cb){
cb=function(){
};
if(!_1d3){
_1d3=0;
}
}
}
setTimeout(function(){
(farr.shift())();
cb();
dojo.lang.delayThese(farr,cb,_1d3,_1d4);
},_1d3);
};
dojo.provide("dojo.string.extras");
dojo.string.substituteParams=function(_1d5,hash){
var map=(typeof hash=="object")?hash:dojo.lang.toArray(arguments,1);
return _1d5.replace(/\%\{(\w+)\}/g,function(_1d8,key){
if(typeof (map[key])!="undefined"&&map[key]!=null){
return map[key];
}
dojo.raise("Substitution not found: "+key);
});
};
dojo.string.capitalize=function(str){
if(!dojo.lang.isString(str)){
return "";
}
if(arguments.length==0){
str=this;
}
var _1db=str.split(" ");
for(var i=0;i<_1db.length;i++){
_1db[i]=_1db[i].charAt(0).toUpperCase()+_1db[i].substring(1);
}
return _1db.join(" ");
};
dojo.string.isBlank=function(str){
if(!dojo.lang.isString(str)){
return true;
}
return (dojo.string.trim(str).length==0);
};
dojo.string.encodeAscii=function(str){
if(!dojo.lang.isString(str)){
return str;
}
var ret="";
var _1e0=escape(str);
var _1e1,re=/%u([0-9A-F]{4})/i;
while((_1e1=_1e0.match(re))){
var num=Number("0x"+_1e1[1]);
var _1e4=escape("&#"+num+";");
ret+=_1e0.substring(0,_1e1.index)+_1e4;
_1e0=_1e0.substring(_1e1.index+_1e1[0].length);
}
ret+=_1e0.replace(/\+/g,"%2B");
return ret;
};
dojo.string.escape=function(type,str){
var args=dojo.lang.toArray(arguments,1);
switch(type.toLowerCase()){
case "xml":
case "html":
case "xhtml":
return dojo.string.escapeXml.apply(this,args);
case "sql":
return dojo.string.escapeSql.apply(this,args);
case "regexp":
case "regex":
return dojo.string.escapeRegExp.apply(this,args);
case "javascript":
case "jscript":
case "js":
return dojo.string.escapeJavaScript.apply(this,args);
case "ascii":
return dojo.string.encodeAscii.apply(this,args);
default:
return str;
}
};
dojo.string.escapeXml=function(str,_1e9){
str=str.replace(/&/gm,"&amp;").replace(/</gm,"&lt;").replace(/>/gm,"&gt;").replace(/"/gm,"&quot;");
if(!_1e9){
str=str.replace(/'/gm,"&#39;");
}
return str;
};
dojo.string.escapeSql=function(str){
return str.replace(/'/gm,"''");
};
dojo.string.escapeRegExp=function(str){
return str.replace(/\\/gm,"\\\\").replace(/([\f\b\n\t\r[\^$|?*+(){}])/gm,"\\$1");
};
dojo.string.escapeJavaScript=function(str){
return str.replace(/(["'\f\b\n\t\r])/gm,"\\$1");
};
dojo.string.escapeString=function(str){
return ("\""+str.replace(/(["\\])/g,"\\$1")+"\"").replace(/[\f]/g,"\\f").replace(/[\b]/g,"\\b").replace(/[\n]/g,"\\n").replace(/[\t]/g,"\\t").replace(/[\r]/g,"\\r");
};
dojo.string.summary=function(str,len){
if(!len||str.length<=len){
return str;
}
return str.substring(0,len).replace(/\.+$/,"")+"...";
};
dojo.string.endsWith=function(str,end,_1f2){
if(_1f2){
str=str.toLowerCase();
end=end.toLowerCase();
}
if((str.length-end.length)<0){
return false;
}
return str.lastIndexOf(end)==str.length-end.length;
};
dojo.string.endsWithAny=function(str){
for(var i=1;i<arguments.length;i++){
if(dojo.string.endsWith(str,arguments[i])){
return true;
}
}
return false;
};
dojo.string.startsWith=function(str,_1f6,_1f7){
if(_1f7){
str=str.toLowerCase();
_1f6=_1f6.toLowerCase();
}
return str.indexOf(_1f6)==0;
};
dojo.string.startsWithAny=function(str){
for(var i=1;i<arguments.length;i++){
if(dojo.string.startsWith(str,arguments[i])){
return true;
}
}
return false;
};
dojo.string.has=function(str){
for(var i=1;i<arguments.length;i++){
if(str.indexOf(arguments[i])>-1){
return true;
}
}
return false;
};
dojo.string.normalizeNewlines=function(text,_1fd){
if(_1fd=="\n"){
text=text.replace(/\r\n/g,"\n");
text=text.replace(/\r/g,"\n");
}else{
if(_1fd=="\r"){
text=text.replace(/\r\n/g,"\r");
text=text.replace(/\n/g,"\r");
}else{
text=text.replace(/([^\r])\n/g,"$1\r\n").replace(/\r([^\n])/g,"\r\n$1");
}
}
return text;
};
dojo.string.splitEscaped=function(str,_1ff){
var _200=[];
for(var i=0,_202=0;i<str.length;i++){
if(str.charAt(i)=="\\"){
i++;
continue;
}
if(str.charAt(i)==_1ff){
_200.push(str.substring(_202,i));
_202=i+1;
}
}
_200.push(str.substr(_202));
return _200;
};
dojo.provide("dojo.dom");
dojo.dom.ELEMENT_NODE=1;
dojo.dom.ATTRIBUTE_NODE=2;
dojo.dom.TEXT_NODE=3;
dojo.dom.CDATA_SECTION_NODE=4;
dojo.dom.ENTITY_REFERENCE_NODE=5;
dojo.dom.ENTITY_NODE=6;
dojo.dom.PROCESSING_INSTRUCTION_NODE=7;
dojo.dom.COMMENT_NODE=8;
dojo.dom.DOCUMENT_NODE=9;
dojo.dom.DOCUMENT_TYPE_NODE=10;
dojo.dom.DOCUMENT_FRAGMENT_NODE=11;
dojo.dom.NOTATION_NODE=12;
dojo.dom.dojoml="http://www.dojotoolkit.org/2004/dojoml";
dojo.dom.xmlns={svg:"http://www.w3.org/2000/svg",smil:"http://www.w3.org/2001/SMIL20/",mml:"http://www.w3.org/1998/Math/MathML",cml:"http://www.xml-cml.org",xlink:"http://www.w3.org/1999/xlink",xhtml:"http://www.w3.org/1999/xhtml",xul:"http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul",xbl:"http://www.mozilla.org/xbl",fo:"http://www.w3.org/1999/XSL/Format",xsl:"http://www.w3.org/1999/XSL/Transform",xslt:"http://www.w3.org/1999/XSL/Transform",xi:"http://www.w3.org/2001/XInclude",xforms:"http://www.w3.org/2002/01/xforms",saxon:"http://icl.com/saxon",xalan:"http://xml.apache.org/xslt",xsd:"http://www.w3.org/2001/XMLSchema",dt:"http://www.w3.org/2001/XMLSchema-datatypes",xsi:"http://www.w3.org/2001/XMLSchema-instance",rdf:"http://www.w3.org/1999/02/22-rdf-syntax-ns#",rdfs:"http://www.w3.org/2000/01/rdf-schema#",dc:"http://purl.org/dc/elements/1.1/",dcq:"http://purl.org/dc/qualifiers/1.0","soap-env":"http://schemas.xmlsoap.org/soap/envelope/",wsdl:"http://schemas.xmlsoap.org/wsdl/",AdobeExtensions:"http://ns.adobe.com/AdobeSVGViewerExtensions/3.0/"};
dojo.dom.isNode=function(wh){
if(typeof Element=="function"){
try{
return wh instanceof Element;
}
catch(e){
}
}else{
return wh&&!isNaN(wh.nodeType);
}
};
dojo.dom.getUniqueId=function(){
var _204=dojo.doc();
do{
var id="dj_unique_"+(++arguments.callee._idIncrement);
}while(_204.getElementById(id));
return id;
};
dojo.dom.getUniqueId._idIncrement=0;
dojo.dom.firstElement=dojo.dom.getFirstChildElement=function(_206,_207){
var node=_206.firstChild;
while(node&&node.nodeType!=dojo.dom.ELEMENT_NODE){
node=node.nextSibling;
}
if(_207&&node&&node.tagName&&node.tagName.toLowerCase()!=_207.toLowerCase()){
node=dojo.dom.nextElement(node,_207);
}
return node;
};
dojo.dom.lastElement=dojo.dom.getLastChildElement=function(_209,_20a){
var node=_209.lastChild;
while(node&&node.nodeType!=dojo.dom.ELEMENT_NODE){
node=node.previousSibling;
}
if(_20a&&node&&node.tagName&&node.tagName.toLowerCase()!=_20a.toLowerCase()){
node=dojo.dom.prevElement(node,_20a);
}
return node;
};
dojo.dom.nextElement=dojo.dom.getNextSiblingElement=function(node,_20d){
if(!node){
return null;
}
do{
node=node.nextSibling;
}while(node&&node.nodeType!=dojo.dom.ELEMENT_NODE);
if(node&&_20d&&_20d.toLowerCase()!=node.tagName.toLowerCase()){
return dojo.dom.nextElement(node,_20d);
}
return node;
};
dojo.dom.prevElement=dojo.dom.getPreviousSiblingElement=function(node,_20f){
if(!node){
return null;
}
if(_20f){
_20f=_20f.toLowerCase();
}
do{
node=node.previousSibling;
}while(node&&node.nodeType!=dojo.dom.ELEMENT_NODE);
if(node&&_20f&&_20f.toLowerCase()!=node.tagName.toLowerCase()){
return dojo.dom.prevElement(node,_20f);
}
return node;
};
dojo.dom.moveChildren=function(_210,_211,trim){
var _213=0;
if(trim){
while(_210.hasChildNodes()&&_210.firstChild.nodeType==dojo.dom.TEXT_NODE){
_210.removeChild(_210.firstChild);
}
while(_210.hasChildNodes()&&_210.lastChild.nodeType==dojo.dom.TEXT_NODE){
_210.removeChild(_210.lastChild);
}
}
while(_210.hasChildNodes()){
_211.appendChild(_210.firstChild);
_213++;
}
return _213;
};
dojo.dom.copyChildren=function(_214,_215,trim){
var _217=_214.cloneNode(true);
return this.moveChildren(_217,_215,trim);
};
dojo.dom.replaceChildren=function(node,_219){
var _21a=[];
if(dojo.render.html.ie){
for(var i=0;i<node.childNodes.length;i++){
_21a.push(node.childNodes[i]);
}
}
dojo.dom.removeChildren(node);
node.appendChild(_219);
for(var i=0;i<_21a.length;i++){
dojo.dom.destroyNode(_21a[i]);
}
};
dojo.dom.removeChildren=function(node){
var _21d=node.childNodes.length;
while(node.hasChildNodes()){
dojo.dom.removeNode(node.firstChild);
}
return _21d;
};
dojo.dom.replaceNode=function(node,_21f){
return node.parentNode.replaceChild(_21f,node);
};
dojo.dom.destroyNode=function(node){
if(node.parentNode){
node=dojo.dom.removeNode(node);
}
if(node.nodeType!=3){
if(dojo.evalObjPath("dojo.event.browser.clean",false)){
dojo.event.browser.clean(node);
}
if(dojo.render.html.ie){
node.outerHTML="";
}
}
};
dojo.dom.removeNode=function(node){
if(node&&node.parentNode){
return node.parentNode.removeChild(node);
}
};
dojo.dom.getAncestors=function(node,_223,_224){
var _225=[];
var _226=(_223&&(_223 instanceof Function||typeof _223=="function"));
while(node){
if(!_226||_223(node)){
_225.push(node);
}
if(_224&&_225.length>0){
return _225[0];
}
node=node.parentNode;
}
if(_224){
return null;
}
return _225;
};
dojo.dom.getAncestorsByTag=function(node,tag,_229){
tag=tag.toLowerCase();
return dojo.dom.getAncestors(node,function(el){
return ((el.tagName)&&(el.tagName.toLowerCase()==tag));
},_229);
};
dojo.dom.getFirstAncestorByTag=function(node,tag){
return dojo.dom.getAncestorsByTag(node,tag,true);
};
dojo.dom.isDescendantOf=function(node,_22e,_22f){
if(_22f&&node){
node=node.parentNode;
}
while(node){
if(node==_22e){
return true;
}
node=node.parentNode;
}
return false;
};
dojo.dom.innerXML=function(node){
if(node.innerXML){
return node.innerXML;
}else{
if(node.xml){
return node.xml;
}else{
if(typeof XMLSerializer!="undefined"){
return (new XMLSerializer()).serializeToString(node);
}
}
}
};
dojo.dom.createDocument=function(){
var doc=null;
var _232=dojo.doc();
if(!dj_undef("ActiveXObject")){
var _233=["MSXML2","Microsoft","MSXML","MSXML3"];
for(var i=0;i<_233.length;i++){
try{
doc=new ActiveXObject(_233[i]+".XMLDOM");
}
catch(e){
}
if(doc){
break;
}
}
}else{
if((_232.implementation)&&(_232.implementation.createDocument)){
doc=_232.implementation.createDocument("","",null);
}
}
return doc;
};
dojo.dom.createDocumentFromText=function(str,_236){
if(!_236){
_236="text/xml";
}
if(!dj_undef("DOMParser")){
var _237=new DOMParser();
return _237.parseFromString(str,_236);
}else{
if(!dj_undef("ActiveXObject")){
var _238=dojo.dom.createDocument();
if(_238){
_238.async=false;
_238.loadXML(str);
return _238;
}else{
dojo.debug("toXml didn't work?");
}
}else{
var _239=dojo.doc();
if(_239.createElement){
var tmp=_239.createElement("xml");
tmp.innerHTML=str;
if(_239.implementation&&_239.implementation.createDocument){
var _23b=_239.implementation.createDocument("foo","",null);
for(var i=0;i<tmp.childNodes.length;i++){
_23b.importNode(tmp.childNodes.item(i),true);
}
return _23b;
}
return ((tmp.document)&&(tmp.document.firstChild?tmp.document.firstChild:tmp));
}
}
}
return null;
};
dojo.dom.prependChild=function(node,_23e){
if(_23e.firstChild){
_23e.insertBefore(node,_23e.firstChild);
}else{
_23e.appendChild(node);
}
return true;
};
dojo.dom.insertBefore=function(node,ref,_241){
if((_241!=true)&&(node===ref||node.nextSibling===ref)){
return false;
}
var _242=ref.parentNode;
_242.insertBefore(node,ref);
return true;
};
dojo.dom.insertAfter=function(node,ref,_245){
var pn=ref.parentNode;
if(ref==pn.lastChild){
if((_245!=true)&&(node===ref)){
return false;
}
pn.appendChild(node);
}else{
return this.insertBefore(node,ref.nextSibling,_245);
}
return true;
};
dojo.dom.insertAtPosition=function(node,ref,_249){
if((!node)||(!ref)||(!_249)){
return false;
}
switch(_249.toLowerCase()){
case "before":
return dojo.dom.insertBefore(node,ref);
case "after":
return dojo.dom.insertAfter(node,ref);
case "first":
if(ref.firstChild){
return dojo.dom.insertBefore(node,ref.firstChild);
}else{
ref.appendChild(node);
return true;
}
break;
default:
ref.appendChild(node);
return true;
}
};
dojo.dom.insertAtIndex=function(node,_24b,_24c){
var _24d=_24b.childNodes;
if(!_24d.length||_24d.length==_24c){
_24b.appendChild(node);
return true;
}
if(_24c==0){
return dojo.dom.prependChild(node,_24b);
}
return dojo.dom.insertAfter(node,_24d[_24c-1]);
};
dojo.dom.textContent=function(node,text){
if(arguments.length>1){
var _250=dojo.doc();
dojo.dom.replaceChildren(node,_250.createTextNode(text));
return text;
}else{
if(node.textContent!=undefined){
return node.textContent;
}
var _251="";
if(node==null){
return _251;
}
for(var i=0;i<node.childNodes.length;i++){
switch(node.childNodes[i].nodeType){
case 1:
case 5:
_251+=dojo.dom.textContent(node.childNodes[i]);
break;
case 3:
case 2:
case 4:
_251+=node.childNodes[i].nodeValue;
break;
default:
break;
}
}
return _251;
}
};
dojo.dom.hasParent=function(node){
return Boolean(node&&node.parentNode&&dojo.dom.isNode(node.parentNode));
};
dojo.dom.isTag=function(node){
if(node&&node.tagName){
for(var i=1;i<arguments.length;i++){
if(node.tagName==String(arguments[i])){
return String(arguments[i]);
}
}
}
return "";
};
dojo.dom.setAttributeNS=function(elem,_257,_258,_259){
if(elem==null||((elem==undefined)&&(typeof elem=="undefined"))){
dojo.raise("No element given to dojo.dom.setAttributeNS");
}
if(!((elem.setAttributeNS==undefined)&&(typeof elem.setAttributeNS=="undefined"))){
elem.setAttributeNS(_257,_258,_259);
}else{
var _25a=elem.ownerDocument;
var _25b=_25a.createNode(2,_258,_257);
_25b.nodeValue=_259;
elem.setAttributeNode(_25b);
}
};
dojo.provide("dojo.undo.browser");
try{
if((!djConfig["preventBackButtonFix"])&&(!dojo.hostenv.post_load_)){
document.write("<iframe style='border: 0px; width: 1px; height: 1px; position: absolute; bottom: 0px; right: 0px; visibility: visible;' name='djhistory' id='djhistory' src='"+(dojo.hostenv.getBaseScriptUri()+"iframe_history.html")+"'></iframe>");
}
}
catch(e){
}
if(dojo.render.html.opera){
dojo.debug("Opera is not supported with dojo.undo.browser, so back/forward detection will not work.");
}
dojo.undo.browser={initialHref:(!dj_undef("window"))?window.location.href:"",initialHash:(!dj_undef("window"))?window.location.hash:"",moveForward:false,historyStack:[],forwardStack:[],historyIframe:null,bookmarkAnchor:null,locationTimer:null,setInitialState:function(args){
this.initialState=this._createState(this.initialHref,args,this.initialHash);
},addToHistory:function(args){
this.forwardStack=[];
var hash=null;
var url=null;
if(!this.historyIframe){
this.historyIframe=window.frames["djhistory"];
}
if(!this.bookmarkAnchor){
this.bookmarkAnchor=document.createElement("a");
dojo.body().appendChild(this.bookmarkAnchor);
this.bookmarkAnchor.style.display="none";
}
if(args["changeUrl"]){
hash="#"+((args["changeUrl"]!==true)?args["changeUrl"]:(new Date()).getTime());
if(this.historyStack.length==0&&this.initialState.urlHash==hash){
this.initialState=this._createState(url,args,hash);
return;
}else{
if(this.historyStack.length>0&&this.historyStack[this.historyStack.length-1].urlHash==hash){
this.historyStack[this.historyStack.length-1]=this._createState(url,args,hash);
return;
}
}
this.changingUrl=true;
setTimeout("window.location.href = '"+hash+"'; dojo.undo.browser.changingUrl = false;",1);
this.bookmarkAnchor.href=hash;
if(dojo.render.html.ie){
url=this._loadIframeHistory();
var _260=args["back"]||args["backButton"]||args["handle"];
var tcb=function(_262){
if(window.location.hash!=""){
setTimeout("window.location.href = '"+hash+"';",1);
}
_260.apply(this,[_262]);
};
if(args["back"]){
args.back=tcb;
}else{
if(args["backButton"]){
args.backButton=tcb;
}else{
if(args["handle"]){
args.handle=tcb;
}
}
}
var _263=args["forward"]||args["forwardButton"]||args["handle"];
var tfw=function(_265){
if(window.location.hash!=""){
window.location.href=hash;
}
if(_263){
_263.apply(this,[_265]);
}
};
if(args["forward"]){
args.forward=tfw;
}else{
if(args["forwardButton"]){
args.forwardButton=tfw;
}else{
if(args["handle"]){
args.handle=tfw;
}
}
}
}else{
if(dojo.render.html.moz){
if(!this.locationTimer){
this.locationTimer=setInterval("dojo.undo.browser.checkLocation();",200);
}
}
}
}else{
url=this._loadIframeHistory();
}
this.historyStack.push(this._createState(url,args,hash));
},checkLocation:function(){
if(!this.changingUrl){
var hsl=this.historyStack.length;
if((window.location.hash==this.initialHash||window.location.href==this.initialHref)&&(hsl==1)){
this.handleBackButton();
return;
}
if(this.forwardStack.length>0){
if(this.forwardStack[this.forwardStack.length-1].urlHash==window.location.hash){
this.handleForwardButton();
return;
}
}
if((hsl>=2)&&(this.historyStack[hsl-2])){
if(this.historyStack[hsl-2].urlHash==window.location.hash){
this.handleBackButton();
return;
}
}
}
},iframeLoaded:function(evt,_268){
if(!dojo.render.html.opera){
var _269=this._getUrlQuery(_268.href);
if(_269==null){
if(this.historyStack.length==1){
this.handleBackButton();
}
return;
}
if(this.moveForward){
this.moveForward=false;
return;
}
if(this.historyStack.length>=2&&_269==this._getUrlQuery(this.historyStack[this.historyStack.length-2].url)){
this.handleBackButton();
}else{
if(this.forwardStack.length>0&&_269==this._getUrlQuery(this.forwardStack[this.forwardStack.length-1].url)){
this.handleForwardButton();
}
}
}
},handleBackButton:function(){
var _26a=this.historyStack.pop();
if(!_26a){
return;
}
var last=this.historyStack[this.historyStack.length-1];
if(!last&&this.historyStack.length==0){
last=this.initialState;
}
if(last){
if(last.kwArgs["back"]){
last.kwArgs["back"]();
}else{
if(last.kwArgs["backButton"]){
last.kwArgs["backButton"]();
}else{
if(last.kwArgs["handle"]){
last.kwArgs.handle("back");
}
}
}
}
this.forwardStack.push(_26a);
},handleForwardButton:function(){
var last=this.forwardStack.pop();
if(!last){
return;
}
if(last.kwArgs["forward"]){
last.kwArgs.forward();
}else{
if(last.kwArgs["forwardButton"]){
last.kwArgs.forwardButton();
}else{
if(last.kwArgs["handle"]){
last.kwArgs.handle("forward");
}
}
}
this.historyStack.push(last);
},_createState:function(url,args,hash){
return {"url":url,"kwArgs":args,"urlHash":hash};
},_getUrlQuery:function(url){
var _271=url.split("?");
if(_271.length<2){
return null;
}else{
return _271[1];
}
},_loadIframeHistory:function(){
var url=dojo.hostenv.getBaseScriptUri()+"iframe_history.html?"+(new Date()).getTime();
this.moveForward=true;
dojo.io.setIFrameSrc(this.historyIframe,url,false);
return url;
}};
dojo.provide("dojo.io.BrowserIO");
if(!dj_undef("window")){
dojo.io.checkChildrenForFile=function(node){
var _274=false;
var _275=node.getElementsByTagName("input");
dojo.lang.forEach(_275,function(_276){
if(_274){
return;
}
if(_276.getAttribute("type")=="file"){
_274=true;
}
});
return _274;
};
dojo.io.formHasFile=function(_277){
return dojo.io.checkChildrenForFile(_277);
};
dojo.io.updateNode=function(node,_279){
node=dojo.byId(node);
var args=_279;
if(dojo.lang.isString(_279)){
args={url:_279};
}
args.mimetype="text/html";
args.load=function(t,d,e){
while(node.firstChild){
dojo.dom.destroyNode(node.firstChild);
}
node.innerHTML=d;
};
dojo.io.bind(args);
};
dojo.io.formFilter=function(node){
var type=(node.type||"").toLowerCase();
return !node.disabled&&node.name&&!dojo.lang.inArray(["file","submit","image","reset","button"],type);
};
dojo.io.encodeForm=function(_280,_281,_282){
if((!_280)||(!_280.tagName)||(!_280.tagName.toLowerCase()=="form")){
dojo.raise("Attempted to encode a non-form element.");
}
if(!_282){
_282=dojo.io.formFilter;
}
var enc=/utf/i.test(_281||"")?encodeURIComponent:dojo.string.encodeAscii;
var _284=[];
for(var i=0;i<_280.elements.length;i++){
var elm=_280.elements[i];
if(!elm||elm.tagName.toLowerCase()=="fieldset"||!_282(elm)){
continue;
}
var name=enc(elm.name);
var type=elm.type.toLowerCase();
if(type=="select-multiple"){
for(var j=0;j<elm.options.length;j++){
if(elm.options[j].selected){
_284.push(name+"="+enc(elm.options[j].value));
}
}
}else{
if(dojo.lang.inArray(["radio","checkbox"],type)){
if(elm.checked){
_284.push(name+"="+enc(elm.value));
}
}else{
_284.push(name+"="+enc(elm.value));
}
}
}
var _28a=_280.getElementsByTagName("input");
for(var i=0;i<_28a.length;i++){
var _28b=_28a[i];
if(_28b.type.toLowerCase()=="image"&&_28b.form==_280&&_282(_28b)){
var name=enc(_28b.name);
_284.push(name+"="+enc(_28b.value));
_284.push(name+".x=0");
_284.push(name+".y=0");
}
}
return _284.join("&")+"&";
};
dojo.io.FormBind=function(args){
this.bindArgs={};
if(args&&args.formNode){
this.init(args);
}else{
if(args){
this.init({formNode:args});
}
}
};
dojo.lang.extend(dojo.io.FormBind,{form:null,bindArgs:null,clickedButton:null,init:function(args){
var form=dojo.byId(args.formNode);
if(!form||!form.tagName||form.tagName.toLowerCase()!="form"){
throw new Error("FormBind: Couldn't apply, invalid form");
}else{
if(this.form==form){
return;
}else{
if(this.form){
throw new Error("FormBind: Already applied to a form");
}
}
}
dojo.lang.mixin(this.bindArgs,args);
this.form=form;
this.connect(form,"onsubmit","submit");
for(var i=0;i<form.elements.length;i++){
var node=form.elements[i];
if(node&&node.type&&dojo.lang.inArray(["submit","button"],node.type.toLowerCase())){
this.connect(node,"onclick","click");
}
}
var _291=form.getElementsByTagName("input");
for(var i=0;i<_291.length;i++){
var _292=_291[i];
if(_292.type.toLowerCase()=="image"&&_292.form==form){
this.connect(_292,"onclick","click");
}
}
},onSubmit:function(form){
return true;
},submit:function(e){
e.preventDefault();
if(this.onSubmit(this.form)){
dojo.io.bind(dojo.lang.mixin(this.bindArgs,{formFilter:dojo.lang.hitch(this,"formFilter")}));
}
},click:function(e){
var node=e.currentTarget;
if(node.disabled){
return;
}
this.clickedButton=node;
},formFilter:function(node){
var type=(node.type||"").toLowerCase();
var _299=false;
if(node.disabled||!node.name){
_299=false;
}else{
if(dojo.lang.inArray(["submit","button","image"],type)){
if(!this.clickedButton){
this.clickedButton=node;
}
_299=node==this.clickedButton;
}else{
_299=!dojo.lang.inArray(["file","submit","reset","button"],type);
}
}
return _299;
},connect:function(_29a,_29b,_29c){
if(dojo.evalObjPath("dojo.event.connect")){
dojo.event.connect(_29a,_29b,this,_29c);
}else{
var fcn=dojo.lang.hitch(this,_29c);
_29a[_29b]=function(e){
if(!e){
e=window.event;
}
if(!e.currentTarget){
e.currentTarget=e.srcElement;
}
if(!e.preventDefault){
e.preventDefault=function(){
window.event.returnValue=false;
};
}
fcn(e);
};
}
}});
dojo.io.XMLHTTPTransport=new function(){
var _29f=this;
var _2a0={};
this.useCache=false;
this.preventCache=false;
function getCacheKey(url,_2a2,_2a3){
return url+"|"+_2a2+"|"+_2a3.toLowerCase();
}
function addToCache(url,_2a5,_2a6,http){
_2a0[getCacheKey(url,_2a5,_2a6)]=http;
}
function getFromCache(url,_2a9,_2aa){
return _2a0[getCacheKey(url,_2a9,_2aa)];
}
this.clearCache=function(){
_2a0={};
};
function doLoad(_2ab,http,url,_2ae,_2af){
if(((http.status>=200)&&(http.status<300))||(http.status==304)||(location.protocol=="file:"&&(http.status==0||http.status==undefined))||(location.protocol=="chrome:"&&(http.status==0||http.status==undefined))){
var ret;
if(_2ab.method.toLowerCase()=="head"){
var _2b1=http.getAllResponseHeaders();
ret={};
ret.toString=function(){
return _2b1;
};
var _2b2=_2b1.split(/[\r\n]+/g);
for(var i=0;i<_2b2.length;i++){
var pair=_2b2[i].match(/^([^:]+)\s*:\s*(.+)$/i);
if(pair){
ret[pair[1]]=pair[2];
}
}
}else{
if(_2ab.mimetype=="text/javascript"){
try{
ret=dj_eval(http.responseText);
}
catch(e){
dojo.debug(e);
dojo.debug(http.responseText);
ret=null;
}
}else{
if(_2ab.mimetype=="text/json"||_2ab.mimetype=="application/json"){
try{
ret=dj_eval("("+http.responseText+")");
}
catch(e){
dojo.debug(e);
dojo.debug(http.responseText);
ret=false;
}
}else{
if((_2ab.mimetype=="application/xml")||(_2ab.mimetype=="text/xml")){
ret=http.responseXML;
if(!ret||typeof ret=="string"||!http.getResponseHeader("Content-Type")){
ret=dojo.dom.createDocumentFromText(http.responseText);
}
}else{
ret=http.responseText;
}
}
}
}
if(_2af){
addToCache(url,_2ae,_2ab.method,http);
}
_2ab[(typeof _2ab.load=="function")?"load":"handle"]("load",ret,http,_2ab);
}else{
var _2b5=new dojo.io.Error("XMLHttpTransport Error: "+http.status+" "+http.statusText);
_2ab[(typeof _2ab.error=="function")?"error":"handle"]("error",_2b5,http,_2ab);
}
}
function setHeaders(http,_2b7){
if(_2b7["headers"]){
for(var _2b8 in _2b7["headers"]){
if(_2b8.toLowerCase()=="content-type"&&!_2b7["contentType"]){
_2b7["contentType"]=_2b7["headers"][_2b8];
}else{
http.setRequestHeader(_2b8,_2b7["headers"][_2b8]);
}
}
}
}
this.inFlight=[];
this.inFlightTimer=null;
this.startWatchingInFlight=function(){
if(!this.inFlightTimer){
this.inFlightTimer=setTimeout("dojo.io.XMLHTTPTransport.watchInFlight();",10);
}
};
this.watchInFlight=function(){
var now=null;
if(!dojo.hostenv._blockAsync&&!_29f._blockAsync){
for(var x=this.inFlight.length-1;x>=0;x--){
try{
var tif=this.inFlight[x];
if(!tif||tif.http._aborted||!tif.http.readyState){
this.inFlight.splice(x,1);
continue;
}
if(4==tif.http.readyState){
this.inFlight.splice(x,1);
doLoad(tif.req,tif.http,tif.url,tif.query,tif.useCache);
}else{
if(tif.startTime){
if(!now){
now=(new Date()).getTime();
}
if(tif.startTime+(tif.req.timeoutSeconds*1000)<now){
if(typeof tif.http.abort=="function"){
tif.http.abort();
}
this.inFlight.splice(x,1);
tif.req[(typeof tif.req.timeout=="function")?"timeout":"handle"]("timeout",null,tif.http,tif.req);
}
}
}
}
catch(e){
try{
var _2bc=new dojo.io.Error("XMLHttpTransport.watchInFlight Error: "+e);
tif.req[(typeof tif.req.error=="function")?"error":"handle"]("error",_2bc,tif.http,tif.req);
}
catch(e2){
dojo.debug("XMLHttpTransport error callback failed: "+e2);
}
}
}
}
clearTimeout(this.inFlightTimer);
if(this.inFlight.length==0){
this.inFlightTimer=null;
return;
}
this.inFlightTimer=setTimeout("dojo.io.XMLHTTPTransport.watchInFlight();",10);
};
var _2bd=dojo.hostenv.getXmlhttpObject()?true:false;
this.canHandle=function(_2be){
return _2bd&&dojo.lang.inArray(["text/plain","text/html","application/xml","text/xml","text/javascript","text/json","application/json"],(_2be["mimetype"].toLowerCase()||""))&&!(_2be["formNode"]&&dojo.io.formHasFile(_2be["formNode"]));
};
this.multipartBoundary="45309FFF-BD65-4d50-99C9-36986896A96F";
this.bind=function(_2bf){
if(!_2bf["url"]){
if(!_2bf["formNode"]&&(_2bf["backButton"]||_2bf["back"]||_2bf["changeUrl"]||_2bf["watchForURL"])&&(!djConfig.preventBackButtonFix)){
dojo.deprecated("Using dojo.io.XMLHTTPTransport.bind() to add to browser history without doing an IO request","Use dojo.undo.browser.addToHistory() instead.","0.4");
dojo.undo.browser.addToHistory(_2bf);
return true;
}
}
var url=_2bf.url;
var _2c1="";
if(_2bf["formNode"]){
var ta=_2bf.formNode.getAttribute("action");
if((ta)&&(!_2bf["url"])){
url=ta;
}
var tp=_2bf.formNode.getAttribute("method");
if((tp)&&(!_2bf["method"])){
_2bf.method=tp;
}
_2c1+=dojo.io.encodeForm(_2bf.formNode,_2bf.encoding,_2bf["formFilter"]);
}
if(url.indexOf("#")>-1){
dojo.debug("Warning: dojo.io.bind: stripping hash values from url:",url);
url=url.split("#")[0];
}
if(_2bf["file"]){
_2bf.method="post";
}
if(!_2bf["method"]){
_2bf.method="get";
}
if(_2bf.method.toLowerCase()=="get"){
_2bf.multipart=false;
}else{
if(_2bf["file"]){
_2bf.multipart=true;
}else{
if(!_2bf["multipart"]){
_2bf.multipart=false;
}
}
}
if(_2bf["backButton"]||_2bf["back"]||_2bf["changeUrl"]){
dojo.undo.browser.addToHistory(_2bf);
}
var _2c4=_2bf["content"]||{};
if(_2bf.sendTransport){
_2c4["dojo.transport"]="xmlhttp";
}
do{
if(_2bf.postContent){
_2c1=_2bf.postContent;
break;
}
if(_2c4){
_2c1+=dojo.io.argsFromMap(_2c4,_2bf.encoding);
}
if(_2bf.method.toLowerCase()=="get"||!_2bf.multipart){
break;
}
var t=[];
if(_2c1.length){
var q=_2c1.split("&");
for(var i=0;i<q.length;++i){
if(q[i].length){
var p=q[i].split("=");
t.push("--"+this.multipartBoundary,"Content-Disposition: form-data; name=\""+p[0]+"\"","",p[1]);
}
}
}
if(_2bf.file){
if(dojo.lang.isArray(_2bf.file)){
for(var i=0;i<_2bf.file.length;++i){
var o=_2bf.file[i];
t.push("--"+this.multipartBoundary,"Content-Disposition: form-data; name=\""+o.name+"\"; filename=\""+("fileName" in o?o.fileName:o.name)+"\"","Content-Type: "+("contentType" in o?o.contentType:"application/octet-stream"),"",o.content);
}
}else{
var o=_2bf.file;
t.push("--"+this.multipartBoundary,"Content-Disposition: form-data; name=\""+o.name+"\"; filename=\""+("fileName" in o?o.fileName:o.name)+"\"","Content-Type: "+("contentType" in o?o.contentType:"application/octet-stream"),"",o.content);
}
}
if(t.length){
t.push("--"+this.multipartBoundary+"--","");
_2c1=t.join("\r\n");
}
}while(false);
var _2ca=_2bf["sync"]?false:true;
var _2cb=_2bf["preventCache"]||(this.preventCache==true&&_2bf["preventCache"]!=false);
var _2cc=_2bf["useCache"]==true||(this.useCache==true&&_2bf["useCache"]!=false);
if(!_2cb&&_2cc){
var _2cd=getFromCache(url,_2c1,_2bf.method);
if(_2cd){
doLoad(_2bf,_2cd,url,_2c1,false);
return;
}
}
var http=dojo.hostenv.getXmlhttpObject(_2bf);
var _2cf=false;
if(_2ca){
var _2d0=this.inFlight.push({"req":_2bf,"http":http,"url":url,"query":_2c1,"useCache":_2cc,"startTime":_2bf.timeoutSeconds?(new Date()).getTime():0});
this.startWatchingInFlight();
}else{
_29f._blockAsync=true;
}
if(_2bf.method.toLowerCase()=="post"){
if(!_2bf.user){
http.open("POST",url,_2ca);
}else{
http.open("POST",url,_2ca,_2bf.user,_2bf.password);
}
setHeaders(http,_2bf);
http.setRequestHeader("Content-Type",_2bf.multipart?("multipart/form-data; boundary="+this.multipartBoundary):(_2bf.contentType||"application/x-www-form-urlencoded"));
try{
http.send(_2c1);
}
catch(e){
if(typeof http.abort=="function"){
http.abort();
}
doLoad(_2bf,{status:404},url,_2c1,_2cc);
}
}else{
var _2d1=url;
if(_2c1!=""){
_2d1+=(_2d1.indexOf("?")>-1?"&":"?")+_2c1;
}
if(_2cb){
_2d1+=(dojo.string.endsWithAny(_2d1,"?","&")?"":(_2d1.indexOf("?")>-1?"&":"?"))+"dojo.preventCache="+new Date().valueOf();
}
if(!_2bf.user){
http.open(_2bf.method.toUpperCase(),_2d1,_2ca);
}else{
http.open(_2bf.method.toUpperCase(),_2d1,_2ca,_2bf.user,_2bf.password);
}
setHeaders(http,_2bf);
try{
http.send(null);
}
catch(e){
if(typeof http.abort=="function"){
http.abort();
}
doLoad(_2bf,{status:404},url,_2c1,_2cc);
}
}
if(!_2ca){
doLoad(_2bf,http,url,_2c1,_2cc);
_29f._blockAsync=false;
}
_2bf.abort=function(){
try{
http._aborted=true;
}
catch(e){
}
return http.abort();
};
return;
};
dojo.io.transports.addTransport("XMLHTTPTransport");
};
}
dojo.provide("dojo.io.cookie");
dojo.io.cookie.setCookie=function(name,_2d3,days,path,_2d6,_2d7){
var _2d8=-1;
if((typeof days=="number")&&(days>=0)){
var d=new Date();
d.setTime(d.getTime()+(days*24*60*60*1000));
_2d8=d.toGMTString();
}
_2d3=escape(_2d3);
document.cookie=name+"="+_2d3+";"+(_2d8!=-1?" expires="+_2d8+";":"")+(path?"path="+path:"")+(_2d6?"; domain="+_2d6:"")+(_2d7?"; secure":"");
};
dojo.io.cookie.set=dojo.io.cookie.setCookie;
dojo.io.cookie.getCookie=function(name){
var idx=document.cookie.lastIndexOf(name+"=");
if(idx==-1){
return null;
}
var _2dc=document.cookie.substring(idx+name.length+1);
var end=_2dc.indexOf(";");
if(end==-1){
end=_2dc.length;
}
_2dc=_2dc.substring(0,end);
_2dc=unescape(_2dc);
return _2dc;
};
dojo.io.cookie.get=dojo.io.cookie.getCookie;
dojo.io.cookie.deleteCookie=function(name){
dojo.io.cookie.setCookie(name,"-",0);
};
dojo.io.cookie.setObjectCookie=function(name,obj,days,path,_2e3,_2e4,_2e5){
if(arguments.length==5){
_2e5=_2e3;
_2e3=null;
_2e4=null;
}
var _2e6=[],_2e7,_2e8="";
if(!_2e5){
_2e7=dojo.io.cookie.getObjectCookie(name);
}
if(days>=0){
if(!_2e7){
_2e7={};
}
for(var prop in obj){
if(obj[prop]==null){
delete _2e7[prop];
}else{
if((typeof obj[prop]=="string")||(typeof obj[prop]=="number")){
_2e7[prop]=obj[prop];
}
}
}
prop=null;
for(var prop in _2e7){
_2e6.push(escape(prop)+"="+escape(_2e7[prop]));
}
_2e8=_2e6.join("&");
}
dojo.io.cookie.setCookie(name,_2e8,days,path,_2e3,_2e4);
};
dojo.io.cookie.getObjectCookie=function(name){
var _2eb=null,_2ec=dojo.io.cookie.getCookie(name);
if(_2ec){
_2eb={};
var _2ed=_2ec.split("&");
for(var i=0;i<_2ed.length;i++){
var pair=_2ed[i].split("=");
var _2f0=pair[1];
if(isNaN(_2f0)){
_2f0=unescape(pair[1]);
}
_2eb[unescape(pair[0])]=_2f0;
}
}
return _2eb;
};
dojo.io.cookie.isSupported=function(){
if(typeof navigator.cookieEnabled!="boolean"){
dojo.io.cookie.setCookie("__TestingYourBrowserForCookieSupport__","CookiesAllowed",90,null);
var _2f1=dojo.io.cookie.getCookie("__TestingYourBrowserForCookieSupport__");
navigator.cookieEnabled=(_2f1=="CookiesAllowed");
if(navigator.cookieEnabled){
this.deleteCookie("__TestingYourBrowserForCookieSupport__");
}
}
return navigator.cookieEnabled;
};
if(!dojo.io.cookies){
dojo.io.cookies=dojo.io.cookie;
}
dojo.provide("dojo.io.*");


__CPAN_EDITION__ browserio build.txt

Files baked into this package:

dojoGuardStart.js,
../src/bootstrap1.js,
../src/loader.js,
dojoGuardEnd.js,
../src/hostenv_browser.js,
../src/bootstrap2.js,
../src/string/common.js,
../src/string.js,
../src/lang/common.js,
../src/lang/extras.js,
../src/io/common.js,
../src/lang/array.js,
../src/lang/func.js,
../src/string/extras.js,
../src/dom.js,
../src/undo/browser.js,
../src/io/BrowserIO.js,
../src/io/cookie.js,
../src/io/__package__.js

		
__CPAN_EDITION__ charting dojo.js
/*
	Copyright (c) 2004-2006, The Dojo Foundation
	All Rights Reserved.

	Licensed under the Academic Free License version 2.1 or above OR the
	modified BSD license. For more information on Dojo licensing, see:

		http://dojotoolkit.org/community/licensing.shtml
*/

/*
	This is a compiled version of Dojo, built for deployment and not for
	development. To get an editable version, please visit:

		http://dojotoolkit.org

	for documentation and information on getting the source.
*/

if(typeof dojo=="undefined"){
var dj_global=this;
var dj_currentContext=this;
function dj_undef(_1,_2){
return (typeof (_2||dj_currentContext)[_1]=="undefined");
}
if(dj_undef("djConfig",this)){
var djConfig={};
}
if(dj_undef("dojo",this)){
var dojo={};
}
dojo.global=function(){
return dj_currentContext;
};
dojo.locale=djConfig.locale;
dojo.version={major:0,minor:4,patch:1,flag:"",revision:Number("$Rev: 6824 $".match(/[0-9]+/)[0]),toString:function(){
with(dojo.version){
return major+"."+minor+"."+patch+flag+" ("+revision+")";
}
}};
dojo.evalProp=function(_3,_4,_5){
if((!_4)||(!_3)){
return undefined;
}
if(!dj_undef(_3,_4)){
return _4[_3];
}
return (_5?(_4[_3]={}):undefined);
};
dojo.parseObjPath=function(_6,_7,_8){
var _9=(_7||dojo.global());
var _a=_6.split(".");
var _b=_a.pop();
for(var i=0,l=_a.length;i<l&&_9;i++){
_9=dojo.evalProp(_a[i],_9,_8);
}
return {obj:_9,prop:_b};
};
dojo.evalObjPath=function(_e,_f){
if(typeof _e!="string"){
return dojo.global();
}
if(_e.indexOf(".")==-1){
return dojo.evalProp(_e,dojo.global(),_f);
}
var ref=dojo.parseObjPath(_e,dojo.global(),_f);
if(ref){
return dojo.evalProp(ref.prop,ref.obj,_f);
}
return null;
};
dojo.errorToString=function(_11){
if(!dj_undef("message",_11)){
return _11.message;
}else{
if(!dj_undef("description",_11)){
return _11.description;
}else{
return _11;
}
}
};
dojo.raise=function(_12,_13){
if(_13){
_12=_12+": "+dojo.errorToString(_13);
}else{
_12=dojo.errorToString(_12);
}
try{
if(djConfig.isDebug){
dojo.hostenv.println("FATAL exception raised: "+_12);
}
}
catch(e){
}
throw _13||Error(_12);
};
dojo.debug=function(){
};
dojo.debugShallow=function(obj){
};
dojo.profile={start:function(){
},end:function(){
},stop:function(){
},dump:function(){
}};
function dj_eval(_15){
return dj_global.eval?dj_global.eval(_15):eval(_15);
}
dojo.unimplemented=function(_16,_17){
var _18="'"+_16+"' not implemented";
if(_17!=null){
_18+=" "+_17;
}
dojo.raise(_18);
};
dojo.deprecated=function(_19,_1a,_1b){
var _1c="DEPRECATED: "+_19;
if(_1a){
_1c+=" "+_1a;
}
if(_1b){
_1c+=" -- will be removed in version: "+_1b;
}
dojo.debug(_1c);
};
dojo.render=(function(){
function vscaffold(_1d,_1e){
var tmp={capable:false,support:{builtin:false,plugin:false},prefixes:_1d};
for(var i=0;i<_1e.length;i++){
tmp[_1e[i]]=false;
}
return tmp;
}
return {name:"",ver:dojo.version,os:{win:false,linux:false,osx:false},html:vscaffold(["html"],["ie","opera","khtml","safari","moz"]),svg:vscaffold(["svg"],["corel","adobe","batik"]),vml:vscaffold(["vml"],["ie"]),swf:vscaffold(["Swf","Flash","Mm"],["mm"]),swt:vscaffold(["Swt"],["ibm"])};
})();
dojo.hostenv=(function(){
var _21={isDebug:false,allowQueryConfig:false,baseScriptUri:"",baseRelativePath:"",libraryScriptUri:"",iePreventClobber:false,ieClobberMinimal:true,preventBackButtonFix:true,delayMozLoadingFix:false,searchIds:[],parseWidgets:true};
if(typeof djConfig=="undefined"){
djConfig=_21;
}else{
for(var _22 in _21){
if(typeof djConfig[_22]=="undefined"){
djConfig[_22]=_21[_22];
}
}
}
return {name_:"(unset)",version_:"(unset)",getName:function(){
return this.name_;
},getVersion:function(){
return this.version_;
},getText:function(uri){
dojo.unimplemented("getText","uri="+uri);
}};
})();
dojo.hostenv.getBaseScriptUri=function(){
if(djConfig.baseScriptUri.length){
return djConfig.baseScriptUri;
}
var uri=new String(djConfig.libraryScriptUri||djConfig.baseRelativePath);
if(!uri){
dojo.raise("Nothing returned by getLibraryScriptUri(): "+uri);
}
var _25=uri.lastIndexOf("/");
djConfig.baseScriptUri=djConfig.baseRelativePath;
return djConfig.baseScriptUri;
};
(function(){
var _26={pkgFileName:"__package__",loading_modules_:{},loaded_modules_:{},addedToLoadingCount:[],removedFromLoadingCount:[],inFlightCount:0,modulePrefixes_:{dojo:{name:"dojo",value:"src"}},setModulePrefix:function(_27,_28){
this.modulePrefixes_[_27]={name:_27,value:_28};
},moduleHasPrefix:function(_29){
var mp=this.modulePrefixes_;
return Boolean(mp[_29]&&mp[_29].value);
},getModulePrefix:function(_2b){
if(this.moduleHasPrefix(_2b)){
return this.modulePrefixes_[_2b].value;
}
return _2b;
},getTextStack:[],loadUriStack:[],loadedUris:[],post_load_:false,modulesLoadedListeners:[],unloadListeners:[],loadNotifying:false};
for(var _2c in _26){
dojo.hostenv[_2c]=_26[_2c];
}
})();
dojo.hostenv.loadPath=function(_2d,_2e,cb){
var uri;
if(_2d.charAt(0)=="/"||_2d.match(/^\w+:/)){
uri=_2d;
}else{
uri=this.getBaseScriptUri()+_2d;
}
if(djConfig.cacheBust&&dojo.render.html.capable){
uri+="?"+String(djConfig.cacheBust).replace(/\W+/g,"");
}
try{
return !_2e?this.loadUri(uri,cb):this.loadUriAndCheck(uri,_2e,cb);
}
catch(e){
dojo.debug(e);
return false;
}
};
dojo.hostenv.loadUri=function(uri,cb){
if(this.loadedUris[uri]){
return true;
}
var _33=this.getText(uri,null,true);
if(!_33){
return false;
}
this.loadedUris[uri]=true;
if(cb){
_33="("+_33+")";
}
var _34=dj_eval(_33);
if(cb){
cb(_34);
}
return true;
};
dojo.hostenv.loadUriAndCheck=function(uri,_36,cb){
var ok=true;
try{
ok=this.loadUri(uri,cb);
}
catch(e){
dojo.debug("failed loading ",uri," with error: ",e);
}
return Boolean(ok&&this.findModule(_36,false));
};
dojo.loaded=function(){
};
dojo.unloaded=function(){
};
dojo.hostenv.loaded=function(){
this.loadNotifying=true;
this.post_load_=true;
var mll=this.modulesLoadedListeners;
for(var x=0;x<mll.length;x++){
mll[x]();
}
this.modulesLoadedListeners=[];
this.loadNotifying=false;
dojo.loaded();
};
dojo.hostenv.unloaded=function(){
var mll=this.unloadListeners;
while(mll.length){
(mll.pop())();
}
dojo.unloaded();
};
dojo.addOnLoad=function(obj,_3d){
var dh=dojo.hostenv;
if(arguments.length==1){
dh.modulesLoadedListeners.push(obj);
}else{
if(arguments.length>1){
dh.modulesLoadedListeners.push(function(){
obj[_3d]();
});
}
}
if(dh.post_load_&&dh.inFlightCount==0&&!dh.loadNotifying){
dh.callLoaded();
}
};
dojo.addOnUnload=function(obj,_40){
var dh=dojo.hostenv;
if(arguments.length==1){
dh.unloadListeners.push(obj);
}else{
if(arguments.length>1){
dh.unloadListeners.push(function(){
obj[_40]();
});
}
}
};
dojo.hostenv.modulesLoaded=function(){
if(this.post_load_){
return;
}
if(this.loadUriStack.length==0&&this.getTextStack.length==0){
if(this.inFlightCount>0){
dojo.debug("files still in flight!");
return;
}
dojo.hostenv.callLoaded();
}
};
dojo.hostenv.callLoaded=function(){
if(typeof setTimeout=="object"){
setTimeout("dojo.hostenv.loaded();",0);
}else{
dojo.hostenv.loaded();
}
};
dojo.hostenv.getModuleSymbols=function(_42){
var _43=_42.split(".");
for(var i=_43.length;i>0;i--){
var _45=_43.slice(0,i).join(".");
if((i==1)&&!this.moduleHasPrefix(_45)){
_43[0]="../"+_43[0];
}else{
var _46=this.getModulePrefix(_45);
if(_46!=_45){
_43.splice(0,i,_46);
break;
}
}
}
return _43;
};
dojo.hostenv._global_omit_module_check=false;
dojo.hostenv.loadModule=function(_47,_48,_49){
if(!_47){
return;
}
_49=this._global_omit_module_check||_49;
var _4a=this.findModule(_47,false);
if(_4a){
return _4a;
}
if(dj_undef(_47,this.loading_modules_)){
this.addedToLoadingCount.push(_47);
}
this.loading_modules_[_47]=1;
var _4b=_47.replace(/\./g,"/")+".js";
var _4c=_47.split(".");
var _4d=this.getModuleSymbols(_47);
var _4e=((_4d[0].charAt(0)!="/")&&!_4d[0].match(/^\w+:/));
var _4f=_4d[_4d.length-1];
var ok;
if(_4f=="*"){
_47=_4c.slice(0,-1).join(".");
while(_4d.length){
_4d.pop();
_4d.push(this.pkgFileName);
_4b=_4d.join("/")+".js";
if(_4e&&_4b.charAt(0)=="/"){
_4b=_4b.slice(1);
}
ok=this.loadPath(_4b,!_49?_47:null);
if(ok){
break;
}
_4d.pop();
}
}else{
_4b=_4d.join("/")+".js";
_47=_4c.join(".");
var _51=!_49?_47:null;
ok=this.loadPath(_4b,_51);
if(!ok&&!_48){
_4d.pop();
while(_4d.length){
_4b=_4d.join("/")+".js";
ok=this.loadPath(_4b,_51);
if(ok){
break;
}
_4d.pop();
_4b=_4d.join("/")+"/"+this.pkgFileName+".js";
if(_4e&&_4b.charAt(0)=="/"){
_4b=_4b.slice(1);
}
ok=this.loadPath(_4b,_51);
if(ok){
break;
}
}
}
if(!ok&&!_49){
dojo.raise("Could not load '"+_47+"'; last tried '"+_4b+"'");
}
}
if(!_49&&!this["isXDomain"]){
_4a=this.findModule(_47,false);
if(!_4a){
dojo.raise("symbol '"+_47+"' is not defined after loading '"+_4b+"'");
}
}
return _4a;
};
dojo.hostenv.startPackage=function(_52){
var _53=String(_52);
var _54=_53;
var _55=_52.split(/\./);
if(_55[_55.length-1]=="*"){
_55.pop();
_54=_55.join(".");
}
var _56=dojo.evalObjPath(_54,true);
this.loaded_modules_[_53]=_56;
this.loaded_modules_[_54]=_56;
return _56;
};
dojo.hostenv.findModule=function(_57,_58){
var lmn=String(_57);
if(this.loaded_modules_[lmn]){
return this.loaded_modules_[lmn];
}
if(_58){
dojo.raise("no loaded module named '"+_57+"'");
}
return null;
};
dojo.kwCompoundRequire=function(_5a){
var _5b=_5a["common"]||[];
var _5c=_5a[dojo.hostenv.name_]?_5b.concat(_5a[dojo.hostenv.name_]||[]):_5b.concat(_5a["default"]||[]);
for(var x=0;x<_5c.length;x++){
var _5e=_5c[x];
if(_5e.constructor==Array){
dojo.hostenv.loadModule.apply(dojo.hostenv,_5e);
}else{
dojo.hostenv.loadModule(_5e);
}
}
};
dojo.require=function(_5f){
dojo.hostenv.loadModule.apply(dojo.hostenv,arguments);
};
dojo.requireIf=function(_60,_61){
var _62=arguments[0];
if((_62===true)||(_62=="common")||(_62&&dojo.render[_62].capable)){
var _63=[];
for(var i=1;i<arguments.length;i++){
_63.push(arguments[i]);
}
dojo.require.apply(dojo,_63);
}
};
dojo.requireAfterIf=dojo.requireIf;
dojo.provide=function(_65){
return dojo.hostenv.startPackage.apply(dojo.hostenv,arguments);
};
dojo.registerModulePath=function(_66,_67){
return dojo.hostenv.setModulePrefix(_66,_67);
};
dojo.setModulePrefix=function(_68,_69){
dojo.deprecated("dojo.setModulePrefix(\""+_68+"\", \""+_69+"\")","replaced by dojo.registerModulePath","0.5");
return dojo.registerModulePath(_68,_69);
};
dojo.exists=function(obj,_6b){
var p=_6b.split(".");
for(var i=0;i<p.length;i++){
if(!obj[p[i]]){
return false;
}
obj=obj[p[i]];
}
return true;
};
dojo.hostenv.normalizeLocale=function(_6e){
var _6f=_6e?_6e.toLowerCase():dojo.locale;
if(_6f=="root"){
_6f="ROOT";
}
return _6f;
};
dojo.hostenv.searchLocalePath=function(_70,_71,_72){
_70=dojo.hostenv.normalizeLocale(_70);
var _73=_70.split("-");
var _74=[];
for(var i=_73.length;i>0;i--){
_74.push(_73.slice(0,i).join("-"));
}
_74.push(false);
if(_71){
_74.reverse();
}
for(var j=_74.length-1;j>=0;j--){
var loc=_74[j]||"ROOT";
var _78=_72(loc);
if(_78){
break;
}
}
};
dojo.hostenv.localesGenerated;
dojo.hostenv.registerNlsPrefix=function(){
dojo.registerModulePath("nls","nls");
};
dojo.hostenv.preloadLocalizations=function(){
if(dojo.hostenv.localesGenerated){
dojo.hostenv.registerNlsPrefix();
function preload(_79){
_79=dojo.hostenv.normalizeLocale(_79);
dojo.hostenv.searchLocalePath(_79,true,function(loc){
for(var i=0;i<dojo.hostenv.localesGenerated.length;i++){
if(dojo.hostenv.localesGenerated[i]==loc){
dojo["require"]("nls.dojo_"+loc);
return true;
}
}
return false;
});
}
preload();
var _7c=djConfig.extraLocale||[];
for(var i=0;i<_7c.length;i++){
preload(_7c[i]);
}
}
dojo.hostenv.preloadLocalizations=function(){
};
};
dojo.requireLocalization=function(_7e,_7f,_80,_81){
dojo.hostenv.preloadLocalizations();
var _82=dojo.hostenv.normalizeLocale(_80);
var _83=[_7e,"nls",_7f].join(".");
var _84="";
if(_81){
var _85=_81.split(",");
for(var i=0;i<_85.length;i++){
if(_82.indexOf(_85[i])==0){
if(_85[i].length>_84.length){
_84=_85[i];
}
}
}
if(!_84){
_84="ROOT";
}
}
var _87=_81?_84:_82;
var _88=dojo.hostenv.findModule(_83);
var _89=null;
if(_88){
if(djConfig.localizationComplete&&_88._built){
return;
}
var _8a=_87.replace("-","_");
var _8b=_83+"."+_8a;
_89=dojo.hostenv.findModule(_8b);
}
if(!_89){
_88=dojo.hostenv.startPackage(_83);
var _8c=dojo.hostenv.getModuleSymbols(_7e);
var _8d=_8c.concat("nls").join("/");
var _8e;
dojo.hostenv.searchLocalePath(_87,_81,function(loc){
var _90=loc.replace("-","_");
var _91=_83+"."+_90;
var _92=false;
if(!dojo.hostenv.findModule(_91)){
dojo.hostenv.startPackage(_91);
var _93=[_8d];
if(loc!="ROOT"){
_93.push(loc);
}
_93.push(_7f);
var _94=_93.join("/")+".js";
_92=dojo.hostenv.loadPath(_94,null,function(_95){
var _96=function(){
};
_96.prototype=_8e;
_88[_90]=new _96();
for(var j in _95){
_88[_90][j]=_95[j];
}
});
}else{
_92=true;
}
if(_92&&_88[_90]){
_8e=_88[_90];
}else{
_88[_90]=_8e;
}
if(_81){
return true;
}
});
}
if(_81&&_82!=_84){
_88[_82.replace("-","_")]=_88[_84.replace("-","_")];
}
};
(function(){
var _98=djConfig.extraLocale;
if(_98){
if(!_98 instanceof Array){
_98=[_98];
}
var req=dojo.requireLocalization;
dojo.requireLocalization=function(m,b,_9c,_9d){
req(m,b,_9c,_9d);
if(_9c){
return;
}
for(var i=0;i<_98.length;i++){
req(m,b,_98[i],_9d);
}
};
}
})();
}
if(typeof window!="undefined"){
(function(){
if(djConfig.allowQueryConfig){
var _9f=document.location.toString();
var _a0=_9f.split("?",2);
if(_a0.length>1){
var _a1=_a0[1];
var _a2=_a1.split("&");
for(var x in _a2){
var sp=_a2[x].split("=");
if((sp[0].length>9)&&(sp[0].substr(0,9)=="djConfig.")){
var opt=sp[0].substr(9);
try{
djConfig[opt]=eval(sp[1]);
}
catch(e){
djConfig[opt]=sp[1];
}
}
}
}
}
if(((djConfig["baseScriptUri"]=="")||(djConfig["baseRelativePath"]==""))&&(document&&document.getElementsByTagName)){
var _a6=document.getElementsByTagName("script");
var _a7=/(__package__|dojo|bootstrap1)\.js([\?\.]|$)/i;
for(var i=0;i<_a6.length;i++){
var src=_a6[i].getAttribute("src");
if(!src){
continue;
}
var m=src.match(_a7);
if(m){
var _ab=src.substring(0,m.index);
if(src.indexOf("bootstrap1")>-1){
_ab+="../";
}
if(!this["djConfig"]){
djConfig={};
}
if(djConfig["baseScriptUri"]==""){
djConfig["baseScriptUri"]=_ab;
}
if(djConfig["baseRelativePath"]==""){
djConfig["baseRelativePath"]=_ab;
}
break;
}
}
}
var dr=dojo.render;
var drh=dojo.render.html;
var drs=dojo.render.svg;
var dua=(drh.UA=navigator.userAgent);
var dav=(drh.AV=navigator.appVersion);
var t=true;
var f=false;
drh.capable=t;
drh.support.builtin=t;
dr.ver=parseFloat(drh.AV);
dr.os.mac=dav.indexOf("Macintosh")>=0;
dr.os.win=dav.indexOf("Windows")>=0;
dr.os.linux=dav.indexOf("X11")>=0;
drh.opera=dua.indexOf("Opera")>=0;
drh.khtml=(dav.indexOf("Konqueror")>=0)||(dav.indexOf("Safari")>=0);
drh.safari=dav.indexOf("Safari")>=0;
var _b3=dua.indexOf("Gecko");
drh.mozilla=drh.moz=(_b3>=0)&&(!drh.khtml);
if(drh.mozilla){
drh.geckoVersion=dua.substring(_b3+6,_b3+14);
}
drh.ie=(document.all)&&(!drh.opera);
drh.ie50=drh.ie&&dav.indexOf("MSIE 5.0")>=0;
drh.ie55=drh.ie&&dav.indexOf("MSIE 5.5")>=0;
drh.ie60=drh.ie&&dav.indexOf("MSIE 6.0")>=0;
drh.ie70=drh.ie&&dav.indexOf("MSIE 7.0")>=0;
var cm=document["compatMode"];
drh.quirks=(cm=="BackCompat")||(cm=="QuirksMode")||drh.ie55||drh.ie50;
dojo.locale=dojo.locale||(drh.ie?navigator.userLanguage:navigator.language).toLowerCase();
dr.vml.capable=drh.ie;
drs.capable=f;
drs.support.plugin=f;
drs.support.builtin=f;
var _b5=window["document"];
var tdi=_b5["implementation"];
if((tdi)&&(tdi["hasFeature"])&&(tdi.hasFeature("org.w3c.dom.svg","1.0"))){
drs.capable=t;
drs.support.builtin=t;
drs.support.plugin=f;
}
if(drh.safari){
var tmp=dua.split("AppleWebKit/")[1];
var ver=parseFloat(tmp.split(" ")[0]);
if(ver>=420){
drs.capable=t;
drs.support.builtin=t;
drs.support.plugin=f;
}
}else{
}
})();
dojo.hostenv.startPackage("dojo.hostenv");
dojo.render.name=dojo.hostenv.name_="browser";
dojo.hostenv.searchIds=[];
dojo.hostenv._XMLHTTP_PROGIDS=["Msxml2.XMLHTTP","Microsoft.XMLHTTP","Msxml2.XMLHTTP.4.0"];
dojo.hostenv.getXmlhttpObject=function(){
var _b9=null;
var _ba=null;
try{
_b9=new XMLHttpRequest();
}
catch(e){
}
if(!_b9){
for(var i=0;i<3;++i){
var _bc=dojo.hostenv._XMLHTTP_PROGIDS[i];
try{
_b9=new ActiveXObject(_bc);
}
catch(e){
_ba=e;
}
if(_b9){
dojo.hostenv._XMLHTTP_PROGIDS=[_bc];
break;
}
}
}
if(!_b9){
return dojo.raise("XMLHTTP not available",_ba);
}
return _b9;
};
dojo.hostenv._blockAsync=false;
dojo.hostenv.getText=function(uri,_be,_bf){
if(!_be){
this._blockAsync=true;
}
var _c0=this.getXmlhttpObject();
function isDocumentOk(_c1){
var _c2=_c1["status"];
return Boolean((!_c2)||((200<=_c2)&&(300>_c2))||(_c2==304));
}
if(_be){
var _c3=this,_c4=null,gbl=dojo.global();
var xhr=dojo.evalObjPath("dojo.io.XMLHTTPTransport");
_c0.onreadystatechange=function(){
if(_c4){
gbl.clearTimeout(_c4);
_c4=null;
}
if(_c3._blockAsync||(xhr&&xhr._blockAsync)){
_c4=gbl.setTimeout(function(){
_c0.onreadystatechange.apply(this);
},10);
}else{
if(4==_c0.readyState){
if(isDocumentOk(_c0)){
_be(_c0.responseText);
}
}
}
};
}
_c0.open("GET",uri,_be?true:false);
try{
_c0.send(null);
if(_be){
return null;
}
if(!isDocumentOk(_c0)){
var err=Error("Unable to load "+uri+" status:"+_c0.status);
err.status=_c0.status;
err.responseText=_c0.responseText;
throw err;
}
}
catch(e){
this._blockAsync=false;
if((_bf)&&(!_be)){
return null;
}else{
throw e;
}
}
this._blockAsync=false;
return _c0.responseText;
};
dojo.hostenv.defaultDebugContainerId="dojoDebug";
dojo.hostenv._println_buffer=[];
dojo.hostenv._println_safe=false;
dojo.hostenv.println=function(_c8){
if(!dojo.hostenv._println_safe){
dojo.hostenv._println_buffer.push(_c8);
}else{
try{
var _c9=document.getElementById(djConfig.debugContainerId?djConfig.debugContainerId:dojo.hostenv.defaultDebugContainerId);
if(!_c9){
_c9=dojo.body();
}
var div=document.createElement("div");
div.appendChild(document.createTextNode(_c8));
_c9.appendChild(div);
}
catch(e){
try{
document.write("<div>"+_c8+"</div>");
}
catch(e2){
window.status=_c8;
}
}
}
};
dojo.addOnLoad(function(){
dojo.hostenv._println_safe=true;
while(dojo.hostenv._println_buffer.length>0){
dojo.hostenv.println(dojo.hostenv._println_buffer.shift());
}
});
function dj_addNodeEvtHdlr(_cb,_cc,fp){
var _ce=_cb["on"+_cc]||function(){
};
_cb["on"+_cc]=function(){
fp.apply(_cb,arguments);
_ce.apply(_cb,arguments);
};
return true;
}
function dj_load_init(e){
var _d0=(e&&e.type)?e.type.toLowerCase():"load";
if(arguments.callee.initialized||(_d0!="domcontentloaded"&&_d0!="load")){
return;
}
arguments.callee.initialized=true;
if(typeof (_timer)!="undefined"){
clearInterval(_timer);
delete _timer;
}
var _d1=function(){
if(dojo.render.html.ie){
dojo.hostenv.makeWidgets();
}
};
if(dojo.hostenv.inFlightCount==0){
_d1();
dojo.hostenv.modulesLoaded();
}else{
dojo.hostenv.modulesLoadedListeners.unshift(_d1);
}
}
if(document.addEventListener){
if(dojo.render.html.opera||(dojo.render.html.moz&&!djConfig.delayMozLoadingFix)){
document.addEventListener("DOMContentLoaded",dj_load_init,null);
}
window.addEventListener("load",dj_load_init,null);
}
if(dojo.render.html.ie&&dojo.render.os.win){
document.attachEvent("onreadystatechange",function(e){
if(document.readyState=="complete"){
dj_load_init();
}
});
}
if(/(WebKit|khtml)/i.test(navigator.userAgent)){
var _timer=setInterval(function(){
if(/loaded|complete/.test(document.readyState)){
dj_load_init();
}
},10);
}
if(dojo.render.html.ie){
dj_addNodeEvtHdlr(window,"beforeunload",function(){
dojo.hostenv._unloading=true;
window.setTimeout(function(){
dojo.hostenv._unloading=false;
},0);
});
}
dj_addNodeEvtHdlr(window,"unload",function(){
dojo.hostenv.unloaded();
if((!dojo.render.html.ie)||(dojo.render.html.ie&&dojo.hostenv._unloading)){
dojo.hostenv.unloaded();
}
});
dojo.hostenv.makeWidgets=function(){
var _d3=[];
if(djConfig.searchIds&&djConfig.searchIds.length>0){
_d3=_d3.concat(djConfig.searchIds);
}
if(dojo.hostenv.searchIds&&dojo.hostenv.searchIds.length>0){
_d3=_d3.concat(dojo.hostenv.searchIds);
}
if((djConfig.parseWidgets)||(_d3.length>0)){
if(dojo.evalObjPath("dojo.widget.Parse")){
var _d4=new dojo.xml.Parse();
if(_d3.length>0){
for(var x=0;x<_d3.length;x++){
var _d6=document.getElementById(_d3[x]);
if(!_d6){
continue;
}
var _d7=_d4.parseElement(_d6,null,true);
dojo.widget.getParser().createComponents(_d7);
}
}else{
if(djConfig.parseWidgets){
var _d7=_d4.parseElement(dojo.body(),null,true);
dojo.widget.getParser().createComponents(_d7);
}
}
}
}
};
dojo.addOnLoad(function(){
if(!dojo.render.html.ie){
dojo.hostenv.makeWidgets();
}
});
try{
if(dojo.render.html.ie){
document.namespaces.add("v","urn:schemas-microsoft-com:vml");
document.createStyleSheet().addRule("v\\:*","behavior:url(#default#VML)");
}
}
catch(e){
}
dojo.hostenv.writeIncludes=function(){
};
if(!dj_undef("document",this)){
dj_currentDocument=this.document;
}
dojo.doc=function(){
return dj_currentDocument;
};
dojo.body=function(){
return dojo.doc().body||dojo.doc().getElementsByTagName("body")[0];
};
dojo.byId=function(id,doc){
if((id)&&((typeof id=="string")||(id instanceof String))){
if(!doc){
doc=dj_currentDocument;
}
var ele=doc.getElementById(id);
if(ele&&(ele.id!=id)&&doc.all){
ele=null;
eles=doc.all[id];
if(eles){
if(eles.length){
for(var i=0;i<eles.length;i++){
if(eles[i].id==id){
ele=eles[i];
break;
}
}
}else{
ele=eles;
}
}
}
return ele;
}
return id;
};
dojo.setContext=function(_dc,_dd){
dj_currentContext=_dc;
dj_currentDocument=_dd;
};
dojo._fireCallback=function(_de,_df,_e0){
if((_df)&&((typeof _de=="string")||(_de instanceof String))){
_de=_df[_de];
}
return (_df?_de.apply(_df,_e0||[]):_de());
};
dojo.withGlobal=function(_e1,_e2,_e3,_e4){
var _e5;
var _e6=dj_currentContext;
var _e7=dj_currentDocument;
try{
dojo.setContext(_e1,_e1.document);
_e5=dojo._fireCallback(_e2,_e3,_e4);
}
finally{
dojo.setContext(_e6,_e7);
}
return _e5;
};
dojo.withDoc=function(_e8,_e9,_ea,_eb){
var _ec;
var _ed=dj_currentDocument;
try{
dj_currentDocument=_e8;
_ec=dojo._fireCallback(_e9,_ea,_eb);
}
finally{
dj_currentDocument=_ed;
}
return _ec;
};
}
(function(){
if(typeof dj_usingBootstrap!="undefined"){
return;
}
var _ee=false;
var _ef=false;
var _f0=false;
if((typeof this["load"]=="function")&&((typeof this["Packages"]=="function")||(typeof this["Packages"]=="object"))){
_ee=true;
}else{
if(typeof this["load"]=="function"){
_ef=true;
}else{
if(window.widget){
_f0=true;
}
}
}
var _f1=[];
if((this["djConfig"])&&((djConfig["isDebug"])||(djConfig["debugAtAllCosts"]))){
_f1.push("debug.js");
}
if((this["djConfig"])&&(djConfig["debugAtAllCosts"])&&(!_ee)&&(!_f0)){
_f1.push("browser_debug.js");
}
var _f2=djConfig["baseScriptUri"];
if((this["djConfig"])&&(djConfig["baseLoaderUri"])){
_f2=djConfig["baseLoaderUri"];
}
for(var x=0;x<_f1.length;x++){
var _f4=_f2+"src/"+_f1[x];
if(_ee||_ef){
load(_f4);
}else{
try{
document.write("<scr"+"ipt type='text/javascript' src='"+_f4+"'></scr"+"ipt>");
}
catch(e){
var _f5=document.createElement("script");
_f5.src=_f4;
document.getElementsByTagName("head")[0].appendChild(_f5);
}
}
}
})();
dojo.provide("dojo.lang.common");
dojo.lang.inherits=function(_f6,_f7){
if(!dojo.lang.isFunction(_f7)){
dojo.raise("dojo.inherits: superclass argument ["+_f7+"] must be a function (subclass: ["+_f6+"']");
}
_f6.prototype=new _f7();
_f6.prototype.constructor=_f6;
_f6.superclass=_f7.prototype;
_f6["super"]=_f7.prototype;
};
dojo.lang._mixin=function(obj,_f9){
var _fa={};
for(var x in _f9){
if((typeof _fa[x]=="undefined")||(_fa[x]!=_f9[x])){
obj[x]=_f9[x];
}
}
if(dojo.render.html.ie&&(typeof (_f9["toString"])=="function")&&(_f9["toString"]!=obj["toString"])&&(_f9["toString"]!=_fa["toString"])){
obj.toString=_f9.toString;
}
return obj;
};
dojo.lang.mixin=function(obj,_fd){
for(var i=1,l=arguments.length;i<l;i++){
dojo.lang._mixin(obj,arguments[i]);
}
return obj;
};
dojo.lang.extend=function(_100,_101){
for(var i=1,l=arguments.length;i<l;i++){
dojo.lang._mixin(_100.prototype,arguments[i]);
}
return _100;
};
dojo.inherits=dojo.lang.inherits;
dojo.mixin=dojo.lang.mixin;
dojo.extend=dojo.lang.extend;
dojo.lang.find=function(_104,_105,_106,_107){
if(!dojo.lang.isArrayLike(_104)&&dojo.lang.isArrayLike(_105)){
dojo.deprecated("dojo.lang.find(value, array)","use dojo.lang.find(array, value) instead","0.5");
var temp=_104;
_104=_105;
_105=temp;
}
var _109=dojo.lang.isString(_104);
if(_109){
_104=_104.split("");
}
if(_107){
var step=-1;
var i=_104.length-1;
var end=-1;
}else{
var step=1;
var i=0;
var end=_104.length;
}
if(_106){
while(i!=end){
if(_104[i]===_105){
return i;
}
i+=step;
}
}else{
while(i!=end){
if(_104[i]==_105){
return i;
}
i+=step;
}
}
return -1;
};
dojo.lang.indexOf=dojo.lang.find;
dojo.lang.findLast=function(_10d,_10e,_10f){
return dojo.lang.find(_10d,_10e,_10f,true);
};
dojo.lang.lastIndexOf=dojo.lang.findLast;
dojo.lang.inArray=function(_110,_111){
return dojo.lang.find(_110,_111)>-1;
};
dojo.lang.isObject=function(it){
if(typeof it=="undefined"){
return false;
}
return (typeof it=="object"||it===null||dojo.lang.isArray(it)||dojo.lang.isFunction(it));
};
dojo.lang.isArray=function(it){
return (it&&it instanceof Array||typeof it=="array");
};
dojo.lang.isArrayLike=function(it){
if((!it)||(dojo.lang.isUndefined(it))){
return false;
}
if(dojo.lang.isString(it)){
return false;
}
if(dojo.lang.isFunction(it)){
return false;
}
if(dojo.lang.isArray(it)){
return true;
}
if((it.tagName)&&(it.tagName.toLowerCase()=="form")){
return false;
}
if(dojo.lang.isNumber(it.length)&&isFinite(it.length)){
return true;
}
return false;
};
dojo.lang.isFunction=function(it){
return (it instanceof Function||typeof it=="function");
};
(function(){
if((dojo.render.html.capable)&&(dojo.render.html["safari"])){
dojo.lang.isFunction=function(it){
if((typeof (it)=="function")&&(it=="[object NodeList]")){
return false;
}
return (it instanceof Function||typeof it=="function");
};
}
})();
dojo.lang.isString=function(it){
return (typeof it=="string"||it instanceof String);
};
dojo.lang.isAlien=function(it){
if(!it){
return false;
}
return !dojo.lang.isFunction(it)&&/\{\s*\[native code\]\s*\}/.test(String(it));
};
dojo.lang.isBoolean=function(it){
return (it instanceof Boolean||typeof it=="boolean");
};
dojo.lang.isNumber=function(it){
return (it instanceof Number||typeof it=="number");
};
dojo.lang.isUndefined=function(it){
return ((typeof (it)=="undefined")&&(it==undefined));
};
dojo.provide("dojo.lang.func");
dojo.lang.hitch=function(_11c,_11d){
var fcn=(dojo.lang.isString(_11d)?_11c[_11d]:_11d)||function(){
};
return function(){
return fcn.apply(_11c,arguments);
};
};
dojo.lang.anonCtr=0;
dojo.lang.anon={};
dojo.lang.nameAnonFunc=function(_11f,_120,_121){
var nso=(_120||dojo.lang.anon);
if((_121)||((dj_global["djConfig"])&&(djConfig["slowAnonFuncLookups"]==true))){
for(var x in nso){
try{
if(nso[x]===_11f){
return x;
}
}
catch(e){
}
}
}
var ret="__"+dojo.lang.anonCtr++;
while(typeof nso[ret]!="undefined"){
ret="__"+dojo.lang.anonCtr++;
}
nso[ret]=_11f;
return ret;
};
dojo.lang.forward=function(_125){
return function(){
return this[_125].apply(this,arguments);
};
};
dojo.lang.curry=function(_126,func){
var _128=[];
_126=_126||dj_global;
if(dojo.lang.isString(func)){
func=_126[func];
}
for(var x=2;x<arguments.length;x++){
_128.push(arguments[x]);
}
var _12a=(func["__preJoinArity"]||func.length)-_128.length;
function gather(_12b,_12c,_12d){
var _12e=_12d;
var _12f=_12c.slice(0);
for(var x=0;x<_12b.length;x++){
_12f.push(_12b[x]);
}
_12d=_12d-_12b.length;
if(_12d<=0){
var res=func.apply(_126,_12f);
_12d=_12e;
return res;
}else{
return function(){
return gather(arguments,_12f,_12d);
};
}
}
return gather([],_128,_12a);
};
dojo.lang.curryArguments=function(_132,func,args,_135){
var _136=[];
var x=_135||0;
for(x=_135;x<args.length;x++){
_136.push(args[x]);
}
return dojo.lang.curry.apply(dojo.lang,[_132,func].concat(_136));
};
dojo.lang.tryThese=function(){
for(var x=0;x<arguments.length;x++){
try{
if(typeof arguments[x]=="function"){
var ret=(arguments[x]());
if(ret){
return ret;
}
}
}
catch(e){
dojo.debug(e);
}
}
};
dojo.lang.delayThese=function(farr,cb,_13c,_13d){
if(!farr.length){
if(typeof _13d=="function"){
_13d();
}
return;
}
if((typeof _13c=="undefined")&&(typeof cb=="number")){
_13c=cb;
cb=function(){
};
}else{
if(!cb){
cb=function(){
};
if(!_13c){
_13c=0;
}
}
}
setTimeout(function(){
(farr.shift())();
cb();
dojo.lang.delayThese(farr,cb,_13c,_13d);
},_13c);
};
dojo.provide("dojo.string.common");
dojo.string.trim=function(str,wh){
if(!str.replace){
return str;
}
if(!str.length){
return str;
}
var re=(wh>0)?(/^\s+/):(wh<0)?(/\s+$/):(/^\s+|\s+$/g);
return str.replace(re,"");
};
dojo.string.trimStart=function(str){
return dojo.string.trim(str,1);
};
dojo.string.trimEnd=function(str){
return dojo.string.trim(str,-1);
};
dojo.string.repeat=function(str,_144,_145){
var out="";
for(var i=0;i<_144;i++){
out+=str;
if(_145&&i<_144-1){
out+=_145;
}
}
return out;
};
dojo.string.pad=function(str,len,c,dir){
var out=String(str);
if(!c){
c="0";
}
if(!dir){
dir=1;
}
while(out.length<len){
if(dir>0){
out=c+out;
}else{
out+=c;
}
}
return out;
};
dojo.string.padLeft=function(str,len,c){
return dojo.string.pad(str,len,c,1);
};
dojo.string.padRight=function(str,len,c){
return dojo.string.pad(str,len,c,-1);
};
dojo.provide("dojo.lang.array");
dojo.lang.mixin(dojo.lang,{has:function(obj,name){
try{
return typeof obj[name]!="undefined";
}
catch(e){
return false;
}
},isEmpty:function(obj){
if(dojo.lang.isObject(obj)){
var tmp={};
var _157=0;
for(var x in obj){
if(obj[x]&&(!tmp[x])){
_157++;
break;
}
}
return _157==0;
}else{
if(dojo.lang.isArrayLike(obj)||dojo.lang.isString(obj)){
return obj.length==0;
}
}
},map:function(arr,obj,_15b){
var _15c=dojo.lang.isString(arr);
if(_15c){
arr=arr.split("");
}
if(dojo.lang.isFunction(obj)&&(!_15b)){
_15b=obj;
obj=dj_global;
}else{
if(dojo.lang.isFunction(obj)&&_15b){
var _15d=obj;
obj=_15b;
_15b=_15d;
}
}
if(Array.map){
var _15e=Array.map(arr,_15b,obj);
}else{
var _15e=[];
for(var i=0;i<arr.length;++i){
_15e.push(_15b.call(obj,arr[i]));
}
}
if(_15c){
return _15e.join("");
}else{
return _15e;
}
},reduce:function(arr,_161,obj,_163){
var _164=_161;
if(arguments.length==1){
dojo.debug("dojo.lang.reduce called with too few arguments!");
return false;
}else{
if(arguments.length==2){
_163=_161;
_164=arr.shift();
}else{
if(arguments.lenght==3){
if(dojo.lang.isFunction(obj)){
_163=obj;
obj=null;
}
}else{
if(dojo.lang.isFunction(obj)){
var tmp=_163;
_163=obj;
obj=tmp;
}
}
}
}
var ob=obj?obj:dj_global;
dojo.lang.map(arr,function(val){
_164=_163.call(ob,_164,val);
});
return _164;
},forEach:function(_168,_169,_16a){
if(dojo.lang.isString(_168)){
_168=_168.split("");
}
if(Array.forEach){
Array.forEach(_168,_169,_16a);
}else{
if(!_16a){
_16a=dj_global;
}
for(var i=0,l=_168.length;i<l;i++){
_169.call(_16a,_168[i],i,_168);
}
}
},_everyOrSome:function(_16d,arr,_16f,_170){
if(dojo.lang.isString(arr)){
arr=arr.split("");
}
if(Array.every){
return Array[_16d?"every":"some"](arr,_16f,_170);
}else{
if(!_170){
_170=dj_global;
}
for(var i=0,l=arr.length;i<l;i++){
var _173=_16f.call(_170,arr[i],i,arr);
if(_16d&&!_173){
return false;
}else{
if((!_16d)&&(_173)){
return true;
}
}
}
return Boolean(_16d);
}
},every:function(arr,_175,_176){
return this._everyOrSome(true,arr,_175,_176);
},some:function(arr,_178,_179){
return this._everyOrSome(false,arr,_178,_179);
},filter:function(arr,_17b,_17c){
var _17d=dojo.lang.isString(arr);
if(_17d){
arr=arr.split("");
}
var _17e;
if(Array.filter){
_17e=Array.filter(arr,_17b,_17c);
}else{
if(!_17c){
if(arguments.length>=3){
dojo.raise("thisObject doesn't exist!");
}
_17c=dj_global;
}
_17e=[];
for(var i=0;i<arr.length;i++){
if(_17b.call(_17c,arr[i],i,arr)){
_17e.push(arr[i]);
}
}
}
if(_17d){
return _17e.join("");
}else{
return _17e;
}
},unnest:function(){
var out=[];
for(var i=0;i<arguments.length;i++){
if(dojo.lang.isArrayLike(arguments[i])){
var add=dojo.lang.unnest.apply(this,arguments[i]);
out=out.concat(add);
}else{
out.push(arguments[i]);
}
}
return out;
},toArray:function(_183,_184){
var _185=[];
for(var i=_184||0;i<_183.length;i++){
_185.push(_183[i]);
}
return _185;
}});
dojo.provide("dojo.string.extras");
dojo.string.substituteParams=function(_187,hash){
var map=(typeof hash=="object")?hash:dojo.lang.toArray(arguments,1);
return _187.replace(/\%\{(\w+)\}/g,function(_18a,key){
if(typeof (map[key])!="undefined"&&map[key]!=null){
return map[key];
}
dojo.raise("Substitution not found: "+key);
});
};
dojo.string.capitalize=function(str){
if(!dojo.lang.isString(str)){
return "";
}
if(arguments.length==0){
str=this;
}
var _18d=str.split(" ");
for(var i=0;i<_18d.length;i++){
_18d[i]=_18d[i].charAt(0).toUpperCase()+_18d[i].substring(1);
}
return _18d.join(" ");
};
dojo.string.isBlank=function(str){
if(!dojo.lang.isString(str)){
return true;
}
return (dojo.string.trim(str).length==0);
};
dojo.string.encodeAscii=function(str){
if(!dojo.lang.isString(str)){
return str;
}
var ret="";
var _192=escape(str);
var _193,re=/%u([0-9A-F]{4})/i;
while((_193=_192.match(re))){
var num=Number("0x"+_193[1]);
var _196=escape("&#"+num+";");
ret+=_192.substring(0,_193.index)+_196;
_192=_192.substring(_193.index+_193[0].length);
}
ret+=_192.replace(/\+/g,"%2B");
return ret;
};
dojo.string.escape=function(type,str){
var args=dojo.lang.toArray(arguments,1);
switch(type.toLowerCase()){
case "xml":
case "html":
case "xhtml":
return dojo.string.escapeXml.apply(this,args);
case "sql":
return dojo.string.escapeSql.apply(this,args);
case "regexp":
case "regex":
return dojo.string.escapeRegExp.apply(this,args);
case "javascript":
case "jscript":
case "js":
return dojo.string.escapeJavaScript.apply(this,args);
case "ascii":
return dojo.string.encodeAscii.apply(this,args);
default:
return str;
}
};
dojo.string.escapeXml=function(str,_19b){
str=str.replace(/&/gm,"&amp;").replace(/</gm,"&lt;").replace(/>/gm,"&gt;").replace(/"/gm,"&quot;");
if(!_19b){
str=str.replace(/'/gm,"&#39;");
}
return str;
};
dojo.string.escapeSql=function(str){
return str.replace(/'/gm,"''");
};
dojo.string.escapeRegExp=function(str){
return str.replace(/\\/gm,"\\\\").replace(/([\f\b\n\t\r[\^$|?*+(){}])/gm,"\\$1");
};
dojo.string.escapeJavaScript=function(str){
return str.replace(/(["'\f\b\n\t\r])/gm,"\\$1");
};
dojo.string.escapeString=function(str){
return ("\""+str.replace(/(["\\])/g,"\\$1")+"\"").replace(/[\f]/g,"\\f").replace(/[\b]/g,"\\b").replace(/[\n]/g,"\\n").replace(/[\t]/g,"\\t").replace(/[\r]/g,"\\r");
};
dojo.string.summary=function(str,len){
if(!len||str.length<=len){
return str;
}
return str.substring(0,len).replace(/\.+$/,"")+"...";
};
dojo.string.endsWith=function(str,end,_1a4){
if(_1a4){
str=str.toLowerCase();
end=end.toLowerCase();
}
if((str.length-end.length)<0){
return false;
}
return str.lastIndexOf(end)==str.length-end.length;
};
dojo.string.endsWithAny=function(str){
for(var i=1;i<arguments.length;i++){
if(dojo.string.endsWith(str,arguments[i])){
return true;
}
}
return false;
};
dojo.string.startsWith=function(str,_1a8,_1a9){
if(_1a9){
str=str.toLowerCase();
_1a8=_1a8.toLowerCase();
}
return str.indexOf(_1a8)==0;
};
dojo.string.startsWithAny=function(str){
for(var i=1;i<arguments.length;i++){
if(dojo.string.startsWith(str,arguments[i])){
return true;
}
}
return false;
};
dojo.string.has=function(str){
for(var i=1;i<arguments.length;i++){
if(str.indexOf(arguments[i])>-1){
return true;
}
}
return false;
};
dojo.string.normalizeNewlines=function(text,_1af){
if(_1af=="\n"){
text=text.replace(/\r\n/g,"\n");
text=text.replace(/\r/g,"\n");
}else{
if(_1af=="\r"){
text=text.replace(/\r\n/g,"\r");
text=text.replace(/\n/g,"\r");
}else{
text=text.replace(/([^\r])\n/g,"$1\r\n").replace(/\r([^\n])/g,"\r\n$1");
}
}
return text;
};
dojo.string.splitEscaped=function(str,_1b1){
var _1b2=[];
for(var i=0,_1b4=0;i<str.length;i++){
if(str.charAt(i)=="\\"){
i++;
continue;
}
if(str.charAt(i)==_1b1){
_1b2.push(str.substring(_1b4,i));
_1b4=i+1;
}
}
_1b2.push(str.substr(_1b4));
return _1b2;
};
dojo.provide("dojo.AdapterRegistry");
dojo.AdapterRegistry=function(_1b5){
this.pairs=[];
this.returnWrappers=_1b5||false;
};
dojo.lang.extend(dojo.AdapterRegistry,{register:function(name,_1b7,wrap,_1b9,_1ba){
var type=(_1ba)?"unshift":"push";
this.pairs[type]([name,_1b7,wrap,_1b9]);
},match:function(){
for(var i=0;i<this.pairs.length;i++){
var pair=this.pairs[i];
if(pair[1].apply(this,arguments)){
if((pair[3])||(this.returnWrappers)){
return pair[2];
}else{
return pair[2].apply(this,arguments);
}
}
}
throw new Error("No match found");
},unregister:function(name){
for(var i=0;i<this.pairs.length;i++){
var pair=this.pairs[i];
if(pair[0]==name){
this.pairs.splice(i,1);
return true;
}
}
return false;
}});
dojo.provide("dojo.json");
dojo.json={jsonRegistry:new dojo.AdapterRegistry(),register:function(name,_1c2,wrap,_1c4){
dojo.json.jsonRegistry.register(name,_1c2,wrap,_1c4);
},evalJson:function(json){
try{
return eval("("+json+")");
}
catch(e){
dojo.debug(e);
return json;
}
},serialize:function(o){
var _1c7=typeof (o);
if(_1c7=="undefined"){
return "undefined";
}else{
if((_1c7=="number")||(_1c7=="boolean")){
return o+"";
}else{
if(o===null){
return "null";
}
}
}
if(_1c7=="string"){
return dojo.string.escapeString(o);
}
var me=arguments.callee;
var _1c9;
if(typeof (o.__json__)=="function"){
_1c9=o.__json__();
if(o!==_1c9){
return me(_1c9);
}
}
if(typeof (o.json)=="function"){
_1c9=o.json();
if(o!==_1c9){
return me(_1c9);
}
}
if(_1c7!="function"&&typeof (o.length)=="number"){
var res=[];
for(var i=0;i<o.length;i++){
var val=me(o[i]);
if(typeof (val)!="string"){
val="undefined";
}
res.push(val);
}
return "["+res.join(",")+"]";
}
try{
window.o=o;
_1c9=dojo.json.jsonRegistry.match(o);
return me(_1c9);
}
catch(e){
}
if(_1c7=="function"){
return null;
}
res=[];
for(var k in o){
var _1ce;
if(typeof (k)=="number"){
_1ce="\""+k+"\"";
}else{
if(typeof (k)=="string"){
_1ce=dojo.string.escapeString(k);
}else{
continue;
}
}
val=me(o[k]);
if(typeof (val)!="string"){
continue;
}
res.push(_1ce+":"+val);
}
return "{"+res.join(",")+"}";
}};
dojo.provide("dojo.collections.Store");
dojo.collections.Store=function(_1cf){
var data=[];
this.keyField="Id";
this.get=function(){
return data;
};
this.getByKey=function(key){
for(var i=0;i<data.length;i++){
if(data[i].key==key){
return data[i];
}
}
return null;
};
this.getByIndex=function(idx){
return data[idx];
};
this.getData=function(){
var arr=[];
for(var i=0;i<data.length;i++){
arr.push(data[i].src);
}
return arr;
};
this.getDataByKey=function(key){
for(var i=0;i<data.length;i++){
if(data[i].key==key){
return data[i].src;
}
}
return null;
};
this.getDataByIndex=function(idx){
return data[idx].src;
};
this.update=function(obj,_1da,val){
var _1dc=_1da.split("."),i=0,o=obj,_1df;
if(_1dc.length>1){
_1df=_1dc.pop();
do{
if(_1dc[i].indexOf("()")>-1){
var temp=_1dc[i++].split("()")[0];
if(!o[temp]){
dojo.raise("dojo.collections.Store.getField(obj, '"+_1df+"'): '"+temp+"' is not a property of the passed object.");
}else{
o=o[temp]();
}
}else{
o=o[_1dc[i++]];
}
}while(i<_1dc.length&&o!=null);
}else{
_1df=_1dc[0];
}
obj[_1df]=val;
this.onUpdateField(obj,_1da,val);
};
this.forEach=function(fn){
if(Array.forEach){
Array.forEach(data,fn,this);
}else{
for(var i=0;i<data.length;i++){
fn.call(this,data[i]);
}
}
};
this.forEachData=function(fn){
if(Array.forEach){
Array.forEach(this.getData(),fn,this);
}else{
var a=this.getData();
for(var i=0;i<a.length;i++){
fn.call(this,a[i]);
}
}
};
this.setData=function(arr){
data=[];
for(var i=0;i<arr.length;i++){
data.push({key:arr[i][this.keyField],src:arr[i]});
}
this.onSetData();
};
this.clearData=function(){
data=[];
this.onClearData();
};
this.addData=function(obj,key){
var k=key||obj[this.keyField];
if(this.getByKey(k)){
var o=this.getByKey(k);
o.src=obj;
}else{
var o={key:k,src:obj};
data.push(o);
}
this.onAddData(o);
};
this.addDataRange=function(arr){
var _1ed=[];
for(var i=0;i<arr.length;i++){
var k=arr[i][this.keyField];
if(this.getByKey(k)){
var o=this.getByKey(k);
o.src=obj;
}else{
var o={key:k,src:arr[i]};
data.push(o);
}
_1ed.push(o);
}
this.onAddDataRange(_1ed);
};
this.removeData=function(obj){
var idx=-1;
var o=null;
for(var i=0;i<data.length;i++){
if(data[i].src==obj){
idx=i;
o=data[i];
break;
}
}
this.onRemoveData(o);
if(idx>-1){
data.splice(idx,1);
}
};
this.removeDataByKey=function(key){
this.removeData(this.getDataByKey(key));
};
this.removeDataByIndex=function(idx){
this.removeData(this.getDataByIndex(idx));
};
if(_1cf&&_1cf.length&&_1cf[0]){
this.setData(_1cf);
}
};
dojo.extend(dojo.collections.Store,{getField:function(obj,_1f8){
var _1f9=_1f8.split("."),i=0,o=obj;
do{
if(_1f9[i].indexOf("()")>-1){
var temp=_1f9[i++].split("()")[0];
if(!o[temp]){
dojo.raise("dojo.collections.Store.getField(obj, '"+_1f8+"'): '"+temp+"' is not a property of the passed object.");
}else{
o=o[temp]();
}
}else{
o=o[_1f9[i++]];
}
}while(i<_1f9.length&&o!=null);
if(i<_1f9.length){
dojo.raise("dojo.collections.Store.getField(obj, '"+_1f8+"'): '"+_1f8+"' is not a property of the passed object.");
}
return o;
},getFromHtml:function(meta,body,_1ff){
var rows=body.rows;
var ctor=function(row){
var obj={};
for(var i=0;i<meta.length;i++){
var o=obj;
var data=row.cells[i].innerHTML;
var p=meta[i].getField();
if(p.indexOf(".")>-1){
p=p.split(".");
while(p.length>1){
var pr=p.shift();
o[pr]={};
o=o[pr];
}
p=p[0];
}
var type=meta[i].getType();
if(type==String){
o[p]=data;
}else{
if(data){
o[p]=new type(data);
}else{
o[p]=new type();
}
}
}
return obj;
};
var arr=[];
for(var i=0;i<rows.length;i++){
var o=ctor(rows[i]);
if(_1ff){
_1ff(o,rows[i]);
}
arr.push(o);
}
return arr;
},onSetData:function(){
},onClearData:function(){
},onAddData:function(obj){
},onAddDataRange:function(arr){
},onRemoveData:function(obj){
},onUpdateField:function(obj,_211,val){
}});
dojo.provide("dojo.gfx.color");
dojo.gfx.color.Color=function(r,g,b,a){
if(dojo.lang.isArray(r)){
this.r=r[0];
this.g=r[1];
this.b=r[2];
this.a=r[3]||1;
}else{
if(dojo.lang.isString(r)){
var rgb=dojo.gfx.color.extractRGB(r);
this.r=rgb[0];
this.g=rgb[1];
this.b=rgb[2];
this.a=g||1;
}else{
if(r instanceof dojo.gfx.color.Color){
this.r=r.r;
this.b=r.b;
this.g=r.g;
this.a=r.a;
}else{
this.r=r;
this.g=g;
this.b=b;
this.a=a;
}
}
}
};
dojo.gfx.color.Color.fromArray=function(arr){
return new dojo.gfx.color.Color(arr[0],arr[1],arr[2],arr[3]);
};
dojo.extend(dojo.gfx.color.Color,{toRgb:function(_219){
if(_219){
return this.toRgba();
}else{
return [this.r,this.g,this.b];
}
},toRgba:function(){
return [this.r,this.g,this.b,this.a];
},toHex:function(){
return dojo.gfx.color.rgb2hex(this.toRgb());
},toCss:function(){
return "rgb("+this.toRgb().join()+")";
},toString:function(){
return this.toHex();
},blend:function(_21a,_21b){
var rgb=null;
if(dojo.lang.isArray(_21a)){
rgb=_21a;
}else{
if(_21a instanceof dojo.gfx.color.Color){
rgb=_21a.toRgb();
}else{
rgb=new dojo.gfx.color.Color(_21a).toRgb();
}
}
return dojo.gfx.color.blend(this.toRgb(),rgb,_21b);
}});
dojo.gfx.color.named={white:[255,255,255],black:[0,0,0],red:[255,0,0],green:[0,255,0],lime:[0,255,0],blue:[0,0,255],navy:[0,0,128],gray:[128,128,128],silver:[192,192,192]};
dojo.gfx.color.blend=function(a,b,_21f){
if(typeof a=="string"){
return dojo.gfx.color.blendHex(a,b,_21f);
}
if(!_21f){
_21f=0;
}
_21f=Math.min(Math.max(-1,_21f),1);
_21f=((_21f+1)/2);
var c=[];
for(var x=0;x<3;x++){
c[x]=parseInt(b[x]+((a[x]-b[x])*_21f));
}
return c;
};
dojo.gfx.color.blendHex=function(a,b,_224){
return dojo.gfx.color.rgb2hex(dojo.gfx.color.blend(dojo.gfx.color.hex2rgb(a),dojo.gfx.color.hex2rgb(b),_224));
};
dojo.gfx.color.extractRGB=function(_225){
var hex="0123456789abcdef";
_225=_225.toLowerCase();
if(_225.indexOf("rgb")==0){
var _227=_225.match(/rgba*\((\d+), *(\d+), *(\d+)/i);
var ret=_227.splice(1,3);
return ret;
}else{
var _229=dojo.gfx.color.hex2rgb(_225);
if(_229){
return _229;
}else{
return dojo.gfx.color.named[_225]||[255,255,255];
}
}
};
dojo.gfx.color.hex2rgb=function(hex){
var _22b="0123456789ABCDEF";
var rgb=new Array(3);
if(hex.indexOf("#")==0){
hex=hex.substring(1);
}
hex=hex.toUpperCase();
if(hex.replace(new RegExp("["+_22b+"]","g"),"")!=""){
return null;
}
if(hex.length==3){
rgb[0]=hex.charAt(0)+hex.charAt(0);
rgb[1]=hex.charAt(1)+hex.charAt(1);
rgb[2]=hex.charAt(2)+hex.charAt(2);
}else{
rgb[0]=hex.substring(0,2);
rgb[1]=hex.substring(2,4);
rgb[2]=hex.substring(4);
}
for(var i=0;i<rgb.length;i++){
rgb[i]=_22b.indexOf(rgb[i].charAt(0))*16+_22b.indexOf(rgb[i].charAt(1));
}
return rgb;
};
dojo.gfx.color.rgb2hex=function(r,g,b){
if(dojo.lang.isArray(r)){
g=r[1]||0;
b=r[2]||0;
r=r[0]||0;
}
var ret=dojo.lang.map([r,g,b],function(x){
x=new Number(x);
var s=x.toString(16);
while(s.length<2){
s="0"+s;
}
return s;
});
ret.unshift("#");
return ret.join("");
};
dojo.provide("dojo.gfx.color.hsl");
dojo.lang.extend(dojo.gfx.color.Color,{toHsl:function(){
return dojo.gfx.color.rgb2hsl(this.toRgb());
}});
dojo.gfx.color.rgb2hsl=function(r,g,b){
if(dojo.lang.isArray(r)){
b=r[2]||0;
g=r[1]||0;
r=r[0]||0;
}
r/=255;
g/=255;
b/=255;
var h=null;
var s=null;
var l=null;
var min=Math.min(r,g,b);
var max=Math.max(r,g,b);
var _23c=max-min;
l=(min+max)/2;
s=0;
if((l>0)&&(l<1)){
s=_23c/((l<0.5)?(2*l):(2-2*l));
}
h=0;
if(_23c>0){
if((max==r)&&(max!=g)){
h+=(g-b)/_23c;
}
if((max==g)&&(max!=b)){
h+=(2+(b-r)/_23c);
}
if((max==b)&&(max!=r)){
h+=(4+(r-g)/_23c);
}
h*=60;
}
h=(h==0)?360:Math.ceil((h/360)*255);
s=Math.ceil(s*255);
l=Math.ceil(l*255);
return [h,s,l];
};
dojo.gfx.color.hsl2rgb=function(h,s,l){
if(dojo.lang.isArray(h)){
l=h[2]||0;
s=h[1]||0;
h=h[0]||0;
}
h=(h/255)*360;
if(h==360){
h=0;
}
s=s/255;
l=l/255;
while(h<0){
h+=360;
}
while(h>360){
h-=360;
}
var r,g,b;
if(h<120){
r=(120-h)/60;
g=h/60;
b=0;
}else{
if(h<240){
r=0;
g=(240-h)/60;
b=(h-120)/60;
}else{
r=(h-240)/60;
g=0;
b=(360-h)/60;
}
}
r=Math.min(r,1);
g=Math.min(g,1);
b=Math.min(b,1);
r=2*s*r+(1-s);
g=2*s*g+(1-s);
b=2*s*b+(1-s);
if(l<0.5){
r=l*r;
g=l*g;
b=l*b;
}else{
r=(1-l)*r+2*l-1;
g=(1-l)*g+2*l-1;
b=(1-l)*b+2*l-1;
}
r=Math.ceil(r*255);
g=Math.ceil(g*255);
b=Math.ceil(b*255);
return [r,g,b];
};
dojo.gfx.color.hsl2hex=function(h,s,l){
var rgb=dojo.gfx.color.hsl2rgb(h,s,l);
return dojo.gfx.color.rgb2hex(rgb[0],rgb[1],rgb[2]);
};
dojo.gfx.color.hex2hsl=function(hex){
var rgb=dojo.gfx.color.hex2rgb(hex);
return dojo.gfx.color.rgb2hsl(rgb[0],rgb[1],rgb[2]);
};
dojo.provide("dojo.charting.*");
dojo.provide("dojo.dom");
dojo.dom.ELEMENT_NODE=1;
dojo.dom.ATTRIBUTE_NODE=2;
dojo.dom.TEXT_NODE=3;
dojo.dom.CDATA_SECTION_NODE=4;
dojo.dom.ENTITY_REFERENCE_NODE=5;
dojo.dom.ENTITY_NODE=6;
dojo.dom.PROCESSING_INSTRUCTION_NODE=7;
dojo.dom.COMMENT_NODE=8;
dojo.dom.DOCUMENT_NODE=9;
dojo.dom.DOCUMENT_TYPE_NODE=10;
dojo.dom.DOCUMENT_FRAGMENT_NODE=11;
dojo.dom.NOTATION_NODE=12;
dojo.dom.dojoml="http://www.dojotoolkit.org/2004/dojoml";
dojo.dom.xmlns={svg:"http://www.w3.org/2000/svg",smil:"http://www.w3.org/2001/SMIL20/",mml:"http://www.w3.org/1998/Math/MathML",cml:"http://www.xml-cml.org",xlink:"http://www.w3.org/1999/xlink",xhtml:"http://www.w3.org/1999/xhtml",xul:"http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul",xbl:"http://www.mozilla.org/xbl",fo:"http://www.w3.org/1999/XSL/Format",xsl:"http://www.w3.org/1999/XSL/Transform",xslt:"http://www.w3.org/1999/XSL/Transform",xi:"http://www.w3.org/2001/XInclude",xforms:"http://www.w3.org/2002/01/xforms",saxon:"http://icl.com/saxon",xalan:"http://xml.apache.org/xslt",xsd:"http://www.w3.org/2001/XMLSchema",dt:"http://www.w3.org/2001/XMLSchema-datatypes",xsi:"http://www.w3.org/2001/XMLSchema-instance",rdf:"http://www.w3.org/1999/02/22-rdf-syntax-ns#",rdfs:"http://www.w3.org/2000/01/rdf-schema#",dc:"http://purl.org/dc/elements/1.1/",dcq:"http://purl.org/dc/qualifiers/1.0","soap-env":"http://schemas.xmlsoap.org/soap/envelope/",wsdl:"http://schemas.xmlsoap.org/wsdl/",AdobeExtensions:"http://ns.adobe.com/AdobeSVGViewerExtensions/3.0/"};
dojo.dom.isNode=function(wh){
if(typeof Element=="function"){
try{
return wh instanceof Element;
}
catch(e){
}
}else{
return wh&&!isNaN(wh.nodeType);
}
};
dojo.dom.getUniqueId=function(){
var _24a=dojo.doc();
do{
var id="dj_unique_"+(++arguments.callee._idIncrement);
}while(_24a.getElementById(id));
return id;
};
dojo.dom.getUniqueId._idIncrement=0;
dojo.dom.firstElement=dojo.dom.getFirstChildElement=function(_24c,_24d){
var node=_24c.firstChild;
while(node&&node.nodeType!=dojo.dom.ELEMENT_NODE){
node=node.nextSibling;
}
if(_24d&&node&&node.tagName&&node.tagName.toLowerCase()!=_24d.toLowerCase()){
node=dojo.dom.nextElement(node,_24d);
}
return node;
};
dojo.dom.lastElement=dojo.dom.getLastChildElement=function(_24f,_250){
var node=_24f.lastChild;
while(node&&node.nodeType!=dojo.dom.ELEMENT_NODE){
node=node.previousSibling;
}
if(_250&&node&&node.tagName&&node.tagName.toLowerCase()!=_250.toLowerCase()){
node=dojo.dom.prevElement(node,_250);
}
return node;
};
dojo.dom.nextElement=dojo.dom.getNextSiblingElement=function(node,_253){
if(!node){
return null;
}
do{
node=node.nextSibling;
}while(node&&node.nodeType!=dojo.dom.ELEMENT_NODE);
if(node&&_253&&_253.toLowerCase()!=node.tagName.toLowerCase()){
return dojo.dom.nextElement(node,_253);
}
return node;
};
dojo.dom.prevElement=dojo.dom.getPreviousSiblingElement=function(node,_255){
if(!node){
return null;
}
if(_255){
_255=_255.toLowerCase();
}
do{
node=node.previousSibling;
}while(node&&node.nodeType!=dojo.dom.ELEMENT_NODE);
if(node&&_255&&_255.toLowerCase()!=node.tagName.toLowerCase()){
return dojo.dom.prevElement(node,_255);
}
return node;
};
dojo.dom.moveChildren=function(_256,_257,trim){
var _259=0;
if(trim){
while(_256.hasChildNodes()&&_256.firstChild.nodeType==dojo.dom.TEXT_NODE){
_256.removeChild(_256.firstChild);
}
while(_256.hasChildNodes()&&_256.lastChild.nodeType==dojo.dom.TEXT_NODE){
_256.removeChild(_256.lastChild);
}
}
while(_256.hasChildNodes()){
_257.appendChild(_256.firstChild);
_259++;
}
return _259;
};
dojo.dom.copyChildren=function(_25a,_25b,trim){
var _25d=_25a.cloneNode(true);
return this.moveChildren(_25d,_25b,trim);
};
dojo.dom.replaceChildren=function(node,_25f){
var _260=[];
if(dojo.render.html.ie){
for(var i=0;i<node.childNodes.length;i++){
_260.push(node.childNodes[i]);
}
}
dojo.dom.removeChildren(node);
node.appendChild(_25f);
for(var i=0;i<_260.length;i++){
dojo.dom.destroyNode(_260[i]);
}
};
dojo.dom.removeChildren=function(node){
var _263=node.childNodes.length;
while(node.hasChildNodes()){
dojo.dom.removeNode(node.firstChild);
}
return _263;
};
dojo.dom.replaceNode=function(node,_265){
return node.parentNode.replaceChild(_265,node);
};
dojo.dom.destroyNode=function(node){
if(node.parentNode){
node=dojo.dom.removeNode(node);
}
if(node.nodeType!=3){
if(dojo.evalObjPath("dojo.event.browser.clean",false)){
dojo.event.browser.clean(node);
}
if(dojo.render.html.ie){
node.outerHTML="";
}
}
};
dojo.dom.removeNode=function(node){
if(node&&node.parentNode){
return node.parentNode.removeChild(node);
}
};
dojo.dom.getAncestors=function(node,_269,_26a){
var _26b=[];
var _26c=(_269&&(_269 instanceof Function||typeof _269=="function"));
while(node){
if(!_26c||_269(node)){
_26b.push(node);
}
if(_26a&&_26b.length>0){
return _26b[0];
}
node=node.parentNode;
}
if(_26a){
return null;
}
return _26b;
};
dojo.dom.getAncestorsByTag=function(node,tag,_26f){
tag=tag.toLowerCase();
return dojo.dom.getAncestors(node,function(el){
return ((el.tagName)&&(el.tagName.toLowerCase()==tag));
},_26f);
};
dojo.dom.getFirstAncestorByTag=function(node,tag){
return dojo.dom.getAncestorsByTag(node,tag,true);
};
dojo.dom.isDescendantOf=function(node,_274,_275){
if(_275&&node){
node=node.parentNode;
}
while(node){
if(node==_274){
return true;
}
node=node.parentNode;
}
return false;
};
dojo.dom.innerXML=function(node){
if(node.innerXML){
return node.innerXML;
}else{
if(node.xml){
return node.xml;
}else{
if(typeof XMLSerializer!="undefined"){
return (new XMLSerializer()).serializeToString(node);
}
}
}
};
dojo.dom.createDocument=function(){
var doc=null;
var _278=dojo.doc();
if(!dj_undef("ActiveXObject")){
var _279=["MSXML2","Microsoft","MSXML","MSXML3"];
for(var i=0;i<_279.length;i++){
try{
doc=new ActiveXObject(_279[i]+".XMLDOM");
}
catch(e){
}
if(doc){
break;
}
}
}else{
if((_278.implementation)&&(_278.implementation.createDocument)){
doc=_278.implementation.createDocument("","",null);
}
}
return doc;
};
dojo.dom.createDocumentFromText=function(str,_27c){
if(!_27c){
_27c="text/xml";
}
if(!dj_undef("DOMParser")){
var _27d=new DOMParser();
return _27d.parseFromString(str,_27c);
}else{
if(!dj_undef("ActiveXObject")){
var _27e=dojo.dom.createDocument();
if(_27e){
_27e.async=false;
_27e.loadXML(str);
return _27e;
}else{
dojo.debug("toXml didn't work?");
}
}else{
var _27f=dojo.doc();
if(_27f.createElement){
var tmp=_27f.createElement("xml");
tmp.innerHTML=str;
if(_27f.implementation&&_27f.implementation.createDocument){
var _281=_27f.implementation.createDocument("foo","",null);
for(var i=0;i<tmp.childNodes.length;i++){
_281.importNode(tmp.childNodes.item(i),true);
}
return _281;
}
return ((tmp.document)&&(tmp.document.firstChild?tmp.document.firstChild:tmp));
}
}
}
return null;
};
dojo.dom.prependChild=function(node,_284){
if(_284.firstChild){
_284.insertBefore(node,_284.firstChild);
}else{
_284.appendChild(node);
}
return true;
};
dojo.dom.insertBefore=function(node,ref,_287){
if((_287!=true)&&(node===ref||node.nextSibling===ref)){
return false;
}
var _288=ref.parentNode;
_288.insertBefore(node,ref);
return true;
};
dojo.dom.insertAfter=function(node,ref,_28b){
var pn=ref.parentNode;
if(ref==pn.lastChild){
if((_28b!=true)&&(node===ref)){
return false;
}
pn.appendChild(node);
}else{
return this.insertBefore(node,ref.nextSibling,_28b);
}
return true;
};
dojo.dom.insertAtPosition=function(node,ref,_28f){
if((!node)||(!ref)||(!_28f)){
return false;
}
switch(_28f.toLowerCase()){
case "before":
return dojo.dom.insertBefore(node,ref);
case "after":
return dojo.dom.insertAfter(node,ref);
case "first":
if(ref.firstChild){
return dojo.dom.insertBefore(node,ref.firstChild);
}else{
ref.appendChild(node);
return true;
}
break;
default:
ref.appendChild(node);
return true;
}
};
dojo.dom.insertAtIndex=function(node,_291,_292){
var _293=_291.childNodes;
if(!_293.length||_293.length==_292){
_291.appendChild(node);
return true;
}
if(_292==0){
return dojo.dom.prependChild(node,_291);
}
return dojo.dom.insertAfter(node,_293[_292-1]);
};
dojo.dom.textContent=function(node,text){
if(arguments.length>1){
var _296=dojo.doc();
dojo.dom.replaceChildren(node,_296.createTextNode(text));
return text;
}else{
if(node.textContent!=undefined){
return node.textContent;
}
var _297="";
if(node==null){
return _297;
}
for(var i=0;i<node.childNodes.length;i++){
switch(node.childNodes[i].nodeType){
case 1:
case 5:
_297+=dojo.dom.textContent(node.childNodes[i]);
break;
case 3:
case 2:
case 4:
_297+=node.childNodes[i].nodeValue;
break;
default:
break;
}
}
return _297;
}
};
dojo.dom.hasParent=function(node){
return Boolean(node&&node.parentNode&&dojo.dom.isNode(node.parentNode));
};
dojo.dom.isTag=function(node){
if(node&&node.tagName){
for(var i=1;i<arguments.length;i++){
if(node.tagName==String(arguments[i])){
return String(arguments[i]);
}
}
}
return "";
};
dojo.dom.setAttributeNS=function(elem,_29d,_29e,_29f){
if(elem==null||((elem==undefined)&&(typeof elem=="undefined"))){
dojo.raise("No element given to dojo.dom.setAttributeNS");
}
if(!((elem.setAttributeNS==undefined)&&(typeof elem.setAttributeNS=="undefined"))){
elem.setAttributeNS(_29d,_29e,_29f);
}else{
var _2a0=elem.ownerDocument;
var _2a1=_2a0.createNode(2,_29e,_29d);
_2a1.nodeValue=_29f;
elem.setAttributeNode(_2a1);
}
};
dojo.provide("dojo.svg");
dojo.mixin(dojo.svg,dojo.dom);
dojo.svg.graphics=dojo.svg.g=new function(d){
this.suspend=function(){
try{
d.documentElement.suspendRedraw(0);
}
catch(e){
}
};
this.resume=function(){
try{
d.documentElement.unsuspendRedraw(0);
}
catch(e){
}
};
this.force=function(){
try{
d.documentElement.forceRedraw();
}
catch(e){
}
};
}(document);
dojo.svg.animations=dojo.svg.anim=new function(d){
this.arePaused=function(){
try{
return d.documentElement.animationsPaused();
}
catch(e){
return false;
}
};
this.pause=function(){
try{
d.documentElement.pauseAnimations();
}
catch(e){
}
};
this.resume=function(){
try{
d.documentElement.unpauseAnimations();
}
catch(e){
}
};
}(document);
dojo.svg.toCamelCase=function(_2a4){
var arr=_2a4.split("-"),cc=arr[0];
for(var i=1;i<arr.length;i++){
cc+=arr[i].charAt(0).toUpperCase()+arr[i].substring(1);
}
return cc;
};
dojo.svg.toSelectorCase=function(_2a8){
return _2a8.replace(/([A-Z])/g,"-$1").toLowerCase();
};
dojo.svg.getStyle=function(node,_2aa){
return document.defaultView.getComputedStyle(node,_2aa);
};
dojo.svg.getNumericStyle=function(node,_2ac){
return parseFloat(dojo.svg.getStyle(node,_2ac));
};
dojo.svg.getOpacity=function(node){
return Math.min(1,dojo.svg.getNumericStyle(node,"fill-opacity"));
};
dojo.svg.setOpacity=function(node,_2af){
node.setAttributeNS(this.xmlns.svg,"fill-opacity",_2af);
node.setAttributeNS(this.xmlns.svg,"stroke-opacity",_2af);
};
dojo.svg.clearOpacity=function(node){
node.setAttributeNS(this.xmlns.svg,"fill-opacity","1.0");
node.setAttributeNS(this.xmlns.svg,"stroke-opacity","1.0");
};
dojo.svg.getCoords=function(node){
if(node.getBBox){
var box=node.getBBox();
return {x:box.x,y:box.y};
}
return null;
};
dojo.svg.setCoords=function(node,_2b4){
var p=dojo.svg.getCoords();
if(!p){
return;
}
var dx=p.x-_2b4.x;
var dy=p.y-_2b4.y;
dojo.svg.translate(node,dx,dy);
};
dojo.svg.getDimensions=function(node){
if(node.getBBox){
var box=node.getBBox();
return {width:box.width,height:box.height};
}
return null;
};
dojo.svg.setDimensions=function(node,dim){
if(node.width){
node.width.baseVal.value=dim.width;
node.height.baseVal.value=dim.height;
}else{
if(node.r){
node.r.baseVal.value=Math.min(dim.width,dim.height)/2;
}else{
if(node.rx){
node.rx.baseVal.value=dim.width/2;
node.ry.baseVal.value=dim.height/2;
}
}
}
};
dojo.svg.translate=function(node,dx,dy){
if(node.transform&&node.ownerSVGElement&&node.ownerSVGElement.createSVGTransform){
var t=node.ownerSVGElement.createSVGTransform();
t.setTranslate(dx,dy);
node.transform.baseVal.appendItem(t);
}
};
dojo.svg.scale=function(node,_2c1,_2c2){
if(!_2c2){
var _2c2=_2c1;
}
if(node.transform&&node.ownerSVGElement&&node.ownerSVGElement.createSVGTransform){
var t=node.ownerSVGElement.createSVGTransform();
t.setScale(_2c1,_2c2);
node.transform.baseVal.appendItem(t);
}
};
dojo.svg.rotate=function(node,ang,cx,cy){
if(node.transform&&node.ownerSVGElement&&node.ownerSVGElement.createSVGTransform){
var t=node.ownerSVGElement.createSVGTransform();
if(cx==null){
t.setMatrix(t.matrix.rotate(ang));
}else{
t.setRotate(ang,cx,cy);
}
node.transform.baseVal.appendItem(t);
}
};
dojo.svg.skew=function(node,ang,axis){
var dir=axis||"x";
if(node.transform&&node.ownerSVGElement&&node.ownerSVGElement.createSVGTransform){
var t=node.ownerSVGElement.createSVGTransform();
if(dir!="x"){
t.setSkewY(ang);
}else{
t.setSkewX(ang);
}
node.transform.baseVal.appendItem(t);
}
};
dojo.svg.flip=function(node,axis){
var dir=axis||"x";
if(node.transform&&node.ownerSVGElement&&node.ownerSVGElement.createSVGTransform){
var t=node.ownerSVGElement.createSVGTransform();
t.setMatrix((dir!="x")?t.matrix.flipY():t.matrix.flipX());
node.transform.baseVal.appendItem(t);
}
};
dojo.svg.invert=function(node){
if(node.transform&&node.ownerSVGElement&&node.ownerSVGElement.createSVGTransform){
var t=node.ownerSVGElement.createSVGTransform();
t.setMatrix(t.matrix.inverse());
node.transform.baseVal.appendItem(t);
}
};
dojo.svg.applyMatrix=function(node,a,b,c,d,e,f){
if(node.transform&&node.ownerSVGElement&&node.ownerSVGElement.createSVGTransform){
var m;
if(b){
var m=node.ownerSVGElement.createSVGMatrix();
m.a=a;
m.b=b;
m.c=c;
m.d=d;
m.e=e;
m.f=f;
}else{
m=a;
}
var t=node.ownerSVGElement.createSVGTransform();
t.setMatrix(m);
node.transform.baseVal.appendItem(t);
}
};
dojo.svg.group=function(_2dd){
var p=_2dd.item(0).parentNode;
var g=document.createElementNS(this.xmlns.svg,"g");
for(var i=0;i<_2dd.length;i++){
g.appendChild(_2dd.item(i));
}
p.appendChild(g);
return g;
};
dojo.svg.ungroup=function(g){
var p=g.parentNode;
while(g.childNodes.length>0){
p.appendChild(g.childNodes.item(0));
}
p.removeChild(g);
};
dojo.svg.getGroup=function(node){
var a=this.getAncestors(node);
for(var i=0;i<a.length;i++){
if(a[i].nodeType==this.ELEMENT_NODE&&a[i].nodeName.toLowerCase()=="g"){
return a[i];
}
}
return null;
};
dojo.svg.bringToFront=function(node){
var n=this.getGroup(node)||node;
n.ownerSVGElement.appendChild(n);
};
dojo.svg.sendToBack=function(node){
var n=this.getGroup(node)||node;
n.ownerSVGElement.insertBefore(n,n.ownerSVGElement.firstChild);
};
dojo.svg.bringForward=function(node){
var n=this.getGroup(node)||node;
if(this.getLastChildElement(n.parentNode)!=n){
this.insertAfter(n,this.getNextSiblingElement(n),true);
}
};
dojo.svg.sendBackward=function(node){
var n=this.getGroup(node)||node;
if(this.getFirstChildElement(n.parentNode)!=n){
this.insertBefore(n,this.getPreviousSiblingElement(n),true);
}
};
dojo.svg.createNodesFromText=function(txt,wrap){
var _2f0=(new DOMParser()).parseFromString(txt,"text/xml").normalize();
if(wrap){
return [_2f0.firstChild.cloneNode(true)];
}
var _2f1=[];
for(var x=0;x<_2f0.childNodes.length;x++){
_2f1.push(_2f0.childNodes.item(x).cloneNode(true));
}
return _2f1;
};
dojo.provide("dojo.charting.Axis");
dojo.charting.Axis=function(_2f3,_2f4,_2f5){
var id="dojo-charting-axis-"+dojo.charting.Axis.count++;
this.getId=function(){
return id;
};
this.setId=function(key){
id=key;
};
this.scale=_2f4||"linear";
this.label=_2f3||"";
this.showLabel=true;
this.showLabels=true;
this.showLines=false;
this.showTicks=false;
this.range={upper:0,lower:0};
this.origin="min";
this.labels=_2f5||[];
this._labels=[];
this.nodes={main:null,axis:null,label:null,labels:null,lines:null,ticks:null};
};
dojo.charting.Axis.count=0;
dojo.extend(dojo.charting.Axis,{getCoord:function(val,_2f9,plot){
val=parseFloat(val,10);
var area=_2f9.getArea();
if(plot.axisX==this){
var _2fc=0-this.range.lower;
var min=this.range.lower+_2fc;
var max=this.range.upper+_2fc;
val+=_2fc;
return (val*((area.right-area.left)/max))+area.left;
}else{
var max=this.range.upper;
var min=this.range.lower;
var _2fc=0;
if(min<0){
_2fc+=Math.abs(min);
}
max+=_2fc;
min+=_2fc;
val+=_2fc;
var pmin=area.bottom;
var pmax=area.top;
return (((pmin-pmax)/(max-min))*(max-val))+pmax;
}
},initializeOrigin:function(_301,_302){
if(isNaN(this.origin)){
if(this.origin.toLowerCase()=="max"){
this.origin=_301.range[(_302=="y")?"upper":"lower"];
}else{
if(this.origin.toLowerCase()=="min"){
this.origin=_301.range[(_302=="y")?"lower":"upper"];
}else{
this.origin=0;
}
}
}
},initializeLabels:function(){
if(this.labels.length==0){
this.showLabels=false;
this.showLines=false;
this.showTicks=false;
}else{
if(this.labels[0].label&&this.labels[0].value!=null){
for(var i=0;i<this.labels.length;i++){
this._labels.push(this.labels[i]);
}
}else{
if(!isNaN(this.labels[0])){
for(var i=0;i<this.labels.length;i++){
this._labels.push({label:this.labels[i],value:this.labels[i]});
}
}else{
var a=[];
for(var i=0;i<this.labels.length;i++){
a.push(this.labels[i]);
}
var s=a.shift();
this._labels.push({label:s,value:this.range.lower});
if(a.length>0){
var s=a.pop();
this._labels.push({label:s,value:this.range.upper});
}
if(a.length>0){
var _306=this.range.upper-this.range.lower;
var step=_306/(this.labels.length-1);
for(var i=1;i<=a.length;i++){
this._labels.push({label:a[i-1],value:this.range.lower+(step*i)});
}
}
}
}
}
},initialize:function(_308,plot,_30a,_30b){
this.destroy();
this.initializeOrigin(_30a,_30b);
this.initializeLabels();
var node=this.render(_308,plot,_30a,_30b);
return node;
},destroy:function(){
for(var p in this.nodes){
while(this.nodes[p]&&this.nodes[p].childNodes.length>0){
this.nodes[p].removeChild(this.nodes[p].childNodes[0]);
}
if(this.nodes[p]&&this.nodes[p].parentNode){
this.nodes[p].parentNode.removeChild(this.nodes[p]);
}
this.nodes[p]=null;
}
}});
dojo.provide("dojo.charting.svg.Axis");
if(dojo.render.svg.capable){
dojo.extend(dojo.charting.Axis,{renderLines:function(_30e,plot,_310){
if(this.nodes.lines){
while(this.nodes.lines.childNodes.length>0){
this.nodes.lines.removeChild(this.nodes.lines.childNodes[0]);
}
if(this.nodes.lines.parentNode){
this.nodes.lines.parentNode.removeChild(this.nodes.lines);
this.nodes.lines=null;
}
}
var area=_30e.getArea();
var g=this.nodes.lines=document.createElementNS(dojo.svg.xmlns.svg,"g");
g.setAttribute("id",this.getId()+"-lines");
for(var i=0;i<this._labels.length;i++){
if(this._labels[i].value==this.origin){
continue;
}
var v=this.getCoord(this._labels[i].value,_30e,plot);
var l=document.createElementNS(dojo.svg.xmlns.svg,"line");
l.setAttribute("style","stroke:#999;stroke-width:1px;stroke-dasharray:1,4;");
if(_310=="x"){
l.setAttribute("y1",area.top);
l.setAttribute("y2",area.bottom);
l.setAttribute("x1",v);
l.setAttribute("x2",v);
}else{
if(_310=="y"){
l.setAttribute("y1",v);
l.setAttribute("y2",v);
l.setAttribute("x1",area.left);
l.setAttribute("x2",area.right);
}
}
g.appendChild(l);
}
return g;
},renderTicks:function(_316,plot,_318,_319){
if(this.nodes.ticks){
while(this.nodes.ticks.childNodes.length>0){
this.nodes.ticks.removeChild(this.nodes.ticks.childNodes[0]);
}
if(this.nodes.ticks.parentNode){
this.nodes.ticks.parentNode.removeChild(this.nodes.ticks);
this.nodes.ticks=null;
}
}
var g=this.nodes.ticks=document.createElementNS(dojo.svg.xmlns.svg,"g");
g.setAttribute("id",this.getId()+"-ticks");
for(var i=0;i<this._labels.length;i++){
var v=this.getCoord(this._labels[i].value,_316,plot);
var l=document.createElementNS(dojo.svg.xmlns.svg,"line");
l.setAttribute("style","stroke:#000;stroke-width:1pt;");
if(_318=="x"){
l.setAttribute("y1",_319);
l.setAttribute("y2",_319+3);
l.setAttribute("x1",v);
l.setAttribute("x2",v);
}else{
if(_318=="y"){
l.setAttribute("y1",v);
l.setAttribute("y2",v);
l.setAttribute("x1",_319-2);
l.setAttribute("x2",_319+2);
}
}
g.appendChild(l);
}
return g;
},renderLabels:function(_31e,plot,_320,_321,_322,_323){
function createLabel(_324,x,y,_327,_328){
var text=document.createElementNS(dojo.svg.xmlns.svg,"text");
text.setAttribute("x",x);
text.setAttribute("y",(_320=="x"?y:y+2));
text.setAttribute("style","text-anchor:"+_328+";font-family:sans-serif;font-size:"+_327+"px;fill:#000;");
text.appendChild(document.createTextNode(_324));
return text;
}
if(this.nodes.labels){
while(this.nodes.labels.childNodes.length>0){
this.nodes.labels.removeChild(this.nodes.labels.childNodes[0]);
}
if(this.nodes.labels.parentNode){
this.nodes.labels.parentNode.removeChild(this.nodes.labels);
this.nodes.labels=null;
}
}
var g=this.nodes.labels=document.createElementNS(dojo.svg.xmlns.svg,"g");
g.setAttribute("id",this.getId()+"-labels");
for(var i=0;i<this._labels.length;i++){
var v=this.getCoord(this._labels[i].value,_31e,plot);
if(_320=="x"){
g.appendChild(createLabel(this._labels[i].label,v,_321,_322,_323));
}else{
if(_320=="y"){
g.appendChild(createLabel(this._labels[i].label,_321,v,_322,_323));
}
}
}
return g;
},render:function(_32d,plot,_32f,_330){
var area=_32d.getArea();
var _332=1;
var _333="stroke:#000;stroke-width:"+_332+"px;";
var _334=10;
var _335=_32f.getCoord(this.origin,_32d,plot);
this.nodes.main=document.createElementNS(dojo.svg.xmlns.svg,"g");
var g=this.nodes.main;
g.setAttribute("id",this.getId());
var line=this.nodes.axis=document.createElementNS(dojo.svg.xmlns.svg,"line");
if(_330=="x"){
line.setAttribute("y1",_335);
line.setAttribute("y2",_335);
line.setAttribute("x1",area.left-_332);
line.setAttribute("x2",area.right+_332);
line.setAttribute("style",_333);
var y=_335+_334+2;
if(this.showLines){
g.appendChild(this.renderLines(_32d,plot,_330,y));
}
if(this.showTicks){
g.appendChild(this.renderTicks(_32d,plot,_330,_335));
}
if(this.showLabels){
g.appendChild(this.renderLabels(_32d,plot,_330,y,_334,"middle"));
}
if(this.showLabel&&this.label){
var x=_32d.size.width/2;
var text=document.createElementNS(dojo.svg.xmlns.svg,"text");
text.setAttribute("x",x);
text.setAttribute("y",(_335+(_334*2)+(_334/2)));
text.setAttribute("style","text-anchor:middle;font-family:sans-serif;font-weight:bold;font-size:"+(_334+2)+"px;fill:#000;");
text.appendChild(document.createTextNode(this.label));
g.appendChild(text);
}
}else{
line.setAttribute("x1",_335);
line.setAttribute("x2",_335);
line.setAttribute("y1",area.top);
line.setAttribute("y2",area.bottom);
line.setAttribute("style",_333);
var _33b=this.origin==_32f.range.upper;
var x=_335+(_33b?4:-4);
var _33c=_33b?"start":"end";
if(this.showLines){
g.appendChild(this.renderLines(_32d,plot,_330,x));
}
if(this.showTicks){
g.appendChild(this.renderTicks(_32d,plot,_330,_335));
}
if(this.showLabels){
g.appendChild(this.renderLabels(_32d,plot,_330,x,_334,_33c));
}
if(this.showLabel&&this.label){
var x=_33b?(_335+(_334*2)+(_334/2)):(_335-(_334*4));
var y=_32d.size.height/2;
var text=document.createElementNS(dojo.svg.xmlns.svg,"text");
text.setAttribute("x",x);
text.setAttribute("y",y);
text.setAttribute("transform","rotate(90, "+x+", "+y+")");
text.setAttribute("style","text-anchor:middle;font-family:sans-serif;font-weight:bold;font-size:"+(_334+2)+"px;fill:#000;");
text.appendChild(document.createTextNode(this.label));
g.appendChild(text);
}
}
g.appendChild(line);
return g;
}});
}
dojo.provide("dojo.charting.vml.Axis");
if(dojo.render.vml.capable){
dojo.extend(dojo.charting.Axis,{renderLines:function(_33d,plot,_33f){
if(this.nodes.lines){
while(this.nodes.lines.childNodes.length>0){
this.nodes.lines.removeChild(this.nodes.lines.childNodes[0]);
}
if(this.nodes.lines.parentNode){
this.nodes.lines.parentNode.removeChild(this.nodes.lines);
this.nodes.lines=null;
}
}
var area=_33d.getArea();
var g=this.nodes.lines=document.createElement("div");
g.setAttribute("id",this.getId()+"-lines");
for(var i=0;i<this._labels.length;i++){
if(this._labels[i].value==this.origin){
continue;
}
var v=this.getCoord(this._labels[i].value,_33d,plot);
var l=document.createElement("v:line");
var str=document.createElement("v:stroke");
str.dashstyle="dot";
l.appendChild(str);
l.setAttribute("strokecolor","#666");
l.setAttribute("strokeweight","1px");
var s=l.style;
s.position="absolute";
s.top="0px";
s.left="0px";
s.antialias="false";
if(_33f=="x"){
l.setAttribute("from",v+"px,"+area.top+"px");
l.setAttribute("to",v+"px,"+area.bottom+"px");
}else{
if(_33f=="y"){
l.setAttribute("from",area.left+"px,"+v+"px");
l.setAttribute("to",area.right+"px,"+v+"px");
}
}
g.appendChild(l);
}
return g;
},renderTicks:function(_347,plot,_349,_34a){
if(this.nodes.ticks){
while(this.nodes.ticks.childNodes.length>0){
this.nodes.ticks.removeChild(this.nodes.ticks.childNodes[0]);
}
if(this.nodes.ticks.parentNode){
this.nodes.ticks.parentNode.removeChild(this.nodes.ticks);
this.nodes.ticks=null;
}
}
var g=this.nodes.ticks=document.createElement("div");
g.setAttribute("id",this.getId()+"-ticks");
for(var i=0;i<this._labels.length;i++){
var v=this.getCoord(this._labels[i].value,_347,plot);
var l=document.createElement("v:line");
l.setAttribute("strokecolor","#000");
l.setAttribute("strokeweight","1px");
var s=l.style;
s.position="absolute";
s.top="0px";
s.left="0px";
s.antialias="false";
if(_349=="x"){
l.setAttribute("from",v+"px,"+_34a+"px");
l.setAttribute("to",v+"px,"+(_34a+3)+"px");
}else{
if(_349=="y"){
l.setAttribute("from",(_34a-2)+"px,"+v+"px");
l.setAttribute("to",(_34a+2)+"px,"+v+"px");
}
}
g.appendChild(l);
}
return g;
},renderLabels:function(_350,plot,_352,_353,_354,_355){
function createLabel(_356,x,y,_359,_35a){
var text=document.createElement("div");
var s=text.style;
text.innerHTML=_356;
s.fontSize=_359+"px";
s.fontFamily="sans-serif";
s.position="absolute";
s.top=y+"px";
if(_35a=="center"){
s.left=x+"px";
s.textAlign="center";
}else{
if(_35a=="left"){
s.left=x+"px";
s.textAlign="left";
}else{
if(_35a=="right"){
s.right=x+"px";
s.textAlign="right";
}
}
}
return text;
}
if(this.nodes.labels){
while(this.nodes.labels.childNodes.length>0){
this.nodes.labels.removeChild(this.nodes.labels.childNodes[0]);
}
if(this.nodes.labels.parentNode){
this.nodes.labels.parentNode.removeChild(this.nodes.labels);
this.nodes.labels=null;
}
}
var g=this.nodes.labels=document.createElement("div");
g.setAttribute("id",this.getId()+"-labels");
for(var i=0;i<this._labels.length;i++){
var v=this.getCoord(this._labels[i].value,_350,plot);
if(_352=="x"){
var node=createLabel(this._labels[i].label,v,_353,_354,_355);
document.body.appendChild(node);
node.style.left=v-(node.offsetWidth/2)+"px";
g.appendChild(node);
}else{
if(_352=="y"){
var node=createLabel(this._labels[i].label,_353,v,_354,_355);
document.body.appendChild(node);
node.style.top=v-(node.offsetHeight/2)+"px";
g.appendChild(node);
}
}
}
return g;
},render:function(_361,plot,_363,_364){
var area=_361.getArea();
var _366=1;
var _367="stroke:#000;stroke-width:"+_366+"px;";
var _368=10;
var _369=_363.getCoord(this.origin,_361,plot);
var g=this.nodes.main=document.createElement("div");
g.setAttribute("id",this.getId());
var line=this.nodes.axis=document.createElement("v:line");
line.setAttribute("strokecolor","#000");
line.setAttribute("strokeweight",_366+"px");
var s=line.style;
s.position="absolute";
s.top="0px";
s.left="0px";
s.antialias="false";
if(_364=="x"){
line.setAttribute("from",area.left+"px,"+_369+"px");
line.setAttribute("to",area.right+"px,"+_369+"px");
var y=_369+Math.floor(_368/2);
if(this.showLines){
g.appendChild(this.renderLines(_361,plot,_364,y));
}
if(this.showTicks){
g.appendChild(this.renderTicks(_361,plot,_364,_369));
}
if(this.showLabels){
g.appendChild(this.renderLabels(_361,plot,_364,y,_368,"center"));
}
if(this.showLabel&&this.label){
var x=_361.size.width/2;
var y=_369+Math.round(_368*1.5);
var text=document.createElement("div");
var s=text.style;
text.innerHTML=this.label;
s.fontSize=(_368+2)+"px";
s.fontFamily="sans-serif";
s.fontWeight="bold";
s.position="absolute";
s.top=y+"px";
s.left=x+"px";
s.textAlign="center";
document.body.appendChild(text);
text.style.left=x-(text.offsetWidth/2)+"px";
g.appendChild(text);
}
}else{
line.setAttribute("from",_369+"px,"+area.top+"px");
line.setAttribute("to",_369+"px,"+area.bottom+"px");
var _370=this.origin==_363.range.upper;
var x=_369+4;
var _371="left";
if(!_370){
x=area.right-_369+_368+4;
_371="right";
if(_369==area.left){
x+=(_368*2)-(_368/2);
}
}
if(this.showLines){
g.appendChild(this.renderLines(_361,plot,_364,x));
}
if(this.showTicks){
g.appendChild(this.renderTicks(_361,plot,_364,_369));
}
if(this.showLabels){
g.appendChild(this.renderLabels(_361,plot,_364,x,_368,_371));
}
if(this.showLabel&&this.label){
x+=(_368*2)-2;
var y=_361.size.height/2;
var text=document.createElement("div");
var s=text.style;
text.innerHTML=this.label;
s.fontSize=(_368+2)+"px";
s.fontFamily="sans-serif";
s.fontWeight="bold";
s.position="absolute";
s.height=_361.size.height+"px";
s.writingMode="tb-rl";
s.textAlign="center";
s[_371]=x+"px";
document.body.appendChild(text);
s.top=y-(text.offsetHeight/2)+"px";
g.appendChild(text);
}
}
g.appendChild(line);
return g;
}});
}
dojo.provide("dojo.charting.Plotters");
dojo.provide("dojo.charting.svg.Plotters");
if(dojo.render.svg.capable){
dojo.require("dojo.svg");
dojo.mixin(dojo.charting.Plotters,{Bar:function(_372,plot,_374,_375){
var area=_372.getArea();
var _377=document.createElementNS(dojo.svg.xmlns.svg,"g");
var n=plot.series.length;
var data=[];
for(var i=0;i<n;i++){
var tmp=plot.series[i].data.evaluate(_374);
data.push(tmp);
}
var _37c=8;
var _37d=data[0].length;
var _37e=((area.right-area.left)-(_37c*(_37d-1)))/_37d;
var _37f=_37e/n;
var _380=plot.axisY.getCoord(plot.axisX.origin,_372,plot);
for(var i=0;i<_37d;i++){
var _381=area.left+(_37e*i)+(_37c*i);
for(var j=0;j<n;j++){
var _383=data[j][i].y;
var yA=_380;
var x=_381+(_37f*j);
var y=plot.axisY.getCoord(_383,_372,plot);
var h=Math.abs(yA-y);
if(_383<plot.axisX.origin){
yA=y;
y=_380;
}
var bar=document.createElementNS(dojo.svg.xmlns.svg,"rect");
bar.setAttribute("fill",data[j][i].series.color);
bar.setAttribute("stroke-width","0");
bar.setAttribute("x",x);
bar.setAttribute("y",y);
bar.setAttribute("width",_37f);
bar.setAttribute("height",h);
bar.setAttribute("fill-opacity","0.6");
if(_375){
_375(bar,data[j][i].src);
}
_377.appendChild(bar);
}
}
return _377;
},HorizontalBar:function(_389,plot,_38b,_38c){
var area=_389.getArea();
var _38e=document.createElementNS(dojo.svg.xmlns.svg,"g");
var n=plot.series.length;
var data=[];
for(var i=0;i<n;i++){
var tmp=plot.series[i].data.evaluate(_38b);
data.push(tmp);
}
var _393=6;
var _394=data[0].length;
var h=((area.bottom-area.top)-(_393*(_394-1)))/_394;
var barH=h/n;
var _397=plot.axisX.getCoord(0,_389,plot);
for(var i=0;i<_394;i++){
var _398=area.top+(h*i)+(_393*i);
for(var j=0;j<n;j++){
var _39a=data[j][i].y;
var y=_398+(barH*j);
var xA=_397;
var x=plot.axisX.getCoord(_39a,_389,plot);
var w=Math.abs(x-xA);
if(_39a>0){
x=_397;
}
var bar=document.createElementNS(dojo.svg.xmlns.svg,"rect");
bar.setAttribute("fill",data[j][i].series.color);
bar.setAttribute("stroke-width","0");
bar.setAttribute("x",xA);
bar.setAttribute("y",y);
bar.setAttribute("width",w);
bar.setAttribute("height",barH);
bar.setAttribute("fill-opacity","0.6");
if(_38c){
_38c(bar,data[j][i].src);
}
_38e.appendChild(bar);
}
}
return _38e;
},Gantt:function(_3a0,plot,_3a2,_3a3){
var area=_3a0.getArea();
var _3a5=document.createElementNS(dojo.svg.xmlns.svg,"g");
var n=plot.series.length;
var data=[];
for(var i=0;i<n;i++){
var tmp=plot.series[i].data.evaluate(_3a2);
data.push(tmp);
}
var _3aa=2;
var _3ab=data[0].length;
var h=((area.bottom-area.top)-(_3aa*(_3ab-1)))/_3ab;
var barH=h/n;
for(var i=0;i<_3ab;i++){
var _3ae=area.top+(h*i)+(_3aa*i);
for(var j=0;j<n;j++){
var high=data[j][i].high;
var low=data[j][i].low;
if(low>high){
var t=high;
high=low;
low=t;
}
var x=plot.axisX.getCoord(low,_3a0,plot);
var w=plot.axisX.getCoord(high,_3a0,plot)-x;
var y=_3ae+(barH*j);
var bar=document.createElementNS(dojo.svg.xmlns.svg,"rect");
bar.setAttribute("fill",data[j][i].series.color);
bar.setAttribute("stroke-width","0");
bar.setAttribute("x",x);
bar.setAttribute("y",y);
bar.setAttribute("width",w);
bar.setAttribute("height",barH);
bar.setAttribute("fill-opacity","0.6");
if(_3a3){
_3a3(bar,data[j][i].src);
}
_3a5.appendChild(bar);
}
}
return _3a5;
},StackedArea:function(_3b7,plot,_3b9,_3ba){
var area=_3b7.getArea();
var _3bc=document.createElementNS(dojo.svg.xmlns.svg,"g");
var n=plot.series.length;
var data=[];
var _3bf=[];
for(var i=0;i<n;i++){
var tmp=plot.series[i].data.evaluate(_3b9);
for(var j=0;j<tmp.length;j++){
if(i==0){
_3bf.push(tmp[j].y);
}else{
_3bf[j]+=tmp[j].y;
}
tmp[j].y=_3bf[j];
}
data.push(tmp);
}
for(var i=n-1;i>=0;i--){
var path=document.createElementNS(dojo.svg.xmlns.svg,"path");
path.setAttribute("fill",data[i][0].series.color);
path.setAttribute("fill-opacity","0.4");
path.setAttribute("stroke",data[i][0].series.color);
path.setAttribute("stroke-width","1");
path.setAttribute("stroke-opacity","0.85");
var cmd=[];
var r=3;
for(var j=0;j<data[i].length;j++){
var _3c6=data[i];
var x=plot.axisX.getCoord(_3c6[j].x,_3b7,plot);
var y=plot.axisY.getCoord(_3c6[j].y,_3b7,plot);
if(j==0){
cmd.push("M");
}else{
cmd.push("L");
}
cmd.push(x+","+y);
var c=document.createElementNS(dojo.svg.xmlns.svg,"circle");
c.setAttribute("cx",x);
c.setAttribute("cy",y);
c.setAttribute("r","3");
c.setAttribute("fill",_3c6[j].series.color);
c.setAttribute("fill-opacity","0.6");
c.setAttribute("stroke-width","1");
c.setAttribute("stroke-opacity","0.85");
_3bc.appendChild(c);
if(_3ba){
_3ba(c,data[i].src);
}
}
if(i==0){
cmd.push("L");
cmd.push(x+","+plot.axisY.getCoord(plot.axisX.origin,_3b7,plot));
cmd.push("L");
cmd.push(plot.axisX.getCoord(data[0][0].x,_3b7,plot)+","+plot.axisY.getCoord(plot.axisX.origin,_3b7,plot));
cmd.push("Z");
}else{
var _3c6=data[i-1];
cmd.push("L");
cmd.push(x+","+Math.round(plot.axisY.getCoord(_3c6[_3c6.length-1].y,_3b7,plot)));
for(var j=_3c6.length-2;j>=0;j--){
var x=plot.axisX.getCoord(_3c6[j].x,_3b7,plot);
var y=plot.axisY.getCoord(_3c6[j].y,_3b7,plot);
cmd.push("L");
cmd.push(x+","+y);
}
}
path.setAttribute("d",cmd.join(" ")+" Z");
_3bc.appendChild(path);
}
return _3bc;
},StackedCurvedArea:function(_3ca,plot,_3cc,_3cd){
var _3ce=3;
var area=_3ca.getArea();
var _3d0=document.createElementNS(dojo.svg.xmlns.svg,"g");
var n=plot.series.length;
var data=[];
var _3d3=[];
for(var i=0;i<n;i++){
var tmp=plot.series[i].data.evaluate(_3cc);
for(var j=0;j<tmp.length;j++){
if(i==0){
_3d3.push(tmp[j].y);
}else{
_3d3[j]+=tmp[j].y;
}
tmp[j].y=_3d3[j];
}
data.push(tmp);
}
for(var i=n-1;i>=0;i--){
var path=document.createElementNS(dojo.svg.xmlns.svg,"path");
path.setAttribute("fill",data[i][0].series.color);
path.setAttribute("fill-opacity","0.4");
path.setAttribute("stroke",data[i][0].series.color);
path.setAttribute("stroke-width","1");
path.setAttribute("stroke-opacity","0.85");
var cmd=[];
var r=3;
for(var j=0;j<data[i].length;j++){
var _3da=data[i];
var x=plot.axisX.getCoord(_3da[j].x,_3ca,plot);
var y=plot.axisY.getCoord(_3da[j].y,_3ca,plot);
var dx=area.left+1;
var dy=area.bottom;
if(j>0){
dx=x-plot.axisX.getCoord(_3da[j-1].x,_3ca,plot);
dy=plot.axisY.getCoord(_3da[j-1].y,_3ca,plot);
}
if(j==0){
cmd.push("M");
}else{
cmd.push("C");
var cx=x-(_3ce-1)*(dx/_3ce);
cmd.push(cx+","+dy);
cx=x-(dx/_3ce);
cmd.push(cx+","+y);
}
cmd.push(x+","+y);
var c=document.createElementNS(dojo.svg.xmlns.svg,"circle");
c.setAttribute("cx",x);
c.setAttribute("cy",y);
c.setAttribute("r","3");
c.setAttribute("fill",_3da[j].series.color);
c.setAttribute("fill-opacity","0.6");
c.setAttribute("stroke-width","1");
c.setAttribute("stroke-opacity","0.85");
_3d0.appendChild(c);
if(_3cd){
_3cd(c,data[i].src);
}
}
if(i==0){
cmd.push("L");
cmd.push(x+","+plot.axisY.getCoord(plot.axisX.origin,_3ca,plot));
cmd.push("L");
cmd.push(plot.axisX.getCoord(data[0][0].x,_3ca,plot)+","+plot.axisY.getCoord(plot.axisX.origin,_3ca,plot));
cmd.push("Z");
}else{
var _3da=data[i-1];
cmd.push("L");
cmd.push(x+","+Math.round(plot.axisY.getCoord(_3da[_3da.length-1].y,_3ca,plot)));
for(var j=_3da.length-2;j>=0;j--){
var x=plot.axisX.getCoord(_3da[j].x,_3ca,plot);
var y=plot.axisY.getCoord(_3da[j].y,_3ca,plot);
var dx=x-plot.axisX.getCoord(_3da[j+1].x,_3ca,plot);
var dy=plot.axisY.getCoord(_3da[j+1].y,_3ca,plot);
cmd.push("C");
var cx=x-(_3ce-1)*(dx/_3ce);
cmd.push(cx+","+dy);
cx=x-(dx/_3ce);
cmd.push(cx+","+y);
cmd.push(x+","+y);
}
}
path.setAttribute("d",cmd.join(" ")+" Z");
_3d0.appendChild(path);
}
return _3d0;
},DataBar:function(data,_3e2,plot,_3e4){
var area=_3e2.getArea();
var _3e6=document.createElementNS(dojo.svg.xmlns.svg,"g");
var n=data.length;
var w=(area.right-area.left)/(plot.axisX.range.upper-plot.axisX.range.lower);
var _3e9=plot.axisY.getCoord(plot.axisX.origin,_3e2,plot);
for(var i=0;i<n;i++){
var _3eb=data[i].y;
var yA=_3e9;
var x=plot.axisX.getCoord(data[i].x,_3e2,plot)-(w/2);
var y=plot.axisY.getCoord(_3eb,_3e2,plot);
var h=Math.abs(yA-y);
if(_3eb<plot.axisX.origin){
yA=y;
y=_3e9;
}
var bar=document.createElementNS(dojo.svg.xmlns.svg,"rect");
bar.setAttribute("fill",data[i].series.color);
bar.setAttribute("stroke-width","0");
bar.setAttribute("x",x);
bar.setAttribute("y",y);
bar.setAttribute("width",w);
bar.setAttribute("height",h);
bar.setAttribute("fill-opacity","0.6");
if(_3e4){
_3e4(bar,data[i].src);
}
_3e6.appendChild(bar);
}
return _3e6;
},Line:function(data,_3f2,plot,_3f4){
var area=_3f2.getArea();
var line=document.createElementNS(dojo.svg.xmlns.svg,"g");
var path=document.createElementNS(dojo.svg.xmlns.svg,"path");
line.appendChild(path);
path.setAttribute("fill","none");
path.setAttribute("stroke",data[0].series.color);
path.setAttribute("stroke-width","2");
path.setAttribute("stroke-opacity","0.85");
if(data[0].series.label!=null){
path.setAttribute("title",data[0].series.label);
}
var cmd=[];
for(var i=0;i<data.length;i++){
var x=plot.axisX.getCoord(data[i].x,_3f2,plot);
var y=plot.axisY.getCoord(data[i].y,_3f2,plot);
if(i==0){
cmd.push("M");
}else{
cmd.push("L");
}
cmd.push(x+","+y);
var c=document.createElementNS(dojo.svg.xmlns.svg,"circle");
c.setAttribute("cx",x);
c.setAttribute("cy",y);
c.setAttribute("r","3");
c.setAttribute("fill",data[i].series.color);
c.setAttribute("fill-opacity","0.6");
c.setAttribute("stroke-width","1");
c.setAttribute("stroke-opacity","0.85");
line.appendChild(c);
if(_3f4){
_3f4(c,data[i].src);
}
}
path.setAttribute("d",cmd.join(" "));
return line;
},CurvedLine:function(data,_3fe,plot,_400){
var _401=3;
var area=_3fe.getArea();
var line=document.createElementNS(dojo.svg.xmlns.svg,"g");
var path=document.createElementNS(dojo.svg.xmlns.svg,"path");
line.appendChild(path);
path.setAttribute("fill","none");
path.setAttribute("stroke",data[0].series.color);
path.setAttribute("stroke-width","2");
path.setAttribute("stroke-opacity","0.85");
if(data[0].series.label!=null){
path.setAttribute("title",data[0].series.label);
}
var cmd=[];
for(var i=0;i<data.length;i++){
var x=plot.axisX.getCoord(data[i].x,_3fe,plot);
var y=plot.axisY.getCoord(data[i].y,_3fe,plot);
var dx=area.left+1;
var dy=area.bottom;
if(i>0){
dx=x-plot.axisX.getCoord(data[i-1].x,_3fe,plot);
dy=plot.axisY.getCoord(data[i-1].y,_3fe,plot);
}
if(i==0){
cmd.push("M");
}else{
cmd.push("C");
var cx=x-(_401-1)*(dx/_401);
cmd.push(cx+","+dy);
cx=x-(dx/_401);
cmd.push(cx+","+y);
}
cmd.push(x+","+y);
var c=document.createElementNS(dojo.svg.xmlns.svg,"circle");
c.setAttribute("cx",x);
c.setAttribute("cy",y);
c.setAttribute("r","3");
c.setAttribute("fill",data[i].series.color);
c.setAttribute("fill-opacity","0.6");
c.setAttribute("stroke-width","1");
c.setAttribute("stroke-opacity","0.85");
line.appendChild(c);
if(_400){
_400(c,data[i].src);
}
}
path.setAttribute("d",cmd.join(" "));
return line;
},Area:function(data,_40e,plot,_410){
var area=_40e.getArea();
var line=document.createElementNS(dojo.svg.xmlns.svg,"g");
var path=document.createElementNS(dojo.svg.xmlns.svg,"path");
line.appendChild(path);
path.setAttribute("fill",data[0].series.color);
path.setAttribute("fill-opacity","0.4");
path.setAttribute("stroke",data[0].series.color);
path.setAttribute("stroke-width","1");
path.setAttribute("stroke-opacity","0.85");
if(data[0].series.label!=null){
path.setAttribute("title",data[0].series.label);
}
var cmd=[];
for(var i=0;i<data.length;i++){
var x=plot.axisX.getCoord(data[i].x,_40e,plot);
var y=plot.axisY.getCoord(data[i].y,_40e,plot);
if(i==0){
cmd.push("M");
}else{
cmd.push("L");
}
cmd.push(x+","+y);
var c=document.createElementNS(dojo.svg.xmlns.svg,"circle");
c.setAttribute("cx",x);
c.setAttribute("cy",y);
c.setAttribute("r","3");
c.setAttribute("fill",data[i].series.color);
c.setAttribute("fill-opacity","0.6");
c.setAttribute("stroke-width","1");
c.setAttribute("stroke-opacity","0.85");
line.appendChild(c);
if(_410){
_410(c,data[i].src);
}
}
cmd.push("L");
cmd.push(x+","+plot.axisY.getCoord(plot.axisX.origin,_40e,plot));
cmd.push("L");
cmd.push(plot.axisX.getCoord(data[0].x,_40e,plot)+","+plot.axisY.getCoord(plot.axisX.origin,_40e,plot));
cmd.push("Z");
path.setAttribute("d",cmd.join(" "));
return line;
},CurvedArea:function(data,_41a,plot,_41c){
var _41d=3;
var area=_41a.getArea();
var line=document.createElementNS(dojo.svg.xmlns.svg,"g");
var path=document.createElementNS(dojo.svg.xmlns.svg,"path");
line.appendChild(path);
path.setAttribute("fill",data[0].series.color);
path.setAttribute("fill-opacity","0.4");
path.setAttribute("stroke",data[0].series.color);
path.setAttribute("stroke-width","1");
path.setAttribute("stroke-opacity","0.85");
if(data[0].series.label!=null){
path.setAttribute("title",data[0].series.label);
}
var cmd=[];
for(var i=0;i<data.length;i++){
var x=plot.axisX.getCoord(data[i].x,_41a,plot);
var y=plot.axisY.getCoord(data[i].y,_41a,plot);
var dx=area.left+1;
var dy=area.bottom;
if(i>0){
dx=x-plot.axisX.getCoord(data[i-1].x,_41a,plot);
dy=plot.axisY.getCoord(data[i-1].y,_41a,plot);
}
if(i==0){
cmd.push("M");
}else{
cmd.push("C");
var cx=x-(_41d-1)*(dx/_41d);
cmd.push(cx+","+dy);
cx=x-(dx/_41d);
cmd.push(cx+","+y);
}
cmd.push(x+","+y);
var c=document.createElementNS(dojo.svg.xmlns.svg,"circle");
c.setAttribute("cx",x);
c.setAttribute("cy",y);
c.setAttribute("r","3");
c.setAttribute("fill",data[i].series.color);
c.setAttribute("fill-opacity","0.6");
c.setAttribute("stroke-width","1");
c.setAttribute("stroke-opacity","0.85");
line.appendChild(c);
if(_41c){
_41c(c,data[i].src);
}
}
cmd.push("L");
cmd.push(x+","+plot.axisY.getCoord(plot.axisX.origin,_41a,plot));
cmd.push("L");
cmd.push(plot.axisX.getCoord(data[0].x,_41a,plot)+","+plot.axisY.getCoord(plot.axisX.origin,_41a,plot));
cmd.push("Z");
path.setAttribute("d",cmd.join(" "));
return line;
},HighLow:function(data,_42a,plot,_42c){
var area=_42a.getArea();
var _42e=document.createElementNS(dojo.svg.xmlns.svg,"g");
var n=data.length;
var part=((area.right-area.left)/(plot.axisX.range.upper-plot.axisX.range.lower))/4;
var w=part*2;
for(var i=0;i<n;i++){
var high=data[i].high;
var low=data[i].low;
if(low>high){
var t=low;
low=high;
high=t;
}
var x=plot.axisX.getCoord(data[i].x,_42a,plot)-(w/2);
var y=plot.axisY.getCoord(high,_42a,plot);
var h=plot.axisY.getCoord(low,_42a,plot)-y;
var bar=document.createElementNS(dojo.svg.xmlns.svg,"rect");
bar.setAttribute("fill",data[i].series.color);
bar.setAttribute("stroke-width","0");
bar.setAttribute("x",x);
bar.setAttribute("y",y);
bar.setAttribute("width",w);
bar.setAttribute("height",h);
bar.setAttribute("fill-opacity","0.6");
if(_42c){
_42c(bar,data[i].src);
}
_42e.appendChild(bar);
}
return _42e;
},HighLowClose:function(data,_43b,plot,_43d){
var area=_43b.getArea();
var _43f=document.createElementNS(dojo.svg.xmlns.svg,"g");
var n=data.length;
var part=((area.right-area.left)/(plot.axisX.range.upper-plot.axisX.range.lower))/4;
var w=part*2;
for(var i=0;i<n;i++){
var high=data[i].high;
var low=data[i].low;
if(low>high){
var t=low;
low=high;
high=t;
}
var c=data[i].close;
var x=plot.axisX.getCoord(data[i].x,_43b,plot)-(w/2);
var y=plot.axisY.getCoord(high,_43b,plot);
var h=plot.axisY.getCoord(low,_43b,plot)-y;
var _44b=plot.axisY.getCoord(c,_43b,plot);
var g=document.createElementNS(dojo.svg.xmlns.svg,"g");
var bar=document.createElementNS(dojo.svg.xmlns.svg,"rect");
bar.setAttribute("fill",data[i].series.color);
bar.setAttribute("stroke-width","0");
bar.setAttribute("x",x);
bar.setAttribute("y",y);
bar.setAttribute("width",w);
bar.setAttribute("height",h);
bar.setAttribute("fill-opacity","0.6");
g.appendChild(bar);
var line=document.createElementNS(dojo.svg.xmlns.svg,"line");
line.setAttribute("x1",x);
line.setAttribute("x2",x+w+(part*2));
line.setAttribute("y1",_44b);
line.setAttribute("y2",_44b);
line.setAttribute("style","stroke:"+data[i].series.color+";stroke-width:1px;stroke-opacity:0.6;");
g.appendChild(line);
if(_43d){
_43d(g,data[i].src);
}
_43f.appendChild(g);
}
return _43f;
},HighLowOpenClose:function(data,_450,plot,_452){
var area=_450.getArea();
var _454=document.createElementNS(dojo.svg.xmlns.svg,"g");
var n=data.length;
var part=((area.right-area.left)/(plot.axisX.range.upper-plot.axisX.range.lower))/4;
var w=part*2;
for(var i=0;i<n;i++){
var high=data[i].high;
var low=data[i].low;
if(low>high){
var t=low;
low=high;
high=t;
}
var o=data[i].open;
var c=data[i].close;
var x=plot.axisX.getCoord(data[i].x,_450,plot)-(w/2);
var y=plot.axisY.getCoord(high,_450,plot);
var h=plot.axisY.getCoord(low,_450,plot)-y;
var open=plot.axisY.getCoord(o,_450,plot);
var _462=plot.axisY.getCoord(c,_450,plot);
var g=document.createElementNS(dojo.svg.xmlns.svg,"g");
var bar=document.createElementNS(dojo.svg.xmlns.svg,"rect");
bar.setAttribute("fill",data[i].series.color);
bar.setAttribute("stroke-width","0");
bar.setAttribute("x",x);
bar.setAttribute("y",y);
bar.setAttribute("width",w);
bar.setAttribute("height",h);
bar.setAttribute("fill-opacity","0.6");
g.appendChild(bar);
var line=document.createElementNS(dojo.svg.xmlns.svg,"line");
line.setAttribute("x1",x-(part*2));
line.setAttribute("x2",x+w);
line.setAttribute("y1",open);
line.setAttribute("y2",open);
line.setAttribute("style","stroke:"+data[i].series.color+";stroke-width:1px;stroke-opacity:0.6;");
g.appendChild(line);
var line=document.createElementNS(dojo.svg.xmlns.svg,"line");
line.setAttribute("x1",x);
line.setAttribute("x2",x+w+(part*2));
line.setAttribute("y1",_462);
line.setAttribute("y2",_462);
line.setAttribute("style","stroke:"+data[i].series.color+";stroke-width:1px;stroke-opacity:0.6;");
g.appendChild(line);
if(_452){
_452(g,data[i].src);
}
_454.appendChild(g);
}
return _454;
},Scatter:function(data,_467,plot,_469){
var r=7;
var _46b=document.createElementNS(dojo.svg.xmlns.svg,"g");
for(var i=0;i<data.length;i++){
var x=plot.axisX.getCoord(data[i].x,_467,plot);
var y=plot.axisY.getCoord(data[i].y,_467,plot);
var _46f=document.createElementNS(dojo.svg.xmlns.svg,"path");
_46f.setAttribute("fill",data[i].series.color);
_46f.setAttribute("stroke-width","0");
_46f.setAttribute("d","M "+x+","+(y-r)+" "+"Q "+x+","+y+" "+(x+r)+","+y+" "+"Q "+x+","+y+" "+x+","+(y+r)+" "+"Q "+x+","+y+" "+(x-r)+","+y+" "+"Q "+x+","+y+" "+x+","+(y-r)+" "+"Z");
if(_469){
_469(_46f,data[i].src);
}
_46b.appendChild(_46f);
}
return _46b;
},Bubble:function(data,_471,plot,_473){
var _474=document.createElementNS(dojo.svg.xmlns.svg,"g");
var _475=1;
for(var i=0;i<data.length;i++){
var x=plot.axisX.getCoord(data[i].x,_471,plot);
var y=plot.axisY.getCoord(data[i].y,_471,plot);
if(i==0){
var raw=data[i].size;
var dy=plot.axisY.getCoord(data[i].y+raw,_471,plot)-y;
_475=dy/raw;
}
if(_475<1){
_475=1;
}
var _47b=document.createElementNS(dojo.svg.xmlns.svg,"circle");
_47b.setAttribute("fill",data[i].series.color);
_47b.setAttribute("fill-opacity","0.8");
_47b.setAttribute("stroke",data[i].series.color);
_47b.setAttribute("stroke-width","1");
_47b.setAttribute("cx",x);
_47b.setAttribute("cy",y);
_47b.setAttribute("r",(data[i].size/2)*_475);
if(_473){
_473(_47b,data[i].src);
}
_474.appendChild(_47b);
}
return _474;
}});
dojo.charting.Plotters["Default"]=dojo.charting.Plotters.Line;
}
dojo.provide("dojo.charting.vml.Plotters");
if(dojo.render.vml.capable){
dojo.mixin(dojo.charting.Plotters,{_group:function(_47c){
var _47d=document.createElement("div");
_47d.style.position="absolute";
_47d.style.top="0px";
_47d.style.left="0px";
_47d.style.width=_47c.size.width+"px";
_47d.style.height=_47c.size.height+"px";
return _47d;
},Bar:function(_47e,plot,_480,_481){
var area=_47e.getArea();
var _483=dojo.charting.Plotters._group(_47e);
var n=plot.series.length;
var data=[];
for(var i=0;i<n;i++){
var tmp=plot.series[i].data.evaluate(_480);
data.push(tmp);
}
var _488=8;
var _489=data[0].length;
var _48a=((area.right-area.left)-(_488*(_489-1)))/_489;
var _48b=Math.round(_48a/n);
var _48c=plot.axisY.getCoord(plot.axisX.origin,_47e,plot);
for(var i=0;i<_489;i++){
var _48d=area.left+(_48a*i)+(_488*i);
for(var j=0;j<n;j++){
var _48f=data[j][i].y;
var yA=_48c;
var x=_48d+(_48b*j);
var y=plot.axisY.getCoord(_48f,_47e,plot);
var h=Math.abs(yA-y);
if(_48f<plot.axisX.origin){
yA=y;
y=_48c;
}
var bar=document.createElement("v:rect");
bar.style.position="absolute";
bar.style.top=y+1+"px";
bar.style.left=x+"px";
bar.style.width=_48b+"px";
bar.style.height=h+"px";
bar.setAttribute("fillColor",data[j][i].series.color);
bar.setAttribute("stroked","false");
bar.style.antialias="false";
var fill=document.createElement("v:fill");
fill.setAttribute("opacity","0.6");
bar.appendChild(fill);
if(_481){
_481(bar,data[j][i].src);
}
_483.appendChild(bar);
}
}
return _483;
},HorizontalBar:function(_496,plot,_498,_499){
var area=_496.getArea();
var _49b=dojo.charting.Plotters._group(_496);
var n=plot.series.length;
var data=[];
for(var i=0;i<n;i++){
var tmp=plot.series[i].data.evaluate(_498);
data.push(tmp);
}
var _4a0=6;
var _4a1=data[0].length;
var h=((area.bottom-area.top)-(_4a0*(_4a1-1)))/_4a1;
var barH=h/n;
var _4a4=plot.axisX.getCoord(0,_496,plot);
for(var i=0;i<_4a1;i++){
var _4a5=area.top+(h*i)+(_4a0*i);
for(var j=0;j<n;j++){
var _4a7=data[j][i].y;
var y=_4a5+(barH*j);
var xA=_4a4;
var x=plot.axisX.getCoord(_4a7,_496,plot);
var w=Math.abs(x-xA);
if(_4a7>0){
x=_4a4;
}
var bar=document.createElement("v:rect");
bar.style.position="absolute";
bar.style.top=y+1+"px";
bar.style.left=xA+"px";
bar.style.width=w+"px";
bar.style.height=barH+"px";
bar.setAttribute("fillColor",data[j][i].series.color);
bar.setAttribute("stroked","false");
bar.style.antialias="false";
var fill=document.createElement("v:fill");
fill.setAttribute("opacity","0.6");
bar.appendChild(fill);
if(_499){
_499(bar,data[j][i].src);
}
_49b.appendChild(bar);
}
}
var _4a0=4;
var n=plot.series.length;
var h=((area.bottom-area.top)-(_4a0*(n-1)))/n;
var _4a4=plot.axisX.getCoord(0,_496,plot);
for(var i=0;i<n;i++){
var _4ae=plot.series[i];
var data=_4ae.data.evaluate(_498);
var y=area.top+(h*i)+(_4a0*i);
var _4a7=data[data.length-1].y;
var xA=_4a4;
var x=plot.axisX.getCoord(_4a7,_496,plot);
var w=Math.abs(xA-x);
if(_4a7>0){
xA=x;
x=_4a4;
}
}
return _49b;
},Gantt:function(_4af,plot,_4b1,_4b2){
var area=_4af.getArea();
var _4b4=dojo.charting.Plotters._group(_4af);
var n=plot.series.length;
var data=[];
for(var i=0;i<n;i++){
var tmp=plot.series[i].data.evaluate(_4b1);
data.push(tmp);
}
var _4b9=2;
var _4ba=data[0].length;
var h=((area.bottom-area.top)-(_4b9*(_4ba-1)))/_4ba;
var barH=h/n;
for(var i=0;i<_4ba;i++){
var _4bd=area.top+(h*i)+(_4b9*i);
for(var j=0;j<n;j++){
var high=data[j][i].high;
var low=data[j][i].low;
if(low>high){
var t=high;
high=low;
low=t;
}
var x=plot.axisX.getCoord(low,_4af,plot);
var w=plot.axisX.getCoord(high,_4af,plot)-x;
var y=_4bd+(barH*j);
var bar=document.createElement("v:rect");
bar.style.position="absolute";
bar.style.top=y+1+"px";
bar.style.left=x+"px";
bar.style.width=w+"px";
bar.style.height=barH+"px";
bar.setAttribute("fillColor",data[j][i].series.color);
bar.setAttribute("stroked","false");
bar.style.antialias="false";
var fill=document.createElement("v:fill");
fill.setAttribute("opacity","0.6");
bar.appendChild(fill);
if(_4b2){
_4b2(bar,data[j][i].src);
}
_4b4.appendChild(bar);
}
}
return _4b4;
},StackedArea:function(_4c7,plot,_4c9,_4ca){
var area=_4c7.getArea();
var _4cc=dojo.charting.Plotters._group(_4c7);
var n=plot.series.length;
var data=[];
var _4cf=[];
for(var i=0;i<n;i++){
var tmp=plot.series[i].data.evaluate(_4c9);
for(var j=0;j<tmp.length;j++){
if(i==0){
_4cf.push(tmp[j].y);
}else{
_4cf[j]+=tmp[j].y;
}
tmp[j].y=_4cf[j];
}
data.push(tmp);
}
for(var i=n-1;i>=0;i--){
var path=document.createElement("v:shape");
path.setAttribute("strokeweight","1px");
path.setAttribute("strokecolor",data[i][0].series.color);
path.setAttribute("fillcolor",data[i][0].series.color);
path.setAttribute("coordsize",(area.right-area.left)+","+(area.bottom-area.top));
path.style.position="absolute";
path.style.top="0px";
path.style.left="0px";
path.style.width=area.right-area.left+"px";
path.style.height=area.bottom-area.top+"px";
var _4d4=document.createElement("v:stroke");
_4d4.setAttribute("opacity","0.8");
path.appendChild(_4d4);
var fill=document.createElement("v:fill");
fill.setAttribute("opacity","0.4");
path.appendChild(fill);
var cmd=[];
var r=3;
for(var j=0;j<data[i].length;j++){
var _4d8=data[i];
var x=Math.round(plot.axisX.getCoord(_4d8[j].x,_4c7,plot));
var y=Math.round(plot.axisY.getCoord(_4d8[j].y,_4c7,plot));
if(j==0){
cmd.push("m");
cmd.push(x+","+y);
}else{
cmd.push("l");
cmd.push(x+","+y);
}
var c=document.createElement("v:oval");
c.setAttribute("strokeweight","1px");
c.setAttribute("strokecolor",_4d8[j].series.color);
c.setAttribute("fillcolor",_4d8[j].series.color);
var str=document.createElement("v:stroke");
str.setAttribute("opacity","0.8");
c.appendChild(str);
str=document.createElement("v:fill");
str.setAttribute("opacity","0.6");
c.appendChild(str);
var s=c.style;
s.position="absolute";
s.top=(y-r)+"px";
s.left=(x-r)+"px";
s.width=(r*2)+"px";
s.height=(r*2)+"px";
_4cc.appendChild(c);
if(_4ca){
_4ca(c,data[j].src);
}
}
if(i==0){
cmd.push("l");
cmd.push(x+","+Math.round(plot.axisY.getCoord(plot.axisX.origin,_4c7,plot)));
cmd.push("l");
cmd.push(Math.round(plot.axisX.getCoord(data[0][0].x,_4c7,plot))+","+Math.round(plot.axisY.getCoord(plot.axisX.origin,_4c7,plot)));
}else{
var _4d8=data[i-1];
cmd.push("l");
cmd.push(x+","+Math.round(plot.axisY.getCoord(_4d8[_4d8.length-1].y,_4c7,plot)));
for(var j=_4d8.length-2;j>=0;j--){
var x=Math.round(plot.axisX.getCoord(_4d8[j].x,_4c7,plot));
var y=Math.round(plot.axisY.getCoord(_4d8[j].y,_4c7,plot));
cmd.push("l");
cmd.push(x+","+y);
}
}
path.setAttribute("path",cmd.join(" ")+" x e");
_4cc.appendChild(path);
}
return _4cc;
},StackedCurvedArea:function(_4de,plot,_4e0,_4e1){
var _4e2=3;
var area=_4de.getArea();
var _4e4=dojo.charting.Plotters._group(_4de);
var n=plot.series.length;
var data=[];
var _4e7=[];
for(var i=0;i<n;i++){
var tmp=plot.series[i].data.evaluate(_4e0);
for(var j=0;j<tmp.length;j++){
if(i==0){
_4e7.push(tmp[j].y);
}else{
_4e7[j]+=tmp[j].y;
}
tmp[j].y=_4e7[j];
}
data.push(tmp);
}
for(var i=n-1;i>=0;i--){
var path=document.createElement("v:shape");
path.setAttribute("strokeweight","1px");
path.setAttribute("strokecolor",data[i][0].series.color);
path.setAttribute("fillcolor",data[i][0].series.color);
path.setAttribute("coordsize",(area.right-area.left)+","+(area.bottom-area.top));
path.style.position="absolute";
path.style.top="0px";
path.style.left="0px";
path.style.width=area.right-area.left+"px";
path.style.height=area.bottom-area.top+"px";
var _4ec=document.createElement("v:stroke");
_4ec.setAttribute("opacity","0.8");
path.appendChild(_4ec);
var fill=document.createElement("v:fill");
fill.setAttribute("opacity","0.4");
path.appendChild(fill);
var cmd=[];
var r=3;
for(var j=0;j<data[i].length;j++){
var _4f0=data[i];
var x=Math.round(plot.axisX.getCoord(_4f0[j].x,_4de,plot));
var y=Math.round(plot.axisY.getCoord(_4f0[j].y,_4de,plot));
if(j==0){
cmd.push("m");
cmd.push(x+","+y);
}else{
var _4f3=Math.round(plot.axisX.getCoord(_4f0[j-1].x,_4de,plot));
var _4f4=Math.round(plot.axisY.getCoord(_4f0[j-1].y,_4de,plot));
var dx=x-_4f3;
var dy=y-_4f4;
cmd.push("c");
var cx=Math.round((x-(_4e2-1)*(dx/_4e2)));
cmd.push(cx+","+_4f4);
cx=Math.round((x-(dx/_4e2)));
cmd.push(cx+","+y);
cmd.push(x+","+y);
}
var c=document.createElement("v:oval");
c.setAttribute("strokeweight","1px");
c.setAttribute("strokecolor",_4f0[j].series.color);
c.setAttribute("fillcolor",_4f0[j].series.color);
var str=document.createElement("v:stroke");
str.setAttribute("opacity","0.8");
c.appendChild(str);
str=document.createElement("v:fill");
str.setAttribute("opacity","0.6");
c.appendChild(str);
var s=c.style;
s.position="absolute";
s.top=(y-r)+"px";
s.left=(x-r)+"px";
s.width=(r*2)+"px";
s.height=(r*2)+"px";
_4e4.appendChild(c);
if(_4e1){
_4e1(c,data[j].src);
}
}
if(i==0){
cmd.push("l");
cmd.push(x+","+Math.round(plot.axisY.getCoord(plot.axisX.origin,_4de,plot)));
cmd.push("l");
cmd.push(Math.round(plot.axisX.getCoord(data[0][0].x,_4de,plot))+","+Math.round(plot.axisY.getCoord(plot.axisX.origin,_4de,plot)));
}else{
var _4f0=data[i-1];
cmd.push("l");
cmd.push(x+","+Math.round(plot.axisY.getCoord(_4f0[_4f0.length-1].y,_4de,plot)));
for(var j=_4f0.length-2;j>=0;j--){
var x=Math.round(plot.axisX.getCoord(_4f0[j].x,_4de,plot));
var y=Math.round(plot.axisY.getCoord(_4f0[j].y,_4de,plot));
var _4f3=Math.round(plot.axisX.getCoord(_4f0[j+1].x,_4de,plot));
var _4f4=Math.round(plot.axisY.getCoord(_4f0[j+1].y,_4de,plot));
var dx=x-_4f3;
var dy=y-_4f4;
cmd.push("c");
var cx=Math.round((x-(_4e2-1)*(dx/_4e2)));
cmd.push(cx+","+_4f4);
cx=Math.round((x-(dx/_4e2)));
cmd.push(cx+","+y);
cmd.push(x+","+y);
}
}
path.setAttribute("path",cmd.join(" ")+" x e");
_4e4.appendChild(path);
}
return _4e4;
},DataBar:function(data,_4fc,plot,_4fe){
var area=_4fc.getArea();
var _500=dojo.charting.Plotters._group(_4fc);
var n=data.length;
var w=(area.right-area.left)/(plot.axisX.range.upper-plot.axisX.range.lower);
var _503=plot.axisY.getCoord(plot.axisX.origin,_4fc,plot);
for(var i=0;i<n;i++){
var _505=data[i].y;
var yA=_503;
var x=plot.axisX.getCoord(data[i].x,_4fc,plot)-(w/2)+1;
var y=plot.axisY.getCoord(_505,_4fc,plot);
var h=Math.abs(yA-y);
if(_505<plot.axisX.origin){
yA=y;
y=_503;
}
var bar=document.createElement("v:rect");
bar.style.position="absolute";
bar.style.top=y+1+"px";
bar.style.left=x+"px";
bar.style.width=w+"px";
bar.style.height=h+"px";
bar.setAttribute("fillColor",data[i].series.color);
bar.setAttribute("stroked","false");
bar.style.antialias="false";
var fill=document.createElement("v:fill");
fill.setAttribute("opacity","0.6");
bar.appendChild(fill);
if(_4fe){
_4fe(bar,data[i].src);
}
_500.appendChild(bar);
}
return _500;
},Line:function(data,_50d,plot,_50f){
var area=_50d.getArea();
var _511=dojo.charting.Plotters._group(_50d);
var path=document.createElement("v:shape");
path.setAttribute("strokeweight","2px");
path.setAttribute("strokecolor",data[0].series.color);
path.setAttribute("fillcolor","none");
path.setAttribute("filled","false");
path.setAttribute("coordsize",(area.right-area.left)+","+(area.bottom-area.top));
path.style.position="absolute";
path.style.top="0px";
path.style.left="0px";
path.style.width=area.right-area.left+"px";
path.style.height=area.bottom-area.top+"px";
var _513=document.createElement("v:stroke");
_513.setAttribute("opacity","0.8");
path.appendChild(_513);
var cmd=[];
var r=3;
for(var i=0;i<data.length;i++){
var x=Math.round(plot.axisX.getCoord(data[i].x,_50d,plot));
var y=Math.round(plot.axisY.getCoord(data[i].y,_50d,plot));
if(i==0){
cmd.push("m");
cmd.push(x+","+y);
}else{
cmd.push("l");
cmd.push(x+","+y);
}
var c=document.createElement("v:oval");
c.setAttribute("strokeweight","1px");
c.setAttribute("strokecolor",data[i].series.color);
c.setAttribute("fillcolor",data[i].series.color);
var str=document.createElement("v:stroke");
str.setAttribute("opacity","0.8");
c.appendChild(str);
str=document.createElement("v:fill");
str.setAttribute("opacity","0.6");
c.appendChild(str);
var s=c.style;
s.position="absolute";
s.top=(y-r)+"px";
s.left=(x-r)+"px";
s.width=(r*2)+"px";
s.height=(r*2)+"px";
_511.appendChild(c);
if(_50f){
_50f(c,data[i].src);
}
}
path.setAttribute("path",cmd.join(" ")+" e");
_511.appendChild(path);
return _511;
},CurvedLine:function(data,_51d,plot,_51f){
var _520=3;
var area=_51d.getArea();
var _522=dojo.charting.Plotters._group(_51d);
var path=document.createElement("v:shape");
path.setAttribute("strokeweight","2px");
path.setAttribute("strokecolor",data[0].series.color);
path.setAttribute("fillcolor","none");
path.setAttribute("filled","false");
path.setAttribute("coordsize",(area.right-area.left)+","+(area.bottom-area.top));
path.style.position="absolute";
path.style.top="0px";
path.style.left="0px";
path.style.width=area.right-area.left+"px";
path.style.height=area.bottom-area.top+"px";
var _524=document.createElement("v:stroke");
_524.setAttribute("opacity","0.8");
path.appendChild(_524);
var cmd=[];
var r=3;
for(var i=0;i<data.length;i++){
var x=Math.round(plot.axisX.getCoord(data[i].x,_51d,plot));
var y=Math.round(plot.axisY.getCoord(data[i].y,_51d,plot));
if(i==0){
cmd.push("m");
cmd.push(x+","+y);
}else{
var _52a=Math.round(plot.axisX.getCoord(data[i-1].x,_51d,plot));
var _52b=Math.round(plot.axisY.getCoord(data[i-1].y,_51d,plot));
var dx=x-_52a;
var dy=y-_52b;
cmd.push("c");
var cx=Math.round((x-(_520-1)*(dx/_520)));
cmd.push(cx+","+_52b);
cx=Math.round((x-(dx/_520)));
cmd.push(cx+","+y);
cmd.push(x+","+y);
}
var c=document.createElement("v:oval");
c.setAttribute("strokeweight","1px");
c.setAttribute("strokecolor",data[i].series.color);
c.setAttribute("fillcolor",data[i].series.color);
var str=document.createElement("v:stroke");
str.setAttribute("opacity","0.8");
c.appendChild(str);
str=document.createElement("v:fill");
str.setAttribute("opacity","0.6");
c.appendChild(str);
var s=c.style;
s.position="absolute";
s.top=(y-r)+"px";
s.left=(x-r)+"px";
s.width=(r*2)+"px";
s.height=(r*2)+"px";
_522.appendChild(c);
if(_51f){
_51f(c,data[i].src);
}
}
path.setAttribute("path",cmd.join(" ")+" e");
_522.appendChild(path);
return _522;
},Area:function(data,_533,plot,_535){
var area=_533.getArea();
var _537=dojo.charting.Plotters._group(_533);
var path=document.createElement("v:shape");
path.setAttribute("strokeweight","1px");
path.setAttribute("strokecolor",data[0].series.color);
path.setAttribute("fillcolor",data[0].series.color);
path.setAttribute("coordsize",(area.right-area.left)+","+(area.bottom-area.top));
path.style.position="absolute";
path.style.top="0px";
path.style.left="0px";
path.style.width=area.right-area.left+"px";
path.style.height=area.bottom-area.top+"px";
var _539=document.createElement("v:stroke");
_539.setAttribute("opacity","0.8");
path.appendChild(_539);
var fill=document.createElement("v:fill");
fill.setAttribute("opacity","0.4");
path.appendChild(fill);
var cmd=[];
var r=3;
for(var i=0;i<data.length;i++){
var x=Math.round(plot.axisX.getCoord(data[i].x,_533,plot));
var y=Math.round(plot.axisY.getCoord(data[i].y,_533,plot));
if(i==0){
cmd.push("m");
cmd.push(x+","+y);
}else{
cmd.push("l");
cmd.push(x+","+y);
}
var c=document.createElement("v:oval");
c.setAttribute("strokeweight","1px");
c.setAttribute("strokecolor",data[i].series.color);
c.setAttribute("fillcolor",data[i].series.color);
var str=document.createElement("v:stroke");
str.setAttribute("opacity","0.8");
c.appendChild(str);
str=document.createElement("v:fill");
str.setAttribute("opacity","0.6");
c.appendChild(str);
var s=c.style;
s.position="absolute";
s.top=(y-r)+"px";
s.left=(x-r)+"px";
s.width=(r*2)+"px";
s.height=(r*2)+"px";
_537.appendChild(c);
if(_535){
_535(c,data[i].src);
}
}
cmd.push("l");
cmd.push(x+","+Math.round(plot.axisY.getCoord(plot.axisX.origin,_533,plot)));
cmd.push("l");
cmd.push(Math.round(plot.axisX.getCoord(data[0].x,_533,plot))+","+Math.round(plot.axisY.getCoord(plot.axisX.origin,_533,plot)));
path.setAttribute("path",cmd.join(" ")+" x e");
_537.appendChild(path);
return _537;
},CurvedArea:function(data,_544,plot,_546){
var _547=3;
var area=_544.getArea();
var _549=dojo.charting.Plotters._group(_544);
var path=document.createElement("v:shape");
path.setAttribute("strokeweight","1px");
path.setAttribute("strokecolor",data[0].series.color);
path.setAttribute("fillcolor",data[0].series.color);
path.setAttribute("coordsize",(area.right-area.left)+","+(area.bottom-area.top));
path.style.position="absolute";
path.style.top="0px";
path.style.left="0px";
path.style.width=area.right-area.left+"px";
path.style.height=area.bottom-area.top+"px";
var _54b=document.createElement("v:stroke");
_54b.setAttribute("opacity","0.8");
path.appendChild(_54b);
var fill=document.createElement("v:fill");
fill.setAttribute("opacity","0.4");
path.appendChild(fill);
var cmd=[];
var r=3;
for(var i=0;i<data.length;i++){
var x=Math.round(plot.axisX.getCoord(data[i].x,_544,plot));
var y=Math.round(plot.axisY.getCoord(data[i].y,_544,plot));
if(i==0){
cmd.push("m");
cmd.push(x+","+y);
}else{
var _552=Math.round(plot.axisX.getCoord(data[i-1].x,_544,plot));
var _553=Math.round(plot.axisY.getCoord(data[i-1].y,_544,plot));
var dx=x-_552;
var dy=y-_553;
cmd.push("c");
var cx=Math.round((x-(_547-1)*(dx/_547)));
cmd.push(cx+","+_553);
cx=Math.round((x-(dx/_547)));
cmd.push(cx+","+y);
cmd.push(x+","+y);
}
var c=document.createElement("v:oval");
c.setAttribute("strokeweight","1px");
c.setAttribute("strokecolor",data[i].series.color);
c.setAttribute("fillcolor",data[i].series.color);
var str=document.createElement("v:stroke");
str.setAttribute("opacity","0.8");
c.appendChild(str);
str=document.createElement("v:fill");
str.setAttribute("opacity","0.6");
c.appendChild(str);
var s=c.style;
s.position="absolute";
s.top=(y-r)+"px";
s.left=(x-r)+"px";
s.width=(r*2)+"px";
s.height=(r*2)+"px";
_549.appendChild(c);
if(_546){
_546(c,data[i].src);
}
}
cmd.push("l");
cmd.push(x+","+Math.round(plot.axisY.getCoord(plot.axisX.origin,_544,plot)));
cmd.push("l");
cmd.push(Math.round(plot.axisX.getCoord(data[0].x,_544,plot))+","+Math.round(plot.axisY.getCoord(plot.axisX.origin,_544,plot)));
path.setAttribute("path",cmd.join(" ")+" x e");
_549.appendChild(path);
return _549;
},HighLow:function(data,_55b,plot,_55d){
var area=_55b.getArea();
var _55f=dojo.charting.Plotters._group(_55b);
var n=data.length;
var part=((area.right-area.left)/(plot.axisX.range.upper-plot.axisX.range.lower))/4;
var w=part*2;
for(var i=0;i<n;i++){
var high=data[i].high;
var low=data[i].low;
if(low>high){
var t=low;
low=high;
high=t;
}
var x=plot.axisX.getCoord(data[i].x,_55b,plot)-(w/2);
var y=plot.axisY.getCoord(high,_55b,plot);
var h=plot.axisY.getCoord(low,_55b,plot)-y;
var bar=document.createElement("v:rect");
bar.style.position="absolute";
bar.style.top=y+1+"px";
bar.style.left=x+"px";
bar.style.width=w+"px";
bar.style.height=h+"px";
bar.setAttribute("fillColor",data[i].series.color);
bar.setAttribute("stroked","false");
bar.style.antialias="false";
var fill=document.createElement("v:fill");
fill.setAttribute("opacity","0.6");
bar.appendChild(fill);
if(_55d){
_55d(bar,data[i].src);
}
_55f.appendChild(bar);
}
return _55f;
},HighLowClose:function(data,_56d,plot,_56f){
var area=_56d.getArea();
var _571=dojo.charting.Plotters._group(_56d);
var n=data.length;
var part=((area.right-area.left)/(plot.axisX.range.upper-plot.axisX.range.lower))/4;
var w=part*2;
for(var i=0;i<n;i++){
var high=data[i].high;
var low=data[i].low;
if(low>high){
var t=low;
low=high;
high=t;
}
var c=data[i].close;
var x=plot.axisX.getCoord(data[i].x,_56d,plot)-(w/2);
var y=plot.axisY.getCoord(high,_56d,plot);
var h=plot.axisY.getCoord(low,_56d,plot)-y;
var _57d=plot.axisY.getCoord(c,_56d,plot);
var g=document.createElement("div");
var bar=document.createElement("v:rect");
bar.style.position="absolute";
bar.style.top=y+1+"px";
bar.style.left=x+"px";
bar.style.width=w+"px";
bar.style.height=h+"px";
bar.setAttribute("fillColor",data[i].series.color);
bar.setAttribute("stroked","false");
bar.style.antialias="false";
var fill=document.createElement("v:fill");
fill.setAttribute("opacity","0.6");
bar.appendChild(fill);
g.appendChild(bar);
var line=document.createElement("v:line");
line.setAttribute("strokecolor",data[i].series.color);
line.setAttribute("strokeweight","1px");
line.setAttribute("from",x+"px,"+_57d+"px");
line.setAttribute("to",(x+w+(part*2)-2)+"px,"+_57d+"px");
var s=line.style;
s.position="absolute";
s.top="0px";
s.left="0px";
s.antialias="false";
var str=document.createElement("v:stroke");
str.setAttribute("opacity","0.6");
line.appendChild(str);
g.appendChild(line);
if(_56f){
_56f(g,data[i].src);
}
_571.appendChild(g);
}
return _571;
},HighLowOpenClose:function(data,_585,plot,_587){
var area=_585.getArea();
var _589=dojo.charting.Plotters._group(_585);
var n=data.length;
var part=((area.right-area.left)/(plot.axisX.range.upper-plot.axisX.range.lower))/4;
var w=part*2;
for(var i=0;i<n;i++){
var high=data[i].high;
var low=data[i].low;
if(low>high){
var t=low;
low=high;
high=t;
}
var o=data[i].open;
var c=data[i].close;
var x=plot.axisX.getCoord(data[i].x,_585,plot)-(w/2);
var y=plot.axisY.getCoord(high,_585,plot);
var h=plot.axisY.getCoord(low,_585,plot)-y;
var open=plot.axisY.getCoord(o,_585,plot);
var _597=plot.axisY.getCoord(c,_585,plot);
var g=document.createElement("div");
var bar=document.createElement("v:rect");
bar.style.position="absolute";
bar.style.top=y+1+"px";
bar.style.left=x+"px";
bar.style.width=w+"px";
bar.style.height=h+"px";
bar.setAttribute("fillColor",data[i].series.color);
bar.setAttribute("stroked","false");
bar.style.antialias="false";
var fill=document.createElement("v:fill");
fill.setAttribute("opacity","0.6");
bar.appendChild(fill);
g.appendChild(bar);
var line=document.createElement("v:line");
line.setAttribute("strokecolor",data[i].series.color);
line.setAttribute("strokeweight","1px");
line.setAttribute("from",(x-(part*2))+"px,"+open+"px");
line.setAttribute("to",(x+w-2)+"px,"+open+"px");
var s=line.style;
s.position="absolute";
s.top="0px";
s.left="0px";
s.antialias="false";
var str=document.createElement("v:stroke");
str.setAttribute("opacity","0.6");
line.appendChild(str);
g.appendChild(line);
var line=document.createElement("v:line");
line.setAttribute("strokecolor",data[i].series.color);
line.setAttribute("strokeweight","1px");
line.setAttribute("from",x+"px,"+_597+"px");
line.setAttribute("to",(x+w+(part*2)-2)+"px,"+_597+"px");
var s=line.style;
s.position="absolute";
s.top="0px";
s.left="0px";
s.antialias="false";
var str=document.createElement("v:stroke");
str.setAttribute("opacity","0.6");
line.appendChild(str);
g.appendChild(line);
if(_587){
_587(g,data[i].src);
}
_589.appendChild(g);
}
return _589;
},Scatter:function(data,_59f,plot,_5a1){
var r=6;
var mod=r/2;
var area=_59f.getArea();
var _5a5=dojo.charting.Plotters._group(_59f);
for(var i=0;i<data.length;i++){
var x=Math.round(plot.axisX.getCoord(data[i].x,_59f,plot));
var y=Math.round(plot.axisY.getCoord(data[i].y,_59f,plot));
var _5a9=document.createElement("v:rect");
_5a9.setAttribute("strokecolor",data[i].series.color);
_5a9.setAttribute("fillcolor",data[i].series.color);
var fill=document.createElement("v:fill");
fill.setAttribute("opacity","0.6");
_5a9.appendChild(fill);
var s=_5a9.style;
s.position="absolute";
s.rotation="45";
s.top=(y-mod)+"px";
s.left=(x-mod)+"px";
s.width=r+"px";
s.height=r+"px";
_5a5.appendChild(_5a9);
if(_5a1){
_5a1(_5a9,data[i].src);
}
}
return _5a5;
},Bubble:function(data,_5ad,plot,_5af){
var _5b0=1;
var area=_5ad.getArea();
var _5b2=dojo.charting.Plotters._group(_5ad);
for(var i=0;i<data.length;i++){
var x=Math.round(plot.axisX.getCoord(data[i].x,_5ad,plot));
var y=Math.round(plot.axisY.getCoord(data[i].y,_5ad,plot));
if(i==0){
var raw=data[i].size;
var dy=plot.axisY.getCoord(data[i].y+raw,_5ad,plot)-y;
_5b0=dy/raw;
}
if(_5b0<1){
_5b0=1;
}
var r=(data[i].size/2)*_5b0;
var _5b9=document.createElement("v:oval");
_5b9.setAttribute("strokecolor",data[i].series.color);
_5b9.setAttribute("fillcolor",data[i].series.color);
var fill=document.createElement("v:fill");
fill.setAttribute("opacity","0.6");
_5b9.appendChild(fill);
var s=_5b9.style;
s.position="absolute";
s.rotation="45";
s.top=(y-r)+"px";
s.left=(x-r)+"px";
s.width=(r*2)+"px";
s.height=(r*2)+"px";
_5b2.appendChild(_5b9);
if(_5af){
_5af(_5b9,data[i].src);
}
}
return _5b2;
}});
dojo.charting.Plotters["Default"]=dojo.charting.Plotters.Line;
}
dojo.provide("dojo.charting.Series");
dojo.charting.Series=function(_5bc){
var args=_5bc||{length:1};
this.dataSource=args.dataSource||null;
this.bindings={};
this.color=args.color;
this.label=args.label;
if(args.bindings){
for(var p in args.bindings){
this.addBinding(p,args.bindings[p]);
}
}
};
dojo.extend(dojo.charting.Series,{bind:function(src,_5c0){
this.dataSource=src;
this.bindings=_5c0;
},addBinding:function(name,_5c2){
this.bindings[name]=_5c2;
},evaluate:function(_5c3){
var ret=[];
var a=this.dataSource.getData();
var l=a.length;
var _5c7=0;
var end=l;
if(_5c3){
if(_5c3.from){
_5c7=Math.max(_5c3.from,0);
if(_5c3.to){
end=Math.min(_5c3.to,end);
}
}else{
if(_5c3.length){
if(_5c3.length<0){
_5c7=Math.max((end+length),0);
}else{
end=Math.min((_5c7+length),end);
}
}
}
}
for(var i=_5c7;i<end;i++){
var o={src:a[i],series:this};
for(var p in this.bindings){
o[p]=this.dataSource.getField(a[i],this.bindings[p]);
}
ret.push(o);
}
if(typeof (ret[0].x)!="undefined"){
ret.sort(function(a,b){
if(a.x>b.x){
return 1;
}
if(a.x<b.x){
return -1;
}
return 0;
});
}
return ret;
},trends:{createRange:function(_5ce,len){
var idx=_5ce.length-1;
var _5d1=(len||_5ce.length);
return {"index":idx,"length":_5d1,"start":Math.max(idx-_5d1,0)};
},mean:function(_5d2,len){
var _5d4=this.createRange(_5d2,len);
if(_5d4.index<0){
return 0;
}
var _5d5=0;
var _5d6=0;
for(var i=_5d4.index;i>=_5d4.start;i--){
_5d5+=_5d2[i].y;
_5d6++;
}
_5d5/=Math.max(_5d6,1);
return _5d5;
},variance:function(_5d8,len){
var _5da=this.createRange(_5d8,len);
if(_5da.index<0){
return 0;
}
var _5db=0;
var _5dc=0;
var _5dd=0;
for(var i=_5da.index;i>=_5da.start;i--){
_5db+=_5d8[i].y;
_5dc+=Math.pow(_5d8[i].y,2);
_5dd++;
}
return (_5dc/_5dd)-Math.pow(_5db/_5dd,2);
},standardDeviation:function(_5df,len){
return Math.sqrt(this.getVariance(_5df,len));
},max:function(_5e1,len){
var _5e3=this.createRange(_5e1,len);
if(_5e3.index<0){
return 0;
}
var max=Number.MIN_VALUE;
for(var i=_5e3.index;i>=_5e3.start;i--){
max=Math.max(_5e1[i].y,max);
}
return max;
},min:function(_5e6,len){
var _5e8=this.createRange(_5e6,len);
if(_5e8.index<0){
return 0;
}
var min=Number.MAX_VALUE;
for(var i=_5e8.index;i>=_5e8.start;i--){
min=Math.min(_5e6[i].y,min);
}
return min;
},median:function(_5eb,len){
var _5ed=this.createRange(_5eb,len);
if(_5ed.index<0){
return 0;
}
var a=[];
for(var i=_5ed.index;i>=_5ed.start;i--){
var b=false;
for(var j=0;j<a.length;j++){
if(_5eb[i].y==a[j]){
b=true;
break;
}
}
if(!b){
a.push(_5eb[i].y);
}
}
a.sort();
if(a.length>0){
return a[Math.ceil(a.length/2)];
}
return 0;
},mode:function(_5f2,len){
var _5f4=this.createRange(_5f2,len);
if(_5f4.index<0){
return 0;
}
var o={};
var ret=0;
var _5f7=Number.MIN_VALUE;
for(var i=_5f4.index;i>=_5f4.start;i--){
if(!o[_5f2[i].y]){
o[_5f2[i].y]=1;
}else{
o[_5f2[i].y]++;
}
}
for(var p in o){
if(_5f7<o[p]){
_5f7=o[p];
ret=p;
}
}
return ret;
}}});
dojo.provide("dojo.charting.Plot");
dojo.charting.RenderPlotSeries={Singly:"single",Grouped:"grouped"};
dojo.charting.Plot=function(_5fa,_5fb,_5fc){
var id="dojo-charting-plot-"+dojo.charting.Plot.count++;
this.getId=function(){
return id;
};
this.setId=function(key){
id=key;
};
this.axisX=null;
this.axisY=null;
this.series=[];
this.dataNode=null;
this.renderType=dojo.charting.RenderPlotSeries.Singly;
if(_5fa){
this.setAxis(_5fa,"x");
}
if(_5fb){
this.setAxis(_5fb,"y");
}
if(_5fc){
for(var i=0;i<_5fc.length;i++){
this.addSeries(_5fc[i]);
}
}
};
dojo.charting.Plot.count=0;
dojo.extend(dojo.charting.Plot,{addSeries:function(_600,_601){
if(_600.plotter){
this.series.push(_600);
}else{
this.series.push({data:_600,plotter:_601||dojo.charting.Plotters["Default"]});
}
},setAxis:function(axis,_603){
if(_603.toLowerCase()=="x"){
this.axisX=axis;
}else{
if(_603.toLowerCase()=="y"){
this.axisY=axis;
}
}
},getRanges:function(){
var xmin,xmax,ymin,ymax;
xmin=ymin=Number.MAX_VALUE;
xmax=ymax=Number.MIN_VALUE;
for(var i=0;i<this.series.length;i++){
var _609=this.series[i].data.evaluate();
for(var j=0;j<_609.length;j++){
var comp=_609[j];
xmin=Math.min(comp.x,xmin);
ymin=Math.min(comp.y,ymin);
xmax=Math.max(comp.x,xmax);
ymax=Math.max(comp.y,ymax);
}
}
return {x:{upper:xmax,lower:xmin},y:{upper:ymax,lower:ymin},toString:function(){
return "[ x:"+xmax+" - "+xmin+", y:"+ymax+" - "+ymin+"]";
}};
},destroy:function(){
var node=this.dataNode;
while(node&&node.childNodes&&node.childNodes.length>0){
node.removeChild(node.childNodes[0]);
}
this.dataNode=null;
}});
dojo.provide("dojo.charting.PlotArea");
dojo.charting.PlotArea=function(){
var id="dojo-charting-plotarea-"+dojo.charting.PlotArea.count++;
this.getId=function(){
return id;
};
this.setId=function(key){
id=key;
};
this.areaType="standard";
this.plots=[];
this.size={width:600,height:400};
this.padding={top:10,right:10,bottom:20,left:20};
this.nodes={main:null,area:null,background:null,axes:null,plots:null};
this._color={h:140,s:120,l:120,step:27};
};
dojo.charting.PlotArea.count=0;
dojo.extend(dojo.charting.PlotArea,{nextColor:function(){
var rgb=dojo.gfx.color.hsl2rgb(this._color.h,this._color.s,this._color.l);
this._color.h=(this._color.h+this._color.step)%360;
while(this._color.h<140){
this._color.h+=this._color.step;
}
return dojo.gfx.color.rgb2hex(rgb[0],rgb[1],rgb[2]);
},getArea:function(){
return {left:this.padding.left,right:this.size.width-this.padding.right,top:this.padding.top,bottom:this.size.height-this.padding.bottom,toString:function(){
var a=[this.top,this.right,this.bottom,this.left];
return "["+a.join()+"]";
}};
},getAxes:function(){
var axes={};
for(var i=0;i<this.plots.length;i++){
var plot=this.plots[i];
axes[plot.axisX.getId()]={axis:plot.axisX,drawAgainst:plot.axisY,plot:plot,plane:"x"};
axes[plot.axisY.getId()]={axis:plot.axisY,drawAgainst:plot.axisX,plot:plot,plane:"y"};
}
return axes;
},getLegendInfo:function(){
var a=[];
for(var i=0;i<this.plots.length;i++){
for(var j=0;j<this.plots[i].series.length;j++){
var data=this.plots[i].series[j].data;
a.push({label:data.label,color:data.color});
}
}
return a;
},setAxesRanges:function(){
var _618={};
var axes={};
for(var i=0;i<this.plots.length;i++){
var plot=this.plots[i];
var _618=plot.getRanges();
var x=_618.x;
var y=_618.y;
var ax,ay;
if(!axes[plot.axisX.getId()]){
axes[plot.axisX.getId()]=plot.axisX;
_618[plot.axisX.getId()]={upper:x.upper,lower:x.lower};
}
ax=_618[plot.axisX.getId()];
ax.upper=Math.max(ax.upper,x.upper);
ax.lower=Math.min(ax.lower,x.lower);
if(!axes[plot.axisY.getId()]){
axes[plot.axisY.getId()]=plot.axisY;
_618[plot.axisY.getId()]={upper:y.upper,lower:y.lower};
}
ay=_618[plot.axisY.getId()];
ay.upper=Math.max(ay.upper,y.upper);
ay.lower=Math.min(ay.lower,y.lower);
}
for(var p in axes){
axes[p].range=_618[p];
}
},render:function(_621,_622){
if(!this.nodes.main||!this.nodes.area||!this.nodes.background||!this.nodes.plots||!this.nodes.axes){
this.initialize();
}
for(var i=0;i<this.plots.length;i++){
var plot=this.plots[i];
this.nodes.plots.removeChild(plot.dataNode);
var _625=this.initializePlot(plot);
switch(plot.renderType){
case dojo.charting.RenderPlotSeries.Grouped:
if(plot.series[0]){
_625.appendChild(plot.series[0].plotter(this,plot,_621,_622));
}
break;
case dojo.charting.RenderPlotSeries.Singly:
default:
for(var j=0;j<plot.series.length;j++){
var _627=plot.series[j];
var data=_627.data.evaluate(_621);
_625.appendChild(_627.plotter(data,this,plot,_622));
}
}
this.nodes.plots.appendChild(_625);
}
},destroy:function(){
for(var i=0;i<this.plots.length;i++){
this.plots[i].destroy();
}
for(var p in this.nodes){
var node=this.nodes[p];
if(!node){
continue;
}
if(!node.childNodes){
continue;
}
while(node.childNodes.length>0){
node.removeChild(node.childNodes[0]);
}
this.nodes[p]=null;
}
}});
dojo.provide("dojo.charting.svg.PlotArea");
if(dojo.render.svg.capable){
dojo.require("dojo.svg");
dojo.extend(dojo.charting.PlotArea,{initializePlot:function(plot){
plot.destroy();
plot.dataNode=document.createElementNS(dojo.svg.xmlns.svg,"g");
plot.dataNode.setAttribute("id",plot.getId());
return plot.dataNode;
},initialize:function(){
this.destroy();
this.nodes.main=document.createElement("div");
this.nodes.area=document.createElementNS(dojo.svg.xmlns.svg,"svg");
this.nodes.area.setAttribute("id",this.getId());
this.nodes.area.setAttribute("width",this.size.width);
this.nodes.area.setAttribute("height",this.size.height);
this.nodes.main.appendChild(this.nodes.area);
var area=this.getArea();
var defs=document.createElementNS(dojo.svg.xmlns.svg,"defs");
var clip=document.createElementNS(dojo.svg.xmlns.svg,"clipPath");
clip.setAttribute("id",this.getId()+"-clip");
var rect=document.createElementNS(dojo.svg.xmlns.svg,"rect");
rect.setAttribute("x",area.left);
rect.setAttribute("y",area.top);
rect.setAttribute("width",area.right-area.left);
rect.setAttribute("height",area.bottom-area.top);
clip.appendChild(rect);
defs.appendChild(clip);
this.nodes.area.appendChild(defs);
this.nodes.background=document.createElementNS(dojo.svg.xmlns.svg,"rect");
this.nodes.background.setAttribute("id",this.getId()+"-background");
this.nodes.background.setAttribute("width",this.size.width);
this.nodes.background.setAttribute("height",this.size.height);
this.nodes.background.setAttribute("fill","#fff");
this.nodes.area.appendChild(this.nodes.background);
this.nodes.plots=document.createElementNS(dojo.svg.xmlns.svg,"g");
this.nodes.plots.setAttribute("id",this.getId()+"-plots");
this.nodes.plots.setAttribute("style","clip-path:url(#"+this.getId()+"-clip);");
this.nodes.area.appendChild(this.nodes.plots);
for(var i=0;i<this.plots.length;i++){
this.nodes.plots.appendChild(this.initializePlot(this.plots[i]));
}
this.nodes.axes=document.createElementNS(dojo.svg.xmlns.svg,"g");
this.nodes.axes.setAttribute("id",this.getId()+"-axes");
this.nodes.area.appendChild(this.nodes.axes);
var axes=this.getAxes();
for(var p in axes){
var obj=axes[p];
this.nodes.axes.appendChild(obj.axis.initialize(this,obj.plot,obj.drawAgainst,obj.plane));
}
return this.nodes.main;
}});
}
dojo.provide("dojo.charting.vml.PlotArea");
if(dojo.render.vml.capable){
dojo.extend(dojo.charting.PlotArea,{initializePlot:function(plot){
plot.destroy();
plot.dataNode=document.createElement("div");
plot.dataNode.id=plot.getId();
return plot.dataNode;
},initialize:function(){
this.destroy();
var main=this.nodes.main=document.createElement("div");
var area=this.nodes.area=document.createElement("div");
area.id=this.getId();
area.style.width=this.size.width+"px";
area.style.height=this.size.height+"px";
area.style.position="absolute";
main.appendChild(area);
var bg=this.nodes.background=document.createElement("div");
bg.id=this.getId()+"-background";
bg.style.width=this.size.width+"px";
bg.style.height=this.size.height+"px";
bg.style.position="absolute";
bg.style.top="0px";
bg.style.left="0px";
bg.style.backgroundColor="#fff";
area.appendChild(bg);
var a=this.getArea();
var _63a=this.nodes.plots=document.createElement("div");
_63a.id=this.getId()+"-plots";
_63a.style.width=this.size.width+"px";
_63a.style.height=this.size.height+"px";
_63a.style.position="absolute";
_63a.style.top="0px";
_63a.style.left="0px";
_63a.style.clip="rect("+a.top+" "+a.right+" "+a.bottom+" "+a.left+")";
area.appendChild(_63a);
for(var i=0;i<this.plots.length;i++){
_63a.appendChild(this.initializePlot(this.plots[i]));
}
var axes=this.nodes.axes=document.createElement("div");
axes.id=this.getId()+"-axes";
area.appendChild(axes);
var ax=this.getAxes();
for(var p in ax){
var obj=ax[p];
axes.appendChild(obj.axis.initialize(this,obj.plot,obj.drawAgainst,obj.plane));
}
return main;
}});
}
dojo.provide("dojo.charting.Chart");
dojo.charting.Chart=function(node,_641,_642){
this.node=node||null;
this.title=_641||"Chart";
this.description=_642||"";
this.plotAreas=[];
};
dojo.extend(dojo.charting.Chart,{addPlotArea:function(obj,_644){
if(obj.x!=null&&obj.left==null){
obj.left=obj.x;
}
if(obj.y!=null&&obj.top==null){
obj.top=obj.y;
}
this.plotAreas.push(obj);
if(_644){
this.render();
}
},onInitialize:function(_645){
},onRender:function(_646){
},onDestroy:function(_647){
},initialize:function(){
if(!this.node){
dojo.raise("dojo.charting.Chart.initialize: there must be a root node defined for the Chart.");
}
this.destroy();
this.render();
this.onInitialize(this);
},render:function(){
if(this.node.style.position!="absolute"){
this.node.style.position="relative";
}
for(var i=0;i<this.plotAreas.length;i++){
var area=this.plotAreas[i].plotArea;
var node=area.initialize();
node.style.position="absolute";
node.style.top=this.plotAreas[i].top+"px";
node.style.left=this.plotAreas[i].left+"px";
this.node.appendChild(node);
area.render();
}
},destroy:function(){
for(var i=0;i<this.plotAreas.length;i++){
this.plotAreas[i].plotArea.destroy();
}
while(this.node&&this.node.childNodes&&this.node.childNodes.length>0){
this.node.removeChild(this.node.childNodes[0]);
}
}});


__CPAN_EDITION__ charting build.txt

Files baked into this package:

dojoGuardStart.js,
../src/bootstrap1.js,
../src/loader.js,
dojoGuardEnd.js,
../src/hostenv_browser.js,
../src/bootstrap2.js,
../src/lang/common.js,
../src/lang/func.js,
../src/string/common.js,
../src/lang/array.js,
../src/string/extras.js,
../src/AdapterRegistry.js,
../src/json.js,
../src/collections/Store.js,
../src/gfx/color.js,
../src/gfx/color/hsl.js,
../src/charting/__package__.js,
../src/dom.js,
../src/svg.js,
../src/charting/Axis.js,
../src/charting/svg/Axis.js,
../src/charting/vml/Axis.js,
../src/charting/Plotters.js,
../src/charting/svg/Plotters.js,
../src/charting/vml/Plotters.js,
../src/charting/Series.js,
../src/charting/Plot.js,
../src/charting/PlotArea.js,
../src/charting/svg/PlotArea.js,
../src/charting/vml/PlotArea.js,
../src/charting/Chart.js

		
__CPAN_EDITION__ core dojo.js
/*
	Copyright (c) 2004-2006, The Dojo Foundation
	All Rights Reserved.

	Licensed under the Academic Free License version 2.1 or above OR the
	modified BSD license. For more information on Dojo licensing, see:

		http://dojotoolkit.org/community/licensing.shtml
*/

/*
	This is a compiled version of Dojo, built for deployment and not for
	development. To get an editable version, please visit:

		http://dojotoolkit.org

	for documentation and information on getting the source.
*/

if(typeof dojo=="undefined"){
var dj_global=this;
var dj_currentContext=this;
function dj_undef(_1,_2){
return (typeof (_2||dj_currentContext)[_1]=="undefined");
}
if(dj_undef("djConfig",this)){
var djConfig={};
}
if(dj_undef("dojo",this)){
var dojo={};
}
dojo.global=function(){
return dj_currentContext;
};
dojo.locale=djConfig.locale;
dojo.version={major:0,minor:4,patch:1,flag:"",revision:Number("$Rev: 6824 $".match(/[0-9]+/)[0]),toString:function(){
with(dojo.version){
return major+"."+minor+"."+patch+flag+" ("+revision+")";
}
}};
dojo.evalProp=function(_3,_4,_5){
if((!_4)||(!_3)){
return undefined;
}
if(!dj_undef(_3,_4)){
return _4[_3];
}
return (_5?(_4[_3]={}):undefined);
};
dojo.parseObjPath=function(_6,_7,_8){
var _9=(_7||dojo.global());
var _a=_6.split(".");
var _b=_a.pop();
for(var i=0,l=_a.length;i<l&&_9;i++){
_9=dojo.evalProp(_a[i],_9,_8);
}
return {obj:_9,prop:_b};
};
dojo.evalObjPath=function(_e,_f){
if(typeof _e!="string"){
return dojo.global();
}
if(_e.indexOf(".")==-1){
return dojo.evalProp(_e,dojo.global(),_f);
}
var ref=dojo.parseObjPath(_e,dojo.global(),_f);
if(ref){
return dojo.evalProp(ref.prop,ref.obj,_f);
}
return null;
};
dojo.errorToString=function(_11){
if(!dj_undef("message",_11)){
return _11.message;
}else{
if(!dj_undef("description",_11)){
return _11.description;
}else{
return _11;
}
}
};
dojo.raise=function(_12,_13){
if(_13){
_12=_12+": "+dojo.errorToString(_13);
}else{
_12=dojo.errorToString(_12);
}
try{
if(djConfig.isDebug){
dojo.hostenv.println("FATAL exception raised: "+_12);
}
}
catch(e){
}
throw _13||Error(_12);
};
dojo.debug=function(){
};
dojo.debugShallow=function(obj){
};
dojo.profile={start:function(){
},end:function(){
},stop:function(){
},dump:function(){
}};
function dj_eval(_15){
return dj_global.eval?dj_global.eval(_15):eval(_15);
}
dojo.unimplemented=function(_16,_17){
var _18="'"+_16+"' not implemented";
if(_17!=null){
_18+=" "+_17;
}
dojo.raise(_18);
};
dojo.deprecated=function(_19,_1a,_1b){
var _1c="DEPRECATED: "+_19;
if(_1a){
_1c+=" "+_1a;
}
if(_1b){
_1c+=" -- will be removed in version: "+_1b;
}
dojo.debug(_1c);
};
dojo.render=(function(){
function vscaffold(_1d,_1e){
var tmp={capable:false,support:{builtin:false,plugin:false},prefixes:_1d};
for(var i=0;i<_1e.length;i++){
tmp[_1e[i]]=false;
}
return tmp;
}
return {name:"",ver:dojo.version,os:{win:false,linux:false,osx:false},html:vscaffold(["html"],["ie","opera","khtml","safari","moz"]),svg:vscaffold(["svg"],["corel","adobe","batik"]),vml:vscaffold(["vml"],["ie"]),swf:vscaffold(["Swf","Flash","Mm"],["mm"]),swt:vscaffold(["Swt"],["ibm"])};
})();
dojo.hostenv=(function(){
var _21={isDebug:false,allowQueryConfig:false,baseScriptUri:"",baseRelativePath:"",libraryScriptUri:"",iePreventClobber:false,ieClobberMinimal:true,preventBackButtonFix:true,delayMozLoadingFix:false,searchIds:[],parseWidgets:true};
if(typeof djConfig=="undefined"){
djConfig=_21;
}else{
for(var _22 in _21){
if(typeof djConfig[_22]=="undefined"){
djConfig[_22]=_21[_22];
}
}
}
return {name_:"(unset)",version_:"(unset)",getName:function(){
return this.name_;
},getVersion:function(){
return this.version_;
},getText:function(uri){
dojo.unimplemented("getText","uri="+uri);
}};
})();
dojo.hostenv.getBaseScriptUri=function(){
if(djConfig.baseScriptUri.length){
return djConfig.baseScriptUri;
}
var uri=new String(djConfig.libraryScriptUri||djConfig.baseRelativePath);
if(!uri){
dojo.raise("Nothing returned by getLibraryScriptUri(): "+uri);
}
var _25=uri.lastIndexOf("/");
djConfig.baseScriptUri=djConfig.baseRelativePath;
return djConfig.baseScriptUri;
};
(function(){
var _26={pkgFileName:"__package__",loading_modules_:{},loaded_modules_:{},addedToLoadingCount:[],removedFromLoadingCount:[],inFlightCount:0,modulePrefixes_:{dojo:{name:"dojo",value:"src"}},setModulePrefix:function(_27,_28){
this.modulePrefixes_[_27]={name:_27,value:_28};
},moduleHasPrefix:function(_29){
var mp=this.modulePrefixes_;
return Boolean(mp[_29]&&mp[_29].value);
},getModulePrefix:function(_2b){
if(this.moduleHasPrefix(_2b)){
return this.modulePrefixes_[_2b].value;
}
return _2b;
},getTextStack:[],loadUriStack:[],loadedUris:[],post_load_:false,modulesLoadedListeners:[],unloadListeners:[],loadNotifying:false};
for(var _2c in _26){
dojo.hostenv[_2c]=_26[_2c];
}
})();
dojo.hostenv.loadPath=function(_2d,_2e,cb){
var uri;
if(_2d.charAt(0)=="/"||_2d.match(/^\w+:/)){
uri=_2d;
}else{
uri=this.getBaseScriptUri()+_2d;
}
if(djConfig.cacheBust&&dojo.render.html.capable){
uri+="?"+String(djConfig.cacheBust).replace(/\W+/g,"");
}
try{
return !_2e?this.loadUri(uri,cb):this.loadUriAndCheck(uri,_2e,cb);
}
catch(e){
dojo.debug(e);
return false;
}
};
dojo.hostenv.loadUri=function(uri,cb){
if(this.loadedUris[uri]){
return true;
}
var _33=this.getText(uri,null,true);
if(!_33){
return false;
}
this.loadedUris[uri]=true;
if(cb){
_33="("+_33+")";
}
var _34=dj_eval(_33);
if(cb){
cb(_34);
}
return true;
};
dojo.hostenv.loadUriAndCheck=function(uri,_36,cb){
var ok=true;
try{
ok=this.loadUri(uri,cb);
}
catch(e){
dojo.debug("failed loading ",uri," with error: ",e);
}
return Boolean(ok&&this.findModule(_36,false));
};
dojo.loaded=function(){
};
dojo.unloaded=function(){
};
dojo.hostenv.loaded=function(){
this.loadNotifying=true;
this.post_load_=true;
var mll=this.modulesLoadedListeners;
for(var x=0;x<mll.length;x++){
mll[x]();
}
this.modulesLoadedListeners=[];
this.loadNotifying=false;
dojo.loaded();
};
dojo.hostenv.unloaded=function(){
var mll=this.unloadListeners;
while(mll.length){
(mll.pop())();
}
dojo.unloaded();
};
dojo.addOnLoad=function(obj,_3d){
var dh=dojo.hostenv;
if(arguments.length==1){
dh.modulesLoadedListeners.push(obj);
}else{
if(arguments.length>1){
dh.modulesLoadedListeners.push(function(){
obj[_3d]();
});
}
}
if(dh.post_load_&&dh.inFlightCount==0&&!dh.loadNotifying){
dh.callLoaded();
}
};
dojo.addOnUnload=function(obj,_40){
var dh=dojo.hostenv;
if(arguments.length==1){
dh.unloadListeners.push(obj);
}else{
if(arguments.length>1){
dh.unloadListeners.push(function(){
obj[_40]();
});
}
}
};
dojo.hostenv.modulesLoaded=function(){
if(this.post_load_){
return;
}
if(this.loadUriStack.length==0&&this.getTextStack.length==0){
if(this.inFlightCount>0){
dojo.debug("files still in flight!");
return;
}
dojo.hostenv.callLoaded();
}
};
dojo.hostenv.callLoaded=function(){
if(typeof setTimeout=="object"){
setTimeout("dojo.hostenv.loaded();",0);
}else{
dojo.hostenv.loaded();
}
};
dojo.hostenv.getModuleSymbols=function(_42){
var _43=_42.split(".");
for(var i=_43.length;i>0;i--){
var _45=_43.slice(0,i).join(".");
if((i==1)&&!this.moduleHasPrefix(_45)){
_43[0]="../"+_43[0];
}else{
var _46=this.getModulePrefix(_45);
if(_46!=_45){
_43.splice(0,i,_46);
break;
}
}
}
return _43;
};
dojo.hostenv._global_omit_module_check=false;
dojo.hostenv.loadModule=function(_47,_48,_49){
if(!_47){
return;
}
_49=this._global_omit_module_check||_49;
var _4a=this.findModule(_47,false);
if(_4a){
return _4a;
}
if(dj_undef(_47,this.loading_modules_)){
this.addedToLoadingCount.push(_47);
}
this.loading_modules_[_47]=1;
var _4b=_47.replace(/\./g,"/")+".js";
var _4c=_47.split(".");
var _4d=this.getModuleSymbols(_47);
var _4e=((_4d[0].charAt(0)!="/")&&!_4d[0].match(/^\w+:/));
var _4f=_4d[_4d.length-1];
var ok;
if(_4f=="*"){
_47=_4c.slice(0,-1).join(".");
while(_4d.length){
_4d.pop();
_4d.push(this.pkgFileName);
_4b=_4d.join("/")+".js";
if(_4e&&_4b.charAt(0)=="/"){
_4b=_4b.slice(1);
}
ok=this.loadPath(_4b,!_49?_47:null);
if(ok){
break;
}
_4d.pop();
}
}else{
_4b=_4d.join("/")+".js";
_47=_4c.join(".");
var _51=!_49?_47:null;
ok=this.loadPath(_4b,_51);
if(!ok&&!_48){
_4d.pop();
while(_4d.length){
_4b=_4d.join("/")+".js";
ok=this.loadPath(_4b,_51);
if(ok){
break;
}
_4d.pop();
_4b=_4d.join("/")+"/"+this.pkgFileName+".js";
if(_4e&&_4b.charAt(0)=="/"){
_4b=_4b.slice(1);
}
ok=this.loadPath(_4b,_51);
if(ok){
break;
}
}
}
if(!ok&&!_49){
dojo.raise("Could not load '"+_47+"'; last tried '"+_4b+"'");
}
}
if(!_49&&!this["isXDomain"]){
_4a=this.findModule(_47,false);
if(!_4a){
dojo.raise("symbol '"+_47+"' is not defined after loading '"+_4b+"'");
}
}
return _4a;
};
dojo.hostenv.startPackage=function(_52){
var _53=String(_52);
var _54=_53;
var _55=_52.split(/\./);
if(_55[_55.length-1]=="*"){
_55.pop();
_54=_55.join(".");
}
var _56=dojo.evalObjPath(_54,true);
this.loaded_modules_[_53]=_56;
this.loaded_modules_[_54]=_56;
return _56;
};
dojo.hostenv.findModule=function(_57,_58){
var lmn=String(_57);
if(this.loaded_modules_[lmn]){
return this.loaded_modules_[lmn];
}
if(_58){
dojo.raise("no loaded module named '"+_57+"'");
}
return null;
};
dojo.kwCompoundRequire=function(_5a){
var _5b=_5a["common"]||[];
var _5c=_5a[dojo.hostenv.name_]?_5b.concat(_5a[dojo.hostenv.name_]||[]):_5b.concat(_5a["default"]||[]);
for(var x=0;x<_5c.length;x++){
var _5e=_5c[x];
if(_5e.constructor==Array){
dojo.hostenv.loadModule.apply(dojo.hostenv,_5e);
}else{
dojo.hostenv.loadModule(_5e);
}
}
};
dojo.require=function(_5f){
dojo.hostenv.loadModule.apply(dojo.hostenv,arguments);
};
dojo.requireIf=function(_60,_61){
var _62=arguments[0];
if((_62===true)||(_62=="common")||(_62&&dojo.render[_62].capable)){
var _63=[];
for(var i=1;i<arguments.length;i++){
_63.push(arguments[i]);
}
dojo.require.apply(dojo,_63);
}
};
dojo.requireAfterIf=dojo.requireIf;
dojo.provide=function(_65){
return dojo.hostenv.startPackage.apply(dojo.hostenv,arguments);
};
dojo.registerModulePath=function(_66,_67){
return dojo.hostenv.setModulePrefix(_66,_67);
};
dojo.setModulePrefix=function(_68,_69){
dojo.deprecated("dojo.setModulePrefix(\""+_68+"\", \""+_69+"\")","replaced by dojo.registerModulePath","0.5");
return dojo.registerModulePath(_68,_69);
};
dojo.exists=function(obj,_6b){
var p=_6b.split(".");
for(var i=0;i<p.length;i++){
if(!obj[p[i]]){
return false;
}
obj=obj[p[i]];
}
return true;
};
dojo.hostenv.normalizeLocale=function(_6e){
var _6f=_6e?_6e.toLowerCase():dojo.locale;
if(_6f=="root"){
_6f="ROOT";
}
return _6f;
};
dojo.hostenv.searchLocalePath=function(_70,_71,_72){
_70=dojo.hostenv.normalizeLocale(_70);
var _73=_70.split("-");
var _74=[];
for(var i=_73.length;i>0;i--){
_74.push(_73.slice(0,i).join("-"));
}
_74.push(false);
if(_71){
_74.reverse();
}
for(var j=_74.length-1;j>=0;j--){
var loc=_74[j]||"ROOT";
var _78=_72(loc);
if(_78){
break;
}
}
};
dojo.hostenv.localesGenerated;
dojo.hostenv.registerNlsPrefix=function(){
dojo.registerModulePath("nls","nls");
};
dojo.hostenv.preloadLocalizations=function(){
if(dojo.hostenv.localesGenerated){
dojo.hostenv.registerNlsPrefix();
function preload(_79){
_79=dojo.hostenv.normalizeLocale(_79);
dojo.hostenv.searchLocalePath(_79,true,function(loc){
for(var i=0;i<dojo.hostenv.localesGenerated.length;i++){
if(dojo.hostenv.localesGenerated[i]==loc){
dojo["require"]("nls.dojo_"+loc);
return true;
}
}
return false;
});
}
preload();
var _7c=djConfig.extraLocale||[];
for(var i=0;i<_7c.length;i++){
preload(_7c[i]);
}
}
dojo.hostenv.preloadLocalizations=function(){
};
};
dojo.requireLocalization=function(_7e,_7f,_80,_81){
dojo.hostenv.preloadLocalizations();
var _82=dojo.hostenv.normalizeLocale(_80);
var _83=[_7e,"nls",_7f].join(".");
var _84="";
if(_81){
var _85=_81.split(",");
for(var i=0;i<_85.length;i++){
if(_82.indexOf(_85[i])==0){
if(_85[i].length>_84.length){
_84=_85[i];
}
}
}
if(!_84){
_84="ROOT";
}
}
var _87=_81?_84:_82;
var _88=dojo.hostenv.findModule(_83);
var _89=null;
if(_88){
if(djConfig.localizationComplete&&_88._built){
return;
}
var _8a=_87.replace("-","_");
var _8b=_83+"."+_8a;
_89=dojo.hostenv.findModule(_8b);
}
if(!_89){
_88=dojo.hostenv.startPackage(_83);
var _8c=dojo.hostenv.getModuleSymbols(_7e);
var _8d=_8c.concat("nls").join("/");
var _8e;
dojo.hostenv.searchLocalePath(_87,_81,function(loc){
var _90=loc.replace("-","_");
var _91=_83+"."+_90;
var _92=false;
if(!dojo.hostenv.findModule(_91)){
dojo.hostenv.startPackage(_91);
var _93=[_8d];
if(loc!="ROOT"){
_93.push(loc);
}
_93.push(_7f);
var _94=_93.join("/")+".js";
_92=dojo.hostenv.loadPath(_94,null,function(_95){
var _96=function(){
};
_96.prototype=_8e;
_88[_90]=new _96();
for(var j in _95){
_88[_90][j]=_95[j];
}
});
}else{
_92=true;
}
if(_92&&_88[_90]){
_8e=_88[_90];
}else{
_88[_90]=_8e;
}
if(_81){
return true;
}
});
}
if(_81&&_82!=_84){
_88[_82.replace("-","_")]=_88[_84.replace("-","_")];
}
};
(function(){
var _98=djConfig.extraLocale;
if(_98){
if(!_98 instanceof Array){
_98=[_98];
}
var req=dojo.requireLocalization;
dojo.requireLocalization=function(m,b,_9c,_9d){
req(m,b,_9c,_9d);
if(_9c){
return;
}
for(var i=0;i<_98.length;i++){
req(m,b,_98[i],_9d);
}
};
}
})();
}
if(typeof window!="undefined"){
(function(){
if(djConfig.allowQueryConfig){
var _9f=document.location.toString();
var _a0=_9f.split("?",2);
if(_a0.length>1){
var _a1=_a0[1];
var _a2=_a1.split("&");
for(var x in _a2){
var sp=_a2[x].split("=");
if((sp[0].length>9)&&(sp[0].substr(0,9)=="djConfig.")){
var opt=sp[0].substr(9);
try{
djConfig[opt]=eval(sp[1]);
}
catch(e){
djConfig[opt]=sp[1];
}
}
}
}
}
if(((djConfig["baseScriptUri"]=="")||(djConfig["baseRelativePath"]==""))&&(document&&document.getElementsByTagName)){
var _a6=document.getElementsByTagName("script");
var _a7=/(__package__|dojo|bootstrap1)\.js([\?\.]|$)/i;
for(var i=0;i<_a6.length;i++){
var src=_a6[i].getAttribute("src");
if(!src){
continue;
}
var m=src.match(_a7);
if(m){
var _ab=src.substring(0,m.index);
if(src.indexOf("bootstrap1")>-1){
_ab+="../";
}
if(!this["djConfig"]){
djConfig={};
}
if(djConfig["baseScriptUri"]==""){
djConfig["baseScriptUri"]=_ab;
}
if(djConfig["baseRelativePath"]==""){
djConfig["baseRelativePath"]=_ab;
}
break;
}
}
}
var dr=dojo.render;
var drh=dojo.render.html;
var drs=dojo.render.svg;
var dua=(drh.UA=navigator.userAgent);
var dav=(drh.AV=navigator.appVersion);
var t=true;
var f=false;
drh.capable=t;
drh.support.builtin=t;
dr.ver=parseFloat(drh.AV);
dr.os.mac=dav.indexOf("Macintosh")>=0;
dr.os.win=dav.indexOf("Windows")>=0;
dr.os.linux=dav.indexOf("X11")>=0;
drh.opera=dua.indexOf("Opera")>=0;
drh.khtml=(dav.indexOf("Konqueror")>=0)||(dav.indexOf("Safari")>=0);
drh.safari=dav.indexOf("Safari")>=0;
var _b3=dua.indexOf("Gecko");
drh.mozilla=drh.moz=(_b3>=0)&&(!drh.khtml);
if(drh.mozilla){
drh.geckoVersion=dua.substring(_b3+6,_b3+14);
}
drh.ie=(document.all)&&(!drh.opera);
drh.ie50=drh.ie&&dav.indexOf("MSIE 5.0")>=0;
drh.ie55=drh.ie&&dav.indexOf("MSIE 5.5")>=0;
drh.ie60=drh.ie&&dav.indexOf("MSIE 6.0")>=0;
drh.ie70=drh.ie&&dav.indexOf("MSIE 7.0")>=0;
var cm=document["compatMode"];
drh.quirks=(cm=="BackCompat")||(cm=="QuirksMode")||drh.ie55||drh.ie50;
dojo.locale=dojo.locale||(drh.ie?navigator.userLanguage:navigator.language).toLowerCase();
dr.vml.capable=drh.ie;
drs.capable=f;
drs.support.plugin=f;
drs.support.builtin=f;
var _b5=window["document"];
var tdi=_b5["implementation"];
if((tdi)&&(tdi["hasFeature"])&&(tdi.hasFeature("org.w3c.dom.svg","1.0"))){
drs.capable=t;
drs.support.builtin=t;
drs.support.plugin=f;
}
if(drh.safari){
var tmp=dua.split("AppleWebKit/")[1];
var ver=parseFloat(tmp.split(" ")[0]);
if(ver>=420){
drs.capable=t;
drs.support.builtin=t;
drs.support.plugin=f;
}
}else{
}
})();
dojo.hostenv.startPackage("dojo.hostenv");
dojo.render.name=dojo.hostenv.name_="browser";
dojo.hostenv.searchIds=[];
dojo.hostenv._XMLHTTP_PROGIDS=["Msxml2.XMLHTTP","Microsoft.XMLHTTP","Msxml2.XMLHTTP.4.0"];
dojo.hostenv.getXmlhttpObject=function(){
var _b9=null;
var _ba=null;
try{
_b9=new XMLHttpRequest();
}
catch(e){
}
if(!_b9){
for(var i=0;i<3;++i){
var _bc=dojo.hostenv._XMLHTTP_PROGIDS[i];
try{
_b9=new ActiveXObject(_bc);
}
catch(e){
_ba=e;
}
if(_b9){
dojo.hostenv._XMLHTTP_PROGIDS=[_bc];
break;
}
}
}
if(!_b9){
return dojo.raise("XMLHTTP not available",_ba);
}
return _b9;
};
dojo.hostenv._blockAsync=false;
dojo.hostenv.getText=function(uri,_be,_bf){
if(!_be){
this._blockAsync=true;
}
var _c0=this.getXmlhttpObject();
function isDocumentOk(_c1){
var _c2=_c1["status"];
return Boolean((!_c2)||((200<=_c2)&&(300>_c2))||(_c2==304));
}
if(_be){
var _c3=this,_c4=null,gbl=dojo.global();
var xhr=dojo.evalObjPath("dojo.io.XMLHTTPTransport");
_c0.onreadystatechange=function(){
if(_c4){
gbl.clearTimeout(_c4);
_c4=null;
}
if(_c3._blockAsync||(xhr&&xhr._blockAsync)){
_c4=gbl.setTimeout(function(){
_c0.onreadystatechange.apply(this);
},10);
}else{
if(4==_c0.readyState){
if(isDocumentOk(_c0)){
_be(_c0.responseText);
}
}
}
};
}
_c0.open("GET",uri,_be?true:false);
try{
_c0.send(null);
if(_be){
return null;
}
if(!isDocumentOk(_c0)){
var err=Error("Unable to load "+uri+" status:"+_c0.status);
err.status=_c0.status;
err.responseText=_c0.responseText;
throw err;
}
}
catch(e){
this._blockAsync=false;
if((_bf)&&(!_be)){
return null;
}else{
throw e;
}
}
this._blockAsync=false;
return _c0.responseText;
};
dojo.hostenv.defaultDebugContainerId="dojoDebug";
dojo.hostenv._println_buffer=[];
dojo.hostenv._println_safe=false;
dojo.hostenv.println=function(_c8){
if(!dojo.hostenv._println_safe){
dojo.hostenv._println_buffer.push(_c8);
}else{
try{
var _c9=document.getElementById(djConfig.debugContainerId?djConfig.debugContainerId:dojo.hostenv.defaultDebugContainerId);
if(!_c9){
_c9=dojo.body();
}
var div=document.createElement("div");
div.appendChild(document.createTextNode(_c8));
_c9.appendChild(div);
}
catch(e){
try{
document.write("<div>"+_c8+"</div>");
}
catch(e2){
window.status=_c8;
}
}
}
};
dojo.addOnLoad(function(){
dojo.hostenv._println_safe=true;
while(dojo.hostenv._println_buffer.length>0){
dojo.hostenv.println(dojo.hostenv._println_buffer.shift());
}
});
function dj_addNodeEvtHdlr(_cb,_cc,fp){
var _ce=_cb["on"+_cc]||function(){
};
_cb["on"+_cc]=function(){
fp.apply(_cb,arguments);
_ce.apply(_cb,arguments);
};
return true;
}
function dj_load_init(e){
var _d0=(e&&e.type)?e.type.toLowerCase():"load";
if(arguments.callee.initialized||(_d0!="domcontentloaded"&&_d0!="load")){
return;
}
arguments.callee.initialized=true;
if(typeof (_timer)!="undefined"){
clearInterval(_timer);
delete _timer;
}
var _d1=function(){
if(dojo.render.html.ie){
dojo.hostenv.makeWidgets();
}
};
if(dojo.hostenv.inFlightCount==0){
_d1();
dojo.hostenv.modulesLoaded();
}else{
dojo.hostenv.modulesLoadedListeners.unshift(_d1);
}
}
if(document.addEventListener){
if(dojo.render.html.opera||(dojo.render.html.moz&&!djConfig.delayMozLoadingFix)){
document.addEventListener("DOMContentLoaded",dj_load_init,null);
}
window.addEventListener("load",dj_load_init,null);
}
if(dojo.render.html.ie&&dojo.render.os.win){
document.attachEvent("onreadystatechange",function(e){
if(document.readyState=="complete"){
dj_load_init();
}
});
}
if(/(WebKit|khtml)/i.test(navigator.userAgent)){
var _timer=setInterval(function(){
if(/loaded|complete/.test(document.readyState)){
dj_load_init();
}
},10);
}
if(dojo.render.html.ie){
dj_addNodeEvtHdlr(window,"beforeunload",function(){
dojo.hostenv._unloading=true;
window.setTimeout(function(){
dojo.hostenv._unloading=false;
},0);
});
}
dj_addNodeEvtHdlr(window,"unload",function(){
dojo.hostenv.unloaded();
if((!dojo.render.html.ie)||(dojo.render.html.ie&&dojo.hostenv._unloading)){
dojo.hostenv.unloaded();
}
});
dojo.hostenv.makeWidgets=function(){
var _d3=[];
if(djConfig.searchIds&&djConfig.searchIds.length>0){
_d3=_d3.concat(djConfig.searchIds);
}
if(dojo.hostenv.searchIds&&dojo.hostenv.searchIds.length>0){
_d3=_d3.concat(dojo.hostenv.searchIds);
}
if((djConfig.parseWidgets)||(_d3.length>0)){
if(dojo.evalObjPath("dojo.widget.Parse")){
var _d4=new dojo.xml.Parse();
if(_d3.length>0){
for(var x=0;x<_d3.length;x++){
var _d6=document.getElementById(_d3[x]);
if(!_d6){
continue;
}
var _d7=_d4.parseElement(_d6,null,true);
dojo.widget.getParser().createComponents(_d7);
}
}else{
if(djConfig.parseWidgets){
var _d7=_d4.parseElement(dojo.body(),null,true);
dojo.widget.getParser().createComponents(_d7);
}
}
}
}
};
dojo.addOnLoad(function(){
if(!dojo.render.html.ie){
dojo.hostenv.makeWidgets();
}
});
try{
if(dojo.render.html.ie){
document.namespaces.add("v","urn:schemas-microsoft-com:vml");
document.createStyleSheet().addRule("v\\:*","behavior:url(#default#VML)");
}
}
catch(e){
}
dojo.hostenv.writeIncludes=function(){
};
if(!dj_undef("document",this)){
dj_currentDocument=this.document;
}
dojo.doc=function(){
return dj_currentDocument;
};
dojo.body=function(){
return dojo.doc().body||dojo.doc().getElementsByTagName("body")[0];
};
dojo.byId=function(id,doc){
if((id)&&((typeof id=="string")||(id instanceof String))){
if(!doc){
doc=dj_currentDocument;
}
var ele=doc.getElementById(id);
if(ele&&(ele.id!=id)&&doc.all){
ele=null;
eles=doc.all[id];
if(eles){
if(eles.length){
for(var i=0;i<eles.length;i++){
if(eles[i].id==id){
ele=eles[i];
break;
}
}
}else{
ele=eles;
}
}
}
return ele;
}
return id;
};
dojo.setContext=function(_dc,_dd){
dj_currentContext=_dc;
dj_currentDocument=_dd;
};
dojo._fireCallback=function(_de,_df,_e0){
if((_df)&&((typeof _de=="string")||(_de instanceof String))){
_de=_df[_de];
}
return (_df?_de.apply(_df,_e0||[]):_de());
};
dojo.withGlobal=function(_e1,_e2,_e3,_e4){
var _e5;
var _e6=dj_currentContext;
var _e7=dj_currentDocument;
try{
dojo.setContext(_e1,_e1.document);
_e5=dojo._fireCallback(_e2,_e3,_e4);
}
finally{
dojo.setContext(_e6,_e7);
}
return _e5;
};
dojo.withDoc=function(_e8,_e9,_ea,_eb){
var _ec;
var _ed=dj_currentDocument;
try{
dj_currentDocument=_e8;
_ec=dojo._fireCallback(_e9,_ea,_eb);
}
finally{
dj_currentDocument=_ed;
}
return _ec;
};
}
(function(){
if(typeof dj_usingBootstrap!="undefined"){
return;
}
var _ee=false;
var _ef=false;
var _f0=false;
if((typeof this["load"]=="function")&&((typeof this["Packages"]=="function")||(typeof this["Packages"]=="object"))){
_ee=true;
}else{
if(typeof this["load"]=="function"){
_ef=true;
}else{
if(window.widget){
_f0=true;
}
}
}
var _f1=[];
if((this["djConfig"])&&((djConfig["isDebug"])||(djConfig["debugAtAllCosts"]))){
_f1.push("debug.js");
}
if((this["djConfig"])&&(djConfig["debugAtAllCosts"])&&(!_ee)&&(!_f0)){
_f1.push("browser_debug.js");
}
var _f2=djConfig["baseScriptUri"];
if((this["djConfig"])&&(djConfig["baseLoaderUri"])){
_f2=djConfig["baseLoaderUri"];
}
for(var x=0;x<_f1.length;x++){
var _f4=_f2+"src/"+_f1[x];
if(_ee||_ef){
load(_f4);
}else{
try{
document.write("<scr"+"ipt type='text/javascript' src='"+_f4+"'></scr"+"ipt>");
}
catch(e){
var _f5=document.createElement("script");
_f5.src=_f4;
document.getElementsByTagName("head")[0].appendChild(_f5);
}
}
}
})();
dojo.provide("dojo.lang.common");
dojo.lang.inherits=function(_f6,_f7){
if(!dojo.lang.isFunction(_f7)){
dojo.raise("dojo.inherits: superclass argument ["+_f7+"] must be a function (subclass: ["+_f6+"']");
}
_f6.prototype=new _f7();
_f6.prototype.constructor=_f6;
_f6.superclass=_f7.prototype;
_f6["super"]=_f7.prototype;
};
dojo.lang._mixin=function(obj,_f9){
var _fa={};
for(var x in _f9){
if((typeof _fa[x]=="undefined")||(_fa[x]!=_f9[x])){
obj[x]=_f9[x];
}
}
if(dojo.render.html.ie&&(typeof (_f9["toString"])=="function")&&(_f9["toString"]!=obj["toString"])&&(_f9["toString"]!=_fa["toString"])){
obj.toString=_f9.toString;
}
return obj;
};
dojo.lang.mixin=function(obj,_fd){
for(var i=1,l=arguments.length;i<l;i++){
dojo.lang._mixin(obj,arguments[i]);
}
return obj;
};
dojo.lang.extend=function(_100,_101){
for(var i=1,l=arguments.length;i<l;i++){
dojo.lang._mixin(_100.prototype,arguments[i]);
}
return _100;
};
dojo.inherits=dojo.lang.inherits;
dojo.mixin=dojo.lang.mixin;
dojo.extend=dojo.lang.extend;
dojo.lang.find=function(_104,_105,_106,_107){
if(!dojo.lang.isArrayLike(_104)&&dojo.lang.isArrayLike(_105)){
dojo.deprecated("dojo.lang.find(value, array)","use dojo.lang.find(array, value) instead","0.5");
var temp=_104;
_104=_105;
_105=temp;
}
var _109=dojo.lang.isString(_104);
if(_109){
_104=_104.split("");
}
if(_107){
var step=-1;
var i=_104.length-1;
var end=-1;
}else{
var step=1;
var i=0;
var end=_104.length;
}
if(_106){
while(i!=end){
if(_104[i]===_105){
return i;
}
i+=step;
}
}else{
while(i!=end){
if(_104[i]==_105){
return i;
}
i+=step;
}
}
return -1;
};
dojo.lang.indexOf=dojo.lang.find;
dojo.lang.findLast=function(_10d,_10e,_10f){
return dojo.lang.find(_10d,_10e,_10f,true);
};
dojo.lang.lastIndexOf=dojo.lang.findLast;
dojo.lang.inArray=function(_110,_111){
return dojo.lang.find(_110,_111)>-1;
};
dojo.lang.isObject=function(it){
if(typeof it=="undefined"){
return false;
}
return (typeof it=="object"||it===null||dojo.lang.isArray(it)||dojo.lang.isFunction(it));
};
dojo.lang.isArray=function(it){
return (it&&it instanceof Array||typeof it=="array");
};
dojo.lang.isArrayLike=function(it){
if((!it)||(dojo.lang.isUndefined(it))){
return false;
}
if(dojo.lang.isString(it)){
return false;
}
if(dojo.lang.isFunction(it)){
return false;
}
if(dojo.lang.isArray(it)){
return true;
}
if((it.tagName)&&(it.tagName.toLowerCase()=="form")){
return false;
}
if(dojo.lang.isNumber(it.length)&&isFinite(it.length)){
return true;
}
return false;
};
dojo.lang.isFunction=function(it){
return (it instanceof Function||typeof it=="function");
};
(function(){
if((dojo.render.html.capable)&&(dojo.render.html["safari"])){
dojo.lang.isFunction=function(it){
if((typeof (it)=="function")&&(it=="[object NodeList]")){
return false;
}
return (it instanceof Function||typeof it=="function");
};
}
})();
dojo.lang.isString=function(it){
return (typeof it=="string"||it instanceof String);
};
dojo.lang.isAlien=function(it){
if(!it){
return false;
}
return !dojo.lang.isFunction(it)&&/\{\s*\[native code\]\s*\}/.test(String(it));
};
dojo.lang.isBoolean=function(it){
return (it instanceof Boolean||typeof it=="boolean");
};
dojo.lang.isNumber=function(it){
return (it instanceof Number||typeof it=="number");
};
dojo.lang.isUndefined=function(it){
return ((typeof (it)=="undefined")&&(it==undefined));
};
dojo.provide("dojo.lang.array");
dojo.lang.mixin(dojo.lang,{has:function(obj,name){
try{
return typeof obj[name]!="undefined";
}
catch(e){
return false;
}
},isEmpty:function(obj){
if(dojo.lang.isObject(obj)){
var tmp={};
var _120=0;
for(var x in obj){
if(obj[x]&&(!tmp[x])){
_120++;
break;
}
}
return _120==0;
}else{
if(dojo.lang.isArrayLike(obj)||dojo.lang.isString(obj)){
return obj.length==0;
}
}
},map:function(arr,obj,_124){
var _125=dojo.lang.isString(arr);
if(_125){
arr=arr.split("");
}
if(dojo.lang.isFunction(obj)&&(!_124)){
_124=obj;
obj=dj_global;
}else{
if(dojo.lang.isFunction(obj)&&_124){
var _126=obj;
obj=_124;
_124=_126;
}
}
if(Array.map){
var _127=Array.map(arr,_124,obj);
}else{
var _127=[];
for(var i=0;i<arr.length;++i){
_127.push(_124.call(obj,arr[i]));
}
}
if(_125){
return _127.join("");
}else{
return _127;
}
},reduce:function(arr,_12a,obj,_12c){
var _12d=_12a;
if(arguments.length==1){
dojo.debug("dojo.lang.reduce called with too few arguments!");
return false;
}else{
if(arguments.length==2){
_12c=_12a;
_12d=arr.shift();
}else{
if(arguments.lenght==3){
if(dojo.lang.isFunction(obj)){
_12c=obj;
obj=null;
}
}else{
if(dojo.lang.isFunction(obj)){
var tmp=_12c;
_12c=obj;
obj=tmp;
}
}
}
}
var ob=obj?obj:dj_global;
dojo.lang.map(arr,function(val){
_12d=_12c.call(ob,_12d,val);
});
return _12d;
},forEach:function(_131,_132,_133){
if(dojo.lang.isString(_131)){
_131=_131.split("");
}
if(Array.forEach){
Array.forEach(_131,_132,_133);
}else{
if(!_133){
_133=dj_global;
}
for(var i=0,l=_131.length;i<l;i++){
_132.call(_133,_131[i],i,_131);
}
}
},_everyOrSome:function(_136,arr,_138,_139){
if(dojo.lang.isString(arr)){
arr=arr.split("");
}
if(Array.every){
return Array[_136?"every":"some"](arr,_138,_139);
}else{
if(!_139){
_139=dj_global;
}
for(var i=0,l=arr.length;i<l;i++){
var _13c=_138.call(_139,arr[i],i,arr);
if(_136&&!_13c){
return false;
}else{
if((!_136)&&(_13c)){
return true;
}
}
}
return Boolean(_136);
}
},every:function(arr,_13e,_13f){
return this._everyOrSome(true,arr,_13e,_13f);
},some:function(arr,_141,_142){
return this._everyOrSome(false,arr,_141,_142);
},filter:function(arr,_144,_145){
var _146=dojo.lang.isString(arr);
if(_146){
arr=arr.split("");
}
var _147;
if(Array.filter){
_147=Array.filter(arr,_144,_145);
}else{
if(!_145){
if(arguments.length>=3){
dojo.raise("thisObject doesn't exist!");
}
_145=dj_global;
}
_147=[];
for(var i=0;i<arr.length;i++){
if(_144.call(_145,arr[i],i,arr)){
_147.push(arr[i]);
}
}
}
if(_146){
return _147.join("");
}else{
return _147;
}
},unnest:function(){
var out=[];
for(var i=0;i<arguments.length;i++){
if(dojo.lang.isArrayLike(arguments[i])){
var add=dojo.lang.unnest.apply(this,arguments[i]);
out=out.concat(add);
}else{
out.push(arguments[i]);
}
}
return out;
},toArray:function(_14c,_14d){
var _14e=[];
for(var i=_14d||0;i<_14c.length;i++){
_14e.push(_14c[i]);
}
return _14e;
}});
dojo.provide("dojo.lang.extras");
dojo.lang.setTimeout=function(func,_151){
var _152=window,_153=2;
if(!dojo.lang.isFunction(func)){
_152=func;
func=_151;
_151=arguments[2];
_153++;
}
if(dojo.lang.isString(func)){
func=_152[func];
}
var args=[];
for(var i=_153;i<arguments.length;i++){
args.push(arguments[i]);
}
return dojo.global().setTimeout(function(){
func.apply(_152,args);
},_151);
};
dojo.lang.clearTimeout=function(_156){
dojo.global().clearTimeout(_156);
};
dojo.lang.getNameInObj=function(ns,item){
if(!ns){
ns=dj_global;
}
for(var x in ns){
if(ns[x]===item){
return new String(x);
}
}
return null;
};
dojo.lang.shallowCopy=function(obj,deep){
var i,ret;
if(obj===null){
return null;
}
if(dojo.lang.isObject(obj)){
ret=new obj.constructor();
for(i in obj){
if(dojo.lang.isUndefined(ret[i])){
ret[i]=deep?dojo.lang.shallowCopy(obj[i],deep):obj[i];
}
}
}else{
if(dojo.lang.isArray(obj)){
ret=[];
for(i=0;i<obj.length;i++){
ret[i]=deep?dojo.lang.shallowCopy(obj[i],deep):obj[i];
}
}else{
ret=obj;
}
}
return ret;
};
dojo.lang.firstValued=function(){
for(var i=0;i<arguments.length;i++){
if(typeof arguments[i]!="undefined"){
return arguments[i];
}
}
return undefined;
};
dojo.lang.getObjPathValue=function(_15f,_160,_161){
with(dojo.parseObjPath(_15f,_160,_161)){
return dojo.evalProp(prop,obj,_161);
}
};
dojo.lang.setObjPathValue=function(_162,_163,_164,_165){
dojo.deprecated("dojo.lang.setObjPathValue","use dojo.parseObjPath and the '=' operator","0.6");
if(arguments.length<4){
_165=true;
}
with(dojo.parseObjPath(_162,_164,_165)){
if(obj&&(_165||(prop in obj))){
obj[prop]=_163;
}
}
};
dojo.provide("dojo.lang.declare");
dojo.lang.declare=function(_166,_167,init,_169){
if((dojo.lang.isFunction(_169))||((!_169)&&(!dojo.lang.isFunction(init)))){
var temp=_169;
_169=init;
init=temp;
}
var _16b=[];
if(dojo.lang.isArray(_167)){
_16b=_167;
_167=_16b.shift();
}
if(!init){
init=dojo.evalObjPath(_166,false);
if((init)&&(!dojo.lang.isFunction(init))){
init=null;
}
}
var ctor=dojo.lang.declare._makeConstructor();
var scp=(_167?_167.prototype:null);
if(scp){
scp.prototyping=true;
ctor.prototype=new _167();
scp.prototyping=false;
}
ctor.superclass=scp;
ctor.mixins=_16b;
for(var i=0,l=_16b.length;i<l;i++){
dojo.lang.extend(ctor,_16b[i].prototype);
}
ctor.prototype.initializer=null;
ctor.prototype.declaredClass=_166;
if(dojo.lang.isArray(_169)){
dojo.lang.extend.apply(dojo.lang,[ctor].concat(_169));
}else{
dojo.lang.extend(ctor,(_169)||{});
}
dojo.lang.extend(ctor,dojo.lang.declare._common);
ctor.prototype.constructor=ctor;
ctor.prototype.initializer=(ctor.prototype.initializer)||(init)||(function(){
});
var _170=dojo.parseObjPath(_166,null,true);
_170.obj[_170.prop]=ctor;
return ctor;
};
dojo.lang.declare._makeConstructor=function(){
return function(){
var self=this._getPropContext();
var s=self.constructor.superclass;
if((s)&&(s.constructor)){
if(s.constructor==arguments.callee){
this._inherited("constructor",arguments);
}else{
this._contextMethod(s,"constructor",arguments);
}
}
var ms=(self.constructor.mixins)||([]);
for(var i=0,m;(m=ms[i]);i++){
(((m.prototype)&&(m.prototype.initializer))||(m)).apply(this,arguments);
}
if((!this.prototyping)&&(self.initializer)){
self.initializer.apply(this,arguments);
}
};
};
dojo.lang.declare._common={_getPropContext:function(){
return (this.___proto||this);
},_contextMethod:function(_176,_177,args){
var _179,_17a=this.___proto;
this.___proto=_176;
try{
_179=_176[_177].apply(this,(args||[]));
}
catch(e){
throw e;
}
finally{
this.___proto=_17a;
}
return _179;
},_inherited:function(prop,args){
var p=this._getPropContext();
do{
if((!p.constructor)||(!p.constructor.superclass)){
return;
}
p=p.constructor.superclass;
}while(!(prop in p));
return (dojo.lang.isFunction(p[prop])?this._contextMethod(p,prop,args):p[prop]);
},inherited:function(prop,args){
dojo.deprecated("'inherited' method is dangerous, do not up-call! 'inherited' is slated for removal in 0.5; name your super class (or use superclass property) instead.","0.5");
this._inherited(prop,args);
}};
dojo.declare=dojo.lang.declare;
dojo.provide("dojo.lang.func");
dojo.lang.hitch=function(_180,_181){
var fcn=(dojo.lang.isString(_181)?_180[_181]:_181)||function(){
};
return function(){
return fcn.apply(_180,arguments);
};
};
dojo.lang.anonCtr=0;
dojo.lang.anon={};
dojo.lang.nameAnonFunc=function(_183,_184,_185){
var nso=(_184||dojo.lang.anon);
if((_185)||((dj_global["djConfig"])&&(djConfig["slowAnonFuncLookups"]==true))){
for(var x in nso){
try{
if(nso[x]===_183){
return x;
}
}
catch(e){
}
}
}
var ret="__"+dojo.lang.anonCtr++;
while(typeof nso[ret]!="undefined"){
ret="__"+dojo.lang.anonCtr++;
}
nso[ret]=_183;
return ret;
};
dojo.lang.forward=function(_189){
return function(){
return this[_189].apply(this,arguments);
};
};
dojo.lang.curry=function(_18a,func){
var _18c=[];
_18a=_18a||dj_global;
if(dojo.lang.isString(func)){
func=_18a[func];
}
for(var x=2;x<arguments.length;x++){
_18c.push(arguments[x]);
}
var _18e=(func["__preJoinArity"]||func.length)-_18c.length;
function gather(_18f,_190,_191){
var _192=_191;
var _193=_190.slice(0);
for(var x=0;x<_18f.length;x++){
_193.push(_18f[x]);
}
_191=_191-_18f.length;
if(_191<=0){
var res=func.apply(_18a,_193);
_191=_192;
return res;
}else{
return function(){
return gather(arguments,_193,_191);
};
}
}
return gather([],_18c,_18e);
};
dojo.lang.curryArguments=function(_196,func,args,_199){
var _19a=[];
var x=_199||0;
for(x=_199;x<args.length;x++){
_19a.push(args[x]);
}
return dojo.lang.curry.apply(dojo.lang,[_196,func].concat(_19a));
};
dojo.lang.tryThese=function(){
for(var x=0;x<arguments.length;x++){
try{
if(typeof arguments[x]=="function"){
var ret=(arguments[x]());
if(ret){
return ret;
}
}
}
catch(e){
dojo.debug(e);
}
}
};
dojo.lang.delayThese=function(farr,cb,_1a0,_1a1){
if(!farr.length){
if(typeof _1a1=="function"){
_1a1();
}
return;
}
if((typeof _1a0=="undefined")&&(typeof cb=="number")){
_1a0=cb;
cb=function(){
};
}else{
if(!cb){
cb=function(){
};
if(!_1a0){
_1a0=0;
}
}
}
setTimeout(function(){
(farr.shift())();
cb();
dojo.lang.delayThese(farr,cb,_1a0,_1a1);
},_1a0);
};
dojo.provide("dojo.event.common");
dojo.event=new function(){
this._canTimeout=dojo.lang.isFunction(dj_global["setTimeout"])||dojo.lang.isAlien(dj_global["setTimeout"]);
function interpolateArgs(args,_1a3){
var dl=dojo.lang;
var ao={srcObj:dj_global,srcFunc:null,adviceObj:dj_global,adviceFunc:null,aroundObj:null,aroundFunc:null,adviceType:(args.length>2)?args[0]:"after",precedence:"last",once:false,delay:null,rate:0,adviceMsg:false};
switch(args.length){
case 0:
return;
case 1:
return;
case 2:
ao.srcFunc=args[0];
ao.adviceFunc=args[1];
break;
case 3:
if((dl.isObject(args[0]))&&(dl.isString(args[1]))&&(dl.isString(args[2]))){
ao.adviceType="after";
ao.srcObj=args[0];
ao.srcFunc=args[1];
ao.adviceFunc=args[2];
}else{
if((dl.isString(args[1]))&&(dl.isString(args[2]))){
ao.srcFunc=args[1];
ao.adviceFunc=args[2];
}else{
if((dl.isObject(args[0]))&&(dl.isString(args[1]))&&(dl.isFunction(args[2]))){
ao.adviceType="after";
ao.srcObj=args[0];
ao.srcFunc=args[1];
var _1a6=dl.nameAnonFunc(args[2],ao.adviceObj,_1a3);
ao.adviceFunc=_1a6;
}else{
if((dl.isFunction(args[0]))&&(dl.isObject(args[1]))&&(dl.isString(args[2]))){
ao.adviceType="after";
ao.srcObj=dj_global;
var _1a6=dl.nameAnonFunc(args[0],ao.srcObj,_1a3);
ao.srcFunc=_1a6;
ao.adviceObj=args[1];
ao.adviceFunc=args[2];
}
}
}
}
break;
case 4:
if((dl.isObject(args[0]))&&(dl.isObject(args[2]))){
ao.adviceType="after";
ao.srcObj=args[0];
ao.srcFunc=args[1];
ao.adviceObj=args[2];
ao.adviceFunc=args[3];
}else{
if((dl.isString(args[0]))&&(dl.isString(args[1]))&&(dl.isObject(args[2]))){
ao.adviceType=args[0];
ao.srcObj=dj_global;
ao.srcFunc=args[1];
ao.adviceObj=args[2];
ao.adviceFunc=args[3];
}else{
if((dl.isString(args[0]))&&(dl.isFunction(args[1]))&&(dl.isObject(args[2]))){
ao.adviceType=args[0];
ao.srcObj=dj_global;
var _1a6=dl.nameAnonFunc(args[1],dj_global,_1a3);
ao.srcFunc=_1a6;
ao.adviceObj=args[2];
ao.adviceFunc=args[3];
}else{
if((dl.isString(args[0]))&&(dl.isObject(args[1]))&&(dl.isString(args[2]))&&(dl.isFunction(args[3]))){
ao.srcObj=args[1];
ao.srcFunc=args[2];
var _1a6=dl.nameAnonFunc(args[3],dj_global,_1a3);
ao.adviceObj=dj_global;
ao.adviceFunc=_1a6;
}else{
if(dl.isObject(args[1])){
ao.srcObj=args[1];
ao.srcFunc=args[2];
ao.adviceObj=dj_global;
ao.adviceFunc=args[3];
}else{
if(dl.isObject(args[2])){
ao.srcObj=dj_global;
ao.srcFunc=args[1];
ao.adviceObj=args[2];
ao.adviceFunc=args[3];
}else{
ao.srcObj=ao.adviceObj=ao.aroundObj=dj_global;
ao.srcFunc=args[1];
ao.adviceFunc=args[2];
ao.aroundFunc=args[3];
}
}
}
}
}
}
break;
case 6:
ao.srcObj=args[1];
ao.srcFunc=args[2];
ao.adviceObj=args[3];
ao.adviceFunc=args[4];
ao.aroundFunc=args[5];
ao.aroundObj=dj_global;
break;
default:
ao.srcObj=args[1];
ao.srcFunc=args[2];
ao.adviceObj=args[3];
ao.adviceFunc=args[4];
ao.aroundObj=args[5];
ao.aroundFunc=args[6];
ao.once=args[7];
ao.delay=args[8];
ao.rate=args[9];
ao.adviceMsg=args[10];
break;
}
if(dl.isFunction(ao.aroundFunc)){
var _1a6=dl.nameAnonFunc(ao.aroundFunc,ao.aroundObj,_1a3);
ao.aroundFunc=_1a6;
}
if(dl.isFunction(ao.srcFunc)){
ao.srcFunc=dl.getNameInObj(ao.srcObj,ao.srcFunc);
}
if(dl.isFunction(ao.adviceFunc)){
ao.adviceFunc=dl.getNameInObj(ao.adviceObj,ao.adviceFunc);
}
if((ao.aroundObj)&&(dl.isFunction(ao.aroundFunc))){
ao.aroundFunc=dl.getNameInObj(ao.aroundObj,ao.aroundFunc);
}
if(!ao.srcObj){
dojo.raise("bad srcObj for srcFunc: "+ao.srcFunc);
}
if(!ao.adviceObj){
dojo.raise("bad adviceObj for adviceFunc: "+ao.adviceFunc);
}
if(!ao.adviceFunc){
dojo.debug("bad adviceFunc for srcFunc: "+ao.srcFunc);
dojo.debugShallow(ao);
}
return ao;
}
this.connect=function(){
if(arguments.length==1){
var ao=arguments[0];
}else{
var ao=interpolateArgs(arguments,true);
}
if(dojo.lang.isString(ao.srcFunc)&&(ao.srcFunc.toLowerCase()=="onkey")){
if(dojo.render.html.ie){
ao.srcFunc="onkeydown";
this.connect(ao);
}
ao.srcFunc="onkeypress";
}
if(dojo.lang.isArray(ao.srcObj)&&ao.srcObj!=""){
var _1a8={};
for(var x in ao){
_1a8[x]=ao[x];
}
var mjps=[];
dojo.lang.forEach(ao.srcObj,function(src){
if((dojo.render.html.capable)&&(dojo.lang.isString(src))){
src=dojo.byId(src);
}
_1a8.srcObj=src;
mjps.push(dojo.event.connect.call(dojo.event,_1a8));
});
return mjps;
}
var mjp=dojo.event.MethodJoinPoint.getForMethod(ao.srcObj,ao.srcFunc);
if(ao.adviceFunc){
var mjp2=dojo.event.MethodJoinPoint.getForMethod(ao.adviceObj,ao.adviceFunc);
}
mjp.kwAddAdvice(ao);
return mjp;
};
this.log=function(a1,a2){
var _1b0;
if((arguments.length==1)&&(typeof a1=="object")){
_1b0=a1;
}else{
_1b0={srcObj:a1,srcFunc:a2};
}
_1b0.adviceFunc=function(){
var _1b1=[];
for(var x=0;x<arguments.length;x++){
_1b1.push(arguments[x]);
}
dojo.debug("("+_1b0.srcObj+")."+_1b0.srcFunc,":",_1b1.join(", "));
};
this.kwConnect(_1b0);
};
this.connectBefore=function(){
var args=["before"];
for(var i=0;i<arguments.length;i++){
args.push(arguments[i]);
}
return this.connect.apply(this,args);
};
this.connectAround=function(){
var args=["around"];
for(var i=0;i<arguments.length;i++){
args.push(arguments[i]);
}
return this.connect.apply(this,args);
};
this.connectOnce=function(){
var ao=interpolateArgs(arguments,true);
ao.once=true;
return this.connect(ao);
};
this._kwConnectImpl=function(_1b8,_1b9){
var fn=(_1b9)?"disconnect":"connect";
if(typeof _1b8["srcFunc"]=="function"){
_1b8.srcObj=_1b8["srcObj"]||dj_global;
var _1bb=dojo.lang.nameAnonFunc(_1b8.srcFunc,_1b8.srcObj,true);
_1b8.srcFunc=_1bb;
}
if(typeof _1b8["adviceFunc"]=="function"){
_1b8.adviceObj=_1b8["adviceObj"]||dj_global;
var _1bb=dojo.lang.nameAnonFunc(_1b8.adviceFunc,_1b8.adviceObj,true);
_1b8.adviceFunc=_1bb;
}
_1b8.srcObj=_1b8["srcObj"]||dj_global;
_1b8.adviceObj=_1b8["adviceObj"]||_1b8["targetObj"]||dj_global;
_1b8.adviceFunc=_1b8["adviceFunc"]||_1b8["targetFunc"];
return dojo.event[fn](_1b8);
};
this.kwConnect=function(_1bc){
return this._kwConnectImpl(_1bc,false);
};
this.disconnect=function(){
if(arguments.length==1){
var ao=arguments[0];
}else{
var ao=interpolateArgs(arguments,true);
}
if(!ao.adviceFunc){
return;
}
if(dojo.lang.isString(ao.srcFunc)&&(ao.srcFunc.toLowerCase()=="onkey")){
if(dojo.render.html.ie){
ao.srcFunc="onkeydown";
this.disconnect(ao);
}
ao.srcFunc="onkeypress";
}
if(!ao.srcObj[ao.srcFunc]){
return null;
}
var mjp=dojo.event.MethodJoinPoint.getForMethod(ao.srcObj,ao.srcFunc,true);
mjp.removeAdvice(ao.adviceObj,ao.adviceFunc,ao.adviceType,ao.once);
return mjp;
};
this.kwDisconnect=function(_1bf){
return this._kwConnectImpl(_1bf,true);
};
};
dojo.event.MethodInvocation=function(_1c0,obj,args){
this.jp_=_1c0;
this.object=obj;
this.args=[];
for(var x=0;x<args.length;x++){
this.args[x]=args[x];
}
this.around_index=-1;
};
dojo.event.MethodInvocation.prototype.proceed=function(){
this.around_index++;
if(this.around_index>=this.jp_.around.length){
return this.jp_.object[this.jp_.methodname].apply(this.jp_.object,this.args);
}else{
var ti=this.jp_.around[this.around_index];
var mobj=ti[0]||dj_global;
var meth=ti[1];
return mobj[meth].call(mobj,this);
}
};
dojo.event.MethodJoinPoint=function(obj,_1c8){
this.object=obj||dj_global;
this.methodname=_1c8;
this.methodfunc=this.object[_1c8];
this.squelch=false;
};
dojo.event.MethodJoinPoint.getForMethod=function(obj,_1ca){
if(!obj){
obj=dj_global;
}
if(!obj[_1ca]){
obj[_1ca]=function(){
};
if(!obj[_1ca]){
dojo.raise("Cannot set do-nothing method on that object "+_1ca);
}
}else{
if((!dojo.lang.isFunction(obj[_1ca]))&&(!dojo.lang.isAlien(obj[_1ca]))){
return null;
}
}
var _1cb=_1ca+"$joinpoint";
var _1cc=_1ca+"$joinpoint$method";
var _1cd=obj[_1cb];
if(!_1cd){
var _1ce=false;
if(dojo.event["browser"]){
if((obj["attachEvent"])||(obj["nodeType"])||(obj["addEventListener"])){
_1ce=true;
dojo.event.browser.addClobberNodeAttrs(obj,[_1cb,_1cc,_1ca]);
}
}
var _1cf=obj[_1ca].length;
obj[_1cc]=obj[_1ca];
_1cd=obj[_1cb]=new dojo.event.MethodJoinPoint(obj,_1cc);
obj[_1ca]=function(){
var args=[];
if((_1ce)&&(!arguments.length)){
var evt=null;
try{
if(obj.ownerDocument){
evt=obj.ownerDocument.parentWindow.event;
}else{
if(obj.documentElement){
evt=obj.documentElement.ownerDocument.parentWindow.event;
}else{
if(obj.event){
evt=obj.event;
}else{
evt=window.event;
}
}
}
}
catch(e){
evt=window.event;
}
if(evt){
args.push(dojo.event.browser.fixEvent(evt,this));
}
}else{
for(var x=0;x<arguments.length;x++){
if((x==0)&&(_1ce)&&(dojo.event.browser.isEvent(arguments[x]))){
args.push(dojo.event.browser.fixEvent(arguments[x],this));
}else{
args.push(arguments[x]);
}
}
}
return _1cd.run.apply(_1cd,args);
};
obj[_1ca].__preJoinArity=_1cf;
}
return _1cd;
};
dojo.lang.extend(dojo.event.MethodJoinPoint,{unintercept:function(){
this.object[this.methodname]=this.methodfunc;
this.before=[];
this.after=[];
this.around=[];
},disconnect:dojo.lang.forward("unintercept"),run:function(){
var obj=this.object||dj_global;
var args=arguments;
var _1d5=[];
for(var x=0;x<args.length;x++){
_1d5[x]=args[x];
}
var _1d7=function(marr){
if(!marr){
dojo.debug("Null argument to unrollAdvice()");
return;
}
var _1d9=marr[0]||dj_global;
var _1da=marr[1];
if(!_1d9[_1da]){
dojo.raise("function \""+_1da+"\" does not exist on \""+_1d9+"\"");
}
var _1db=marr[2]||dj_global;
var _1dc=marr[3];
var msg=marr[6];
var _1de;
var to={args:[],jp_:this,object:obj,proceed:function(){
return _1d9[_1da].apply(_1d9,to.args);
}};
to.args=_1d5;
var _1e0=parseInt(marr[4]);
var _1e1=((!isNaN(_1e0))&&(marr[4]!==null)&&(typeof marr[4]!="undefined"));
if(marr[5]){
var rate=parseInt(marr[5]);
var cur=new Date();
var _1e4=false;
if((marr["last"])&&((cur-marr.last)<=rate)){
if(dojo.event._canTimeout){
if(marr["delayTimer"]){
clearTimeout(marr.delayTimer);
}
var tod=parseInt(rate*2);
var mcpy=dojo.lang.shallowCopy(marr);
marr.delayTimer=setTimeout(function(){
mcpy[5]=0;
_1d7(mcpy);
},tod);
}
return;
}else{
marr.last=cur;
}
}
if(_1dc){
_1db[_1dc].call(_1db,to);
}else{
if((_1e1)&&((dojo.render.html)||(dojo.render.svg))){
dj_global["setTimeout"](function(){
if(msg){
_1d9[_1da].call(_1d9,to);
}else{
_1d9[_1da].apply(_1d9,args);
}
},_1e0);
}else{
if(msg){
_1d9[_1da].call(_1d9,to);
}else{
_1d9[_1da].apply(_1d9,args);
}
}
}
};
var _1e7=function(){
if(this.squelch){
try{
return _1d7.apply(this,arguments);
}
catch(e){
dojo.debug(e);
}
}else{
return _1d7.apply(this,arguments);
}
};
if((this["before"])&&(this.before.length>0)){
dojo.lang.forEach(this.before.concat(new Array()),_1e7);
}
var _1e8;
try{
if((this["around"])&&(this.around.length>0)){
var mi=new dojo.event.MethodInvocation(this,obj,args);
_1e8=mi.proceed();
}else{
if(this.methodfunc){
_1e8=this.object[this.methodname].apply(this.object,args);
}
}
}
catch(e){
if(!this.squelch){
dojo.debug(e,"when calling",this.methodname,"on",this.object,"with arguments",args);
dojo.raise(e);
}
}
if((this["after"])&&(this.after.length>0)){
dojo.lang.forEach(this.after.concat(new Array()),_1e7);
}
return (this.methodfunc)?_1e8:null;
},getArr:function(kind){
var type="after";
if((typeof kind=="string")&&(kind.indexOf("before")!=-1)){
type="before";
}else{
if(kind=="around"){
type="around";
}
}
if(!this[type]){
this[type]=[];
}
return this[type];
},kwAddAdvice:function(args){
this.addAdvice(args["adviceObj"],args["adviceFunc"],args["aroundObj"],args["aroundFunc"],args["adviceType"],args["precedence"],args["once"],args["delay"],args["rate"],args["adviceMsg"]);
},addAdvice:function(_1ed,_1ee,_1ef,_1f0,_1f1,_1f2,once,_1f4,rate,_1f6){
var arr=this.getArr(_1f1);
if(!arr){
dojo.raise("bad this: "+this);
}
var ao=[_1ed,_1ee,_1ef,_1f0,_1f4,rate,_1f6];
if(once){
if(this.hasAdvice(_1ed,_1ee,_1f1,arr)>=0){
return;
}
}
if(_1f2=="first"){
arr.unshift(ao);
}else{
arr.push(ao);
}
},hasAdvice:function(_1f9,_1fa,_1fb,arr){
if(!arr){
arr=this.getArr(_1fb);
}
var ind=-1;
for(var x=0;x<arr.length;x++){
var aao=(typeof _1fa=="object")?(new String(_1fa)).toString():_1fa;
var a1o=(typeof arr[x][1]=="object")?(new String(arr[x][1])).toString():arr[x][1];
if((arr[x][0]==_1f9)&&(a1o==aao)){
ind=x;
}
}
return ind;
},removeAdvice:function(_201,_202,_203,once){
var arr=this.getArr(_203);
var ind=this.hasAdvice(_201,_202,_203,arr);
if(ind==-1){
return false;
}
while(ind!=-1){
arr.splice(ind,1);
if(once){
break;
}
ind=this.hasAdvice(_201,_202,_203,arr);
}
return true;
}});
dojo.provide("dojo.event.topic");
dojo.event.topic=new function(){
this.topics={};
this.getTopic=function(_207){
if(!this.topics[_207]){
this.topics[_207]=new this.TopicImpl(_207);
}
return this.topics[_207];
};
this.registerPublisher=function(_208,obj,_20a){
var _208=this.getTopic(_208);
_208.registerPublisher(obj,_20a);
};
this.subscribe=function(_20b,obj,_20d){
var _20b=this.getTopic(_20b);
_20b.subscribe(obj,_20d);
};
this.unsubscribe=function(_20e,obj,_210){
var _20e=this.getTopic(_20e);
_20e.unsubscribe(obj,_210);
};
this.destroy=function(_211){
this.getTopic(_211).destroy();
delete this.topics[_211];
};
this.publishApply=function(_212,args){
var _212=this.getTopic(_212);
_212.sendMessage.apply(_212,args);
};
this.publish=function(_214,_215){
var _214=this.getTopic(_214);
var args=[];
for(var x=1;x<arguments.length;x++){
args.push(arguments[x]);
}
_214.sendMessage.apply(_214,args);
};
};
dojo.event.topic.TopicImpl=function(_218){
this.topicName=_218;
this.subscribe=function(_219,_21a){
var tf=_21a||_219;
var to=(!_21a)?dj_global:_219;
return dojo.event.kwConnect({srcObj:this,srcFunc:"sendMessage",adviceObj:to,adviceFunc:tf});
};
this.unsubscribe=function(_21d,_21e){
var tf=(!_21e)?_21d:_21e;
var to=(!_21e)?null:_21d;
return dojo.event.kwDisconnect({srcObj:this,srcFunc:"sendMessage",adviceObj:to,adviceFunc:tf});
};
this._getJoinPoint=function(){
return dojo.event.MethodJoinPoint.getForMethod(this,"sendMessage");
};
this.setSquelch=function(_221){
this._getJoinPoint().squelch=_221;
};
this.destroy=function(){
this._getJoinPoint().disconnect();
};
this.registerPublisher=function(_222,_223){
dojo.event.connect(_222,_223,this,"sendMessage");
};
this.sendMessage=function(_224){
};
};
dojo.provide("dojo.event.browser");
dojo._ie_clobber=new function(){
this.clobberNodes=[];
function nukeProp(node,prop){
try{
node[prop]=null;
}
catch(e){
}
try{
delete node[prop];
}
catch(e){
}
try{
node.removeAttribute(prop);
}
catch(e){
}
}
this.clobber=function(_227){
var na;
var tna;
if(_227){
tna=_227.all||_227.getElementsByTagName("*");
na=[_227];
for(var x=0;x<tna.length;x++){
if(tna[x]["__doClobber__"]){
na.push(tna[x]);
}
}
}else{
try{
window.onload=null;
}
catch(e){
}
na=(this.clobberNodes.length)?this.clobberNodes:document.all;
}
tna=null;
var _22b={};
for(var i=na.length-1;i>=0;i=i-1){
var el=na[i];
try{
if(el&&el["__clobberAttrs__"]){
for(var j=0;j<el.__clobberAttrs__.length;j++){
nukeProp(el,el.__clobberAttrs__[j]);
}
nukeProp(el,"__clobberAttrs__");
nukeProp(el,"__doClobber__");
}
}
catch(e){
}
}
na=null;
};
};
if(dojo.render.html.ie){
dojo.addOnUnload(function(){
dojo._ie_clobber.clobber();
try{
if((dojo["widget"])&&(dojo.widget["manager"])){
dojo.widget.manager.destroyAll();
}
}
catch(e){
}
if(dojo.widget){
for(var name in dojo.widget._templateCache){
if(dojo.widget._templateCache[name].node){
dojo.dom.destroyNode(dojo.widget._templateCache[name].node);
dojo.widget._templateCache[name].node=null;
delete dojo.widget._templateCache[name].node;
}
}
}
try{
window.onload=null;
}
catch(e){
}
try{
window.onunload=null;
}
catch(e){
}
dojo._ie_clobber.clobberNodes=[];
});
}
dojo.event.browser=new function(){
var _230=0;
this.normalizedEventName=function(_231){
switch(_231){
case "CheckboxStateChange":
case "DOMAttrModified":
case "DOMMenuItemActive":
case "DOMMenuItemInactive":
case "DOMMouseScroll":
case "DOMNodeInserted":
case "DOMNodeRemoved":
case "RadioStateChange":
return _231;
break;
default:
return _231.toLowerCase();
break;
}
};
this.clean=function(node){
if(dojo.render.html.ie){
dojo._ie_clobber.clobber(node);
}
};
this.addClobberNode=function(node){
if(!dojo.render.html.ie){
return;
}
if(!node["__doClobber__"]){
node.__doClobber__=true;
dojo._ie_clobber.clobberNodes.push(node);
node.__clobberAttrs__=[];
}
};
this.addClobberNodeAttrs=function(node,_235){
if(!dojo.render.html.ie){
return;
}
this.addClobberNode(node);
for(var x=0;x<_235.length;x++){
node.__clobberAttrs__.push(_235[x]);
}
};
this.removeListener=function(node,_238,fp,_23a){
if(!_23a){
var _23a=false;
}
_238=dojo.event.browser.normalizedEventName(_238);
if((_238=="onkey")||(_238=="key")){
if(dojo.render.html.ie){
this.removeListener(node,"onkeydown",fp,_23a);
}
_238="onkeypress";
}
if(_238.substr(0,2)=="on"){
_238=_238.substr(2);
}
if(node.removeEventListener){
node.removeEventListener(_238,fp,_23a);
}
};
this.addListener=function(node,_23c,fp,_23e,_23f){
if(!node){
return;
}
if(!_23e){
var _23e=false;
}
_23c=dojo.event.browser.normalizedEventName(_23c);
if((_23c=="onkey")||(_23c=="key")){
if(dojo.render.html.ie){
this.addListener(node,"onkeydown",fp,_23e,_23f);
}
_23c="onkeypress";
}
if(_23c.substr(0,2)!="on"){
_23c="on"+_23c;
}
if(!_23f){
var _240=function(evt){
if(!evt){
evt=window.event;
}
var ret=fp(dojo.event.browser.fixEvent(evt,this));
if(_23e){
dojo.event.browser.stopEvent(evt);
}
return ret;
};
}else{
_240=fp;
}
if(node.addEventListener){
node.addEventListener(_23c.substr(2),_240,_23e);
return _240;
}else{
if(typeof node[_23c]=="function"){
var _243=node[_23c];
node[_23c]=function(e){
_243(e);
return _240(e);
};
}else{
node[_23c]=_240;
}
if(dojo.render.html.ie){
this.addClobberNodeAttrs(node,[_23c]);
}
return _240;
}
};
this.isEvent=function(obj){
return (typeof obj!="undefined")&&(obj)&&(typeof Event!="undefined")&&(obj.eventPhase);
};
this.currentEvent=null;
this.callListener=function(_246,_247){
if(typeof _246!="function"){
dojo.raise("listener not a function: "+_246);
}
dojo.event.browser.currentEvent.currentTarget=_247;
return _246.call(_247,dojo.event.browser.currentEvent);
};
this._stopPropagation=function(){
dojo.event.browser.currentEvent.cancelBubble=true;
};
this._preventDefault=function(){
dojo.event.browser.currentEvent.returnValue=false;
};
this.keys={KEY_BACKSPACE:8,KEY_TAB:9,KEY_CLEAR:12,KEY_ENTER:13,KEY_SHIFT:16,KEY_CTRL:17,KEY_ALT:18,KEY_PAUSE:19,KEY_CAPS_LOCK:20,KEY_ESCAPE:27,KEY_SPACE:32,KEY_PAGE_UP:33,KEY_PAGE_DOWN:34,KEY_END:35,KEY_HOME:36,KEY_LEFT_ARROW:37,KEY_UP_ARROW:38,KEY_RIGHT_ARROW:39,KEY_DOWN_ARROW:40,KEY_INSERT:45,KEY_DELETE:46,KEY_HELP:47,KEY_LEFT_WINDOW:91,KEY_RIGHT_WINDOW:92,KEY_SELECT:93,KEY_NUMPAD_0:96,KEY_NUMPAD_1:97,KEY_NUMPAD_2:98,KEY_NUMPAD_3:99,KEY_NUMPAD_4:100,KEY_NUMPAD_5:101,KEY_NUMPAD_6:102,KEY_NUMPAD_7:103,KEY_NUMPAD_8:104,KEY_NUMPAD_9:105,KEY_NUMPAD_MULTIPLY:106,KEY_NUMPAD_PLUS:107,KEY_NUMPAD_ENTER:108,KEY_NUMPAD_MINUS:109,KEY_NUMPAD_PERIOD:110,KEY_NUMPAD_DIVIDE:111,KEY_F1:112,KEY_F2:113,KEY_F3:114,KEY_F4:115,KEY_F5:116,KEY_F6:117,KEY_F7:118,KEY_F8:119,KEY_F9:120,KEY_F10:121,KEY_F11:122,KEY_F12:123,KEY_F13:124,KEY_F14:125,KEY_F15:126,KEY_NUM_LOCK:144,KEY_SCROLL_LOCK:145};
this.revKeys=[];
for(var key in this.keys){
this.revKeys[this.keys[key]]=key;
}
this.fixEvent=function(evt,_24a){
if(!evt){
if(window["event"]){
evt=window.event;
}
}
if((evt["type"])&&(evt["type"].indexOf("key")==0)){
evt.keys=this.revKeys;
for(var key in this.keys){
evt[key]=this.keys[key];
}
if(evt["type"]=="keydown"&&dojo.render.html.ie){
switch(evt.keyCode){
case evt.KEY_SHIFT:
case evt.KEY_CTRL:
case evt.KEY_ALT:
case evt.KEY_CAPS_LOCK:
case evt.KEY_LEFT_WINDOW:
case evt.KEY_RIGHT_WINDOW:
case evt.KEY_SELECT:
case evt.KEY_NUM_LOCK:
case evt.KEY_SCROLL_LOCK:
case evt.KEY_NUMPAD_0:
case evt.KEY_NUMPAD_1:
case evt.KEY_NUMPAD_2:
case evt.KEY_NUMPAD_3:
case evt.KEY_NUMPAD_4:
case evt.KEY_NUMPAD_5:
case evt.KEY_NUMPAD_6:
case evt.KEY_NUMPAD_7:
case evt.KEY_NUMPAD_8:
case evt.KEY_NUMPAD_9:
case evt.KEY_NUMPAD_PERIOD:
break;
case evt.KEY_NUMPAD_MULTIPLY:
case evt.KEY_NUMPAD_PLUS:
case evt.KEY_NUMPAD_ENTER:
case evt.KEY_NUMPAD_MINUS:
case evt.KEY_NUMPAD_DIVIDE:
break;
case evt.KEY_PAUSE:
case evt.KEY_TAB:
case evt.KEY_BACKSPACE:
case evt.KEY_ENTER:
case evt.KEY_ESCAPE:
case evt.KEY_PAGE_UP:
case evt.KEY_PAGE_DOWN:
case evt.KEY_END:
case evt.KEY_HOME:
case evt.KEY_LEFT_ARROW:
case evt.KEY_UP_ARROW:
case evt.KEY_RIGHT_ARROW:
case evt.KEY_DOWN_ARROW:
case evt.KEY_INSERT:
case evt.KEY_DELETE:
case evt.KEY_F1:
case evt.KEY_F2:
case evt.KEY_F3:
case evt.KEY_F4:
case evt.KEY_F5:
case evt.KEY_F6:
case evt.KEY_F7:
case evt.KEY_F8:
case evt.KEY_F9:
case evt.KEY_F10:
case evt.KEY_F11:
case evt.KEY_F12:
case evt.KEY_F12:
case evt.KEY_F13:
case evt.KEY_F14:
case evt.KEY_F15:
case evt.KEY_CLEAR:
case evt.KEY_HELP:
evt.key=evt.keyCode;
break;
default:
if(evt.ctrlKey||evt.altKey){
var _24c=evt.keyCode;
if(_24c>=65&&_24c<=90&&evt.shiftKey==false){
_24c+=32;
}
if(_24c>=1&&_24c<=26&&evt.ctrlKey){
_24c+=96;
}
evt.key=String.fromCharCode(_24c);
}
}
}else{
if(evt["type"]=="keypress"){
if(dojo.render.html.opera){
if(evt.which==0){
evt.key=evt.keyCode;
}else{
if(evt.which>0){
switch(evt.which){
case evt.KEY_SHIFT:
case evt.KEY_CTRL:
case evt.KEY_ALT:
case evt.KEY_CAPS_LOCK:
case evt.KEY_NUM_LOCK:
case evt.KEY_SCROLL_LOCK:
break;
case evt.KEY_PAUSE:
case evt.KEY_TAB:
case evt.KEY_BACKSPACE:
case evt.KEY_ENTER:
case evt.KEY_ESCAPE:
evt.key=evt.which;
break;
default:
var _24c=evt.which;
if((evt.ctrlKey||evt.altKey||evt.metaKey)&&(evt.which>=65&&evt.which<=90&&evt.shiftKey==false)){
_24c+=32;
}
evt.key=String.fromCharCode(_24c);
}
}
}
}else{
if(dojo.render.html.ie){
if(!evt.ctrlKey&&!evt.altKey&&evt.keyCode>=evt.KEY_SPACE){
evt.key=String.fromCharCode(evt.keyCode);
}
}else{
if(dojo.render.html.safari){
switch(evt.keyCode){
case 25:
evt.key=evt.KEY_TAB;
evt.shift=true;
break;
case 63232:
evt.key=evt.KEY_UP_ARROW;
break;
case 63233:
evt.key=evt.KEY_DOWN_ARROW;
break;
case 63234:
evt.key=evt.KEY_LEFT_ARROW;
break;
case 63235:
evt.key=evt.KEY_RIGHT_ARROW;
break;
case 63236:
evt.key=evt.KEY_F1;
break;
case 63237:
evt.key=evt.KEY_F2;
break;
case 63238:
evt.key=evt.KEY_F3;
break;
case 63239:
evt.key=evt.KEY_F4;
break;
case 63240:
evt.key=evt.KEY_F5;
break;
case 63241:
evt.key=evt.KEY_F6;
break;
case 63242:
evt.key=evt.KEY_F7;
break;
case 63243:
evt.key=evt.KEY_F8;
break;
case 63244:
evt.key=evt.KEY_F9;
break;
case 63245:
evt.key=evt.KEY_F10;
break;
case 63246:
evt.key=evt.KEY_F11;
break;
case 63247:
evt.key=evt.KEY_F12;
break;
case 63250:
evt.key=evt.KEY_PAUSE;
break;
case 63272:
evt.key=evt.KEY_DELETE;
break;
case 63273:
evt.key=evt.KEY_HOME;
break;
case 63275:
evt.key=evt.KEY_END;
break;
case 63276:
evt.key=evt.KEY_PAGE_UP;
break;
case 63277:
evt.key=evt.KEY_PAGE_DOWN;
break;
case 63302:
evt.key=evt.KEY_INSERT;
break;
case 63248:
case 63249:
case 63289:
break;
default:
evt.key=evt.charCode>=evt.KEY_SPACE?String.fromCharCode(evt.charCode):evt.keyCode;
}
}else{
evt.key=evt.charCode>0?String.fromCharCode(evt.charCode):evt.keyCode;
}
}
}
}
}
}
if(dojo.render.html.ie){
if(!evt.target){
evt.target=evt.srcElement;
}
if(!evt.currentTarget){
evt.currentTarget=(_24a?_24a:evt.srcElement);
}
if(!evt.layerX){
evt.layerX=evt.offsetX;
}
if(!evt.layerY){
evt.layerY=evt.offsetY;
}
var doc=(evt.srcElement&&evt.srcElement.ownerDocument)?evt.srcElement.ownerDocument:document;
var _24e=((dojo.render.html.ie55)||(doc["compatMode"]=="BackCompat"))?doc.body:doc.documentElement;
if(!evt.pageX){
evt.pageX=evt.clientX+(_24e.scrollLeft||0);
}
if(!evt.pageY){
evt.pageY=evt.clientY+(_24e.scrollTop||0);
}
if(evt.type=="mouseover"){
evt.relatedTarget=evt.fromElement;
}
if(evt.type=="mouseout"){
evt.relatedTarget=evt.toElement;
}
this.currentEvent=evt;
evt.callListener=this.callListener;
evt.stopPropagation=this._stopPropagation;
evt.preventDefault=this._preventDefault;
}
return evt;
};
this.stopEvent=function(evt){
if(window.event){
evt.cancelBubble=true;
evt.returnValue=false;
}else{
evt.preventDefault();
evt.stopPropagation();
}
};
};
dojo.provide("dojo.event.*");
dojo.provide("dojo.event");
dojo.deprecated("dojo.event","replaced by dojo.event.*","0.5");
dojo.provide("dojo.string.common");
dojo.string.trim=function(str,wh){
if(!str.replace){
return str;
}
if(!str.length){
return str;
}
var re=(wh>0)?(/^\s+/):(wh<0)?(/\s+$/):(/^\s+|\s+$/g);
return str.replace(re,"");
};
dojo.string.trimStart=function(str){
return dojo.string.trim(str,1);
};
dojo.string.trimEnd=function(str){
return dojo.string.trim(str,-1);
};
dojo.string.repeat=function(str,_256,_257){
var out="";
for(var i=0;i<_256;i++){
out+=str;
if(_257&&i<_256-1){
out+=_257;
}
}
return out;
};
dojo.string.pad=function(str,len,c,dir){
var out=String(str);
if(!c){
c="0";
}
if(!dir){
dir=1;
}
while(out.length<len){
if(dir>0){
out=c+out;
}else{
out+=c;
}
}
return out;
};
dojo.string.padLeft=function(str,len,c){
return dojo.string.pad(str,len,c,1);
};
dojo.string.padRight=function(str,len,c){
return dojo.string.pad(str,len,c,-1);
};
dojo.provide("dojo.string.extras");
dojo.string.substituteParams=function(_265,hash){
var map=(typeof hash=="object")?hash:dojo.lang.toArray(arguments,1);
return _265.replace(/\%\{(\w+)\}/g,function(_268,key){
if(typeof (map[key])!="undefined"&&map[key]!=null){
return map[key];
}
dojo.raise("Substitution not found: "+key);
});
};
dojo.string.capitalize=function(str){
if(!dojo.lang.isString(str)){
return "";
}
if(arguments.length==0){
str=this;
}
var _26b=str.split(" ");
for(var i=0;i<_26b.length;i++){
_26b[i]=_26b[i].charAt(0).toUpperCase()+_26b[i].substring(1);
}
return _26b.join(" ");
};
dojo.string.isBlank=function(str){
if(!dojo.lang.isString(str)){
return true;
}
return (dojo.string.trim(str).length==0);
};
dojo.string.encodeAscii=function(str){
if(!dojo.lang.isString(str)){
return str;
}
var ret="";
var _270=escape(str);
var _271,re=/%u([0-9A-F]{4})/i;
while((_271=_270.match(re))){
var num=Number("0x"+_271[1]);
var _274=escape("&#"+num+";");
ret+=_270.substring(0,_271.index)+_274;
_270=_270.substring(_271.index+_271[0].length);
}
ret+=_270.replace(/\+/g,"%2B");
return ret;
};
dojo.string.escape=function(type,str){
var args=dojo.lang.toArray(arguments,1);
switch(type.toLowerCase()){
case "xml":
case "html":
case "xhtml":
return dojo.string.escapeXml.apply(this,args);
case "sql":
return dojo.string.escapeSql.apply(this,args);
case "regexp":
case "regex":
return dojo.string.escapeRegExp.apply(this,args);
case "javascript":
case "jscript":
case "js":
return dojo.string.escapeJavaScript.apply(this,args);
case "ascii":
return dojo.string.encodeAscii.apply(this,args);
default:
return str;
}
};
dojo.string.escapeXml=function(str,_279){
str=str.replace(/&/gm,"&amp;").replace(/</gm,"&lt;").replace(/>/gm,"&gt;").replace(/"/gm,"&quot;");
if(!_279){
str=str.replace(/'/gm,"&#39;");
}
return str;
};
dojo.string.escapeSql=function(str){
return str.replace(/'/gm,"''");
};
dojo.string.escapeRegExp=function(str){
return str.replace(/\\/gm,"\\\\").replace(/([\f\b\n\t\r[\^$|?*+(){}])/gm,"\\$1");
};
dojo.string.escapeJavaScript=function(str){
return str.replace(/(["'\f\b\n\t\r])/gm,"\\$1");
};
dojo.string.escapeString=function(str){
return ("\""+str.replace(/(["\\])/g,"\\$1")+"\"").replace(/[\f]/g,"\\f").replace(/[\b]/g,"\\b").replace(/[\n]/g,"\\n").replace(/[\t]/g,"\\t").replace(/[\r]/g,"\\r");
};
dojo.string.summary=function(str,len){
if(!len||str.length<=len){
return str;
}
return str.substring(0,len).replace(/\.+$/,"")+"...";
};
dojo.string.endsWith=function(str,end,_282){
if(_282){
str=str.toLowerCase();
end=end.toLowerCase();
}
if((str.length-end.length)<0){
return false;
}
return str.lastIndexOf(end)==str.length-end.length;
};
dojo.string.endsWithAny=function(str){
for(var i=1;i<arguments.length;i++){
if(dojo.string.endsWith(str,arguments[i])){
return true;
}
}
return false;
};
dojo.string.startsWith=function(str,_286,_287){
if(_287){
str=str.toLowerCase();
_286=_286.toLowerCase();
}
return str.indexOf(_286)==0;
};
dojo.string.startsWithAny=function(str){
for(var i=1;i<arguments.length;i++){
if(dojo.string.startsWith(str,arguments[i])){
return true;
}
}
return false;
};
dojo.string.has=function(str){
for(var i=1;i<arguments.length;i++){
if(str.indexOf(arguments[i])>-1){
return true;
}
}
return false;
};
dojo.string.normalizeNewlines=function(text,_28d){
if(_28d=="\n"){
text=text.replace(/\r\n/g,"\n");
text=text.replace(/\r/g,"\n");
}else{
if(_28d=="\r"){
text=text.replace(/\r\n/g,"\r");
text=text.replace(/\n/g,"\r");
}else{
text=text.replace(/([^\r])\n/g,"$1\r\n").replace(/\r([^\n])/g,"\r\n$1");
}
}
return text;
};
dojo.string.splitEscaped=function(str,_28f){
var _290=[];
for(var i=0,_292=0;i<str.length;i++){
if(str.charAt(i)=="\\"){
i++;
continue;
}
if(str.charAt(i)==_28f){
_290.push(str.substring(_292,i));
_292=i+1;
}
}
_290.push(str.substr(_292));
return _290;
};
dojo.provide("dojo.string");
dojo.provide("dojo.io.common");
dojo.io.transports=[];
dojo.io.hdlrFuncNames=["load","error","timeout"];
dojo.io.Request=function(url,_294,_295,_296){
if((arguments.length==1)&&(arguments[0].constructor==Object)){
this.fromKwArgs(arguments[0]);
}else{
this.url=url;
if(_294){
this.mimetype=_294;
}
if(_295){
this.transport=_295;
}
if(arguments.length>=4){
this.changeUrl=_296;
}
}
};
dojo.lang.extend(dojo.io.Request,{url:"",mimetype:"text/plain",method:"GET",content:undefined,transport:undefined,changeUrl:undefined,formNode:undefined,sync:false,bindSuccess:false,useCache:false,preventCache:false,load:function(type,data,_299,_29a){
},error:function(type,_29c,_29d,_29e){
},timeout:function(type,_2a0,_2a1,_2a2){
},handle:function(type,data,_2a5,_2a6){
},timeoutSeconds:0,abort:function(){
},fromKwArgs:function(_2a7){
if(_2a7["url"]){
_2a7.url=_2a7.url.toString();
}
if(_2a7["formNode"]){
_2a7.formNode=dojo.byId(_2a7.formNode);
}
if(!_2a7["method"]&&_2a7["formNode"]&&_2a7["formNode"].method){
_2a7.method=_2a7["formNode"].method;
}
if(!_2a7["handle"]&&_2a7["handler"]){
_2a7.handle=_2a7.handler;
}
if(!_2a7["load"]&&_2a7["loaded"]){
_2a7.load=_2a7.loaded;
}
if(!_2a7["changeUrl"]&&_2a7["changeURL"]){
_2a7.changeUrl=_2a7.changeURL;
}
_2a7.encoding=dojo.lang.firstValued(_2a7["encoding"],djConfig["bindEncoding"],"");
_2a7.sendTransport=dojo.lang.firstValued(_2a7["sendTransport"],djConfig["ioSendTransport"],false);
var _2a8=dojo.lang.isFunction;
for(var x=0;x<dojo.io.hdlrFuncNames.length;x++){
var fn=dojo.io.hdlrFuncNames[x];
if(_2a7[fn]&&_2a8(_2a7[fn])){
continue;
}
if(_2a7["handle"]&&_2a8(_2a7["handle"])){
_2a7[fn]=_2a7.handle;
}
}
dojo.lang.mixin(this,_2a7);
}});
dojo.io.Error=function(msg,type,num){
this.message=msg;
this.type=type||"unknown";
this.number=num||0;
};
dojo.io.transports.addTransport=function(name){
this.push(name);
this[name]=dojo.io[name];
};
dojo.io.bind=function(_2af){
if(!(_2af instanceof dojo.io.Request)){
try{
_2af=new dojo.io.Request(_2af);
}
catch(e){
dojo.debug(e);
}
}
var _2b0="";
if(_2af["transport"]){
_2b0=_2af["transport"];
if(!this[_2b0]){
dojo.io.sendBindError(_2af,"No dojo.io.bind() transport with name '"+_2af["transport"]+"'.");
return _2af;
}
if(!this[_2b0].canHandle(_2af)){
dojo.io.sendBindError(_2af,"dojo.io.bind() transport with name '"+_2af["transport"]+"' cannot handle this type of request.");
return _2af;
}
}else{
for(var x=0;x<dojo.io.transports.length;x++){
var tmp=dojo.io.transports[x];
if((this[tmp])&&(this[tmp].canHandle(_2af))){
_2b0=tmp;
break;
}
}
if(_2b0==""){
dojo.io.sendBindError(_2af,"None of the loaded transports for dojo.io.bind()"+" can handle the request.");
return _2af;
}
}
this[_2b0].bind(_2af);
_2af.bindSuccess=true;
return _2af;
};
dojo.io.sendBindError=function(_2b3,_2b4){
if((typeof _2b3.error=="function"||typeof _2b3.handle=="function")&&(typeof setTimeout=="function"||typeof setTimeout=="object")){
var _2b5=new dojo.io.Error(_2b4);
setTimeout(function(){
_2b3[(typeof _2b3.error=="function")?"error":"handle"]("error",_2b5,null,_2b3);
},50);
}else{
dojo.raise(_2b4);
}
};
dojo.io.queueBind=function(_2b6){
if(!(_2b6 instanceof dojo.io.Request)){
try{
_2b6=new dojo.io.Request(_2b6);
}
catch(e){
dojo.debug(e);
}
}
var _2b7=_2b6.load;
_2b6.load=function(){
dojo.io._queueBindInFlight=false;
var ret=_2b7.apply(this,arguments);
dojo.io._dispatchNextQueueBind();
return ret;
};
var _2b9=_2b6.error;
_2b6.error=function(){
dojo.io._queueBindInFlight=false;
var ret=_2b9.apply(this,arguments);
dojo.io._dispatchNextQueueBind();
return ret;
};
dojo.io._bindQueue.push(_2b6);
dojo.io._dispatchNextQueueBind();
return _2b6;
};
dojo.io._dispatchNextQueueBind=function(){
if(!dojo.io._queueBindInFlight){
dojo.io._queueBindInFlight=true;
if(dojo.io._bindQueue.length>0){
dojo.io.bind(dojo.io._bindQueue.shift());
}else{
dojo.io._queueBindInFlight=false;
}
}
};
dojo.io._bindQueue=[];
dojo.io._queueBindInFlight=false;
dojo.io.argsFromMap=function(map,_2bc,last){
var enc=/utf/i.test(_2bc||"")?encodeURIComponent:dojo.string.encodeAscii;
var _2bf=[];
var _2c0=new Object();
for(var name in map){
var _2c2=function(elt){
var val=enc(name)+"="+enc(elt);
_2bf[(last==name)?"push":"unshift"](val);
};
if(!_2c0[name]){
var _2c5=map[name];
if(dojo.lang.isArray(_2c5)){
dojo.lang.forEach(_2c5,_2c2);
}else{
_2c2(_2c5);
}
}
}
return _2bf.join("&");
};
dojo.io.setIFrameSrc=function(_2c6,src,_2c8){
try{
var r=dojo.render.html;
if(!_2c8){
if(r.safari){
_2c6.location=src;
}else{
frames[_2c6.name].location=src;
}
}else{
var idoc;
if(r.ie){
idoc=_2c6.contentWindow.document;
}else{
if(r.safari){
idoc=_2c6.document;
}else{
idoc=_2c6.contentWindow;
}
}
if(!idoc){
_2c6.location=src;
return;
}else{
idoc.location.replace(src);
}
}
}
catch(e){
dojo.debug(e);
dojo.debug("setIFrameSrc: "+e);
}
};
dojo.provide("dojo.dom");
dojo.dom.ELEMENT_NODE=1;
dojo.dom.ATTRIBUTE_NODE=2;
dojo.dom.TEXT_NODE=3;
dojo.dom.CDATA_SECTION_NODE=4;
dojo.dom.ENTITY_REFERENCE_NODE=5;
dojo.dom.ENTITY_NODE=6;
dojo.dom.PROCESSING_INSTRUCTION_NODE=7;
dojo.dom.COMMENT_NODE=8;
dojo.dom.DOCUMENT_NODE=9;
dojo.dom.DOCUMENT_TYPE_NODE=10;
dojo.dom.DOCUMENT_FRAGMENT_NODE=11;
dojo.dom.NOTATION_NODE=12;
dojo.dom.dojoml="http://www.dojotoolkit.org/2004/dojoml";
dojo.dom.xmlns={svg:"http://www.w3.org/2000/svg",smil:"http://www.w3.org/2001/SMIL20/",mml:"http://www.w3.org/1998/Math/MathML",cml:"http://www.xml-cml.org",xlink:"http://www.w3.org/1999/xlink",xhtml:"http://www.w3.org/1999/xhtml",xul:"http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul",xbl:"http://www.mozilla.org/xbl",fo:"http://www.w3.org/1999/XSL/Format",xsl:"http://www.w3.org/1999/XSL/Transform",xslt:"http://www.w3.org/1999/XSL/Transform",xi:"http://www.w3.org/2001/XInclude",xforms:"http://www.w3.org/2002/01/xforms",saxon:"http://icl.com/saxon",xalan:"http://xml.apache.org/xslt",xsd:"http://www.w3.org/2001/XMLSchema",dt:"http://www.w3.org/2001/XMLSchema-datatypes",xsi:"http://www.w3.org/2001/XMLSchema-instance",rdf:"http://www.w3.org/1999/02/22-rdf-syntax-ns#",rdfs:"http://www.w3.org/2000/01/rdf-schema#",dc:"http://purl.org/dc/elements/1.1/",dcq:"http://purl.org/dc/qualifiers/1.0","soap-env":"http://schemas.xmlsoap.org/soap/envelope/",wsdl:"http://schemas.xmlsoap.org/wsdl/",AdobeExtensions:"http://ns.adobe.com/AdobeSVGViewerExtensions/3.0/"};
dojo.dom.isNode=function(wh){
if(typeof Element=="function"){
try{
return wh instanceof Element;
}
catch(e){
}
}else{
return wh&&!isNaN(wh.nodeType);
}
};
dojo.dom.getUniqueId=function(){
var _2cc=dojo.doc();
do{
var id="dj_unique_"+(++arguments.callee._idIncrement);
}while(_2cc.getElementById(id));
return id;
};
dojo.dom.getUniqueId._idIncrement=0;
dojo.dom.firstElement=dojo.dom.getFirstChildElement=function(_2ce,_2cf){
var node=_2ce.firstChild;
while(node&&node.nodeType!=dojo.dom.ELEMENT_NODE){
node=node.nextSibling;
}
if(_2cf&&node&&node.tagName&&node.tagName.toLowerCase()!=_2cf.toLowerCase()){
node=dojo.dom.nextElement(node,_2cf);
}
return node;
};
dojo.dom.lastElement=dojo.dom.getLastChildElement=function(_2d1,_2d2){
var node=_2d1.lastChild;
while(node&&node.nodeType!=dojo.dom.ELEMENT_NODE){
node=node.previousSibling;
}
if(_2d2&&node&&node.tagName&&node.tagName.toLowerCase()!=_2d2.toLowerCase()){
node=dojo.dom.prevElement(node,_2d2);
}
return node;
};
dojo.dom.nextElement=dojo.dom.getNextSiblingElement=function(node,_2d5){
if(!node){
return null;
}
do{
node=node.nextSibling;
}while(node&&node.nodeType!=dojo.dom.ELEMENT_NODE);
if(node&&_2d5&&_2d5.toLowerCase()!=node.tagName.toLowerCase()){
return dojo.dom.nextElement(node,_2d5);
}
return node;
};
dojo.dom.prevElement=dojo.dom.getPreviousSiblingElement=function(node,_2d7){
if(!node){
return null;
}
if(_2d7){
_2d7=_2d7.toLowerCase();
}
do{
node=node.previousSibling;
}while(node&&node.nodeType!=dojo.dom.ELEMENT_NODE);
if(node&&_2d7&&_2d7.toLowerCase()!=node.tagName.toLowerCase()){
return dojo.dom.prevElement(node,_2d7);
}
return node;
};
dojo.dom.moveChildren=function(_2d8,_2d9,trim){
var _2db=0;
if(trim){
while(_2d8.hasChildNodes()&&_2d8.firstChild.nodeType==dojo.dom.TEXT_NODE){
_2d8.removeChild(_2d8.firstChild);
}
while(_2d8.hasChildNodes()&&_2d8.lastChild.nodeType==dojo.dom.TEXT_NODE){
_2d8.removeChild(_2d8.lastChild);
}
}
while(_2d8.hasChildNodes()){
_2d9.appendChild(_2d8.firstChild);
_2db++;
}
return _2db;
};
dojo.dom.copyChildren=function(_2dc,_2dd,trim){
var _2df=_2dc.cloneNode(true);
return this.moveChildren(_2df,_2dd,trim);
};
dojo.dom.replaceChildren=function(node,_2e1){
var _2e2=[];
if(dojo.render.html.ie){
for(var i=0;i<node.childNodes.length;i++){
_2e2.push(node.childNodes[i]);
}
}
dojo.dom.removeChildren(node);
node.appendChild(_2e1);
for(var i=0;i<_2e2.length;i++){
dojo.dom.destroyNode(_2e2[i]);
}
};
dojo.dom.removeChildren=function(node){
var _2e5=node.childNodes.length;
while(node.hasChildNodes()){
dojo.dom.removeNode(node.firstChild);
}
return _2e5;
};
dojo.dom.replaceNode=function(node,_2e7){
return node.parentNode.replaceChild(_2e7,node);
};
dojo.dom.destroyNode=function(node){
if(node.parentNode){
node=dojo.dom.removeNode(node);
}
if(node.nodeType!=3){
if(dojo.evalObjPath("dojo.event.browser.clean",false)){
dojo.event.browser.clean(node);
}
if(dojo.render.html.ie){
node.outerHTML="";
}
}
};
dojo.dom.removeNode=function(node){
if(node&&node.parentNode){
return node.parentNode.removeChild(node);
}
};
dojo.dom.getAncestors=function(node,_2eb,_2ec){
var _2ed=[];
var _2ee=(_2eb&&(_2eb instanceof Function||typeof _2eb=="function"));
while(node){
if(!_2ee||_2eb(node)){
_2ed.push(node);
}
if(_2ec&&_2ed.length>0){
return _2ed[0];
}
node=node.parentNode;
}
if(_2ec){
return null;
}
return _2ed;
};
dojo.dom.getAncestorsByTag=function(node,tag,_2f1){
tag=tag.toLowerCase();
return dojo.dom.getAncestors(node,function(el){
return ((el.tagName)&&(el.tagName.toLowerCase()==tag));
},_2f1);
};
dojo.dom.getFirstAncestorByTag=function(node,tag){
return dojo.dom.getAncestorsByTag(node,tag,true);
};
dojo.dom.isDescendantOf=function(node,_2f6,_2f7){
if(_2f7&&node){
node=node.parentNode;
}
while(node){
if(node==_2f6){
return true;
}
node=node.parentNode;
}
return false;
};
dojo.dom.innerXML=function(node){
if(node.innerXML){
return node.innerXML;
}else{
if(node.xml){
return node.xml;
}else{
if(typeof XMLSerializer!="undefined"){
return (new XMLSerializer()).serializeToString(node);
}
}
}
};
dojo.dom.createDocument=function(){
var doc=null;
var _2fa=dojo.doc();
if(!dj_undef("ActiveXObject")){
var _2fb=["MSXML2","Microsoft","MSXML","MSXML3"];
for(var i=0;i<_2fb.length;i++){
try{
doc=new ActiveXObject(_2fb[i]+".XMLDOM");
}
catch(e){
}
if(doc){
break;
}
}
}else{
if((_2fa.implementation)&&(_2fa.implementation.createDocument)){
doc=_2fa.implementation.createDocument("","",null);
}
}
return doc;
};
dojo.dom.createDocumentFromText=function(str,_2fe){
if(!_2fe){
_2fe="text/xml";
}
if(!dj_undef("DOMParser")){
var _2ff=new DOMParser();
return _2ff.parseFromString(str,_2fe);
}else{
if(!dj_undef("ActiveXObject")){
var _300=dojo.dom.createDocument();
if(_300){
_300.async=false;
_300.loadXML(str);
return _300;
}else{
dojo.debug("toXml didn't work?");
}
}else{
var _301=dojo.doc();
if(_301.createElement){
var tmp=_301.createElement("xml");
tmp.innerHTML=str;
if(_301.implementation&&_301.implementation.createDocument){
var _303=_301.implementation.createDocument("foo","",null);
for(var i=0;i<tmp.childNodes.length;i++){
_303.importNode(tmp.childNodes.item(i),true);
}
return _303;
}
return ((tmp.document)&&(tmp.document.firstChild?tmp.document.firstChild:tmp));
}
}
}
return null;
};
dojo.dom.prependChild=function(node,_306){
if(_306.firstChild){
_306.insertBefore(node,_306.firstChild);
}else{
_306.appendChild(node);
}
return true;
};
dojo.dom.insertBefore=function(node,ref,_309){
if((_309!=true)&&(node===ref||node.nextSibling===ref)){
return false;
}
var _30a=ref.parentNode;
_30a.insertBefore(node,ref);
return true;
};
dojo.dom.insertAfter=function(node,ref,_30d){
var pn=ref.parentNode;
if(ref==pn.lastChild){
if((_30d!=true)&&(node===ref)){
return false;
}
pn.appendChild(node);
}else{
return this.insertBefore(node,ref.nextSibling,_30d);
}
return true;
};
dojo.dom.insertAtPosition=function(node,ref,_311){
if((!node)||(!ref)||(!_311)){
return false;
}
switch(_311.toLowerCase()){
case "before":
return dojo.dom.insertBefore(node,ref);
case "after":
return dojo.dom.insertAfter(node,ref);
case "first":
if(ref.firstChild){
return dojo.dom.insertBefore(node,ref.firstChild);
}else{
ref.appendChild(node);
return true;
}
break;
default:
ref.appendChild(node);
return true;
}
};
dojo.dom.insertAtIndex=function(node,_313,_314){
var _315=_313.childNodes;
if(!_315.length||_315.length==_314){
_313.appendChild(node);
return true;
}
if(_314==0){
return dojo.dom.prependChild(node,_313);
}
return dojo.dom.insertAfter(node,_315[_314-1]);
};
dojo.dom.textContent=function(node,text){
if(arguments.length>1){
var _318=dojo.doc();
dojo.dom.replaceChildren(node,_318.createTextNode(text));
return text;
}else{
if(node.textContent!=undefined){
return node.textContent;
}
var _319="";
if(node==null){
return _319;
}
for(var i=0;i<node.childNodes.length;i++){
switch(node.childNodes[i].nodeType){
case 1:
case 5:
_319+=dojo.dom.textContent(node.childNodes[i]);
break;
case 3:
case 2:
case 4:
_319+=node.childNodes[i].nodeValue;
break;
default:
break;
}
}
return _319;
}
};
dojo.dom.hasParent=function(node){
return Boolean(node&&node.parentNode&&dojo.dom.isNode(node.parentNode));
};
dojo.dom.isTag=function(node){
if(node&&node.tagName){
for(var i=1;i<arguments.length;i++){
if(node.tagName==String(arguments[i])){
return String(arguments[i]);
}
}
}
return "";
};
dojo.dom.setAttributeNS=function(elem,_31f,_320,_321){
if(elem==null||((elem==undefined)&&(typeof elem=="undefined"))){
dojo.raise("No element given to dojo.dom.setAttributeNS");
}
if(!((elem.setAttributeNS==undefined)&&(typeof elem.setAttributeNS=="undefined"))){
elem.setAttributeNS(_31f,_320,_321);
}else{
var _322=elem.ownerDocument;
var _323=_322.createNode(2,_320,_31f);
_323.nodeValue=_321;
elem.setAttributeNode(_323);
}
};
dojo.provide("dojo.undo.browser");
try{
if((!djConfig["preventBackButtonFix"])&&(!dojo.hostenv.post_load_)){
document.write("<iframe style='border: 0px; width: 1px; height: 1px; position: absolute; bottom: 0px; right: 0px; visibility: visible;' name='djhistory' id='djhistory' src='"+(dojo.hostenv.getBaseScriptUri()+"iframe_history.html")+"'></iframe>");
}
}
catch(e){
}
if(dojo.render.html.opera){
dojo.debug("Opera is not supported with dojo.undo.browser, so back/forward detection will not work.");
}
dojo.undo.browser={initialHref:(!dj_undef("window"))?window.location.href:"",initialHash:(!dj_undef("window"))?window.location.hash:"",moveForward:false,historyStack:[],forwardStack:[],historyIframe:null,bookmarkAnchor:null,locationTimer:null,setInitialState:function(args){
this.initialState=this._createState(this.initialHref,args,this.initialHash);
},addToHistory:function(args){
this.forwardStack=[];
var hash=null;
var url=null;
if(!this.historyIframe){
this.historyIframe=window.frames["djhistory"];
}
if(!this.bookmarkAnchor){
this.bookmarkAnchor=document.createElement("a");
dojo.body().appendChild(this.bookmarkAnchor);
this.bookmarkAnchor.style.display="none";
}
if(args["changeUrl"]){
hash="#"+((args["changeUrl"]!==true)?args["changeUrl"]:(new Date()).getTime());
if(this.historyStack.length==0&&this.initialState.urlHash==hash){
this.initialState=this._createState(url,args,hash);
return;
}else{
if(this.historyStack.length>0&&this.historyStack[this.historyStack.length-1].urlHash==hash){
this.historyStack[this.historyStack.length-1]=this._createState(url,args,hash);
return;
}
}
this.changingUrl=true;
setTimeout("window.location.href = '"+hash+"'; dojo.undo.browser.changingUrl = false;",1);
this.bookmarkAnchor.href=hash;
if(dojo.render.html.ie){
url=this._loadIframeHistory();
var _328=args["back"]||args["backButton"]||args["handle"];
var tcb=function(_32a){
if(window.location.hash!=""){
setTimeout("window.location.href = '"+hash+"';",1);
}
_328.apply(this,[_32a]);
};
if(args["back"]){
args.back=tcb;
}else{
if(args["backButton"]){
args.backButton=tcb;
}else{
if(args["handle"]){
args.handle=tcb;
}
}
}
var _32b=args["forward"]||args["forwardButton"]||args["handle"];
var tfw=function(_32d){
if(window.location.hash!=""){
window.location.href=hash;
}
if(_32b){
_32b.apply(this,[_32d]);
}
};
if(args["forward"]){
args.forward=tfw;
}else{
if(args["forwardButton"]){
args.forwardButton=tfw;
}else{
if(args["handle"]){
args.handle=tfw;
}
}
}
}else{
if(dojo.render.html.moz){
if(!this.locationTimer){
this.locationTimer=setInterval("dojo.undo.browser.checkLocation();",200);
}
}
}
}else{
url=this._loadIframeHistory();
}
this.historyStack.push(this._createState(url,args,hash));
},checkLocation:function(){
if(!this.changingUrl){
var hsl=this.historyStack.length;
if((window.location.hash==this.initialHash||window.location.href==this.initialHref)&&(hsl==1)){
this.handleBackButton();
return;
}
if(this.forwardStack.length>0){
if(this.forwardStack[this.forwardStack.length-1].urlHash==window.location.hash){
this.handleForwardButton();
return;
}
}
if((hsl>=2)&&(this.historyStack[hsl-2])){
if(this.historyStack[hsl-2].urlHash==window.location.hash){
this.handleBackButton();
return;
}
}
}
},iframeLoaded:function(evt,_330){
if(!dojo.render.html.opera){
var _331=this._getUrlQuery(_330.href);
if(_331==null){
if(this.historyStack.length==1){
this.handleBackButton();
}
return;
}
if(this.moveForward){
this.moveForward=false;
return;
}
if(this.historyStack.length>=2&&_331==this._getUrlQuery(this.historyStack[this.historyStack.length-2].url)){
this.handleBackButton();
}else{
if(this.forwardStack.length>0&&_331==this._getUrlQuery(this.forwardStack[this.forwardStack.length-1].url)){
this.handleForwardButton();
}
}
}
},handleBackButton:function(){
var _332=this.historyStack.pop();
if(!_332){
return;
}
var last=this.historyStack[this.historyStack.length-1];
if(!last&&this.historyStack.length==0){
last=this.initialState;
}
if(last){
if(last.kwArgs["back"]){
last.kwArgs["back"]();
}else{
if(last.kwArgs["backButton"]){
last.kwArgs["backButton"]();
}else{
if(last.kwArgs["handle"]){
last.kwArgs.handle("back");
}
}
}
}
this.forwardStack.push(_332);
},handleForwardButton:function(){
var last=this.forwardStack.pop();
if(!last){
return;
}
if(last.kwArgs["forward"]){
last.kwArgs.forward();
}else{
if(last.kwArgs["forwardButton"]){
last.kwArgs.forwardButton();
}else{
if(last.kwArgs["handle"]){
last.kwArgs.handle("forward");
}
}
}
this.historyStack.push(last);
},_createState:function(url,args,hash){
return {"url":url,"kwArgs":args,"urlHash":hash};
},_getUrlQuery:function(url){
var _339=url.split("?");
if(_339.length<2){
return null;
}else{
return _339[1];
}
},_loadIframeHistory:function(){
var url=dojo.hostenv.getBaseScriptUri()+"iframe_history.html?"+(new Date()).getTime();
this.moveForward=true;
dojo.io.setIFrameSrc(this.historyIframe,url,false);
return url;
}};
dojo.provide("dojo.io.BrowserIO");
if(!dj_undef("window")){
dojo.io.checkChildrenForFile=function(node){
var _33c=false;
var _33d=node.getElementsByTagName("input");
dojo.lang.forEach(_33d,function(_33e){
if(_33c){
return;
}
if(_33e.getAttribute("type")=="file"){
_33c=true;
}
});
return _33c;
};
dojo.io.formHasFile=function(_33f){
return dojo.io.checkChildrenForFile(_33f);
};
dojo.io.updateNode=function(node,_341){
node=dojo.byId(node);
var args=_341;
if(dojo.lang.isString(_341)){
args={url:_341};
}
args.mimetype="text/html";
args.load=function(t,d,e){
while(node.firstChild){
dojo.dom.destroyNode(node.firstChild);
}
node.innerHTML=d;
};
dojo.io.bind(args);
};
dojo.io.formFilter=function(node){
var type=(node.type||"").toLowerCase();
return !node.disabled&&node.name&&!dojo.lang.inArray(["file","submit","image","reset","button"],type);
};
dojo.io.encodeForm=function(_348,_349,_34a){
if((!_348)||(!_348.tagName)||(!_348.tagName.toLowerCase()=="form")){
dojo.raise("Attempted to encode a non-form element.");
}
if(!_34a){
_34a=dojo.io.formFilter;
}
var enc=/utf/i.test(_349||"")?encodeURIComponent:dojo.string.encodeAscii;
var _34c=[];
for(var i=0;i<_348.elements.length;i++){
var elm=_348.elements[i];
if(!elm||elm.tagName.toLowerCase()=="fieldset"||!_34a(elm)){
continue;
}
var name=enc(elm.name);
var type=elm.type.toLowerCase();
if(type=="select-multiple"){
for(var j=0;j<elm.options.length;j++){
if(elm.options[j].selected){
_34c.push(name+"="+enc(elm.options[j].value));
}
}
}else{
if(dojo.lang.inArray(["radio","checkbox"],type)){
if(elm.checked){
_34c.push(name+"="+enc(elm.value));
}
}else{
_34c.push(name+"="+enc(elm.value));
}
}
}
var _352=_348.getElementsByTagName("input");
for(var i=0;i<_352.length;i++){
var _353=_352[i];
if(_353.type.toLowerCase()=="image"&&_353.form==_348&&_34a(_353)){
var name=enc(_353.name);
_34c.push(name+"="+enc(_353.value));
_34c.push(name+".x=0");
_34c.push(name+".y=0");
}
}
return _34c.join("&")+"&";
};
dojo.io.FormBind=function(args){
this.bindArgs={};
if(args&&args.formNode){
this.init(args);
}else{
if(args){
this.init({formNode:args});
}
}
};
dojo.lang.extend(dojo.io.FormBind,{form:null,bindArgs:null,clickedButton:null,init:function(args){
var form=dojo.byId(args.formNode);
if(!form||!form.tagName||form.tagName.toLowerCase()!="form"){
throw new Error("FormBind: Couldn't apply, invalid form");
}else{
if(this.form==form){
return;
}else{
if(this.form){
throw new Error("FormBind: Already applied to a form");
}
}
}
dojo.lang.mixin(this.bindArgs,args);
this.form=form;
this.connect(form,"onsubmit","submit");
for(var i=0;i<form.elements.length;i++){
var node=form.elements[i];
if(node&&node.type&&dojo.lang.inArray(["submit","button"],node.type.toLowerCase())){
this.connect(node,"onclick","click");
}
}
var _359=form.getElementsByTagName("input");
for(var i=0;i<_359.length;i++){
var _35a=_359[i];
if(_35a.type.toLowerCase()=="image"&&_35a.form==form){
this.connect(_35a,"onclick","click");
}
}
},onSubmit:function(form){
return true;
},submit:function(e){
e.preventDefault();
if(this.onSubmit(this.form)){
dojo.io.bind(dojo.lang.mixin(this.bindArgs,{formFilter:dojo.lang.hitch(this,"formFilter")}));
}
},click:function(e){
var node=e.currentTarget;
if(node.disabled){
return;
}
this.clickedButton=node;
},formFilter:function(node){
var type=(node.type||"").toLowerCase();
var _361=false;
if(node.disabled||!node.name){
_361=false;
}else{
if(dojo.lang.inArray(["submit","button","image"],type)){
if(!this.clickedButton){
this.clickedButton=node;
}
_361=node==this.clickedButton;
}else{
_361=!dojo.lang.inArray(["file","submit","reset","button"],type);
}
}
return _361;
},connect:function(_362,_363,_364){
if(dojo.evalObjPath("dojo.event.connect")){
dojo.event.connect(_362,_363,this,_364);
}else{
var fcn=dojo.lang.hitch(this,_364);
_362[_363]=function(e){
if(!e){
e=window.event;
}
if(!e.currentTarget){
e.currentTarget=e.srcElement;
}
if(!e.preventDefault){
e.preventDefault=function(){
window.event.returnValue=false;
};
}
fcn(e);
};
}
}});
dojo.io.XMLHTTPTransport=new function(){
var _367=this;
var _368={};
this.useCache=false;
this.preventCache=false;
function getCacheKey(url,_36a,_36b){
return url+"|"+_36a+"|"+_36b.toLowerCase();
}
function addToCache(url,_36d,_36e,http){
_368[getCacheKey(url,_36d,_36e)]=http;
}
function getFromCache(url,_371,_372){
return _368[getCacheKey(url,_371,_372)];
}
this.clearCache=function(){
_368={};
};
function doLoad(_373,http,url,_376,_377){
if(((http.status>=200)&&(http.status<300))||(http.status==304)||(location.protocol=="file:"&&(http.status==0||http.status==undefined))||(location.protocol=="chrome:"&&(http.status==0||http.status==undefined))){
var ret;
if(_373.method.toLowerCase()=="head"){
var _379=http.getAllResponseHeaders();
ret={};
ret.toString=function(){
return _379;
};
var _37a=_379.split(/[\r\n]+/g);
for(var i=0;i<_37a.length;i++){
var pair=_37a[i].match(/^([^:]+)\s*:\s*(.+)$/i);
if(pair){
ret[pair[1]]=pair[2];
}
}
}else{
if(_373.mimetype=="text/javascript"){
try{
ret=dj_eval(http.responseText);
}
catch(e){
dojo.debug(e);
dojo.debug(http.responseText);
ret=null;
}
}else{
if(_373.mimetype=="text/json"||_373.mimetype=="application/json"){
try{
ret=dj_eval("("+http.responseText+")");
}
catch(e){
dojo.debug(e);
dojo.debug(http.responseText);
ret=false;
}
}else{
if((_373.mimetype=="application/xml")||(_373.mimetype=="text/xml")){
ret=http.responseXML;
if(!ret||typeof ret=="string"||!http.getResponseHeader("Content-Type")){
ret=dojo.dom.createDocumentFromText(http.responseText);
}
}else{
ret=http.responseText;
}
}
}
}
if(_377){
addToCache(url,_376,_373.method,http);
}
_373[(typeof _373.load=="function")?"load":"handle"]("load",ret,http,_373);
}else{
var _37d=new dojo.io.Error("XMLHttpTransport Error: "+http.status+" "+http.statusText);
_373[(typeof _373.error=="function")?"error":"handle"]("error",_37d,http,_373);
}
}
function setHeaders(http,_37f){
if(_37f["headers"]){
for(var _380 in _37f["headers"]){
if(_380.toLowerCase()=="content-type"&&!_37f["contentType"]){
_37f["contentType"]=_37f["headers"][_380];
}else{
http.setRequestHeader(_380,_37f["headers"][_380]);
}
}
}
}
this.inFlight=[];
this.inFlightTimer=null;
this.startWatchingInFlight=function(){
if(!this.inFlightTimer){
this.inFlightTimer=setTimeout("dojo.io.XMLHTTPTransport.watchInFlight();",10);
}
};
this.watchInFlight=function(){
var now=null;
if(!dojo.hostenv._blockAsync&&!_367._blockAsync){
for(var x=this.inFlight.length-1;x>=0;x--){
try{
var tif=this.inFlight[x];
if(!tif||tif.http._aborted||!tif.http.readyState){
this.inFlight.splice(x,1);
continue;
}
if(4==tif.http.readyState){
this.inFlight.splice(x,1);
doLoad(tif.req,tif.http,tif.url,tif.query,tif.useCache);
}else{
if(tif.startTime){
if(!now){
now=(new Date()).getTime();
}
if(tif.startTime+(tif.req.timeoutSeconds*1000)<now){
if(typeof tif.http.abort=="function"){
tif.http.abort();
}
this.inFlight.splice(x,1);
tif.req[(typeof tif.req.timeout=="function")?"timeout":"handle"]("timeout",null,tif.http,tif.req);
}
}
}
}
catch(e){
try{
var _384=new dojo.io.Error("XMLHttpTransport.watchInFlight Error: "+e);
tif.req[(typeof tif.req.error=="function")?"error":"handle"]("error",_384,tif.http,tif.req);
}
catch(e2){
dojo.debug("XMLHttpTransport error callback failed: "+e2);
}
}
}
}
clearTimeout(this.inFlightTimer);
if(this.inFlight.length==0){
this.inFlightTimer=null;
return;
}
this.inFlightTimer=setTimeout("dojo.io.XMLHTTPTransport.watchInFlight();",10);
};
var _385=dojo.hostenv.getXmlhttpObject()?true:false;
this.canHandle=function(_386){
return _385&&dojo.lang.inArray(["text/plain","text/html","application/xml","text/xml","text/javascript","text/json","application/json"],(_386["mimetype"].toLowerCase()||""))&&!(_386["formNode"]&&dojo.io.formHasFile(_386["formNode"]));
};
this.multipartBoundary="45309FFF-BD65-4d50-99C9-36986896A96F";
this.bind=function(_387){
if(!_387["url"]){
if(!_387["formNode"]&&(_387["backButton"]||_387["back"]||_387["changeUrl"]||_387["watchForURL"])&&(!djConfig.preventBackButtonFix)){
dojo.deprecated("Using dojo.io.XMLHTTPTransport.bind() to add to browser history without doing an IO request","Use dojo.undo.browser.addToHistory() instead.","0.4");
dojo.undo.browser.addToHistory(_387);
return true;
}
}
var url=_387.url;
var _389="";
if(_387["formNode"]){
var ta=_387.formNode.getAttribute("action");
if((ta)&&(!_387["url"])){
url=ta;
}
var tp=_387.formNode.getAttribute("method");
if((tp)&&(!_387["method"])){
_387.method=tp;
}
_389+=dojo.io.encodeForm(_387.formNode,_387.encoding,_387["formFilter"]);
}
if(url.indexOf("#")>-1){
dojo.debug("Warning: dojo.io.bind: stripping hash values from url:",url);
url=url.split("#")[0];
}
if(_387["file"]){
_387.method="post";
}
if(!_387["method"]){
_387.method="get";
}
if(_387.method.toLowerCase()=="get"){
_387.multipart=false;
}else{
if(_387["file"]){
_387.multipart=true;
}else{
if(!_387["multipart"]){
_387.multipart=false;
}
}
}
if(_387["backButton"]||_387["back"]||_387["changeUrl"]){
dojo.undo.browser.addToHistory(_387);
}
var _38c=_387["content"]||{};
if(_387.sendTransport){
_38c["dojo.transport"]="xmlhttp";
}
do{
if(_387.postContent){
_389=_387.postContent;
break;
}
if(_38c){
_389+=dojo.io.argsFromMap(_38c,_387.encoding);
}
if(_387.method.toLowerCase()=="get"||!_387.multipart){
break;
}
var t=[];
if(_389.length){
var q=_389.split("&");
for(var i=0;i<q.length;++i){
if(q[i].length){
var p=q[i].split("=");
t.push("--"+this.multipartBoundary,"Content-Disposition: form-data; name=\""+p[0]+"\"","",p[1]);
}
}
}
if(_387.file){
if(dojo.lang.isArray(_387.file)){
for(var i=0;i<_387.file.length;++i){
var o=_387.file[i];
t.push("--"+this.multipartBoundary,"Content-Disposition: form-data; name=\""+o.name+"\"; filename=\""+("fileName" in o?o.fileName:o.name)+"\"","Content-Type: "+("contentType" in o?o.contentType:"application/octet-stream"),"",o.content);
}
}else{
var o=_387.file;
t.push("--"+this.multipartBoundary,"Content-Disposition: form-data; name=\""+o.name+"\"; filename=\""+("fileName" in o?o.fileName:o.name)+"\"","Content-Type: "+("contentType" in o?o.contentType:"application/octet-stream"),"",o.content);
}
}
if(t.length){
t.push("--"+this.multipartBoundary+"--","");
_389=t.join("\r\n");
}
}while(false);
var _392=_387["sync"]?false:true;
var _393=_387["preventCache"]||(this.preventCache==true&&_387["preventCache"]!=false);
var _394=_387["useCache"]==true||(this.useCache==true&&_387["useCache"]!=false);
if(!_393&&_394){
var _395=getFromCache(url,_389,_387.method);
if(_395){
doLoad(_387,_395,url,_389,false);
return;
}
}
var http=dojo.hostenv.getXmlhttpObject(_387);
var _397=false;
if(_392){
var _398=this.inFlight.push({"req":_387,"http":http,"url":url,"query":_389,"useCache":_394,"startTime":_387.timeoutSeconds?(new Date()).getTime():0});
this.startWatchingInFlight();
}else{
_367._blockAsync=true;
}
if(_387.method.toLowerCase()=="post"){
if(!_387.user){
http.open("POST",url,_392);
}else{
http.open("POST",url,_392,_387.user,_387.password);
}
setHeaders(http,_387);
http.setRequestHeader("Content-Type",_387.multipart?("multipart/form-data; boundary="+this.multipartBoundary):(_387.contentType||"application/x-www-form-urlencoded"));
try{
http.send(_389);
}
catch(e){
if(typeof http.abort=="function"){
http.abort();
}
doLoad(_387,{status:404},url,_389,_394);
}
}else{
var _399=url;
if(_389!=""){
_399+=(_399.indexOf("?")>-1?"&":"?")+_389;
}
if(_393){
_399+=(dojo.string.endsWithAny(_399,"?","&")?"":(_399.indexOf("?")>-1?"&":"?"))+"dojo.preventCache="+new Date().valueOf();
}
if(!_387.user){
http.open(_387.method.toUpperCase(),_399,_392);
}else{
http.open(_387.method.toUpperCase(),_399,_392,_387.user,_387.password);
}
setHeaders(http,_387);
try{
http.send(null);
}
catch(e){
if(typeof http.abort=="function"){
http.abort();
}
doLoad(_387,{status:404},url,_389,_394);
}
}
if(!_392){
doLoad(_387,http,url,_389,_394);
_367._blockAsync=false;
}
_387.abort=function(){
try{
http._aborted=true;
}
catch(e){
}
return http.abort();
};
return;
};
dojo.io.transports.addTransport("XMLHTTPTransport");
};
}
dojo.provide("dojo.io.cookie");
dojo.io.cookie.setCookie=function(name,_39b,days,path,_39e,_39f){
var _3a0=-1;
if((typeof days=="number")&&(days>=0)){
var d=new Date();
d.setTime(d.getTime()+(days*24*60*60*1000));
_3a0=d.toGMTString();
}
_39b=escape(_39b);
document.cookie=name+"="+_39b+";"+(_3a0!=-1?" expires="+_3a0+";":"")+(path?"path="+path:"")+(_39e?"; domain="+_39e:"")+(_39f?"; secure":"");
};
dojo.io.cookie.set=dojo.io.cookie.setCookie;
dojo.io.cookie.getCookie=function(name){
var idx=document.cookie.lastIndexOf(name+"=");
if(idx==-1){
return null;
}
var _3a4=document.cookie.substring(idx+name.length+1);
var end=_3a4.indexOf(";");
if(end==-1){
end=_3a4.length;
}
_3a4=_3a4.substring(0,end);
_3a4=unescape(_3a4);
return _3a4;
};
dojo.io.cookie.get=dojo.io.cookie.getCookie;
dojo.io.cookie.deleteCookie=function(name){
dojo.io.cookie.setCookie(name,"-",0);
};
dojo.io.cookie.setObjectCookie=function(name,obj,days,path,_3ab,_3ac,_3ad){
if(arguments.length==5){
_3ad=_3ab;
_3ab=null;
_3ac=null;
}
var _3ae=[],_3af,_3b0="";
if(!_3ad){
_3af=dojo.io.cookie.getObjectCookie(name);
}
if(days>=0){
if(!_3af){
_3af={};
}
for(var prop in obj){
if(obj[prop]==null){
delete _3af[prop];
}else{
if((typeof obj[prop]=="string")||(typeof obj[prop]=="number")){
_3af[prop]=obj[prop];
}
}
}
prop=null;
for(var prop in _3af){
_3ae.push(escape(prop)+"="+escape(_3af[prop]));
}
_3b0=_3ae.join("&");
}
dojo.io.cookie.setCookie(name,_3b0,days,path,_3ab,_3ac);
};
dojo.io.cookie.getObjectCookie=function(name){
var _3b3=null,_3b4=dojo.io.cookie.getCookie(name);
if(_3b4){
_3b3={};
var _3b5=_3b4.split("&");
for(var i=0;i<_3b5.length;i++){
var pair=_3b5[i].split("=");
var _3b8=pair[1];
if(isNaN(_3b8)){
_3b8=unescape(pair[1]);
}
_3b3[unescape(pair[0])]=_3b8;
}
}
return _3b3;
};
dojo.io.cookie.isSupported=function(){
if(typeof navigator.cookieEnabled!="boolean"){
dojo.io.cookie.setCookie("__TestingYourBrowserForCookieSupport__","CookiesAllowed",90,null);
var _3b9=dojo.io.cookie.getCookie("__TestingYourBrowserForCookieSupport__");
navigator.cookieEnabled=(_3b9=="CookiesAllowed");
if(navigator.cookieEnabled){
this.deleteCookie("__TestingYourBrowserForCookieSupport__");
}
}
return navigator.cookieEnabled;
};
if(!dojo.io.cookies){
dojo.io.cookies=dojo.io.cookie;
}
dojo.provide("dojo.io.*");
dojo.provide("dojo.io");
dojo.deprecated("dojo.io","replaced by dojo.io.*","0.5");
dojo.provide("dojo.AdapterRegistry");
dojo.AdapterRegistry=function(_3ba){
this.pairs=[];
this.returnWrappers=_3ba||false;
};
dojo.lang.extend(dojo.AdapterRegistry,{register:function(name,_3bc,wrap,_3be,_3bf){
var type=(_3bf)?"unshift":"push";
this.pairs[type]([name,_3bc,wrap,_3be]);
},match:function(){
for(var i=0;i<this.pairs.length;i++){
var pair=this.pairs[i];
if(pair[1].apply(this,arguments)){
if((pair[3])||(this.returnWrappers)){
return pair[2];
}else{
return pair[2].apply(this,arguments);
}
}
}
throw new Error("No match found");
},unregister:function(name){
for(var i=0;i<this.pairs.length;i++){
var pair=this.pairs[i];
if(pair[0]==name){
this.pairs.splice(i,1);
return true;
}
}
return false;
}});
dojo.provide("dojo.json");
dojo.json={jsonRegistry:new dojo.AdapterRegistry(),register:function(name,_3c7,wrap,_3c9){
dojo.json.jsonRegistry.register(name,_3c7,wrap,_3c9);
},evalJson:function(json){
try{
return eval("("+json+")");
}
catch(e){
dojo.debug(e);
return json;
}
},serialize:function(o){
var _3cc=typeof (o);
if(_3cc=="undefined"){
return "undefined";
}else{
if((_3cc=="number")||(_3cc=="boolean")){
return o+"";
}else{
if(o===null){
return "null";
}
}
}
if(_3cc=="string"){
return dojo.string.escapeString(o);
}
var me=arguments.callee;
var _3ce;
if(typeof (o.__json__)=="function"){
_3ce=o.__json__();
if(o!==_3ce){
return me(_3ce);
}
}
if(typeof (o.json)=="function"){
_3ce=o.json();
if(o!==_3ce){
return me(_3ce);
}
}
if(_3cc!="function"&&typeof (o.length)=="number"){
var res=[];
for(var i=0;i<o.length;i++){
var val=me(o[i]);
if(typeof (val)!="string"){
val="undefined";
}
res.push(val);
}
return "["+res.join(",")+"]";
}
try{
window.o=o;
_3ce=dojo.json.jsonRegistry.match(o);
return me(_3ce);
}
catch(e){
}
if(_3cc=="function"){
return null;
}
res=[];
for(var k in o){
var _3d3;
if(typeof (k)=="number"){
_3d3="\""+k+"\"";
}else{
if(typeof (k)=="string"){
_3d3=dojo.string.escapeString(k);
}else{
continue;
}
}
val=me(o[k]);
if(typeof (val)!="string"){
continue;
}
res.push(_3d3+":"+val);
}
return "{"+res.join(",")+"}";
}};
dojo.provide("dojo.html.common");
dojo.lang.mixin(dojo.html,dojo.dom);
dojo.html.body=function(){
dojo.deprecated("dojo.html.body() moved to dojo.body()","0.5");
return dojo.body();
};
dojo.html.getEventTarget=function(evt){
if(!evt){
evt=dojo.global().event||{};
}
var t=(evt.srcElement?evt.srcElement:(evt.target?evt.target:null));
while((t)&&(t.nodeType!=1)){
t=t.parentNode;
}
return t;
};
dojo.html.getViewport=function(){
var _3d6=dojo.global();
var _3d7=dojo.doc();
var w=0;
var h=0;
if(dojo.render.html.mozilla){
w=_3d7.documentElement.clientWidth;
h=_3d6.innerHeight;
}else{
if(!dojo.render.html.opera&&_3d6.innerWidth){
w=_3d6.innerWidth;
h=_3d6.innerHeight;
}else{
if(!dojo.render.html.opera&&dojo.exists(_3d7,"documentElement.clientWidth")){
var w2=_3d7.documentElement.clientWidth;
if(!w||w2&&w2<w){
w=w2;
}
h=_3d7.documentElement.clientHeight;
}else{
if(dojo.body().clientWidth){
w=dojo.body().clientWidth;
h=dojo.body().clientHeight;
}
}
}
}
return {width:w,height:h};
};
dojo.html.getScroll=function(){
var _3db=dojo.global();
var _3dc=dojo.doc();
var top=_3db.pageYOffset||_3dc.documentElement.scrollTop||dojo.body().scrollTop||0;
var left=_3db.pageXOffset||_3dc.documentElement.scrollLeft||dojo.body().scrollLeft||0;
return {top:top,left:left,offset:{x:left,y:top}};
};
dojo.html.getParentByType=function(node,type){
var _3e1=dojo.doc();
var _3e2=dojo.byId(node);
type=type.toLowerCase();
while((_3e2)&&(_3e2.nodeName.toLowerCase()!=type)){
if(_3e2==(_3e1["body"]||_3e1["documentElement"])){
return null;
}
_3e2=_3e2.parentNode;
}
return _3e2;
};
dojo.html.getAttribute=function(node,attr){
node=dojo.byId(node);
if((!node)||(!node.getAttribute)){
return null;
}
var ta=typeof attr=="string"?attr:new String(attr);
var v=node.getAttribute(ta.toUpperCase());
if((v)&&(typeof v=="string")&&(v!="")){
return v;
}
if(v&&v.value){
return v.value;
}
if((node.getAttributeNode)&&(node.getAttributeNode(ta))){
return (node.getAttributeNode(ta)).value;
}else{
if(node.getAttribute(ta)){
return node.getAttribute(ta);
}else{
if(node.getAttribute(ta.toLowerCase())){
return node.getAttribute(ta.toLowerCase());
}
}
}
return null;
};
dojo.html.hasAttribute=function(node,attr){
return dojo.html.getAttribute(dojo.byId(node),attr)?true:false;
};
dojo.html.getCursorPosition=function(e){
e=e||dojo.global().event;
var _3ea={x:0,y:0};
if(e.pageX||e.pageY){
_3ea.x=e.pageX;
_3ea.y=e.pageY;
}else{
var de=dojo.doc().documentElement;
var db=dojo.body();
_3ea.x=e.clientX+((de||db)["scrollLeft"])-((de||db)["clientLeft"]);
_3ea.y=e.clientY+((de||db)["scrollTop"])-((de||db)["clientTop"]);
}
return _3ea;
};
dojo.html.isTag=function(node){
node=dojo.byId(node);
if(node&&node.tagName){
for(var i=1;i<arguments.length;i++){
if(node.tagName.toLowerCase()==String(arguments[i]).toLowerCase()){
return String(arguments[i]).toLowerCase();
}
}
}
return "";
};
if(dojo.render.html.ie&&!dojo.render.html.ie70){
if(window.location.href.substr(0,6).toLowerCase()!="https:"){
(function(){
var _3ef=dojo.doc().createElement("script");
_3ef.src="javascript:'dojo.html.createExternalElement=function(doc, tag){ return doc.createElement(tag); }'";
dojo.doc().getElementsByTagName("head")[0].appendChild(_3ef);
})();
}
}else{
dojo.html.createExternalElement=function(doc,tag){
return doc.createElement(tag);
};
}
dojo.html._callDeprecated=function(_3f2,_3f3,args,_3f5,_3f6){
dojo.deprecated("dojo.html."+_3f2,"replaced by dojo.html."+_3f3+"("+(_3f5?"node, {"+_3f5+": "+_3f5+"}":"")+")"+(_3f6?"."+_3f6:""),"0.5");
var _3f7=[];
if(_3f5){
var _3f8={};
_3f8[_3f5]=args[1];
_3f7.push(args[0]);
_3f7.push(_3f8);
}else{
_3f7=args;
}
var ret=dojo.html[_3f3].apply(dojo.html,args);
if(_3f6){
return ret[_3f6];
}else{
return ret;
}
};
dojo.html.getViewportWidth=function(){
return dojo.html._callDeprecated("getViewportWidth","getViewport",arguments,null,"width");
};
dojo.html.getViewportHeight=function(){
return dojo.html._callDeprecated("getViewportHeight","getViewport",arguments,null,"height");
};
dojo.html.getViewportSize=function(){
return dojo.html._callDeprecated("getViewportSize","getViewport",arguments);
};
dojo.html.getScrollTop=function(){
return dojo.html._callDeprecated("getScrollTop","getScroll",arguments,null,"top");
};
dojo.html.getScrollLeft=function(){
return dojo.html._callDeprecated("getScrollLeft","getScroll",arguments,null,"left");
};
dojo.html.getScrollOffset=function(){
return dojo.html._callDeprecated("getScrollOffset","getScroll",arguments,null,"offset");
};
dojo.provide("dojo.uri.Uri");
dojo.uri=new function(){
this.dojoUri=function(uri){
return new dojo.uri.Uri(dojo.hostenv.getBaseScriptUri(),uri);
};
this.moduleUri=function(_3fb,uri){
var loc=dojo.hostenv.getModuleSymbols(_3fb).join("/");
if(!loc){
return null;
}
if(loc.lastIndexOf("/")!=loc.length-1){
loc+="/";
}
return new dojo.uri.Uri(dojo.hostenv.getBaseScriptUri()+loc,uri);
};
this.Uri=function(){
var uri=arguments[0];
for(var i=1;i<arguments.length;i++){
if(!arguments[i]){
continue;
}
var _400=new dojo.uri.Uri(arguments[i].toString());
var _401=new dojo.uri.Uri(uri.toString());
if((_400.path=="")&&(_400.scheme==null)&&(_400.authority==null)&&(_400.query==null)){
if(_400.fragment!=null){
_401.fragment=_400.fragment;
}
_400=_401;
}else{
if(_400.scheme==null){
_400.scheme=_401.scheme;
if(_400.authority==null){
_400.authority=_401.authority;
if(_400.path.charAt(0)!="/"){
var path=_401.path.substring(0,_401.path.lastIndexOf("/")+1)+_400.path;
var segs=path.split("/");
for(var j=0;j<segs.length;j++){
if(segs[j]=="."){
if(j==segs.length-1){
segs[j]="";
}else{
segs.splice(j,1);
j--;
}
}else{
if(j>0&&!(j==1&&segs[0]=="")&&segs[j]==".."&&segs[j-1]!=".."){
if(j==segs.length-1){
segs.splice(j,1);
segs[j-1]="";
}else{
segs.splice(j-1,2);
j-=2;
}
}
}
}
_400.path=segs.join("/");
}
}
}
}
uri="";
if(_400.scheme!=null){
uri+=_400.scheme+":";
}
if(_400.authority!=null){
uri+="//"+_400.authority;
}
uri+=_400.path;
if(_400.query!=null){
uri+="?"+_400.query;
}
if(_400.fragment!=null){
uri+="#"+_400.fragment;
}
}
this.uri=uri.toString();
var _405="^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$";
var r=this.uri.match(new RegExp(_405));
this.scheme=r[2]||(r[1]?"":null);
this.authority=r[4]||(r[3]?"":null);
this.path=r[5];
this.query=r[7]||(r[6]?"":null);
this.fragment=r[9]||(r[8]?"":null);
if(this.authority!=null){
_405="^((([^:]+:)?([^@]+))@)?([^:]*)(:([0-9]+))?$";
r=this.authority.match(new RegExp(_405));
this.user=r[3]||null;
this.password=r[4]||null;
this.host=r[5];
this.port=r[7]||null;
}
this.toString=function(){
return this.uri;
};
};
};
dojo.provide("dojo.html.style");
dojo.html.getClass=function(node){
node=dojo.byId(node);
if(!node){
return "";
}
var cs="";
if(node.className){
cs=node.className;
}else{
if(dojo.html.hasAttribute(node,"class")){
cs=dojo.html.getAttribute(node,"class");
}
}
return cs.replace(/^\s+|\s+$/g,"");
};
dojo.html.getClasses=function(node){
var c=dojo.html.getClass(node);
return (c=="")?[]:c.split(/\s+/g);
};
dojo.html.hasClass=function(node,_40c){
return (new RegExp("(^|\\s+)"+_40c+"(\\s+|$)")).test(dojo.html.getClass(node));
};
dojo.html.prependClass=function(node,_40e){
_40e+=" "+dojo.html.getClass(node);
return dojo.html.setClass(node,_40e);
};
dojo.html.addClass=function(node,_410){
if(dojo.html.hasClass(node,_410)){
return false;
}
_410=(dojo.html.getClass(node)+" "+_410).replace(/^\s+|\s+$/g,"");
return dojo.html.setClass(node,_410);
};
dojo.html.setClass=function(node,_412){
node=dojo.byId(node);
var cs=new String(_412);
try{
if(typeof node.className=="string"){
node.className=cs;
}else{
if(node.setAttribute){
node.setAttribute("class",_412);
node.className=cs;
}else{
return false;
}
}
}
catch(e){
dojo.debug("dojo.html.setClass() failed",e);
}
return true;
};
dojo.html.removeClass=function(node,_415,_416){
try{
if(!_416){
var _417=dojo.html.getClass(node).replace(new RegExp("(^|\\s+)"+_415+"(\\s+|$)"),"$1$2");
}else{
var _417=dojo.html.getClass(node).replace(_415,"");
}
dojo.html.setClass(node,_417);
}
catch(e){
dojo.debug("dojo.html.removeClass() failed",e);
}
return true;
};
dojo.html.replaceClass=function(node,_419,_41a){
dojo.html.removeClass(node,_41a);
dojo.html.addClass(node,_419);
};
dojo.html.classMatchType={ContainsAll:0,ContainsAny:1,IsOnly:2};
dojo.html.getElementsByClass=function(_41b,_41c,_41d,_41e,_41f){
_41f=false;
var _420=dojo.doc();
_41c=dojo.byId(_41c)||_420;
var _421=_41b.split(/\s+/g);
var _422=[];
if(_41e!=1&&_41e!=2){
_41e=0;
}
var _423=new RegExp("(\\s|^)(("+_421.join(")|(")+"))(\\s|$)");
var _424=_421.join(" ").length;
var _425=[];
if(!_41f&&_420.evaluate){
var _426=".//"+(_41d||"*")+"[contains(";
if(_41e!=dojo.html.classMatchType.ContainsAny){
_426+="concat(' ',@class,' '), ' "+_421.join(" ') and contains(concat(' ',@class,' '), ' ")+" ')";
if(_41e==2){
_426+=" and string-length(@class)="+_424+"]";
}else{
_426+="]";
}
}else{
_426+="concat(' ',@class,' '), ' "+_421.join(" ') or contains(concat(' ',@class,' '), ' ")+" ')]";
}
var _427=_420.evaluate(_426,_41c,null,XPathResult.ANY_TYPE,null);
var _428=_427.iterateNext();
while(_428){
try{
_425.push(_428);
_428=_427.iterateNext();
}
catch(e){
break;
}
}
return _425;
}else{
if(!_41d){
_41d="*";
}
_425=_41c.getElementsByTagName(_41d);
var node,i=0;
outer:
while(node=_425[i++]){
var _42b=dojo.html.getClasses(node);
if(_42b.length==0){
continue outer;
}
var _42c=0;
for(var j=0;j<_42b.length;j++){
if(_423.test(_42b[j])){
if(_41e==dojo.html.classMatchType.ContainsAny){
_422.push(node);
continue outer;
}else{
_42c++;
}
}else{
if(_41e==dojo.html.classMatchType.IsOnly){
continue outer;
}
}
}
if(_42c==_421.length){
if((_41e==dojo.html.classMatchType.IsOnly)&&(_42c==_42b.length)){
_422.push(node);
}else{
if(_41e==dojo.html.classMatchType.ContainsAll){
_422.push(node);
}
}
}
}
return _422;
}
};
dojo.html.getElementsByClassName=dojo.html.getElementsByClass;
dojo.html.toCamelCase=function(_42e){
var arr=_42e.split("-"),cc=arr[0];
for(var i=1;i<arr.length;i++){
cc+=arr[i].charAt(0).toUpperCase()+arr[i].substring(1);
}
return cc;
};
dojo.html.toSelectorCase=function(_432){
return _432.replace(/([A-Z])/g,"-$1").toLowerCase();
};
dojo.html.getComputedStyle=function(node,_434,_435){
node=dojo.byId(node);
var _434=dojo.html.toSelectorCase(_434);
var _436=dojo.html.toCamelCase(_434);
if(!node||!node.style){
return _435;
}else{
if(document.defaultView&&dojo.html.isDescendantOf(node,node.ownerDocument)){
try{
var cs=document.defaultView.getComputedStyle(node,"");
if(cs){
return cs.getPropertyValue(_434);
}
}
catch(e){
if(node.style.getPropertyValue){
return node.style.getPropertyValue(_434);
}else{
return _435;
}
}
}else{
if(node.currentStyle){
return node.currentStyle[_436];
}
}
}
if(node.style.getPropertyValue){
return node.style.getPropertyValue(_434);
}else{
return _435;
}
};
dojo.html.getStyleProperty=function(node,_439){
node=dojo.byId(node);
return (node&&node.style?node.style[dojo.html.toCamelCase(_439)]:undefined);
};
dojo.html.getStyle=function(node,_43b){
var _43c=dojo.html.getStyleProperty(node,_43b);
return (_43c?_43c:dojo.html.getComputedStyle(node,_43b));
};
dojo.html.setStyle=function(node,_43e,_43f){
node=dojo.byId(node);
if(node&&node.style){
var _440=dojo.html.toCamelCase(_43e);
node.style[_440]=_43f;
}
};
dojo.html.setStyleText=function(_441,text){
try{
_441.style.cssText=text;
}
catch(e){
_441.setAttribute("style",text);
}
};
dojo.html.copyStyle=function(_443,_444){
if(!_444.style.cssText){
_443.setAttribute("style",_444.getAttribute("style"));
}else{
_443.style.cssText=_444.style.cssText;
}
dojo.html.addClass(_443,dojo.html.getClass(_444));
};
dojo.html.getUnitValue=function(node,_446,_447){
var s=dojo.html.getComputedStyle(node,_446);
if((!s)||((s=="auto")&&(_447))){
return {value:0,units:"px"};
}
var _449=s.match(/(\-?[\d.]+)([a-z%]*)/i);
if(!_449){
return dojo.html.getUnitValue.bad;
}
return {value:Number(_449[1]),units:_449[2].toLowerCase()};
};
dojo.html.getUnitValue.bad={value:NaN,units:""};
dojo.html.getPixelValue=function(node,_44b,_44c){
var _44d=dojo.html.getUnitValue(node,_44b,_44c);
if(isNaN(_44d.value)){
return 0;
}
if((_44d.value)&&(_44d.units!="px")){
return NaN;
}
return _44d.value;
};
dojo.html.setPositivePixelValue=function(node,_44f,_450){
if(isNaN(_450)){
return false;
}
node.style[_44f]=Math.max(0,_450)+"px";
return true;
};
dojo.html.styleSheet=null;
dojo.html.insertCssRule=function(_451,_452,_453){
if(!dojo.html.styleSheet){
if(document.createStyleSheet){
dojo.html.styleSheet=document.createStyleSheet();
}else{
if(document.styleSheets[0]){
dojo.html.styleSheet=document.styleSheets[0];
}else{
return null;
}
}
}
if(arguments.length<3){
if(dojo.html.styleSheet.cssRules){
_453=dojo.html.styleSheet.cssRules.length;
}else{
if(dojo.html.styleSheet.rules){
_453=dojo.html.styleSheet.rules.length;
}else{
return null;
}
}
}
if(dojo.html.styleSheet.insertRule){
var rule=_451+" { "+_452+" }";
return dojo.html.styleSheet.insertRule(rule,_453);
}else{
if(dojo.html.styleSheet.addRule){
return dojo.html.styleSheet.addRule(_451,_452,_453);
}else{
return null;
}
}
};
dojo.html.removeCssRule=function(_455){
if(!dojo.html.styleSheet){
dojo.debug("no stylesheet defined for removing rules");
return false;
}
if(dojo.render.html.ie){
if(!_455){
_455=dojo.html.styleSheet.rules.length;
dojo.html.styleSheet.removeRule(_455);
}
}else{
if(document.styleSheets[0]){
if(!_455){
_455=dojo.html.styleSheet.cssRules.length;
}
dojo.html.styleSheet.deleteRule(_455);
}
}
return true;
};
dojo.html._insertedCssFiles=[];
dojo.html.insertCssFile=function(URI,doc,_458,_459){
if(!URI){
return;
}
if(!doc){
doc=document;
}
var _45a=dojo.hostenv.getText(URI,false,_459);
if(_45a===null){
return;
}
_45a=dojo.html.fixPathsInCssText(_45a,URI);
if(_458){
var idx=-1,node,ent=dojo.html._insertedCssFiles;
for(var i=0;i<ent.length;i++){
if((ent[i].doc==doc)&&(ent[i].cssText==_45a)){
idx=i;
node=ent[i].nodeRef;
break;
}
}
if(node){
var _45f=doc.getElementsByTagName("style");
for(var i=0;i<_45f.length;i++){
if(_45f[i]==node){
return;
}
}
dojo.html._insertedCssFiles.shift(idx,1);
}
}
var _460=dojo.html.insertCssText(_45a,doc);
dojo.html._insertedCssFiles.push({"doc":doc,"cssText":_45a,"nodeRef":_460});
if(_460&&djConfig.isDebug){
_460.setAttribute("dbgHref",URI);
}
return _460;
};
dojo.html.insertCssText=function(_461,doc,URI){
if(!_461){
return;
}
if(!doc){
doc=document;
}
if(URI){
_461=dojo.html.fixPathsInCssText(_461,URI);
}
var _464=doc.createElement("style");
_464.setAttribute("type","text/css");
var head=doc.getElementsByTagName("head")[0];
if(!head){
dojo.debug("No head tag in document, aborting styles");
return;
}else{
head.appendChild(_464);
}
if(_464.styleSheet){
var _466=function(){
try{
_464.styleSheet.cssText=_461;
}
catch(e){
dojo.debug(e);
}
};
if(_464.styleSheet.disabled){
setTimeout(_466,10);
}else{
_466();
}
}else{
var _467=doc.createTextNode(_461);
_464.appendChild(_467);
}
return _464;
};
dojo.html.fixPathsInCssText=function(_468,URI){
if(!_468||!URI){
return;
}
var _46a,str="",url="",_46d="[\\t\\s\\w\\(\\)\\/\\.\\\\'\"-:#=&?~]+";
var _46e=new RegExp("url\\(\\s*("+_46d+")\\s*\\)");
var _46f=/(file|https?|ftps?):\/\//;
regexTrim=new RegExp("^[\\s]*(['\"]?)("+_46d+")\\1[\\s]*?$");
if(dojo.render.html.ie55||dojo.render.html.ie60){
var _470=new RegExp("AlphaImageLoader\\((.*)src=['\"]("+_46d+")['\"]");
while(_46a=_470.exec(_468)){
url=_46a[2].replace(regexTrim,"$2");
if(!_46f.exec(url)){
url=(new dojo.uri.Uri(URI,url).toString());
}
str+=_468.substring(0,_46a.index)+"AlphaImageLoader("+_46a[1]+"src='"+url+"'";
_468=_468.substr(_46a.index+_46a[0].length);
}
_468=str+_468;
str="";
}
while(_46a=_46e.exec(_468)){
url=_46a[1].replace(regexTrim,"$2");
if(!_46f.exec(url)){
url=(new dojo.uri.Uri(URI,url).toString());
}
str+=_468.substring(0,_46a.index)+"url("+url+")";
_468=_468.substr(_46a.index+_46a[0].length);
}
return str+_468;
};
dojo.html.setActiveStyleSheet=function(_471){
var i=0,a,els=dojo.doc().getElementsByTagName("link");
while(a=els[i++]){
if(a.getAttribute("rel").indexOf("style")!=-1&&a.getAttribute("title")){
a.disabled=true;
if(a.getAttribute("title")==_471){
a.disabled=false;
}
}
}
};
dojo.html.getActiveStyleSheet=function(){
var i=0,a,els=dojo.doc().getElementsByTagName("link");
while(a=els[i++]){
if(a.getAttribute("rel").indexOf("style")!=-1&&a.getAttribute("title")&&!a.disabled){
return a.getAttribute("title");
}
}
return null;
};
dojo.html.getPreferredStyleSheet=function(){
var i=0,a,els=dojo.doc().getElementsByTagName("link");
while(a=els[i++]){
if(a.getAttribute("rel").indexOf("style")!=-1&&a.getAttribute("rel").indexOf("alt")==-1&&a.getAttribute("title")){
return a.getAttribute("title");
}
}
return null;
};
dojo.html.applyBrowserClass=function(node){
var drh=dojo.render.html;
var _47d={dj_ie:drh.ie,dj_ie55:drh.ie55,dj_ie6:drh.ie60,dj_ie7:drh.ie70,dj_iequirks:drh.ie&&drh.quirks,dj_opera:drh.opera,dj_opera8:drh.opera&&(Math.floor(dojo.render.version)==8),dj_opera9:drh.opera&&(Math.floor(dojo.render.version)==9),dj_khtml:drh.khtml,dj_safari:drh.safari,dj_gecko:drh.mozilla};
for(var p in _47d){
if(_47d[p]){
dojo.html.addClass(node,p);
}
}
};
dojo.provide("dojo.html.*");
dojo.provide("dojo.html.display");
dojo.html._toggle=function(node,_480,_481){
node=dojo.byId(node);
_481(node,!_480(node));
return _480(node);
};
dojo.html.show=function(node){
node=dojo.byId(node);
if(dojo.html.getStyleProperty(node,"display")=="none"){
dojo.html.setStyle(node,"display",(node.dojoDisplayCache||""));
node.dojoDisplayCache=undefined;
}
};
dojo.html.hide=function(node){
node=dojo.byId(node);
if(typeof node["dojoDisplayCache"]=="undefined"){
var d=dojo.html.getStyleProperty(node,"display");
if(d!="none"){
node.dojoDisplayCache=d;
}
}
dojo.html.setStyle(node,"display","none");
};
dojo.html.setShowing=function(node,_486){
dojo.html[(_486?"show":"hide")](node);
};
dojo.html.isShowing=function(node){
return (dojo.html.getStyleProperty(node,"display")!="none");
};
dojo.html.toggleShowing=function(node){
return dojo.html._toggle(node,dojo.html.isShowing,dojo.html.setShowing);
};
dojo.html.displayMap={tr:"",td:"",th:"",img:"inline",span:"inline",input:"inline",button:"inline"};
dojo.html.suggestDisplayByTagName=function(node){
node=dojo.byId(node);
if(node&&node.tagName){
var tag=node.tagName.toLowerCase();
return (tag in dojo.html.displayMap?dojo.html.displayMap[tag]:"block");
}
};
dojo.html.setDisplay=function(node,_48c){
dojo.html.setStyle(node,"display",((_48c instanceof String||typeof _48c=="string")?_48c:(_48c?dojo.html.suggestDisplayByTagName(node):"none")));
};
dojo.html.isDisplayed=function(node){
return (dojo.html.getComputedStyle(node,"display")!="none");
};
dojo.html.toggleDisplay=function(node){
return dojo.html._toggle(node,dojo.html.isDisplayed,dojo.html.setDisplay);
};
dojo.html.setVisibility=function(node,_490){
dojo.html.setStyle(node,"visibility",((_490 instanceof String||typeof _490=="string")?_490:(_490?"visible":"hidden")));
};
dojo.html.isVisible=function(node){
return (dojo.html.getComputedStyle(node,"visibility")!="hidden");
};
dojo.html.toggleVisibility=function(node){
return dojo.html._toggle(node,dojo.html.isVisible,dojo.html.setVisibility);
};
dojo.html.setOpacity=function(node,_494,_495){
node=dojo.byId(node);
var h=dojo.render.html;
if(!_495){
if(_494>=1){
if(h.ie){
dojo.html.clearOpacity(node);
return;
}else{
_494=0.999999;
}
}else{
if(_494<0){
_494=0;
}
}
}
if(h.ie){
if(node.nodeName.toLowerCase()=="tr"){
var tds=node.getElementsByTagName("td");
for(var x=0;x<tds.length;x++){
tds[x].style.filter="Alpha(Opacity="+_494*100+")";
}
}
node.style.filter="Alpha(Opacity="+_494*100+")";
}else{
if(h.moz){
node.style.opacity=_494;
node.style.MozOpacity=_494;
}else{
if(h.safari){
node.style.opacity=_494;
node.style.KhtmlOpacity=_494;
}else{
node.style.opacity=_494;
}
}
}
};
dojo.html.clearOpacity=function(node){
node=dojo.byId(node);
var ns=node.style;
var h=dojo.render.html;
if(h.ie){
try{
if(node.filters&&node.filters.alpha){
ns.filter="";
}
}
catch(e){
}
}else{
if(h.moz){
ns.opacity=1;
ns.MozOpacity=1;
}else{
if(h.safari){
ns.opacity=1;
ns.KhtmlOpacity=1;
}else{
ns.opacity=1;
}
}
}
};
dojo.html.getOpacity=function(node){
node=dojo.byId(node);
var h=dojo.render.html;
if(h.ie){
var opac=(node.filters&&node.filters.alpha&&typeof node.filters.alpha.opacity=="number"?node.filters.alpha.opacity:100)/100;
}else{
var opac=node.style.opacity||node.style.MozOpacity||node.style.KhtmlOpacity||1;
}
return opac>=0.999999?1:Number(opac);
};
dojo.provide("dojo.html.layout");
dojo.html.sumAncestorProperties=function(node,prop){
node=dojo.byId(node);
if(!node){
return 0;
}
var _4a1=0;
while(node){
if(dojo.html.getComputedStyle(node,"position")=="fixed"){
return 0;
}
var val=node[prop];
if(val){
_4a1+=val-0;
if(node==dojo.body()){
break;
}
}
node=node.parentNode;
}
return _4a1;
};
dojo.html.setStyleAttributes=function(node,_4a4){
node=dojo.byId(node);
var _4a5=_4a4.replace(/(;)?\s*$/,"").split(";");
for(var i=0;i<_4a5.length;i++){
var _4a7=_4a5[i].split(":");
var name=_4a7[0].replace(/\s*$/,"").replace(/^\s*/,"").toLowerCase();
var _4a9=_4a7[1].replace(/\s*$/,"").replace(/^\s*/,"");
switch(name){
case "opacity":
dojo.html.setOpacity(node,_4a9);
break;
case "content-height":
dojo.html.setContentBox(node,{height:_4a9});
break;
case "content-width":
dojo.html.setContentBox(node,{width:_4a9});
break;
case "outer-height":
dojo.html.setMarginBox(node,{height:_4a9});
break;
case "outer-width":
dojo.html.setMarginBox(node,{width:_4a9});
break;
default:
node.style[dojo.html.toCamelCase(name)]=_4a9;
}
}
};
dojo.html.boxSizing={MARGIN_BOX:"margin-box",BORDER_BOX:"border-box",PADDING_BOX:"padding-box",CONTENT_BOX:"content-box"};
dojo.html.getAbsolutePosition=dojo.html.abs=function(node,_4ab,_4ac){
node=dojo.byId(node,node.ownerDocument);
var ret={x:0,y:0};
var bs=dojo.html.boxSizing;
if(!_4ac){
_4ac=bs.CONTENT_BOX;
}
var _4af=2;
var _4b0;
switch(_4ac){
case bs.MARGIN_BOX:
_4b0=3;
break;
case bs.BORDER_BOX:
_4b0=2;
break;
case bs.PADDING_BOX:
default:
_4b0=1;
break;
case bs.CONTENT_BOX:
_4b0=0;
break;
}
var h=dojo.render.html;
var db=document["body"]||document["documentElement"];
if(h.ie){
with(node.getBoundingClientRect()){
ret.x=left-2;
ret.y=top-2;
}
}else{
if(document.getBoxObjectFor){
_4af=1;
try{
var bo=document.getBoxObjectFor(node);
ret.x=bo.x-dojo.html.sumAncestorProperties(node,"scrollLeft");
ret.y=bo.y-dojo.html.sumAncestorProperties(node,"scrollTop");
}
catch(e){
}
}else{
if(node["offsetParent"]){
var _4b4;
if((h.safari)&&(node.style.getPropertyValue("position")=="absolute")&&(node.parentNode==db)){
_4b4=db;
}else{
_4b4=db.parentNode;
}
if(node.parentNode!=db){
var nd=node;
if(dojo.render.html.opera){
nd=db;
}
ret.x-=dojo.html.sumAncestorProperties(nd,"scrollLeft");
ret.y-=dojo.html.sumAncestorProperties(nd,"scrollTop");
}
var _4b6=node;
do{
var n=_4b6["offsetLeft"];
if(!h.opera||n>0){
ret.x+=isNaN(n)?0:n;
}
var m=_4b6["offsetTop"];
ret.y+=isNaN(m)?0:m;
_4b6=_4b6.offsetParent;
}while((_4b6!=_4b4)&&(_4b6!=null));
}else{
if(node["x"]&&node["y"]){
ret.x+=isNaN(node.x)?0:node.x;
ret.y+=isNaN(node.y)?0:node.y;
}
}
}
}
if(_4ab){
var _4b9=dojo.html.getScroll();
ret.y+=_4b9.top;
ret.x+=_4b9.left;
}
var _4ba=[dojo.html.getPaddingExtent,dojo.html.getBorderExtent,dojo.html.getMarginExtent];
if(_4af>_4b0){
for(var i=_4b0;i<_4af;++i){
ret.y+=_4ba[i](node,"top");
ret.x+=_4ba[i](node,"left");
}
}else{
if(_4af<_4b0){
for(var i=_4b0;i>_4af;--i){
ret.y-=_4ba[i-1](node,"top");
ret.x-=_4ba[i-1](node,"left");
}
}
}
ret.top=ret.y;
ret.left=ret.x;
return ret;
};
dojo.html.isPositionAbsolute=function(node){
return (dojo.html.getComputedStyle(node,"position")=="absolute");
};
dojo.html._sumPixelValues=function(node,_4be,_4bf){
var _4c0=0;
for(var x=0;x<_4be.length;x++){
_4c0+=dojo.html.getPixelValue(node,_4be[x],_4bf);
}
return _4c0;
};
dojo.html.getMargin=function(node){
return {width:dojo.html._sumPixelValues(node,["margin-left","margin-right"],(dojo.html.getComputedStyle(node,"position")=="absolute")),height:dojo.html._sumPixelValues(node,["margin-top","margin-bottom"],(dojo.html.getComputedStyle(node,"position")=="absolute"))};
};
dojo.html.getBorder=function(node){
return {width:dojo.html.getBorderExtent(node,"left")+dojo.html.getBorderExtent(node,"right"),height:dojo.html.getBorderExtent(node,"top")+dojo.html.getBorderExtent(node,"bottom")};
};
dojo.html.getBorderExtent=function(node,side){
return (dojo.html.getStyle(node,"border-"+side+"-style")=="none"?0:dojo.html.getPixelValue(node,"border-"+side+"-width"));
};
dojo.html.getMarginExtent=function(node,side){
return dojo.html._sumPixelValues(node,["margin-"+side],dojo.html.isPositionAbsolute(node));
};
dojo.html.getPaddingExtent=function(node,side){
return dojo.html._sumPixelValues(node,["padding-"+side],true);
};
dojo.html.getPadding=function(node){
return {width:dojo.html._sumPixelValues(node,["padding-left","padding-right"],true),height:dojo.html._sumPixelValues(node,["padding-top","padding-bottom"],true)};
};
dojo.html.getPadBorder=function(node){
var pad=dojo.html.getPadding(node);
var _4cd=dojo.html.getBorder(node);
return {width:pad.width+_4cd.width,height:pad.height+_4cd.height};
};
dojo.html.getBoxSizing=function(node){
var h=dojo.render.html;
var bs=dojo.html.boxSizing;
if(((h.ie)||(h.opera))&&node.nodeName!="IMG"){
var cm=document["compatMode"];
if((cm=="BackCompat")||(cm=="QuirksMode")){
return bs.BORDER_BOX;
}else{
return bs.CONTENT_BOX;
}
}else{
if(arguments.length==0){
node=document.documentElement;
}
var _4d2=dojo.html.getStyle(node,"-moz-box-sizing");
if(!_4d2){
_4d2=dojo.html.getStyle(node,"box-sizing");
}
return (_4d2?_4d2:bs.CONTENT_BOX);
}
};
dojo.html.isBorderBox=function(node){
return (dojo.html.getBoxSizing(node)==dojo.html.boxSizing.BORDER_BOX);
};
dojo.html.getBorderBox=function(node){
node=dojo.byId(node);
return {width:node.offsetWidth,height:node.offsetHeight};
};
dojo.html.getPaddingBox=function(node){
var box=dojo.html.getBorderBox(node);
var _4d7=dojo.html.getBorder(node);
return {width:box.width-_4d7.width,height:box.height-_4d7.height};
};
dojo.html.getContentBox=function(node){
node=dojo.byId(node);
var _4d9=dojo.html.getPadBorder(node);
return {width:node.offsetWidth-_4d9.width,height:node.offsetHeight-_4d9.height};
};
dojo.html.setContentBox=function(node,args){
node=dojo.byId(node);
var _4dc=0;
var _4dd=0;
var isbb=dojo.html.isBorderBox(node);
var _4df=(isbb?dojo.html.getPadBorder(node):{width:0,height:0});
var ret={};
if(typeof args.width!="undefined"){
_4dc=args.width+_4df.width;
ret.width=dojo.html.setPositivePixelValue(node,"width",_4dc);
}
if(typeof args.height!="undefined"){
_4dd=args.height+_4df.height;
ret.height=dojo.html.setPositivePixelValue(node,"height",_4dd);
}
return ret;
};
dojo.html.getMarginBox=function(node){
var _4e2=dojo.html.getBorderBox(node);
var _4e3=dojo.html.getMargin(node);
return {width:_4e2.width+_4e3.width,height:_4e2.height+_4e3.height};
};
dojo.html.setMarginBox=function(node,args){
node=dojo.byId(node);
var _4e6=0;
var _4e7=0;
var isbb=dojo.html.isBorderBox(node);
var _4e9=(!isbb?dojo.html.getPadBorder(node):{width:0,height:0});
var _4ea=dojo.html.getMargin(node);
var ret={};
if(typeof args.width!="undefined"){
_4e6=args.width-_4e9.width;
_4e6-=_4ea.width;
ret.width=dojo.html.setPositivePixelValue(node,"width",_4e6);
}
if(typeof args.height!="undefined"){
_4e7=args.height-_4e9.height;
_4e7-=_4ea.height;
ret.height=dojo.html.setPositivePixelValue(node,"height",_4e7);
}
return ret;
};
dojo.html.getElementBox=function(node,type){
var bs=dojo.html.boxSizing;
switch(type){
case bs.MARGIN_BOX:
return dojo.html.getMarginBox(node);
case bs.BORDER_BOX:
return dojo.html.getBorderBox(node);
case bs.PADDING_BOX:
return dojo.html.getPaddingBox(node);
case bs.CONTENT_BOX:
default:
return dojo.html.getContentBox(node);
}
};
dojo.html.toCoordinateObject=dojo.html.toCoordinateArray=function(_4ef,_4f0,_4f1){
if(_4ef instanceof Array||typeof _4ef=="array"){
dojo.deprecated("dojo.html.toCoordinateArray","use dojo.html.toCoordinateObject({left: , top: , width: , height: }) instead","0.5");
while(_4ef.length<4){
_4ef.push(0);
}
while(_4ef.length>4){
_4ef.pop();
}
var ret={left:_4ef[0],top:_4ef[1],width:_4ef[2],height:_4ef[3]};
}else{
if(!_4ef.nodeType&&!(_4ef instanceof String||typeof _4ef=="string")&&("width" in _4ef||"height" in _4ef||"left" in _4ef||"x" in _4ef||"top" in _4ef||"y" in _4ef)){
var ret={left:_4ef.left||_4ef.x||0,top:_4ef.top||_4ef.y||0,width:_4ef.width||0,height:_4ef.height||0};
}else{
var node=dojo.byId(_4ef);
var pos=dojo.html.abs(node,_4f0,_4f1);
var _4f5=dojo.html.getMarginBox(node);
var ret={left:pos.left,top:pos.top,width:_4f5.width,height:_4f5.height};
}
}
ret.x=ret.left;
ret.y=ret.top;
return ret;
};
dojo.html.setMarginBoxWidth=dojo.html.setOuterWidth=function(node,_4f7){
return dojo.html._callDeprecated("setMarginBoxWidth","setMarginBox",arguments,"width");
};
dojo.html.setMarginBoxHeight=dojo.html.setOuterHeight=function(){
return dojo.html._callDeprecated("setMarginBoxHeight","setMarginBox",arguments,"height");
};
dojo.html.getMarginBoxWidth=dojo.html.getOuterWidth=function(){
return dojo.html._callDeprecated("getMarginBoxWidth","getMarginBox",arguments,null,"width");
};
dojo.html.getMarginBoxHeight=dojo.html.getOuterHeight=function(){
return dojo.html._callDeprecated("getMarginBoxHeight","getMarginBox",arguments,null,"height");
};
dojo.html.getTotalOffset=function(node,type,_4fa){
return dojo.html._callDeprecated("getTotalOffset","getAbsolutePosition",arguments,null,type);
};
dojo.html.getAbsoluteX=function(node,_4fc){
return dojo.html._callDeprecated("getAbsoluteX","getAbsolutePosition",arguments,null,"x");
};
dojo.html.getAbsoluteY=function(node,_4fe){
return dojo.html._callDeprecated("getAbsoluteY","getAbsolutePosition",arguments,null,"y");
};
dojo.html.totalOffsetLeft=function(node,_500){
return dojo.html._callDeprecated("totalOffsetLeft","getAbsolutePosition",arguments,null,"left");
};
dojo.html.totalOffsetTop=function(node,_502){
return dojo.html._callDeprecated("totalOffsetTop","getAbsolutePosition",arguments,null,"top");
};
dojo.html.getMarginWidth=function(node){
return dojo.html._callDeprecated("getMarginWidth","getMargin",arguments,null,"width");
};
dojo.html.getMarginHeight=function(node){
return dojo.html._callDeprecated("getMarginHeight","getMargin",arguments,null,"height");
};
dojo.html.getBorderWidth=function(node){
return dojo.html._callDeprecated("getBorderWidth","getBorder",arguments,null,"width");
};
dojo.html.getBorderHeight=function(node){
return dojo.html._callDeprecated("getBorderHeight","getBorder",arguments,null,"height");
};
dojo.html.getPaddingWidth=function(node){
return dojo.html._callDeprecated("getPaddingWidth","getPadding",arguments,null,"width");
};
dojo.html.getPaddingHeight=function(node){
return dojo.html._callDeprecated("getPaddingHeight","getPadding",arguments,null,"height");
};
dojo.html.getPadBorderWidth=function(node){
return dojo.html._callDeprecated("getPadBorderWidth","getPadBorder",arguments,null,"width");
};
dojo.html.getPadBorderHeight=function(node){
return dojo.html._callDeprecated("getPadBorderHeight","getPadBorder",arguments,null,"height");
};
dojo.html.getBorderBoxWidth=dojo.html.getInnerWidth=function(){
return dojo.html._callDeprecated("getBorderBoxWidth","getBorderBox",arguments,null,"width");
};
dojo.html.getBorderBoxHeight=dojo.html.getInnerHeight=function(){
return dojo.html._callDeprecated("getBorderBoxHeight","getBorderBox",arguments,null,"height");
};
dojo.html.getContentBoxWidth=dojo.html.getContentWidth=function(){
return dojo.html._callDeprecated("getContentBoxWidth","getContentBox",arguments,null,"width");
};
dojo.html.getContentBoxHeight=dojo.html.getContentHeight=function(){
return dojo.html._callDeprecated("getContentBoxHeight","getContentBox",arguments,null,"height");
};
dojo.html.setContentBoxWidth=dojo.html.setContentWidth=function(node,_50c){
return dojo.html._callDeprecated("setContentBoxWidth","setContentBox",arguments,"width");
};
dojo.html.setContentBoxHeight=dojo.html.setContentHeight=function(node,_50e){
return dojo.html._callDeprecated("setContentBoxHeight","setContentBox",arguments,"height");
};
dojo.provide("dojo.html.util");
dojo.html.getElementWindow=function(_50f){
return dojo.html.getDocumentWindow(_50f.ownerDocument);
};
dojo.html.getDocumentWindow=function(doc){
if(dojo.render.html.safari&&!doc._parentWindow){
var fix=function(win){
win.document._parentWindow=win;
for(var i=0;i<win.frames.length;i++){
fix(win.frames[i]);
}
};
fix(window.top);
}
if(dojo.render.html.ie&&window!==document.parentWindow&&!doc._parentWindow){
doc.parentWindow.execScript("document._parentWindow = window;","Javascript");
var win=doc._parentWindow;
doc._parentWindow=null;
return win;
}
return doc._parentWindow||doc.parentWindow||doc.defaultView;
};
dojo.html.gravity=function(node,e){
node=dojo.byId(node);
var _517=dojo.html.getCursorPosition(e);
with(dojo.html){
var _518=getAbsolutePosition(node,true);
var bb=getBorderBox(node);
var _51a=_518.x+(bb.width/2);
var _51b=_518.y+(bb.height/2);
}
with(dojo.html.gravity){
return ((_517.x<_51a?WEST:EAST)|(_517.y<_51b?NORTH:SOUTH));
}
};
dojo.html.gravity.NORTH=1;
dojo.html.gravity.SOUTH=1<<1;
dojo.html.gravity.EAST=1<<2;
dojo.html.gravity.WEST=1<<3;
dojo.html.overElement=function(_51c,e){
_51c=dojo.byId(_51c);
var _51e=dojo.html.getCursorPosition(e);
var bb=dojo.html.getBorderBox(_51c);
var _520=dojo.html.getAbsolutePosition(_51c,true,dojo.html.boxSizing.BORDER_BOX);
var top=_520.y;
var _522=top+bb.height;
var left=_520.x;
var _524=left+bb.width;
return (_51e.x>=left&&_51e.x<=_524&&_51e.y>=top&&_51e.y<=_522);
};
dojo.html.renderedTextContent=function(node){
node=dojo.byId(node);
var _526="";
if(node==null){
return _526;
}
for(var i=0;i<node.childNodes.length;i++){
switch(node.childNodes[i].nodeType){
case 1:
case 5:
var _528="unknown";
try{
_528=dojo.html.getStyle(node.childNodes[i],"display");
}
catch(E){
}
switch(_528){
case "block":
case "list-item":
case "run-in":
case "table":
case "table-row-group":
case "table-header-group":
case "table-footer-group":
case "table-row":
case "table-column-group":
case "table-column":
case "table-cell":
case "table-caption":
_526+="\n";
_526+=dojo.html.renderedTextContent(node.childNodes[i]);
_526+="\n";
break;
case "none":
break;
default:
if(node.childNodes[i].tagName&&node.childNodes[i].tagName.toLowerCase()=="br"){
_526+="\n";
}else{
_526+=dojo.html.renderedTextContent(node.childNodes[i]);
}
break;
}
break;
case 3:
case 2:
case 4:
var text=node.childNodes[i].nodeValue;
var _52a="unknown";
try{
_52a=dojo.html.getStyle(node,"text-transform");
}
catch(E){
}
switch(_52a){
case "capitalize":
var _52b=text.split(" ");
for(var i=0;i<_52b.length;i++){
_52b[i]=_52b[i].charAt(0).toUpperCase()+_52b[i].substring(1);
}
text=_52b.join(" ");
break;
case "uppercase":
text=text.toUpperCase();
break;
case "lowercase":
text=text.toLowerCase();
break;
default:
break;
}
switch(_52a){
case "nowrap":
break;
case "pre-wrap":
break;
case "pre-line":
break;
case "pre":
break;
default:
text=text.replace(/\s+/," ");
if(/\s$/.test(_526)){
text.replace(/^\s/,"");
}
break;
}
_526+=text;
break;
default:
break;
}
}
return _526;
};
dojo.html.createNodesFromText=function(txt,trim){
if(trim){
txt=txt.replace(/^\s+|\s+$/g,"");
}
var tn=dojo.doc().createElement("div");
tn.style.visibility="hidden";
dojo.body().appendChild(tn);
var _52f="none";
if((/^<t[dh][\s\r\n>]/i).test(txt.replace(/^\s+/))){
txt="<table><tbody><tr>"+txt+"</tr></tbody></table>";
_52f="cell";
}else{
if((/^<tr[\s\r\n>]/i).test(txt.replace(/^\s+/))){
txt="<table><tbody>"+txt+"</tbody></table>";
_52f="row";
}else{
if((/^<(thead|tbody|tfoot)[\s\r\n>]/i).test(txt.replace(/^\s+/))){
txt="<table>"+txt+"</table>";
_52f="section";
}
}
}
tn.innerHTML=txt;
if(tn["normalize"]){
tn.normalize();
}
var _530=null;
switch(_52f){
case "cell":
_530=tn.getElementsByTagName("tr")[0];
break;
case "row":
_530=tn.getElementsByTagName("tbody")[0];
break;
case "section":
_530=tn.getElementsByTagName("table")[0];
break;
default:
_530=tn;
break;
}
var _531=[];
for(var x=0;x<_530.childNodes.length;x++){
_531.push(_530.childNodes[x].cloneNode(true));
}
tn.style.display="none";
dojo.html.destroyNode(tn);
return _531;
};
dojo.html.placeOnScreen=function(node,_534,_535,_536,_537,_538,_539){
if(_534 instanceof Array||typeof _534=="array"){
_539=_538;
_538=_537;
_537=_536;
_536=_535;
_535=_534[1];
_534=_534[0];
}
if(_538 instanceof String||typeof _538=="string"){
_538=_538.split(",");
}
if(!isNaN(_536)){
_536=[Number(_536),Number(_536)];
}else{
if(!(_536 instanceof Array||typeof _536=="array")){
_536=[0,0];
}
}
var _53a=dojo.html.getScroll().offset;
var view=dojo.html.getViewport();
node=dojo.byId(node);
var _53c=node.style.display;
node.style.display="";
var bb=dojo.html.getBorderBox(node);
var w=bb.width;
var h=bb.height;
node.style.display=_53c;
if(!(_538 instanceof Array||typeof _538=="array")){
_538=["TL"];
}
var _540,_541,_542=Infinity,_543;
for(var _544=0;_544<_538.length;++_544){
var _545=_538[_544];
var _546=true;
var tryX=_534-(_545.charAt(1)=="L"?0:w)+_536[0]*(_545.charAt(1)=="L"?1:-1);
var tryY=_535-(_545.charAt(0)=="T"?0:h)+_536[1]*(_545.charAt(0)=="T"?1:-1);
if(_537){
tryX-=_53a.x;
tryY-=_53a.y;
}
if(tryX<0){
tryX=0;
_546=false;
}
if(tryY<0){
tryY=0;
_546=false;
}
var x=tryX+w;
if(x>view.width){
x=view.width-w;
_546=false;
}else{
x=tryX;
}
x=Math.max(_536[0],x)+_53a.x;
var y=tryY+h;
if(y>view.height){
y=view.height-h;
_546=false;
}else{
y=tryY;
}
y=Math.max(_536[1],y)+_53a.y;
if(_546){
_540=x;
_541=y;
_542=0;
_543=_545;
break;
}else{
var dist=Math.pow(x-tryX-_53a.x,2)+Math.pow(y-tryY-_53a.y,2);
if(_542>dist){
_542=dist;
_540=x;
_541=y;
_543=_545;
}
}
}
if(!_539){
node.style.left=_540+"px";
node.style.top=_541+"px";
}
return {left:_540,top:_541,x:_540,y:_541,dist:_542,corner:_543};
};
dojo.html.placeOnScreenPoint=function(node,_54d,_54e,_54f,_550){
dojo.deprecated("dojo.html.placeOnScreenPoint","use dojo.html.placeOnScreen() instead","0.5");
return dojo.html.placeOnScreen(node,_54d,_54e,_54f,_550,["TL","TR","BL","BR"]);
};
dojo.html.placeOnScreenAroundElement=function(node,_552,_553,_554,_555,_556){
var best,_558=Infinity;
_552=dojo.byId(_552);
var _559=_552.style.display;
_552.style.display="";
var mb=dojo.html.getElementBox(_552,_554);
var _55b=mb.width;
var _55c=mb.height;
var _55d=dojo.html.getAbsolutePosition(_552,true,_554);
_552.style.display=_559;
for(var _55e in _555){
var pos,_560,_561;
var _562=_555[_55e];
_560=_55d.x+(_55e.charAt(1)=="L"?0:_55b);
_561=_55d.y+(_55e.charAt(0)=="T"?0:_55c);
pos=dojo.html.placeOnScreen(node,_560,_561,_553,true,_562,true);
if(pos.dist==0){
best=pos;
break;
}else{
if(_558>pos.dist){
_558=pos.dist;
best=pos;
}
}
}
if(!_556){
node.style.left=best.left+"px";
node.style.top=best.top+"px";
}
return best;
};
dojo.html.scrollIntoView=function(node){
if(!node){
return;
}
if(dojo.render.html.ie){
if(dojo.html.getBorderBox(node.parentNode).height<=node.parentNode.scrollHeight){
node.scrollIntoView(false);
}
}else{
if(dojo.render.html.mozilla){
node.scrollIntoView(false);
}else{
var _564=node.parentNode;
var _565=_564.scrollTop+dojo.html.getBorderBox(_564).height;
var _566=node.offsetTop+dojo.html.getMarginBox(node).height;
if(_565<_566){
_564.scrollTop+=(_566-_565);
}else{
if(_564.scrollTop>node.offsetTop){
_564.scrollTop-=(_564.scrollTop-node.offsetTop);
}
}
}
}
};


__CPAN_EDITION__ core build.txt

Files baked into this package:

dojoGuardStart.js,
../src/bootstrap1.js,
../src/loader.js,
dojoGuardEnd.js,
../src/hostenv_browser.js,
../src/bootstrap2.js,
../src/lang/common.js,
../src/lang/array.js,
../src/lang/extras.js,
../src/lang/declare.js,
../src/lang/func.js,
../src/event/common.js,
../src/event/topic.js,
../src/event/browser.js,
../src/event/__package__.js,
../src/event.js,
../src/string/common.js,
../src/string/extras.js,
../src/string.js,
../src/io/common.js,
../src/dom.js,
../src/undo/browser.js,
../src/io/BrowserIO.js,
../src/io/cookie.js,
../src/io/__package__.js,
../src/io.js,
../src/AdapterRegistry.js,
../src/json.js,
../src/html/common.js,
../src/uri/Uri.js,
../src/html/style.js,
../src/html/__package__.js,
../src/html/display.js,
../src/html/layout.js,
../src/html/util.js

		
__CPAN_EDITION__ dashboard dojo.js
/*
	Copyright (c) 2004-2006, The Dojo Foundation
	All Rights Reserved.

	Licensed under the Academic Free License version 2.1 or above OR the
	modified BSD license. For more information on Dojo licensing, see:

		http://dojotoolkit.org/community/licensing.shtml
*/

/*
	This is a compiled version of Dojo, built for deployment and not for
	development. To get an editable version, please visit:

		http://dojotoolkit.org

	for documentation and information on getting the source.
*/

if(typeof dojo=="undefined"){
var dj_global=this;
var dj_currentContext=this;
function dj_undef(_1,_2){
return (typeof (_2||dj_currentContext)[_1]=="undefined");
}
if(dj_undef("djConfig",this)){
var djConfig={};
}
if(dj_undef("dojo",this)){
var dojo={};
}
dojo.global=function(){
return dj_currentContext;
};
dojo.locale=djConfig.locale;
dojo.version={major:0,minor:4,patch:1,flag:"",revision:Number("$Rev: 6824 $".match(/[0-9]+/)[0]),toString:function(){
with(dojo.version){
return major+"."+minor+"."+patch+flag+" ("+revision+")";
}
}};
dojo.evalProp=function(_3,_4,_5){
if((!_4)||(!_3)){
return undefined;
}
if(!dj_undef(_3,_4)){
return _4[_3];
}
return (_5?(_4[_3]={}):undefined);
};
dojo.parseObjPath=function(_6,_7,_8){
var _9=(_7||dojo.global());
var _a=_6.split(".");
var _b=_a.pop();
for(var i=0,l=_a.length;i<l&&_9;i++){
_9=dojo.evalProp(_a[i],_9,_8);
}
return {obj:_9,prop:_b};
};
dojo.evalObjPath=function(_e,_f){
if(typeof _e!="string"){
return dojo.global();
}
if(_e.indexOf(".")==-1){
return dojo.evalProp(_e,dojo.global(),_f);
}
var ref=dojo.parseObjPath(_e,dojo.global(),_f);
if(ref){
return dojo.evalProp(ref.prop,ref.obj,_f);
}
return null;
};
dojo.errorToString=function(_11){
if(!dj_undef("message",_11)){
return _11.message;
}else{
if(!dj_undef("description",_11)){
return _11.description;
}else{
return _11;
}
}
};
dojo.raise=function(_12,_13){
if(_13){
_12=_12+": "+dojo.errorToString(_13);
}else{
_12=dojo.errorToString(_12);
}
try{
if(djConfig.isDebug){
dojo.hostenv.println("FATAL exception raised: "+_12);
}
}
catch(e){
}
throw _13||Error(_12);
};
dojo.debug=function(){
};
dojo.debugShallow=function(obj){
};
dojo.profile={start:function(){
},end:function(){
},stop:function(){
},dump:function(){
}};
function dj_eval(_15){
return dj_global.eval?dj_global.eval(_15):eval(_15);
}
dojo.unimplemented=function(_16,_17){
var _18="'"+_16+"' not implemented";
if(_17!=null){
_18+=" "+_17;
}
dojo.raise(_18);
};
dojo.deprecated=function(_19,_1a,_1b){
var _1c="DEPRECATED: "+_19;
if(_1a){
_1c+=" "+_1a;
}
if(_1b){
_1c+=" -- will be removed in version: "+_1b;
}
dojo.debug(_1c);
};
dojo.render=(function(){
function vscaffold(_1d,_1e){
var tmp={capable:false,support:{builtin:false,plugin:false},prefixes:_1d};
for(var i=0;i<_1e.length;i++){
tmp[_1e[i]]=false;
}
return tmp;
}
return {name:"",ver:dojo.version,os:{win:false,linux:false,osx:false},html:vscaffold(["html"],["ie","opera","khtml","safari","moz"]),svg:vscaffold(["svg"],["corel","adobe","batik"]),vml:vscaffold(["vml"],["ie"]),swf:vscaffold(["Swf","Flash","Mm"],["mm"]),swt:vscaffold(["Swt"],["ibm"])};
})();
dojo.hostenv=(function(){
var _21={isDebug:false,allowQueryConfig:false,baseScriptUri:"",baseRelativePath:"",libraryScriptUri:"",iePreventClobber:false,ieClobberMinimal:true,preventBackButtonFix:true,delayMozLoadingFix:false,searchIds:[],parseWidgets:true};
if(typeof djConfig=="undefined"){
djConfig=_21;
}else{
for(var _22 in _21){
if(typeof djConfig[_22]=="undefined"){
djConfig[_22]=_21[_22];
}
}
}
return {name_:"(unset)",version_:"(unset)",getName:function(){
return this.name_;
},getVersion:function(){
return this.version_;
},getText:function(uri){
dojo.unimplemented("getText","uri="+uri);
}};
})();
dojo.hostenv.getBaseScriptUri=function(){
if(djConfig.baseScriptUri.length){
return djConfig.baseScriptUri;
}
var uri=new String(djConfig.libraryScriptUri||djConfig.baseRelativePath);
if(!uri){
dojo.raise("Nothing returned by getLibraryScriptUri(): "+uri);
}
var _25=uri.lastIndexOf("/");
djConfig.baseScriptUri=djConfig.baseRelativePath;
return djConfig.baseScriptUri;
};
(function(){
var _26={pkgFileName:"__package__",loading_modules_:{},loaded_modules_:{},addedToLoadingCount:[],removedFromLoadingCount:[],inFlightCount:0,modulePrefixes_:{dojo:{name:"dojo",value:"src"}},setModulePrefix:function(_27,_28){
this.modulePrefixes_[_27]={name:_27,value:_28};
},moduleHasPrefix:function(_29){
var mp=this.modulePrefixes_;
return Boolean(mp[_29]&&mp[_29].value);
},getModulePrefix:function(_2b){
if(this.moduleHasPrefix(_2b)){
return this.modulePrefixes_[_2b].value;
}
return _2b;
},getTextStack:[],loadUriStack:[],loadedUris:[],post_load_:false,modulesLoadedListeners:[],unloadListeners:[],loadNotifying:false};
for(var _2c in _26){
dojo.hostenv[_2c]=_26[_2c];
}
})();
dojo.hostenv.loadPath=function(_2d,_2e,cb){
var uri;
if(_2d.charAt(0)=="/"||_2d.match(/^\w+:/)){
uri=_2d;
}else{
uri=this.getBaseScriptUri()+_2d;
}
if(djConfig.cacheBust&&dojo.render.html.capable){
uri+="?"+String(djConfig.cacheBust).replace(/\W+/g,"");
}
try{
return !_2e?this.loadUri(uri,cb):this.loadUriAndCheck(uri,_2e,cb);
}
catch(e){
dojo.debug(e);
return false;
}
};
dojo.hostenv.loadUri=function(uri,cb){
if(this.loadedUris[uri]){
return true;
}
var _33=this.getText(uri,null,true);
if(!_33){
return false;
}
this.loadedUris[uri]=true;
if(cb){
_33="("+_33+")";
}
var _34=dj_eval(_33);
if(cb){
cb(_34);
}
return true;
};
dojo.hostenv.loadUriAndCheck=function(uri,_36,cb){
var ok=true;
try{
ok=this.loadUri(uri,cb);
}
catch(e){
dojo.debug("failed loading ",uri," with error: ",e);
}
return Boolean(ok&&this.findModule(_36,false));
};
dojo.loaded=function(){
};
dojo.unloaded=function(){
};
dojo.hostenv.loaded=function(){
this.loadNotifying=true;
this.post_load_=true;
var mll=this.modulesLoadedListeners;
for(var x=0;x<mll.length;x++){
mll[x]();
}
this.modulesLoadedListeners=[];
this.loadNotifying=false;
dojo.loaded();
};
dojo.hostenv.unloaded=function(){
var mll=this.unloadListeners;
while(mll.length){
(mll.pop())();
}
dojo.unloaded();
};
dojo.addOnLoad=function(obj,_3d){
var dh=dojo.hostenv;
if(arguments.length==1){
dh.modulesLoadedListeners.push(obj);
}else{
if(arguments.length>1){
dh.modulesLoadedListeners.push(function(){
obj[_3d]();
});
}
}
if(dh.post_load_&&dh.inFlightCount==0&&!dh.loadNotifying){
dh.callLoaded();
}
};
dojo.addOnUnload=function(obj,_40){
var dh=dojo.hostenv;
if(arguments.length==1){
dh.unloadListeners.push(obj);
}else{
if(arguments.length>1){
dh.unloadListeners.push(function(){
obj[_40]();
});
}
}
};
dojo.hostenv.modulesLoaded=function(){
if(this.post_load_){
return;
}
if(this.loadUriStack.length==0&&this.getTextStack.length==0){
if(this.inFlightCount>0){
dojo.debug("files still in flight!");
return;
}
dojo.hostenv.callLoaded();
}
};
dojo.hostenv.callLoaded=function(){
if(typeof setTimeout=="object"){
setTimeout("dojo.hostenv.loaded();",0);
}else{
dojo.hostenv.loaded();
}
};
dojo.hostenv.getModuleSymbols=function(_42){
var _43=_42.split(".");
for(var i=_43.length;i>0;i--){
var _45=_43.slice(0,i).join(".");
if((i==1)&&!this.moduleHasPrefix(_45)){
_43[0]="../"+_43[0];
}else{
var _46=this.getModulePrefix(_45);
if(_46!=_45){
_43.splice(0,i,_46);
break;
}
}
}
return _43;
};
dojo.hostenv._global_omit_module_check=false;
dojo.hostenv.loadModule=function(_47,_48,_49){
if(!_47){
return;
}
_49=this._global_omit_module_check||_49;
var _4a=this.findModule(_47,false);
if(_4a){
return _4a;
}
if(dj_undef(_47,this.loading_modules_)){
this.addedToLoadingCount.push(_47);
}
this.loading_modules_[_47]=1;
var _4b=_47.replace(/\./g,"/")+".js";
var _4c=_47.split(".");
var _4d=this.getModuleSymbols(_47);
var _4e=((_4d[0].charAt(0)!="/")&&!_4d[0].match(/^\w+:/));
var _4f=_4d[_4d.length-1];
var ok;
if(_4f=="*"){
_47=_4c.slice(0,-1).join(".");
while(_4d.length){
_4d.pop();
_4d.push(this.pkgFileName);
_4b=_4d.join("/")+".js";
if(_4e&&_4b.charAt(0)=="/"){
_4b=_4b.slice(1);
}
ok=this.loadPath(_4b,!_49?_47:null);
if(ok){
break;
}
_4d.pop();
}
}else{
_4b=_4d.join("/")+".js";
_47=_4c.join(".");
var _51=!_49?_47:null;
ok=this.loadPath(_4b,_51);
if(!ok&&!_48){
_4d.pop();
while(_4d.length){
_4b=_4d.join("/")+".js";
ok=this.loadPath(_4b,_51);
if(ok){
break;
}
_4d.pop();
_4b=_4d.join("/")+"/"+this.pkgFileName+".js";
if(_4e&&_4b.charAt(0)=="/"){
_4b=_4b.slice(1);
}
ok=this.loadPath(_4b,_51);
if(ok){
break;
}
}
}
if(!ok&&!_49){
dojo.raise("Could not load '"+_47+"'; last tried '"+_4b+"'");
}
}
if(!_49&&!this["isXDomain"]){
_4a=this.findModule(_47,false);
if(!_4a){
dojo.raise("symbol '"+_47+"' is not defined after loading '"+_4b+"'");
}
}
return _4a;
};
dojo.hostenv.startPackage=function(_52){
var _53=String(_52);
var _54=_53;
var _55=_52.split(/\./);
if(_55[_55.length-1]=="*"){
_55.pop();
_54=_55.join(".");
}
var _56=dojo.evalObjPath(_54,true);
this.loaded_modules_[_53]=_56;
this.loaded_modules_[_54]=_56;
return _56;
};
dojo.hostenv.findModule=function(_57,_58){
var lmn=String(_57);
if(this.loaded_modules_[lmn]){
return this.loaded_modules_[lmn];
}
if(_58){
dojo.raise("no loaded module named '"+_57+"'");
}
return null;
};
dojo.kwCompoundRequire=function(_5a){
var _5b=_5a["common"]||[];
var _5c=_5a[dojo.hostenv.name_]?_5b.concat(_5a[dojo.hostenv.name_]||[]):_5b.concat(_5a["default"]||[]);
for(var x=0;x<_5c.length;x++){
var _5e=_5c[x];
if(_5e.constructor==Array){
dojo.hostenv.loadModule.apply(dojo.hostenv,_5e);
}else{
dojo.hostenv.loadModule(_5e);
}
}
};
dojo.require=function(_5f){
dojo.hostenv.loadModule.apply(dojo.hostenv,arguments);
};
dojo.requireIf=function(_60,_61){
var _62=arguments[0];
if((_62===true)||(_62=="common")||(_62&&dojo.render[_62].capable)){
var _63=[];
for(var i=1;i<arguments.length;i++){
_63.push(arguments[i]);
}
dojo.require.apply(dojo,_63);
}
};
dojo.requireAfterIf=dojo.requireIf;
dojo.provide=function(_65){
return dojo.hostenv.startPackage.apply(dojo.hostenv,arguments);
};
dojo.registerModulePath=function(_66,_67){
return dojo.hostenv.setModulePrefix(_66,_67);
};
dojo.setModulePrefix=function(_68,_69){
dojo.deprecated("dojo.setModulePrefix(\""+_68+"\", \""+_69+"\")","replaced by dojo.registerModulePath","0.5");
return dojo.registerModulePath(_68,_69);
};
dojo.exists=function(obj,_6b){
var p=_6b.split(".");
for(var i=0;i<p.length;i++){
if(!obj[p[i]]){
return false;
}
obj=obj[p[i]];
}
return true;
};
dojo.hostenv.normalizeLocale=function(_6e){
var _6f=_6e?_6e.toLowerCase():dojo.locale;
if(_6f=="root"){
_6f="ROOT";
}
return _6f;
};
dojo.hostenv.searchLocalePath=function(_70,_71,_72){
_70=dojo.hostenv.normalizeLocale(_70);
var _73=_70.split("-");
var _74=[];
for(var i=_73.length;i>0;i--){
_74.push(_73.slice(0,i).join("-"));
}
_74.push(false);
if(_71){
_74.reverse();
}
for(var j=_74.length-1;j>=0;j--){
var loc=_74[j]||"ROOT";
var _78=_72(loc);
if(_78){
break;
}
}
};
dojo.hostenv.localesGenerated;
dojo.hostenv.registerNlsPrefix=function(){
dojo.registerModulePath("nls","nls");
};
dojo.hostenv.preloadLocalizations=function(){
if(dojo.hostenv.localesGenerated){
dojo.hostenv.registerNlsPrefix();
function preload(_79){
_79=dojo.hostenv.normalizeLocale(_79);
dojo.hostenv.searchLocalePath(_79,true,function(loc){
for(var i=0;i<dojo.hostenv.localesGenerated.length;i++){
if(dojo.hostenv.localesGenerated[i]==loc){
dojo["require"]("nls.dojo_"+loc);
return true;
}
}
return false;
});
}
preload();
var _7c=djConfig.extraLocale||[];
for(var i=0;i<_7c.length;i++){
preload(_7c[i]);
}
}
dojo.hostenv.preloadLocalizations=function(){
};
};
dojo.requireLocalization=function(_7e,_7f,_80,_81){
dojo.hostenv.preloadLocalizations();
var _82=dojo.hostenv.normalizeLocale(_80);
var _83=[_7e,"nls",_7f].join(".");
var _84="";
if(_81){
var _85=_81.split(",");
for(var i=0;i<_85.length;i++){
if(_82.indexOf(_85[i])==0){
if(_85[i].length>_84.length){
_84=_85[i];
}
}
}
if(!_84){
_84="ROOT";
}
}
var _87=_81?_84:_82;
var _88=dojo.hostenv.findModule(_83);
var _89=null;
if(_88){
if(djConfig.localizationComplete&&_88._built){
return;
}
var _8a=_87.replace("-","_");
var _8b=_83+"."+_8a;
_89=dojo.hostenv.findModule(_8b);
}
if(!_89){
_88=dojo.hostenv.startPackage(_83);
var _8c=dojo.hostenv.getModuleSymbols(_7e);
var _8d=_8c.concat("nls").join("/");
var _8e;
dojo.hostenv.searchLocalePath(_87,_81,function(loc){
var _90=loc.replace("-","_");
var _91=_83+"."+_90;
var _92=false;
if(!dojo.hostenv.findModule(_91)){
dojo.hostenv.startPackage(_91);
var _93=[_8d];
if(loc!="ROOT"){
_93.push(loc);
}
_93.push(_7f);
var _94=_93.join("/")+".js";
_92=dojo.hostenv.loadPath(_94,null,function(_95){
var _96=function(){
};
_96.prototype=_8e;
_88[_90]=new _96();
for(var j in _95){
_88[_90][j]=_95[j];
}
});
}else{
_92=true;
}
if(_92&&_88[_90]){
_8e=_88[_90];
}else{
_88[_90]=_8e;
}
if(_81){
return true;
}
});
}
if(_81&&_82!=_84){
_88[_82.replace("-","_")]=_88[_84.replace("-","_")];
}
};
(function(){
var _98=djConfig.extraLocale;
if(_98){
if(!_98 instanceof Array){
_98=[_98];
}
var req=dojo.requireLocalization;
dojo.requireLocalization=function(m,b,_9c,_9d){
req(m,b,_9c,_9d);
if(_9c){
return;
}
for(var i=0;i<_98.length;i++){
req(m,b,_98[i],_9d);
}
};
}
})();
}
if(typeof window!="undefined"){
(function(){
if(djConfig.allowQueryConfig){
var _9f=document.location.toString();
var _a0=_9f.split("?",2);
if(_a0.length>1){
var _a1=_a0[1];
var _a2=_a1.split("&");
for(var x in _a2){
var sp=_a2[x].split("=");
if((sp[0].length>9)&&(sp[0].substr(0,9)=="djConfig.")){
var opt=sp[0].substr(9);
try{
djConfig[opt]=eval(sp[1]);
}
catch(e){
djConfig[opt]=sp[1];
}
}
}
}
}
if(((djConfig["baseScriptUri"]=="")||(djConfig["baseRelativePath"]==""))&&(document&&document.getElementsByTagName)){
var _a6=document.getElementsByTagName("script");
var _a7=/(__package__|dojo|bootstrap1)\.js([\?\.]|$)/i;
for(var i=0;i<_a6.length;i++){
var src=_a6[i].getAttribute("src");
if(!src){
continue;
}
var m=src.match(_a7);
if(m){
var _ab=src.substring(0,m.index);
if(src.indexOf("bootstrap1")>-1){
_ab+="../";
}
if(!this["djConfig"]){
djConfig={};
}
if(djConfig["baseScriptUri"]==""){
djConfig["baseScriptUri"]=_ab;
}
if(djConfig["baseRelativePath"]==""){
djConfig["baseRelativePath"]=_ab;
}
break;
}
}
}
var dr=dojo.render;
var drh=dojo.render.html;
var drs=dojo.render.svg;
var dua=(drh.UA=navigator.userAgent);
var dav=(drh.AV=navigator.appVersion);
var t=true;
var f=false;
drh.capable=t;
drh.support.builtin=t;
dr.ver=parseFloat(drh.AV);
dr.os.mac=dav.indexOf("Macintosh")>=0;
dr.os.win=dav.indexOf("Windows")>=0;
dr.os.linux=dav.indexOf("X11")>=0;
drh.opera=dua.indexOf("Opera")>=0;
drh.khtml=(dav.indexOf("Konqueror")>=0)||(dav.indexOf("Safari")>=0);
drh.safari=dav.indexOf("Safari")>=0;
var _b3=dua.indexOf("Gecko");
drh.mozilla=drh.moz=(_b3>=0)&&(!drh.khtml);
if(drh.mozilla){
drh.geckoVersion=dua.substring(_b3+6,_b3+14);
}
drh.ie=(document.all)&&(!drh.opera);
drh.ie50=drh.ie&&dav.indexOf("MSIE 5.0")>=0;
drh.ie55=drh.ie&&dav.indexOf("MSIE 5.5")>=0;
drh.ie60=drh.ie&&dav.indexOf("MSIE 6.0")>=0;
drh.ie70=drh.ie&&dav.indexOf("MSIE 7.0")>=0;
var cm=document["compatMode"];
drh.quirks=(cm=="BackCompat")||(cm=="QuirksMode")||drh.ie55||drh.ie50;
dojo.locale=dojo.locale||(drh.ie?navigator.userLanguage:navigator.language).toLowerCase();
dr.vml.capable=drh.ie;
drs.capable=f;
drs.support.plugin=f;
drs.support.builtin=f;
var _b5=window["document"];
var tdi=_b5["implementation"];
if((tdi)&&(tdi["hasFeature"])&&(tdi.hasFeature("org.w3c.dom.svg","1.0"))){
drs.capable=t;
drs.support.builtin=t;
drs.support.plugin=f;
}
if(drh.safari){
var tmp=dua.split("AppleWebKit/")[1];
var ver=parseFloat(tmp.split(" ")[0]);
if(ver>=420){
drs.capable=t;
drs.support.builtin=t;
drs.support.plugin=f;
}
}else{
}
})();
dojo.hostenv.startPackage("dojo.hostenv");
dojo.render.name=dojo.hostenv.name_="browser";
dojo.hostenv.searchIds=[];
dojo.hostenv._XMLHTTP_PROGIDS=["Msxml2.XMLHTTP","Microsoft.XMLHTTP","Msxml2.XMLHTTP.4.0"];
dojo.hostenv.getXmlhttpObject=function(){
var _b9=null;
var _ba=null;
try{
_b9=new XMLHttpRequest();
}
catch(e){
}
if(!_b9){
for(var i=0;i<3;++i){
var _bc=dojo.hostenv._XMLHTTP_PROGIDS[i];
try{
_b9=new ActiveXObject(_bc);
}
catch(e){
_ba=e;
}
if(_b9){
dojo.hostenv._XMLHTTP_PROGIDS=[_bc];
break;
}
}
}
if(!_b9){
return dojo.raise("XMLHTTP not available",_ba);
}
return _b9;
};
dojo.hostenv._blockAsync=false;
dojo.hostenv.getText=function(uri,_be,_bf){
if(!_be){
this._blockAsync=true;
}
var _c0=this.getXmlhttpObject();
function isDocumentOk(_c1){
var _c2=_c1["status"];
return Boolean((!_c2)||((200<=_c2)&&(300>_c2))||(_c2==304));
}
if(_be){
var _c3=this,_c4=null,gbl=dojo.global();
var xhr=dojo.evalObjPath("dojo.io.XMLHTTPTransport");
_c0.onreadystatechange=function(){
if(_c4){
gbl.clearTimeout(_c4);
_c4=null;
}
if(_c3._blockAsync||(xhr&&xhr._blockAsync)){
_c4=gbl.setTimeout(function(){
_c0.onreadystatechange.apply(this);
},10);
}else{
if(4==_c0.readyState){
if(isDocumentOk(_c0)){
_be(_c0.responseText);
}
}
}
};
}
_c0.open("GET",uri,_be?true:false);
try{
_c0.send(null);
if(_be){
return null;
}
if(!isDocumentOk(_c0)){
var err=Error("Unable to load "+uri+" status:"+_c0.status);
err.status=_c0.status;
err.responseText=_c0.responseText;
throw err;
}
}
catch(e){
this._blockAsync=false;
if((_bf)&&(!_be)){
return null;
}else{
throw e;
}
}
this._blockAsync=false;
return _c0.responseText;
};
dojo.hostenv.defaultDebugContainerId="dojoDebug";
dojo.hostenv._println_buffer=[];
dojo.hostenv._println_safe=false;
dojo.hostenv.println=function(_c8){
if(!dojo.hostenv._println_safe){
dojo.hostenv._println_buffer.push(_c8);
}else{
try{
var _c9=document.getElementById(djConfig.debugContainerId?djConfig.debugContainerId:dojo.hostenv.defaultDebugContainerId);
if(!_c9){
_c9=dojo.body();
}
var div=document.createElement("div");
div.appendChild(document.createTextNode(_c8));
_c9.appendChild(div);
}
catch(e){
try{
document.write("<div>"+_c8+"</div>");
}
catch(e2){
window.status=_c8;
}
}
}
};
dojo.addOnLoad(function(){
dojo.hostenv._println_safe=true;
while(dojo.hostenv._println_buffer.length>0){
dojo.hostenv.println(dojo.hostenv._println_buffer.shift());
}
});
function dj_addNodeEvtHdlr(_cb,_cc,fp){
var _ce=_cb["on"+_cc]||function(){
};
_cb["on"+_cc]=function(){
fp.apply(_cb,arguments);
_ce.apply(_cb,arguments);
};
return true;
}
function dj_load_init(e){
var _d0=(e&&e.type)?e.type.toLowerCase():"load";
if(arguments.callee.initialized||(_d0!="domcontentloaded"&&_d0!="load")){
return;
}
arguments.callee.initialized=true;
if(typeof (_timer)!="undefined"){
clearInterval(_timer);
delete _timer;
}
var _d1=function(){
if(dojo.render.html.ie){
dojo.hostenv.makeWidgets();
}
};
if(dojo.hostenv.inFlightCount==0){
_d1();
dojo.hostenv.modulesLoaded();
}else{
dojo.hostenv.modulesLoadedListeners.unshift(_d1);
}
}
if(document.addEventListener){
if(dojo.render.html.opera||(dojo.render.html.moz&&!djConfig.delayMozLoadingFix)){
document.addEventListener("DOMContentLoaded",dj_load_init,null);
}
window.addEventListener("load",dj_load_init,null);
}
if(dojo.render.html.ie&&dojo.render.os.win){
document.attachEvent("onreadystatechange",function(e){
if(document.readyState=="complete"){
dj_load_init();
}
});
}
if(/(WebKit|khtml)/i.test(navigator.userAgent)){
var _timer=setInterval(function(){
if(/loaded|complete/.test(document.readyState)){
dj_load_init();
}
},10);
}
if(dojo.render.html.ie){
dj_addNodeEvtHdlr(window,"beforeunload",function(){
dojo.hostenv._unloading=true;
window.setTimeout(function(){
dojo.hostenv._unloading=false;
},0);
});
}
dj_addNodeEvtHdlr(window,"unload",function(){
dojo.hostenv.unloaded();
if((!dojo.render.html.ie)||(dojo.render.html.ie&&dojo.hostenv._unloading)){
dojo.hostenv.unloaded();
}
});
dojo.hostenv.makeWidgets=function(){
var _d3=[];
if(djConfig.searchIds&&djConfig.searchIds.length>0){
_d3=_d3.concat(djConfig.searchIds);
}
if(dojo.hostenv.searchIds&&dojo.hostenv.searchIds.length>0){
_d3=_d3.concat(dojo.hostenv.searchIds);
}
if((djConfig.parseWidgets)||(_d3.length>0)){
if(dojo.evalObjPath("dojo.widget.Parse")){
var _d4=new dojo.xml.Parse();
if(_d3.length>0){
for(var x=0;x<_d3.length;x++){
var _d6=document.getElementById(_d3[x]);
if(!_d6){
continue;
}
var _d7=_d4.parseElement(_d6,null,true);
dojo.widget.getParser().createComponents(_d7);
}
}else{
if(djConfig.parseWidgets){
var _d7=_d4.parseElement(dojo.body(),null,true);
dojo.widget.getParser().createComponents(_d7);
}
}
}
}
};
dojo.addOnLoad(function(){
if(!dojo.render.html.ie){
dojo.hostenv.makeWidgets();
}
});
try{
if(dojo.render.html.ie){
document.namespaces.add("v","urn:schemas-microsoft-com:vml");
document.createStyleSheet().addRule("v\\:*","behavior:url(#default#VML)");
}
}
catch(e){
}
dojo.hostenv.writeIncludes=function(){
};
if(!dj_undef("document",this)){
dj_currentDocument=this.document;
}
dojo.doc=function(){
return dj_currentDocument;
};
dojo.body=function(){
return dojo.doc().body||dojo.doc().getElementsByTagName("body")[0];
};
dojo.byId=function(id,doc){
if((id)&&((typeof id=="string")||(id instanceof String))){
if(!doc){
doc=dj_currentDocument;
}
var ele=doc.getElementById(id);
if(ele&&(ele.id!=id)&&doc.all){
ele=null;
eles=doc.all[id];
if(eles){
if(eles.length){
for(var i=0;i<eles.length;i++){
if(eles[i].id==id){
ele=eles[i];
break;
}
}
}else{
ele=eles;
}
}
}
return ele;
}
return id;
};
dojo.setContext=function(_dc,_dd){
dj_currentContext=_dc;
dj_currentDocument=_dd;
};
dojo._fireCallback=function(_de,_df,_e0){
if((_df)&&((typeof _de=="string")||(_de instanceof String))){
_de=_df[_de];
}
return (_df?_de.apply(_df,_e0||[]):_de());
};
dojo.withGlobal=function(_e1,_e2,_e3,_e4){
var _e5;
var _e6=dj_currentContext;
var _e7=dj_currentDocument;
try{
dojo.setContext(_e1,_e1.document);
_e5=dojo._fireCallback(_e2,_e3,_e4);
}
finally{
dojo.setContext(_e6,_e7);
}
return _e5;
};
dojo.withDoc=function(_e8,_e9,_ea,_eb){
var _ec;
var _ed=dj_currentDocument;
try{
dj_currentDocument=_e8;
_ec=dojo._fireCallback(_e9,_ea,_eb);
}
finally{
dj_currentDocument=_ed;
}
return _ec;
};
}
dojo.render.name=dojo.hostenv.name_="dashboard";
dojo.hostenv.println=function(_ee){
return alert(_ee);
};
dojo.hostenv.getXmlhttpObject=function(_ef){
if(widget.system&&_ef){
if((_ef.contentType&&_ef.contentType.indexOf("text/")!=0)||(_ef.headers&&_ef.headers["content-type"]&&_ef.headers["content-type"].indexOf("text/")!=0)){
var _f0=new dojo.hostenv.CurlRequest;
_f0._save=true;
return _f0;
}else{
if(_ef.method&&_ef.method.toUpperCase()=="HEAD"){
return new dojo.hostenv.CurlRequest;
}else{
if(_ef.headers&&_ef.header.referer){
return new dojo.hostenv.CurlRequest;
}
}
}
}
return new XMLHttpRequest;
};
dojo.hostenv.CurlRequest=function(){
this.onreadystatechange=null;
this.readyState=0;
this.responseText="";
this.responseXML=null;
this.status=0;
this.statusText="";
this._method="";
this._url="";
this._async=true;
this._referrer="";
this._headers=[];
this._save=false;
this._responseHeader="";
this._responseHeaders={};
this._fileName="";
this._username="";
this._password="";
};
dojo.hostenv.CurlRequest.prototype.open=function(_f1,url,_f3,_f4,_f5){
this._method=_f1;
this._url=url;
if(_f3){
this._async=_f3;
}
if(_f4){
this._username=_f4;
}
if(_f5){
this._password=_f5;
}
};
dojo.hostenv.CurlRequest.prototype.setRequestHeader=function(_f6,_f7){
switch(_f6){
case "Referer":
this._referrer=_f7;
break;
case "content-type":
break;
default:
this._headers.push(_f6+"="+_f7);
break;
}
};
dojo.hostenv.CurlRequest.prototype.getAllResponseHeaders=function(){
return this._responseHeader;
};
dojo.hostenv.CurlRequest.prototype.getResponseHeader=function(_f8){
return this._responseHeaders[_f8];
};
dojo.hostenv.CurlRequest.prototype.send=function(_f9){
this.readyState=1;
if(this.onreadystatechange){
this.onreadystatechange.call(this);
}
var _fa={sS:""};
if(this._referrer){
_fa.e=this._referrer;
}
if(this._headers.length){
_fa.H=this._headers.join("&");
}
if(this._username){
if(this._password){
_fa.u=this._username+":"+this._password;
}else{
_fa.u=this._username;
}
}
if(_f9){
_fa.d=this.content;
if(this._method!="POST"){
_fa.G="";
}
}
if(this._method=="HEAD"){
_fa.I="";
}else{
if(this._save){
_fa.I="";
}else{
_fa.i="";
}
}
var _fb=widget.system(dojo.hostenv.CurlRequest._formatCall(_fa,this._url),null);
this.readyState=2;
if(this.onreadystatechange){
this.onreadystatechange.call(this);
}
if(_fb.errorString){
this.responseText=_fb.errorString;
this.status=0;
}else{
if(this._save){
this._responseHeader=_fb.outputString;
}else{
var _fc=_fb.outputString.replace(/\r/g,"").split("\n\n",2);
this._responseHeader=_fc[0];
this.responseText=_fc[1];
}
_fc=this._responseHeader.split("\n");
this.statusText=_fc.shift();
this.status=this.statusText.split(" ")[1];
for(var i=0,_fe;_fe=_fc[i];i++){
var _ff=_fe.split(": ",2);
this._responseHeaders[_ff[0]]=_ff[1];
}
if(this._save){
widget.system("/bin/mkdir cache",null);
this._fileName=this._url.split("/").pop().replace(/\W/g,"");
this._fileName+="."+this._responseHeaders["Content-Type"].replace(/[\r\n]/g,"").split("/").pop();
delete _fa.I;
_fa.o="cache/"+this._fileName;
_fb=widget.system(dojo.hostenv.CurlRequest._formatCall(_fa,this._url),null);
if(!_fb.errorString){
this.responseText="cache/"+this._fileName;
}
}else{
if(this._method=="HEAD"){
this.responseText=this._responseHeader;
}
}
}
this.readyState=4;
if(this.onreadystatechange){
this.onreadystatechange.call(this);
}
};
dojo.hostenv.CurlRequest._formatCall=function(_100,url){
var call=["/usr/bin/curl"];
for(var key in _100){
if(_100[key]!=""){
call.push("-"+key+" '"+_100[key].replace(/'/g,"'")+"'");
}else{
call.push("-"+key);
}
}
call.push("'"+url.replace(/'/g,"'")+"'");
return call.join(" ");
};
dojo.hostenv.exit=function(){
if(widget.system){
widget.system("/bin/rm -rf cache/*",null);
}
};
(function(){
if(typeof dj_usingBootstrap!="undefined"){
return;
}
var _104=false;
var _105=false;
var _106=false;
if((typeof this["load"]=="function")&&((typeof this["Packages"]=="function")||(typeof this["Packages"]=="object"))){
_104=true;
}else{
if(typeof this["load"]=="function"){
_105=true;
}else{
if(window.widget){
_106=true;
}
}
}
var tmps=[];
if((this["djConfig"])&&((djConfig["isDebug"])||(djConfig["debugAtAllCosts"]))){
tmps.push("debug.js");
}
if((this["djConfig"])&&(djConfig["debugAtAllCosts"])&&(!_104)&&(!_106)){
tmps.push("browser_debug.js");
}
var _108=djConfig["baseScriptUri"];
if((this["djConfig"])&&(djConfig["baseLoaderUri"])){
_108=djConfig["baseLoaderUri"];
}
for(var x=0;x<tmps.length;x++){
var _10a=_108+"src/"+tmps[x];
if(_104||_105){
load(_10a);
}else{
try{
document.write("<scr"+"ipt type='text/javascript' src='"+_10a+"'></scr"+"ipt>");
}
catch(e){
var _10b=document.createElement("script");
_10b.src=_10a;
document.getElementsByTagName("head")[0].appendChild(_10b);
}
}
}
})();
dojo.provide("dojo.lang.common");
dojo.lang.inherits=function(_10c,_10d){
if(!dojo.lang.isFunction(_10d)){
dojo.raise("dojo.inherits: superclass argument ["+_10d+"] must be a function (subclass: ["+_10c+"']");
}
_10c.prototype=new _10d();
_10c.prototype.constructor=_10c;
_10c.superclass=_10d.prototype;
_10c["super"]=_10d.prototype;
};
dojo.lang._mixin=function(obj,_10f){
var tobj={};
for(var x in _10f){
if((typeof tobj[x]=="undefined")||(tobj[x]!=_10f[x])){
obj[x]=_10f[x];
}
}
if(dojo.render.html.ie&&(typeof (_10f["toString"])=="function")&&(_10f["toString"]!=obj["toString"])&&(_10f["toString"]!=tobj["toString"])){
obj.toString=_10f.toString;
}
return obj;
};
dojo.lang.mixin=function(obj,_113){
for(var i=1,l=arguments.length;i<l;i++){
dojo.lang._mixin(obj,arguments[i]);
}
return obj;
};
dojo.lang.extend=function(_116,_117){
for(var i=1,l=arguments.length;i<l;i++){
dojo.lang._mixin(_116.prototype,arguments[i]);
}
return _116;
};
dojo.inherits=dojo.lang.inherits;
dojo.mixin=dojo.lang.mixin;
dojo.extend=dojo.lang.extend;
dojo.lang.find=function(_11a,_11b,_11c,_11d){
if(!dojo.lang.isArrayLike(_11a)&&dojo.lang.isArrayLike(_11b)){
dojo.deprecated("dojo.lang.find(value, array)","use dojo.lang.find(array, value) instead","0.5");
var temp=_11a;
_11a=_11b;
_11b=temp;
}
var _11f=dojo.lang.isString(_11a);
if(_11f){
_11a=_11a.split("");
}
if(_11d){
var step=-1;
var i=_11a.length-1;
var end=-1;
}else{
var step=1;
var i=0;
var end=_11a.length;
}
if(_11c){
while(i!=end){
if(_11a[i]===_11b){
return i;
}
i+=step;
}
}else{
while(i!=end){
if(_11a[i]==_11b){
return i;
}
i+=step;
}
}
return -1;
};
dojo.lang.indexOf=dojo.lang.find;
dojo.lang.findLast=function(_123,_124,_125){
return dojo.lang.find(_123,_124,_125,true);
};
dojo.lang.lastIndexOf=dojo.lang.findLast;
dojo.lang.inArray=function(_126,_127){
return dojo.lang.find(_126,_127)>-1;
};
dojo.lang.isObject=function(it){
if(typeof it=="undefined"){
return false;
}
return (typeof it=="object"||it===null||dojo.lang.isArray(it)||dojo.lang.isFunction(it));
};
dojo.lang.isArray=function(it){
return (it&&it instanceof Array||typeof it=="array");
};
dojo.lang.isArrayLike=function(it){
if((!it)||(dojo.lang.isUndefined(it))){
return false;
}
if(dojo.lang.isString(it)){
return false;
}
if(dojo.lang.isFunction(it)){
return false;
}
if(dojo.lang.isArray(it)){
return true;
}
if((it.tagName)&&(it.tagName.toLowerCase()=="form")){
return false;
}
if(dojo.lang.isNumber(it.length)&&isFinite(it.length)){
return true;
}
return false;
};
dojo.lang.isFunction=function(it){
return (it instanceof Function||typeof it=="function");
};
(function(){
if((dojo.render.html.capable)&&(dojo.render.html["safari"])){
dojo.lang.isFunction=function(it){
if((typeof (it)=="function")&&(it=="[object NodeList]")){
return false;
}
return (it instanceof Function||typeof it=="function");
};
}
})();
dojo.lang.isString=function(it){
return (typeof it=="string"||it instanceof String);
};
dojo.lang.isAlien=function(it){
if(!it){
return false;
}
return !dojo.lang.isFunction(it)&&/\{\s*\[native code\]\s*\}/.test(String(it));
};
dojo.lang.isBoolean=function(it){
return (it instanceof Boolean||typeof it=="boolean");
};
dojo.lang.isNumber=function(it){
return (it instanceof Number||typeof it=="number");
};
dojo.lang.isUndefined=function(it){
return ((typeof (it)=="undefined")&&(it==undefined));
};
dojo.provide("dojo.lang");
dojo.deprecated("dojo.lang","replaced by dojo.lang.common","0.5");
dojo.provide("dojo.lang.array");
dojo.lang.mixin(dojo.lang,{has:function(obj,name){
try{
return typeof obj[name]!="undefined";
}
catch(e){
return false;
}
},isEmpty:function(obj){
if(dojo.lang.isObject(obj)){
var tmp={};
var _136=0;
for(var x in obj){
if(obj[x]&&(!tmp[x])){
_136++;
break;
}
}
return _136==0;
}else{
if(dojo.lang.isArrayLike(obj)||dojo.lang.isString(obj)){
return obj.length==0;
}
}
},map:function(arr,obj,_13a){
var _13b=dojo.lang.isString(arr);
if(_13b){
arr=arr.split("");
}
if(dojo.lang.isFunction(obj)&&(!_13a)){
_13a=obj;
obj=dj_global;
}else{
if(dojo.lang.isFunction(obj)&&_13a){
var _13c=obj;
obj=_13a;
_13a=_13c;
}
}
if(Array.map){
var _13d=Array.map(arr,_13a,obj);
}else{
var _13d=[];
for(var i=0;i<arr.length;++i){
_13d.push(_13a.call(obj,arr[i]));
}
}
if(_13b){
return _13d.join("");
}else{
return _13d;
}
},reduce:function(arr,_140,obj,_142){
var _143=_140;
if(arguments.length==1){
dojo.debug("dojo.lang.reduce called with too few arguments!");
return false;
}else{
if(arguments.length==2){
_142=_140;
_143=arr.shift();
}else{
if(arguments.lenght==3){
if(dojo.lang.isFunction(obj)){
_142=obj;
obj=null;
}
}else{
if(dojo.lang.isFunction(obj)){
var tmp=_142;
_142=obj;
obj=tmp;
}
}
}
}
var ob=obj?obj:dj_global;
dojo.lang.map(arr,function(val){
_143=_142.call(ob,_143,val);
});
return _143;
},forEach:function(_147,_148,_149){
if(dojo.lang.isString(_147)){
_147=_147.split("");
}
if(Array.forEach){
Array.forEach(_147,_148,_149);
}else{
if(!_149){
_149=dj_global;
}
for(var i=0,l=_147.length;i<l;i++){
_148.call(_149,_147[i],i,_147);
}
}
},_everyOrSome:function(_14c,arr,_14e,_14f){
if(dojo.lang.isString(arr)){
arr=arr.split("");
}
if(Array.every){
return Array[_14c?"every":"some"](arr,_14e,_14f);
}else{
if(!_14f){
_14f=dj_global;
}
for(var i=0,l=arr.length;i<l;i++){
var _152=_14e.call(_14f,arr[i],i,arr);
if(_14c&&!_152){
return false;
}else{
if((!_14c)&&(_152)){
return true;
}
}
}
return Boolean(_14c);
}
},every:function(arr,_154,_155){
return this._everyOrSome(true,arr,_154,_155);
},some:function(arr,_157,_158){
return this._everyOrSome(false,arr,_157,_158);
},filter:function(arr,_15a,_15b){
var _15c=dojo.lang.isString(arr);
if(_15c){
arr=arr.split("");
}
var _15d;
if(Array.filter){
_15d=Array.filter(arr,_15a,_15b);
}else{
if(!_15b){
if(arguments.length>=3){
dojo.raise("thisObject doesn't exist!");
}
_15b=dj_global;
}
_15d=[];
for(var i=0;i<arr.length;i++){
if(_15a.call(_15b,arr[i],i,arr)){
_15d.push(arr[i]);
}
}
}
if(_15c){
return _15d.join("");
}else{
return _15d;
}
},unnest:function(){
var out=[];
for(var i=0;i<arguments.length;i++){
if(dojo.lang.isArrayLike(arguments[i])){
var add=dojo.lang.unnest.apply(this,arguments[i]);
out=out.concat(add);
}else{
out.push(arguments[i]);
}
}
return out;
},toArray:function(_162,_163){
var _164=[];
for(var i=_163||0;i<_162.length;i++){
_164.push(_162[i]);
}
return _164;
}});
dojo.provide("dojo.lang.extras");
dojo.lang.setTimeout=function(func,_167){
var _168=window,_169=2;
if(!dojo.lang.isFunction(func)){
_168=func;
func=_167;
_167=arguments[2];
_169++;
}
if(dojo.lang.isString(func)){
func=_168[func];
}
var args=[];
for(var i=_169;i<arguments.length;i++){
args.push(arguments[i]);
}
return dojo.global().setTimeout(function(){
func.apply(_168,args);
},_167);
};
dojo.lang.clearTimeout=function(_16c){
dojo.global().clearTimeout(_16c);
};
dojo.lang.getNameInObj=function(ns,item){
if(!ns){
ns=dj_global;
}
for(var x in ns){
if(ns[x]===item){
return new String(x);
}
}
return null;
};
dojo.lang.shallowCopy=function(obj,deep){
var i,ret;
if(obj===null){
return null;
}
if(dojo.lang.isObject(obj)){
ret=new obj.constructor();
for(i in obj){
if(dojo.lang.isUndefined(ret[i])){
ret[i]=deep?dojo.lang.shallowCopy(obj[i],deep):obj[i];
}
}
}else{
if(dojo.lang.isArray(obj)){
ret=[];
for(i=0;i<obj.length;i++){
ret[i]=deep?dojo.lang.shallowCopy(obj[i],deep):obj[i];
}
}else{
ret=obj;
}
}
return ret;
};
dojo.lang.firstValued=function(){
for(var i=0;i<arguments.length;i++){
if(typeof arguments[i]!="undefined"){
return arguments[i];
}
}
return undefined;
};
dojo.lang.getObjPathValue=function(_175,_176,_177){
with(dojo.parseObjPath(_175,_176,_177)){
return dojo.evalProp(prop,obj,_177);
}
};
dojo.lang.setObjPathValue=function(_178,_179,_17a,_17b){
dojo.deprecated("dojo.lang.setObjPathValue","use dojo.parseObjPath and the '=' operator","0.6");
if(arguments.length<4){
_17b=true;
}
with(dojo.parseObjPath(_178,_17a,_17b)){
if(obj&&(_17b||(prop in obj))){
obj[prop]=_179;
}
}
};
dojo.provide("dojo.lang.func");
dojo.lang.hitch=function(_17c,_17d){
var fcn=(dojo.lang.isString(_17d)?_17c[_17d]:_17d)||function(){
};
return function(){
return fcn.apply(_17c,arguments);
};
};
dojo.lang.anonCtr=0;
dojo.lang.anon={};
dojo.lang.nameAnonFunc=function(_17f,_180,_181){
var nso=(_180||dojo.lang.anon);
if((_181)||((dj_global["djConfig"])&&(djConfig["slowAnonFuncLookups"]==true))){
for(var x in nso){
try{
if(nso[x]===_17f){
return x;
}
}
catch(e){
}
}
}
var ret="__"+dojo.lang.anonCtr++;
while(typeof nso[ret]!="undefined"){
ret="__"+dojo.lang.anonCtr++;
}
nso[ret]=_17f;
return ret;
};
dojo.lang.forward=function(_185){
return function(){
return this[_185].apply(this,arguments);
};
};
dojo.lang.curry=function(_186,func){
var _188=[];
_186=_186||dj_global;
if(dojo.lang.isString(func)){
func=_186[func];
}
for(var x=2;x<arguments.length;x++){
_188.push(arguments[x]);
}
var _18a=(func["__preJoinArity"]||func.length)-_188.length;
function gather(_18b,_18c,_18d){
var _18e=_18d;
var _18f=_18c.slice(0);
for(var x=0;x<_18b.length;x++){
_18f.push(_18b[x]);
}
_18d=_18d-_18b.length;
if(_18d<=0){
var res=func.apply(_186,_18f);
_18d=_18e;
return res;
}else{
return function(){
return gather(arguments,_18f,_18d);
};
}
}
return gather([],_188,_18a);
};
dojo.lang.curryArguments=function(_192,func,args,_195){
var _196=[];
var x=_195||0;
for(x=_195;x<args.length;x++){
_196.push(args[x]);
}
return dojo.lang.curry.apply(dojo.lang,[_192,func].concat(_196));
};
dojo.lang.tryThese=function(){
for(var x=0;x<arguments.length;x++){
try{
if(typeof arguments[x]=="function"){
var ret=(arguments[x]());
if(ret){
return ret;
}
}
}
catch(e){
dojo.debug(e);
}
}
};
dojo.lang.delayThese=function(farr,cb,_19c,_19d){
if(!farr.length){
if(typeof _19d=="function"){
_19d();
}
return;
}
if((typeof _19c=="undefined")&&(typeof cb=="number")){
_19c=cb;
cb=function(){
};
}else{
if(!cb){
cb=function(){
};
if(!_19c){
_19c=0;
}
}
}
setTimeout(function(){
(farr.shift())();
cb();
dojo.lang.delayThese(farr,cb,_19c,_19d);
},_19c);
};
dojo.provide("dojo.event.common");
dojo.event=new function(){
this._canTimeout=dojo.lang.isFunction(dj_global["setTimeout"])||dojo.lang.isAlien(dj_global["setTimeout"]);
function interpolateArgs(args,_19f){
var dl=dojo.lang;
var ao={srcObj:dj_global,srcFunc:null,adviceObj:dj_global,adviceFunc:null,aroundObj:null,aroundFunc:null,adviceType:(args.length>2)?args[0]:"after",precedence:"last",once:false,delay:null,rate:0,adviceMsg:false};
switch(args.length){
case 0:
return;
case 1:
return;
case 2:
ao.srcFunc=args[0];
ao.adviceFunc=args[1];
break;
case 3:
if((dl.isObject(args[0]))&&(dl.isString(args[1]))&&(dl.isString(args[2]))){
ao.adviceType="after";
ao.srcObj=args[0];
ao.srcFunc=args[1];
ao.adviceFunc=args[2];
}else{
if((dl.isString(args[1]))&&(dl.isString(args[2]))){
ao.srcFunc=args[1];
ao.adviceFunc=args[2];
}else{
if((dl.isObject(args[0]))&&(dl.isString(args[1]))&&(dl.isFunction(args[2]))){
ao.adviceType="after";
ao.srcObj=args[0];
ao.srcFunc=args[1];
var _1a2=dl.nameAnonFunc(args[2],ao.adviceObj,_19f);
ao.adviceFunc=_1a2;
}else{
if((dl.isFunction(args[0]))&&(dl.isObject(args[1]))&&(dl.isString(args[2]))){
ao.adviceType="after";
ao.srcObj=dj_global;
var _1a2=dl.nameAnonFunc(args[0],ao.srcObj,_19f);
ao.srcFunc=_1a2;
ao.adviceObj=args[1];
ao.adviceFunc=args[2];
}
}
}
}
break;
case 4:
if((dl.isObject(args[0]))&&(dl.isObject(args[2]))){
ao.adviceType="after";
ao.srcObj=args[0];
ao.srcFunc=args[1];
ao.adviceObj=args[2];
ao.adviceFunc=args[3];
}else{
if((dl.isString(args[0]))&&(dl.isString(args[1]))&&(dl.isObject(args[2]))){
ao.adviceType=args[0];
ao.srcObj=dj_global;
ao.srcFunc=args[1];
ao.adviceObj=args[2];
ao.adviceFunc=args[3];
}else{
if((dl.isString(args[0]))&&(dl.isFunction(args[1]))&&(dl.isObject(args[2]))){
ao.adviceType=args[0];
ao.srcObj=dj_global;
var _1a2=dl.nameAnonFunc(args[1],dj_global,_19f);
ao.srcFunc=_1a2;
ao.adviceObj=args[2];
ao.adviceFunc=args[3];
}else{
if((dl.isString(args[0]))&&(dl.isObject(args[1]))&&(dl.isString(args[2]))&&(dl.isFunction(args[3]))){
ao.srcObj=args[1];
ao.srcFunc=args[2];
var _1a2=dl.nameAnonFunc(args[3],dj_global,_19f);
ao.adviceObj=dj_global;
ao.adviceFunc=_1a2;
}else{
if(dl.isObject(args[1])){
ao.srcObj=args[1];
ao.srcFunc=args[2];
ao.adviceObj=dj_global;
ao.adviceFunc=args[3];
}else{
if(dl.isObject(args[2])){
ao.srcObj=dj_global;
ao.srcFunc=args[1];
ao.adviceObj=args[2];
ao.adviceFunc=args[3];
}else{
ao.srcObj=ao.adviceObj=ao.aroundObj=dj_global;
ao.srcFunc=args[1];
ao.adviceFunc=args[2];
ao.aroundFunc=args[3];
}
}
}
}
}
}
break;
case 6:
ao.srcObj=args[1];
ao.srcFunc=args[2];
ao.adviceObj=args[3];
ao.adviceFunc=args[4];
ao.aroundFunc=args[5];
ao.aroundObj=dj_global;
break;
default:
ao.srcObj=args[1];
ao.srcFunc=args[2];
ao.adviceObj=args[3];
ao.adviceFunc=args[4];
ao.aroundObj=args[5];
ao.aroundFunc=args[6];
ao.once=args[7];
ao.delay=args[8];
ao.rate=args[9];
ao.adviceMsg=args[10];
break;
}
if(dl.isFunction(ao.aroundFunc)){
var _1a2=dl.nameAnonFunc(ao.aroundFunc,ao.aroundObj,_19f);
ao.aroundFunc=_1a2;
}
if(dl.isFunction(ao.srcFunc)){
ao.srcFunc=dl.getNameInObj(ao.srcObj,ao.srcFunc);
}
if(dl.isFunction(ao.adviceFunc)){
ao.adviceFunc=dl.getNameInObj(ao.adviceObj,ao.adviceFunc);
}
if((ao.aroundObj)&&(dl.isFunction(ao.aroundFunc))){
ao.aroundFunc=dl.getNameInObj(ao.aroundObj,ao.aroundFunc);
}
if(!ao.srcObj){
dojo.raise("bad srcObj for srcFunc: "+ao.srcFunc);
}
if(!ao.adviceObj){
dojo.raise("bad adviceObj for adviceFunc: "+ao.adviceFunc);
}
if(!ao.adviceFunc){
dojo.debug("bad adviceFunc for srcFunc: "+ao.srcFunc);
dojo.debugShallow(ao);
}
return ao;
}
this.connect=function(){
if(arguments.length==1){
var ao=arguments[0];
}else{
var ao=interpolateArgs(arguments,true);
}
if(dojo.lang.isString(ao.srcFunc)&&(ao.srcFunc.toLowerCase()=="onkey")){
if(dojo.render.html.ie){
ao.srcFunc="onkeydown";
this.connect(ao);
}
ao.srcFunc="onkeypress";
}
if(dojo.lang.isArray(ao.srcObj)&&ao.srcObj!=""){
var _1a4={};
for(var x in ao){
_1a4[x]=ao[x];
}
var mjps=[];
dojo.lang.forEach(ao.srcObj,function(src){
if((dojo.render.html.capable)&&(dojo.lang.isString(src))){
src=dojo.byId(src);
}
_1a4.srcObj=src;
mjps.push(dojo.event.connect.call(dojo.event,_1a4));
});
return mjps;
}
var mjp=dojo.event.MethodJoinPoint.getForMethod(ao.srcObj,ao.srcFunc);
if(ao.adviceFunc){
var mjp2=dojo.event.MethodJoinPoint.getForMethod(ao.adviceObj,ao.adviceFunc);
}
mjp.kwAddAdvice(ao);
return mjp;
};
this.log=function(a1,a2){
var _1ac;
if((arguments.length==1)&&(typeof a1=="object")){
_1ac=a1;
}else{
_1ac={srcObj:a1,srcFunc:a2};
}
_1ac.adviceFunc=function(){
var _1ad=[];
for(var x=0;x<arguments.length;x++){
_1ad.push(arguments[x]);
}
dojo.debug("("+_1ac.srcObj+")."+_1ac.srcFunc,":",_1ad.join(", "));
};
this.kwConnect(_1ac);
};
this.connectBefore=function(){
var args=["before"];
for(var i=0;i<arguments.length;i++){
args.push(arguments[i]);
}
return this.connect.apply(this,args);
};
this.connectAround=function(){
var args=["around"];
for(var i=0;i<arguments.length;i++){
args.push(arguments[i]);
}
return this.connect.apply(this,args);
};
this.connectOnce=function(){
var ao=interpolateArgs(arguments,true);
ao.once=true;
return this.connect(ao);
};
this._kwConnectImpl=function(_1b4,_1b5){
var fn=(_1b5)?"disconnect":"connect";
if(typeof _1b4["srcFunc"]=="function"){
_1b4.srcObj=_1b4["srcObj"]||dj_global;
var _1b7=dojo.lang.nameAnonFunc(_1b4.srcFunc,_1b4.srcObj,true);
_1b4.srcFunc=_1b7;
}
if(typeof _1b4["adviceFunc"]=="function"){
_1b4.adviceObj=_1b4["adviceObj"]||dj_global;
var _1b7=dojo.lang.nameAnonFunc(_1b4.adviceFunc,_1b4.adviceObj,true);
_1b4.adviceFunc=_1b7;
}
_1b4.srcObj=_1b4["srcObj"]||dj_global;
_1b4.adviceObj=_1b4["adviceObj"]||_1b4["targetObj"]||dj_global;
_1b4.adviceFunc=_1b4["adviceFunc"]||_1b4["targetFunc"];
return dojo.event[fn](_1b4);
};
this.kwConnect=function(_1b8){
return this._kwConnectImpl(_1b8,false);
};
this.disconnect=function(){
if(arguments.length==1){
var ao=arguments[0];
}else{
var ao=interpolateArgs(arguments,true);
}
if(!ao.adviceFunc){
return;
}
if(dojo.lang.isString(ao.srcFunc)&&(ao.srcFunc.toLowerCase()=="onkey")){
if(dojo.render.html.ie){
ao.srcFunc="onkeydown";
this.disconnect(ao);
}
ao.srcFunc="onkeypress";
}
if(!ao.srcObj[ao.srcFunc]){
return null;
}
var mjp=dojo.event.MethodJoinPoint.getForMethod(ao.srcObj,ao.srcFunc,true);
mjp.removeAdvice(ao.adviceObj,ao.adviceFunc,ao.adviceType,ao.once);
return mjp;
};
this.kwDisconnect=function(_1bb){
return this._kwConnectImpl(_1bb,true);
};
};
dojo.event.MethodInvocation=function(_1bc,obj,args){
this.jp_=_1bc;
this.object=obj;
this.args=[];
for(var x=0;x<args.length;x++){
this.args[x]=args[x];
}
this.around_index=-1;
};
dojo.event.MethodInvocation.prototype.proceed=function(){
this.around_index++;
if(this.around_index>=this.jp_.around.length){
return this.jp_.object[this.jp_.methodname].apply(this.jp_.object,this.args);
}else{
var ti=this.jp_.around[this.around_index];
var mobj=ti[0]||dj_global;
var meth=ti[1];
return mobj[meth].call(mobj,this);
}
};
dojo.event.MethodJoinPoint=function(obj,_1c4){
this.object=obj||dj_global;
this.methodname=_1c4;
this.methodfunc=this.object[_1c4];
this.squelch=false;
};
dojo.event.MethodJoinPoint.getForMethod=function(obj,_1c6){
if(!obj){
obj=dj_global;
}
if(!obj[_1c6]){
obj[_1c6]=function(){
};
if(!obj[_1c6]){
dojo.raise("Cannot set do-nothing method on that object "+_1c6);
}
}else{
if((!dojo.lang.isFunction(obj[_1c6]))&&(!dojo.lang.isAlien(obj[_1c6]))){
return null;
}
}
var _1c7=_1c6+"$joinpoint";
var _1c8=_1c6+"$joinpoint$method";
var _1c9=obj[_1c7];
if(!_1c9){
var _1ca=false;
if(dojo.event["browser"]){
if((obj["attachEvent"])||(obj["nodeType"])||(obj["addEventListener"])){
_1ca=true;
dojo.event.browser.addClobberNodeAttrs(obj,[_1c7,_1c8,_1c6]);
}
}
var _1cb=obj[_1c6].length;
obj[_1c8]=obj[_1c6];
_1c9=obj[_1c7]=new dojo.event.MethodJoinPoint(obj,_1c8);
obj[_1c6]=function(){
var args=[];
if((_1ca)&&(!arguments.length)){
var evt=null;
try{
if(obj.ownerDocument){
evt=obj.ownerDocument.parentWindow.event;
}else{
if(obj.documentElement){
evt=obj.documentElement.ownerDocument.parentWindow.event;
}else{
if(obj.event){
evt=obj.event;
}else{
evt=window.event;
}
}
}
}
catch(e){
evt=window.event;
}
if(evt){
args.push(dojo.event.browser.fixEvent(evt,this));
}
}else{
for(var x=0;x<arguments.length;x++){
if((x==0)&&(_1ca)&&(dojo.event.browser.isEvent(arguments[x]))){
args.push(dojo.event.browser.fixEvent(arguments[x],this));
}else{
args.push(arguments[x]);
}
}
}
return _1c9.run.apply(_1c9,args);
};
obj[_1c6].__preJoinArity=_1cb;
}
return _1c9;
};
dojo.lang.extend(dojo.event.MethodJoinPoint,{unintercept:function(){
this.object[this.methodname]=this.methodfunc;
this.before=[];
this.after=[];
this.around=[];
},disconnect:dojo.lang.forward("unintercept"),run:function(){
var obj=this.object||dj_global;
var args=arguments;
var _1d1=[];
for(var x=0;x<args.length;x++){
_1d1[x]=args[x];
}
var _1d3=function(marr){
if(!marr){
dojo.debug("Null argument to unrollAdvice()");
return;
}
var _1d5=marr[0]||dj_global;
var _1d6=marr[1];
if(!_1d5[_1d6]){
dojo.raise("function \""+_1d6+"\" does not exist on \""+_1d5+"\"");
}
var _1d7=marr[2]||dj_global;
var _1d8=marr[3];
var msg=marr[6];
var _1da;
var to={args:[],jp_:this,object:obj,proceed:function(){
return _1d5[_1d6].apply(_1d5,to.args);
}};
to.args=_1d1;
var _1dc=parseInt(marr[4]);
var _1dd=((!isNaN(_1dc))&&(marr[4]!==null)&&(typeof marr[4]!="undefined"));
if(marr[5]){
var rate=parseInt(marr[5]);
var cur=new Date();
var _1e0=false;
if((marr["last"])&&((cur-marr.last)<=rate)){
if(dojo.event._canTimeout){
if(marr["delayTimer"]){
clearTimeout(marr.delayTimer);
}
var tod=parseInt(rate*2);
var mcpy=dojo.lang.shallowCopy(marr);
marr.delayTimer=setTimeout(function(){
mcpy[5]=0;
_1d3(mcpy);
},tod);
}
return;
}else{
marr.last=cur;
}
}
if(_1d8){
_1d7[_1d8].call(_1d7,to);
}else{
if((_1dd)&&((dojo.render.html)||(dojo.render.svg))){
dj_global["setTimeout"](function(){
if(msg){
_1d5[_1d6].call(_1d5,to);
}else{
_1d5[_1d6].apply(_1d5,args);
}
},_1dc);
}else{
if(msg){
_1d5[_1d6].call(_1d5,to);
}else{
_1d5[_1d6].apply(_1d5,args);
}
}
}
};
var _1e3=function(){
if(this.squelch){
try{
return _1d3.apply(this,arguments);
}
catch(e){
dojo.debug(e);
}
}else{
return _1d3.apply(this,arguments);
}
};
if((this["before"])&&(this.before.length>0)){
dojo.lang.forEach(this.before.concat(new Array()),_1e3);
}
var _1e4;
try{
if((this["around"])&&(this.around.length>0)){
var mi=new dojo.event.MethodInvocation(this,obj,args);
_1e4=mi.proceed();
}else{
if(this.methodfunc){
_1e4=this.object[this.methodname].apply(this.object,args);
}
}
}
catch(e){
if(!this.squelch){
dojo.debug(e,"when calling",this.methodname,"on",this.object,"with arguments",args);
dojo.raise(e);
}
}
if((this["after"])&&(this.after.length>0)){
dojo.lang.forEach(this.after.concat(new Array()),_1e3);
}
return (this.methodfunc)?_1e4:null;
},getArr:function(kind){
var type="after";
if((typeof kind=="string")&&(kind.indexOf("before")!=-1)){
type="before";
}else{
if(kind=="around"){
type="around";
}
}
if(!this[type]){
this[type]=[];
}
return this[type];
},kwAddAdvice:function(args){
this.addAdvice(args["adviceObj"],args["adviceFunc"],args["aroundObj"],args["aroundFunc"],args["adviceType"],args["precedence"],args["once"],args["delay"],args["rate"],args["adviceMsg"]);
},addAdvice:function(_1e9,_1ea,_1eb,_1ec,_1ed,_1ee,once,_1f0,rate,_1f2){
var arr=this.getArr(_1ed);
if(!arr){
dojo.raise("bad this: "+this);
}
var ao=[_1e9,_1ea,_1eb,_1ec,_1f0,rate,_1f2];
if(once){
if(this.hasAdvice(_1e9,_1ea,_1ed,arr)>=0){
return;
}
}
if(_1ee=="first"){
arr.unshift(ao);
}else{
arr.push(ao);
}
},hasAdvice:function(_1f5,_1f6,_1f7,arr){
if(!arr){
arr=this.getArr(_1f7);
}
var ind=-1;
for(var x=0;x<arr.length;x++){
var aao=(typeof _1f6=="object")?(new String(_1f6)).toString():_1f6;
var a1o=(typeof arr[x][1]=="object")?(new String(arr[x][1])).toString():arr[x][1];
if((arr[x][0]==_1f5)&&(a1o==aao)){
ind=x;
}
}
return ind;
},removeAdvice:function(_1fd,_1fe,_1ff,once){
var arr=this.getArr(_1ff);
var ind=this.hasAdvice(_1fd,_1fe,_1ff,arr);
if(ind==-1){
return false;
}
while(ind!=-1){
arr.splice(ind,1);
if(once){
break;
}
ind=this.hasAdvice(_1fd,_1fe,_1ff,arr);
}
return true;
}});
dojo.provide("dojo.event.topic");
dojo.event.topic=new function(){
this.topics={};
this.getTopic=function(_203){
if(!this.topics[_203]){
this.topics[_203]=new this.TopicImpl(_203);
}
return this.topics[_203];
};
this.registerPublisher=function(_204,obj,_206){
var _204=this.getTopic(_204);
_204.registerPublisher(obj,_206);
};
this.subscribe=function(_207,obj,_209){
var _207=this.getTopic(_207);
_207.subscribe(obj,_209);
};
this.unsubscribe=function(_20a,obj,_20c){
var _20a=this.getTopic(_20a);
_20a.unsubscribe(obj,_20c);
};
this.destroy=function(_20d){
this.getTopic(_20d).destroy();
delete this.topics[_20d];
};
this.publishApply=function(_20e,args){
var _20e=this.getTopic(_20e);
_20e.sendMessage.apply(_20e,args);
};
this.publish=function(_210,_211){
var _210=this.getTopic(_210);
var args=[];
for(var x=1;x<arguments.length;x++){
args.push(arguments[x]);
}
_210.sendMessage.apply(_210,args);
};
};
dojo.event.topic.TopicImpl=function(_214){
this.topicName=_214;
this.subscribe=function(_215,_216){
var tf=_216||_215;
var to=(!_216)?dj_global:_215;
return dojo.event.kwConnect({srcObj:this,srcFunc:"sendMessage",adviceObj:to,adviceFunc:tf});
};
this.unsubscribe=function(_219,_21a){
var tf=(!_21a)?_219:_21a;
var to=(!_21a)?null:_219;
return dojo.event.kwDisconnect({srcObj:this,srcFunc:"sendMessage",adviceObj:to,adviceFunc:tf});
};
this._getJoinPoint=function(){
return dojo.event.MethodJoinPoint.getForMethod(this,"sendMessage");
};
this.setSquelch=function(_21d){
this._getJoinPoint().squelch=_21d;
};
this.destroy=function(){
this._getJoinPoint().disconnect();
};
this.registerPublisher=function(_21e,_21f){
dojo.event.connect(_21e,_21f,this,"sendMessage");
};
this.sendMessage=function(_220){
};
};
dojo.provide("dojo.event.browser");
dojo._ie_clobber=new function(){
this.clobberNodes=[];
function nukeProp(node,prop){
try{
node[prop]=null;
}
catch(e){
}
try{
delete node[prop];
}
catch(e){
}
try{
node.removeAttribute(prop);
}
catch(e){
}
}
this.clobber=function(_223){
var na;
var tna;
if(_223){
tna=_223.all||_223.getElementsByTagName("*");
na=[_223];
for(var x=0;x<tna.length;x++){
if(tna[x]["__doClobber__"]){
na.push(tna[x]);
}
}
}else{
try{
window.onload=null;
}
catch(e){
}
na=(this.clobberNodes.length)?this.clobberNodes:document.all;
}
tna=null;
var _227={};
for(var i=na.length-1;i>=0;i=i-1){
var el=na[i];
try{
if(el&&el["__clobberAttrs__"]){
for(var j=0;j<el.__clobberAttrs__.length;j++){
nukeProp(el,el.__clobberAttrs__[j]);
}
nukeProp(el,"__clobberAttrs__");
nukeProp(el,"__doClobber__");
}
}
catch(e){
}
}
na=null;
};
};
if(dojo.render.html.ie){
dojo.addOnUnload(function(){
dojo._ie_clobber.clobber();
try{
if((dojo["widget"])&&(dojo.widget["manager"])){
dojo.widget.manager.destroyAll();
}
}
catch(e){
}
if(dojo.widget){
for(var name in dojo.widget._templateCache){
if(dojo.widget._templateCache[name].node){
dojo.dom.destroyNode(dojo.widget._templateCache[name].node);
dojo.widget._templateCache[name].node=null;
delete dojo.widget._templateCache[name].node;
}
}
}
try{
window.onload=null;
}
catch(e){
}
try{
window.onunload=null;
}
catch(e){
}
dojo._ie_clobber.clobberNodes=[];
});
}
dojo.event.browser=new function(){
var _22c=0;
this.normalizedEventName=function(_22d){
switch(_22d){
case "CheckboxStateChange":
case "DOMAttrModified":
case "DOMMenuItemActive":
case "DOMMenuItemInactive":
case "DOMMouseScroll":
case "DOMNodeInserted":
case "DOMNodeRemoved":
case "RadioStateChange":
return _22d;
break;
default:
return _22d.toLowerCase();
break;
}
};
this.clean=function(node){
if(dojo.render.html.ie){
dojo._ie_clobber.clobber(node);
}
};
this.addClobberNode=function(node){
if(!dojo.render.html.ie){
return;
}
if(!node["__doClobber__"]){
node.__doClobber__=true;
dojo._ie_clobber.clobberNodes.push(node);
node.__clobberAttrs__=[];
}
};
this.addClobberNodeAttrs=function(node,_231){
if(!dojo.render.html.ie){
return;
}
this.addClobberNode(node);
for(var x=0;x<_231.length;x++){
node.__clobberAttrs__.push(_231[x]);
}
};
this.removeListener=function(node,_234,fp,_236){
if(!_236){
var _236=false;
}
_234=dojo.event.browser.normalizedEventName(_234);
if((_234=="onkey")||(_234=="key")){
if(dojo.render.html.ie){
this.removeListener(node,"onkeydown",fp,_236);
}
_234="onkeypress";
}
if(_234.substr(0,2)=="on"){
_234=_234.substr(2);
}
if(node.removeEventListener){
node.removeEventListener(_234,fp,_236);
}
};
this.addListener=function(node,_238,fp,_23a,_23b){
if(!node){
return;
}
if(!_23a){
var _23a=false;
}
_238=dojo.event.browser.normalizedEventName(_238);
if((_238=="onkey")||(_238=="key")){
if(dojo.render.html.ie){
this.addListener(node,"onkeydown",fp,_23a,_23b);
}
_238="onkeypress";
}
if(_238.substr(0,2)!="on"){
_238="on"+_238;
}
if(!_23b){
var _23c=function(evt){
if(!evt){
evt=window.event;
}
var ret=fp(dojo.event.browser.fixEvent(evt,this));
if(_23a){
dojo.event.browser.stopEvent(evt);
}
return ret;
};
}else{
_23c=fp;
}
if(node.addEventListener){
node.addEventListener(_238.substr(2),_23c,_23a);
return _23c;
}else{
if(typeof node[_238]=="function"){
var _23f=node[_238];
node[_238]=function(e){
_23f(e);
return _23c(e);
};
}else{
node[_238]=_23c;
}
if(dojo.render.html.ie){
this.addClobberNodeAttrs(node,[_238]);
}
return _23c;
}
};
this.isEvent=function(obj){
return (typeof obj!="undefined")&&(obj)&&(typeof Event!="undefined")&&(obj.eventPhase);
};
this.currentEvent=null;
this.callListener=function(_242,_243){
if(typeof _242!="function"){
dojo.raise("listener not a function: "+_242);
}
dojo.event.browser.currentEvent.currentTarget=_243;
return _242.call(_243,dojo.event.browser.currentEvent);
};
this._stopPropagation=function(){
dojo.event.browser.currentEvent.cancelBubble=true;
};
this._preventDefault=function(){
dojo.event.browser.currentEvent.returnValue=false;
};
this.keys={KEY_BACKSPACE:8,KEY_TAB:9,KEY_CLEAR:12,KEY_ENTER:13,KEY_SHIFT:16,KEY_CTRL:17,KEY_ALT:18,KEY_PAUSE:19,KEY_CAPS_LOCK:20,KEY_ESCAPE:27,KEY_SPACE:32,KEY_PAGE_UP:33,KEY_PAGE_DOWN:34,KEY_END:35,KEY_HOME:36,KEY_LEFT_ARROW:37,KEY_UP_ARROW:38,KEY_RIGHT_ARROW:39,KEY_DOWN_ARROW:40,KEY_INSERT:45,KEY_DELETE:46,KEY_HELP:47,KEY_LEFT_WINDOW:91,KEY_RIGHT_WINDOW:92,KEY_SELECT:93,KEY_NUMPAD_0:96,KEY_NUMPAD_1:97,KEY_NUMPAD_2:98,KEY_NUMPAD_3:99,KEY_NUMPAD_4:100,KEY_NUMPAD_5:101,KEY_NUMPAD_6:102,KEY_NUMPAD_7:103,KEY_NUMPAD_8:104,KEY_NUMPAD_9:105,KEY_NUMPAD_MULTIPLY:106,KEY_NUMPAD_PLUS:107,KEY_NUMPAD_ENTER:108,KEY_NUMPAD_MINUS:109,KEY_NUMPAD_PERIOD:110,KEY_NUMPAD_DIVIDE:111,KEY_F1:112,KEY_F2:113,KEY_F3:114,KEY_F4:115,KEY_F5:116,KEY_F6:117,KEY_F7:118,KEY_F8:119,KEY_F9:120,KEY_F10:121,KEY_F11:122,KEY_F12:123,KEY_F13:124,KEY_F14:125,KEY_F15:126,KEY_NUM_LOCK:144,KEY_SCROLL_LOCK:145};
this.revKeys=[];
for(var key in this.keys){
this.revKeys[this.keys[key]]=key;
}
this.fixEvent=function(evt,_246){
if(!evt){
if(window["event"]){
evt=window.event;
}
}
if((evt["type"])&&(evt["type"].indexOf("key")==0)){
evt.keys=this.revKeys;
for(var key in this.keys){
evt[key]=this.keys[key];
}
if(evt["type"]=="keydown"&&dojo.render.html.ie){
switch(evt.keyCode){
case evt.KEY_SHIFT:
case evt.KEY_CTRL:
case evt.KEY_ALT:
case evt.KEY_CAPS_LOCK:
case evt.KEY_LEFT_WINDOW:
case evt.KEY_RIGHT_WINDOW:
case evt.KEY_SELECT:
case evt.KEY_NUM_LOCK:
case evt.KEY_SCROLL_LOCK:
case evt.KEY_NUMPAD_0:
case evt.KEY_NUMPAD_1:
case evt.KEY_NUMPAD_2:
case evt.KEY_NUMPAD_3:
case evt.KEY_NUMPAD_4:
case evt.KEY_NUMPAD_5:
case evt.KEY_NUMPAD_6:
case evt.KEY_NUMPAD_7:
case evt.KEY_NUMPAD_8:
case evt.KEY_NUMPAD_9:
case evt.KEY_NUMPAD_PERIOD:
break;
case evt.KEY_NUMPAD_MULTIPLY:
case evt.KEY_NUMPAD_PLUS:
case evt.KEY_NUMPAD_ENTER:
case evt.KEY_NUMPAD_MINUS:
case evt.KEY_NUMPAD_DIVIDE:
break;
case evt.KEY_PAUSE:
case evt.KEY_TAB:
case evt.KEY_BACKSPACE:
case evt.KEY_ENTER:
case evt.KEY_ESCAPE:
case evt.KEY_PAGE_UP:
case evt.KEY_PAGE_DOWN:
case evt.KEY_END:
case evt.KEY_HOME:
case evt.KEY_LEFT_ARROW:
case evt.KEY_UP_ARROW:
case evt.KEY_RIGHT_ARROW:
case evt.KEY_DOWN_ARROW:
case evt.KEY_INSERT:
case evt.KEY_DELETE:
case evt.KEY_F1:
case evt.KEY_F2:
case evt.KEY_F3:
case evt.KEY_F4:
case evt.KEY_F5:
case evt.KEY_F6:
case evt.KEY_F7:
case evt.KEY_F8:
case evt.KEY_F9:
case evt.KEY_F10:
case evt.KEY_F11:
case evt.KEY_F12:
case evt.KEY_F12:
case evt.KEY_F13:
case evt.KEY_F14:
case evt.KEY_F15:
case evt.KEY_CLEAR:
case evt.KEY_HELP:
evt.key=evt.keyCode;
break;
default:
if(evt.ctrlKey||evt.altKey){
var _248=evt.keyCode;
if(_248>=65&&_248<=90&&evt.shiftKey==false){
_248+=32;
}
if(_248>=1&&_248<=26&&evt.ctrlKey){
_248+=96;
}
evt.key=String.fromCharCode(_248);
}
}
}else{
if(evt["type"]=="keypress"){
if(dojo.render.html.opera){
if(evt.which==0){
evt.key=evt.keyCode;
}else{
if(evt.which>0){
switch(evt.which){
case evt.KEY_SHIFT:
case evt.KEY_CTRL:
case evt.KEY_ALT:
case evt.KEY_CAPS_LOCK:
case evt.KEY_NUM_LOCK:
case evt.KEY_SCROLL_LOCK:
break;
case evt.KEY_PAUSE:
case evt.KEY_TAB:
case evt.KEY_BACKSPACE:
case evt.KEY_ENTER:
case evt.KEY_ESCAPE:
evt.key=evt.which;
break;
default:
var _248=evt.which;
if((evt.ctrlKey||evt.altKey||evt.metaKey)&&(evt.which>=65&&evt.which<=90&&evt.shiftKey==false)){
_248+=32;
}
evt.key=String.fromCharCode(_248);
}
}
}
}else{
if(dojo.render.html.ie){
if(!evt.ctrlKey&&!evt.altKey&&evt.keyCode>=evt.KEY_SPACE){
evt.key=String.fromCharCode(evt.keyCode);
}
}else{
if(dojo.render.html.safari){
switch(evt.keyCode){
case 25:
evt.key=evt.KEY_TAB;
evt.shift=true;
break;
case 63232:
evt.key=evt.KEY_UP_ARROW;
break;
case 63233:
evt.key=evt.KEY_DOWN_ARROW;
break;
case 63234:
evt.key=evt.KEY_LEFT_ARROW;
break;
case 63235:
evt.key=evt.KEY_RIGHT_ARROW;
break;
case 63236:
evt.key=evt.KEY_F1;
break;
case 63237:
evt.key=evt.KEY_F2;
break;
case 63238:
evt.key=evt.KEY_F3;
break;
case 63239:
evt.key=evt.KEY_F4;
break;
case 63240:
evt.key=evt.KEY_F5;
break;
case 63241:
evt.key=evt.KEY_F6;
break;
case 63242:
evt.key=evt.KEY_F7;
break;
case 63243:
evt.key=evt.KEY_F8;
break;
case 63244:
evt.key=evt.KEY_F9;
break;
case 63245:
evt.key=evt.KEY_F10;
break;
case 63246:
evt.key=evt.KEY_F11;
break;
case 63247:
evt.key=evt.KEY_F12;
break;
case 63250:
evt.key=evt.KEY_PAUSE;
break;
case 63272:
evt.key=evt.KEY_DELETE;
break;
case 63273:
evt.key=evt.KEY_HOME;
break;
case 63275:
evt.key=evt.KEY_END;
break;
case 63276:
evt.key=evt.KEY_PAGE_UP;
break;
case 63277:
evt.key=evt.KEY_PAGE_DOWN;
break;
case 63302:
evt.key=evt.KEY_INSERT;
break;
case 63248:
case 63249:
case 63289:
break;
default:
evt.key=evt.charCode>=evt.KEY_SPACE?String.fromCharCode(evt.charCode):evt.keyCode;
}
}else{
evt.key=evt.charCode>0?String.fromCharCode(evt.charCode):evt.keyCode;
}
}
}
}
}
}
if(dojo.render.html.ie){
if(!evt.target){
evt.target=evt.srcElement;
}
if(!evt.currentTarget){
evt.currentTarget=(_246?_246:evt.srcElement);
}
if(!evt.layerX){
evt.layerX=evt.offsetX;
}
if(!evt.layerY){
evt.layerY=evt.offsetY;
}
var doc=(evt.srcElement&&evt.srcElement.ownerDocument)?evt.srcElement.ownerDocument:document;
var _24a=((dojo.render.html.ie55)||(doc["compatMode"]=="BackCompat"))?doc.body:doc.documentElement;
if(!evt.pageX){
evt.pageX=evt.clientX+(_24a.scrollLeft||0);
}
if(!evt.pageY){
evt.pageY=evt.clientY+(_24a.scrollTop||0);
}
if(evt.type=="mouseover"){
evt.relatedTarget=evt.fromElement;
}
if(evt.type=="mouseout"){
evt.relatedTarget=evt.toElement;
}
this.currentEvent=evt;
evt.callListener=this.callListener;
evt.stopPropagation=this._stopPropagation;
evt.preventDefault=this._preventDefault;
}
return evt;
};
this.stopEvent=function(evt){
if(window.event){
evt.cancelBubble=true;
evt.returnValue=false;
}else{
evt.preventDefault();
evt.stopPropagation();
}
};
};
dojo.provide("dojo.event.*");
dojo.provide("dojo.string.common");
dojo.string.trim=function(str,wh){
if(!str.replace){
return str;
}
if(!str.length){
return str;
}
var re=(wh>0)?(/^\s+/):(wh<0)?(/\s+$/):(/^\s+|\s+$/g);
return str.replace(re,"");
};
dojo.string.trimStart=function(str){
return dojo.string.trim(str,1);
};
dojo.string.trimEnd=function(str){
return dojo.string.trim(str,-1);
};
dojo.string.repeat=function(str,_252,_253){
var out="";
for(var i=0;i<_252;i++){
out+=str;
if(_253&&i<_252-1){
out+=_253;
}
}
return out;
};
dojo.string.pad=function(str,len,c,dir){
var out=String(str);
if(!c){
c="0";
}
if(!dir){
dir=1;
}
while(out.length<len){
if(dir>0){
out=c+out;
}else{
out+=c;
}
}
return out;
};
dojo.string.padLeft=function(str,len,c){
return dojo.string.pad(str,len,c,1);
};
dojo.string.padRight=function(str,len,c){
return dojo.string.pad(str,len,c,-1);
};
dojo.provide("dojo.string");
dojo.provide("dojo.io.common");
dojo.io.transports=[];
dojo.io.hdlrFuncNames=["load","error","timeout"];
dojo.io.Request=function(url,_262,_263,_264){
if((arguments.length==1)&&(arguments[0].constructor==Object)){
this.fromKwArgs(arguments[0]);
}else{
this.url=url;
if(_262){
this.mimetype=_262;
}
if(_263){
this.transport=_263;
}
if(arguments.length>=4){
this.changeUrl=_264;
}
}
};
dojo.lang.extend(dojo.io.Request,{url:"",mimetype:"text/plain",method:"GET",content:undefined,transport:undefined,changeUrl:undefined,formNode:undefined,sync:false,bindSuccess:false,useCache:false,preventCache:false,load:function(type,data,_267,_268){
},error:function(type,_26a,_26b,_26c){
},timeout:function(type,_26e,_26f,_270){
},handle:function(type,data,_273,_274){
},timeoutSeconds:0,abort:function(){
},fromKwArgs:function(_275){
if(_275["url"]){
_275.url=_275.url.toString();
}
if(_275["formNode"]){
_275.formNode=dojo.byId(_275.formNode);
}
if(!_275["method"]&&_275["formNode"]&&_275["formNode"].method){
_275.method=_275["formNode"].method;
}
if(!_275["handle"]&&_275["handler"]){
_275.handle=_275.handler;
}
if(!_275["load"]&&_275["loaded"]){
_275.load=_275.loaded;
}
if(!_275["changeUrl"]&&_275["changeURL"]){
_275.changeUrl=_275.changeURL;
}
_275.encoding=dojo.lang.firstValued(_275["encoding"],djConfig["bindEncoding"],"");
_275.sendTransport=dojo.lang.firstValued(_275["sendTransport"],djConfig["ioSendTransport"],false);
var _276=dojo.lang.isFunction;
for(var x=0;x<dojo.io.hdlrFuncNames.length;x++){
var fn=dojo.io.hdlrFuncNames[x];
if(_275[fn]&&_276(_275[fn])){
continue;
}
if(_275["handle"]&&_276(_275["handle"])){
_275[fn]=_275.handle;
}
}
dojo.lang.mixin(this,_275);
}});
dojo.io.Error=function(msg,type,num){
this.message=msg;
this.type=type||"unknown";
this.number=num||0;
};
dojo.io.transports.addTransport=function(name){
this.push(name);
this[name]=dojo.io[name];
};
dojo.io.bind=function(_27d){
if(!(_27d instanceof dojo.io.Request)){
try{
_27d=new dojo.io.Request(_27d);
}
catch(e){
dojo.debug(e);
}
}
var _27e="";
if(_27d["transport"]){
_27e=_27d["transport"];
if(!this[_27e]){
dojo.io.sendBindError(_27d,"No dojo.io.bind() transport with name '"+_27d["transport"]+"'.");
return _27d;
}
if(!this[_27e].canHandle(_27d)){
dojo.io.sendBindError(_27d,"dojo.io.bind() transport with name '"+_27d["transport"]+"' cannot handle this type of request.");
return _27d;
}
}else{
for(var x=0;x<dojo.io.transports.length;x++){
var tmp=dojo.io.transports[x];
if((this[tmp])&&(this[tmp].canHandle(_27d))){
_27e=tmp;
break;
}
}
if(_27e==""){
dojo.io.sendBindError(_27d,"None of the loaded transports for dojo.io.bind()"+" can handle the request.");
return _27d;
}
}
this[_27e].bind(_27d);
_27d.bindSuccess=true;
return _27d;
};
dojo.io.sendBindError=function(_281,_282){
if((typeof _281.error=="function"||typeof _281.handle=="function")&&(typeof setTimeout=="function"||typeof setTimeout=="object")){
var _283=new dojo.io.Error(_282);
setTimeout(function(){
_281[(typeof _281.error=="function")?"error":"handle"]("error",_283,null,_281);
},50);
}else{
dojo.raise(_282);
}
};
dojo.io.queueBind=function(_284){
if(!(_284 instanceof dojo.io.Request)){
try{
_284=new dojo.io.Request(_284);
}
catch(e){
dojo.debug(e);
}
}
var _285=_284.load;
_284.load=function(){
dojo.io._queueBindInFlight=false;
var ret=_285.apply(this,arguments);
dojo.io._dispatchNextQueueBind();
return ret;
};
var _287=_284.error;
_284.error=function(){
dojo.io._queueBindInFlight=false;
var ret=_287.apply(this,arguments);
dojo.io._dispatchNextQueueBind();
return ret;
};
dojo.io._bindQueue.push(_284);
dojo.io._dispatchNextQueueBind();
return _284;
};
dojo.io._dispatchNextQueueBind=function(){
if(!dojo.io._queueBindInFlight){
dojo.io._queueBindInFlight=true;
if(dojo.io._bindQueue.length>0){
dojo.io.bind(dojo.io._bindQueue.shift());
}else{
dojo.io._queueBindInFlight=false;
}
}
};
dojo.io._bindQueue=[];
dojo.io._queueBindInFlight=false;
dojo.io.argsFromMap=function(map,_28a,last){
var enc=/utf/i.test(_28a||"")?encodeURIComponent:dojo.string.encodeAscii;
var _28d=[];
var _28e=new Object();
for(var name in map){
var _290=function(elt){
var val=enc(name)+"="+enc(elt);
_28d[(last==name)?"push":"unshift"](val);
};
if(!_28e[name]){
var _293=map[name];
if(dojo.lang.isArray(_293)){
dojo.lang.forEach(_293,_290);
}else{
_290(_293);
}
}
}
return _28d.join("&");
};
dojo.io.setIFrameSrc=function(_294,src,_296){
try{
var r=dojo.render.html;
if(!_296){
if(r.safari){
_294.location=src;
}else{
frames[_294.name].location=src;
}
}else{
var idoc;
if(r.ie){
idoc=_294.contentWindow.document;
}else{
if(r.safari){
idoc=_294.document;
}else{
idoc=_294.contentWindow;
}
}
if(!idoc){
_294.location=src;
return;
}else{
idoc.location.replace(src);
}
}
}
catch(e){
dojo.debug(e);
dojo.debug("setIFrameSrc: "+e);
}
};
dojo.provide("dojo.string.extras");
dojo.string.substituteParams=function(_299,hash){
var map=(typeof hash=="object")?hash:dojo.lang.toArray(arguments,1);
return _299.replace(/\%\{(\w+)\}/g,function(_29c,key){
if(typeof (map[key])!="undefined"&&map[key]!=null){
return map[key];
}
dojo.raise("Substitution not found: "+key);
});
};
dojo.string.capitalize=function(str){
if(!dojo.lang.isString(str)){
return "";
}
if(arguments.length==0){
str=this;
}
var _29f=str.split(" ");
for(var i=0;i<_29f.length;i++){
_29f[i]=_29f[i].charAt(0).toUpperCase()+_29f[i].substring(1);
}
return _29f.join(" ");
};
dojo.string.isBlank=function(str){
if(!dojo.lang.isString(str)){
return true;
}
return (dojo.string.trim(str).length==0);
};
dojo.string.encodeAscii=function(str){
if(!dojo.lang.isString(str)){
return str;
}
var ret="";
var _2a4=escape(str);
var _2a5,re=/%u([0-9A-F]{4})/i;
while((_2a5=_2a4.match(re))){
var num=Number("0x"+_2a5[1]);
var _2a8=escape("&#"+num+";");
ret+=_2a4.substring(0,_2a5.index)+_2a8;
_2a4=_2a4.substring(_2a5.index+_2a5[0].length);
}
ret+=_2a4.replace(/\+/g,"%2B");
return ret;
};
dojo.string.escape=function(type,str){
var args=dojo.lang.toArray(arguments,1);
switch(type.toLowerCase()){
case "xml":
case "html":
case "xhtml":
return dojo.string.escapeXml.apply(this,args);
case "sql":
return dojo.string.escapeSql.apply(this,args);
case "regexp":
case "regex":
return dojo.string.escapeRegExp.apply(this,args);
case "javascript":
case "jscript":
case "js":
return dojo.string.escapeJavaScript.apply(this,args);
case "ascii":
return dojo.string.encodeAscii.apply(this,args);
default:
return str;
}
};
dojo.string.escapeXml=function(str,_2ad){
str=str.replace(/&/gm,"&amp;").replace(/</gm,"&lt;").replace(/>/gm,"&gt;").replace(/"/gm,"&quot;");
if(!_2ad){
str=str.replace(/'/gm,"&#39;");
}
return str;
};
dojo.string.escapeSql=function(str){
return str.replace(/'/gm,"''");
};
dojo.string.escapeRegExp=function(str){
return str.replace(/\\/gm,"\\\\").replace(/([\f\b\n\t\r[\^$|?*+(){}])/gm,"\\$1");
};
dojo.string.escapeJavaScript=function(str){
return str.replace(/(["'\f\b\n\t\r])/gm,"\\$1");
};
dojo.string.escapeString=function(str){
return ("\""+str.replace(/(["\\])/g,"\\$1")+"\"").replace(/[\f]/g,"\\f").replace(/[\b]/g,"\\b").replace(/[\n]/g,"\\n").replace(/[\t]/g,"\\t").replace(/[\r]/g,"\\r");
};
dojo.string.summary=function(str,len){
if(!len||str.length<=len){
return str;
}
return str.substring(0,len).replace(/\.+$/,"")+"...";
};
dojo.string.endsWith=function(str,end,_2b6){
if(_2b6){
str=str.toLowerCase();
end=end.toLowerCase();
}
if((str.length-end.length)<0){
return false;
}
return str.lastIndexOf(end)==str.length-end.length;
};
dojo.string.endsWithAny=function(str){
for(var i=1;i<arguments.length;i++){
if(dojo.string.endsWith(str,arguments[i])){
return true;
}
}
return false;
};
dojo.string.startsWith=function(str,_2ba,_2bb){
if(_2bb){
str=str.toLowerCase();
_2ba=_2ba.toLowerCase();
}
return str.indexOf(_2ba)==0;
};
dojo.string.startsWithAny=function(str){
for(var i=1;i<arguments.length;i++){
if(dojo.string.startsWith(str,arguments[i])){
return true;
}
}
return false;
};
dojo.string.has=function(str){
for(var i=1;i<arguments.length;i++){
if(str.indexOf(arguments[i])>-1){
return true;
}
}
return false;
};
dojo.string.normalizeNewlines=function(text,_2c1){
if(_2c1=="\n"){
text=text.replace(/\r\n/g,"\n");
text=text.replace(/\r/g,"\n");
}else{
if(_2c1=="\r"){
text=text.replace(/\r\n/g,"\r");
text=text.replace(/\n/g,"\r");
}else{
text=text.replace(/([^\r])\n/g,"$1\r\n").replace(/\r([^\n])/g,"\r\n$1");
}
}
return text;
};
dojo.string.splitEscaped=function(str,_2c3){
var _2c4=[];
for(var i=0,_2c6=0;i<str.length;i++){
if(str.charAt(i)=="\\"){
i++;
continue;
}
if(str.charAt(i)==_2c3){
_2c4.push(str.substring(_2c6,i));
_2c6=i+1;
}
}
_2c4.push(str.substr(_2c6));
return _2c4;
};
dojo.provide("dojo.dom");
dojo.dom.ELEMENT_NODE=1;
dojo.dom.ATTRIBUTE_NODE=2;
dojo.dom.TEXT_NODE=3;
dojo.dom.CDATA_SECTION_NODE=4;
dojo.dom.ENTITY_REFERENCE_NODE=5;
dojo.dom.ENTITY_NODE=6;
dojo.dom.PROCESSING_INSTRUCTION_NODE=7;
dojo.dom.COMMENT_NODE=8;
dojo.dom.DOCUMENT_NODE=9;
dojo.dom.DOCUMENT_TYPE_NODE=10;
dojo.dom.DOCUMENT_FRAGMENT_NODE=11;
dojo.dom.NOTATION_NODE=12;
dojo.dom.dojoml="http://www.dojotoolkit.org/2004/dojoml";
dojo.dom.xmlns={svg:"http://www.w3.org/2000/svg",smil:"http://www.w3.org/2001/SMIL20/",mml:"http://www.w3.org/1998/Math/MathML",cml:"http://www.xml-cml.org",xlink:"http://www.w3.org/1999/xlink",xhtml:"http://www.w3.org/1999/xhtml",xul:"http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul",xbl:"http://www.mozilla.org/xbl",fo:"http://www.w3.org/1999/XSL/Format",xsl:"http://www.w3.org/1999/XSL/Transform",xslt:"http://www.w3.org/1999/XSL/Transform",xi:"http://www.w3.org/2001/XInclude",xforms:"http://www.w3.org/2002/01/xforms",saxon:"http://icl.com/saxon",xalan:"http://xml.apache.org/xslt",xsd:"http://www.w3.org/2001/XMLSchema",dt:"http://www.w3.org/2001/XMLSchema-datatypes",xsi:"http://www.w3.org/2001/XMLSchema-instance",rdf:"http://www.w3.org/1999/02/22-rdf-syntax-ns#",rdfs:"http://www.w3.org/2000/01/rdf-schema#",dc:"http://purl.org/dc/elements/1.1/",dcq:"http://purl.org/dc/qualifiers/1.0","soap-env":"http://schemas.xmlsoap.org/soap/envelope/",wsdl:"http://schemas.xmlsoap.org/wsdl/",AdobeExtensions:"http://ns.adobe.com/AdobeSVGViewerExtensions/3.0/"};
dojo.dom.isNode=function(wh){
if(typeof Element=="function"){
try{
return wh instanceof Element;
}
catch(e){
}
}else{
return wh&&!isNaN(wh.nodeType);
}
};
dojo.dom.getUniqueId=function(){
var _2c8=dojo.doc();
do{
var id="dj_unique_"+(++arguments.callee._idIncrement);
}while(_2c8.getElementById(id));
return id;
};
dojo.dom.getUniqueId._idIncrement=0;
dojo.dom.firstElement=dojo.dom.getFirstChildElement=function(_2ca,_2cb){
var node=_2ca.firstChild;
while(node&&node.nodeType!=dojo.dom.ELEMENT_NODE){
node=node.nextSibling;
}
if(_2cb&&node&&node.tagName&&node.tagName.toLowerCase()!=_2cb.toLowerCase()){
node=dojo.dom.nextElement(node,_2cb);
}
return node;
};
dojo.dom.lastElement=dojo.dom.getLastChildElement=function(_2cd,_2ce){
var node=_2cd.lastChild;
while(node&&node.nodeType!=dojo.dom.ELEMENT_NODE){
node=node.previousSibling;
}
if(_2ce&&node&&node.tagName&&node.tagName.toLowerCase()!=_2ce.toLowerCase()){
node=dojo.dom.prevElement(node,_2ce);
}
return node;
};
dojo.dom.nextElement=dojo.dom.getNextSiblingElement=function(node,_2d1){
if(!node){
return null;
}
do{
node=node.nextSibling;
}while(node&&node.nodeType!=dojo.dom.ELEMENT_NODE);
if(node&&_2d1&&_2d1.toLowerCase()!=node.tagName.toLowerCase()){
return dojo.dom.nextElement(node,_2d1);
}
return node;
};
dojo.dom.prevElement=dojo.dom.getPreviousSiblingElement=function(node,_2d3){
if(!node){
return null;
}
if(_2d3){
_2d3=_2d3.toLowerCase();
}
do{
node=node.previousSibling;
}while(node&&node.nodeType!=dojo.dom.ELEMENT_NODE);
if(node&&_2d3&&_2d3.toLowerCase()!=node.tagName.toLowerCase()){
return dojo.dom.prevElement(node,_2d3);
}
return node;
};
dojo.dom.moveChildren=function(_2d4,_2d5,trim){
var _2d7=0;
if(trim){
while(_2d4.hasChildNodes()&&_2d4.firstChild.nodeType==dojo.dom.TEXT_NODE){
_2d4.removeChild(_2d4.firstChild);
}
while(_2d4.hasChildNodes()&&_2d4.lastChild.nodeType==dojo.dom.TEXT_NODE){
_2d4.removeChild(_2d4.lastChild);
}
}
while(_2d4.hasChildNodes()){
_2d5.appendChild(_2d4.firstChild);
_2d7++;
}
return _2d7;
};
dojo.dom.copyChildren=function(_2d8,_2d9,trim){
var _2db=_2d8.cloneNode(true);
return this.moveChildren(_2db,_2d9,trim);
};
dojo.dom.replaceChildren=function(node,_2dd){
var _2de=[];
if(dojo.render.html.ie){
for(var i=0;i<node.childNodes.length;i++){
_2de.push(node.childNodes[i]);
}
}
dojo.dom.removeChildren(node);
node.appendChild(_2dd);
for(var i=0;i<_2de.length;i++){
dojo.dom.destroyNode(_2de[i]);
}
};
dojo.dom.removeChildren=function(node){
var _2e1=node.childNodes.length;
while(node.hasChildNodes()){
dojo.dom.removeNode(node.firstChild);
}
return _2e1;
};
dojo.dom.replaceNode=function(node,_2e3){
return node.parentNode.replaceChild(_2e3,node);
};
dojo.dom.destroyNode=function(node){
if(node.parentNode){
node=dojo.dom.removeNode(node);
}
if(node.nodeType!=3){
if(dojo.evalObjPath("dojo.event.browser.clean",false)){
dojo.event.browser.clean(node);
}
if(dojo.render.html.ie){
node.outerHTML="";
}
}
};
dojo.dom.removeNode=function(node){
if(node&&node.parentNode){
return node.parentNode.removeChild(node);
}
};
dojo.dom.getAncestors=function(node,_2e7,_2e8){
var _2e9=[];
var _2ea=(_2e7&&(_2e7 instanceof Function||typeof _2e7=="function"));
while(node){
if(!_2ea||_2e7(node)){
_2e9.push(node);
}
if(_2e8&&_2e9.length>0){
return _2e9[0];
}
node=node.parentNode;
}
if(_2e8){
return null;
}
return _2e9;
};
dojo.dom.getAncestorsByTag=function(node,tag,_2ed){
tag=tag.toLowerCase();
return dojo.dom.getAncestors(node,function(el){
return ((el.tagName)&&(el.tagName.toLowerCase()==tag));
},_2ed);
};
dojo.dom.getFirstAncestorByTag=function(node,tag){
return dojo.dom.getAncestorsByTag(node,tag,true);
};
dojo.dom.isDescendantOf=function(node,_2f2,_2f3){
if(_2f3&&node){
node=node.parentNode;
}
while(node){
if(node==_2f2){
return true;
}
node=node.parentNode;
}
return false;
};
dojo.dom.innerXML=function(node){
if(node.innerXML){
return node.innerXML;
}else{
if(node.xml){
return node.xml;
}else{
if(typeof XMLSerializer!="undefined"){
return (new XMLSerializer()).serializeToString(node);
}
}
}
};
dojo.dom.createDocument=function(){
var doc=null;
var _2f6=dojo.doc();
if(!dj_undef("ActiveXObject")){
var _2f7=["MSXML2","Microsoft","MSXML","MSXML3"];
for(var i=0;i<_2f7.length;i++){
try{
doc=new ActiveXObject(_2f7[i]+".XMLDOM");
}
catch(e){
}
if(doc){
break;
}
}
}else{
if((_2f6.implementation)&&(_2f6.implementation.createDocument)){
doc=_2f6.implementation.createDocument("","",null);
}
}
return doc;
};
dojo.dom.createDocumentFromText=function(str,_2fa){
if(!_2fa){
_2fa="text/xml";
}
if(!dj_undef("DOMParser")){
var _2fb=new DOMParser();
return _2fb.parseFromString(str,_2fa);
}else{
if(!dj_undef("ActiveXObject")){
var _2fc=dojo.dom.createDocument();
if(_2fc){
_2fc.async=false;
_2fc.loadXML(str);
return _2fc;
}else{
dojo.debug("toXml didn't work?");
}
}else{
var _2fd=dojo.doc();
if(_2fd.createElement){
var tmp=_2fd.createElement("xml");
tmp.innerHTML=str;
if(_2fd.implementation&&_2fd.implementation.createDocument){
var _2ff=_2fd.implementation.createDocument("foo","",null);
for(var i=0;i<tmp.childNodes.length;i++){
_2ff.importNode(tmp.childNodes.item(i),true);
}
return _2ff;
}
return ((tmp.document)&&(tmp.document.firstChild?tmp.document.firstChild:tmp));
}
}
}
return null;
};
dojo.dom.prependChild=function(node,_302){
if(_302.firstChild){
_302.insertBefore(node,_302.firstChild);
}else{
_302.appendChild(node);
}
return true;
};
dojo.dom.insertBefore=function(node,ref,_305){
if((_305!=true)&&(node===ref||node.nextSibling===ref)){
return false;
}
var _306=ref.parentNode;
_306.insertBefore(node,ref);
return true;
};
dojo.dom.insertAfter=function(node,ref,_309){
var pn=ref.parentNode;
if(ref==pn.lastChild){
if((_309!=true)&&(node===ref)){
return false;
}
pn.appendChild(node);
}else{
return this.insertBefore(node,ref.nextSibling,_309);
}
return true;
};
dojo.dom.insertAtPosition=function(node,ref,_30d){
if((!node)||(!ref)||(!_30d)){
return false;
}
switch(_30d.toLowerCase()){
case "before":
return dojo.dom.insertBefore(node,ref);
case "after":
return dojo.dom.insertAfter(node,ref);
case "first":
if(ref.firstChild){
return dojo.dom.insertBefore(node,ref.firstChild);
}else{
ref.appendChild(node);
return true;
}
break;
default:
ref.appendChild(node);
return true;
}
};
dojo.dom.insertAtIndex=function(node,_30f,_310){
var _311=_30f.childNodes;
if(!_311.length||_311.length==_310){
_30f.appendChild(node);
return true;
}
if(_310==0){
return dojo.dom.prependChild(node,_30f);
}
return dojo.dom.insertAfter(node,_311[_310-1]);
};
dojo.dom.textContent=function(node,text){
if(arguments.length>1){
var _314=dojo.doc();
dojo.dom.replaceChildren(node,_314.createTextNode(text));
return text;
}else{
if(node.textContent!=undefined){
return node.textContent;
}
var _315="";
if(node==null){
return _315;
}
for(var i=0;i<node.childNodes.length;i++){
switch(node.childNodes[i].nodeType){
case 1:
case 5:
_315+=dojo.dom.textContent(node.childNodes[i]);
break;
case 3:
case 2:
case 4:
_315+=node.childNodes[i].nodeValue;
break;
default:
break;
}
}
return _315;
}
};
dojo.dom.hasParent=function(node){
return Boolean(node&&node.parentNode&&dojo.dom.isNode(node.parentNode));
};
dojo.dom.isTag=function(node){
if(node&&node.tagName){
for(var i=1;i<arguments.length;i++){
if(node.tagName==String(arguments[i])){
return String(arguments[i]);
}
}
}
return "";
};
dojo.dom.setAttributeNS=function(elem,_31b,_31c,_31d){
if(elem==null||((elem==undefined)&&(typeof elem=="undefined"))){
dojo.raise("No element given to dojo.dom.setAttributeNS");
}
if(!((elem.setAttributeNS==undefined)&&(typeof elem.setAttributeNS=="undefined"))){
elem.setAttributeNS(_31b,_31c,_31d);
}else{
var _31e=elem.ownerDocument;
var _31f=_31e.createNode(2,_31c,_31b);
_31f.nodeValue=_31d;
elem.setAttributeNode(_31f);
}
};
dojo.provide("dojo.undo.browser");
try{
if((!djConfig["preventBackButtonFix"])&&(!dojo.hostenv.post_load_)){
document.write("<iframe style='border: 0px; width: 1px; height: 1px; position: absolute; bottom: 0px; right: 0px; visibility: visible;' name='djhistory' id='djhistory' src='"+(dojo.hostenv.getBaseScriptUri()+"iframe_history.html")+"'></iframe>");
}
}
catch(e){
}
if(dojo.render.html.opera){
dojo.debug("Opera is not supported with dojo.undo.browser, so back/forward detection will not work.");
}
dojo.undo.browser={initialHref:(!dj_undef("window"))?window.location.href:"",initialHash:(!dj_undef("window"))?window.location.hash:"",moveForward:false,historyStack:[],forwardStack:[],historyIframe:null,bookmarkAnchor:null,locationTimer:null,setInitialState:function(args){
this.initialState=this._createState(this.initialHref,args,this.initialHash);
},addToHistory:function(args){
this.forwardStack=[];
var hash=null;
var url=null;
if(!this.historyIframe){
this.historyIframe=window.frames["djhistory"];
}
if(!this.bookmarkAnchor){
this.bookmarkAnchor=document.createElement("a");
dojo.body().appendChild(this.bookmarkAnchor);
this.bookmarkAnchor.style.display="none";
}
if(args["changeUrl"]){
hash="#"+((args["changeUrl"]!==true)?args["changeUrl"]:(new Date()).getTime());
if(this.historyStack.length==0&&this.initialState.urlHash==hash){
this.initialState=this._createState(url,args,hash);
return;
}else{
if(this.historyStack.length>0&&this.historyStack[this.historyStack.length-1].urlHash==hash){
this.historyStack[this.historyStack.length-1]=this._createState(url,args,hash);
return;
}
}
this.changingUrl=true;
setTimeout("window.location.href = '"+hash+"'; dojo.undo.browser.changingUrl = false;",1);
this.bookmarkAnchor.href=hash;
if(dojo.render.html.ie){
url=this._loadIframeHistory();
var _324=args["back"]||args["backButton"]||args["handle"];
var tcb=function(_326){
if(window.location.hash!=""){
setTimeout("window.location.href = '"+hash+"';",1);
}
_324.apply(this,[_326]);
};
if(args["back"]){
args.back=tcb;
}else{
if(args["backButton"]){
args.backButton=tcb;
}else{
if(args["handle"]){
args.handle=tcb;
}
}
}
var _327=args["forward"]||args["forwardButton"]||args["handle"];
var tfw=function(_329){
if(window.location.hash!=""){
window.location.href=hash;
}
if(_327){
_327.apply(this,[_329]);
}
};
if(args["forward"]){
args.forward=tfw;
}else{
if(args["forwardButton"]){
args.forwardButton=tfw;
}else{
if(args["handle"]){
args.handle=tfw;
}
}
}
}else{
if(dojo.render.html.moz){
if(!this.locationTimer){
this.locationTimer=setInterval("dojo.undo.browser.checkLocation();",200);
}
}
}
}else{
url=this._loadIframeHistory();
}
this.historyStack.push(this._createState(url,args,hash));
},checkLocation:function(){
if(!this.changingUrl){
var hsl=this.historyStack.length;
if((window.location.hash==this.initialHash||window.location.href==this.initialHref)&&(hsl==1)){
this.handleBackButton();
return;
}
if(this.forwardStack.length>0){
if(this.forwardStack[this.forwardStack.length-1].urlHash==window.location.hash){
this.handleForwardButton();
return;
}
}
if((hsl>=2)&&(this.historyStack[hsl-2])){
if(this.historyStack[hsl-2].urlHash==window.location.hash){
this.handleBackButton();
return;
}
}
}
},iframeLoaded:function(evt,_32c){
if(!dojo.render.html.opera){
var _32d=this._getUrlQuery(_32c.href);
if(_32d==null){
if(this.historyStack.length==1){
this.handleBackButton();
}
return;
}
if(this.moveForward){
this.moveForward=false;
return;
}
if(this.historyStack.length>=2&&_32d==this._getUrlQuery(this.historyStack[this.historyStack.length-2].url)){
this.handleBackButton();
}else{
if(this.forwardStack.length>0&&_32d==this._getUrlQuery(this.forwardStack[this.forwardStack.length-1].url)){
this.handleForwardButton();
}
}
}
},handleBackButton:function(){
var _32e=this.historyStack.pop();
if(!_32e){
return;
}
var last=this.historyStack[this.historyStack.length-1];
if(!last&&this.historyStack.length==0){
last=this.initialState;
}
if(last){
if(last.kwArgs["back"]){
last.kwArgs["back"]();
}else{
if(last.kwArgs["backButton"]){
last.kwArgs["backButton"]();
}else{
if(last.kwArgs["handle"]){
last.kwArgs.handle("back");
}
}
}
}
this.forwardStack.push(_32e);
},handleForwardButton:function(){
var last=this.forwardStack.pop();
if(!last){
return;
}
if(last.kwArgs["forward"]){
last.kwArgs.forward();
}else{
if(last.kwArgs["forwardButton"]){
last.kwArgs.forwardButton();
}else{
if(last.kwArgs["handle"]){
last.kwArgs.handle("forward");
}
}
}
this.historyStack.push(last);
},_createState:function(url,args,hash){
return {"url":url,"kwArgs":args,"urlHash":hash};
},_getUrlQuery:function(url){
var _335=url.split("?");
if(_335.length<2){
return null;
}else{
return _335[1];
}
},_loadIframeHistory:function(){
var url=dojo.hostenv.getBaseScriptUri()+"iframe_history.html?"+(new Date()).getTime();
this.moveForward=true;
dojo.io.setIFrameSrc(this.historyIframe,url,false);
return url;
}};
dojo.provide("dojo.io.BrowserIO");
if(!dj_undef("window")){
dojo.io.checkChildrenForFile=function(node){
var _338=false;
var _339=node.getElementsByTagName("input");
dojo.lang.forEach(_339,function(_33a){
if(_338){
return;
}
if(_33a.getAttribute("type")=="file"){
_338=true;
}
});
return _338;
};
dojo.io.formHasFile=function(_33b){
return dojo.io.checkChildrenForFile(_33b);
};
dojo.io.updateNode=function(node,_33d){
node=dojo.byId(node);
var args=_33d;
if(dojo.lang.isString(_33d)){
args={url:_33d};
}
args.mimetype="text/html";
args.load=function(t,d,e){
while(node.firstChild){
dojo.dom.destroyNode(node.firstChild);
}
node.innerHTML=d;
};
dojo.io.bind(args);
};
dojo.io.formFilter=function(node){
var type=(node.type||"").toLowerCase();
return !node.disabled&&node.name&&!dojo.lang.inArray(["file","submit","image","reset","button"],type);
};
dojo.io.encodeForm=function(_344,_345,_346){
if((!_344)||(!_344.tagName)||(!_344.tagName.toLowerCase()=="form")){
dojo.raise("Attempted to encode a non-form element.");
}
if(!_346){
_346=dojo.io.formFilter;
}
var enc=/utf/i.test(_345||"")?encodeURIComponent:dojo.string.encodeAscii;
var _348=[];
for(var i=0;i<_344.elements.length;i++){
var elm=_344.elements[i];
if(!elm||elm.tagName.toLowerCase()=="fieldset"||!_346(elm)){
continue;
}
var name=enc(elm.name);
var type=elm.type.toLowerCase();
if(type=="select-multiple"){
for(var j=0;j<elm.options.length;j++){
if(elm.options[j].selected){
_348.push(name+"="+enc(elm.options[j].value));
}
}
}else{
if(dojo.lang.inArray(["radio","checkbox"],type)){
if(elm.checked){
_348.push(name+"="+enc(elm.value));
}
}else{
_348.push(name+"="+enc(elm.value));
}
}
}
var _34e=_344.getElementsByTagName("input");
for(var i=0;i<_34e.length;i++){
var _34f=_34e[i];
if(_34f.type.toLowerCase()=="image"&&_34f.form==_344&&_346(_34f)){
var name=enc(_34f.name);
_348.push(name+"="+enc(_34f.value));
_348.push(name+".x=0");
_348.push(name+".y=0");
}
}
return _348.join("&")+"&";
};
dojo.io.FormBind=function(args){
this.bindArgs={};
if(args&&args.formNode){
this.init(args);
}else{
if(args){
this.init({formNode:args});
}
}
};
dojo.lang.extend(dojo.io.FormBind,{form:null,bindArgs:null,clickedButton:null,init:function(args){
var form=dojo.byId(args.formNode);
if(!form||!form.tagName||form.tagName.toLowerCase()!="form"){
throw new Error("FormBind: Couldn't apply, invalid form");
}else{
if(this.form==form){
return;
}else{
if(this.form){
throw new Error("FormBind: Already applied to a form");
}
}
}
dojo.lang.mixin(this.bindArgs,args);
this.form=form;
this.connect(form,"onsubmit","submit");
for(var i=0;i<form.elements.length;i++){
var node=form.elements[i];
if(node&&node.type&&dojo.lang.inArray(["submit","button"],node.type.toLowerCase())){
this.connect(node,"onclick","click");
}
}
var _355=form.getElementsByTagName("input");
for(var i=0;i<_355.length;i++){
var _356=_355[i];
if(_356.type.toLowerCase()=="image"&&_356.form==form){
this.connect(_356,"onclick","click");
}
}
},onSubmit:function(form){
return true;
},submit:function(e){
e.preventDefault();
if(this.onSubmit(this.form)){
dojo.io.bind(dojo.lang.mixin(this.bindArgs,{formFilter:dojo.lang.hitch(this,"formFilter")}));
}
},click:function(e){
var node=e.currentTarget;
if(node.disabled){
return;
}
this.clickedButton=node;
},formFilter:function(node){
var type=(node.type||"").toLowerCase();
var _35d=false;
if(node.disabled||!node.name){
_35d=false;
}else{
if(dojo.lang.inArray(["submit","button","image"],type)){
if(!this.clickedButton){
this.clickedButton=node;
}
_35d=node==this.clickedButton;
}else{
_35d=!dojo.lang.inArray(["file","submit","reset","button"],type);
}
}
return _35d;
},connect:function(_35e,_35f,_360){
if(dojo.evalObjPath("dojo.event.connect")){
dojo.event.connect(_35e,_35f,this,_360);
}else{
var fcn=dojo.lang.hitch(this,_360);
_35e[_35f]=function(e){
if(!e){
e=window.event;
}
if(!e.currentTarget){
e.currentTarget=e.srcElement;
}
if(!e.preventDefault){
e.preventDefault=function(){
window.event.returnValue=false;
};
}
fcn(e);
};
}
}});
dojo.io.XMLHTTPTransport=new function(){
var _363=this;
var _364={};
this.useCache=false;
this.preventCache=false;
function getCacheKey(url,_366,_367){
return url+"|"+_366+"|"+_367.toLowerCase();
}
function addToCache(url,_369,_36a,http){
_364[getCacheKey(url,_369,_36a)]=http;
}
function getFromCache(url,_36d,_36e){
return _364[getCacheKey(url,_36d,_36e)];
}
this.clearCache=function(){
_364={};
};
function doLoad(_36f,http,url,_372,_373){
if(((http.status>=200)&&(http.status<300))||(http.status==304)||(location.protocol=="file:"&&(http.status==0||http.status==undefined))||(location.protocol=="chrome:"&&(http.status==0||http.status==undefined))){
var ret;
if(_36f.method.toLowerCase()=="head"){
var _375=http.getAllResponseHeaders();
ret={};
ret.toString=function(){
return _375;
};
var _376=_375.split(/[\r\n]+/g);
for(var i=0;i<_376.length;i++){
var pair=_376[i].match(/^([^:]+)\s*:\s*(.+)$/i);
if(pair){
ret[pair[1]]=pair[2];
}
}
}else{
if(_36f.mimetype=="text/javascript"){
try{
ret=dj_eval(http.responseText);
}
catch(e){
dojo.debug(e);
dojo.debug(http.responseText);
ret=null;
}
}else{
if(_36f.mimetype=="text/json"||_36f.mimetype=="application/json"){
try{
ret=dj_eval("("+http.responseText+")");
}
catch(e){
dojo.debug(e);
dojo.debug(http.responseText);
ret=false;
}
}else{
if((_36f.mimetype=="application/xml")||(_36f.mimetype=="text/xml")){
ret=http.responseXML;
if(!ret||typeof ret=="string"||!http.getResponseHeader("Content-Type")){
ret=dojo.dom.createDocumentFromText(http.responseText);
}
}else{
ret=http.responseText;
}
}
}
}
if(_373){
addToCache(url,_372,_36f.method,http);
}
_36f[(typeof _36f.load=="function")?"load":"handle"]("load",ret,http,_36f);
}else{
var _379=new dojo.io.Error("XMLHttpTransport Error: "+http.status+" "+http.statusText);
_36f[(typeof _36f.error=="function")?"error":"handle"]("error",_379,http,_36f);
}
}
function setHeaders(http,_37b){
if(_37b["headers"]){
for(var _37c in _37b["headers"]){
if(_37c.toLowerCase()=="content-type"&&!_37b["contentType"]){
_37b["contentType"]=_37b["headers"][_37c];
}else{
http.setRequestHeader(_37c,_37b["headers"][_37c]);
}
}
}
}
this.inFlight=[];
this.inFlightTimer=null;
this.startWatchingInFlight=function(){
if(!this.inFlightTimer){
this.inFlightTimer=setTimeout("dojo.io.XMLHTTPTransport.watchInFlight();",10);
}
};
this.watchInFlight=function(){
var now=null;
if(!dojo.hostenv._blockAsync&&!_363._blockAsync){
for(var x=this.inFlight.length-1;x>=0;x--){
try{
var tif=this.inFlight[x];
if(!tif||tif.http._aborted||!tif.http.readyState){
this.inFlight.splice(x,1);
continue;
}
if(4==tif.http.readyState){
this.inFlight.splice(x,1);
doLoad(tif.req,tif.http,tif.url,tif.query,tif.useCache);
}else{
if(tif.startTime){
if(!now){
now=(new Date()).getTime();
}
if(tif.startTime+(tif.req.timeoutSeconds*1000)<now){
if(typeof tif.http.abort=="function"){
tif.http.abort();
}
this.inFlight.splice(x,1);
tif.req[(typeof tif.req.timeout=="function")?"timeout":"handle"]("timeout",null,tif.http,tif.req);
}
}
}
}
catch(e){
try{
var _380=new dojo.io.Error("XMLHttpTransport.watchInFlight Error: "+e);
tif.req[(typeof tif.req.error=="function")?"error":"handle"]("error",_380,tif.http,tif.req);
}
catch(e2){
dojo.debug("XMLHttpTransport error callback failed: "+e2);
}
}
}
}
clearTimeout(this.inFlightTimer);
if(this.inFlight.length==0){
this.inFlightTimer=null;
return;
}
this.inFlightTimer=setTimeout("dojo.io.XMLHTTPTransport.watchInFlight();",10);
};
var _381=dojo.hostenv.getXmlhttpObject()?true:false;
this.canHandle=function(_382){
return _381&&dojo.lang.inArray(["text/plain","text/html","application/xml","text/xml","text/javascript","text/json","application/json"],(_382["mimetype"].toLowerCase()||""))&&!(_382["formNode"]&&dojo.io.formHasFile(_382["formNode"]));
};
this.multipartBoundary="45309FFF-BD65-4d50-99C9-36986896A96F";
this.bind=function(_383){
if(!_383["url"]){
if(!_383["formNode"]&&(_383["backButton"]||_383["back"]||_383["changeUrl"]||_383["watchForURL"])&&(!djConfig.preventBackButtonFix)){
dojo.deprecated("Using dojo.io.XMLHTTPTransport.bind() to add to browser history without doing an IO request","Use dojo.undo.browser.addToHistory() instead.","0.4");
dojo.undo.browser.addToHistory(_383);
return true;
}
}
var url=_383.url;
var _385="";
if(_383["formNode"]){
var ta=_383.formNode.getAttribute("action");
if((ta)&&(!_383["url"])){
url=ta;
}
var tp=_383.formNode.getAttribute("method");
if((tp)&&(!_383["method"])){
_383.method=tp;
}
_385+=dojo.io.encodeForm(_383.formNode,_383.encoding,_383["formFilter"]);
}
if(url.indexOf("#")>-1){
dojo.debug("Warning: dojo.io.bind: stripping hash values from url:",url);
url=url.split("#")[0];
}
if(_383["file"]){
_383.method="post";
}
if(!_383["method"]){
_383.method="get";
}
if(_383.method.toLowerCase()=="get"){
_383.multipart=false;
}else{
if(_383["file"]){
_383.multipart=true;
}else{
if(!_383["multipart"]){
_383.multipart=false;
}
}
}
if(_383["backButton"]||_383["back"]||_383["changeUrl"]){
dojo.undo.browser.addToHistory(_383);
}
var _388=_383["content"]||{};
if(_383.sendTransport){
_388["dojo.transport"]="xmlhttp";
}
do{
if(_383.postContent){
_385=_383.postContent;
break;
}
if(_388){
_385+=dojo.io.argsFromMap(_388,_383.encoding);
}
if(_383.method.toLowerCase()=="get"||!_383.multipart){
break;
}
var t=[];
if(_385.length){
var q=_385.split("&");
for(var i=0;i<q.length;++i){
if(q[i].length){
var p=q[i].split("=");
t.push("--"+this.multipartBoundary,"Content-Disposition: form-data; name=\""+p[0]+"\"","",p[1]);
}
}
}
if(_383.file){
if(dojo.lang.isArray(_383.file)){
for(var i=0;i<_383.file.length;++i){
var o=_383.file[i];
t.push("--"+this.multipartBoundary,"Content-Disposition: form-data; name=\""+o.name+"\"; filename=\""+("fileName" in o?o.fileName:o.name)+"\"","Content-Type: "+("contentType" in o?o.contentType:"application/octet-stream"),"",o.content);
}
}else{
var o=_383.file;
t.push("--"+this.multipartBoundary,"Content-Disposition: form-data; name=\""+o.name+"\"; filename=\""+("fileName" in o?o.fileName:o.name)+"\"","Content-Type: "+("contentType" in o?o.contentType:"application/octet-stream"),"",o.content);
}
}
if(t.length){
t.push("--"+this.multipartBoundary+"--","");
_385=t.join("\r\n");
}
}while(false);
var _38e=_383["sync"]?false:true;
var _38f=_383["preventCache"]||(this.preventCache==true&&_383["preventCache"]!=false);
var _390=_383["useCache"]==true||(this.useCache==true&&_383["useCache"]!=false);
if(!_38f&&_390){
var _391=getFromCache(url,_385,_383.method);
if(_391){
doLoad(_383,_391,url,_385,false);
return;
}
}
var http=dojo.hostenv.getXmlhttpObject(_383);
var _393=false;
if(_38e){
var _394=this.inFlight.push({"req":_383,"http":http,"url":url,"query":_385,"useCache":_390,"startTime":_383.timeoutSeconds?(new Date()).getTime():0});
this.startWatchingInFlight();
}else{
_363._blockAsync=true;
}
if(_383.method.toLowerCase()=="post"){
if(!_383.user){
http.open("POST",url,_38e);
}else{
http.open("POST",url,_38e,_383.user,_383.password);
}
setHeaders(http,_383);
http.setRequestHeader("Content-Type",_383.multipart?("multipart/form-data; boundary="+this.multipartBoundary):(_383.contentType||"application/x-www-form-urlencoded"));
try{
http.send(_385);
}
catch(e){
if(typeof http.abort=="function"){
http.abort();
}
doLoad(_383,{status:404},url,_385,_390);
}
}else{
var _395=url;
if(_385!=""){
_395+=(_395.indexOf("?")>-1?"&":"?")+_385;
}
if(_38f){
_395+=(dojo.string.endsWithAny(_395,"?","&")?"":(_395.indexOf("?")>-1?"&":"?"))+"dojo.preventCache="+new Date().valueOf();
}
if(!_383.user){
http.open(_383.method.toUpperCase(),_395,_38e);
}else{
http.open(_383.method.toUpperCase(),_395,_38e,_383.user,_383.password);
}
setHeaders(http,_383);
try{
http.send(null);
}
catch(e){
if(typeof http.abort=="function"){
http.abort();
}
doLoad(_383,{status:404},url,_385,_390);
}
}
if(!_38e){
doLoad(_383,http,url,_385,_390);
_363._blockAsync=false;
}
_383.abort=function(){
try{
http._aborted=true;
}
catch(e){
}
return http.abort();
};
return;
};
dojo.io.transports.addTransport("XMLHTTPTransport");
};
}
dojo.provide("dojo.io.cookie");
dojo.io.cookie.setCookie=function(name,_397,days,path,_39a,_39b){
var _39c=-1;
if((typeof days=="number")&&(days>=0)){
var d=new Date();
d.setTime(d.getTime()+(days*24*60*60*1000));
_39c=d.toGMTString();
}
_397=escape(_397);
document.cookie=name+"="+_397+";"+(_39c!=-1?" expires="+_39c+";":"")+(path?"path="+path:"")+(_39a?"; domain="+_39a:"")+(_39b?"; secure":"");
};
dojo.io.cookie.set=dojo.io.cookie.setCookie;
dojo.io.cookie.getCookie=function(name){
var idx=document.cookie.lastIndexOf(name+"=");
if(idx==-1){
return null;
}
var _3a0=document.cookie.substring(idx+name.length+1);
var end=_3a0.indexOf(";");
if(end==-1){
end=_3a0.length;
}
_3a0=_3a0.substring(0,end);
_3a0=unescape(_3a0);
return _3a0;
};
dojo.io.cookie.get=dojo.io.cookie.getCookie;
dojo.io.cookie.deleteCookie=function(name){
dojo.io.cookie.setCookie(name,"-",0);
};
dojo.io.cookie.setObjectCookie=function(name,obj,days,path,_3a7,_3a8,_3a9){
if(arguments.length==5){
_3a9=_3a7;
_3a7=null;
_3a8=null;
}
var _3aa=[],_3ab,_3ac="";
if(!_3a9){
_3ab=dojo.io.cookie.getObjectCookie(name);
}
if(days>=0){
if(!_3ab){
_3ab={};
}
for(var prop in obj){
if(obj[prop]==null){
delete _3ab[prop];
}else{
if((typeof obj[prop]=="string")||(typeof obj[prop]=="number")){
_3ab[prop]=obj[prop];
}
}
}
prop=null;
for(var prop in _3ab){
_3aa.push(escape(prop)+"="+escape(_3ab[prop]));
}
_3ac=_3aa.join("&");
}
dojo.io.cookie.setCookie(name,_3ac,days,path,_3a7,_3a8);
};
dojo.io.cookie.getObjectCookie=function(name){
var _3af=null,_3b0=dojo.io.cookie.getCookie(name);
if(_3b0){
_3af={};
var _3b1=_3b0.split("&");
for(var i=0;i<_3b1.length;i++){
var pair=_3b1[i].split("=");
var _3b4=pair[1];
if(isNaN(_3b4)){
_3b4=unescape(pair[1]);
}
_3af[unescape(pair[0])]=_3b4;
}
}
return _3af;
};
dojo.io.cookie.isSupported=function(){
if(typeof navigator.cookieEnabled!="boolean"){
dojo.io.cookie.setCookie("__TestingYourBrowserForCookieSupport__","CookiesAllowed",90,null);
var _3b5=dojo.io.cookie.getCookie("__TestingYourBrowserForCookieSupport__");
navigator.cookieEnabled=(_3b5=="CookiesAllowed");
if(navigator.cookieEnabled){
this.deleteCookie("__TestingYourBrowserForCookieSupport__");
}
}
return navigator.cookieEnabled;
};
if(!dojo.io.cookies){
dojo.io.cookies=dojo.io.cookie;
}
dojo.provide("dojo.io.*");
dojo.provide("dojo.lang.type");
dojo.lang.whatAmI=function(_3b6){
dojo.deprecated("dojo.lang.whatAmI","use dojo.lang.getType instead","0.5");
return dojo.lang.getType(_3b6);
};
dojo.lang.whatAmI.custom={};
dojo.lang.getType=function(_3b7){
try{
if(dojo.lang.isArray(_3b7)){
return "array";
}
if(dojo.lang.isFunction(_3b7)){
return "function";
}
if(dojo.lang.isString(_3b7)){
return "string";
}
if(dojo.lang.isNumber(_3b7)){
return "number";
}
if(dojo.lang.isBoolean(_3b7)){
return "boolean";
}
if(dojo.lang.isAlien(_3b7)){
return "alien";
}
if(dojo.lang.isUndefined(_3b7)){
return "undefined";
}
for(var name in dojo.lang.whatAmI.custom){
if(dojo.lang.whatAmI.custom[name](_3b7)){
return name;
}
}
if(dojo.lang.isObject(_3b7)){
return "object";
}
}
catch(e){
}
return "unknown";
};
dojo.lang.isNumeric=function(_3b9){
return (!isNaN(_3b9)&&isFinite(_3b9)&&(_3b9!=null)&&!dojo.lang.isBoolean(_3b9)&&!dojo.lang.isArray(_3b9)&&!/^\s*$/.test(_3b9));
};
dojo.lang.isBuiltIn=function(_3ba){
return (dojo.lang.isArray(_3ba)||dojo.lang.isFunction(_3ba)||dojo.lang.isString(_3ba)||dojo.lang.isNumber(_3ba)||dojo.lang.isBoolean(_3ba)||(_3ba==null)||(_3ba instanceof Error)||(typeof _3ba=="error"));
};
dojo.lang.isPureObject=function(_3bb){
return ((_3bb!=null)&&dojo.lang.isObject(_3bb)&&_3bb.constructor==Object);
};
dojo.lang.isOfType=function(_3bc,type,_3be){
var _3bf=false;
if(_3be){
_3bf=_3be["optional"];
}
if(_3bf&&((_3bc===null)||dojo.lang.isUndefined(_3bc))){
return true;
}
if(dojo.lang.isArray(type)){
var _3c0=type;
for(var i in _3c0){
var _3c2=_3c0[i];
if(dojo.lang.isOfType(_3bc,_3c2)){
return true;
}
}
return false;
}else{
if(dojo.lang.isString(type)){
type=type.toLowerCase();
}
switch(type){
case Array:
case "array":
return dojo.lang.isArray(_3bc);
case Function:
case "function":
return dojo.lang.isFunction(_3bc);
case String:
case "string":
return dojo.lang.isString(_3bc);
case Number:
case "number":
return dojo.lang.isNumber(_3bc);
case "numeric":
return dojo.lang.isNumeric(_3bc);
case Boolean:
case "boolean":
return dojo.lang.isBoolean(_3bc);
case Object:
case "object":
return dojo.lang.isObject(_3bc);
case "pureobject":
return dojo.lang.isPureObject(_3bc);
case "builtin":
return dojo.lang.isBuiltIn(_3bc);
case "alien":
return dojo.lang.isAlien(_3bc);
case "undefined":
return dojo.lang.isUndefined(_3bc);
case null:
case "null":
return (_3bc===null);
case "optional":
dojo.deprecated("dojo.lang.isOfType(value, [type, \"optional\"])","use dojo.lang.isOfType(value, type, {optional: true} ) instead","0.5");
return ((_3bc===null)||dojo.lang.isUndefined(_3bc));
default:
if(dojo.lang.isFunction(type)){
return (_3bc instanceof type);
}else{
dojo.raise("dojo.lang.isOfType() was passed an invalid type");
}
}
}
dojo.raise("If we get here, it means a bug was introduced above.");
};
dojo.lang.getObject=function(str){
var _3c4=str.split("."),i=0,obj=dj_global;
do{
obj=obj[_3c4[i++]];
}while(i<_3c4.length&&obj);
return (obj!=dj_global)?obj:null;
};
dojo.lang.doesObjectExist=function(str){
var _3c8=str.split("."),i=0,obj=dj_global;
do{
obj=obj[_3c8[i++]];
}while(i<_3c8.length&&obj);
return (obj&&obj!=dj_global);
};
dojo.provide("dojo.lang.assert");
dojo.lang.assert=function(_3cb,_3cc){
if(!_3cb){
var _3cd="An assert statement failed.\n"+"The method dojo.lang.assert() was called with a 'false' value.\n";
if(_3cc){
_3cd+="Here's the assert message:\n"+_3cc+"\n";
}
throw new Error(_3cd);
}
};
dojo.lang.assertType=function(_3ce,type,_3d0){
if(dojo.lang.isString(_3d0)){
dojo.deprecated("dojo.lang.assertType(value, type, \"message\")","use dojo.lang.assertType(value, type) instead","0.5");
}
if(!dojo.lang.isOfType(_3ce,type,_3d0)){
if(!dojo.lang.assertType._errorMessage){
dojo.lang.assertType._errorMessage="Type mismatch: dojo.lang.assertType() failed.";
}
dojo.lang.assert(false,dojo.lang.assertType._errorMessage);
}
};
dojo.lang.assertValidKeywords=function(_3d1,_3d2,_3d3){
var key;
if(!_3d3){
if(!dojo.lang.assertValidKeywords._errorMessage){
dojo.lang.assertValidKeywords._errorMessage="In dojo.lang.assertValidKeywords(), found invalid keyword:";
}
_3d3=dojo.lang.assertValidKeywords._errorMessage;
}
if(dojo.lang.isArray(_3d2)){
for(key in _3d1){
if(!dojo.lang.inArray(_3d2,key)){
dojo.lang.assert(false,_3d3+" "+key);
}
}
}else{
for(key in _3d1){
if(!(key in _3d2)){
dojo.lang.assert(false,_3d3+" "+key);
}
}
}
};
dojo.provide("dojo.AdapterRegistry");
dojo.AdapterRegistry=function(_3d5){
this.pairs=[];
this.returnWrappers=_3d5||false;
};
dojo.lang.extend(dojo.AdapterRegistry,{register:function(name,_3d7,wrap,_3d9,_3da){
var type=(_3da)?"unshift":"push";
this.pairs[type]([name,_3d7,wrap,_3d9]);
},match:function(){
for(var i=0;i<this.pairs.length;i++){
var pair=this.pairs[i];
if(pair[1].apply(this,arguments)){
if((pair[3])||(this.returnWrappers)){
return pair[2];
}else{
return pair[2].apply(this,arguments);
}
}
}
throw new Error("No match found");
},unregister:function(name){
for(var i=0;i<this.pairs.length;i++){
var pair=this.pairs[i];
if(pair[0]==name){
this.pairs.splice(i,1);
return true;
}
}
return false;
}});
dojo.provide("dojo.lang.repr");
dojo.lang.reprRegistry=new dojo.AdapterRegistry();
dojo.lang.registerRepr=function(name,_3e2,wrap,_3e4){
dojo.lang.reprRegistry.register(name,_3e2,wrap,_3e4);
};
dojo.lang.repr=function(obj){
if(typeof (obj)=="undefined"){
return "undefined";
}else{
if(obj===null){
return "null";
}
}
try{
if(typeof (obj["__repr__"])=="function"){
return obj["__repr__"]();
}else{
if((typeof (obj["repr"])=="function")&&(obj.repr!=arguments.callee)){
return obj["repr"]();
}
}
return dojo.lang.reprRegistry.match(obj);
}
catch(e){
if(typeof (obj.NAME)=="string"&&(obj.toString==Function.prototype.toString||obj.toString==Object.prototype.toString)){
return obj.NAME;
}
}
if(typeof (obj)=="function"){
obj=(obj+"").replace(/^\s+/,"");
var idx=obj.indexOf("{");
if(idx!=-1){
obj=obj.substr(0,idx)+"{...}";
}
}
return obj+"";
};
dojo.lang.reprArrayLike=function(arr){
try{
var na=dojo.lang.map(arr,dojo.lang.repr);
return "["+na.join(", ")+"]";
}
catch(e){
}
};
(function(){
var m=dojo.lang;
m.registerRepr("arrayLike",m.isArrayLike,m.reprArrayLike);
m.registerRepr("string",m.isString,m.reprString);
m.registerRepr("numbers",m.isNumber,m.reprNumber);
m.registerRepr("boolean",m.isBoolean,m.reprNumber);
})();
dojo.provide("dojo.lang.declare");
dojo.lang.declare=function(_3ea,_3eb,init,_3ed){
if((dojo.lang.isFunction(_3ed))||((!_3ed)&&(!dojo.lang.isFunction(init)))){
var temp=_3ed;
_3ed=init;
init=temp;
}
var _3ef=[];
if(dojo.lang.isArray(_3eb)){
_3ef=_3eb;
_3eb=_3ef.shift();
}
if(!init){
init=dojo.evalObjPath(_3ea,false);
if((init)&&(!dojo.lang.isFunction(init))){
init=null;
}
}
var ctor=dojo.lang.declare._makeConstructor();
var scp=(_3eb?_3eb.prototype:null);
if(scp){
scp.prototyping=true;
ctor.prototype=new _3eb();
scp.prototyping=false;
}
ctor.superclass=scp;
ctor.mixins=_3ef;
for(var i=0,l=_3ef.length;i<l;i++){
dojo.lang.extend(ctor,_3ef[i].prototype);
}
ctor.prototype.initializer=null;
ctor.prototype.declaredClass=_3ea;
if(dojo.lang.isArray(_3ed)){
dojo.lang.extend.apply(dojo.lang,[ctor].concat(_3ed));
}else{
dojo.lang.extend(ctor,(_3ed)||{});
}
dojo.lang.extend(ctor,dojo.lang.declare._common);
ctor.prototype.constructor=ctor;
ctor.prototype.initializer=(ctor.prototype.initializer)||(init)||(function(){
});
var _3f4=dojo.parseObjPath(_3ea,null,true);
_3f4.obj[_3f4.prop]=ctor;
return ctor;
};
dojo.lang.declare._makeConstructor=function(){
return function(){
var self=this._getPropContext();
var s=self.constructor.superclass;
if((s)&&(s.constructor)){
if(s.constructor==arguments.callee){
this._inherited("constructor",arguments);
}else{
this._contextMethod(s,"constructor",arguments);
}
}
var ms=(self.constructor.mixins)||([]);
for(var i=0,m;(m=ms[i]);i++){
(((m.prototype)&&(m.prototype.initializer))||(m)).apply(this,arguments);
}
if((!this.prototyping)&&(self.initializer)){
self.initializer.apply(this,arguments);
}
};
};
dojo.lang.declare._common={_getPropContext:function(){
return (this.___proto||this);
},_contextMethod:function(_3fa,_3fb,args){
var _3fd,_3fe=this.___proto;
this.___proto=_3fa;
try{
_3fd=_3fa[_3fb].apply(this,(args||[]));
}
catch(e){
throw e;
}
finally{
this.___proto=_3fe;
}
return _3fd;
},_inherited:function(prop,args){
var p=this._getPropContext();
do{
if((!p.constructor)||(!p.constructor.superclass)){
return;
}
p=p.constructor.superclass;
}while(!(prop in p));
return (dojo.lang.isFunction(p[prop])?this._contextMethod(p,prop,args):p[prop]);
},inherited:function(prop,args){
dojo.deprecated("'inherited' method is dangerous, do not up-call! 'inherited' is slated for removal in 0.5; name your super class (or use superclass property) instead.","0.5");
this._inherited(prop,args);
}};
dojo.declare=dojo.lang.declare;
dojo.provide("dojo.lang.*");
dojo.provide("dojo.storage");
dojo.storage=new function(){
};
dojo.declare("dojo.storage",null,{SUCCESS:"success",FAILED:"failed",PENDING:"pending",SIZE_NOT_AVAILABLE:"Size not available",SIZE_NO_LIMIT:"No size limit",namespace:"default",onHideSettingsUI:null,initialize:function(){
dojo.unimplemented("dojo.storage.initialize");
},isAvailable:function(){
dojo.unimplemented("dojo.storage.isAvailable");
},put:function(key,_405,_406){
dojo.unimplemented("dojo.storage.put");
},get:function(key){
dojo.unimplemented("dojo.storage.get");
},hasKey:function(key){
return (this.get(key)!=null);
},getKeys:function(){
dojo.unimplemented("dojo.storage.getKeys");
},clear:function(){
dojo.unimplemented("dojo.storage.clear");
},remove:function(key){
dojo.unimplemented("dojo.storage.remove");
},isPermanent:function(){
dojo.unimplemented("dojo.storage.isPermanent");
},getMaximumSize:function(){
dojo.unimplemented("dojo.storage.getMaximumSize");
},hasSettingsUI:function(){
return false;
},showSettingsUI:function(){
dojo.unimplemented("dojo.storage.showSettingsUI");
},hideSettingsUI:function(){
dojo.unimplemented("dojo.storage.hideSettingsUI");
},getType:function(){
dojo.unimplemented("dojo.storage.getType");
},isValidKey:function(_40a){
if((_40a==null)||(typeof _40a=="undefined")){
return false;
}
return /^[0-9A-Za-z_]*$/.test(_40a);
}});
dojo.storage.manager=new function(){
this.currentProvider=null;
this.available=false;
this._initialized=false;
this._providers=[];
this.namespace="default";
this.initialize=function(){
this.autodetect();
};
this.register=function(name,_40c){
this._providers[this._providers.length]=_40c;
this._providers[name]=_40c;
};
this.setProvider=function(_40d){
};
this.autodetect=function(){
if(this._initialized==true){
return;
}
var _40e=null;
for(var i=0;i<this._providers.length;i++){
_40e=this._providers[i];
if(dojo.lang.isUndefined(djConfig["forceStorageProvider"])==false&&_40e.getType()==djConfig["forceStorageProvider"]){
_40e.isAvailable();
break;
}else{
if(dojo.lang.isUndefined(djConfig["forceStorageProvider"])==true&&_40e.isAvailable()){
break;
}
}
}
if(_40e==null){
this._initialized=true;
this.available=false;
this.currentProvider=null;
dojo.raise("No storage provider found for this platform");
}
this.currentProvider=_40e;
for(var i in _40e){
dojo.storage[i]=_40e[i];
}
dojo.storage.manager=this;
dojo.storage.initialize();
this._initialized=true;
this.available=true;
};
this.isAvailable=function(){
return this.available;
};
this.isInitialized=function(){
if(this.currentProvider.getType()=="dojo.storage.browser.FlashStorageProvider"&&dojo.flash.ready==false){
return false;
}else{
return this._initialized;
}
};
this.supportsProvider=function(_410){
try{
var _411=eval("new "+_410+"()");
var _412=_411.isAvailable();
if(_412==null||typeof _412=="undefined"){
return false;
}
return _412;
}
catch(exception){
return false;
}
};
this.getProvider=function(){
return this.currentProvider;
};
this.loaded=function(){
};
};
dojo.provide("dojo.storage.*");


__CPAN_EDITION__ dashboard build.txt

Files baked into this package:

dojoGuardStart.js,
../src/bootstrap1.js,
../src/loader.js,
dojoGuardEnd.js,
../src/hostenv_browser.js,
../src/hostenv_dashboard.js,
../src/bootstrap2.js,
../src/lang/common.js,
../src/lang.js,
../src/lang/array.js,
../src/lang/extras.js,
../src/lang/func.js,
../src/event/common.js,
../src/event/topic.js,
../src/event/browser.js,
../src/event/__package__.js,
../src/string/common.js,
../src/string.js,
../src/io/common.js,
../src/string/extras.js,
../src/dom.js,
../src/undo/browser.js,
../src/io/BrowserIO.js,
../src/io/cookie.js,
../src/io/__package__.js,
../src/lang/type.js,
../src/lang/assert.js,
../src/AdapterRegistry.js,
../src/lang/repr.js,
../src/lang/declare.js,
../src/lang/__package__.js,
../src/storage.js,
../src/storage/__package__.js

		
__CPAN_EDITION__ dojoWebsite dojo.js
/*
	Copyright (c) 2004-2006, The Dojo Foundation
	All Rights Reserved.

	Licensed under the Academic Free License version 2.1 or above OR the
	modified BSD license. For more information on Dojo licensing, see:

		http://dojotoolkit.org/community/licensing.shtml
*/

/*
	This is a compiled version of Dojo, built for deployment and not for
	development. To get an editable version, please visit:

		http://dojotoolkit.org

	for documentation and information on getting the source.
*/

if(typeof dojo=="undefined"){
var dj_global=this;
var dj_currentContext=this;
function dj_undef(_1,_2){
return (typeof (_2||dj_currentContext)[_1]=="undefined");
}
if(dj_undef("djConfig",this)){
var djConfig={};
}
if(dj_undef("dojo",this)){
var dojo={};
}
dojo.global=function(){
return dj_currentContext;
};
dojo.locale=djConfig.locale;
dojo.version={major:0,minor:4,patch:1,flag:"",revision:Number("$Rev: 6824 $".match(/[0-9]+/)[0]),toString:function(){
with(dojo.version){
return major+"."+minor+"."+patch+flag+" ("+revision+")";
}
}};
dojo.evalProp=function(_3,_4,_5){
if((!_4)||(!_3)){
return undefined;
}
if(!dj_undef(_3,_4)){
return _4[_3];
}
return (_5?(_4[_3]={}):undefined);
};
dojo.parseObjPath=function(_6,_7,_8){
var _9=(_7||dojo.global());
var _a=_6.split(".");
var _b=_a.pop();
for(var i=0,l=_a.length;i<l&&_9;i++){
_9=dojo.evalProp(_a[i],_9,_8);
}
return {obj:_9,prop:_b};
};
dojo.evalObjPath=function(_e,_f){
if(typeof _e!="string"){
return dojo.global();
}
if(_e.indexOf(".")==-1){
return dojo.evalProp(_e,dojo.global(),_f);
}
var ref=dojo.parseObjPath(_e,dojo.global(),_f);
if(ref){
return dojo.evalProp(ref.prop,ref.obj,_f);
}
return null;
};
dojo.errorToString=function(_11){
if(!dj_undef("message",_11)){
return _11.message;
}else{
if(!dj_undef("description",_11)){
return _11.description;
}else{
return _11;
}
}
};
dojo.raise=function(_12,_13){
if(_13){
_12=_12+": "+dojo.errorToString(_13);
}else{
_12=dojo.errorToString(_12);
}
try{
if(djConfig.isDebug){
dojo.hostenv.println("FATAL exception raised: "+_12);
}
}
catch(e){
}
throw _13||Error(_12);
};
dojo.debug=function(){
};
dojo.debugShallow=function(obj){
};
dojo.profile={start:function(){
},end:function(){
},stop:function(){
},dump:function(){
}};
function dj_eval(_15){
return dj_global.eval?dj_global.eval(_15):eval(_15);
}
dojo.unimplemented=function(_16,_17){
var _18="'"+_16+"' not implemented";
if(_17!=null){
_18+=" "+_17;
}
dojo.raise(_18);
};
dojo.deprecated=function(_19,_1a,_1b){
var _1c="DEPRECATED: "+_19;
if(_1a){
_1c+=" "+_1a;
}
if(_1b){
_1c+=" -- will be removed in version: "+_1b;
}
dojo.debug(_1c);
};
dojo.render=(function(){
function vscaffold(_1d,_1e){
var tmp={capable:false,support:{builtin:false,plugin:false},prefixes:_1d};
for(var i=0;i<_1e.length;i++){
tmp[_1e[i]]=false;
}
return tmp;
}
return {name:"",ver:dojo.version,os:{win:false,linux:false,osx:false},html:vscaffold(["html"],["ie","opera","khtml","safari","moz"]),svg:vscaffold(["svg"],["corel","adobe","batik"]),vml:vscaffold(["vml"],["ie"]),swf:vscaffold(["Swf","Flash","Mm"],["mm"]),swt:vscaffold(["Swt"],["ibm"])};
})();
dojo.hostenv=(function(){
var _21={isDebug:false,allowQueryConfig:false,baseScriptUri:"",baseRelativePath:"",libraryScriptUri:"",iePreventClobber:false,ieClobberMinimal:true,preventBackButtonFix:true,delayMozLoadingFix:false,searchIds:[],parseWidgets:true};
if(typeof djConfig=="undefined"){
djConfig=_21;
}else{
for(var _22 in _21){
if(typeof djConfig[_22]=="undefined"){
djConfig[_22]=_21[_22];
}
}
}
return {name_:"(unset)",version_:"(unset)",getName:function(){
return this.name_;
},getVersion:function(){
return this.version_;
},getText:function(uri){
dojo.unimplemented("getText","uri="+uri);
}};
})();
dojo.hostenv.getBaseScriptUri=function(){
if(djConfig.baseScriptUri.length){
return djConfig.baseScriptUri;
}
var uri=new String(djConfig.libraryScriptUri||djConfig.baseRelativePath);
if(!uri){
dojo.raise("Nothing returned by getLibraryScriptUri(): "+uri);
}
var _25=uri.lastIndexOf("/");
djConfig.baseScriptUri=djConfig.baseRelativePath;
return djConfig.baseScriptUri;
};
(function(){
var _26={pkgFileName:"__package__",loading_modules_:{},loaded_modules_:{},addedToLoadingCount:[],removedFromLoadingCount:[],inFlightCount:0,modulePrefixes_:{dojo:{name:"dojo",value:"src"}},setModulePrefix:function(_27,_28){
this.modulePrefixes_[_27]={name:_27,value:_28};
},moduleHasPrefix:function(_29){
var mp=this.modulePrefixes_;
return Boolean(mp[_29]&&mp[_29].value);
},getModulePrefix:function(_2b){
if(this.moduleHasPrefix(_2b)){
return this.modulePrefixes_[_2b].value;
}
return _2b;
},getTextStack:[],loadUriStack:[],loadedUris:[],post_load_:false,modulesLoadedListeners:[],unloadListeners:[],loadNotifying:false};
for(var _2c in _26){
dojo.hostenv[_2c]=_26[_2c];
}
})();
dojo.hostenv.loadPath=function(_2d,_2e,cb){
var uri;
if(_2d.charAt(0)=="/"||_2d.match(/^\w+:/)){
uri=_2d;
}else{
uri=this.getBaseScriptUri()+_2d;
}
if(djConfig.cacheBust&&dojo.render.html.capable){
uri+="?"+String(djConfig.cacheBust).replace(/\W+/g,"");
}
try{
return !_2e?this.loadUri(uri,cb):this.loadUriAndCheck(uri,_2e,cb);
}
catch(e){
dojo.debug(e);
return false;
}
};
dojo.hostenv.loadUri=function(uri,cb){
if(this.loadedUris[uri]){
return true;
}
var _33=this.getText(uri,null,true);
if(!_33){
return false;
}
this.loadedUris[uri]=true;
if(cb){
_33="("+_33+")";
}
var _34=dj_eval(_33);
if(cb){
cb(_34);
}
return true;
};
dojo.hostenv.loadUriAndCheck=function(uri,_36,cb){
var ok=true;
try{
ok=this.loadUri(uri,cb);
}
catch(e){
dojo.debug("failed loading ",uri," with error: ",e);
}
return Boolean(ok&&this.findModule(_36,false));
};
dojo.loaded=function(){
};
dojo.unloaded=function(){
};
dojo.hostenv.loaded=function(){
this.loadNotifying=true;
this.post_load_=true;
var mll=this.modulesLoadedListeners;
for(var x=0;x<mll.length;x++){
mll[x]();
}
this.modulesLoadedListeners=[];
this.loadNotifying=false;
dojo.loaded();
};
dojo.hostenv.unloaded=function(){
var mll=this.unloadListeners;
while(mll.length){
(mll.pop())();
}
dojo.unloaded();
};
dojo.addOnLoad=function(obj,_3d){
var dh=dojo.hostenv;
if(arguments.length==1){
dh.modulesLoadedListeners.push(obj);
}else{
if(arguments.length>1){
dh.modulesLoadedListeners.push(function(){
obj[_3d]();
});
}
}
if(dh.post_load_&&dh.inFlightCount==0&&!dh.loadNotifying){
dh.callLoaded();
}
};
dojo.addOnUnload=function(obj,_40){
var dh=dojo.hostenv;
if(arguments.length==1){
dh.unloadListeners.push(obj);
}else{
if(arguments.length>1){
dh.unloadListeners.push(function(){
obj[_40]();
});
}
}
};
dojo.hostenv.modulesLoaded=function(){
if(this.post_load_){
return;
}
if(this.loadUriStack.length==0&&this.getTextStack.length==0){
if(this.inFlightCount>0){
dojo.debug("files still in flight!");
return;
}
dojo.hostenv.callLoaded();
}
};
dojo.hostenv.callLoaded=function(){
if(typeof setTimeout=="object"){
setTimeout("dojo.hostenv.loaded();",0);
}else{
dojo.hostenv.loaded();
}
};
dojo.hostenv.getModuleSymbols=function(_42){
var _43=_42.split(".");
for(var i=_43.length;i>0;i--){
var _45=_43.slice(0,i).join(".");
if((i==1)&&!this.moduleHasPrefix(_45)){
_43[0]="../"+_43[0];
}else{
var _46=this.getModulePrefix(_45);
if(_46!=_45){
_43.splice(0,i,_46);
break;
}
}
}
return _43;
};
dojo.hostenv._global_omit_module_check=false;
dojo.hostenv.loadModule=function(_47,_48,_49){
if(!_47){
return;
}
_49=this._global_omit_module_check||_49;
var _4a=this.findModule(_47,false);
if(_4a){
return _4a;
}
if(dj_undef(_47,this.loading_modules_)){
this.addedToLoadingCount.push(_47);
}
this.loading_modules_[_47]=1;
var _4b=_47.replace(/\./g,"/")+".js";
var _4c=_47.split(".");
var _4d=this.getModuleSymbols(_47);
var _4e=((_4d[0].charAt(0)!="/")&&!_4d[0].match(/^\w+:/));
var _4f=_4d[_4d.length-1];
var ok;
if(_4f=="*"){
_47=_4c.slice(0,-1).join(".");
while(_4d.length){
_4d.pop();
_4d.push(this.pkgFileName);
_4b=_4d.join("/")+".js";
if(_4e&&_4b.charAt(0)=="/"){
_4b=_4b.slice(1);
}
ok=this.loadPath(_4b,!_49?_47:null);
if(ok){
break;
}
_4d.pop();
}
}else{
_4b=_4d.join("/")+".js";
_47=_4c.join(".");
var _51=!_49?_47:null;
ok=this.loadPath(_4b,_51);
if(!ok&&!_48){
_4d.pop();
while(_4d.length){
_4b=_4d.join("/")+".js";
ok=this.loadPath(_4b,_51);
if(ok){
break;
}
_4d.pop();
_4b=_4d.join("/")+"/"+this.pkgFileName+".js";
if(_4e&&_4b.charAt(0)=="/"){
_4b=_4b.slice(1);
}
ok=this.loadPath(_4b,_51);
if(ok){
break;
}
}
}
if(!ok&&!_49){
dojo.raise("Could not load '"+_47+"'; last tried '"+_4b+"'");
}
}
if(!_49&&!this["isXDomain"]){
_4a=this.findModule(_47,false);
if(!_4a){
dojo.raise("symbol '"+_47+"' is not defined after loading '"+_4b+"'");
}
}
return _4a;
};
dojo.hostenv.startPackage=function(_52){
var _53=String(_52);
var _54=_53;
var _55=_52.split(/\./);
if(_55[_55.length-1]=="*"){
_55.pop();
_54=_55.join(".");
}
var _56=dojo.evalObjPath(_54,true);
this.loaded_modules_[_53]=_56;
this.loaded_modules_[_54]=_56;
return _56;
};
dojo.hostenv.findModule=function(_57,_58){
var lmn=String(_57);
if(this.loaded_modules_[lmn]){
return this.loaded_modules_[lmn];
}
if(_58){
dojo.raise("no loaded module named '"+_57+"'");
}
return null;
};
dojo.kwCompoundRequire=function(_5a){
var _5b=_5a["common"]||[];
var _5c=_5a[dojo.hostenv.name_]?_5b.concat(_5a[dojo.hostenv.name_]||[]):_5b.concat(_5a["default"]||[]);
for(var x=0;x<_5c.length;x++){
var _5e=_5c[x];
if(_5e.constructor==Array){
dojo.hostenv.loadModule.apply(dojo.hostenv,_5e);
}else{
dojo.hostenv.loadModule(_5e);
}
}
};
dojo.require=function(_5f){
dojo.hostenv.loadModule.apply(dojo.hostenv,arguments);
};
dojo.requireIf=function(_60,_61){
var _62=arguments[0];
if((_62===true)||(_62=="common")||(_62&&dojo.render[_62].capable)){
var _63=[];
for(var i=1;i<arguments.length;i++){
_63.push(arguments[i]);
}
dojo.require.apply(dojo,_63);
}
};
dojo.requireAfterIf=dojo.requireIf;
dojo.provide=function(_65){
return dojo.hostenv.startPackage.apply(dojo.hostenv,arguments);
};
dojo.registerModulePath=function(_66,_67){
return dojo.hostenv.setModulePrefix(_66,_67);
};
dojo.setModulePrefix=function(_68,_69){
dojo.deprecated("dojo.setModulePrefix(\""+_68+"\", \""+_69+"\")","replaced by dojo.registerModulePath","0.5");
return dojo.registerModulePath(_68,_69);
};
dojo.exists=function(obj,_6b){
var p=_6b.split(".");
for(var i=0;i<p.length;i++){
if(!obj[p[i]]){
return false;
}
obj=obj[p[i]];
}
return true;
};
dojo.hostenv.normalizeLocale=function(_6e){
var _6f=_6e?_6e.toLowerCase():dojo.locale;
if(_6f=="root"){
_6f="ROOT";
}
return _6f;
};
dojo.hostenv.searchLocalePath=function(_70,_71,_72){
_70=dojo.hostenv.normalizeLocale(_70);
var _73=_70.split("-");
var _74=[];
for(var i=_73.length;i>0;i--){
_74.push(_73.slice(0,i).join("-"));
}
_74.push(false);
if(_71){
_74.reverse();
}
for(var j=_74.length-1;j>=0;j--){
var loc=_74[j]||"ROOT";
var _78=_72(loc);
if(_78){
break;
}
}
};
dojo.hostenv.localesGenerated=["ROOT","es-es","es","it-it","pt-br","de","fr-fr","zh-cn","pt","en-us","zh","fr","zh-tw","it","en-gb","xx","de-de","ko-kr","ja-jp","ko","en","ja"];
dojo.hostenv.registerNlsPrefix=function(){
dojo.registerModulePath("nls","nls");
};
dojo.hostenv.preloadLocalizations=function(){
if(dojo.hostenv.localesGenerated){
dojo.hostenv.registerNlsPrefix();
function preload(_79){
_79=dojo.hostenv.normalizeLocale(_79);
dojo.hostenv.searchLocalePath(_79,true,function(loc){
for(var i=0;i<dojo.hostenv.localesGenerated.length;i++){
if(dojo.hostenv.localesGenerated[i]==loc){
dojo["require"]("nls.dojo_"+loc);
return true;
}
}
return false;
});
}
preload();
var _7c=djConfig.extraLocale||[];
for(var i=0;i<_7c.length;i++){
preload(_7c[i]);
}
}
dojo.hostenv.preloadLocalizations=function(){
};
};
dojo.requireLocalization=function(_7e,_7f,_80,_81){
dojo.hostenv.preloadLocalizations();
var _82=dojo.hostenv.normalizeLocale(_80);
var _83=[_7e,"nls",_7f].join(".");
var _84="";
if(_81){
var _85=_81.split(",");
for(var i=0;i<_85.length;i++){
if(_82.indexOf(_85[i])==0){
if(_85[i].length>_84.length){
_84=_85[i];
}
}
}
if(!_84){
_84="ROOT";
}
}
var _87=_81?_84:_82;
var _88=dojo.hostenv.findModule(_83);
var _89=null;
if(_88){
if(djConfig.localizationComplete&&_88._built){
return;
}
var _8a=_87.replace("-","_");
var _8b=_83+"."+_8a;
_89=dojo.hostenv.findModule(_8b);
}
if(!_89){
_88=dojo.hostenv.startPackage(_83);
var _8c=dojo.hostenv.getModuleSymbols(_7e);
var _8d=_8c.concat("nls").join("/");
var _8e;
dojo.hostenv.searchLocalePath(_87,_81,function(loc){
var _90=loc.replace("-","_");
var _91=_83+"."+_90;
var _92=false;
if(!dojo.hostenv.findModule(_91)){
dojo.hostenv.startPackage(_91);
var _93=[_8d];
if(loc!="ROOT"){
_93.push(loc);
}
_93.push(_7f);
var _94=_93.join("/")+".js";
_92=dojo.hostenv.loadPath(_94,null,function(_95){
var _96=function(){
};
_96.prototype=_8e;
_88[_90]=new _96();
for(var j in _95){
_88[_90][j]=_95[j];
}
});
}else{
_92=true;
}
if(_92&&_88[_90]){
_8e=_88[_90];
}else{
_88[_90]=_8e;
}
if(_81){
return true;
}
});
}
if(_81&&_82!=_84){
_88[_82.replace("-","_")]=_88[_84.replace("-","_")];
}
};
(function(){
var _98=djConfig.extraLocale;
if(_98){
if(!_98 instanceof Array){
_98=[_98];
}
var req=dojo.requireLocalization;
dojo.requireLocalization=function(m,b,_9c,_9d){
req(m,b,_9c,_9d);
if(_9c){
return;
}
for(var i=0;i<_98.length;i++){
req(m,b,_98[i],_9d);
}
};
}
})();
}
if(typeof window!="undefined"){
(function(){
if(djConfig.allowQueryConfig){
var _9f=document.location.toString();
var _a0=_9f.split("?",2);
if(_a0.length>1){
var _a1=_a0[1];
var _a2=_a1.split("&");
for(var x in _a2){
var sp=_a2[x].split("=");
if((sp[0].length>9)&&(sp[0].substr(0,9)=="djConfig.")){
var opt=sp[0].substr(9);
try{
djConfig[opt]=eval(sp[1]);
}
catch(e){
djConfig[opt]=sp[1];
}
}
}
}
}
if(((djConfig["baseScriptUri"]=="")||(djConfig["baseRelativePath"]==""))&&(document&&document.getElementsByTagName)){
var _a6=document.getElementsByTagName("script");
var _a7=/(__package__|dojo|bootstrap1)\.js([\?\.]|$)/i;
for(var i=0;i<_a6.length;i++){
var src=_a6[i].getAttribute("src");
if(!src){
continue;
}
var m=src.match(_a7);
if(m){
var _ab=src.substring(0,m.index);
if(src.indexOf("bootstrap1")>-1){
_ab+="../";
}
if(!this["djConfig"]){
djConfig={};
}
if(djConfig["baseScriptUri"]==""){
djConfig["baseScriptUri"]=_ab;
}
if(djConfig["baseRelativePath"]==""){
djConfig["baseRelativePath"]=_ab;
}
break;
}
}
}
var dr=dojo.render;
var drh=dojo.render.html;
var drs=dojo.render.svg;
var dua=(drh.UA=navigator.userAgent);
var dav=(drh.AV=navigator.appVersion);
var t=true;
var f=false;
drh.capable=t;
drh.support.builtin=t;
dr.ver=parseFloat(drh.AV);
dr.os.mac=dav.indexOf("Macintosh")>=0;
dr.os.win=dav.indexOf("Windows")>=0;
dr.os.linux=dav.indexOf("X11")>=0;
drh.opera=dua.indexOf("Opera")>=0;
drh.khtml=(dav.indexOf("Konqueror")>=0)||(dav.indexOf("Safari")>=0);
drh.safari=dav.indexOf("Safari")>=0;
var _b3=dua.indexOf("Gecko");
drh.mozilla=drh.moz=(_b3>=0)&&(!drh.khtml);
if(drh.mozilla){
drh.geckoVersion=dua.substring(_b3+6,_b3+14);
}
drh.ie=(document.all)&&(!drh.opera);
drh.ie50=drh.ie&&dav.indexOf("MSIE 5.0")>=0;
drh.ie55=drh.ie&&dav.indexOf("MSIE 5.5")>=0;
drh.ie60=drh.ie&&dav.indexOf("MSIE 6.0")>=0;
drh.ie70=drh.ie&&dav.indexOf("MSIE 7.0")>=0;
var cm=document["compatMode"];
drh.quirks=(cm=="BackCompat")||(cm=="QuirksMode")||drh.ie55||drh.ie50;
dojo.locale=dojo.locale||(drh.ie?navigator.userLanguage:navigator.language).toLowerCase();
dr.vml.capable=drh.ie;
drs.capable=f;
drs.support.plugin=f;
drs.support.builtin=f;
var _b5=window["document"];
var tdi=_b5["implementation"];
if((tdi)&&(tdi["hasFeature"])&&(tdi.hasFeature("org.w3c.dom.svg","1.0"))){
drs.capable=t;
drs.support.builtin=t;
drs.support.plugin=f;
}
if(drh.safari){
var tmp=dua.split("AppleWebKit/")[1];
var ver=parseFloat(tmp.split(" ")[0]);
if(ver>=420){
drs.capable=t;
drs.support.builtin=t;
drs.support.plugin=f;
}
}else{
}
})();
dojo.hostenv.startPackage("dojo.hostenv");
dojo.render.name=dojo.hostenv.name_="browser";
dojo.hostenv.searchIds=[];
dojo.hostenv._XMLHTTP_PROGIDS=["Msxml2.XMLHTTP","Microsoft.XMLHTTP","Msxml2.XMLHTTP.4.0"];
dojo.hostenv.getXmlhttpObject=function(){
var _b9=null;
var _ba=null;
try{
_b9=new XMLHttpRequest();
}
catch(e){
}
if(!_b9){
for(var i=0;i<3;++i){
var _bc=dojo.hostenv._XMLHTTP_PROGIDS[i];
try{
_b9=new ActiveXObject(_bc);
}
catch(e){
_ba=e;
}
if(_b9){
dojo.hostenv._XMLHTTP_PROGIDS=[_bc];
break;
}
}
}
if(!_b9){
return dojo.raise("XMLHTTP not available",_ba);
}
return _b9;
};
dojo.hostenv._blockAsync=false;
dojo.hostenv.getText=function(uri,_be,_bf){
if(!_be){
this._blockAsync=true;
}
var _c0=this.getXmlhttpObject();
function isDocumentOk(_c1){
var _c2=_c1["status"];
return Boolean((!_c2)||((200<=_c2)&&(300>_c2))||(_c2==304));
}
if(_be){
var _c3=this,_c4=null,gbl=dojo.global();
var xhr=dojo.evalObjPath("dojo.io.XMLHTTPTransport");
_c0.onreadystatechange=function(){
if(_c4){
gbl.clearTimeout(_c4);
_c4=null;
}
if(_c3._blockAsync||(xhr&&xhr._blockAsync)){
_c4=gbl.setTimeout(function(){
_c0.onreadystatechange.apply(this);
},10);
}else{
if(4==_c0.readyState){
if(isDocumentOk(_c0)){
_be(_c0.responseText);
}
}
}
};
}
_c0.open("GET",uri,_be?true:false);
try{
_c0.send(null);
if(_be){
return null;
}
if(!isDocumentOk(_c0)){
var err=Error("Unable to load "+uri+" status:"+_c0.status);
err.status=_c0.status;
err.responseText=_c0.responseText;
throw err;
}
}
catch(e){
this._blockAsync=false;
if((_bf)&&(!_be)){
return null;
}else{
throw e;
}
}
this._blockAsync=false;
return _c0.responseText;
};
dojo.hostenv.defaultDebugContainerId="dojoDebug";
dojo.hostenv._println_buffer=[];
dojo.hostenv._println_safe=false;
dojo.hostenv.println=function(_c8){
if(!dojo.hostenv._println_safe){
dojo.hostenv._println_buffer.push(_c8);
}else{
try{
var _c9=document.getElementById(djConfig.debugContainerId?djConfig.debugContainerId:dojo.hostenv.defaultDebugContainerId);
if(!_c9){
_c9=dojo.body();
}
var div=document.createElement("div");
div.appendChild(document.createTextNode(_c8));
_c9.appendChild(div);
}
catch(e){
try{
document.write("<div>"+_c8+"</div>");
}
catch(e2){
window.status=_c8;
}
}
}
};
dojo.addOnLoad(function(){
dojo.hostenv._println_safe=true;
while(dojo.hostenv._println_buffer.length>0){
dojo.hostenv.println(dojo.hostenv._println_buffer.shift());
}
});
function dj_addNodeEvtHdlr(_cb,_cc,fp){
var _ce=_cb["on"+_cc]||function(){
};
_cb["on"+_cc]=function(){
fp.apply(_cb,arguments);
_ce.apply(_cb,arguments);
};
return true;
}
function dj_load_init(e){
var _d0=(e&&e.type)?e.type.toLowerCase():"load";
if(arguments.callee.initialized||(_d0!="domcontentloaded"&&_d0!="load")){
return;
}
arguments.callee.initialized=true;
if(typeof (_timer)!="undefined"){
clearInterval(_timer);
delete _timer;
}
var _d1=function(){
if(dojo.render.html.ie){
dojo.hostenv.makeWidgets();
}
};
if(dojo.hostenv.inFlightCount==0){
_d1();
dojo.hostenv.modulesLoaded();
}else{
dojo.hostenv.modulesLoadedListeners.unshift(_d1);
}
}
if(document.addEventListener){
if(dojo.render.html.opera||(dojo.render.html.moz&&!djConfig.delayMozLoadingFix)){
document.addEventListener("DOMContentLoaded",dj_load_init,null);
}
window.addEventListener("load",dj_load_init,null);
}
if(dojo.render.html.ie&&dojo.render.os.win){
document.attachEvent("onreadystatechange",function(e){
if(document.readyState=="complete"){
dj_load_init();
}
});
}
if(/(WebKit|khtml)/i.test(navigator.userAgent)){
var _timer=setInterval(function(){
if(/loaded|complete/.test(document.readyState)){
dj_load_init();
}
},10);
}
if(dojo.render.html.ie){
dj_addNodeEvtHdlr(window,"beforeunload",function(){
dojo.hostenv._unloading=true;
window.setTimeout(function(){
dojo.hostenv._unloading=false;
},0);
});
}
dj_addNodeEvtHdlr(window,"unload",function(){
dojo.hostenv.unloaded();
if((!dojo.render.html.ie)||(dojo.render.html.ie&&dojo.hostenv._unloading)){
dojo.hostenv.unloaded();
}
});
dojo.hostenv.makeWidgets=function(){
var _d3=[];
if(djConfig.searchIds&&djConfig.searchIds.length>0){
_d3=_d3.concat(djConfig.searchIds);
}
if(dojo.hostenv.searchIds&&dojo.hostenv.searchIds.length>0){
_d3=_d3.concat(dojo.hostenv.searchIds);
}
if((djConfig.parseWidgets)||(_d3.length>0)){
if(dojo.evalObjPath("dojo.widget.Parse")){
var _d4=new dojo.xml.Parse();
if(_d3.length>0){
for(var x=0;x<_d3.length;x++){
var _d6=document.getElementById(_d3[x]);
if(!_d6){
continue;
}
var _d7=_d4.parseElement(_d6,null,true);
dojo.widget.getParser().createComponents(_d7);
}
}else{
if(djConfig.parseWidgets){
var _d7=_d4.parseElement(dojo.body(),null,true);
dojo.widget.getParser().createComponents(_d7);
}
}
}
}
};
dojo.addOnLoad(function(){
if(!dojo.render.html.ie){
dojo.hostenv.makeWidgets();
}
});
try{
if(dojo.render.html.ie){
document.namespaces.add("v","urn:schemas-microsoft-com:vml");
document.createStyleSheet().addRule("v\\:*","behavior:url(#default#VML)");
}
}
catch(e){
}
dojo.hostenv.writeIncludes=function(){
};
if(!dj_undef("document",this)){
dj_currentDocument=this.document;
}
dojo.doc=function(){
return dj_currentDocument;
};
dojo.body=function(){
return dojo.doc().body||dojo.doc().getElementsByTagName("body")[0];
};
dojo.byId=function(id,doc){
if((id)&&((typeof id=="string")||(id instanceof String))){
if(!doc){
doc=dj_currentDocument;
}
var ele=doc.getElementById(id);
if(ele&&(ele.id!=id)&&doc.all){
ele=null;
eles=doc.all[id];
if(eles){
if(eles.length){
for(var i=0;i<eles.length;i++){
if(eles[i].id==id){
ele=eles[i];
break;
}
}
}else{
ele=eles;
}
}
}
return ele;
}
return id;
};
dojo.setContext=function(_dc,_dd){
dj_currentContext=_dc;
dj_currentDocument=_dd;
};
dojo._fireCallback=function(_de,_df,_e0){
if((_df)&&((typeof _de=="string")||(_de instanceof String))){
_de=_df[_de];
}
return (_df?_de.apply(_df,_e0||[]):_de());
};
dojo.withGlobal=function(_e1,_e2,_e3,_e4){
var _e5;
var _e6=dj_currentContext;
var _e7=dj_currentDocument;
try{
dojo.setContext(_e1,_e1.document);
_e5=dojo._fireCallback(_e2,_e3,_e4);
}
finally{
dojo.setContext(_e6,_e7);
}
return _e5;
};
dojo.withDoc=function(_e8,_e9,_ea,_eb){
var _ec;
var _ed=dj_currentDocument;
try{
dj_currentDocument=_e8;
_ec=dojo._fireCallback(_e9,_ea,_eb);
}
finally{
dj_currentDocument=_ed;
}
return _ec;
};
}
(function(){
if(typeof dj_usingBootstrap!="undefined"){
return;
}
var _ee=false;
var _ef=false;
var _f0=false;
if((typeof this["load"]=="function")&&((typeof this["Packages"]=="function")||(typeof this["Packages"]=="object"))){
_ee=true;
}else{
if(typeof this["load"]=="function"){
_ef=true;
}else{
if(window.widget){
_f0=true;
}
}
}
var _f1=[];
if((this["djConfig"])&&((djConfig["isDebug"])||(djConfig["debugAtAllCosts"]))){
_f1.push("debug.js");
}
if((this["djConfig"])&&(djConfig["debugAtAllCosts"])&&(!_ee)&&(!_f0)){
_f1.push("browser_debug.js");
}
var _f2=djConfig["baseScriptUri"];
if((this["djConfig"])&&(djConfig["baseLoaderUri"])){
_f2=djConfig["baseLoaderUri"];
}
for(var x=0;x<_f1.length;x++){
var _f4=_f2+"src/"+_f1[x];
if(_ee||_ef){
load(_f4);
}else{
try{
document.write("<scr"+"ipt type='text/javascript' src='"+_f4+"'></scr"+"ipt>");
}
catch(e){
var _f5=document.createElement("script");
_f5.src=_f4;
document.getElementsByTagName("head")[0].appendChild(_f5);
}
}
}
})();
dojo.provide("dojo.dom");
dojo.dom.ELEMENT_NODE=1;
dojo.dom.ATTRIBUTE_NODE=2;
dojo.dom.TEXT_NODE=3;
dojo.dom.CDATA_SECTION_NODE=4;
dojo.dom.ENTITY_REFERENCE_NODE=5;
dojo.dom.ENTITY_NODE=6;
dojo.dom.PROCESSING_INSTRUCTION_NODE=7;
dojo.dom.COMMENT_NODE=8;
dojo.dom.DOCUMENT_NODE=9;
dojo.dom.DOCUMENT_TYPE_NODE=10;
dojo.dom.DOCUMENT_FRAGMENT_NODE=11;
dojo.dom.NOTATION_NODE=12;
dojo.dom.dojoml="http://www.dojotoolkit.org/2004/dojoml";
dojo.dom.xmlns={svg:"http://www.w3.org/2000/svg",smil:"http://www.w3.org/2001/SMIL20/",mml:"http://www.w3.org/1998/Math/MathML",cml:"http://www.xml-cml.org",xlink:"http://www.w3.org/1999/xlink",xhtml:"http://www.w3.org/1999/xhtml",xul:"http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul",xbl:"http://www.mozilla.org/xbl",fo:"http://www.w3.org/1999/XSL/Format",xsl:"http://www.w3.org/1999/XSL/Transform",xslt:"http://www.w3.org/1999/XSL/Transform",xi:"http://www.w3.org/2001/XInclude",xforms:"http://www.w3.org/2002/01/xforms",saxon:"http://icl.com/saxon",xalan:"http://xml.apache.org/xslt",xsd:"http://www.w3.org/2001/XMLSchema",dt:"http://www.w3.org/2001/XMLSchema-datatypes",xsi:"http://www.w3.org/2001/XMLSchema-instance",rdf:"http://www.w3.org/1999/02/22-rdf-syntax-ns#",rdfs:"http://www.w3.org/2000/01/rdf-schema#",dc:"http://purl.org/dc/elements/1.1/",dcq:"http://purl.org/dc/qualifiers/1.0","soap-env":"http://schemas.xmlsoap.org/soap/envelope/",wsdl:"http://schemas.xmlsoap.org/wsdl/",AdobeExtensions:"http://ns.adobe.com/AdobeSVGViewerExtensions/3.0/"};
dojo.dom.isNode=function(wh){
if(typeof Element=="function"){
try{
return wh instanceof Element;
}
catch(e){
}
}else{
return wh&&!isNaN(wh.nodeType);
}
};
dojo.dom.getUniqueId=function(){
var _f7=dojo.doc();
do{
var id="dj_unique_"+(++arguments.callee._idIncrement);
}while(_f7.getElementById(id));
return id;
};
dojo.dom.getUniqueId._idIncrement=0;
dojo.dom.firstElement=dojo.dom.getFirstChildElement=function(_f9,_fa){
var _fb=_f9.firstChild;
while(_fb&&_fb.nodeType!=dojo.dom.ELEMENT_NODE){
_fb=_fb.nextSibling;
}
if(_fa&&_fb&&_fb.tagName&&_fb.tagName.toLowerCase()!=_fa.toLowerCase()){
_fb=dojo.dom.nextElement(_fb,_fa);
}
return _fb;
};
dojo.dom.lastElement=dojo.dom.getLastChildElement=function(_fc,_fd){
var _fe=_fc.lastChild;
while(_fe&&_fe.nodeType!=dojo.dom.ELEMENT_NODE){
_fe=_fe.previousSibling;
}
if(_fd&&_fe&&_fe.tagName&&_fe.tagName.toLowerCase()!=_fd.toLowerCase()){
_fe=dojo.dom.prevElement(_fe,_fd);
}
return _fe;
};
dojo.dom.nextElement=dojo.dom.getNextSiblingElement=function(_ff,_100){
if(!_ff){
return null;
}
do{
_ff=_ff.nextSibling;
}while(_ff&&_ff.nodeType!=dojo.dom.ELEMENT_NODE);
if(_ff&&_100&&_100.toLowerCase()!=_ff.tagName.toLowerCase()){
return dojo.dom.nextElement(_ff,_100);
}
return _ff;
};
dojo.dom.prevElement=dojo.dom.getPreviousSiblingElement=function(node,_102){
if(!node){
return null;
}
if(_102){
_102=_102.toLowerCase();
}
do{
node=node.previousSibling;
}while(node&&node.nodeType!=dojo.dom.ELEMENT_NODE);
if(node&&_102&&_102.toLowerCase()!=node.tagName.toLowerCase()){
return dojo.dom.prevElement(node,_102);
}
return node;
};
dojo.dom.moveChildren=function(_103,_104,trim){
var _106=0;
if(trim){
while(_103.hasChildNodes()&&_103.firstChild.nodeType==dojo.dom.TEXT_NODE){
_103.removeChild(_103.firstChild);
}
while(_103.hasChildNodes()&&_103.lastChild.nodeType==dojo.dom.TEXT_NODE){
_103.removeChild(_103.lastChild);
}
}
while(_103.hasChildNodes()){
_104.appendChild(_103.firstChild);
_106++;
}
return _106;
};
dojo.dom.copyChildren=function(_107,_108,trim){
var _10a=_107.cloneNode(true);
return this.moveChildren(_10a,_108,trim);
};
dojo.dom.replaceChildren=function(node,_10c){
var _10d=[];
if(dojo.render.html.ie){
for(var i=0;i<node.childNodes.length;i++){
_10d.push(node.childNodes[i]);
}
}
dojo.dom.removeChildren(node);
node.appendChild(_10c);
for(var i=0;i<_10d.length;i++){
dojo.dom.destroyNode(_10d[i]);
}
};
dojo.dom.removeChildren=function(node){
var _110=node.childNodes.length;
while(node.hasChildNodes()){
dojo.dom.removeNode(node.firstChild);
}
return _110;
};
dojo.dom.replaceNode=function(node,_112){
return node.parentNode.replaceChild(_112,node);
};
dojo.dom.destroyNode=function(node){
if(node.parentNode){
node=dojo.dom.removeNode(node);
}
if(node.nodeType!=3){
if(dojo.evalObjPath("dojo.event.browser.clean",false)){
dojo.event.browser.clean(node);
}
if(dojo.render.html.ie){
node.outerHTML="";
}
}
};
dojo.dom.removeNode=function(node){
if(node&&node.parentNode){
return node.parentNode.removeChild(node);
}
};
dojo.dom.getAncestors=function(node,_116,_117){
var _118=[];
var _119=(_116&&(_116 instanceof Function||typeof _116=="function"));
while(node){
if(!_119||_116(node)){
_118.push(node);
}
if(_117&&_118.length>0){
return _118[0];
}
node=node.parentNode;
}
if(_117){
return null;
}
return _118;
};
dojo.dom.getAncestorsByTag=function(node,tag,_11c){
tag=tag.toLowerCase();
return dojo.dom.getAncestors(node,function(el){
return ((el.tagName)&&(el.tagName.toLowerCase()==tag));
},_11c);
};
dojo.dom.getFirstAncestorByTag=function(node,tag){
return dojo.dom.getAncestorsByTag(node,tag,true);
};
dojo.dom.isDescendantOf=function(node,_121,_122){
if(_122&&node){
node=node.parentNode;
}
while(node){
if(node==_121){
return true;
}
node=node.parentNode;
}
return false;
};
dojo.dom.innerXML=function(node){
if(node.innerXML){
return node.innerXML;
}else{
if(node.xml){
return node.xml;
}else{
if(typeof XMLSerializer!="undefined"){
return (new XMLSerializer()).serializeToString(node);
}
}
}
};
dojo.dom.createDocument=function(){
var doc=null;
var _125=dojo.doc();
if(!dj_undef("ActiveXObject")){
var _126=["MSXML2","Microsoft","MSXML","MSXML3"];
for(var i=0;i<_126.length;i++){
try{
doc=new ActiveXObject(_126[i]+".XMLDOM");
}
catch(e){
}
if(doc){
break;
}
}
}else{
if((_125.implementation)&&(_125.implementation.createDocument)){
doc=_125.implementation.createDocument("","",null);
}
}
return doc;
};
dojo.dom.createDocumentFromText=function(str,_129){
if(!_129){
_129="text/xml";
}
if(!dj_undef("DOMParser")){
var _12a=new DOMParser();
return _12a.parseFromString(str,_129);
}else{
if(!dj_undef("ActiveXObject")){
var _12b=dojo.dom.createDocument();
if(_12b){
_12b.async=false;
_12b.loadXML(str);
return _12b;
}else{
dojo.debug("toXml didn't work?");
}
}else{
var _12c=dojo.doc();
if(_12c.createElement){
var tmp=_12c.createElement("xml");
tmp.innerHTML=str;
if(_12c.implementation&&_12c.implementation.createDocument){
var _12e=_12c.implementation.createDocument("foo","",null);
for(var i=0;i<tmp.childNodes.length;i++){
_12e.importNode(tmp.childNodes.item(i),true);
}
return _12e;
}
return ((tmp.document)&&(tmp.document.firstChild?tmp.document.firstChild:tmp));
}
}
}
return null;
};
dojo.dom.prependChild=function(node,_131){
if(_131.firstChild){
_131.insertBefore(node,_131.firstChild);
}else{
_131.appendChild(node);
}
return true;
};
dojo.dom.insertBefore=function(node,ref,_134){
if((_134!=true)&&(node===ref||node.nextSibling===ref)){
return false;
}
var _135=ref.parentNode;
_135.insertBefore(node,ref);
return true;
};
dojo.dom.insertAfter=function(node,ref,_138){
var pn=ref.parentNode;
if(ref==pn.lastChild){
if((_138!=true)&&(node===ref)){
return false;
}
pn.appendChild(node);
}else{
return this.insertBefore(node,ref.nextSibling,_138);
}
return true;
};
dojo.dom.insertAtPosition=function(node,ref,_13c){
if((!node)||(!ref)||(!_13c)){
return false;
}
switch(_13c.toLowerCase()){
case "before":
return dojo.dom.insertBefore(node,ref);
case "after":
return dojo.dom.insertAfter(node,ref);
case "first":
if(ref.firstChild){
return dojo.dom.insertBefore(node,ref.firstChild);
}else{
ref.appendChild(node);
return true;
}
break;
default:
ref.appendChild(node);
return true;
}
};
dojo.dom.insertAtIndex=function(node,_13e,_13f){
var _140=_13e.childNodes;
if(!_140.length||_140.length==_13f){
_13e.appendChild(node);
return true;
}
if(_13f==0){
return dojo.dom.prependChild(node,_13e);
}
return dojo.dom.insertAfter(node,_140[_13f-1]);
};
dojo.dom.textContent=function(node,text){
if(arguments.length>1){
var _143=dojo.doc();
dojo.dom.replaceChildren(node,_143.createTextNode(text));
return text;
}else{
if(node.textContent!=undefined){
return node.textContent;
}
var _144="";
if(node==null){
return _144;
}
for(var i=0;i<node.childNodes.length;i++){
switch(node.childNodes[i].nodeType){
case 1:
case 5:
_144+=dojo.dom.textContent(node.childNodes[i]);
break;
case 3:
case 2:
case 4:
_144+=node.childNodes[i].nodeValue;
break;
default:
break;
}
}
return _144;
}
};
dojo.dom.hasParent=function(node){
return Boolean(node&&node.parentNode&&dojo.dom.isNode(node.parentNode));
};
dojo.dom.isTag=function(node){
if(node&&node.tagName){
for(var i=1;i<arguments.length;i++){
if(node.tagName==String(arguments[i])){
return String(arguments[i]);
}
}
}
return "";
};
dojo.dom.setAttributeNS=function(elem,_14a,_14b,_14c){
if(elem==null||((elem==undefined)&&(typeof elem=="undefined"))){
dojo.raise("No element given to dojo.dom.setAttributeNS");
}
if(!((elem.setAttributeNS==undefined)&&(typeof elem.setAttributeNS=="undefined"))){
elem.setAttributeNS(_14a,_14b,_14c);
}else{
var _14d=elem.ownerDocument;
var _14e=_14d.createNode(2,_14b,_14a);
_14e.nodeValue=_14c;
elem.setAttributeNode(_14e);
}
};
dojo.provide("dojo.xml.Parse");
dojo.xml.Parse=function(){
var isIE=((dojo.render.html.capable)&&(dojo.render.html.ie));
function getTagName(node){
try{
return node.tagName.toLowerCase();
}
catch(e){
return "";
}
}
function getDojoTagName(node){
var _152=getTagName(node);
if(!_152){
return "";
}
if((dojo.widget)&&(dojo.widget.tags[_152])){
return _152;
}
var p=_152.indexOf(":");
if(p>=0){
return _152;
}
if(_152.substr(0,5)=="dojo:"){
return _152;
}
if(dojo.render.html.capable&&dojo.render.html.ie&&node.scopeName!="HTML"){
return node.scopeName.toLowerCase()+":"+_152;
}
if(_152.substr(0,4)=="dojo"){
return "dojo:"+_152.substring(4);
}
var djt=node.getAttribute("dojoType")||node.getAttribute("dojotype");
if(djt){
if(djt.indexOf(":")<0){
djt="dojo:"+djt;
}
return djt.toLowerCase();
}
djt=node.getAttributeNS&&node.getAttributeNS(dojo.dom.dojoml,"type");
if(djt){
return "dojo:"+djt.toLowerCase();
}
try{
djt=node.getAttribute("dojo:type");
}
catch(e){
}
if(djt){
return "dojo:"+djt.toLowerCase();
}
if((dj_global["djConfig"])&&(!djConfig["ignoreClassNames"])){
var _155=node.className||node.getAttribute("class");
if((_155)&&(_155.indexOf)&&(_155.indexOf("dojo-")!=-1)){
var _156=_155.split(" ");
for(var x=0,c=_156.length;x<c;x++){
if(_156[x].slice(0,5)=="dojo-"){
return "dojo:"+_156[x].substr(5).toLowerCase();
}
}
}
}
return "";
}
this.parseElement=function(node,_15a,_15b,_15c){
var _15d=getTagName(node);
if(isIE&&_15d.indexOf("/")==0){
return null;
}
try{
var attr=node.getAttribute("parseWidgets");
if(attr&&attr.toLowerCase()=="false"){
return {};
}
}
catch(e){
}
var _15f=true;
if(_15b){
var _160=getDojoTagName(node);
_15d=_160||_15d;
_15f=Boolean(_160);
}
var _161={};
_161[_15d]=[];
var pos=_15d.indexOf(":");
if(pos>0){
var ns=_15d.substring(0,pos);
_161["ns"]=ns;
if((dojo.ns)&&(!dojo.ns.allow(ns))){
_15f=false;
}
}
if(_15f){
var _164=this.parseAttributes(node);
for(var attr in _164){
if((!_161[_15d][attr])||(typeof _161[_15d][attr]!="array")){
_161[_15d][attr]=[];
}
_161[_15d][attr].push(_164[attr]);
}
_161[_15d].nodeRef=node;
_161.tagName=_15d;
_161.index=_15c||0;
}
var _165=0;
for(var i=0;i<node.childNodes.length;i++){
var tcn=node.childNodes.item(i);
switch(tcn.nodeType){
case dojo.dom.ELEMENT_NODE:
var ctn=getDojoTagName(tcn)||getTagName(tcn);
if(!_161[ctn]){
_161[ctn]=[];
}
_161[ctn].push(this.parseElement(tcn,true,_15b,_165));
if((tcn.childNodes.length==1)&&(tcn.childNodes.item(0).nodeType==dojo.dom.TEXT_NODE)){
_161[ctn][_161[ctn].length-1].value=tcn.childNodes.item(0).nodeValue;
}
_165++;
break;
case dojo.dom.TEXT_NODE:
if(node.childNodes.length==1){
_161[_15d].push({value:node.childNodes.item(0).nodeValue});
}
break;
default:
break;
}
}
return _161;
};
this.parseAttributes=function(node){
var _16a={};
var atts=node.attributes;
var _16c,i=0;
while((_16c=atts[i++])){
if(isIE){
if(!_16c){
continue;
}
if((typeof _16c=="object")&&(typeof _16c.nodeValue=="undefined")||(_16c.nodeValue==null)||(_16c.nodeValue=="")){
continue;
}
}
var nn=_16c.nodeName.split(":");
nn=(nn.length==2)?nn[1]:_16c.nodeName;
_16a[nn]={value:_16c.nodeValue};
}
return _16a;
};
};
dojo.provide("dojo.lang.common");
dojo.lang.inherits=function(_16f,_170){
if(!dojo.lang.isFunction(_170)){
dojo.raise("dojo.inherits: superclass argument ["+_170+"] must be a function (subclass: ["+_16f+"']");
}
_16f.prototype=new _170();
_16f.prototype.constructor=_16f;
_16f.superclass=_170.prototype;
_16f["super"]=_170.prototype;
};
dojo.lang._mixin=function(obj,_172){
var tobj={};
for(var x in _172){
if((typeof tobj[x]=="undefined")||(tobj[x]!=_172[x])){
obj[x]=_172[x];
}
}
if(dojo.render.html.ie&&(typeof (_172["toString"])=="function")&&(_172["toString"]!=obj["toString"])&&(_172["toString"]!=tobj["toString"])){
obj.toString=_172.toString;
}
return obj;
};
dojo.lang.mixin=function(obj,_176){
for(var i=1,l=arguments.length;i<l;i++){
dojo.lang._mixin(obj,arguments[i]);
}
return obj;
};
dojo.lang.extend=function(_179,_17a){
for(var i=1,l=arguments.length;i<l;i++){
dojo.lang._mixin(_179.prototype,arguments[i]);
}
return _179;
};
dojo.inherits=dojo.lang.inherits;
dojo.mixin=dojo.lang.mixin;
dojo.extend=dojo.lang.extend;
dojo.lang.find=function(_17d,_17e,_17f,_180){
if(!dojo.lang.isArrayLike(_17d)&&dojo.lang.isArrayLike(_17e)){
dojo.deprecated("dojo.lang.find(value, array)","use dojo.lang.find(array, value) instead","0.5");
var temp=_17d;
_17d=_17e;
_17e=temp;
}
var _182=dojo.lang.isString(_17d);
if(_182){
_17d=_17d.split("");
}
if(_180){
var step=-1;
var i=_17d.length-1;
var end=-1;
}else{
var step=1;
var i=0;
var end=_17d.length;
}
if(_17f){
while(i!=end){
if(_17d[i]===_17e){
return i;
}
i+=step;
}
}else{
while(i!=end){
if(_17d[i]==_17e){
return i;
}
i+=step;
}
}
return -1;
};
dojo.lang.indexOf=dojo.lang.find;
dojo.lang.findLast=function(_186,_187,_188){
return dojo.lang.find(_186,_187,_188,true);
};
dojo.lang.lastIndexOf=dojo.lang.findLast;
dojo.lang.inArray=function(_189,_18a){
return dojo.lang.find(_189,_18a)>-1;
};
dojo.lang.isObject=function(it){
if(typeof it=="undefined"){
return false;
}
return (typeof it=="object"||it===null||dojo.lang.isArray(it)||dojo.lang.isFunction(it));
};
dojo.lang.isArray=function(it){
return (it&&it instanceof Array||typeof it=="array");
};
dojo.lang.isArrayLike=function(it){
if((!it)||(dojo.lang.isUndefined(it))){
return false;
}
if(dojo.lang.isString(it)){
return false;
}
if(dojo.lang.isFunction(it)){
return false;
}
if(dojo.lang.isArray(it)){
return true;
}
if((it.tagName)&&(it.tagName.toLowerCase()=="form")){
return false;
}
if(dojo.lang.isNumber(it.length)&&isFinite(it.length)){
return true;
}
return false;
};
dojo.lang.isFunction=function(it){
return (it instanceof Function||typeof it=="function");
};
(function(){
if((dojo.render.html.capable)&&(dojo.render.html["safari"])){
dojo.lang.isFunction=function(it){
if((typeof (it)=="function")&&(it=="[object NodeList]")){
return false;
}
return (it instanceof Function||typeof it=="function");
};
}
})();
dojo.lang.isString=function(it){
return (typeof it=="string"||it instanceof String);
};
dojo.lang.isAlien=function(it){
if(!it){
return false;
}
return !dojo.lang.isFunction(it)&&/\{\s*\[native code\]\s*\}/.test(String(it));
};
dojo.lang.isBoolean=function(it){
return (it instanceof Boolean||typeof it=="boolean");
};
dojo.lang.isNumber=function(it){
return (it instanceof Number||typeof it=="number");
};
dojo.lang.isUndefined=function(it){
return ((typeof (it)=="undefined")&&(it==undefined));
};
dojo.provide("dojo.lang.func");
dojo.lang.hitch=function(_195,_196){
var fcn=(dojo.lang.isString(_196)?_195[_196]:_196)||function(){
};
return function(){
return fcn.apply(_195,arguments);
};
};
dojo.lang.anonCtr=0;
dojo.lang.anon={};
dojo.lang.nameAnonFunc=function(_198,_199,_19a){
var nso=(_199||dojo.lang.anon);
if((_19a)||((dj_global["djConfig"])&&(djConfig["slowAnonFuncLookups"]==true))){
for(var x in nso){
try{
if(nso[x]===_198){
return x;
}
}
catch(e){
}
}
}
var ret="__"+dojo.lang.anonCtr++;
while(typeof nso[ret]!="undefined"){
ret="__"+dojo.lang.anonCtr++;
}
nso[ret]=_198;
return ret;
};
dojo.lang.forward=function(_19e){
return function(){
return this[_19e].apply(this,arguments);
};
};
dojo.lang.curry=function(_19f,func){
var _1a1=[];
_19f=_19f||dj_global;
if(dojo.lang.isString(func)){
func=_19f[func];
}
for(var x=2;x<arguments.length;x++){
_1a1.push(arguments[x]);
}
var _1a3=(func["__preJoinArity"]||func.length)-_1a1.length;
function gather(_1a4,_1a5,_1a6){
var _1a7=_1a6;
var _1a8=_1a5.slice(0);
for(var x=0;x<_1a4.length;x++){
_1a8.push(_1a4[x]);
}
_1a6=_1a6-_1a4.length;
if(_1a6<=0){
var res=func.apply(_19f,_1a8);
_1a6=_1a7;
return res;
}else{
return function(){
return gather(arguments,_1a8,_1a6);
};
}
}
return gather([],_1a1,_1a3);
};
dojo.lang.curryArguments=function(_1ab,func,args,_1ae){
var _1af=[];
var x=_1ae||0;
for(x=_1ae;x<args.length;x++){
_1af.push(args[x]);
}
return dojo.lang.curry.apply(dojo.lang,[_1ab,func].concat(_1af));
};
dojo.lang.tryThese=function(){
for(var x=0;x<arguments.length;x++){
try{
if(typeof arguments[x]=="function"){
var ret=(arguments[x]());
if(ret){
return ret;
}
}
}
catch(e){
dojo.debug(e);
}
}
};
dojo.lang.delayThese=function(farr,cb,_1b5,_1b6){
if(!farr.length){
if(typeof _1b6=="function"){
_1b6();
}
return;
}
if((typeof _1b5=="undefined")&&(typeof cb=="number")){
_1b5=cb;
cb=function(){
};
}else{
if(!cb){
cb=function(){
};
if(!_1b5){
_1b5=0;
}
}
}
setTimeout(function(){
(farr.shift())();
cb();
dojo.lang.delayThese(farr,cb,_1b5,_1b6);
},_1b5);
};
dojo.provide("dojo.lang.array");
dojo.lang.mixin(dojo.lang,{has:function(obj,name){
try{
return typeof obj[name]!="undefined";
}
catch(e){
return false;
}
},isEmpty:function(obj){
if(dojo.lang.isObject(obj)){
var tmp={};
var _1bb=0;
for(var x in obj){
if(obj[x]&&(!tmp[x])){
_1bb++;
break;
}
}
return _1bb==0;
}else{
if(dojo.lang.isArrayLike(obj)||dojo.lang.isString(obj)){
return obj.length==0;
}
}
},map:function(arr,obj,_1bf){
var _1c0=dojo.lang.isString(arr);
if(_1c0){
arr=arr.split("");
}
if(dojo.lang.isFunction(obj)&&(!_1bf)){
_1bf=obj;
obj=dj_global;
}else{
if(dojo.lang.isFunction(obj)&&_1bf){
var _1c1=obj;
obj=_1bf;
_1bf=_1c1;
}
}
if(Array.map){
var _1c2=Array.map(arr,_1bf,obj);
}else{
var _1c2=[];
for(var i=0;i<arr.length;++i){
_1c2.push(_1bf.call(obj,arr[i]));
}
}
if(_1c0){
return _1c2.join("");
}else{
return _1c2;
}
},reduce:function(arr,_1c5,obj,_1c7){
var _1c8=_1c5;
if(arguments.length==1){
dojo.debug("dojo.lang.reduce called with too few arguments!");
return false;
}else{
if(arguments.length==2){
_1c7=_1c5;
_1c8=arr.shift();
}else{
if(arguments.lenght==3){
if(dojo.lang.isFunction(obj)){
_1c7=obj;
obj=null;
}
}else{
if(dojo.lang.isFunction(obj)){
var tmp=_1c7;
_1c7=obj;
obj=tmp;
}
}
}
}
var ob=obj?obj:dj_global;
dojo.lang.map(arr,function(val){
_1c8=_1c7.call(ob,_1c8,val);
});
return _1c8;
},forEach:function(_1cc,_1cd,_1ce){
if(dojo.lang.isString(_1cc)){
_1cc=_1cc.split("");
}
if(Array.forEach){
Array.forEach(_1cc,_1cd,_1ce);
}else{
if(!_1ce){
_1ce=dj_global;
}
for(var i=0,l=_1cc.length;i<l;i++){
_1cd.call(_1ce,_1cc[i],i,_1cc);
}
}
},_everyOrSome:function(_1d1,arr,_1d3,_1d4){
if(dojo.lang.isString(arr)){
arr=arr.split("");
}
if(Array.every){
return Array[_1d1?"every":"some"](arr,_1d3,_1d4);
}else{
if(!_1d4){
_1d4=dj_global;
}
for(var i=0,l=arr.length;i<l;i++){
var _1d7=_1d3.call(_1d4,arr[i],i,arr);
if(_1d1&&!_1d7){
return false;
}else{
if((!_1d1)&&(_1d7)){
return true;
}
}
}
return Boolean(_1d1);
}
},every:function(arr,_1d9,_1da){
return this._everyOrSome(true,arr,_1d9,_1da);
},some:function(arr,_1dc,_1dd){
return this._everyOrSome(false,arr,_1dc,_1dd);
},filter:function(arr,_1df,_1e0){
var _1e1=dojo.lang.isString(arr);
if(_1e1){
arr=arr.split("");
}
var _1e2;
if(Array.filter){
_1e2=Array.filter(arr,_1df,_1e0);
}else{
if(!_1e0){
if(arguments.length>=3){
dojo.raise("thisObject doesn't exist!");
}
_1e0=dj_global;
}
_1e2=[];
for(var i=0;i<arr.length;i++){
if(_1df.call(_1e0,arr[i],i,arr)){
_1e2.push(arr[i]);
}
}
}
if(_1e1){
return _1e2.join("");
}else{
return _1e2;
}
},unnest:function(){
var out=[];
for(var i=0;i<arguments.length;i++){
if(dojo.lang.isArrayLike(arguments[i])){
var add=dojo.lang.unnest.apply(this,arguments[i]);
out=out.concat(add);
}else{
out.push(arguments[i]);
}
}
return out;
},toArray:function(_1e7,_1e8){
var _1e9=[];
for(var i=_1e8||0;i<_1e7.length;i++){
_1e9.push(_1e7[i]);
}
return _1e9;
}});
dojo.provide("dojo.lang.extras");
dojo.lang.setTimeout=function(func,_1ec){
var _1ed=window,_1ee=2;
if(!dojo.lang.isFunction(func)){
_1ed=func;
func=_1ec;
_1ec=arguments[2];
_1ee++;
}
if(dojo.lang.isString(func)){
func=_1ed[func];
}
var args=[];
for(var i=_1ee;i<arguments.length;i++){
args.push(arguments[i]);
}
return dojo.global().setTimeout(function(){
func.apply(_1ed,args);
},_1ec);
};
dojo.lang.clearTimeout=function(_1f1){
dojo.global().clearTimeout(_1f1);
};
dojo.lang.getNameInObj=function(ns,item){
if(!ns){
ns=dj_global;
}
for(var x in ns){
if(ns[x]===item){
return new String(x);
}
}
return null;
};
dojo.lang.shallowCopy=function(obj,deep){
var i,ret;
if(obj===null){
return null;
}
if(dojo.lang.isObject(obj)){
ret=new obj.constructor();
for(i in obj){
if(dojo.lang.isUndefined(ret[i])){
ret[i]=deep?dojo.lang.shallowCopy(obj[i],deep):obj[i];
}
}
}else{
if(dojo.lang.isArray(obj)){
ret=[];
for(i=0;i<obj.length;i++){
ret[i]=deep?dojo.lang.shallowCopy(obj[i],deep):obj[i];
}
}else{
ret=obj;
}
}
return ret;
};
dojo.lang.firstValued=function(){
for(var i=0;i<arguments.length;i++){
if(typeof arguments[i]!="undefined"){
return arguments[i];
}
}
return undefined;
};
dojo.lang.getObjPathValue=function(_1fa,_1fb,_1fc){
with(dojo.parseObjPath(_1fa,_1fb,_1fc)){
return dojo.evalProp(prop,obj,_1fc);
}
};
dojo.lang.setObjPathValue=function(_1fd,_1fe,_1ff,_200){
dojo.deprecated("dojo.lang.setObjPathValue","use dojo.parseObjPath and the '=' operator","0.6");
if(arguments.length<4){
_200=true;
}
with(dojo.parseObjPath(_1fd,_1ff,_200)){
if(obj&&(_200||(prop in obj))){
obj[prop]=_1fe;
}
}
};
dojo.provide("dojo.lang.declare");
dojo.lang.declare=function(_201,_202,init,_204){
if((dojo.lang.isFunction(_204))||((!_204)&&(!dojo.lang.isFunction(init)))){
var temp=_204;
_204=init;
init=temp;
}
var _206=[];
if(dojo.lang.isArray(_202)){
_206=_202;
_202=_206.shift();
}
if(!init){
init=dojo.evalObjPath(_201,false);
if((init)&&(!dojo.lang.isFunction(init))){
init=null;
}
}
var ctor=dojo.lang.declare._makeConstructor();
var scp=(_202?_202.prototype:null);
if(scp){
scp.prototyping=true;
ctor.prototype=new _202();
scp.prototyping=false;
}
ctor.superclass=scp;
ctor.mixins=_206;
for(var i=0,l=_206.length;i<l;i++){
dojo.lang.extend(ctor,_206[i].prototype);
}
ctor.prototype.initializer=null;
ctor.prototype.declaredClass=_201;
if(dojo.lang.isArray(_204)){
dojo.lang.extend.apply(dojo.lang,[ctor].concat(_204));
}else{
dojo.lang.extend(ctor,(_204)||{});
}
dojo.lang.extend(ctor,dojo.lang.declare._common);
ctor.prototype.constructor=ctor;
ctor.prototype.initializer=(ctor.prototype.initializer)||(init)||(function(){
});
var _20b=dojo.parseObjPath(_201,null,true);
_20b.obj[_20b.prop]=ctor;
return ctor;
};
dojo.lang.declare._makeConstructor=function(){
return function(){
var self=this._getPropContext();
var s=self.constructor.superclass;
if((s)&&(s.constructor)){
if(s.constructor==arguments.callee){
this._inherited("constructor",arguments);
}else{
this._contextMethod(s,"constructor",arguments);
}
}
var ms=(self.constructor.mixins)||([]);
for(var i=0,m;(m=ms[i]);i++){
(((m.prototype)&&(m.prototype.initializer))||(m)).apply(this,arguments);
}
if((!this.prototyping)&&(self.initializer)){
self.initializer.apply(this,arguments);
}
};
};
dojo.lang.declare._common={_getPropContext:function(){
return (this.___proto||this);
},_contextMethod:function(_211,_212,args){
var _214,_215=this.___proto;
this.___proto=_211;
try{
_214=_211[_212].apply(this,(args||[]));
}
catch(e){
throw e;
}
finally{
this.___proto=_215;
}
return _214;
},_inherited:function(prop,args){
var p=this._getPropContext();
do{
if((!p.constructor)||(!p.constructor.superclass)){
return;
}
p=p.constructor.superclass;
}while(!(prop in p));
return (dojo.lang.isFunction(p[prop])?this._contextMethod(p,prop,args):p[prop]);
},inherited:function(prop,args){
dojo.deprecated("'inherited' method is dangerous, do not up-call! 'inherited' is slated for removal in 0.5; name your super class (or use superclass property) instead.","0.5");
this._inherited(prop,args);
}};
dojo.declare=dojo.lang.declare;
dojo.provide("dojo.ns");
dojo.ns={namespaces:{},failed:{},loading:{},loaded:{},register:function(name,_21c,_21d,_21e){
if(!_21e||!this.namespaces[name]){
this.namespaces[name]=new dojo.ns.Ns(name,_21c,_21d);
}
},allow:function(name){
if(this.failed[name]){
return false;
}
if((djConfig.excludeNamespace)&&(dojo.lang.inArray(djConfig.excludeNamespace,name))){
return false;
}
return ((name==this.dojo)||(!djConfig.includeNamespace)||(dojo.lang.inArray(djConfig.includeNamespace,name)));
},get:function(name){
return this.namespaces[name];
},require:function(name){
var ns=this.namespaces[name];
if((ns)&&(this.loaded[name])){
return ns;
}
if(!this.allow(name)){
return false;
}
if(this.loading[name]){
dojo.debug("dojo.namespace.require: re-entrant request to load namespace \""+name+"\" must fail.");
return false;
}
var req=dojo.require;
this.loading[name]=true;
try{
if(name=="dojo"){
req("dojo.namespaces.dojo");
}else{
if(!dojo.hostenv.moduleHasPrefix(name)){
dojo.registerModulePath(name,"../"+name);
}
req([name,"manifest"].join("."),false,true);
}
if(!this.namespaces[name]){
this.failed[name]=true;
}
}
finally{
this.loading[name]=false;
}
return this.namespaces[name];
}};
dojo.ns.Ns=function(name,_225,_226){
this.name=name;
this.module=_225;
this.resolver=_226;
this._loaded=[];
this._failed=[];
};
dojo.ns.Ns.prototype.resolve=function(name,_228,_229){
if(!this.resolver||djConfig["skipAutoRequire"]){
return false;
}
var _22a=this.resolver(name,_228);
if((_22a)&&(!this._loaded[_22a])&&(!this._failed[_22a])){
var req=dojo.require;
req(_22a,false,true);
if(dojo.hostenv.findModule(_22a,false)){
this._loaded[_22a]=true;
}else{
if(!_229){
dojo.raise("dojo.ns.Ns.resolve: module '"+_22a+"' not found after loading via namespace '"+this.name+"'");
}
this._failed[_22a]=true;
}
}
return Boolean(this._loaded[_22a]);
};
dojo.registerNamespace=function(name,_22d,_22e){
dojo.ns.register.apply(dojo.ns,arguments);
};
dojo.registerNamespaceResolver=function(name,_230){
var n=dojo.ns.namespaces[name];
if(n){
n.resolver=_230;
}
};
dojo.registerNamespaceManifest=function(_232,path,name,_235,_236){
dojo.registerModulePath(name,path);
dojo.registerNamespace(name,_235,_236);
};
dojo.registerNamespace("dojo","dojo.widget");
dojo.provide("dojo.event.common");
dojo.event=new function(){
this._canTimeout=dojo.lang.isFunction(dj_global["setTimeout"])||dojo.lang.isAlien(dj_global["setTimeout"]);
function interpolateArgs(args,_238){
var dl=dojo.lang;
var ao={srcObj:dj_global,srcFunc:null,adviceObj:dj_global,adviceFunc:null,aroundObj:null,aroundFunc:null,adviceType:(args.length>2)?args[0]:"after",precedence:"last",once:false,delay:null,rate:0,adviceMsg:false};
switch(args.length){
case 0:
return;
case 1:
return;
case 2:
ao.srcFunc=args[0];
ao.adviceFunc=args[1];
break;
case 3:
if((dl.isObject(args[0]))&&(dl.isString(args[1]))&&(dl.isString(args[2]))){
ao.adviceType="after";
ao.srcObj=args[0];
ao.srcFunc=args[1];
ao.adviceFunc=args[2];
}else{
if((dl.isString(args[1]))&&(dl.isString(args[2]))){
ao.srcFunc=args[1];
ao.adviceFunc=args[2];
}else{
if((dl.isObject(args[0]))&&(dl.isString(args[1]))&&(dl.isFunction(args[2]))){
ao.adviceType="after";
ao.srcObj=args[0];
ao.srcFunc=args[1];
var _23b=dl.nameAnonFunc(args[2],ao.adviceObj,_238);
ao.adviceFunc=_23b;
}else{
if((dl.isFunction(args[0]))&&(dl.isObject(args[1]))&&(dl.isString(args[2]))){
ao.adviceType="after";
ao.srcObj=dj_global;
var _23b=dl.nameAnonFunc(args[0],ao.srcObj,_238);
ao.srcFunc=_23b;
ao.adviceObj=args[1];
ao.adviceFunc=args[2];
}
}
}
}
break;
case 4:
if((dl.isObject(args[0]))&&(dl.isObject(args[2]))){
ao.adviceType="after";
ao.srcObj=args[0];
ao.srcFunc=args[1];
ao.adviceObj=args[2];
ao.adviceFunc=args[3];
}else{
if((dl.isString(args[0]))&&(dl.isString(args[1]))&&(dl.isObject(args[2]))){
ao.adviceType=args[0];
ao.srcObj=dj_global;
ao.srcFunc=args[1];
ao.adviceObj=args[2];
ao.adviceFunc=args[3];
}else{
if((dl.isString(args[0]))&&(dl.isFunction(args[1]))&&(dl.isObject(args[2]))){
ao.adviceType=args[0];
ao.srcObj=dj_global;
var _23b=dl.nameAnonFunc(args[1],dj_global,_238);
ao.srcFunc=_23b;
ao.adviceObj=args[2];
ao.adviceFunc=args[3];
}else{
if((dl.isString(args[0]))&&(dl.isObject(args[1]))&&(dl.isString(args[2]))&&(dl.isFunction(args[3]))){
ao.srcObj=args[1];
ao.srcFunc=args[2];
var _23b=dl.nameAnonFunc(args[3],dj_global,_238);
ao.adviceObj=dj_global;
ao.adviceFunc=_23b;
}else{
if(dl.isObject(args[1])){
ao.srcObj=args[1];
ao.srcFunc=args[2];
ao.adviceObj=dj_global;
ao.adviceFunc=args[3];
}else{
if(dl.isObject(args[2])){
ao.srcObj=dj_global;
ao.srcFunc=args[1];
ao.adviceObj=args[2];
ao.adviceFunc=args[3];
}else{
ao.srcObj=ao.adviceObj=ao.aroundObj=dj_global;
ao.srcFunc=args[1];
ao.adviceFunc=args[2];
ao.aroundFunc=args[3];
}
}
}
}
}
}
break;
case 6:
ao.srcObj=args[1];
ao.srcFunc=args[2];
ao.adviceObj=args[3];
ao.adviceFunc=args[4];
ao.aroundFunc=args[5];
ao.aroundObj=dj_global;
break;
default:
ao.srcObj=args[1];
ao.srcFunc=args[2];
ao.adviceObj=args[3];
ao.adviceFunc=args[4];
ao.aroundObj=args[5];
ao.aroundFunc=args[6];
ao.once=args[7];
ao.delay=args[8];
ao.rate=args[9];
ao.adviceMsg=args[10];
break;
}
if(dl.isFunction(ao.aroundFunc)){
var _23b=dl.nameAnonFunc(ao.aroundFunc,ao.aroundObj,_238);
ao.aroundFunc=_23b;
}
if(dl.isFunction(ao.srcFunc)){
ao.srcFunc=dl.getNameInObj(ao.srcObj,ao.srcFunc);
}
if(dl.isFunction(ao.adviceFunc)){
ao.adviceFunc=dl.getNameInObj(ao.adviceObj,ao.adviceFunc);
}
if((ao.aroundObj)&&(dl.isFunction(ao.aroundFunc))){
ao.aroundFunc=dl.getNameInObj(ao.aroundObj,ao.aroundFunc);
}
if(!ao.srcObj){
dojo.raise("bad srcObj for srcFunc: "+ao.srcFunc);
}
if(!ao.adviceObj){
dojo.raise("bad adviceObj for adviceFunc: "+ao.adviceFunc);
}
if(!ao.adviceFunc){
dojo.debug("bad adviceFunc for srcFunc: "+ao.srcFunc);
dojo.debugShallow(ao);
}
return ao;
}
this.connect=function(){
if(arguments.length==1){
var ao=arguments[0];
}else{
var ao=interpolateArgs(arguments,true);
}
if(dojo.lang.isString(ao.srcFunc)&&(ao.srcFunc.toLowerCase()=="onkey")){
if(dojo.render.html.ie){
ao.srcFunc="onkeydown";
this.connect(ao);
}
ao.srcFunc="onkeypress";
}
if(dojo.lang.isArray(ao.srcObj)&&ao.srcObj!=""){
var _23d={};
for(var x in ao){
_23d[x]=ao[x];
}
var mjps=[];
dojo.lang.forEach(ao.srcObj,function(src){
if((dojo.render.html.capable)&&(dojo.lang.isString(src))){
src=dojo.byId(src);
}
_23d.srcObj=src;
mjps.push(dojo.event.connect.call(dojo.event,_23d));
});
return mjps;
}
var mjp=dojo.event.MethodJoinPoint.getForMethod(ao.srcObj,ao.srcFunc);
if(ao.adviceFunc){
var mjp2=dojo.event.MethodJoinPoint.getForMethod(ao.adviceObj,ao.adviceFunc);
}
mjp.kwAddAdvice(ao);
return mjp;
};
this.log=function(a1,a2){
var _245;
if((arguments.length==1)&&(typeof a1=="object")){
_245=a1;
}else{
_245={srcObj:a1,srcFunc:a2};
}
_245.adviceFunc=function(){
var _246=[];
for(var x=0;x<arguments.length;x++){
_246.push(arguments[x]);
}
dojo.debug("("+_245.srcObj+")."+_245.srcFunc,":",_246.join(", "));
};
this.kwConnect(_245);
};
this.connectBefore=function(){
var args=["before"];
for(var i=0;i<arguments.length;i++){
args.push(arguments[i]);
}
return this.connect.apply(this,args);
};
this.connectAround=function(){
var args=["around"];
for(var i=0;i<arguments.length;i++){
args.push(arguments[i]);
}
return this.connect.apply(this,args);
};
this.connectOnce=function(){
var ao=interpolateArgs(arguments,true);
ao.once=true;
return this.connect(ao);
};
this._kwConnectImpl=function(_24d,_24e){
var fn=(_24e)?"disconnect":"connect";
if(typeof _24d["srcFunc"]=="function"){
_24d.srcObj=_24d["srcObj"]||dj_global;
var _250=dojo.lang.nameAnonFunc(_24d.srcFunc,_24d.srcObj,true);
_24d.srcFunc=_250;
}
if(typeof _24d["adviceFunc"]=="function"){
_24d.adviceObj=_24d["adviceObj"]||dj_global;
var _250=dojo.lang.nameAnonFunc(_24d.adviceFunc,_24d.adviceObj,true);
_24d.adviceFunc=_250;
}
_24d.srcObj=_24d["srcObj"]||dj_global;
_24d.adviceObj=_24d["adviceObj"]||_24d["targetObj"]||dj_global;
_24d.adviceFunc=_24d["adviceFunc"]||_24d["targetFunc"];
return dojo.event[fn](_24d);
};
this.kwConnect=function(_251){
return this._kwConnectImpl(_251,false);
};
this.disconnect=function(){
if(arguments.length==1){
var ao=arguments[0];
}else{
var ao=interpolateArgs(arguments,true);
}
if(!ao.adviceFunc){
return;
}
if(dojo.lang.isString(ao.srcFunc)&&(ao.srcFunc.toLowerCase()=="onkey")){
if(dojo.render.html.ie){
ao.srcFunc="onkeydown";
this.disconnect(ao);
}
ao.srcFunc="onkeypress";
}
if(!ao.srcObj[ao.srcFunc]){
return null;
}
var mjp=dojo.event.MethodJoinPoint.getForMethod(ao.srcObj,ao.srcFunc,true);
mjp.removeAdvice(ao.adviceObj,ao.adviceFunc,ao.adviceType,ao.once);
return mjp;
};
this.kwDisconnect=function(_254){
return this._kwConnectImpl(_254,true);
};
};
dojo.event.MethodInvocation=function(_255,obj,args){
this.jp_=_255;
this.object=obj;
this.args=[];
for(var x=0;x<args.length;x++){
this.args[x]=args[x];
}
this.around_index=-1;
};
dojo.event.MethodInvocation.prototype.proceed=function(){
this.around_index++;
if(this.around_index>=this.jp_.around.length){
return this.jp_.object[this.jp_.methodname].apply(this.jp_.object,this.args);
}else{
var ti=this.jp_.around[this.around_index];
var mobj=ti[0]||dj_global;
var meth=ti[1];
return mobj[meth].call(mobj,this);
}
};
dojo.event.MethodJoinPoint=function(obj,_25d){
this.object=obj||dj_global;
this.methodname=_25d;
this.methodfunc=this.object[_25d];
this.squelch=false;
};
dojo.event.MethodJoinPoint.getForMethod=function(obj,_25f){
if(!obj){
obj=dj_global;
}
if(!obj[_25f]){
obj[_25f]=function(){
};
if(!obj[_25f]){
dojo.raise("Cannot set do-nothing method on that object "+_25f);
}
}else{
if((!dojo.lang.isFunction(obj[_25f]))&&(!dojo.lang.isAlien(obj[_25f]))){
return null;
}
}
var _260=_25f+"$joinpoint";
var _261=_25f+"$joinpoint$method";
var _262=obj[_260];
if(!_262){
var _263=false;
if(dojo.event["browser"]){
if((obj["attachEvent"])||(obj["nodeType"])||(obj["addEventListener"])){
_263=true;
dojo.event.browser.addClobberNodeAttrs(obj,[_260,_261,_25f]);
}
}
var _264=obj[_25f].length;
obj[_261]=obj[_25f];
_262=obj[_260]=new dojo.event.MethodJoinPoint(obj,_261);
obj[_25f]=function(){
var args=[];
if((_263)&&(!arguments.length)){
var evt=null;
try{
if(obj.ownerDocument){
evt=obj.ownerDocument.parentWindow.event;
}else{
if(obj.documentElement){
evt=obj.documentElement.ownerDocument.parentWindow.event;
}else{
if(obj.event){
evt=obj.event;
}else{
evt=window.event;
}
}
}
}
catch(e){
evt=window.event;
}
if(evt){
args.push(dojo.event.browser.fixEvent(evt,this));
}
}else{
for(var x=0;x<arguments.length;x++){
if((x==0)&&(_263)&&(dojo.event.browser.isEvent(arguments[x]))){
args.push(dojo.event.browser.fixEvent(arguments[x],this));
}else{
args.push(arguments[x]);
}
}
}
return _262.run.apply(_262,args);
};
obj[_25f].__preJoinArity=_264;
}
return _262;
};
dojo.lang.extend(dojo.event.MethodJoinPoint,{unintercept:function(){
this.object[this.methodname]=this.methodfunc;
this.before=[];
this.after=[];
this.around=[];
},disconnect:dojo.lang.forward("unintercept"),run:function(){
var obj=this.object||dj_global;
var args=arguments;
var _26a=[];
for(var x=0;x<args.length;x++){
_26a[x]=args[x];
}
var _26c=function(marr){
if(!marr){
dojo.debug("Null argument to unrollAdvice()");
return;
}
var _26e=marr[0]||dj_global;
var _26f=marr[1];
if(!_26e[_26f]){
dojo.raise("function \""+_26f+"\" does not exist on \""+_26e+"\"");
}
var _270=marr[2]||dj_global;
var _271=marr[3];
var msg=marr[6];
var _273;
var to={args:[],jp_:this,object:obj,proceed:function(){
return _26e[_26f].apply(_26e,to.args);
}};
to.args=_26a;
var _275=parseInt(marr[4]);
var _276=((!isNaN(_275))&&(marr[4]!==null)&&(typeof marr[4]!="undefined"));
if(marr[5]){
var rate=parseInt(marr[5]);
var cur=new Date();
var _279=false;
if((marr["last"])&&((cur-marr.last)<=rate)){
if(dojo.event._canTimeout){
if(marr["delayTimer"]){
clearTimeout(marr.delayTimer);
}
var tod=parseInt(rate*2);
var mcpy=dojo.lang.shallowCopy(marr);
marr.delayTimer=setTimeout(function(){
mcpy[5]=0;
_26c(mcpy);
},tod);
}
return;
}else{
marr.last=cur;
}
}
if(_271){
_270[_271].call(_270,to);
}else{
if((_276)&&((dojo.render.html)||(dojo.render.svg))){
dj_global["setTimeout"](function(){
if(msg){
_26e[_26f].call(_26e,to);
}else{
_26e[_26f].apply(_26e,args);
}
},_275);
}else{
if(msg){
_26e[_26f].call(_26e,to);
}else{
_26e[_26f].apply(_26e,args);
}
}
}
};
var _27c=function(){
if(this.squelch){
try{
return _26c.apply(this,arguments);
}
catch(e){
dojo.debug(e);
}
}else{
return _26c.apply(this,arguments);
}
};
if((this["before"])&&(this.before.length>0)){
dojo.lang.forEach(this.before.concat(new Array()),_27c);
}
var _27d;
try{
if((this["around"])&&(this.around.length>0)){
var mi=new dojo.event.MethodInvocation(this,obj,args);
_27d=mi.proceed();
}else{
if(this.methodfunc){
_27d=this.object[this.methodname].apply(this.object,args);
}
}
}
catch(e){
if(!this.squelch){
dojo.debug(e,"when calling",this.methodname,"on",this.object,"with arguments",args);
dojo.raise(e);
}
}
if((this["after"])&&(this.after.length>0)){
dojo.lang.forEach(this.after.concat(new Array()),_27c);
}
return (this.methodfunc)?_27d:null;
},getArr:function(kind){
var type="after";
if((typeof kind=="string")&&(kind.indexOf("before")!=-1)){
type="before";
}else{
if(kind=="around"){
type="around";
}
}
if(!this[type]){
this[type]=[];
}
return this[type];
},kwAddAdvice:function(args){
this.addAdvice(args["adviceObj"],args["adviceFunc"],args["aroundObj"],args["aroundFunc"],args["adviceType"],args["precedence"],args["once"],args["delay"],args["rate"],args["adviceMsg"]);
},addAdvice:function(_282,_283,_284,_285,_286,_287,once,_289,rate,_28b){
var arr=this.getArr(_286);
if(!arr){
dojo.raise("bad this: "+this);
}
var ao=[_282,_283,_284,_285,_289,rate,_28b];
if(once){
if(this.hasAdvice(_282,_283,_286,arr)>=0){
return;
}
}
if(_287=="first"){
arr.unshift(ao);
}else{
arr.push(ao);
}
},hasAdvice:function(_28e,_28f,_290,arr){
if(!arr){
arr=this.getArr(_290);
}
var ind=-1;
for(var x=0;x<arr.length;x++){
var aao=(typeof _28f=="object")?(new String(_28f)).toString():_28f;
var a1o=(typeof arr[x][1]=="object")?(new String(arr[x][1])).toString():arr[x][1];
if((arr[x][0]==_28e)&&(a1o==aao)){
ind=x;
}
}
return ind;
},removeAdvice:function(_296,_297,_298,once){
var arr=this.getArr(_298);
var ind=this.hasAdvice(_296,_297,_298,arr);
if(ind==-1){
return false;
}
while(ind!=-1){
arr.splice(ind,1);
if(once){
break;
}
ind=this.hasAdvice(_296,_297,_298,arr);
}
return true;
}});
dojo.provide("dojo.event.topic");
dojo.event.topic=new function(){
this.topics={};
this.getTopic=function(_29c){
if(!this.topics[_29c]){
this.topics[_29c]=new this.TopicImpl(_29c);
}
return this.topics[_29c];
};
this.registerPublisher=function(_29d,obj,_29f){
var _29d=this.getTopic(_29d);
_29d.registerPublisher(obj,_29f);
};
this.subscribe=function(_2a0,obj,_2a2){
var _2a0=this.getTopic(_2a0);
_2a0.subscribe(obj,_2a2);
};
this.unsubscribe=function(_2a3,obj,_2a5){
var _2a3=this.getTopic(_2a3);
_2a3.unsubscribe(obj,_2a5);
};
this.destroy=function(_2a6){
this.getTopic(_2a6).destroy();
delete this.topics[_2a6];
};
this.publishApply=function(_2a7,args){
var _2a7=this.getTopic(_2a7);
_2a7.sendMessage.apply(_2a7,args);
};
this.publish=function(_2a9,_2aa){
var _2a9=this.getTopic(_2a9);
var args=[];
for(var x=1;x<arguments.length;x++){
args.push(arguments[x]);
}
_2a9.sendMessage.apply(_2a9,args);
};
};
dojo.event.topic.TopicImpl=function(_2ad){
this.topicName=_2ad;
this.subscribe=function(_2ae,_2af){
var tf=_2af||_2ae;
var to=(!_2af)?dj_global:_2ae;
return dojo.event.kwConnect({srcObj:this,srcFunc:"sendMessage",adviceObj:to,adviceFunc:tf});
};
this.unsubscribe=function(_2b2,_2b3){
var tf=(!_2b3)?_2b2:_2b3;
var to=(!_2b3)?null:_2b2;
return dojo.event.kwDisconnect({srcObj:this,srcFunc:"sendMessage",adviceObj:to,adviceFunc:tf});
};
this._getJoinPoint=function(){
return dojo.event.MethodJoinPoint.getForMethod(this,"sendMessage");
};
this.setSquelch=function(_2b6){
this._getJoinPoint().squelch=_2b6;
};
this.destroy=function(){
this._getJoinPoint().disconnect();
};
this.registerPublisher=function(_2b7,_2b8){
dojo.event.connect(_2b7,_2b8,this,"sendMessage");
};
this.sendMessage=function(_2b9){
};
};
dojo.provide("dojo.event.browser");
dojo._ie_clobber=new function(){
this.clobberNodes=[];
function nukeProp(node,prop){
try{
node[prop]=null;
}
catch(e){
}
try{
delete node[prop];
}
catch(e){
}
try{
node.removeAttribute(prop);
}
catch(e){
}
}
this.clobber=function(_2bc){
var na;
var tna;
if(_2bc){
tna=_2bc.all||_2bc.getElementsByTagName("*");
na=[_2bc];
for(var x=0;x<tna.length;x++){
if(tna[x]["__doClobber__"]){
na.push(tna[x]);
}
}
}else{
try{
window.onload=null;
}
catch(e){
}
na=(this.clobberNodes.length)?this.clobberNodes:document.all;
}
tna=null;
var _2c0={};
for(var i=na.length-1;i>=0;i=i-1){
var el=na[i];
try{
if(el&&el["__clobberAttrs__"]){
for(var j=0;j<el.__clobberAttrs__.length;j++){
nukeProp(el,el.__clobberAttrs__[j]);
}
nukeProp(el,"__clobberAttrs__");
nukeProp(el,"__doClobber__");
}
}
catch(e){
}
}
na=null;
};
};
if(dojo.render.html.ie){
dojo.addOnUnload(function(){
dojo._ie_clobber.clobber();
try{
if((dojo["widget"])&&(dojo.widget["manager"])){
dojo.widget.manager.destroyAll();
}
}
catch(e){
}
if(dojo.widget){
for(var name in dojo.widget._templateCache){
if(dojo.widget._templateCache[name].node){
dojo.dom.destroyNode(dojo.widget._templateCache[name].node);
dojo.widget._templateCache[name].node=null;
delete dojo.widget._templateCache[name].node;
}
}
}
try{
window.onload=null;
}
catch(e){
}
try{
window.onunload=null;
}
catch(e){
}
dojo._ie_clobber.clobberNodes=[];
});
}
dojo.event.browser=new function(){
var _2c5=0;
this.normalizedEventName=function(_2c6){
switch(_2c6){
case "CheckboxStateChange":
case "DOMAttrModified":
case "DOMMenuItemActive":
case "DOMMenuItemInactive":
case "DOMMouseScroll":
case "DOMNodeInserted":
case "DOMNodeRemoved":
case "RadioStateChange":
return _2c6;
break;
default:
return _2c6.toLowerCase();
break;
}
};
this.clean=function(node){
if(dojo.render.html.ie){
dojo._ie_clobber.clobber(node);
}
};
this.addClobberNode=function(node){
if(!dojo.render.html.ie){
return;
}
if(!node["__doClobber__"]){
node.__doClobber__=true;
dojo._ie_clobber.clobberNodes.push(node);
node.__clobberAttrs__=[];
}
};
this.addClobberNodeAttrs=function(node,_2ca){
if(!dojo.render.html.ie){
return;
}
this.addClobberNode(node);
for(var x=0;x<_2ca.length;x++){
node.__clobberAttrs__.push(_2ca[x]);
}
};
this.removeListener=function(node,_2cd,fp,_2cf){
if(!_2cf){
var _2cf=false;
}
_2cd=dojo.event.browser.normalizedEventName(_2cd);
if((_2cd=="onkey")||(_2cd=="key")){
if(dojo.render.html.ie){
this.removeListener(node,"onkeydown",fp,_2cf);
}
_2cd="onkeypress";
}
if(_2cd.substr(0,2)=="on"){
_2cd=_2cd.substr(2);
}
if(node.removeEventListener){
node.removeEventListener(_2cd,fp,_2cf);
}
};
this.addListener=function(node,_2d1,fp,_2d3,_2d4){
if(!node){
return;
}
if(!_2d3){
var _2d3=false;
}
_2d1=dojo.event.browser.normalizedEventName(_2d1);
if((_2d1=="onkey")||(_2d1=="key")){
if(dojo.render.html.ie){
this.addListener(node,"onkeydown",fp,_2d3,_2d4);
}
_2d1="onkeypress";
}
if(_2d1.substr(0,2)!="on"){
_2d1="on"+_2d1;
}
if(!_2d4){
var _2d5=function(evt){
if(!evt){
evt=window.event;
}
var ret=fp(dojo.event.browser.fixEvent(evt,this));
if(_2d3){
dojo.event.browser.stopEvent(evt);
}
return ret;
};
}else{
_2d5=fp;
}
if(node.addEventListener){
node.addEventListener(_2d1.substr(2),_2d5,_2d3);
return _2d5;
}else{
if(typeof node[_2d1]=="function"){
var _2d8=node[_2d1];
node[_2d1]=function(e){
_2d8(e);
return _2d5(e);
};
}else{
node[_2d1]=_2d5;
}
if(dojo.render.html.ie){
this.addClobberNodeAttrs(node,[_2d1]);
}
return _2d5;
}
};
this.isEvent=function(obj){
return (typeof obj!="undefined")&&(obj)&&(typeof Event!="undefined")&&(obj.eventPhase);
};
this.currentEvent=null;
this.callListener=function(_2db,_2dc){
if(typeof _2db!="function"){
dojo.raise("listener not a function: "+_2db);
}
dojo.event.browser.currentEvent.currentTarget=_2dc;
return _2db.call(_2dc,dojo.event.browser.currentEvent);
};
this._stopPropagation=function(){
dojo.event.browser.currentEvent.cancelBubble=true;
};
this._preventDefault=function(){
dojo.event.browser.currentEvent.returnValue=false;
};
this.keys={KEY_BACKSPACE:8,KEY_TAB:9,KEY_CLEAR:12,KEY_ENTER:13,KEY_SHIFT:16,KEY_CTRL:17,KEY_ALT:18,KEY_PAUSE:19,KEY_CAPS_LOCK:20,KEY_ESCAPE:27,KEY_SPACE:32,KEY_PAGE_UP:33,KEY_PAGE_DOWN:34,KEY_END:35,KEY_HOME:36,KEY_LEFT_ARROW:37,KEY_UP_ARROW:38,KEY_RIGHT_ARROW:39,KEY_DOWN_ARROW:40,KEY_INSERT:45,KEY_DELETE:46,KEY_HELP:47,KEY_LEFT_WINDOW:91,KEY_RIGHT_WINDOW:92,KEY_SELECT:93,KEY_NUMPAD_0:96,KEY_NUMPAD_1:97,KEY_NUMPAD_2:98,KEY_NUMPAD_3:99,KEY_NUMPAD_4:100,KEY_NUMPAD_5:101,KEY_NUMPAD_6:102,KEY_NUMPAD_7:103,KEY_NUMPAD_8:104,KEY_NUMPAD_9:105,KEY_NUMPAD_MULTIPLY:106,KEY_NUMPAD_PLUS:107,KEY_NUMPAD_ENTER:108,KEY_NUMPAD_MINUS:109,KEY_NUMPAD_PERIOD:110,KEY_NUMPAD_DIVIDE:111,KEY_F1:112,KEY_F2:113,KEY_F3:114,KEY_F4:115,KEY_F5:116,KEY_F6:117,KEY_F7:118,KEY_F8:119,KEY_F9:120,KEY_F10:121,KEY_F11:122,KEY_F12:123,KEY_F13:124,KEY_F14:125,KEY_F15:126,KEY_NUM_LOCK:144,KEY_SCROLL_LOCK:145};
this.revKeys=[];
for(var key in this.keys){
this.revKeys[this.keys[key]]=key;
}
this.fixEvent=function(evt,_2df){
if(!evt){
if(window["event"]){
evt=window.event;
}
}
if((evt["type"])&&(evt["type"].indexOf("key")==0)){
evt.keys=this.revKeys;
for(var key in this.keys){
evt[key]=this.keys[key];
}
if(evt["type"]=="keydown"&&dojo.render.html.ie){
switch(evt.keyCode){
case evt.KEY_SHIFT:
case evt.KEY_CTRL:
case evt.KEY_ALT:
case evt.KEY_CAPS_LOCK:
case evt.KEY_LEFT_WINDOW:
case evt.KEY_RIGHT_WINDOW:
case evt.KEY_SELECT:
case evt.KEY_NUM_LOCK:
case evt.KEY_SCROLL_LOCK:
case evt.KEY_NUMPAD_0:
case evt.KEY_NUMPAD_1:
case evt.KEY_NUMPAD_2:
case evt.KEY_NUMPAD_3:
case evt.KEY_NUMPAD_4:
case evt.KEY_NUMPAD_5:
case evt.KEY_NUMPAD_6:
case evt.KEY_NUMPAD_7:
case evt.KEY_NUMPAD_8:
case evt.KEY_NUMPAD_9:
case evt.KEY_NUMPAD_PERIOD:
break;
case evt.KEY_NUMPAD_MULTIPLY:
case evt.KEY_NUMPAD_PLUS:
case evt.KEY_NUMPAD_ENTER:
case evt.KEY_NUMPAD_MINUS:
case evt.KEY_NUMPAD_DIVIDE:
break;
case evt.KEY_PAUSE:
case evt.KEY_TAB:
case evt.KEY_BACKSPACE:
case evt.KEY_ENTER:
case evt.KEY_ESCAPE:
case evt.KEY_PAGE_UP:
case evt.KEY_PAGE_DOWN:
case evt.KEY_END:
case evt.KEY_HOME:
case evt.KEY_LEFT_ARROW:
case evt.KEY_UP_ARROW:
case evt.KEY_RIGHT_ARROW:
case evt.KEY_DOWN_ARROW:
case evt.KEY_INSERT:
case evt.KEY_DELETE:
case evt.KEY_F1:
case evt.KEY_F2:
case evt.KEY_F3:
case evt.KEY_F4:
case evt.KEY_F5:
case evt.KEY_F6:
case evt.KEY_F7:
case evt.KEY_F8:
case evt.KEY_F9:
case evt.KEY_F10:
case evt.KEY_F11:
case evt.KEY_F12:
case evt.KEY_F12:
case evt.KEY_F13:
case evt.KEY_F14:
case evt.KEY_F15:
case evt.KEY_CLEAR:
case evt.KEY_HELP:
evt.key=evt.keyCode;
break;
default:
if(evt.ctrlKey||evt.altKey){
var _2e1=evt.keyCode;
if(_2e1>=65&&_2e1<=90&&evt.shiftKey==false){
_2e1+=32;
}
if(_2e1>=1&&_2e1<=26&&evt.ctrlKey){
_2e1+=96;
}
evt.key=String.fromCharCode(_2e1);
}
}
}else{
if(evt["type"]=="keypress"){
if(dojo.render.html.opera){
if(evt.which==0){
evt.key=evt.keyCode;
}else{
if(evt.which>0){
switch(evt.which){
case evt.KEY_SHIFT:
case evt.KEY_CTRL:
case evt.KEY_ALT:
case evt.KEY_CAPS_LOCK:
case evt.KEY_NUM_LOCK:
case evt.KEY_SCROLL_LOCK:
break;
case evt.KEY_PAUSE:
case evt.KEY_TAB:
case evt.KEY_BACKSPACE:
case evt.KEY_ENTER:
case evt.KEY_ESCAPE:
evt.key=evt.which;
break;
default:
var _2e1=evt.which;
if((evt.ctrlKey||evt.altKey||evt.metaKey)&&(evt.which>=65&&evt.which<=90&&evt.shiftKey==false)){
_2e1+=32;
}
evt.key=String.fromCharCode(_2e1);
}
}
}
}else{
if(dojo.render.html.ie){
if(!evt.ctrlKey&&!evt.altKey&&evt.keyCode>=evt.KEY_SPACE){
evt.key=String.fromCharCode(evt.keyCode);
}
}else{
if(dojo.render.html.safari){
switch(evt.keyCode){
case 25:
evt.key=evt.KEY_TAB;
evt.shift=true;
break;
case 63232:
evt.key=evt.KEY_UP_ARROW;
break;
case 63233:
evt.key=evt.KEY_DOWN_ARROW;
break;
case 63234:
evt.key=evt.KEY_LEFT_ARROW;
break;
case 63235:
evt.key=evt.KEY_RIGHT_ARROW;
break;
case 63236:
evt.key=evt.KEY_F1;
break;
case 63237:
evt.key=evt.KEY_F2;
break;
case 63238:
evt.key=evt.KEY_F3;
break;
case 63239:
evt.key=evt.KEY_F4;
break;
case 63240:
evt.key=evt.KEY_F5;
break;
case 63241:
evt.key=evt.KEY_F6;
break;
case 63242:
evt.key=evt.KEY_F7;
break;
case 63243:
evt.key=evt.KEY_F8;
break;
case 63244:
evt.key=evt.KEY_F9;
break;
case 63245:
evt.key=evt.KEY_F10;
break;
case 63246:
evt.key=evt.KEY_F11;
break;
case 63247:
evt.key=evt.KEY_F12;
break;
case 63250:
evt.key=evt.KEY_PAUSE;
break;
case 63272:
evt.key=evt.KEY_DELETE;
break;
case 63273:
evt.key=evt.KEY_HOME;
break;
case 63275:
evt.key=evt.KEY_END;
break;
case 63276:
evt.key=evt.KEY_PAGE_UP;
break;
case 63277:
evt.key=evt.KEY_PAGE_DOWN;
break;
case 63302:
evt.key=evt.KEY_INSERT;
break;
case 63248:
case 63249:
case 63289:
break;
default:
evt.key=evt.charCode>=evt.KEY_SPACE?String.fromCharCode(evt.charCode):evt.keyCode;
}
}else{
evt.key=evt.charCode>0?String.fromCharCode(evt.charCode):evt.keyCode;
}
}
}
}
}
}
if(dojo.render.html.ie){
if(!evt.target){
evt.target=evt.srcElement;
}
if(!evt.currentTarget){
evt.currentTarget=(_2df?_2df:evt.srcElement);
}
if(!evt.layerX){
evt.layerX=evt.offsetX;
}
if(!evt.layerY){
evt.layerY=evt.offsetY;
}
var doc=(evt.srcElement&&evt.srcElement.ownerDocument)?evt.srcElement.ownerDocument:document;
var _2e3=((dojo.render.html.ie55)||(doc["compatMode"]=="BackCompat"))?doc.body:doc.documentElement;
if(!evt.pageX){
evt.pageX=evt.clientX+(_2e3.scrollLeft||0);
}
if(!evt.pageY){
evt.pageY=evt.clientY+(_2e3.scrollTop||0);
}
if(evt.type=="mouseover"){
evt.relatedTarget=evt.fromElement;
}
if(evt.type=="mouseout"){
evt.relatedTarget=evt.toElement;
}
this.currentEvent=evt;
evt.callListener=this.callListener;
evt.stopPropagation=this._stopPropagation;
evt.preventDefault=this._preventDefault;
}
return evt;
};
this.stopEvent=function(evt){
if(window.event){
evt.cancelBubble=true;
evt.returnValue=false;
}else{
evt.preventDefault();
evt.stopPropagation();
}
};
};
dojo.provide("dojo.event.*");
dojo.provide("dojo.widget.Manager");
dojo.widget.manager=new function(){
this.widgets=[];
this.widgetIds=[];
this.topWidgets={};
var _2e5={};
var _2e6=[];
this.getUniqueId=function(_2e7){
var _2e8;
do{
_2e8=_2e7+"_"+(_2e5[_2e7]!=undefined?++_2e5[_2e7]:_2e5[_2e7]=0);
}while(this.getWidgetById(_2e8));
return _2e8;
};
this.add=function(_2e9){
this.widgets.push(_2e9);
if(!_2e9.extraArgs["id"]){
_2e9.extraArgs["id"]=_2e9.extraArgs["ID"];
}
if(_2e9.widgetId==""){
if(_2e9["id"]){
_2e9.widgetId=_2e9["id"];
}else{
if(_2e9.extraArgs["id"]){
_2e9.widgetId=_2e9.extraArgs["id"];
}else{
_2e9.widgetId=this.getUniqueId(_2e9.ns+"_"+_2e9.widgetType);
}
}
}
if(this.widgetIds[_2e9.widgetId]){
dojo.debug("widget ID collision on ID: "+_2e9.widgetId);
}
this.widgetIds[_2e9.widgetId]=_2e9;
};
this.destroyAll=function(){
for(var x=this.widgets.length-1;x>=0;x--){
try{
this.widgets[x].destroy(true);
delete this.widgets[x];
}
catch(e){
}
}
};
this.remove=function(_2eb){
if(dojo.lang.isNumber(_2eb)){
var tw=this.widgets[_2eb].widgetId;
delete this.widgetIds[tw];
this.widgets.splice(_2eb,1);
}else{
this.removeById(_2eb);
}
};
this.removeById=function(id){
if(!dojo.lang.isString(id)){
id=id["widgetId"];
if(!id){
dojo.debug("invalid widget or id passed to removeById");
return;
}
}
for(var i=0;i<this.widgets.length;i++){
if(this.widgets[i].widgetId==id){
this.remove(i);
break;
}
}
};
this.getWidgetById=function(id){
if(dojo.lang.isString(id)){
return this.widgetIds[id];
}
return id;
};
this.getWidgetsByType=function(type){
var lt=type.toLowerCase();
var _2f2=(type.indexOf(":")<0?function(x){
return x.widgetType.toLowerCase();
}:function(x){
return x.getNamespacedType();
});
var ret=[];
dojo.lang.forEach(this.widgets,function(x){
if(_2f2(x)==lt){
ret.push(x);
}
});
return ret;
};
this.getWidgetsByFilter=function(_2f7,_2f8){
var ret=[];
dojo.lang.every(this.widgets,function(x){
if(_2f7(x)){
ret.push(x);
if(_2f8){
return false;
}
}
return true;
});
return (_2f8?ret[0]:ret);
};
this.getAllWidgets=function(){
return this.widgets.concat();
};
this.getWidgetByNode=function(node){
var w=this.getAllWidgets();
node=dojo.byId(node);
for(var i=0;i<w.length;i++){
if(w[i].domNode==node){
return w[i];
}
}
return null;
};
this.byId=this.getWidgetById;
this.byType=this.getWidgetsByType;
this.byFilter=this.getWidgetsByFilter;
this.byNode=this.getWidgetByNode;
var _2fe={};
var _2ff=["dojo.widget"];
for(var i=0;i<_2ff.length;i++){
_2ff[_2ff[i]]=true;
}
this.registerWidgetPackage=function(_301){
if(!_2ff[_301]){
_2ff[_301]=true;
_2ff.push(_301);
}
};
this.getWidgetPackageList=function(){
return dojo.lang.map(_2ff,function(elt){
return (elt!==true?elt:undefined);
});
};
this.getImplementation=function(_303,_304,_305,ns){
var impl=this.getImplementationName(_303,ns);
if(impl){
var ret=_304?new impl(_304):new impl();
return ret;
}
};
function buildPrefixCache(){
for(var _309 in dojo.render){
if(dojo.render[_309]["capable"]===true){
var _30a=dojo.render[_309].prefixes;
for(var i=0;i<_30a.length;i++){
_2e6.push(_30a[i].toLowerCase());
}
}
}
}
var _30c=function(_30d,_30e){
if(!_30e){
return null;
}
for(var i=0,l=_2e6.length,_311;i<=l;i++){
_311=(i<l?_30e[_2e6[i]]:_30e);
if(!_311){
continue;
}
for(var name in _311){
if(name.toLowerCase()==_30d){
return _311[name];
}
}
}
return null;
};
var _313=function(_314,_315){
var _316=dojo.evalObjPath(_315,false);
return (_316?_30c(_314,_316):null);
};
this.getImplementationName=function(_317,ns){
var _319=_317.toLowerCase();
ns=ns||"dojo";
var imps=_2fe[ns]||(_2fe[ns]={});
var impl=imps[_319];
if(impl){
return impl;
}
if(!_2e6.length){
buildPrefixCache();
}
var _31c=dojo.ns.get(ns);
if(!_31c){
dojo.ns.register(ns,ns+".widget");
_31c=dojo.ns.get(ns);
}
if(_31c){
_31c.resolve(_317);
}
impl=_313(_319,_31c.module);
if(impl){
return (imps[_319]=impl);
}
_31c=dojo.ns.require(ns);
if((_31c)&&(_31c.resolver)){
_31c.resolve(_317);
impl=_313(_319,_31c.module);
if(impl){
return (imps[_319]=impl);
}
}
dojo.deprecated("dojo.widget.Manager.getImplementationName","Could not locate widget implementation for \""+_317+"\" in \""+_31c.module+"\" registered to namespace \""+_31c.name+"\". "+"Developers must specify correct namespaces for all non-Dojo widgets","0.5");
for(var i=0;i<_2ff.length;i++){
impl=_313(_319,_2ff[i]);
if(impl){
return (imps[_319]=impl);
}
}
throw new Error("Could not locate widget implementation for \""+_317+"\" in \""+_31c.module+"\" registered to namespace \""+_31c.name+"\"");
};
this.resizing=false;
this.onWindowResized=function(){
if(this.resizing){
return;
}
try{
this.resizing=true;
for(var id in this.topWidgets){
var _31f=this.topWidgets[id];
if(_31f.checkSize){
_31f.checkSize();
}
}
}
catch(e){
}
finally{
this.resizing=false;
}
};
if(typeof window!="undefined"){
dojo.addOnLoad(this,"onWindowResized");
dojo.event.connect(window,"onresize",this,"onWindowResized");
}
};
(function(){
var dw=dojo.widget;
var dwm=dw.manager;
var h=dojo.lang.curry(dojo.lang,"hitch",dwm);
var g=function(_324,_325){
dw[(_325||_324)]=h(_324);
};
g("add","addWidget");
g("destroyAll","destroyAllWidgets");
g("remove","removeWidget");
g("removeById","removeWidgetById");
g("getWidgetById");
g("getWidgetById","byId");
g("getWidgetsByType");
g("getWidgetsByFilter");
g("getWidgetsByType","byType");
g("getWidgetsByFilter","byFilter");
g("getWidgetByNode","byNode");
dw.all=function(n){
var _327=dwm.getAllWidgets.apply(dwm,arguments);
if(arguments.length>0){
return _327[n];
}
return _327;
};
g("registerWidgetPackage");
g("getImplementation","getWidgetImplementation");
g("getImplementationName","getWidgetImplementationName");
dw.widgets=dwm.widgets;
dw.widgetIds=dwm.widgetIds;
dw.root=dwm.root;
})();
dojo.provide("dojo.uri.Uri");
dojo.uri=new function(){
this.dojoUri=function(uri){
return new dojo.uri.Uri(dojo.hostenv.getBaseScriptUri(),uri);
};
this.moduleUri=function(_329,uri){
var loc=dojo.hostenv.getModuleSymbols(_329).join("/");
if(!loc){
return null;
}
if(loc.lastIndexOf("/")!=loc.length-1){
loc+="/";
}
return new dojo.uri.Uri(dojo.hostenv.getBaseScriptUri()+loc,uri);
};
this.Uri=function(){
var uri=arguments[0];
for(var i=1;i<arguments.length;i++){
if(!arguments[i]){
continue;
}
var _32e=new dojo.uri.Uri(arguments[i].toString());
var _32f=new dojo.uri.Uri(uri.toString());
if((_32e.path=="")&&(_32e.scheme==null)&&(_32e.authority==null)&&(_32e.query==null)){
if(_32e.fragment!=null){
_32f.fragment=_32e.fragment;
}
_32e=_32f;
}else{
if(_32e.scheme==null){
_32e.scheme=_32f.scheme;
if(_32e.authority==null){
_32e.authority=_32f.authority;
if(_32e.path.charAt(0)!="/"){
var path=_32f.path.substring(0,_32f.path.lastIndexOf("/")+1)+_32e.path;
var segs=path.split("/");
for(var j=0;j<segs.length;j++){
if(segs[j]=="."){
if(j==segs.length-1){
segs[j]="";
}else{
segs.splice(j,1);
j--;
}
}else{
if(j>0&&!(j==1&&segs[0]=="")&&segs[j]==".."&&segs[j-1]!=".."){
if(j==segs.length-1){
segs.splice(j,1);
segs[j-1]="";
}else{
segs.splice(j-1,2);
j-=2;
}
}
}
}
_32e.path=segs.join("/");
}
}
}
}
uri="";
if(_32e.scheme!=null){
uri+=_32e.scheme+":";
}
if(_32e.authority!=null){
uri+="//"+_32e.authority;
}
uri+=_32e.path;
if(_32e.query!=null){
uri+="?"+_32e.query;
}
if(_32e.fragment!=null){
uri+="#"+_32e.fragment;
}
}
this.uri=uri.toString();
var _333="^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$";
var r=this.uri.match(new RegExp(_333));
this.scheme=r[2]||(r[1]?"":null);
this.authority=r[4]||(r[3]?"":null);
this.path=r[5];
this.query=r[7]||(r[6]?"":null);
this.fragment=r[9]||(r[8]?"":null);
if(this.authority!=null){
_333="^((([^:]+:)?([^@]+))@)?([^:]*)(:([0-9]+))?$";
r=this.authority.match(new RegExp(_333));
this.user=r[3]||null;
this.password=r[4]||null;
this.host=r[5];
this.port=r[7]||null;
}
this.toString=function(){
return this.uri;
};
};
};
dojo.provide("dojo.uri.*");
dojo.provide("dojo.html.common");
dojo.lang.mixin(dojo.html,dojo.dom);
dojo.html.body=function(){
dojo.deprecated("dojo.html.body() moved to dojo.body()","0.5");
return dojo.body();
};
dojo.html.getEventTarget=function(evt){
if(!evt){
evt=dojo.global().event||{};
}
var t=(evt.srcElement?evt.srcElement:(evt.target?evt.target:null));
while((t)&&(t.nodeType!=1)){
t=t.parentNode;
}
return t;
};
dojo.html.getViewport=function(){
var _337=dojo.global();
var _338=dojo.doc();
var w=0;
var h=0;
if(dojo.render.html.mozilla){
w=_338.documentElement.clientWidth;
h=_337.innerHeight;
}else{
if(!dojo.render.html.opera&&_337.innerWidth){
w=_337.innerWidth;
h=_337.innerHeight;
}else{
if(!dojo.render.html.opera&&dojo.exists(_338,"documentElement.clientWidth")){
var w2=_338.documentElement.clientWidth;
if(!w||w2&&w2<w){
w=w2;
}
h=_338.documentElement.clientHeight;
}else{
if(dojo.body().clientWidth){
w=dojo.body().clientWidth;
h=dojo.body().clientHeight;
}
}
}
}
return {width:w,height:h};
};
dojo.html.getScroll=function(){
var _33c=dojo.global();
var _33d=dojo.doc();
var top=_33c.pageYOffset||_33d.documentElement.scrollTop||dojo.body().scrollTop||0;
var left=_33c.pageXOffset||_33d.documentElement.scrollLeft||dojo.body().scrollLeft||0;
return {top:top,left:left,offset:{x:left,y:top}};
};
dojo.html.getParentByType=function(node,type){
var _342=dojo.doc();
var _343=dojo.byId(node);
type=type.toLowerCase();
while((_343)&&(_343.nodeName.toLowerCase()!=type)){
if(_343==(_342["body"]||_342["documentElement"])){
return null;
}
_343=_343.parentNode;
}
return _343;
};
dojo.html.getAttribute=function(node,attr){
node=dojo.byId(node);
if((!node)||(!node.getAttribute)){
return null;
}
var ta=typeof attr=="string"?attr:new String(attr);
var v=node.getAttribute(ta.toUpperCase());
if((v)&&(typeof v=="string")&&(v!="")){
return v;
}
if(v&&v.value){
return v.value;
}
if((node.getAttributeNode)&&(node.getAttributeNode(ta))){
return (node.getAttributeNode(ta)).value;
}else{
if(node.getAttribute(ta)){
return node.getAttribute(ta);
}else{
if(node.getAttribute(ta.toLowerCase())){
return node.getAttribute(ta.toLowerCase());
}
}
}
return null;
};
dojo.html.hasAttribute=function(node,attr){
return dojo.html.getAttribute(dojo.byId(node),attr)?true:false;
};
dojo.html.getCursorPosition=function(e){
e=e||dojo.global().event;
var _34b={x:0,y:0};
if(e.pageX||e.pageY){
_34b.x=e.pageX;
_34b.y=e.pageY;
}else{
var de=dojo.doc().documentElement;
var db=dojo.body();
_34b.x=e.clientX+((de||db)["scrollLeft"])-((de||db)["clientLeft"]);
_34b.y=e.clientY+((de||db)["scrollTop"])-((de||db)["clientTop"]);
}
return _34b;
};
dojo.html.isTag=function(node){
node=dojo.byId(node);
if(node&&node.tagName){
for(var i=1;i<arguments.length;i++){
if(node.tagName.toLowerCase()==String(arguments[i]).toLowerCase()){
return String(arguments[i]).toLowerCase();
}
}
}
return "";
};
if(dojo.render.html.ie&&!dojo.render.html.ie70){
if(window.location.href.substr(0,6).toLowerCase()!="https:"){
(function(){
var _350=dojo.doc().createElement("script");
_350.src="javascript:'dojo.html.createExternalElement=function(doc, tag){ return doc.createElement(tag); }'";
dojo.doc().getElementsByTagName("head")[0].appendChild(_350);
})();
}
}else{
dojo.html.createExternalElement=function(doc,tag){
return doc.createElement(tag);
};
}
dojo.html._callDeprecated=function(_353,_354,args,_356,_357){
dojo.deprecated("dojo.html."+_353,"replaced by dojo.html."+_354+"("+(_356?"node, {"+_356+": "+_356+"}":"")+")"+(_357?"."+_357:""),"0.5");
var _358=[];
if(_356){
var _359={};
_359[_356]=args[1];
_358.push(args[0]);
_358.push(_359);
}else{
_358=args;
}
var ret=dojo.html[_354].apply(dojo.html,args);
if(_357){
return ret[_357];
}else{
return ret;
}
};
dojo.html.getViewportWidth=function(){
return dojo.html._callDeprecated("getViewportWidth","getViewport",arguments,null,"width");
};
dojo.html.getViewportHeight=function(){
return dojo.html._callDeprecated("getViewportHeight","getViewport",arguments,null,"height");
};
dojo.html.getViewportSize=function(){
return dojo.html._callDeprecated("getViewportSize","getViewport",arguments);
};
dojo.html.getScrollTop=function(){
return dojo.html._callDeprecated("getScrollTop","getScroll",arguments,null,"top");
};
dojo.html.getScrollLeft=function(){
return dojo.html._callDeprecated("getScrollLeft","getScroll",arguments,null,"left");
};
dojo.html.getScrollOffset=function(){
return dojo.html._callDeprecated("getScrollOffset","getScroll",arguments,null,"offset");
};
dojo.provide("dojo.a11y");
dojo.a11y={imgPath:dojo.uri.dojoUri("src/widget/templates/images"),doAccessibleCheck:true,accessible:null,checkAccessible:function(){
if(this.accessible===null){
this.accessible=false;
if(this.doAccessibleCheck==true){
this.accessible=this.testAccessible();
}
}
return this.accessible;
},testAccessible:function(){
this.accessible=false;
if(dojo.render.html.ie||dojo.render.html.mozilla){
var div=document.createElement("div");
div.style.backgroundImage="url(\""+this.imgPath+"/tab_close.gif\")";
dojo.body().appendChild(div);
var _35c=null;
if(window.getComputedStyle){
var _35d=getComputedStyle(div,"");
_35c=_35d.getPropertyValue("background-image");
}else{
_35c=div.currentStyle.backgroundImage;
}
var _35e=false;
if(_35c!=null&&(_35c=="none"||_35c=="url(invalid-url:)")){
this.accessible=true;
}
dojo.body().removeChild(div);
}
return this.accessible;
},setCheckAccessible:function(_35f){
this.doAccessibleCheck=_35f;
},setAccessibleMode:function(){
if(this.accessible===null){
if(this.checkAccessible()){
dojo.render.html.prefixes.unshift("a11y");
}
}
return this.accessible;
}};
dojo.provide("dojo.widget.Widget");
dojo.declare("dojo.widget.Widget",null,function(){
this.children=[];
this.extraArgs={};
},{parent:null,isTopLevel:false,disabled:false,isContainer:false,widgetId:"",widgetType:"Widget",ns:"dojo",getNamespacedType:function(){
return (this.ns?this.ns+":"+this.widgetType:this.widgetType).toLowerCase();
},toString:function(){
return "[Widget "+this.getNamespacedType()+", "+(this.widgetId||"NO ID")+"]";
},repr:function(){
return this.toString();
},enable:function(){
this.disabled=false;
},disable:function(){
this.disabled=true;
},onResized:function(){
this.notifyChildrenOfResize();
},notifyChildrenOfResize:function(){
for(var i=0;i<this.children.length;i++){
var _361=this.children[i];
if(_361.onResized){
_361.onResized();
}
}
},create:function(args,_363,_364,ns){
if(ns){
this.ns=ns;
}
this.satisfyPropertySets(args,_363,_364);
this.mixInProperties(args,_363,_364);
this.postMixInProperties(args,_363,_364);
dojo.widget.manager.add(this);
this.buildRendering(args,_363,_364);
this.initialize(args,_363,_364);
this.postInitialize(args,_363,_364);
this.postCreate(args,_363,_364);
return this;
},destroy:function(_366){
if(this.parent){
this.parent.removeChild(this);
}
this.destroyChildren();
this.uninitialize();
this.destroyRendering(_366);
dojo.widget.manager.removeById(this.widgetId);
},destroyChildren:function(){
var _367;
var i=0;
while(this.children.length>i){
_367=this.children[i];
if(_367 instanceof dojo.widget.Widget){
this.removeChild(_367);
_367.destroy();
continue;
}
i++;
}
},getChildrenOfType:function(type,_36a){
var ret=[];
var _36c=dojo.lang.isFunction(type);
if(!_36c){
type=type.toLowerCase();
}
for(var x=0;x<this.children.length;x++){
if(_36c){
if(this.children[x] instanceof type){
ret.push(this.children[x]);
}
}else{
if(this.children[x].widgetType.toLowerCase()==type){
ret.push(this.children[x]);
}
}
if(_36a){
ret=ret.concat(this.children[x].getChildrenOfType(type,_36a));
}
}
return ret;
},getDescendants:function(){
var _36e=[];
var _36f=[this];
var elem;
while((elem=_36f.pop())){
_36e.push(elem);
if(elem.children){
dojo.lang.forEach(elem.children,function(elem){
_36f.push(elem);
});
}
}
return _36e;
},isFirstChild:function(){
return this===this.parent.children[0];
},isLastChild:function(){
return this===this.parent.children[this.parent.children.length-1];
},satisfyPropertySets:function(args){
return args;
},mixInProperties:function(args,frag){
if((args["fastMixIn"])||(frag["fastMixIn"])){
for(var x in args){
this[x]=args[x];
}
return;
}
var _376;
var _377=dojo.widget.lcArgsCache[this.widgetType];
if(_377==null){
_377={};
for(var y in this){
_377[((new String(y)).toLowerCase())]=y;
}
dojo.widget.lcArgsCache[this.widgetType]=_377;
}
var _379={};
for(var x in args){
if(!this[x]){
var y=_377[(new String(x)).toLowerCase()];
if(y){
args[y]=args[x];
x=y;
}
}
if(_379[x]){
continue;
}
_379[x]=true;
if((typeof this[x])!=(typeof _376)){
if(typeof args[x]!="string"){
this[x]=args[x];
}else{
if(dojo.lang.isString(this[x])){
this[x]=args[x];
}else{
if(dojo.lang.isNumber(this[x])){
this[x]=new Number(args[x]);
}else{
if(dojo.lang.isBoolean(this[x])){
this[x]=(args[x].toLowerCase()=="false")?false:true;
}else{
if(dojo.lang.isFunction(this[x])){
if(args[x].search(/[^\w\.]+/i)==-1){
this[x]=dojo.evalObjPath(args[x],false);
}else{
var tn=dojo.lang.nameAnonFunc(new Function(args[x]),this);
dojo.event.kwConnect({srcObj:this,srcFunc:x,adviceObj:this,adviceFunc:tn});
}
}else{
if(dojo.lang.isArray(this[x])){
this[x]=args[x].split(";");
}else{
if(this[x] instanceof Date){
this[x]=new Date(Number(args[x]));
}else{
if(typeof this[x]=="object"){
if(this[x] instanceof dojo.uri.Uri){
this[x]=dojo.uri.dojoUri(args[x]);
}else{
var _37b=args[x].split(";");
for(var y=0;y<_37b.length;y++){
var si=_37b[y].indexOf(":");
if((si!=-1)&&(_37b[y].length>si)){
this[x][_37b[y].substr(0,si).replace(/^\s+|\s+$/g,"")]=_37b[y].substr(si+1);
}
}
}
}else{
this[x]=args[x];
}
}
}
}
}
}
}
}
}else{
this.extraArgs[x.toLowerCase()]=args[x];
}
}
},postMixInProperties:function(args,frag,_37f){
},initialize:function(args,frag,_382){
return false;
},postInitialize:function(args,frag,_385){
return false;
},postCreate:function(args,frag,_388){
return false;
},uninitialize:function(){
return false;
},buildRendering:function(args,frag,_38b){
dojo.unimplemented("dojo.widget.Widget.buildRendering, on "+this.toString()+", ");
return false;
},destroyRendering:function(){
dojo.unimplemented("dojo.widget.Widget.destroyRendering");
return false;
},addedTo:function(_38c){
},addChild:function(_38d){
dojo.unimplemented("dojo.widget.Widget.addChild");
return false;
},removeChild:function(_38e){
for(var x=0;x<this.children.length;x++){
if(this.children[x]===_38e){
this.children.splice(x,1);
_38e.parent=null;
break;
}
}
return _38e;
},getPreviousSibling:function(){
var idx=this.getParentIndex();
if(idx<=0){
return null;
}
return this.parent.children[idx-1];
},getSiblings:function(){
return this.parent.children;
},getParentIndex:function(){
return dojo.lang.indexOf(this.parent.children,this,true);
},getNextSibling:function(){
var idx=this.getParentIndex();
if(idx==this.parent.children.length-1){
return null;
}
if(idx<0){
return null;
}
return this.parent.children[idx+1];
}});
dojo.widget.lcArgsCache={};
dojo.widget.tags={};
dojo.widget.tags.addParseTreeHandler=function(type){
dojo.deprecated("addParseTreeHandler",". ParseTreeHandlers are now reserved for components. Any unfiltered DojoML tag without a ParseTreeHandler is assumed to be a widget","0.5");
};
dojo.widget.tags["dojo:propertyset"]=function(_393,_394,_395){
var _396=_394.parseProperties(_393["dojo:propertyset"]);
};
dojo.widget.tags["dojo:connect"]=function(_397,_398,_399){
var _39a=_398.parseProperties(_397["dojo:connect"]);
};
dojo.widget.buildWidgetFromParseTree=function(type,frag,_39d,_39e,_39f,_3a0){
dojo.a11y.setAccessibleMode();
var _3a1=type.split(":");
_3a1=(_3a1.length==2)?_3a1[1]:type;
var _3a2=_3a0||_39d.parseProperties(frag[frag["ns"]+":"+_3a1]);
var _3a3=dojo.widget.manager.getImplementation(_3a1,null,null,frag["ns"]);
if(!_3a3){
throw new Error("cannot find \""+type+"\" widget");
}else{
if(!_3a3.create){
throw new Error("\""+type+"\" widget object has no \"create\" method and does not appear to implement *Widget");
}
}
_3a2["dojoinsertionindex"]=_39f;
var ret=_3a3.create(_3a2,frag,_39e,frag["ns"]);
return ret;
};
dojo.widget.defineWidget=function(_3a5,_3a6,_3a7,init,_3a9){
if(dojo.lang.isString(arguments[3])){
dojo.widget._defineWidget(arguments[0],arguments[3],arguments[1],arguments[4],arguments[2]);
}else{
var args=[arguments[0]],p=3;
if(dojo.lang.isString(arguments[1])){
args.push(arguments[1],arguments[2]);
}else{
args.push("",arguments[1]);
p=2;
}
if(dojo.lang.isFunction(arguments[p])){
args.push(arguments[p],arguments[p+1]);
}else{
args.push(null,arguments[p]);
}
dojo.widget._defineWidget.apply(this,args);
}
};
dojo.widget.defineWidget.renderers="html|svg|vml";
dojo.widget._defineWidget=function(_3ac,_3ad,_3ae,init,_3b0){
var _3b1=_3ac.split(".");
var type=_3b1.pop();
var regx="\\.("+(_3ad?_3ad+"|":"")+dojo.widget.defineWidget.renderers+")\\.";
var r=_3ac.search(new RegExp(regx));
_3b1=(r<0?_3b1.join("."):_3ac.substr(0,r));
dojo.widget.manager.registerWidgetPackage(_3b1);
var pos=_3b1.indexOf(".");
var _3b6=(pos>-1)?_3b1.substring(0,pos):_3b1;
_3b0=(_3b0)||{};
_3b0.widgetType=type;
if((!init)&&(_3b0["classConstructor"])){
init=_3b0.classConstructor;
delete _3b0.classConstructor;
}
dojo.declare(_3ac,_3ae,init,_3b0);
};
dojo.provide("dojo.widget.Parse");
dojo.widget.Parse=function(_3b7){
this.propertySetsList=[];
this.fragment=_3b7;
this.createComponents=function(frag,_3b9){
var _3ba=[];
var _3bb=false;
try{
if(frag&&frag.tagName&&(frag!=frag.nodeRef)){
var _3bc=dojo.widget.tags;
var tna=String(frag.tagName).split(";");
for(var x=0;x<tna.length;x++){
var ltn=tna[x].replace(/^\s+|\s+$/g,"").toLowerCase();
frag.tagName=ltn;
var ret;
if(_3bc[ltn]){
_3bb=true;
ret=_3bc[ltn](frag,this,_3b9,frag.index);
_3ba.push(ret);
}else{
if(ltn.indexOf(":")==-1){
ltn="dojo:"+ltn;
}
ret=dojo.widget.buildWidgetFromParseTree(ltn,frag,this,_3b9,frag.index);
if(ret){
_3bb=true;
_3ba.push(ret);
}
}
}
}
}
catch(e){
dojo.debug("dojo.widget.Parse: error:",e);
}
if(!_3bb){
_3ba=_3ba.concat(this.createSubComponents(frag,_3b9));
}
return _3ba;
};
this.createSubComponents=function(_3c1,_3c2){
var frag,_3c4=[];
for(var item in _3c1){
frag=_3c1[item];
if(frag&&typeof frag=="object"&&(frag!=_3c1.nodeRef)&&(frag!=_3c1.tagName)&&(!dojo.dom.isNode(frag))){
_3c4=_3c4.concat(this.createComponents(frag,_3c2));
}
}
return _3c4;
};
this.parsePropertySets=function(_3c6){
return [];
};
this.parseProperties=function(_3c7){
var _3c8={};
for(var item in _3c7){
if((_3c7[item]==_3c7.tagName)||(_3c7[item]==_3c7.nodeRef)){
}else{
var frag=_3c7[item];
if(frag.tagName&&dojo.widget.tags[frag.tagName.toLowerCase()]){
}else{
if(frag[0]&&frag[0].value!=""&&frag[0].value!=null){
try{
if(item.toLowerCase()=="dataprovider"){
var _3cb=this;
this.getDataProvider(_3cb,frag[0].value);
_3c8.dataProvider=this.dataProvider;
}
_3c8[item]=frag[0].value;
var _3cc=this.parseProperties(frag);
for(var _3cd in _3cc){
_3c8[_3cd]=_3cc[_3cd];
}
}
catch(e){
dojo.debug(e);
}
}
}
switch(item.toLowerCase()){
case "checked":
case "disabled":
if(typeof _3c8[item]!="boolean"){
_3c8[item]=true;
}
break;
}
}
}
return _3c8;
};
this.getDataProvider=function(_3ce,_3cf){
dojo.io.bind({url:_3cf,load:function(type,_3d1){
if(type=="load"){
_3ce.dataProvider=_3d1;
}
},mimetype:"text/javascript",sync:true});
};
this.getPropertySetById=function(_3d2){
for(var x=0;x<this.propertySetsList.length;x++){
if(_3d2==this.propertySetsList[x]["id"][0].value){
return this.propertySetsList[x];
}
}
return "";
};
this.getPropertySetsByType=function(_3d4){
var _3d5=[];
for(var x=0;x<this.propertySetsList.length;x++){
var cpl=this.propertySetsList[x];
var cpcc=cpl.componentClass||cpl.componentType||null;
var _3d9=this.propertySetsList[x]["id"][0].value;
if(cpcc&&(_3d9==cpcc[0].value)){
_3d5.push(cpl);
}
}
return _3d5;
};
this.getPropertySets=function(_3da){
var ppl="dojo:propertyproviderlist";
var _3dc=[];
var _3dd=_3da.tagName;
if(_3da[ppl]){
var _3de=_3da[ppl].value.split(" ");
for(var _3df in _3de){
if((_3df.indexOf("..")==-1)&&(_3df.indexOf("://")==-1)){
var _3e0=this.getPropertySetById(_3df);
if(_3e0!=""){
_3dc.push(_3e0);
}
}else{
}
}
}
return this.getPropertySetsByType(_3dd).concat(_3dc);
};
this.createComponentFromScript=function(_3e1,_3e2,_3e3,ns){
_3e3.fastMixIn=true;
var ltn=(ns||"dojo")+":"+_3e2.toLowerCase();
if(dojo.widget.tags[ltn]){
return [dojo.widget.tags[ltn](_3e3,this,null,null,_3e3)];
}
return [dojo.widget.buildWidgetFromParseTree(ltn,_3e3,this,null,null,_3e3)];
};
};
dojo.widget._parser_collection={"dojo":new dojo.widget.Parse()};
dojo.widget.getParser=function(name){
if(!name){
name="dojo";
}
if(!this._parser_collection[name]){
this._parser_collection[name]=new dojo.widget.Parse();
}
return this._parser_collection[name];
};
dojo.widget.createWidget=function(name,_3e8,_3e9,_3ea){
var _3eb=false;
var _3ec=(typeof name=="string");
if(_3ec){
var pos=name.indexOf(":");
var ns=(pos>-1)?name.substring(0,pos):"dojo";
if(pos>-1){
name=name.substring(pos+1);
}
var _3ef=name.toLowerCase();
var _3f0=ns+":"+_3ef;
_3eb=(dojo.byId(name)&&!dojo.widget.tags[_3f0]);
}
if((arguments.length==1)&&(_3eb||!_3ec)){
var xp=new dojo.xml.Parse();
var tn=_3eb?dojo.byId(name):name;
return dojo.widget.getParser().createComponents(xp.parseElement(tn,null,true))[0];
}
function fromScript(_3f3,name,_3f5,ns){
_3f5[_3f0]={dojotype:[{value:_3ef}],nodeRef:_3f3,fastMixIn:true};
_3f5.ns=ns;
return dojo.widget.getParser().createComponentFromScript(_3f3,name,_3f5,ns);
}
_3e8=_3e8||{};
var _3f7=false;
var tn=null;
var h=dojo.render.html.capable;
if(h){
tn=document.createElement("span");
}
if(!_3e9){
_3f7=true;
_3e9=tn;
if(h){
dojo.body().appendChild(_3e9);
}
}else{
if(_3ea){
dojo.dom.insertAtPosition(tn,_3e9,_3ea);
}else{
tn=_3e9;
}
}
var _3f9=fromScript(tn,name.toLowerCase(),_3e8,ns);
if((!_3f9)||(!_3f9[0])||(typeof _3f9[0].widgetType=="undefined")){
throw new Error("createWidget: Creation of \""+name+"\" widget failed.");
}
try{
if(_3f7&&_3f9[0].domNode.parentNode){
_3f9[0].domNode.parentNode.removeChild(_3f9[0].domNode);
}
}
catch(e){
dojo.debug(e);
}
return _3f9[0];
};
dojo.provide("dojo.html.style");
dojo.html.getClass=function(node){
node=dojo.byId(node);
if(!node){
return "";
}
var cs="";
if(node.className){
cs=node.className;
}else{
if(dojo.html.hasAttribute(node,"class")){
cs=dojo.html.getAttribute(node,"class");
}
}
return cs.replace(/^\s+|\s+$/g,"");
};
dojo.html.getClasses=function(node){
var c=dojo.html.getClass(node);
return (c=="")?[]:c.split(/\s+/g);
};
dojo.html.hasClass=function(node,_3ff){
return (new RegExp("(^|\\s+)"+_3ff+"(\\s+|$)")).test(dojo.html.getClass(node));
};
dojo.html.prependClass=function(node,_401){
_401+=" "+dojo.html.getClass(node);
return dojo.html.setClass(node,_401);
};
dojo.html.addClass=function(node,_403){
if(dojo.html.hasClass(node,_403)){
return false;
}
_403=(dojo.html.getClass(node)+" "+_403).replace(/^\s+|\s+$/g,"");
return dojo.html.setClass(node,_403);
};
dojo.html.setClass=function(node,_405){
node=dojo.byId(node);
var cs=new String(_405);
try{
if(typeof node.className=="string"){
node.className=cs;
}else{
if(node.setAttribute){
node.setAttribute("class",_405);
node.className=cs;
}else{
return false;
}
}
}
catch(e){
dojo.debug("dojo.html.setClass() failed",e);
}
return true;
};
dojo.html.removeClass=function(node,_408,_409){
try{
if(!_409){
var _40a=dojo.html.getClass(node).replace(new RegExp("(^|\\s+)"+_408+"(\\s+|$)"),"$1$2");
}else{
var _40a=dojo.html.getClass(node).replace(_408,"");
}
dojo.html.setClass(node,_40a);
}
catch(e){
dojo.debug("dojo.html.removeClass() failed",e);
}
return true;
};
dojo.html.replaceClass=function(node,_40c,_40d){
dojo.html.removeClass(node,_40d);
dojo.html.addClass(node,_40c);
};
dojo.html.classMatchType={ContainsAll:0,ContainsAny:1,IsOnly:2};
dojo.html.getElementsByClass=function(_40e,_40f,_410,_411,_412){
_412=false;
var _413=dojo.doc();
_40f=dojo.byId(_40f)||_413;
var _414=_40e.split(/\s+/g);
var _415=[];
if(_411!=1&&_411!=2){
_411=0;
}
var _416=new RegExp("(\\s|^)(("+_414.join(")|(")+"))(\\s|$)");
var _417=_414.join(" ").length;
var _418=[];
if(!_412&&_413.evaluate){
var _419=".//"+(_410||"*")+"[contains(";
if(_411!=dojo.html.classMatchType.ContainsAny){
_419+="concat(' ',@class,' '), ' "+_414.join(" ') and contains(concat(' ',@class,' '), ' ")+" ')";
if(_411==2){
_419+=" and string-length(@class)="+_417+"]";
}else{
_419+="]";
}
}else{
_419+="concat(' ',@class,' '), ' "+_414.join(" ') or contains(concat(' ',@class,' '), ' ")+" ')]";
}
var _41a=_413.evaluate(_419,_40f,null,XPathResult.ANY_TYPE,null);
var _41b=_41a.iterateNext();
while(_41b){
try{
_418.push(_41b);
_41b=_41a.iterateNext();
}
catch(e){
break;
}
}
return _418;
}else{
if(!_410){
_410="*";
}
_418=_40f.getElementsByTagName(_410);
var node,i=0;
outer:
while(node=_418[i++]){
var _41e=dojo.html.getClasses(node);
if(_41e.length==0){
continue outer;
}
var _41f=0;
for(var j=0;j<_41e.length;j++){
if(_416.test(_41e[j])){
if(_411==dojo.html.classMatchType.ContainsAny){
_415.push(node);
continue outer;
}else{
_41f++;
}
}else{
if(_411==dojo.html.classMatchType.IsOnly){
continue outer;
}
}
}
if(_41f==_414.length){
if((_411==dojo.html.classMatchType.IsOnly)&&(_41f==_41e.length)){
_415.push(node);
}else{
if(_411==dojo.html.classMatchType.ContainsAll){
_415.push(node);
}
}
}
}
return _415;
}
};
dojo.html.getElementsByClassName=dojo.html.getElementsByClass;
dojo.html.toCamelCase=function(_421){
var arr=_421.split("-"),cc=arr[0];
for(var i=1;i<arr.length;i++){
cc+=arr[i].charAt(0).toUpperCase()+arr[i].substring(1);
}
return cc;
};
dojo.html.toSelectorCase=function(_425){
return _425.replace(/([A-Z])/g,"-$1").toLowerCase();
};
dojo.html.getComputedStyle=function(node,_427,_428){
node=dojo.byId(node);
var _427=dojo.html.toSelectorCase(_427);
var _429=dojo.html.toCamelCase(_427);
if(!node||!node.style){
return _428;
}else{
if(document.defaultView&&dojo.html.isDescendantOf(node,node.ownerDocument)){
try{
var cs=document.defaultView.getComputedStyle(node,"");
if(cs){
return cs.getPropertyValue(_427);
}
}
catch(e){
if(node.style.getPropertyValue){
return node.style.getPropertyValue(_427);
}else{
return _428;
}
}
}else{
if(node.currentStyle){
return node.currentStyle[_429];
}
}
}
if(node.style.getPropertyValue){
return node.style.getPropertyValue(_427);
}else{
return _428;
}
};
dojo.html.getStyleProperty=function(node,_42c){
node=dojo.byId(node);
return (node&&node.style?node.style[dojo.html.toCamelCase(_42c)]:undefined);
};
dojo.html.getStyle=function(node,_42e){
var _42f=dojo.html.getStyleProperty(node,_42e);
return (_42f?_42f:dojo.html.getComputedStyle(node,_42e));
};
dojo.html.setStyle=function(node,_431,_432){
node=dojo.byId(node);
if(node&&node.style){
var _433=dojo.html.toCamelCase(_431);
node.style[_433]=_432;
}
};
dojo.html.setStyleText=function(_434,text){
try{
_434.style.cssText=text;
}
catch(e){
_434.setAttribute("style",text);
}
};
dojo.html.copyStyle=function(_436,_437){
if(!_437.style.cssText){
_436.setAttribute("style",_437.getAttribute("style"));
}else{
_436.style.cssText=_437.style.cssText;
}
dojo.html.addClass(_436,dojo.html.getClass(_437));
};
dojo.html.getUnitValue=function(node,_439,_43a){
var s=dojo.html.getComputedStyle(node,_439);
if((!s)||((s=="auto")&&(_43a))){
return {value:0,units:"px"};
}
var _43c=s.match(/(\-?[\d.]+)([a-z%]*)/i);
if(!_43c){
return dojo.html.getUnitValue.bad;
}
return {value:Number(_43c[1]),units:_43c[2].toLowerCase()};
};
dojo.html.getUnitValue.bad={value:NaN,units:""};
dojo.html.getPixelValue=function(node,_43e,_43f){
var _440=dojo.html.getUnitValue(node,_43e,_43f);
if(isNaN(_440.value)){
return 0;
}
if((_440.value)&&(_440.units!="px")){
return NaN;
}
return _440.value;
};
dojo.html.setPositivePixelValue=function(node,_442,_443){
if(isNaN(_443)){
return false;
}
node.style[_442]=Math.max(0,_443)+"px";
return true;
};
dojo.html.styleSheet=null;
dojo.html.insertCssRule=function(_444,_445,_446){
if(!dojo.html.styleSheet){
if(document.createStyleSheet){
dojo.html.styleSheet=document.createStyleSheet();
}else{
if(document.styleSheets[0]){
dojo.html.styleSheet=document.styleSheets[0];
}else{
return null;
}
}
}
if(arguments.length<3){
if(dojo.html.styleSheet.cssRules){
_446=dojo.html.styleSheet.cssRules.length;
}else{
if(dojo.html.styleSheet.rules){
_446=dojo.html.styleSheet.rules.length;
}else{
return null;
}
}
}
if(dojo.html.styleSheet.insertRule){
var rule=_444+" { "+_445+" }";
return dojo.html.styleSheet.insertRule(rule,_446);
}else{
if(dojo.html.styleSheet.addRule){
return dojo.html.styleSheet.addRule(_444,_445,_446);
}else{
return null;
}
}
};
dojo.html.removeCssRule=function(_448){
if(!dojo.html.styleSheet){
dojo.debug("no stylesheet defined for removing rules");
return false;
}
if(dojo.render.html.ie){
if(!_448){
_448=dojo.html.styleSheet.rules.length;
dojo.html.styleSheet.removeRule(_448);
}
}else{
if(document.styleSheets[0]){
if(!_448){
_448=dojo.html.styleSheet.cssRules.length;
}
dojo.html.styleSheet.deleteRule(_448);
}
}
return true;
};
dojo.html._insertedCssFiles=[];
dojo.html.insertCssFile=function(URI,doc,_44b,_44c){
if(!URI){
return;
}
if(!doc){
doc=document;
}
var _44d=dojo.hostenv.getText(URI,false,_44c);
if(_44d===null){
return;
}
_44d=dojo.html.fixPathsInCssText(_44d,URI);
if(_44b){
var idx=-1,node,ent=dojo.html._insertedCssFiles;
for(var i=0;i<ent.length;i++){
if((ent[i].doc==doc)&&(ent[i].cssText==_44d)){
idx=i;
node=ent[i].nodeRef;
break;
}
}
if(node){
var _452=doc.getElementsByTagName("style");
for(var i=0;i<_452.length;i++){
if(_452[i]==node){
return;
}
}
dojo.html._insertedCssFiles.shift(idx,1);
}
}
var _453=dojo.html.insertCssText(_44d,doc);
dojo.html._insertedCssFiles.push({"doc":doc,"cssText":_44d,"nodeRef":_453});
if(_453&&djConfig.isDebug){
_453.setAttribute("dbgHref",URI);
}
return _453;
};
dojo.html.insertCssText=function(_454,doc,URI){
if(!_454){
return;
}
if(!doc){
doc=document;
}
if(URI){
_454=dojo.html.fixPathsInCssText(_454,URI);
}
var _457=doc.createElement("style");
_457.setAttribute("type","text/css");
var head=doc.getElementsByTagName("head")[0];
if(!head){
dojo.debug("No head tag in document, aborting styles");
return;
}else{
head.appendChild(_457);
}
if(_457.styleSheet){
var _459=function(){
try{
_457.styleSheet.cssText=_454;
}
catch(e){
dojo.debug(e);
}
};
if(_457.styleSheet.disabled){
setTimeout(_459,10);
}else{
_459();
}
}else{
var _45a=doc.createTextNode(_454);
_457.appendChild(_45a);
}
return _457;
};
dojo.html.fixPathsInCssText=function(_45b,URI){
if(!_45b||!URI){
return;
}
var _45d,str="",url="",_460="[\\t\\s\\w\\(\\)\\/\\.\\\\'\"-:#=&?~]+";
var _461=new RegExp("url\\(\\s*("+_460+")\\s*\\)");
var _462=/(file|https?|ftps?):\/\//;
regexTrim=new RegExp("^[\\s]*(['\"]?)("+_460+")\\1[\\s]*?$");
if(dojo.render.html.ie55||dojo.render.html.ie60){
var _463=new RegExp("AlphaImageLoader\\((.*)src=['\"]("+_460+")['\"]");
while(_45d=_463.exec(_45b)){
url=_45d[2].replace(regexTrim,"$2");
if(!_462.exec(url)){
url=(new dojo.uri.Uri(URI,url).toString());
}
str+=_45b.substring(0,_45d.index)+"AlphaImageLoader("+_45d[1]+"src='"+url+"'";
_45b=_45b.substr(_45d.index+_45d[0].length);
}
_45b=str+_45b;
str="";
}
while(_45d=_461.exec(_45b)){
url=_45d[1].replace(regexTrim,"$2");
if(!_462.exec(url)){
url=(new dojo.uri.Uri(URI,url).toString());
}
str+=_45b.substring(0,_45d.index)+"url("+url+")";
_45b=_45b.substr(_45d.index+_45d[0].length);
}
return str+_45b;
};
dojo.html.setActiveStyleSheet=function(_464){
var i=0,a,els=dojo.doc().getElementsByTagName("link");
while(a=els[i++]){
if(a.getAttribute("rel").indexOf("style")!=-1&&a.getAttribute("title")){
a.disabled=true;
if(a.getAttribute("title")==_464){
a.disabled=false;
}
}
}
};
dojo.html.getActiveStyleSheet=function(){
var i=0,a,els=dojo.doc().getElementsByTagName("link");
while(a=els[i++]){
if(a.getAttribute("rel").indexOf("style")!=-1&&a.getAttribute("title")&&!a.disabled){
return a.getAttribute("title");
}
}
return null;
};
dojo.html.getPreferredStyleSheet=function(){
var i=0,a,els=dojo.doc().getElementsByTagName("link");
while(a=els[i++]){
if(a.getAttribute("rel").indexOf("style")!=-1&&a.getAttribute("rel").indexOf("alt")==-1&&a.getAttribute("title")){
return a.getAttribute("title");
}
}
return null;
};
dojo.html.applyBrowserClass=function(node){
var drh=dojo.render.html;
var _470={dj_ie:drh.ie,dj_ie55:drh.ie55,dj_ie6:drh.ie60,dj_ie7:drh.ie70,dj_iequirks:drh.ie&&drh.quirks,dj_opera:drh.opera,dj_opera8:drh.opera&&(Math.floor(dojo.render.version)==8),dj_opera9:drh.opera&&(Math.floor(dojo.render.version)==9),dj_khtml:drh.khtml,dj_safari:drh.safari,dj_gecko:drh.mozilla};
for(var p in _470){
if(_470[p]){
dojo.html.addClass(node,p);
}
}
};
dojo.provide("dojo.widget.DomWidget");
dojo.widget._cssFiles={};
dojo.widget._cssStrings={};
dojo.widget._templateCache={};
dojo.widget.defaultStrings={dojoRoot:dojo.hostenv.getBaseScriptUri(),baseScriptUri:dojo.hostenv.getBaseScriptUri()};
dojo.widget.fillFromTemplateCache=function(obj,_473,_474,_475){
var _476=_473||obj.templatePath;
var _477=dojo.widget._templateCache;
if(!_476&&!obj["widgetType"]){
do{
var _478="__dummyTemplate__"+dojo.widget._templateCache.dummyCount++;
}while(_477[_478]);
obj.widgetType=_478;
}
var wt=_476?_476.toString():obj.widgetType;
var ts=_477[wt];
if(!ts){
_477[wt]={"string":null,"node":null};
if(_475){
ts={};
}else{
ts=_477[wt];
}
}
if((!obj.templateString)&&(!_475)){
obj.templateString=_474||ts["string"];
}
if((!obj.templateNode)&&(!_475)){
obj.templateNode=ts["node"];
}
if((!obj.templateNode)&&(!obj.templateString)&&(_476)){
var _47b=dojo.hostenv.getText(_476);
if(_47b){
_47b=_47b.replace(/^\s*<\?xml(\s)+version=[\'\"](\d)*.(\d)*[\'\"](\s)*\?>/im,"");
var _47c=_47b.match(/<body[^>]*>\s*([\s\S]+)\s*<\/body>/im);
if(_47c){
_47b=_47c[1];
}
}else{
_47b="";
}
obj.templateString=_47b;
if(!_475){
_477[wt]["string"]=_47b;
}
}
if((!ts["string"])&&(!_475)){
ts.string=obj.templateString;
}
};
dojo.widget._templateCache.dummyCount=0;
dojo.widget.attachProperties=["dojoAttachPoint","id"];
dojo.widget.eventAttachProperty="dojoAttachEvent";
dojo.widget.onBuildProperty="dojoOnBuild";
dojo.widget.waiNames=["waiRole","waiState"];
dojo.widget.wai={waiRole:{name:"waiRole","namespace":"http://www.w3.org/TR/xhtml2",alias:"x2",prefix:"wairole:"},waiState:{name:"waiState","namespace":"http://www.w3.org/2005/07/aaa",alias:"aaa",prefix:""},setAttr:function(node,ns,attr,_480){
if(dojo.render.html.ie){
node.setAttribute(this[ns].alias+":"+attr,this[ns].prefix+_480);
}else{
node.setAttributeNS(this[ns]["namespace"],attr,this[ns].prefix+_480);
}
},getAttr:function(node,ns,attr){
if(dojo.render.html.ie){
return node.getAttribute(this[ns].alias+":"+attr);
}else{
return node.getAttributeNS(this[ns]["namespace"],attr);
}
},removeAttr:function(node,ns,attr){
var _487=true;
if(dojo.render.html.ie){
_487=node.removeAttribute(this[ns].alias+":"+attr);
}else{
node.removeAttributeNS(this[ns]["namespace"],attr);
}
return _487;
}};
dojo.widget.attachTemplateNodes=function(_488,_489,_48a){
var _48b=dojo.dom.ELEMENT_NODE;
function trim(str){
return str.replace(/^\s+|\s+$/g,"");
}
if(!_488){
_488=_489.domNode;
}
if(_488.nodeType!=_48b){
return;
}
var _48d=_488.all||_488.getElementsByTagName("*");
var _48e=_489;
for(var x=-1;x<_48d.length;x++){
var _490=(x==-1)?_488:_48d[x];
var _491=[];
if(!_489.widgetsInTemplate||!_490.getAttribute("dojoType")){
for(var y=0;y<this.attachProperties.length;y++){
var _493=_490.getAttribute(this.attachProperties[y]);
if(_493){
_491=_493.split(";");
for(var z=0;z<_491.length;z++){
if(dojo.lang.isArray(_489[_491[z]])){
_489[_491[z]].push(_490);
}else{
_489[_491[z]]=_490;
}
}
break;
}
}
var _495=_490.getAttribute(this.eventAttachProperty);
if(_495){
var evts=_495.split(";");
for(var y=0;y<evts.length;y++){
if((!evts[y])||(!evts[y].length)){
continue;
}
var _497=null;
var tevt=trim(evts[y]);
if(evts[y].indexOf(":")>=0){
var _499=tevt.split(":");
tevt=trim(_499[0]);
_497=trim(_499[1]);
}
if(!_497){
_497=tevt;
}
var tf=function(){
var ntf=new String(_497);
return function(evt){
if(_48e[ntf]){
_48e[ntf](dojo.event.browser.fixEvent(evt,this));
}
};
}();
dojo.event.browser.addListener(_490,tevt,tf,false,true);
}
}
for(var y=0;y<_48a.length;y++){
var _49d=_490.getAttribute(_48a[y]);
if((_49d)&&(_49d.length)){
var _497=null;
var _49e=_48a[y].substr(4);
_497=trim(_49d);
var _49f=[_497];
if(_497.indexOf(";")>=0){
_49f=dojo.lang.map(_497.split(";"),trim);
}
for(var z=0;z<_49f.length;z++){
if(!_49f[z].length){
continue;
}
var tf=function(){
var ntf=new String(_49f[z]);
return function(evt){
if(_48e[ntf]){
_48e[ntf](dojo.event.browser.fixEvent(evt,this));
}
};
}();
dojo.event.browser.addListener(_490,_49e,tf,false,true);
}
}
}
}
var _4a2=_490.getAttribute(this.templateProperty);
if(_4a2){
_489[_4a2]=_490;
}
dojo.lang.forEach(dojo.widget.waiNames,function(name){
var wai=dojo.widget.wai[name];
var val=_490.getAttribute(wai.name);
if(val){
if(val.indexOf("-")==-1){
dojo.widget.wai.setAttr(_490,wai.name,"role",val);
}else{
var _4a6=val.split("-");
dojo.widget.wai.setAttr(_490,wai.name,_4a6[0],_4a6[1]);
}
}
},this);
var _4a7=_490.getAttribute(this.onBuildProperty);
if(_4a7){
eval("var node = baseNode; var widget = targetObj; "+_4a7);
}
}
};
dojo.widget.getDojoEventsFromStr=function(str){
var re=/(dojoOn([a-z]+)(\s?))=/gi;
var evts=str?str.match(re)||[]:[];
var ret=[];
var lem={};
for(var x=0;x<evts.length;x++){
if(evts[x].length<1){
continue;
}
var cm=evts[x].replace(/\s/,"");
cm=(cm.slice(0,cm.length-1));
if(!lem[cm]){
lem[cm]=true;
ret.push(cm);
}
}
return ret;
};
dojo.declare("dojo.widget.DomWidget",dojo.widget.Widget,function(){
if((arguments.length>0)&&(typeof arguments[0]=="object")){
this.create(arguments[0]);
}
},{templateNode:null,templateString:null,templateCssString:null,preventClobber:false,domNode:null,containerNode:null,widgetsInTemplate:false,addChild:function(_4af,_4b0,pos,ref,_4b3){
if(!this.isContainer){
dojo.debug("dojo.widget.DomWidget.addChild() attempted on non-container widget");
return null;
}else{
if(_4b3==undefined){
_4b3=this.children.length;
}
this.addWidgetAsDirectChild(_4af,_4b0,pos,ref,_4b3);
this.registerChild(_4af,_4b3);
}
return _4af;
},addWidgetAsDirectChild:function(_4b4,_4b5,pos,ref,_4b8){
if((!this.containerNode)&&(!_4b5)){
this.containerNode=this.domNode;
}
var cn=(_4b5)?_4b5:this.containerNode;
if(!pos){
pos="after";
}
if(!ref){
if(!cn){
cn=dojo.body();
}
ref=cn.lastChild;
}
if(!_4b8){
_4b8=0;
}
_4b4.domNode.setAttribute("dojoinsertionindex",_4b8);
if(!ref){
cn.appendChild(_4b4.domNode);
}else{
if(pos=="insertAtIndex"){
dojo.dom.insertAtIndex(_4b4.domNode,ref.parentNode,_4b8);
}else{
if((pos=="after")&&(ref===cn.lastChild)){
cn.appendChild(_4b4.domNode);
}else{
dojo.dom.insertAtPosition(_4b4.domNode,cn,pos);
}
}
}
},registerChild:function(_4ba,_4bb){
_4ba.dojoInsertionIndex=_4bb;
var idx=-1;
for(var i=0;i<this.children.length;i++){
if(this.children[i].dojoInsertionIndex<=_4bb){
idx=i;
}
}
this.children.splice(idx+1,0,_4ba);
_4ba.parent=this;
_4ba.addedTo(this,idx+1);
delete dojo.widget.manager.topWidgets[_4ba.widgetId];
},removeChild:function(_4be){
dojo.dom.removeNode(_4be.domNode);
return dojo.widget.DomWidget.superclass.removeChild.call(this,_4be);
},getFragNodeRef:function(frag){
if(!frag){
return null;
}
if(!frag[this.getNamespacedType()]){
dojo.raise("Error: no frag for widget type "+this.getNamespacedType()+", id "+this.widgetId+" (maybe a widget has set it's type incorrectly)");
}
return frag[this.getNamespacedType()]["nodeRef"];
},postInitialize:function(args,frag,_4c2){
var _4c3=this.getFragNodeRef(frag);
if(_4c2&&(_4c2.snarfChildDomOutput||!_4c3)){
_4c2.addWidgetAsDirectChild(this,"","insertAtIndex","",args["dojoinsertionindex"],_4c3);
}else{
if(_4c3){
if(this.domNode&&(this.domNode!==_4c3)){
this._sourceNodeRef=dojo.dom.replaceNode(_4c3,this.domNode);
}
}
}
if(_4c2){
_4c2.registerChild(this,args.dojoinsertionindex);
}else{
dojo.widget.manager.topWidgets[this.widgetId]=this;
}
if(this.widgetsInTemplate){
var _4c4=new dojo.xml.Parse();
var _4c5;
var _4c6=this.domNode.getElementsByTagName("*");
for(var i=0;i<_4c6.length;i++){
if(_4c6[i].getAttribute("dojoAttachPoint")=="subContainerWidget"){
_4c5=_4c6[i];
}
if(_4c6[i].getAttribute("dojoType")){
_4c6[i].setAttribute("isSubWidget",true);
}
}
if(this.isContainer&&!this.containerNode){
if(_4c5){
var src=this.getFragNodeRef(frag);
if(src){
dojo.dom.moveChildren(src,_4c5);
frag["dojoDontFollow"]=true;
}
}else{
dojo.debug("No subContainerWidget node can be found in template file for widget "+this);
}
}
var _4c9=_4c4.parseElement(this.domNode,null,true);
dojo.widget.getParser().createSubComponents(_4c9,this);
var _4ca=[];
var _4cb=[this];
var w;
while((w=_4cb.pop())){
for(var i=0;i<w.children.length;i++){
var _4cd=w.children[i];
if(_4cd._processedSubWidgets||!_4cd.extraArgs["issubwidget"]){
continue;
}
_4ca.push(_4cd);
if(_4cd.isContainer){
_4cb.push(_4cd);
}
}
}
for(var i=0;i<_4ca.length;i++){
var _4ce=_4ca[i];
if(_4ce._processedSubWidgets){
dojo.debug("This should not happen: widget._processedSubWidgets is already true!");
return;
}
_4ce._processedSubWidgets=true;
if(_4ce.extraArgs["dojoattachevent"]){
var evts=_4ce.extraArgs["dojoattachevent"].split(";");
for(var j=0;j<evts.length;j++){
var _4d1=null;
var tevt=dojo.string.trim(evts[j]);
if(tevt.indexOf(":")>=0){
var _4d3=tevt.split(":");
tevt=dojo.string.trim(_4d3[0]);
_4d1=dojo.string.trim(_4d3[1]);
}
if(!_4d1){
_4d1=tevt;
}
if(dojo.lang.isFunction(_4ce[tevt])){
dojo.event.kwConnect({srcObj:_4ce,srcFunc:tevt,targetObj:this,targetFunc:_4d1});
}else{
alert(tevt+" is not a function in widget "+_4ce);
}
}
}
if(_4ce.extraArgs["dojoattachpoint"]){
this[_4ce.extraArgs["dojoattachpoint"]]=_4ce;
}
}
}
if(this.isContainer&&!frag["dojoDontFollow"]){
dojo.widget.getParser().createSubComponents(frag,this);
}
},buildRendering:function(args,frag){
var ts=dojo.widget._templateCache[this.widgetType];
if(args["templatecsspath"]){
args["templateCssPath"]=args["templatecsspath"];
}
var _4d7=args["templateCssPath"]||this.templateCssPath;
if(_4d7&&!dojo.widget._cssFiles[_4d7.toString()]){
if((!this.templateCssString)&&(_4d7)){
this.templateCssString=dojo.hostenv.getText(_4d7);
this.templateCssPath=null;
}
dojo.widget._cssFiles[_4d7.toString()]=true;
}
if((this["templateCssString"])&&(!dojo.widget._cssStrings[this.templateCssString])){
dojo.html.insertCssText(this.templateCssString,null,_4d7);
dojo.widget._cssStrings[this.templateCssString]=true;
}
if((!this.preventClobber)&&((this.templatePath)||(this.templateNode)||((this["templateString"])&&(this.templateString.length))||((typeof ts!="undefined")&&((ts["string"])||(ts["node"]))))){
this.buildFromTemplate(args,frag);
}else{
this.domNode=this.getFragNodeRef(frag);
}
this.fillInTemplate(args,frag);
},buildFromTemplate:function(args,frag){
var _4da=false;
if(args["templatepath"]){
args["templatePath"]=args["templatepath"];
}
dojo.widget.fillFromTemplateCache(this,args["templatePath"],null,_4da);
var ts=dojo.widget._templateCache[this.templatePath?this.templatePath.toString():this.widgetType];
if((ts)&&(!_4da)){
if(!this.templateString.length){
this.templateString=ts["string"];
}
if(!this.templateNode){
this.templateNode=ts["node"];
}
}
var _4dc=false;
var node=null;
var tstr=this.templateString;
if((!this.templateNode)&&(this.templateString)){
_4dc=this.templateString.match(/\$\{([^\}]+)\}/g);
if(_4dc){
var hash=this.strings||{};
for(var key in dojo.widget.defaultStrings){
if(dojo.lang.isUndefined(hash[key])){
hash[key]=dojo.widget.defaultStrings[key];
}
}
for(var i=0;i<_4dc.length;i++){
var key=_4dc[i];
key=key.substring(2,key.length-1);
var kval=(key.substring(0,5)=="this.")?dojo.lang.getObjPathValue(key.substring(5),this):hash[key];
var _4e3;
if((kval)||(dojo.lang.isString(kval))){
_4e3=new String((dojo.lang.isFunction(kval))?kval.call(this,key,this.templateString):kval);
while(_4e3.indexOf("\"")>-1){
_4e3=_4e3.replace("\"","&quot;");
}
tstr=tstr.replace(_4dc[i],_4e3);
}
}
}else{
this.templateNode=this.createNodesFromText(this.templateString,true)[0];
if(!_4da){
ts.node=this.templateNode;
}
}
}
if((!this.templateNode)&&(!_4dc)){
dojo.debug("DomWidget.buildFromTemplate: could not create template");
return false;
}else{
if(!_4dc){
node=this.templateNode.cloneNode(true);
if(!node){
return false;
}
}else{
node=this.createNodesFromText(tstr,true)[0];
}
}
this.domNode=node;
this.attachTemplateNodes();
if(this.isContainer&&this.containerNode){
var src=this.getFragNodeRef(frag);
if(src){
dojo.dom.moveChildren(src,this.containerNode);
}
}
},attachTemplateNodes:function(_4e5,_4e6){
if(!_4e5){
_4e5=this.domNode;
}
if(!_4e6){
_4e6=this;
}
return dojo.widget.attachTemplateNodes(_4e5,_4e6,dojo.widget.getDojoEventsFromStr(this.templateString));
},fillInTemplate:function(){
},destroyRendering:function(){
try{
dojo.dom.destroyNode(this.domNode);
delete this.domNode;
}
catch(e){
}
if(this._sourceNodeRef){
try{
dojo.dom.destroyNode(this._sourceNodeRef);
}
catch(e){
}
}
},createNodesFromText:function(){
dojo.unimplemented("dojo.widget.DomWidget.createNodesFromText");
}});
dojo.provide("dojo.html.display");
dojo.html._toggle=function(node,_4e8,_4e9){
node=dojo.byId(node);
_4e9(node,!_4e8(node));
return _4e8(node);
};
dojo.html.show=function(node){
node=dojo.byId(node);
if(dojo.html.getStyleProperty(node,"display")=="none"){
dojo.html.setStyle(node,"display",(node.dojoDisplayCache||""));
node.dojoDisplayCache=undefined;
}
};
dojo.html.hide=function(node){
node=dojo.byId(node);
if(typeof node["dojoDisplayCache"]=="undefined"){
var d=dojo.html.getStyleProperty(node,"display");
if(d!="none"){
node.dojoDisplayCache=d;
}
}
dojo.html.setStyle(node,"display","none");
};
dojo.html.setShowing=function(node,_4ee){
dojo.html[(_4ee?"show":"hide")](node);
};
dojo.html.isShowing=function(node){
return (dojo.html.getStyleProperty(node,"display")!="none");
};
dojo.html.toggleShowing=function(node){
return dojo.html._toggle(node,dojo.html.isShowing,dojo.html.setShowing);
};
dojo.html.displayMap={tr:"",td:"",th:"",img:"inline",span:"inline",input:"inline",button:"inline"};
dojo.html.suggestDisplayByTagName=function(node){
node=dojo.byId(node);
if(node&&node.tagName){
var tag=node.tagName.toLowerCase();
return (tag in dojo.html.displayMap?dojo.html.displayMap[tag]:"block");
}
};
dojo.html.setDisplay=function(node,_4f4){
dojo.html.setStyle(node,"display",((_4f4 instanceof String||typeof _4f4=="string")?_4f4:(_4f4?dojo.html.suggestDisplayByTagName(node):"none")));
};
dojo.html.isDisplayed=function(node){
return (dojo.html.getComputedStyle(node,"display")!="none");
};
dojo.html.toggleDisplay=function(node){
return dojo.html._toggle(node,dojo.html.isDisplayed,dojo.html.setDisplay);
};
dojo.html.setVisibility=function(node,_4f8){
dojo.html.setStyle(node,"visibility",((_4f8 instanceof String||typeof _4f8=="string")?_4f8:(_4f8?"visible":"hidden")));
};
dojo.html.isVisible=function(node){
return (dojo.html.getComputedStyle(node,"visibility")!="hidden");
};
dojo.html.toggleVisibility=function(node){
return dojo.html._toggle(node,dojo.html.isVisible,dojo.html.setVisibility);
};
dojo.html.setOpacity=function(node,_4fc,_4fd){
node=dojo.byId(node);
var h=dojo.render.html;
if(!_4fd){
if(_4fc>=1){
if(h.ie){
dojo.html.clearOpacity(node);
return;
}else{
_4fc=0.999999;
}
}else{
if(_4fc<0){
_4fc=0;
}
}
}
if(h.ie){
if(node.nodeName.toLowerCase()=="tr"){
var tds=node.getElementsByTagName("td");
for(var x=0;x<tds.length;x++){
tds[x].style.filter="Alpha(Opacity="+_4fc*100+")";
}
}
node.style.filter="Alpha(Opacity="+_4fc*100+")";
}else{
if(h.moz){
node.style.opacity=_4fc;
node.style.MozOpacity=_4fc;
}else{
if(h.safari){
node.style.opacity=_4fc;
node.style.KhtmlOpacity=_4fc;
}else{
node.style.opacity=_4fc;
}
}
}
};
dojo.html.clearOpacity=function(node){
node=dojo.byId(node);
var ns=node.style;
var h=dojo.render.html;
if(h.ie){
try{
if(node.filters&&node.filters.alpha){
ns.filter="";
}
}
catch(e){
}
}else{
if(h.moz){
ns.opacity=1;
ns.MozOpacity=1;
}else{
if(h.safari){
ns.opacity=1;
ns.KhtmlOpacity=1;
}else{
ns.opacity=1;
}
}
}
};
dojo.html.getOpacity=function(node){
node=dojo.byId(node);
var h=dojo.render.html;
if(h.ie){
var opac=(node.filters&&node.filters.alpha&&typeof node.filters.alpha.opacity=="number"?node.filters.alpha.opacity:100)/100;
}else{
var opac=node.style.opacity||node.style.MozOpacity||node.style.KhtmlOpacity||1;
}
return opac>=0.999999?1:Number(opac);
};
dojo.provide("dojo.html.layout");
dojo.html.sumAncestorProperties=function(node,prop){
node=dojo.byId(node);
if(!node){
return 0;
}
var _509=0;
while(node){
if(dojo.html.getComputedStyle(node,"position")=="fixed"){
return 0;
}
var val=node[prop];
if(val){
_509+=val-0;
if(node==dojo.body()){
break;
}
}
node=node.parentNode;
}
return _509;
};
dojo.html.setStyleAttributes=function(node,_50c){
node=dojo.byId(node);
var _50d=_50c.replace(/(;)?\s*$/,"").split(";");
for(var i=0;i<_50d.length;i++){
var _50f=_50d[i].split(":");
var name=_50f[0].replace(/\s*$/,"").replace(/^\s*/,"").toLowerCase();
var _511=_50f[1].replace(/\s*$/,"").replace(/^\s*/,"");
switch(name){
case "opacity":
dojo.html.setOpacity(node,_511);
break;
case "content-height":
dojo.html.setContentBox(node,{height:_511});
break;
case "content-width":
dojo.html.setContentBox(node,{width:_511});
break;
case "outer-height":
dojo.html.setMarginBox(node,{height:_511});
break;
case "outer-width":
dojo.html.setMarginBox(node,{width:_511});
break;
default:
node.style[dojo.html.toCamelCase(name)]=_511;
}
}
};
dojo.html.boxSizing={MARGIN_BOX:"margin-box",BORDER_BOX:"border-box",PADDING_BOX:"padding-box",CONTENT_BOX:"content-box"};
dojo.html.getAbsolutePosition=dojo.html.abs=function(node,_513,_514){
node=dojo.byId(node,node.ownerDocument);
var ret={x:0,y:0};
var bs=dojo.html.boxSizing;
if(!_514){
_514=bs.CONTENT_BOX;
}
var _517=2;
var _518;
switch(_514){
case bs.MARGIN_BOX:
_518=3;
break;
case bs.BORDER_BOX:
_518=2;
break;
case bs.PADDING_BOX:
default:
_518=1;
break;
case bs.CONTENT_BOX:
_518=0;
break;
}
var h=dojo.render.html;
var db=document["body"]||document["documentElement"];
if(h.ie){
with(node.getBoundingClientRect()){
ret.x=left-2;
ret.y=top-2;
}
}else{
if(document.getBoxObjectFor){
_517=1;
try{
var bo=document.getBoxObjectFor(node);
ret.x=bo.x-dojo.html.sumAncestorProperties(node,"scrollLeft");
ret.y=bo.y-dojo.html.sumAncestorProperties(node,"scrollTop");
}
catch(e){
}
}else{
if(node["offsetParent"]){
var _51c;
if((h.safari)&&(node.style.getPropertyValue("position")=="absolute")&&(node.parentNode==db)){
_51c=db;
}else{
_51c=db.parentNode;
}
if(node.parentNode!=db){
var nd=node;
if(dojo.render.html.opera){
nd=db;
}
ret.x-=dojo.html.sumAncestorProperties(nd,"scrollLeft");
ret.y-=dojo.html.sumAncestorProperties(nd,"scrollTop");
}
var _51e=node;
do{
var n=_51e["offsetLeft"];
if(!h.opera||n>0){
ret.x+=isNaN(n)?0:n;
}
var m=_51e["offsetTop"];
ret.y+=isNaN(m)?0:m;
_51e=_51e.offsetParent;
}while((_51e!=_51c)&&(_51e!=null));
}else{
if(node["x"]&&node["y"]){
ret.x+=isNaN(node.x)?0:node.x;
ret.y+=isNaN(node.y)?0:node.y;
}
}
}
}
if(_513){
var _521=dojo.html.getScroll();
ret.y+=_521.top;
ret.x+=_521.left;
}
var _522=[dojo.html.getPaddingExtent,dojo.html.getBorderExtent,dojo.html.getMarginExtent];
if(_517>_518){
for(var i=_518;i<_517;++i){
ret.y+=_522[i](node,"top");
ret.x+=_522[i](node,"left");
}
}else{
if(_517<_518){
for(var i=_518;i>_517;--i){
ret.y-=_522[i-1](node,"top");
ret.x-=_522[i-1](node,"left");
}
}
}
ret.top=ret.y;
ret.left=ret.x;
return ret;
};
dojo.html.isPositionAbsolute=function(node){
return (dojo.html.getComputedStyle(node,"position")=="absolute");
};
dojo.html._sumPixelValues=function(node,_526,_527){
var _528=0;
for(var x=0;x<_526.length;x++){
_528+=dojo.html.getPixelValue(node,_526[x],_527);
}
return _528;
};
dojo.html.getMargin=function(node){
return {width:dojo.html._sumPixelValues(node,["margin-left","margin-right"],(dojo.html.getComputedStyle(node,"position")=="absolute")),height:dojo.html._sumPixelValues(node,["margin-top","margin-bottom"],(dojo.html.getComputedStyle(node,"position")=="absolute"))};
};
dojo.html.getBorder=function(node){
return {width:dojo.html.getBorderExtent(node,"left")+dojo.html.getBorderExtent(node,"right"),height:dojo.html.getBorderExtent(node,"top")+dojo.html.getBorderExtent(node,"bottom")};
};
dojo.html.getBorderExtent=function(node,side){
return (dojo.html.getStyle(node,"border-"+side+"-style")=="none"?0:dojo.html.getPixelValue(node,"border-"+side+"-width"));
};
dojo.html.getMarginExtent=function(node,side){
return dojo.html._sumPixelValues(node,["margin-"+side],dojo.html.isPositionAbsolute(node));
};
dojo.html.getPaddingExtent=function(node,side){
return dojo.html._sumPixelValues(node,["padding-"+side],true);
};
dojo.html.getPadding=function(node){
return {width:dojo.html._sumPixelValues(node,["padding-left","padding-right"],true),height:dojo.html._sumPixelValues(node,["padding-top","padding-bottom"],true)};
};
dojo.html.getPadBorder=function(node){
var pad=dojo.html.getPadding(node);
var _535=dojo.html.getBorder(node);
return {width:pad.width+_535.width,height:pad.height+_535.height};
};
dojo.html.getBoxSizing=function(node){
var h=dojo.render.html;
var bs=dojo.html.boxSizing;
if(((h.ie)||(h.opera))&&node.nodeName!="IMG"){
var cm=document["compatMode"];
if((cm=="BackCompat")||(cm=="QuirksMode")){
return bs.BORDER_BOX;
}else{
return bs.CONTENT_BOX;
}
}else{
if(arguments.length==0){
node=document.documentElement;
}
var _53a=dojo.html.getStyle(node,"-moz-box-sizing");
if(!_53a){
_53a=dojo.html.getStyle(node,"box-sizing");
}
return (_53a?_53a:bs.CONTENT_BOX);
}
};
dojo.html.isBorderBox=function(node){
return (dojo.html.getBoxSizing(node)==dojo.html.boxSizing.BORDER_BOX);
};
dojo.html.getBorderBox=function(node){
node=dojo.byId(node);
return {width:node.offsetWidth,height:node.offsetHeight};
};
dojo.html.getPaddingBox=function(node){
var box=dojo.html.getBorderBox(node);
var _53f=dojo.html.getBorder(node);
return {width:box.width-_53f.width,height:box.height-_53f.height};
};
dojo.html.getContentBox=function(node){
node=dojo.byId(node);
var _541=dojo.html.getPadBorder(node);
return {width:node.offsetWidth-_541.width,height:node.offsetHeight-_541.height};
};
dojo.html.setContentBox=function(node,args){
node=dojo.byId(node);
var _544=0;
var _545=0;
var isbb=dojo.html.isBorderBox(node);
var _547=(isbb?dojo.html.getPadBorder(node):{width:0,height:0});
var ret={};
if(typeof args.width!="undefined"){
_544=args.width+_547.width;
ret.width=dojo.html.setPositivePixelValue(node,"width",_544);
}
if(typeof args.height!="undefined"){
_545=args.height+_547.height;
ret.height=dojo.html.setPositivePixelValue(node,"height",_545);
}
return ret;
};
dojo.html.getMarginBox=function(node){
var _54a=dojo.html.getBorderBox(node);
var _54b=dojo.html.getMargin(node);
return {width:_54a.width+_54b.width,height:_54a.height+_54b.height};
};
dojo.html.setMarginBox=function(node,args){
node=dojo.byId(node);
var _54e=0;
var _54f=0;
var isbb=dojo.html.isBorderBox(node);
var _551=(!isbb?dojo.html.getPadBorder(node):{width:0,height:0});
var _552=dojo.html.getMargin(node);
var ret={};
if(typeof args.width!="undefined"){
_54e=args.width-_551.width;
_54e-=_552.width;
ret.width=dojo.html.setPositivePixelValue(node,"width",_54e);
}
if(typeof args.height!="undefined"){
_54f=args.height-_551.height;
_54f-=_552.height;
ret.height=dojo.html.setPositivePixelValue(node,"height",_54f);
}
return ret;
};
dojo.html.getElementBox=function(node,type){
var bs=dojo.html.boxSizing;
switch(type){
case bs.MARGIN_BOX:
return dojo.html.getMarginBox(node);
case bs.BORDER_BOX:
return dojo.html.getBorderBox(node);
case bs.PADDING_BOX:
return dojo.html.getPaddingBox(node);
case bs.CONTENT_BOX:
default:
return dojo.html.getContentBox(node);
}
};
dojo.html.toCoordinateObject=dojo.html.toCoordinateArray=function(_557,_558,_559){
if(_557 instanceof Array||typeof _557=="array"){
dojo.deprecated("dojo.html.toCoordinateArray","use dojo.html.toCoordinateObject({left: , top: , width: , height: }) instead","0.5");
while(_557.length<4){
_557.push(0);
}
while(_557.length>4){
_557.pop();
}
var ret={left:_557[0],top:_557[1],width:_557[2],height:_557[3]};
}else{
if(!_557.nodeType&&!(_557 instanceof String||typeof _557=="string")&&("width" in _557||"height" in _557||"left" in _557||"x" in _557||"top" in _557||"y" in _557)){
var ret={left:_557.left||_557.x||0,top:_557.top||_557.y||0,width:_557.width||0,height:_557.height||0};
}else{
var node=dojo.byId(_557);
var pos=dojo.html.abs(node,_558,_559);
var _55d=dojo.html.getMarginBox(node);
var ret={left:pos.left,top:pos.top,width:_55d.width,height:_55d.height};
}
}
ret.x=ret.left;
ret.y=ret.top;
return ret;
};
dojo.html.setMarginBoxWidth=dojo.html.setOuterWidth=function(node,_55f){
return dojo.html._callDeprecated("setMarginBoxWidth","setMarginBox",arguments,"width");
};
dojo.html.setMarginBoxHeight=dojo.html.setOuterHeight=function(){
return dojo.html._callDeprecated("setMarginBoxHeight","setMarginBox",arguments,"height");
};
dojo.html.getMarginBoxWidth=dojo.html.getOuterWidth=function(){
return dojo.html._callDeprecated("getMarginBoxWidth","getMarginBox",arguments,null,"width");
};
dojo.html.getMarginBoxHeight=dojo.html.getOuterHeight=function(){
return dojo.html._callDeprecated("getMarginBoxHeight","getMarginBox",arguments,null,"height");
};
dojo.html.getTotalOffset=function(node,type,_562){
return dojo.html._callDeprecated("getTotalOffset","getAbsolutePosition",arguments,null,type);
};
dojo.html.getAbsoluteX=function(node,_564){
return dojo.html._callDeprecated("getAbsoluteX","getAbsolutePosition",arguments,null,"x");
};
dojo.html.getAbsoluteY=function(node,_566){
return dojo.html._callDeprecated("getAbsoluteY","getAbsolutePosition",arguments,null,"y");
};
dojo.html.totalOffsetLeft=function(node,_568){
return dojo.html._callDeprecated("totalOffsetLeft","getAbsolutePosition",arguments,null,"left");
};
dojo.html.totalOffsetTop=function(node,_56a){
return dojo.html._callDeprecated("totalOffsetTop","getAbsolutePosition",arguments,null,"top");
};
dojo.html.getMarginWidth=function(node){
return dojo.html._callDeprecated("getMarginWidth","getMargin",arguments,null,"width");
};
dojo.html.getMarginHeight=function(node){
return dojo.html._callDeprecated("getMarginHeight","getMargin",arguments,null,"height");
};
dojo.html.getBorderWidth=function(node){
return dojo.html._callDeprecated("getBorderWidth","getBorder",arguments,null,"width");
};
dojo.html.getBorderHeight=function(node){
return dojo.html._callDeprecated("getBorderHeight","getBorder",arguments,null,"height");
};
dojo.html.getPaddingWidth=function(node){
return dojo.html._callDeprecated("getPaddingWidth","getPadding",arguments,null,"width");
};
dojo.html.getPaddingHeight=function(node){
return dojo.html._callDeprecated("getPaddingHeight","getPadding",arguments,null,"height");
};
dojo.html.getPadBorderWidth=function(node){
return dojo.html._callDeprecated("getPadBorderWidth","getPadBorder",arguments,null,"width");
};
dojo.html.getPadBorderHeight=function(node){
return dojo.html._callDeprecated("getPadBorderHeight","getPadBorder",arguments,null,"height");
};
dojo.html.getBorderBoxWidth=dojo.html.getInnerWidth=function(){
return dojo.html._callDeprecated("getBorderBoxWidth","getBorderBox",arguments,null,"width");
};
dojo.html.getBorderBoxHeight=dojo.html.getInnerHeight=function(){
return dojo.html._callDeprecated("getBorderBoxHeight","getBorderBox",arguments,null,"height");
};
dojo.html.getContentBoxWidth=dojo.html.getContentWidth=function(){
return dojo.html._callDeprecated("getContentBoxWidth","getContentBox",arguments,null,"width");
};
dojo.html.getContentBoxHeight=dojo.html.getContentHeight=function(){
return dojo.html._callDeprecated("getContentBoxHeight","getContentBox",arguments,null,"height");
};
dojo.html.setContentBoxWidth=dojo.html.setContentWidth=function(node,_574){
return dojo.html._callDeprecated("setContentBoxWidth","setContentBox",arguments,"width");
};
dojo.html.setContentBoxHeight=dojo.html.setContentHeight=function(node,_576){
return dojo.html._callDeprecated("setContentBoxHeight","setContentBox",arguments,"height");
};
dojo.provide("dojo.html.util");
dojo.html.getElementWindow=function(_577){
return dojo.html.getDocumentWindow(_577.ownerDocument);
};
dojo.html.getDocumentWindow=function(doc){
if(dojo.render.html.safari&&!doc._parentWindow){
var fix=function(win){
win.document._parentWindow=win;
for(var i=0;i<win.frames.length;i++){
fix(win.frames[i]);
}
};
fix(window.top);
}
if(dojo.render.html.ie&&window!==document.parentWindow&&!doc._parentWindow){
doc.parentWindow.execScript("document._parentWindow = window;","Javascript");
var win=doc._parentWindow;
doc._parentWindow=null;
return win;
}
return doc._parentWindow||doc.parentWindow||doc.defaultView;
};
dojo.html.gravity=function(node,e){
node=dojo.byId(node);
var _57f=dojo.html.getCursorPosition(e);
with(dojo.html){
var _580=getAbsolutePosition(node,true);
var bb=getBorderBox(node);
var _582=_580.x+(bb.width/2);
var _583=_580.y+(bb.height/2);
}
with(dojo.html.gravity){
return ((_57f.x<_582?WEST:EAST)|(_57f.y<_583?NORTH:SOUTH));
}
};
dojo.html.gravity.NORTH=1;
dojo.html.gravity.SOUTH=1<<1;
dojo.html.gravity.EAST=1<<2;
dojo.html.gravity.WEST=1<<3;
dojo.html.overElement=function(_584,e){
_584=dojo.byId(_584);
var _586=dojo.html.getCursorPosition(e);
var bb=dojo.html.getBorderBox(_584);
var _588=dojo.html.getAbsolutePosition(_584,true,dojo.html.boxSizing.BORDER_BOX);
var top=_588.y;
var _58a=top+bb.height;
var left=_588.x;
var _58c=left+bb.width;
return (_586.x>=left&&_586.x<=_58c&&_586.y>=top&&_586.y<=_58a);
};
dojo.html.renderedTextContent=function(node){
node=dojo.byId(node);
var _58e="";
if(node==null){
return _58e;
}
for(var i=0;i<node.childNodes.length;i++){
switch(node.childNodes[i].nodeType){
case 1:
case 5:
var _590="unknown";
try{
_590=dojo.html.getStyle(node.childNodes[i],"display");
}
catch(E){
}
switch(_590){
case "block":
case "list-item":
case "run-in":
case "table":
case "table-row-group":
case "table-header-group":
case "table-footer-group":
case "table-row":
case "table-column-group":
case "table-column":
case "table-cell":
case "table-caption":
_58e+="\n";
_58e+=dojo.html.renderedTextContent(node.childNodes[i]);
_58e+="\n";
break;
case "none":
break;
default:
if(node.childNodes[i].tagName&&node.childNodes[i].tagName.toLowerCase()=="br"){
_58e+="\n";
}else{
_58e+=dojo.html.renderedTextContent(node.childNodes[i]);
}
break;
}
break;
case 3:
case 2:
case 4:
var text=node.childNodes[i].nodeValue;
var _592="unknown";
try{
_592=dojo.html.getStyle(node,"text-transform");
}
catch(E){
}
switch(_592){
case "capitalize":
var _593=text.split(" ");
for(var i=0;i<_593.length;i++){
_593[i]=_593[i].charAt(0).toUpperCase()+_593[i].substring(1);
}
text=_593.join(" ");
break;
case "uppercase":
text=text.toUpperCase();
break;
case "lowercase":
text=text.toLowerCase();
break;
default:
break;
}
switch(_592){
case "nowrap":
break;
case "pre-wrap":
break;
case "pre-line":
break;
case "pre":
break;
default:
text=text.replace(/\s+/," ");
if(/\s$/.test(_58e)){
text.replace(/^\s/,"");
}
break;
}
_58e+=text;
break;
default:
break;
}
}
return _58e;
};
dojo.html.createNodesFromText=function(txt,trim){
if(trim){
txt=txt.replace(/^\s+|\s+$/g,"");
}
var tn=dojo.doc().createElement("div");
tn.style.visibility="hidden";
dojo.body().appendChild(tn);
var _597="none";
if((/^<t[dh][\s\r\n>]/i).test(txt.replace(/^\s+/))){
txt="<table><tbody><tr>"+txt+"</tr></tbody></table>";
_597="cell";
}else{
if((/^<tr[\s\r\n>]/i).test(txt.replace(/^\s+/))){
txt="<table><tbody>"+txt+"</tbody></table>";
_597="row";
}else{
if((/^<(thead|tbody|tfoot)[\s\r\n>]/i).test(txt.replace(/^\s+/))){
txt="<table>"+txt+"</table>";
_597="section";
}
}
}
tn.innerHTML=txt;
if(tn["normalize"]){
tn.normalize();
}
var _598=null;
switch(_597){
case "cell":
_598=tn.getElementsByTagName("tr")[0];
break;
case "row":
_598=tn.getElementsByTagName("tbody")[0];
break;
case "section":
_598=tn.getElementsByTagName("table")[0];
break;
default:
_598=tn;
break;
}
var _599=[];
for(var x=0;x<_598.childNodes.length;x++){
_599.push(_598.childNodes[x].cloneNode(true));
}
tn.style.display="none";
dojo.html.destroyNode(tn);
return _599;
};
dojo.html.placeOnScreen=function(node,_59c,_59d,_59e,_59f,_5a0,_5a1){
if(_59c instanceof Array||typeof _59c=="array"){
_5a1=_5a0;
_5a0=_59f;
_59f=_59e;
_59e=_59d;
_59d=_59c[1];
_59c=_59c[0];
}
if(_5a0 instanceof String||typeof _5a0=="string"){
_5a0=_5a0.split(",");
}
if(!isNaN(_59e)){
_59e=[Number(_59e),Number(_59e)];
}else{
if(!(_59e instanceof Array||typeof _59e=="array")){
_59e=[0,0];
}
}
var _5a2=dojo.html.getScroll().offset;
var view=dojo.html.getViewport();
node=dojo.byId(node);
var _5a4=node.style.display;
node.style.display="";
var bb=dojo.html.getBorderBox(node);
var w=bb.width;
var h=bb.height;
node.style.display=_5a4;
if(!(_5a0 instanceof Array||typeof _5a0=="array")){
_5a0=["TL"];
}
var _5a8,_5a9,_5aa=Infinity,_5ab;
for(var _5ac=0;_5ac<_5a0.length;++_5ac){
var _5ad=_5a0[_5ac];
var _5ae=true;
var tryX=_59c-(_5ad.charAt(1)=="L"?0:w)+_59e[0]*(_5ad.charAt(1)=="L"?1:-1);
var tryY=_59d-(_5ad.charAt(0)=="T"?0:h)+_59e[1]*(_5ad.charAt(0)=="T"?1:-1);
if(_59f){
tryX-=_5a2.x;
tryY-=_5a2.y;
}
if(tryX<0){
tryX=0;
_5ae=false;
}
if(tryY<0){
tryY=0;
_5ae=false;
}
var x=tryX+w;
if(x>view.width){
x=view.width-w;
_5ae=false;
}else{
x=tryX;
}
x=Math.max(_59e[0],x)+_5a2.x;
var y=tryY+h;
if(y>view.height){
y=view.height-h;
_5ae=false;
}else{
y=tryY;
}
y=Math.max(_59e[1],y)+_5a2.y;
if(_5ae){
_5a8=x;
_5a9=y;
_5aa=0;
_5ab=_5ad;
break;
}else{
var dist=Math.pow(x-tryX-_5a2.x,2)+Math.pow(y-tryY-_5a2.y,2);
if(_5aa>dist){
_5aa=dist;
_5a8=x;
_5a9=y;
_5ab=_5ad;
}
}
}
if(!_5a1){
node.style.left=_5a8+"px";
node.style.top=_5a9+"px";
}
return {left:_5a8,top:_5a9,x:_5a8,y:_5a9,dist:_5aa,corner:_5ab};
};
dojo.html.placeOnScreenPoint=function(node,_5b5,_5b6,_5b7,_5b8){
dojo.deprecated("dojo.html.placeOnScreenPoint","use dojo.html.placeOnScreen() instead","0.5");
return dojo.html.placeOnScreen(node,_5b5,_5b6,_5b7,_5b8,["TL","TR","BL","BR"]);
};
dojo.html.placeOnScreenAroundElement=function(node,_5ba,_5bb,_5bc,_5bd,_5be){
var best,_5c0=Infinity;
_5ba=dojo.byId(_5ba);
var _5c1=_5ba.style.display;
_5ba.style.display="";
var mb=dojo.html.getElementBox(_5ba,_5bc);
var _5c3=mb.width;
var _5c4=mb.height;
var _5c5=dojo.html.getAbsolutePosition(_5ba,true,_5bc);
_5ba.style.display=_5c1;
for(var _5c6 in _5bd){
var pos,_5c8,_5c9;
var _5ca=_5bd[_5c6];
_5c8=_5c5.x+(_5c6.charAt(1)=="L"?0:_5c3);
_5c9=_5c5.y+(_5c6.charAt(0)=="T"?0:_5c4);
pos=dojo.html.placeOnScreen(node,_5c8,_5c9,_5bb,true,_5ca,true);
if(pos.dist==0){
best=pos;
break;
}else{
if(_5c0>pos.dist){
_5c0=pos.dist;
best=pos;
}
}
}
if(!_5be){
node.style.left=best.left+"px";
node.style.top=best.top+"px";
}
return best;
};
dojo.html.scrollIntoView=function(node){
if(!node){
return;
}
if(dojo.render.html.ie){
if(dojo.html.getBorderBox(node.parentNode).height<=node.parentNode.scrollHeight){
node.scrollIntoView(false);
}
}else{
if(dojo.render.html.mozilla){
node.scrollIntoView(false);
}else{
var _5cc=node.parentNode;
var _5cd=_5cc.scrollTop+dojo.html.getBorderBox(_5cc).height;
var _5ce=node.offsetTop+dojo.html.getMarginBox(node).height;
if(_5cd<_5ce){
_5cc.scrollTop+=(_5ce-_5cd);
}else{
if(_5cc.scrollTop>node.offsetTop){
_5cc.scrollTop-=(_5cc.scrollTop-node.offsetTop);
}
}
}
}
};
dojo.provide("dojo.gfx.color");
dojo.gfx.color.Color=function(r,g,b,a){
if(dojo.lang.isArray(r)){
this.r=r[0];
this.g=r[1];
this.b=r[2];
this.a=r[3]||1;
}else{
if(dojo.lang.isString(r)){
var rgb=dojo.gfx.color.extractRGB(r);
this.r=rgb[0];
this.g=rgb[1];
this.b=rgb[2];
this.a=g||1;
}else{
if(r instanceof dojo.gfx.color.Color){
this.r=r.r;
this.b=r.b;
this.g=r.g;
this.a=r.a;
}else{
this.r=r;
this.g=g;
this.b=b;
this.a=a;
}
}
}
};
dojo.gfx.color.Color.fromArray=function(arr){
return new dojo.gfx.color.Color(arr[0],arr[1],arr[2],arr[3]);
};
dojo.extend(dojo.gfx.color.Color,{toRgb:function(_5d5){
if(_5d5){
return this.toRgba();
}else{
return [this.r,this.g,this.b];
}
},toRgba:function(){
return [this.r,this.g,this.b,this.a];
},toHex:function(){
return dojo.gfx.color.rgb2hex(this.toRgb());
},toCss:function(){
return "rgb("+this.toRgb().join()+")";
},toString:function(){
return this.toHex();
},blend:function(_5d6,_5d7){
var rgb=null;
if(dojo.lang.isArray(_5d6)){
rgb=_5d6;
}else{
if(_5d6 instanceof dojo.gfx.color.Color){
rgb=_5d6.toRgb();
}else{
rgb=new dojo.gfx.color.Color(_5d6).toRgb();
}
}
return dojo.gfx.color.blend(this.toRgb(),rgb,_5d7);
}});
dojo.gfx.color.named={white:[255,255,255],black:[0,0,0],red:[255,0,0],green:[0,255,0],lime:[0,255,0],blue:[0,0,255],navy:[0,0,128],gray:[128,128,128],silver:[192,192,192]};
dojo.gfx.color.blend=function(a,b,_5db){
if(typeof a=="string"){
return dojo.gfx.color.blendHex(a,b,_5db);
}
if(!_5db){
_5db=0;
}
_5db=Math.min(Math.max(-1,_5db),1);
_5db=((_5db+1)/2);
var c=[];
for(var x=0;x<3;x++){
c[x]=parseInt(b[x]+((a[x]-b[x])*_5db));
}
return c;
};
dojo.gfx.color.blendHex=function(a,b,_5e0){
return dojo.gfx.color.rgb2hex(dojo.gfx.color.blend(dojo.gfx.color.hex2rgb(a),dojo.gfx.color.hex2rgb(b),_5e0));
};
dojo.gfx.color.extractRGB=function(_5e1){
var hex="0123456789abcdef";
_5e1=_5e1.toLowerCase();
if(_5e1.indexOf("rgb")==0){
var _5e3=_5e1.match(/rgba*\((\d+), *(\d+), *(\d+)/i);
var ret=_5e3.splice(1,3);
return ret;
}else{
var _5e5=dojo.gfx.color.hex2rgb(_5e1);
if(_5e5){
return _5e5;
}else{
return dojo.gfx.color.named[_5e1]||[255,255,255];
}
}
};
dojo.gfx.color.hex2rgb=function(hex){
var _5e7="0123456789ABCDEF";
var rgb=new Array(3);
if(hex.indexOf("#")==0){
hex=hex.substring(1);
}
hex=hex.toUpperCase();
if(hex.replace(new RegExp("["+_5e7+"]","g"),"")!=""){
return null;
}
if(hex.length==3){
rgb[0]=hex.charAt(0)+hex.charAt(0);
rgb[1]=hex.charAt(1)+hex.charAt(1);
rgb[2]=hex.charAt(2)+hex.charAt(2);
}else{
rgb[0]=hex.substring(0,2);
rgb[1]=hex.substring(2,4);
rgb[2]=hex.substring(4);
}
for(var i=0;i<rgb.length;i++){
rgb[i]=_5e7.indexOf(rgb[i].charAt(0))*16+_5e7.indexOf(rgb[i].charAt(1));
}
return rgb;
};
dojo.gfx.color.rgb2hex=function(r,g,b){
if(dojo.lang.isArray(r)){
g=r[1]||0;
b=r[2]||0;
r=r[0]||0;
}
var ret=dojo.lang.map([r,g,b],function(x){
x=new Number(x);
var s=x.toString(16);
while(s.length<2){
s="0"+s;
}
return s;
});
ret.unshift("#");
return ret.join("");
};
dojo.provide("dojo.lfx.Animation");
dojo.lfx.Line=function(_5f0,end){
this.start=_5f0;
this.end=end;
if(dojo.lang.isArray(_5f0)){
var diff=[];
dojo.lang.forEach(this.start,function(s,i){
diff[i]=this.end[i]-s;
},this);
this.getValue=function(n){
var res=[];
dojo.lang.forEach(this.start,function(s,i){
res[i]=(diff[i]*n)+s;
},this);
return res;
};
}else{
var diff=end-_5f0;
this.getValue=function(n){
return (diff*n)+this.start;
};
}
};
dojo.lfx.easeDefault=function(n){
if(dojo.render.html.khtml){
return (parseFloat("0.5")+((Math.sin((n+parseFloat("1.5"))*Math.PI))/2));
}else{
return (0.5+((Math.sin((n+1.5)*Math.PI))/2));
}
};
dojo.lfx.easeIn=function(n){
return Math.pow(n,3);
};
dojo.lfx.easeOut=function(n){
return (1-Math.pow(1-n,3));
};
dojo.lfx.easeInOut=function(n){
return ((3*Math.pow(n,2))-(2*Math.pow(n,3)));
};
dojo.lfx.IAnimation=function(){
};
dojo.lang.extend(dojo.lfx.IAnimation,{curve:null,duration:1000,easing:null,repeatCount:0,rate:25,handler:null,beforeBegin:null,onBegin:null,onAnimate:null,onEnd:null,onPlay:null,onPause:null,onStop:null,play:null,pause:null,stop:null,connect:function(evt,_5ff,_600){
if(!_600){
_600=_5ff;
_5ff=this;
}
_600=dojo.lang.hitch(_5ff,_600);
var _601=this[evt]||function(){
};
this[evt]=function(){
var ret=_601.apply(this,arguments);
_600.apply(this,arguments);
return ret;
};
return this;
},fire:function(evt,args){
if(this[evt]){
this[evt].apply(this,(args||[]));
}
return this;
},repeat:function(_605){
this.repeatCount=_605;
return this;
},_active:false,_paused:false});
dojo.lfx.Animation=function(_606,_607,_608,_609,_60a,rate){
dojo.lfx.IAnimation.call(this);
if(dojo.lang.isNumber(_606)||(!_606&&_607.getValue)){
rate=_60a;
_60a=_609;
_609=_608;
_608=_607;
_607=_606;
_606=null;
}else{
if(_606.getValue||dojo.lang.isArray(_606)){
rate=_609;
_60a=_608;
_609=_607;
_608=_606;
_607=null;
_606=null;
}
}
if(dojo.lang.isArray(_608)){
this.curve=new dojo.lfx.Line(_608[0],_608[1]);
}else{
this.curve=_608;
}
if(_607!=null&&_607>0){
this.duration=_607;
}
if(_60a){
this.repeatCount=_60a;
}
if(rate){
this.rate=rate;
}
if(_606){
dojo.lang.forEach(["handler","beforeBegin","onBegin","onEnd","onPlay","onStop","onAnimate"],function(item){
if(_606[item]){
this.connect(item,_606[item]);
}
},this);
}
if(_609&&dojo.lang.isFunction(_609)){
this.easing=_609;
}
};
dojo.inherits(dojo.lfx.Animation,dojo.lfx.IAnimation);
dojo.lang.extend(dojo.lfx.Animation,{_startTime:null,_endTime:null,_timer:null,_percent:0,_startRepeatCount:0,play:function(_60d,_60e){
if(_60e){
clearTimeout(this._timer);
this._active=false;
this._paused=false;
this._percent=0;
}else{
if(this._active&&!this._paused){
return this;
}
}
this.fire("handler",["beforeBegin"]);
this.fire("beforeBegin");
if(_60d>0){
setTimeout(dojo.lang.hitch(this,function(){
this.play(null,_60e);
}),_60d);
return this;
}
this._startTime=new Date().valueOf();
if(this._paused){
this._startTime-=(this.duration*this._percent/100);
}
this._endTime=this._startTime+this.duration;
this._active=true;
this._paused=false;
var step=this._percent/100;
var _610=this.curve.getValue(step);
if(this._percent==0){
if(!this._startRepeatCount){
this._startRepeatCount=this.repeatCount;
}
this.fire("handler",["begin",_610]);
this.fire("onBegin",[_610]);
}
this.fire("handler",["play",_610]);
this.fire("onPlay",[_610]);
this._cycle();
return this;
},pause:function(){
clearTimeout(this._timer);
if(!this._active){
return this;
}
this._paused=true;
var _611=this.curve.getValue(this._percent/100);
this.fire("handler",["pause",_611]);
this.fire("onPause",[_611]);
return this;
},gotoPercent:function(pct,_613){
clearTimeout(this._timer);
this._active=true;
this._paused=true;
this._percent=pct;
if(_613){
this.play();
}
return this;
},stop:function(_614){
clearTimeout(this._timer);
var step=this._percent/100;
if(_614){
step=1;
}
var _616=this.curve.getValue(step);
this.fire("handler",["stop",_616]);
this.fire("onStop",[_616]);
this._active=false;
this._paused=false;
return this;
},status:function(){
if(this._active){
return this._paused?"paused":"playing";
}else{
return "stopped";
}
return this;
},_cycle:function(){
clearTimeout(this._timer);
if(this._active){
var curr=new Date().valueOf();
var step=(curr-this._startTime)/(this._endTime-this._startTime);
if(step>=1){
step=1;
this._percent=100;
}else{
this._percent=step*100;
}
if((this.easing)&&(dojo.lang.isFunction(this.easing))){
step=this.easing(step);
}
var _619=this.curve.getValue(step);
this.fire("handler",["animate",_619]);
this.fire("onAnimate",[_619]);
if(step<1){
this._timer=setTimeout(dojo.lang.hitch(this,"_cycle"),this.rate);
}else{
this._active=false;
this.fire("handler",["end"]);
this.fire("onEnd");
if(this.repeatCount>0){
this.repeatCount--;
this.play(null,true);
}else{
if(this.repeatCount==-1){
this.play(null,true);
}else{
if(this._startRepeatCount){
this.repeatCount=this._startRepeatCount;
this._startRepeatCount=0;
}
}
}
}
}
return this;
}});
dojo.lfx.Combine=function(_61a){
dojo.lfx.IAnimation.call(this);
this._anims=[];
this._animsEnded=0;
var _61b=arguments;
if(_61b.length==1&&(dojo.lang.isArray(_61b[0])||dojo.lang.isArrayLike(_61b[0]))){
_61b=_61b[0];
}
dojo.lang.forEach(_61b,function(anim){
this._anims.push(anim);
anim.connect("onEnd",dojo.lang.hitch(this,"_onAnimsEnded"));
},this);
};
dojo.inherits(dojo.lfx.Combine,dojo.lfx.IAnimation);
dojo.lang.extend(dojo.lfx.Combine,{_animsEnded:0,play:function(_61d,_61e){
if(!this._anims.length){
return this;
}
this.fire("beforeBegin");
if(_61d>0){
setTimeout(dojo.lang.hitch(this,function(){
this.play(null,_61e);
}),_61d);
return this;
}
if(_61e||this._anims[0].percent==0){
this.fire("onBegin");
}
this.fire("onPlay");
this._animsCall("play",null,_61e);
return this;
},pause:function(){
this.fire("onPause");
this._animsCall("pause");
return this;
},stop:function(_61f){
this.fire("onStop");
this._animsCall("stop",_61f);
return this;
},_onAnimsEnded:function(){
this._animsEnded++;
if(this._animsEnded>=this._anims.length){
this.fire("onEnd");
}
return this;
},_animsCall:function(_620){
var args=[];
if(arguments.length>1){
for(var i=1;i<arguments.length;i++){
args.push(arguments[i]);
}
}
var _623=this;
dojo.lang.forEach(this._anims,function(anim){
anim[_620](args);
},_623);
return this;
}});
dojo.lfx.Chain=function(_625){
dojo.lfx.IAnimation.call(this);
this._anims=[];
this._currAnim=-1;
var _626=arguments;
if(_626.length==1&&(dojo.lang.isArray(_626[0])||dojo.lang.isArrayLike(_626[0]))){
_626=_626[0];
}
var _627=this;
dojo.lang.forEach(_626,function(anim,i,_62a){
this._anims.push(anim);
if(i<_62a.length-1){
anim.connect("onEnd",dojo.lang.hitch(this,"_playNext"));
}else{
anim.connect("onEnd",dojo.lang.hitch(this,function(){
this.fire("onEnd");
}));
}
},this);
};
dojo.inherits(dojo.lfx.Chain,dojo.lfx.IAnimation);
dojo.lang.extend(dojo.lfx.Chain,{_currAnim:-1,play:function(_62b,_62c){
if(!this._anims.length){
return this;
}
if(_62c||!this._anims[this._currAnim]){
this._currAnim=0;
}
var _62d=this._anims[this._currAnim];
this.fire("beforeBegin");
if(_62b>0){
setTimeout(dojo.lang.hitch(this,function(){
this.play(null,_62c);
}),_62b);
return this;
}
if(_62d){
if(this._currAnim==0){
this.fire("handler",["begin",this._currAnim]);
this.fire("onBegin",[this._currAnim]);
}
this.fire("onPlay",[this._currAnim]);
_62d.play(null,_62c);
}
return this;
},pause:function(){
if(this._anims[this._currAnim]){
this._anims[this._currAnim].pause();
this.fire("onPause",[this._currAnim]);
}
return this;
},playPause:function(){
if(this._anims.length==0){
return this;
}
if(this._currAnim==-1){
this._currAnim=0;
}
var _62e=this._anims[this._currAnim];
if(_62e){
if(!_62e._active||_62e._paused){
this.play();
}else{
this.pause();
}
}
return this;
},stop:function(){
var _62f=this._anims[this._currAnim];
if(_62f){
_62f.stop();
this.fire("onStop",[this._currAnim]);
}
return _62f;
},_playNext:function(){
if(this._currAnim==-1||this._anims.length==0){
return this;
}
this._currAnim++;
if(this._anims[this._currAnim]){
this._anims[this._currAnim].play(null,true);
}
return this;
}});
dojo.lfx.combine=function(_630){
var _631=arguments;
if(dojo.lang.isArray(arguments[0])){
_631=arguments[0];
}
if(_631.length==1){
return _631[0];
}
return new dojo.lfx.Combine(_631);
};
dojo.lfx.chain=function(_632){
var _633=arguments;
if(dojo.lang.isArray(arguments[0])){
_633=arguments[0];
}
if(_633.length==1){
return _633[0];
}
return new dojo.lfx.Chain(_633);
};
dojo.provide("dojo.html.color");
dojo.html.getBackgroundColor=function(node){
node=dojo.byId(node);
var _635;
do{
_635=dojo.html.getStyle(node,"background-color");
if(_635.toLowerCase()=="rgba(0, 0, 0, 0)"){
_635="transparent";
}
if(node==document.getElementsByTagName("body")[0]){
node=null;
break;
}
node=node.parentNode;
}while(node&&dojo.lang.inArray(["transparent",""],_635));
if(_635=="transparent"){
_635=[255,255,255,0];
}else{
_635=dojo.gfx.color.extractRGB(_635);
}
return _635;
};
dojo.provide("dojo.lfx.html");
dojo.lfx.html._byId=function(_636){
if(!_636){
return [];
}
if(dojo.lang.isArrayLike(_636)){
if(!_636.alreadyChecked){
var n=[];
dojo.lang.forEach(_636,function(node){
n.push(dojo.byId(node));
});
n.alreadyChecked=true;
return n;
}else{
return _636;
}
}else{
var n=[];
n.push(dojo.byId(_636));
n.alreadyChecked=true;
return n;
}
};
dojo.lfx.html.propertyAnimation=function(_639,_63a,_63b,_63c,_63d){
_639=dojo.lfx.html._byId(_639);
var _63e={"propertyMap":_63a,"nodes":_639,"duration":_63b,"easing":_63c||dojo.lfx.easeDefault};
var _63f=function(args){
if(args.nodes.length==1){
var pm=args.propertyMap;
if(!dojo.lang.isArray(args.propertyMap)){
var parr=[];
for(var _643 in pm){
pm[_643].property=_643;
parr.push(pm[_643]);
}
pm=args.propertyMap=parr;
}
dojo.lang.forEach(pm,function(prop){
if(dj_undef("start",prop)){
if(prop.property!="opacity"){
prop.start=parseInt(dojo.html.getComputedStyle(args.nodes[0],prop.property));
}else{
prop.start=dojo.html.getOpacity(args.nodes[0]);
}
}
});
}
};
var _645=function(_646){
var _647=[];
dojo.lang.forEach(_646,function(c){
_647.push(Math.round(c));
});
return _647;
};
var _649=function(n,_64b){
n=dojo.byId(n);
if(!n||!n.style){
return;
}
for(var s in _64b){
try{
if(s=="opacity"){
dojo.html.setOpacity(n,_64b[s]);
}else{
n.style[s]=_64b[s];
}
}
catch(e){
dojo.debug(e);
}
}
};
var _64d=function(_64e){
this._properties=_64e;
this.diffs=new Array(_64e.length);
dojo.lang.forEach(_64e,function(prop,i){
if(dojo.lang.isFunction(prop.start)){
prop.start=prop.start(prop,i);
}
if(dojo.lang.isFunction(prop.end)){
prop.end=prop.end(prop,i);
}
if(dojo.lang.isArray(prop.start)){
this.diffs[i]=null;
}else{
if(prop.start instanceof dojo.gfx.color.Color){
prop.startRgb=prop.start.toRgb();
prop.endRgb=prop.end.toRgb();
}else{
this.diffs[i]=prop.end-prop.start;
}
}
},this);
this.getValue=function(n){
var ret={};
dojo.lang.forEach(this._properties,function(prop,i){
var _655=null;
if(dojo.lang.isArray(prop.start)){
}else{
if(prop.start instanceof dojo.gfx.color.Color){
_655=(prop.units||"rgb")+"(";
for(var j=0;j<prop.startRgb.length;j++){
_655+=Math.round(((prop.endRgb[j]-prop.startRgb[j])*n)+prop.startRgb[j])+(j<prop.startRgb.length-1?",":"");
}
_655+=")";
}else{
_655=((this.diffs[i])*n)+prop.start+(prop.property!="opacity"?prop.units||"px":"");
}
}
ret[dojo.html.toCamelCase(prop.property)]=_655;
},this);
return ret;
};
};
var anim=new dojo.lfx.Animation({beforeBegin:function(){
_63f(_63e);
anim.curve=new _64d(_63e.propertyMap);
},onAnimate:function(_658){
dojo.lang.forEach(_63e.nodes,function(node){
_649(node,_658);
});
}},_63e.duration,null,_63e.easing);
if(_63d){
for(var x in _63d){
if(dojo.lang.isFunction(_63d[x])){
anim.connect(x,anim,_63d[x]);
}
}
}
return anim;
};
dojo.lfx.html._makeFadeable=function(_65b){
var _65c=function(node){
if(dojo.render.html.ie){
if((node.style.zoom.length==0)&&(dojo.html.getStyle(node,"zoom")=="normal")){
node.style.zoom="1";
}
if((node.style.width.length==0)&&(dojo.html.getStyle(node,"width")=="auto")){
node.style.width="auto";
}
}
};
if(dojo.lang.isArrayLike(_65b)){
dojo.lang.forEach(_65b,_65c);
}else{
_65c(_65b);
}
};
dojo.lfx.html.fade=function(_65e,_65f,_660,_661,_662){
_65e=dojo.lfx.html._byId(_65e);
var _663={property:"opacity"};
if(!dj_undef("start",_65f)){
_663.start=_65f.start;
}else{
_663.start=function(){
return dojo.html.getOpacity(_65e[0]);
};
}
if(!dj_undef("end",_65f)){
_663.end=_65f.end;
}else{
dojo.raise("dojo.lfx.html.fade needs an end value");
}
var anim=dojo.lfx.propertyAnimation(_65e,[_663],_660,_661);
anim.connect("beforeBegin",function(){
dojo.lfx.html._makeFadeable(_65e);
});
if(_662){
anim.connect("onEnd",function(){
_662(_65e,anim);
});
}
return anim;
};
dojo.lfx.html.fadeIn=function(_665,_666,_667,_668){
return dojo.lfx.html.fade(_665,{end:1},_666,_667,_668);
};
dojo.lfx.html.fadeOut=function(_669,_66a,_66b,_66c){
return dojo.lfx.html.fade(_669,{end:0},_66a,_66b,_66c);
};
dojo.lfx.html.fadeShow=function(_66d,_66e,_66f,_670){
_66d=dojo.lfx.html._byId(_66d);
dojo.lang.forEach(_66d,function(node){
dojo.html.setOpacity(node,0);
});
var anim=dojo.lfx.html.fadeIn(_66d,_66e,_66f,_670);
anim.connect("beforeBegin",function(){
if(dojo.lang.isArrayLike(_66d)){
dojo.lang.forEach(_66d,dojo.html.show);
}else{
dojo.html.show(_66d);
}
});
return anim;
};
dojo.lfx.html.fadeHide=function(_673,_674,_675,_676){
var anim=dojo.lfx.html.fadeOut(_673,_674,_675,function(){
if(dojo.lang.isArrayLike(_673)){
dojo.lang.forEach(_673,dojo.html.hide);
}else{
dojo.html.hide(_673);
}
if(_676){
_676(_673,anim);
}
});
return anim;
};
dojo.lfx.html.wipeIn=function(_678,_679,_67a,_67b){
_678=dojo.lfx.html._byId(_678);
var _67c=[];
dojo.lang.forEach(_678,function(node){
var _67e={};
var _67f,_680,_681;
with(node.style){
_67f=top;
_680=left;
_681=position;
top="-9999px";
left="-9999px";
position="absolute";
display="";
}
var _682=dojo.html.getBorderBox(node).height;
with(node.style){
top=_67f;
left=_680;
position=_681;
display="none";
}
var anim=dojo.lfx.propertyAnimation(node,{"height":{start:1,end:function(){
return _682;
}}},_679,_67a);
anim.connect("beforeBegin",function(){
_67e.overflow=node.style.overflow;
_67e.height=node.style.height;
with(node.style){
overflow="hidden";
_682="1px";
}
dojo.html.show(node);
});
anim.connect("onEnd",function(){
with(node.style){
overflow=_67e.overflow;
_682=_67e.height;
}
if(_67b){
_67b(node,anim);
}
});
_67c.push(anim);
});
return dojo.lfx.combine(_67c);
};
dojo.lfx.html.wipeOut=function(_684,_685,_686,_687){
_684=dojo.lfx.html._byId(_684);
var _688=[];
dojo.lang.forEach(_684,function(node){
var _68a={};
var anim=dojo.lfx.propertyAnimation(node,{"height":{start:function(){
return dojo.html.getContentBox(node).height;
},end:1}},_685,_686,{"beforeBegin":function(){
_68a.overflow=node.style.overflow;
_68a.height=node.style.height;
with(node.style){
overflow="hidden";
}
dojo.html.show(node);
},"onEnd":function(){
dojo.html.hide(node);
with(node.style){
overflow=_68a.overflow;
height=_68a.height;
}
if(_687){
_687(node,anim);
}
}});
_688.push(anim);
});
return dojo.lfx.combine(_688);
};
dojo.lfx.html.slideTo=function(_68c,_68d,_68e,_68f,_690){
_68c=dojo.lfx.html._byId(_68c);
var _691=[];
var _692=dojo.html.getComputedStyle;
if(dojo.lang.isArray(_68d)){
dojo.deprecated("dojo.lfx.html.slideTo(node, array)","use dojo.lfx.html.slideTo(node, {top: value, left: value});","0.5");
_68d={top:_68d[0],left:_68d[1]};
}
dojo.lang.forEach(_68c,function(node){
var top=null;
var left=null;
var init=(function(){
var _697=node;
return function(){
var pos=_692(_697,"position");
top=(pos=="absolute"?node.offsetTop:parseInt(_692(node,"top"))||0);
left=(pos=="absolute"?node.offsetLeft:parseInt(_692(node,"left"))||0);
if(!dojo.lang.inArray(["absolute","relative"],pos)){
var ret=dojo.html.abs(_697,true);
dojo.html.setStyleAttributes(_697,"position:absolute;top:"+ret.y+"px;left:"+ret.x+"px;");
top=ret.y;
left=ret.x;
}
};
})();
init();
var anim=dojo.lfx.propertyAnimation(node,{"top":{start:top,end:(_68d.top||0)},"left":{start:left,end:(_68d.left||0)}},_68e,_68f,{"beforeBegin":init});
if(_690){
anim.connect("onEnd",function(){
_690(_68c,anim);
});
}
_691.push(anim);
});
return dojo.lfx.combine(_691);
};
dojo.lfx.html.slideBy=function(_69b,_69c,_69d,_69e,_69f){
_69b=dojo.lfx.html._byId(_69b);
var _6a0=[];
var _6a1=dojo.html.getComputedStyle;
if(dojo.lang.isArray(_69c)){
dojo.deprecated("dojo.lfx.html.slideBy(node, array)","use dojo.lfx.html.slideBy(node, {top: value, left: value});","0.5");
_69c={top:_69c[0],left:_69c[1]};
}
dojo.lang.forEach(_69b,function(node){
var top=null;
var left=null;
var init=(function(){
var _6a6=node;
return function(){
var pos=_6a1(_6a6,"position");
top=(pos=="absolute"?node.offsetTop:parseInt(_6a1(node,"top"))||0);
left=(pos=="absolute"?node.offsetLeft:parseInt(_6a1(node,"left"))||0);
if(!dojo.lang.inArray(["absolute","relative"],pos)){
var ret=dojo.html.abs(_6a6,true);
dojo.html.setStyleAttributes(_6a6,"position:absolute;top:"+ret.y+"px;left:"+ret.x+"px;");
top=ret.y;
left=ret.x;
}
};
})();
init();
var anim=dojo.lfx.propertyAnimation(node,{"top":{start:top,end:top+(_69c.top||0)},"left":{start:left,end:left+(_69c.left||0)}},_69d,_69e).connect("beforeBegin",init);
if(_69f){
anim.connect("onEnd",function(){
_69f(_69b,anim);
});
}
_6a0.push(anim);
});
return dojo.lfx.combine(_6a0);
};
dojo.lfx.html.explode=function(_6aa,_6ab,_6ac,_6ad,_6ae){
var h=dojo.html;
_6aa=dojo.byId(_6aa);
_6ab=dojo.byId(_6ab);
var _6b0=h.toCoordinateObject(_6aa,true);
var _6b1=document.createElement("div");
h.copyStyle(_6b1,_6ab);
if(_6ab.explodeClassName){
_6b1.className=_6ab.explodeClassName;
}
with(_6b1.style){
position="absolute";
display="none";
var _6b2=h.getStyle(_6aa,"background-color");
backgroundColor=_6b2?_6b2.toLowerCase():"transparent";
backgroundColor=(backgroundColor=="transparent")?"rgb(221, 221, 221)":backgroundColor;
}
dojo.body().appendChild(_6b1);
with(_6ab.style){
visibility="hidden";
display="block";
}
var _6b3=h.toCoordinateObject(_6ab,true);
with(_6ab.style){
display="none";
visibility="visible";
}
var _6b4={opacity:{start:0.5,end:1}};
dojo.lang.forEach(["height","width","top","left"],function(type){
_6b4[type]={start:_6b0[type],end:_6b3[type]};
});
var anim=new dojo.lfx.propertyAnimation(_6b1,_6b4,_6ac,_6ad,{"beforeBegin":function(){
h.setDisplay(_6b1,"block");
},"onEnd":function(){
h.setDisplay(_6ab,"block");
_6b1.parentNode.removeChild(_6b1);
}});
if(_6ae){
anim.connect("onEnd",function(){
_6ae(_6ab,anim);
});
}
return anim;
};
dojo.lfx.html.implode=function(_6b7,end,_6b9,_6ba,_6bb){
var h=dojo.html;
_6b7=dojo.byId(_6b7);
end=dojo.byId(end);
var _6bd=dojo.html.toCoordinateObject(_6b7,true);
var _6be=dojo.html.toCoordinateObject(end,true);
var _6bf=document.createElement("div");
dojo.html.copyStyle(_6bf,_6b7);
if(_6b7.explodeClassName){
_6bf.className=_6b7.explodeClassName;
}
dojo.html.setOpacity(_6bf,0.3);
with(_6bf.style){
position="absolute";
display="none";
backgroundColor=h.getStyle(_6b7,"background-color").toLowerCase();
}
dojo.body().appendChild(_6bf);
var _6c0={opacity:{start:1,end:0.5}};
dojo.lang.forEach(["height","width","top","left"],function(type){
_6c0[type]={start:_6bd[type],end:_6be[type]};
});
var anim=new dojo.lfx.propertyAnimation(_6bf,_6c0,_6b9,_6ba,{"beforeBegin":function(){
dojo.html.hide(_6b7);
dojo.html.show(_6bf);
},"onEnd":function(){
_6bf.parentNode.removeChild(_6bf);
}});
if(_6bb){
anim.connect("onEnd",function(){
_6bb(_6b7,anim);
});
}
return anim;
};
dojo.lfx.html.highlight=function(_6c3,_6c4,_6c5,_6c6,_6c7){
_6c3=dojo.lfx.html._byId(_6c3);
var _6c8=[];
dojo.lang.forEach(_6c3,function(node){
var _6ca=dojo.html.getBackgroundColor(node);
var bg=dojo.html.getStyle(node,"background-color").toLowerCase();
var _6cc=dojo.html.getStyle(node,"background-image");
var _6cd=(bg=="transparent"||bg=="rgba(0, 0, 0, 0)");
while(_6ca.length>3){
_6ca.pop();
}
var rgb=new dojo.gfx.color.Color(_6c4);
var _6cf=new dojo.gfx.color.Color(_6ca);
var anim=dojo.lfx.propertyAnimation(node,{"background-color":{start:rgb,end:_6cf}},_6c5,_6c6,{"beforeBegin":function(){
if(_6cc){
node.style.backgroundImage="none";
}
node.style.backgroundColor="rgb("+rgb.toRgb().join(",")+")";
},"onEnd":function(){
if(_6cc){
node.style.backgroundImage=_6cc;
}
if(_6cd){
node.style.backgroundColor="transparent";
}
if(_6c7){
_6c7(node,anim);
}
}});
_6c8.push(anim);
});
return dojo.lfx.combine(_6c8);
};
dojo.lfx.html.unhighlight=function(_6d1,_6d2,_6d3,_6d4,_6d5){
_6d1=dojo.lfx.html._byId(_6d1);
var _6d6=[];
dojo.lang.forEach(_6d1,function(node){
var _6d8=new dojo.gfx.color.Color(dojo.html.getBackgroundColor(node));
var rgb=new dojo.gfx.color.Color(_6d2);
var _6da=dojo.html.getStyle(node,"background-image");
var anim=dojo.lfx.propertyAnimation(node,{"background-color":{start:_6d8,end:rgb}},_6d3,_6d4,{"beforeBegin":function(){
if(_6da){
node.style.backgroundImage="none";
}
node.style.backgroundColor="rgb("+_6d8.toRgb().join(",")+")";
},"onEnd":function(){
if(_6d5){
_6d5(node,anim);
}
}});
_6d6.push(anim);
});
return dojo.lfx.combine(_6d6);
};
dojo.lang.mixin(dojo.lfx,dojo.lfx.html);
dojo.provide("dojo.lfx.*");
dojo.provide("dojo.lfx.toggle");
dojo.lfx.toggle.plain={show:function(node,_6dd,_6de,_6df){
dojo.html.show(node);
if(dojo.lang.isFunction(_6df)){
_6df();
}
},hide:function(node,_6e1,_6e2,_6e3){
dojo.html.hide(node);
if(dojo.lang.isFunction(_6e3)){
_6e3();
}
}};
dojo.lfx.toggle.fade={show:function(node,_6e5,_6e6,_6e7){
dojo.lfx.fadeShow(node,_6e5,_6e6,_6e7).play();
},hide:function(node,_6e9,_6ea,_6eb){
dojo.lfx.fadeHide(node,_6e9,_6ea,_6eb).play();
}};
dojo.lfx.toggle.wipe={show:function(node,_6ed,_6ee,_6ef){
dojo.lfx.wipeIn(node,_6ed,_6ee,_6ef).play();
},hide:function(node,_6f1,_6f2,_6f3){
dojo.lfx.wipeOut(node,_6f1,_6f2,_6f3).play();
}};
dojo.lfx.toggle.explode={show:function(node,_6f5,_6f6,_6f7,_6f8){
dojo.lfx.explode(_6f8||{x:0,y:0,width:0,height:0},node,_6f5,_6f6,_6f7).play();
},hide:function(node,_6fa,_6fb,_6fc,_6fd){
dojo.lfx.implode(node,_6fd||{x:0,y:0,width:0,height:0},_6fa,_6fb,_6fc).play();
}};
dojo.provide("dojo.widget.HtmlWidget");
dojo.declare("dojo.widget.HtmlWidget",dojo.widget.DomWidget,{templateCssPath:null,templatePath:null,lang:"",toggle:"plain",toggleDuration:150,initialize:function(args,frag){
},postMixInProperties:function(args,frag){
if(this.lang===""){
this.lang=null;
}
this.toggleObj=dojo.lfx.toggle[this.toggle.toLowerCase()]||dojo.lfx.toggle.plain;
},createNodesFromText:function(txt,wrap){
return dojo.html.createNodesFromText(txt,wrap);
},destroyRendering:function(_704){
try{
if(this.bgIframe){
this.bgIframe.remove();
delete this.bgIframe;
}
if(!_704&&this.domNode){
dojo.event.browser.clean(this.domNode);
}
dojo.widget.HtmlWidget.superclass.destroyRendering.call(this);
}
catch(e){
}
},isShowing:function(){
return dojo.html.isShowing(this.domNode);
},toggleShowing:function(){
if(this.isShowing()){
this.hide();
}else{
this.show();
}
},show:function(){
if(this.isShowing()){
return;
}
this.animationInProgress=true;
this.toggleObj.show(this.domNode,this.toggleDuration,null,dojo.lang.hitch(this,this.onShow),this.explodeSrc);
},onShow:function(){
this.animationInProgress=false;
this.checkSize();
},hide:function(){
if(!this.isShowing()){
return;
}
this.animationInProgress=true;
this.toggleObj.hide(this.domNode,this.toggleDuration,null,dojo.lang.hitch(this,this.onHide),this.explodeSrc);
},onHide:function(){
this.animationInProgress=false;
},_isResized:function(w,h){
if(!this.isShowing()){
return false;
}
var wh=dojo.html.getMarginBox(this.domNode);
var _708=w||wh.width;
var _709=h||wh.height;
if(this.width==_708&&this.height==_709){
return false;
}
this.width=_708;
this.height=_709;
return true;
},checkSize:function(){
if(!this._isResized()){
return;
}
this.onResized();
},resizeTo:function(w,h){
dojo.html.setMarginBox(this.domNode,{width:w,height:h});
if(this.isShowing()){
this.onResized();
}
},resizeSoon:function(){
if(this.isShowing()){
dojo.lang.setTimeout(this,this.onResized,0);
}
},onResized:function(){
dojo.lang.forEach(this.children,function(_70c){
if(_70c.checkSize){
_70c.checkSize();
}
});
}});
dojo.provide("dojo.widget.*");
dojo.provide("dojo.string.common");
dojo.string.trim=function(str,wh){
if(!str.replace){
return str;
}
if(!str.length){
return str;
}
var re=(wh>0)?(/^\s+/):(wh<0)?(/\s+$/):(/^\s+|\s+$/g);
return str.replace(re,"");
};
dojo.string.trimStart=function(str){
return dojo.string.trim(str,1);
};
dojo.string.trimEnd=function(str){
return dojo.string.trim(str,-1);
};
dojo.string.repeat=function(str,_713,_714){
var out="";
for(var i=0;i<_713;i++){
out+=str;
if(_714&&i<_713-1){
out+=_714;
}
}
return out;
};
dojo.string.pad=function(str,len,c,dir){
var out=String(str);
if(!c){
c="0";
}
if(!dir){
dir=1;
}
while(out.length<len){
if(dir>0){
out=c+out;
}else{
out+=c;
}
}
return out;
};
dojo.string.padLeft=function(str,len,c){
return dojo.string.pad(str,len,c,1);
};
dojo.string.padRight=function(str,len,c){
return dojo.string.pad(str,len,c,-1);
};
dojo.provide("dojo.string");
dojo.provide("dojo.io.common");
dojo.io.transports=[];
dojo.io.hdlrFuncNames=["load","error","timeout"];
dojo.io.Request=function(url,_723,_724,_725){
if((arguments.length==1)&&(arguments[0].constructor==Object)){
this.fromKwArgs(arguments[0]);
}else{
this.url=url;
if(_723){
this.mimetype=_723;
}
if(_724){
this.transport=_724;
}
if(arguments.length>=4){
this.changeUrl=_725;
}
}
};
dojo.lang.extend(dojo.io.Request,{url:"",mimetype:"text/plain",method:"GET",content:undefined,transport:undefined,changeUrl:undefined,formNode:undefined,sync:false,bindSuccess:false,useCache:false,preventCache:false,load:function(type,data,_728,_729){
},error:function(type,_72b,_72c,_72d){
},timeout:function(type,_72f,_730,_731){
},handle:function(type,data,_734,_735){
},timeoutSeconds:0,abort:function(){
},fromKwArgs:function(_736){
if(_736["url"]){
_736.url=_736.url.toString();
}
if(_736["formNode"]){
_736.formNode=dojo.byId(_736.formNode);
}
if(!_736["method"]&&_736["formNode"]&&_736["formNode"].method){
_736.method=_736["formNode"].method;
}
if(!_736["handle"]&&_736["handler"]){
_736.handle=_736.handler;
}
if(!_736["load"]&&_736["loaded"]){
_736.load=_736.loaded;
}
if(!_736["changeUrl"]&&_736["changeURL"]){
_736.changeUrl=_736.changeURL;
}
_736.encoding=dojo.lang.firstValued(_736["encoding"],djConfig["bindEncoding"],"");
_736.sendTransport=dojo.lang.firstValued(_736["sendTransport"],djConfig["ioSendTransport"],false);
var _737=dojo.lang.isFunction;
for(var x=0;x<dojo.io.hdlrFuncNames.length;x++){
var fn=dojo.io.hdlrFuncNames[x];
if(_736[fn]&&_737(_736[fn])){
continue;
}
if(_736["handle"]&&_737(_736["handle"])){
_736[fn]=_736.handle;
}
}
dojo.lang.mixin(this,_736);
}});
dojo.io.Error=function(msg,type,num){
this.message=msg;
this.type=type||"unknown";
this.number=num||0;
};
dojo.io.transports.addTransport=function(name){
this.push(name);
this[name]=dojo.io[name];
};
dojo.io.bind=function(_73e){
if(!(_73e instanceof dojo.io.Request)){
try{
_73e=new dojo.io.Request(_73e);
}
catch(e){
dojo.debug(e);
}
}
var _73f="";
if(_73e["transport"]){
_73f=_73e["transport"];
if(!this[_73f]){
dojo.io.sendBindError(_73e,"No dojo.io.bind() transport with name '"+_73e["transport"]+"'.");
return _73e;
}
if(!this[_73f].canHandle(_73e)){
dojo.io.sendBindError(_73e,"dojo.io.bind() transport with name '"+_73e["transport"]+"' cannot handle this type of request.");
return _73e;
}
}else{
for(var x=0;x<dojo.io.transports.length;x++){
var tmp=dojo.io.transports[x];
if((this[tmp])&&(this[tmp].canHandle(_73e))){
_73f=tmp;
break;
}
}
if(_73f==""){
dojo.io.sendBindError(_73e,"None of the loaded transports for dojo.io.bind()"+" can handle the request.");
return _73e;
}
}
this[_73f].bind(_73e);
_73e.bindSuccess=true;
return _73e;
};
dojo.io.sendBindError=function(_742,_743){
if((typeof _742.error=="function"||typeof _742.handle=="function")&&(typeof setTimeout=="function"||typeof setTimeout=="object")){
var _744=new dojo.io.Error(_743);
setTimeout(function(){
_742[(typeof _742.error=="function")?"error":"handle"]("error",_744,null,_742);
},50);
}else{
dojo.raise(_743);
}
};
dojo.io.queueBind=function(_745){
if(!(_745 instanceof dojo.io.Request)){
try{
_745=new dojo.io.Request(_745);
}
catch(e){
dojo.debug(e);
}
}
var _746=_745.load;
_745.load=function(){
dojo.io._queueBindInFlight=false;
var ret=_746.apply(this,arguments);
dojo.io._dispatchNextQueueBind();
return ret;
};
var _748=_745.error;
_745.error=function(){
dojo.io._queueBindInFlight=false;
var ret=_748.apply(this,arguments);
dojo.io._dispatchNextQueueBind();
return ret;
};
dojo.io._bindQueue.push(_745);
dojo.io._dispatchNextQueueBind();
return _745;
};
dojo.io._dispatchNextQueueBind=function(){
if(!dojo.io._queueBindInFlight){
dojo.io._queueBindInFlight=true;
if(dojo.io._bindQueue.length>0){
dojo.io.bind(dojo.io._bindQueue.shift());
}else{
dojo.io._queueBindInFlight=false;
}
}
};
dojo.io._bindQueue=[];
dojo.io._queueBindInFlight=false;
dojo.io.argsFromMap=function(map,_74b,last){
var enc=/utf/i.test(_74b||"")?encodeURIComponent:dojo.string.encodeAscii;
var _74e=[];
var _74f=new Object();
for(var name in map){
var _751=function(elt){
var val=enc(name)+"="+enc(elt);
_74e[(last==name)?"push":"unshift"](val);
};
if(!_74f[name]){
var _754=map[name];
if(dojo.lang.isArray(_754)){
dojo.lang.forEach(_754,_751);
}else{
_751(_754);
}
}
}
return _74e.join("&");
};
dojo.io.setIFrameSrc=function(_755,src,_757){
try{
var r=dojo.render.html;
if(!_757){
if(r.safari){
_755.location=src;
}else{
frames[_755.name].location=src;
}
}else{
var idoc;
if(r.ie){
idoc=_755.contentWindow.document;
}else{
if(r.safari){
idoc=_755.document;
}else{
idoc=_755.contentWindow;
}
}
if(!idoc){
_755.location=src;
return;
}else{
idoc.location.replace(src);
}
}
}
catch(e){
dojo.debug(e);
dojo.debug("setIFrameSrc: "+e);
}
};
dojo.provide("dojo.string.extras");
dojo.string.substituteParams=function(_75a,hash){
var map=(typeof hash=="object")?hash:dojo.lang.toArray(arguments,1);
return _75a.replace(/\%\{(\w+)\}/g,function(_75d,key){
if(typeof (map[key])!="undefined"&&map[key]!=null){
return map[key];
}
dojo.raise("Substitution not found: "+key);
});
};
dojo.string.capitalize=function(str){
if(!dojo.lang.isString(str)){
return "";
}
if(arguments.length==0){
str=this;
}
var _760=str.split(" ");
for(var i=0;i<_760.length;i++){
_760[i]=_760[i].charAt(0).toUpperCase()+_760[i].substring(1);
}
return _760.join(" ");
};
dojo.string.isBlank=function(str){
if(!dojo.lang.isString(str)){
return true;
}
return (dojo.string.trim(str).length==0);
};
dojo.string.encodeAscii=function(str){
if(!dojo.lang.isString(str)){
return str;
}
var ret="";
var _765=escape(str);
var _766,re=/%u([0-9A-F]{4})/i;
while((_766=_765.match(re))){
var num=Number("0x"+_766[1]);
var _769=escape("&#"+num+";");
ret+=_765.substring(0,_766.index)+_769;
_765=_765.substring(_766.index+_766[0].length);
}
ret+=_765.replace(/\+/g,"%2B");
return ret;
};
dojo.string.escape=function(type,str){
var args=dojo.lang.toArray(arguments,1);
switch(type.toLowerCase()){
case "xml":
case "html":
case "xhtml":
return dojo.string.escapeXml.apply(this,args);
case "sql":
return dojo.string.escapeSql.apply(this,args);
case "regexp":
case "regex":
return dojo.string.escapeRegExp.apply(this,args);
case "javascript":
case "jscript":
case "js":
return dojo.string.escapeJavaScript.apply(this,args);
case "ascii":
return dojo.string.encodeAscii.apply(this,args);
default:
return str;
}
};
dojo.string.escapeXml=function(str,_76e){
str=str.replace(/&/gm,"&amp;").replace(/</gm,"&lt;").replace(/>/gm,"&gt;").replace(/"/gm,"&quot;");
if(!_76e){
str=str.replace(/'/gm,"&#39;");
}
return str;
};
dojo.string.escapeSql=function(str){
return str.replace(/'/gm,"''");
};
dojo.string.escapeRegExp=function(str){
return str.replace(/\\/gm,"\\\\").replace(/([\f\b\n\t\r[\^$|?*+(){}])/gm,"\\$1");
};
dojo.string.escapeJavaScript=function(str){
return str.replace(/(["'\f\b\n\t\r])/gm,"\\$1");
};
dojo.string.escapeString=function(str){
return ("\""+str.replace(/(["\\])/g,"\\$1")+"\"").replace(/[\f]/g,"\\f").replace(/[\b]/g,"\\b").replace(/[\n]/g,"\\n").replace(/[\t]/g,"\\t").replace(/[\r]/g,"\\r");
};
dojo.string.summary=function(str,len){
if(!len||str.length<=len){
return str;
}
return str.substring(0,len).replace(/\.+$/,"")+"...";
};
dojo.string.endsWith=function(str,end,_777){
if(_777){
str=str.toLowerCase();
end=end.toLowerCase();
}
if((str.length-end.length)<0){
return false;
}
return str.lastIndexOf(end)==str.length-end.length;
};
dojo.string.endsWithAny=function(str){
for(var i=1;i<arguments.length;i++){
if(dojo.string.endsWith(str,arguments[i])){
return true;
}
}
return false;
};
dojo.string.startsWith=function(str,_77b,_77c){
if(_77c){
str=str.toLowerCase();
_77b=_77b.toLowerCase();
}
return str.indexOf(_77b)==0;
};
dojo.string.startsWithAny=function(str){
for(var i=1;i<arguments.length;i++){
if(dojo.string.startsWith(str,arguments[i])){
return true;
}
}
return false;
};
dojo.string.has=function(str){
for(var i=1;i<arguments.length;i++){
if(str.indexOf(arguments[i])>-1){
return true;
}
}
return false;
};
dojo.string.normalizeNewlines=function(text,_782){
if(_782=="\n"){
text=text.replace(/\r\n/g,"\n");
text=text.replace(/\r/g,"\n");
}else{
if(_782=="\r"){
text=text.replace(/\r\n/g,"\r");
text=text.replace(/\n/g,"\r");
}else{
text=text.replace(/([^\r])\n/g,"$1\r\n").replace(/\r([^\n])/g,"\r\n$1");
}
}
return text;
};
dojo.string.splitEscaped=function(str,_784){
var _785=[];
for(var i=0,_787=0;i<str.length;i++){
if(str.charAt(i)=="\\"){
i++;
continue;
}
if(str.charAt(i)==_784){
_785.push(str.substring(_787,i));
_787=i+1;
}
}
_785.push(str.substr(_787));
return _785;
};
dojo.provide("dojo.undo.browser");
try{
if((!djConfig["preventBackButtonFix"])&&(!dojo.hostenv.post_load_)){
document.write("<iframe style='border: 0px; width: 1px; height: 1px; position: absolute; bottom: 0px; right: 0px; visibility: visible;' name='djhistory' id='djhistory' src='"+(dojo.hostenv.getBaseScriptUri()+"iframe_history.html")+"'></iframe>");
}
}
catch(e){
}
if(dojo.render.html.opera){
dojo.debug("Opera is not supported with dojo.undo.browser, so back/forward detection will not work.");
}
dojo.undo.browser={initialHref:(!dj_undef("window"))?window.location.href:"",initialHash:(!dj_undef("window"))?window.location.hash:"",moveForward:false,historyStack:[],forwardStack:[],historyIframe:null,bookmarkAnchor:null,locationTimer:null,setInitialState:function(args){
this.initialState=this._createState(this.initialHref,args,this.initialHash);
},addToHistory:function(args){
this.forwardStack=[];
var hash=null;
var url=null;
if(!this.historyIframe){
this.historyIframe=window.frames["djhistory"];
}
if(!this.bookmarkAnchor){
this.bookmarkAnchor=document.createElement("a");
dojo.body().appendChild(this.bookmarkAnchor);
this.bookmarkAnchor.style.display="none";
}
if(args["changeUrl"]){
hash="#"+((args["changeUrl"]!==true)?args["changeUrl"]:(new Date()).getTime());
if(this.historyStack.length==0&&this.initialState.urlHash==hash){
this.initialState=this._createState(url,args,hash);
return;
}else{
if(this.historyStack.length>0&&this.historyStack[this.historyStack.length-1].urlHash==hash){
this.historyStack[this.historyStack.length-1]=this._createState(url,args,hash);
return;
}
}
this.changingUrl=true;
setTimeout("window.location.href = '"+hash+"'; dojo.undo.browser.changingUrl = false;",1);
this.bookmarkAnchor.href=hash;
if(dojo.render.html.ie){
url=this._loadIframeHistory();
var _78c=args["back"]||args["backButton"]||args["handle"];
var tcb=function(_78e){
if(window.location.hash!=""){
setTimeout("window.location.href = '"+hash+"';",1);
}
_78c.apply(this,[_78e]);
};
if(args["back"]){
args.back=tcb;
}else{
if(args["backButton"]){
args.backButton=tcb;
}else{
if(args["handle"]){
args.handle=tcb;
}
}
}
var _78f=args["forward"]||args["forwardButton"]||args["handle"];
var tfw=function(_791){
if(window.location.hash!=""){
window.location.href=hash;
}
if(_78f){
_78f.apply(this,[_791]);
}
};
if(args["forward"]){
args.forward=tfw;
}else{
if(args["forwardButton"]){
args.forwardButton=tfw;
}else{
if(args["handle"]){
args.handle=tfw;
}
}
}
}else{
if(dojo.render.html.moz){
if(!this.locationTimer){
this.locationTimer=setInterval("dojo.undo.browser.checkLocation();",200);
}
}
}
}else{
url=this._loadIframeHistory();
}
this.historyStack.push(this._createState(url,args,hash));
},checkLocation:function(){
if(!this.changingUrl){
var hsl=this.historyStack.length;
if((window.location.hash==this.initialHash||window.location.href==this.initialHref)&&(hsl==1)){
this.handleBackButton();
return;
}
if(this.forwardStack.length>0){
if(this.forwardStack[this.forwardStack.length-1].urlHash==window.location.hash){
this.handleForwardButton();
return;
}
}
if((hsl>=2)&&(this.historyStack[hsl-2])){
if(this.historyStack[hsl-2].urlHash==window.location.hash){
this.handleBackButton();
return;
}
}
}
},iframeLoaded:function(evt,_794){
if(!dojo.render.html.opera){
var _795=this._getUrlQuery(_794.href);
if(_795==null){
if(this.historyStack.length==1){
this.handleBackButton();
}
return;
}
if(this.moveForward){
this.moveForward=false;
return;
}
if(this.historyStack.length>=2&&_795==this._getUrlQuery(this.historyStack[this.historyStack.length-2].url)){
this.handleBackButton();
}else{
if(this.forwardStack.length>0&&_795==this._getUrlQuery(this.forwardStack[this.forwardStack.length-1].url)){
this.handleForwardButton();
}
}
}
},handleBackButton:function(){
var _796=this.historyStack.pop();
if(!_796){
return;
}
var last=this.historyStack[this.historyStack.length-1];
if(!last&&this.historyStack.length==0){
last=this.initialState;
}
if(last){
if(last.kwArgs["back"]){
last.kwArgs["back"]();
}else{
if(last.kwArgs["backButton"]){
last.kwArgs["backButton"]();
}else{
if(last.kwArgs["handle"]){
last.kwArgs.handle("back");
}
}
}
}
this.forwardStack.push(_796);
},handleForwardButton:function(){
var last=this.forwardStack.pop();
if(!last){
return;
}
if(last.kwArgs["forward"]){
last.kwArgs.forward();
}else{
if(last.kwArgs["forwardButton"]){
last.kwArgs.forwardButton();
}else{
if(last.kwArgs["handle"]){
last.kwArgs.handle("forward");
}
}
}
this.historyStack.push(last);
},_createState:function(url,args,hash){
return {"url":url,"kwArgs":args,"urlHash":hash};
},_getUrlQuery:function(url){
var _79d=url.split("?");
if(_79d.length<2){
return null;
}else{
return _79d[1];
}
},_loadIframeHistory:function(){
var url=dojo.hostenv.getBaseScriptUri()+"iframe_history.html?"+(new Date()).getTime();
this.moveForward=true;
dojo.io.setIFrameSrc(this.historyIframe,url,false);
return url;
}};
dojo.provide("dojo.io.BrowserIO");
if(!dj_undef("window")){
dojo.io.checkChildrenForFile=function(node){
var _7a0=false;
var _7a1=node.getElementsByTagName("input");
dojo.lang.forEach(_7a1,function(_7a2){
if(_7a0){
return;
}
if(_7a2.getAttribute("type")=="file"){
_7a0=true;
}
});
return _7a0;
};
dojo.io.formHasFile=function(_7a3){
return dojo.io.checkChildrenForFile(_7a3);
};
dojo.io.updateNode=function(node,_7a5){
node=dojo.byId(node);
var args=_7a5;
if(dojo.lang.isString(_7a5)){
args={url:_7a5};
}
args.mimetype="text/html";
args.load=function(t,d,e){
while(node.firstChild){
dojo.dom.destroyNode(node.firstChild);
}
node.innerHTML=d;
};
dojo.io.bind(args);
};
dojo.io.formFilter=function(node){
var type=(node.type||"").toLowerCase();
return !node.disabled&&node.name&&!dojo.lang.inArray(["file","submit","image","reset","button"],type);
};
dojo.io.encodeForm=function(_7ac,_7ad,_7ae){
if((!_7ac)||(!_7ac.tagName)||(!_7ac.tagName.toLowerCase()=="form")){
dojo.raise("Attempted to encode a non-form element.");
}
if(!_7ae){
_7ae=dojo.io.formFilter;
}
var enc=/utf/i.test(_7ad||"")?encodeURIComponent:dojo.string.encodeAscii;
var _7b0=[];
for(var i=0;i<_7ac.elements.length;i++){
var elm=_7ac.elements[i];
if(!elm||elm.tagName.toLowerCase()=="fieldset"||!_7ae(elm)){
continue;
}
var name=enc(elm.name);
var type=elm.type.toLowerCase();
if(type=="select-multiple"){
for(var j=0;j<elm.options.length;j++){
if(elm.options[j].selected){
_7b0.push(name+"="+enc(elm.options[j].value));
}
}
}else{
if(dojo.lang.inArray(["radio","checkbox"],type)){
if(elm.checked){
_7b0.push(name+"="+enc(elm.value));
}
}else{
_7b0.push(name+"="+enc(elm.value));
}
}
}
var _7b6=_7ac.getElementsByTagName("input");
for(var i=0;i<_7b6.length;i++){
var _7b7=_7b6[i];
if(_7b7.type.toLowerCase()=="image"&&_7b7.form==_7ac&&_7ae(_7b7)){
var name=enc(_7b7.name);
_7b0.push(name+"="+enc(_7b7.value));
_7b0.push(name+".x=0");
_7b0.push(name+".y=0");
}
}
return _7b0.join("&")+"&";
};
dojo.io.FormBind=function(args){
this.bindArgs={};
if(args&&args.formNode){
this.init(args);
}else{
if(args){
this.init({formNode:args});
}
}
};
dojo.lang.extend(dojo.io.FormBind,{form:null,bindArgs:null,clickedButton:null,init:function(args){
var form=dojo.byId(args.formNode);
if(!form||!form.tagName||form.tagName.toLowerCase()!="form"){
throw new Error("FormBind: Couldn't apply, invalid form");
}else{
if(this.form==form){
return;
}else{
if(this.form){
throw new Error("FormBind: Already applied to a form");
}
}
}
dojo.lang.mixin(this.bindArgs,args);
this.form=form;
this.connect(form,"onsubmit","submit");
for(var i=0;i<form.elements.length;i++){
var node=form.elements[i];
if(node&&node.type&&dojo.lang.inArray(["submit","button"],node.type.toLowerCase())){
this.connect(node,"onclick","click");
}
}
var _7bd=form.getElementsByTagName("input");
for(var i=0;i<_7bd.length;i++){
var _7be=_7bd[i];
if(_7be.type.toLowerCase()=="image"&&_7be.form==form){
this.connect(_7be,"onclick","click");
}
}
},onSubmit:function(form){
return true;
},submit:function(e){
e.preventDefault();
if(this.onSubmit(this.form)){
dojo.io.bind(dojo.lang.mixin(this.bindArgs,{formFilter:dojo.lang.hitch(this,"formFilter")}));
}
},click:function(e){
var node=e.currentTarget;
if(node.disabled){
return;
}
this.clickedButton=node;
},formFilter:function(node){
var type=(node.type||"").toLowerCase();
var _7c5=false;
if(node.disabled||!node.name){
_7c5=false;
}else{
if(dojo.lang.inArray(["submit","button","image"],type)){
if(!this.clickedButton){
this.clickedButton=node;
}
_7c5=node==this.clickedButton;
}else{
_7c5=!dojo.lang.inArray(["file","submit","reset","button"],type);
}
}
return _7c5;
},connect:function(_7c6,_7c7,_7c8){
if(dojo.evalObjPath("dojo.event.connect")){
dojo.event.connect(_7c6,_7c7,this,_7c8);
}else{
var fcn=dojo.lang.hitch(this,_7c8);
_7c6[_7c7]=function(e){
if(!e){
e=window.event;
}
if(!e.currentTarget){
e.currentTarget=e.srcElement;
}
if(!e.preventDefault){
e.preventDefault=function(){
window.event.returnValue=false;
};
}
fcn(e);
};
}
}});
dojo.io.XMLHTTPTransport=new function(){
var _7cb=this;
var _7cc={};
this.useCache=false;
this.preventCache=false;
function getCacheKey(url,_7ce,_7cf){
return url+"|"+_7ce+"|"+_7cf.toLowerCase();
}
function addToCache(url,_7d1,_7d2,http){
_7cc[getCacheKey(url,_7d1,_7d2)]=http;
}
function getFromCache(url,_7d5,_7d6){
return _7cc[getCacheKey(url,_7d5,_7d6)];
}
this.clearCache=function(){
_7cc={};
};
function doLoad(_7d7,http,url,_7da,_7db){
if(((http.status>=200)&&(http.status<300))||(http.status==304)||(location.protocol=="file:"&&(http.status==0||http.status==undefined))||(location.protocol=="chrome:"&&(http.status==0||http.status==undefined))){
var ret;
if(_7d7.method.toLowerCase()=="head"){
var _7dd=http.getAllResponseHeaders();
ret={};
ret.toString=function(){
return _7dd;
};
var _7de=_7dd.split(/[\r\n]+/g);
for(var i=0;i<_7de.length;i++){
var pair=_7de[i].match(/^([^:]+)\s*:\s*(.+)$/i);
if(pair){
ret[pair[1]]=pair[2];
}
}
}else{
if(_7d7.mimetype=="text/javascript"){
try{
ret=dj_eval(http.responseText);
}
catch(e){
dojo.debug(e);
dojo.debug(http.responseText);
ret=null;
}
}else{
if(_7d7.mimetype=="text/json"||_7d7.mimetype=="application/json"){
try{
ret=dj_eval("("+http.responseText+")");
}
catch(e){
dojo.debug(e);
dojo.debug(http.responseText);
ret=false;
}
}else{
if((_7d7.mimetype=="application/xml")||(_7d7.mimetype=="text/xml")){
ret=http.responseXML;
if(!ret||typeof ret=="string"||!http.getResponseHeader("Content-Type")){
ret=dojo.dom.createDocumentFromText(http.responseText);
}
}else{
ret=http.responseText;
}
}
}
}
if(_7db){
addToCache(url,_7da,_7d7.method,http);
}
_7d7[(typeof _7d7.load=="function")?"load":"handle"]("load",ret,http,_7d7);
}else{
var _7e1=new dojo.io.Error("XMLHttpTransport Error: "+http.status+" "+http.statusText);
_7d7[(typeof _7d7.error=="function")?"error":"handle"]("error",_7e1,http,_7d7);
}
}
function setHeaders(http,_7e3){
if(_7e3["headers"]){
for(var _7e4 in _7e3["headers"]){
if(_7e4.toLowerCase()=="content-type"&&!_7e3["contentType"]){
_7e3["contentType"]=_7e3["headers"][_7e4];
}else{
http.setRequestHeader(_7e4,_7e3["headers"][_7e4]);
}
}
}
}
this.inFlight=[];
this.inFlightTimer=null;
this.startWatchingInFlight=function(){
if(!this.inFlightTimer){
this.inFlightTimer=setTimeout("dojo.io.XMLHTTPTransport.watchInFlight();",10);
}
};
this.watchInFlight=function(){
var now=null;
if(!dojo.hostenv._blockAsync&&!_7cb._blockAsync){
for(var x=this.inFlight.length-1;x>=0;x--){
try{
var tif=this.inFlight[x];
if(!tif||tif.http._aborted||!tif.http.readyState){
this.inFlight.splice(x,1);
continue;
}
if(4==tif.http.readyState){
this.inFlight.splice(x,1);
doLoad(tif.req,tif.http,tif.url,tif.query,tif.useCache);
}else{
if(tif.startTime){
if(!now){
now=(new Date()).getTime();
}
if(tif.startTime+(tif.req.timeoutSeconds*1000)<now){
if(typeof tif.http.abort=="function"){
tif.http.abort();
}
this.inFlight.splice(x,1);
tif.req[(typeof tif.req.timeout=="function")?"timeout":"handle"]("timeout",null,tif.http,tif.req);
}
}
}
}
catch(e){
try{
var _7e8=new dojo.io.Error("XMLHttpTransport.watchInFlight Error: "+e);
tif.req[(typeof tif.req.error=="function")?"error":"handle"]("error",_7e8,tif.http,tif.req);
}
catch(e2){
dojo.debug("XMLHttpTransport error callback failed: "+e2);
}
}
}
}
clearTimeout(this.inFlightTimer);
if(this.inFlight.length==0){
this.inFlightTimer=null;
return;
}
this.inFlightTimer=setTimeout("dojo.io.XMLHTTPTransport.watchInFlight();",10);
};
var _7e9=dojo.hostenv.getXmlhttpObject()?true:false;
this.canHandle=function(_7ea){
return _7e9&&dojo.lang.inArray(["text/plain","text/html","application/xml","text/xml","text/javascript","text/json","application/json"],(_7ea["mimetype"].toLowerCase()||""))&&!(_7ea["formNode"]&&dojo.io.formHasFile(_7ea["formNode"]));
};
this.multipartBoundary="45309FFF-BD65-4d50-99C9-36986896A96F";
this.bind=function(_7eb){
if(!_7eb["url"]){
if(!_7eb["formNode"]&&(_7eb["backButton"]||_7eb["back"]||_7eb["changeUrl"]||_7eb["watchForURL"])&&(!djConfig.preventBackButtonFix)){
dojo.deprecated("Using dojo.io.XMLHTTPTransport.bind() to add to browser history without doing an IO request","Use dojo.undo.browser.addToHistory() instead.","0.4");
dojo.undo.browser.addToHistory(_7eb);
return true;
}
}
var url=_7eb.url;
var _7ed="";
if(_7eb["formNode"]){
var ta=_7eb.formNode.getAttribute("action");
if((ta)&&(!_7eb["url"])){
url=ta;
}
var tp=_7eb.formNode.getAttribute("method");
if((tp)&&(!_7eb["method"])){
_7eb.method=tp;
}
_7ed+=dojo.io.encodeForm(_7eb.formNode,_7eb.encoding,_7eb["formFilter"]);
}
if(url.indexOf("#")>-1){
dojo.debug("Warning: dojo.io.bind: stripping hash values from url:",url);
url=url.split("#")[0];
}
if(_7eb["file"]){
_7eb.method="post";
}
if(!_7eb["method"]){
_7eb.method="get";
}
if(_7eb.method.toLowerCase()=="get"){
_7eb.multipart=false;
}else{
if(_7eb["file"]){
_7eb.multipart=true;
}else{
if(!_7eb["multipart"]){
_7eb.multipart=false;
}
}
}
if(_7eb["backButton"]||_7eb["back"]||_7eb["changeUrl"]){
dojo.undo.browser.addToHistory(_7eb);
}
var _7f0=_7eb["content"]||{};
if(_7eb.sendTransport){
_7f0["dojo.transport"]="xmlhttp";
}
do{
if(_7eb.postContent){
_7ed=_7eb.postContent;
break;
}
if(_7f0){
_7ed+=dojo.io.argsFromMap(_7f0,_7eb.encoding);
}
if(_7eb.method.toLowerCase()=="get"||!_7eb.multipart){
break;
}
var t=[];
if(_7ed.length){
var q=_7ed.split("&");
for(var i=0;i<q.length;++i){
if(q[i].length){
var p=q[i].split("=");
t.push("--"+this.multipartBoundary,"Content-Disposition: form-data; name=\""+p[0]+"\"","",p[1]);
}
}
}
if(_7eb.file){
if(dojo.lang.isArray(_7eb.file)){
for(var i=0;i<_7eb.file.length;++i){
var o=_7eb.file[i];
t.push("--"+this.multipartBoundary,"Content-Disposition: form-data; name=\""+o.name+"\"; filename=\""+("fileName" in o?o.fileName:o.name)+"\"","Content-Type: "+("contentType" in o?o.contentType:"application/octet-stream"),"",o.content);
}
}else{
var o=_7eb.file;
t.push("--"+this.multipartBoundary,"Content-Disposition: form-data; name=\""+o.name+"\"; filename=\""+("fileName" in o?o.fileName:o.name)+"\"","Content-Type: "+("contentType" in o?o.contentType:"application/octet-stream"),"",o.content);
}
}
if(t.length){
t.push("--"+this.multipartBoundary+"--","");
_7ed=t.join("\r\n");
}
}while(false);
var _7f6=_7eb["sync"]?false:true;
var _7f7=_7eb["preventCache"]||(this.preventCache==true&&_7eb["preventCache"]!=false);
var _7f8=_7eb["useCache"]==true||(this.useCache==true&&_7eb["useCache"]!=false);
if(!_7f7&&_7f8){
var _7f9=getFromCache(url,_7ed,_7eb.method);
if(_7f9){
doLoad(_7eb,_7f9,url,_7ed,false);
return;
}
}
var http=dojo.hostenv.getXmlhttpObject(_7eb);
var _7fb=false;
if(_7f6){
var _7fc=this.inFlight.push({"req":_7eb,"http":http,"url":url,"query":_7ed,"useCache":_7f8,"startTime":_7eb.timeoutSeconds?(new Date()).getTime():0});
this.startWatchingInFlight();
}else{
_7cb._blockAsync=true;
}
if(_7eb.method.toLowerCase()=="post"){
if(!_7eb.user){
http.open("POST",url,_7f6);
}else{
http.open("POST",url,_7f6,_7eb.user,_7eb.password);
}
setHeaders(http,_7eb);
http.setRequestHeader("Content-Type",_7eb.multipart?("multipart/form-data; boundary="+this.multipartBoundary):(_7eb.contentType||"application/x-www-form-urlencoded"));
try{
http.send(_7ed);
}
catch(e){
if(typeof http.abort=="function"){
http.abort();
}
doLoad(_7eb,{status:404},url,_7ed,_7f8);
}
}else{
var _7fd=url;
if(_7ed!=""){
_7fd+=(_7fd.indexOf("?")>-1?"&":"?")+_7ed;
}
if(_7f7){
_7fd+=(dojo.string.endsWithAny(_7fd,"?","&")?"":(_7fd.indexOf("?")>-1?"&":"?"))+"dojo.preventCache="+new Date().valueOf();
}
if(!_7eb.user){
http.open(_7eb.method.toUpperCase(),_7fd,_7f6);
}else{
http.open(_7eb.method.toUpperCase(),_7fd,_7f6,_7eb.user,_7eb.password);
}
setHeaders(http,_7eb);
try{
http.send(null);
}
catch(e){
if(typeof http.abort=="function"){
http.abort();
}
doLoad(_7eb,{status:404},url,_7ed,_7f8);
}
}
if(!_7f6){
doLoad(_7eb,http,url,_7ed,_7f8);
_7cb._blockAsync=false;
}
_7eb.abort=function(){
try{
http._aborted=true;
}
catch(e){
}
return http.abort();
};
return;
};
dojo.io.transports.addTransport("XMLHTTPTransport");
};
}
dojo.provide("dojo.io.cookie");
dojo.io.cookie.setCookie=function(name,_7ff,days,path,_802,_803){
var _804=-1;
if((typeof days=="number")&&(days>=0)){
var d=new Date();
d.setTime(d.getTime()+(days*24*60*60*1000));
_804=d.toGMTString();
}
_7ff=escape(_7ff);
document.cookie=name+"="+_7ff+";"+(_804!=-1?" expires="+_804+";":"")+(path?"path="+path:"")+(_802?"; domain="+_802:"")+(_803?"; secure":"");
};
dojo.io.cookie.set=dojo.io.cookie.setCookie;
dojo.io.cookie.getCookie=function(name){
var idx=document.cookie.lastIndexOf(name+"=");
if(idx==-1){
return null;
}
var _808=document.cookie.substring(idx+name.length+1);
var end=_808.indexOf(";");
if(end==-1){
end=_808.length;
}
_808=_808.substring(0,end);
_808=unescape(_808);
return _808;
};
dojo.io.cookie.get=dojo.io.cookie.getCookie;
dojo.io.cookie.deleteCookie=function(name){
dojo.io.cookie.setCookie(name,"-",0);
};
dojo.io.cookie.setObjectCookie=function(name,obj,days,path,_80f,_810,_811){
if(arguments.length==5){
_811=_80f;
_80f=null;
_810=null;
}
var _812=[],_813,_814="";
if(!_811){
_813=dojo.io.cookie.getObjectCookie(name);
}
if(days>=0){
if(!_813){
_813={};
}
for(var prop in obj){
if(obj[prop]==null){
delete _813[prop];
}else{
if((typeof obj[prop]=="string")||(typeof obj[prop]=="number")){
_813[prop]=obj[prop];
}
}
}
prop=null;
for(var prop in _813){
_812.push(escape(prop)+"="+escape(_813[prop]));
}
_814=_812.join("&");
}
dojo.io.cookie.setCookie(name,_814,days,path,_80f,_810);
};
dojo.io.cookie.getObjectCookie=function(name){
var _817=null,_818=dojo.io.cookie.getCookie(name);
if(_818){
_817={};
var _819=_818.split("&");
for(var i=0;i<_819.length;i++){
var pair=_819[i].split("=");
var _81c=pair[1];
if(isNaN(_81c)){
_81c=unescape(pair[1]);
}
_817[unescape(pair[0])]=_81c;
}
}
return _817;
};
dojo.io.cookie.isSupported=function(){
if(typeof navigator.cookieEnabled!="boolean"){
dojo.io.cookie.setCookie("__TestingYourBrowserForCookieSupport__","CookiesAllowed",90,null);
var _81d=dojo.io.cookie.getCookie("__TestingYourBrowserForCookieSupport__");
navigator.cookieEnabled=(_81d=="CookiesAllowed");
if(navigator.cookieEnabled){
this.deleteCookie("__TestingYourBrowserForCookieSupport__");
}
}
return navigator.cookieEnabled;
};
if(!dojo.io.cookies){
dojo.io.cookies=dojo.io.cookie;
}
dojo.provide("dojo.io.*");
if(!this["dojo"]){
alert("\"dojo/__package__.js\" is now located at \"dojo/dojo.js\". Please update your includes accordingly");
}
dojo.provide("dojo.widget.ContentPane");
dojo.widget.defineWidget("dojo.widget.ContentPane",dojo.widget.HtmlWidget,function(){
this._styleNodes=[];
this._onLoadStack=[];
this._onUnloadStack=[];
this._callOnUnload=false;
this._ioBindObj;
this.scriptScope;
this.bindArgs={};
},{isContainer:true,adjustPaths:true,href:"",extractContent:true,parseContent:true,cacheContent:true,preload:false,refreshOnShow:false,handler:"",executeScripts:false,scriptSeparation:true,loadingMessage:"Loading...",isLoaded:false,postCreate:function(args,frag,_820){
if(this.handler!==""){
this.setHandler(this.handler);
}
if(this.isShowing()||this.preload){
this.loadContents();
}
},show:function(){
if(this.refreshOnShow){
this.refresh();
}else{
this.loadContents();
}
dojo.widget.ContentPane.superclass.show.call(this);
},refresh:function(){
this.isLoaded=false;
this.loadContents();
},loadContents:function(){
if(this.isLoaded){
return;
}
if(dojo.lang.isFunction(this.handler)){
this._runHandler();
}else{
if(this.href!=""){
this._downloadExternalContent(this.href,this.cacheContent&&!this.refreshOnShow);
}
}
},setUrl:function(url){
this.href=url;
this.isLoaded=false;
if(this.preload||this.isShowing()){
this.loadContents();
}
},abort:function(){
var bind=this._ioBindObj;
if(!bind||!bind.abort){
return;
}
bind.abort();
delete this._ioBindObj;
},_downloadExternalContent:function(url,_824){
this.abort();
this._handleDefaults(this.loadingMessage,"onDownloadStart");
var self=this;
this._ioBindObj=dojo.io.bind(this._cacheSetting({url:url,mimetype:"text/html",handler:function(type,data,xhr){
delete self._ioBindObj;
if(type=="load"){
self.onDownloadEnd.call(self,url,data);
}else{
var e={responseText:xhr.responseText,status:xhr.status,statusText:xhr.statusText,responseHeaders:xhr.getAllResponseHeaders(),text:"Error loading '"+url+"' ("+xhr.status+" "+xhr.statusText+")"};
self._handleDefaults.call(self,e,"onDownloadError");
self.onLoad();
}
}},_824));
},_cacheSetting:function(_82a,_82b){
for(var x in this.bindArgs){
if(dojo.lang.isUndefined(_82a[x])){
_82a[x]=this.bindArgs[x];
}
}
if(dojo.lang.isUndefined(_82a.useCache)){
_82a.useCache=_82b;
}
if(dojo.lang.isUndefined(_82a.preventCache)){
_82a.preventCache=!_82b;
}
if(dojo.lang.isUndefined(_82a.mimetype)){
_82a.mimetype="text/html";
}
return _82a;
},onLoad:function(e){
this._runStack("_onLoadStack");
this.isLoaded=true;
},onUnLoad:function(e){
dojo.deprecated(this.widgetType+".onUnLoad, use .onUnload (lowercased load)",0.5);
},onUnload:function(e){
this._runStack("_onUnloadStack");
delete this.scriptScope;
if(this.onUnLoad!==dojo.widget.ContentPane.prototype.onUnLoad){
this.onUnLoad.apply(this,arguments);
}
},_runStack:function(_830){
var st=this[_830];
var err="";
var _833=this.scriptScope||window;
for(var i=0;i<st.length;i++){
try{
st[i].call(_833);
}
catch(e){
err+="\n"+st[i]+" failed: "+e.description;
}
}
this[_830]=[];
if(err.length){
var name=(_830=="_onLoadStack")?"addOnLoad":"addOnUnLoad";
this._handleDefaults(name+" failure\n "+err,"onExecError","debug");
}
},addOnLoad:function(obj,func){
this._pushOnStack(this._onLoadStack,obj,func);
},addOnUnload:function(obj,func){
this._pushOnStack(this._onUnloadStack,obj,func);
},addOnUnLoad:function(){
dojo.deprecated(this.widgetType+".addOnUnLoad, use addOnUnload instead. (lowercased Load)",0.5);
this.addOnUnload.apply(this,arguments);
},_pushOnStack:function(_83a,obj,func){
if(typeof func=="undefined"){
_83a.push(obj);
}else{
_83a.push(function(){
obj[func]();
});
}
},destroy:function(){
this.onUnload();
dojo.widget.ContentPane.superclass.destroy.call(this);
},onExecError:function(e){
},onContentError:function(e){
},onDownloadError:function(e){
},onDownloadStart:function(e){
},onDownloadEnd:function(url,data){
data=this.splitAndFixPaths(data,url);
this.setContent(data);
},_handleDefaults:function(e,_844,_845){
if(!_844){
_844="onContentError";
}
if(dojo.lang.isString(e)){
e={text:e};
}
if(!e.text){
e.text=e.toString();
}
e.toString=function(){
return this.text;
};
if(typeof e.returnValue!="boolean"){
e.returnValue=true;
}
if(typeof e.preventDefault!="function"){
e.preventDefault=function(){
this.returnValue=false;
};
}
this[_844](e);
if(e.returnValue){
switch(_845){
case true:
case "alert":
alert(e.toString());
break;
case "debug":
dojo.debug(e.toString());
break;
default:
if(this._callOnUnload){
this.onUnload();
}
this._callOnUnload=false;
if(arguments.callee._loopStop){
dojo.debug(e.toString());
}else{
arguments.callee._loopStop=true;
this._setContent(e.toString());
}
}
}
arguments.callee._loopStop=false;
},splitAndFixPaths:function(s,url){
var _848=[],_849=[],tmp=[];
var _84b=[],_84c=[],attr=[],_84e=[];
var str="",path="",fix="",_852="",tag="",_854="";
if(!url){
url="./";
}
if(s){
var _855=/<title[^>]*>([\s\S]*?)<\/title>/i;
while(_84b=_855.exec(s)){
_848.push(_84b[1]);
s=s.substring(0,_84b.index)+s.substr(_84b.index+_84b[0].length);
}
if(this.adjustPaths){
var _856=/<[a-z][a-z0-9]*[^>]*\s(?:(?:src|href|style)=[^>])+[^>]*>/i;
var _857=/\s(src|href|style)=(['"]?)([\w()\[\]\/.,\\'"-:;#=&?\s@]+?)\2/i;
var _858=/^(?:[#]|(?:(?:https?|ftps?|file|javascript|mailto|news):))/;
while(tag=_856.exec(s)){
str+=s.substring(0,tag.index);
s=s.substring((tag.index+tag[0].length),s.length);
tag=tag[0];
_852="";
while(attr=_857.exec(tag)){
path="";
_854=attr[3];
switch(attr[1].toLowerCase()){
case "src":
case "href":
if(_858.exec(_854)){
path=_854;
}else{
path=(new dojo.uri.Uri(url,_854).toString());
}
break;
case "style":
path=dojo.html.fixPathsInCssText(_854,url);
break;
default:
path=_854;
}
fix=" "+attr[1]+"="+attr[2]+path+attr[2];
_852+=tag.substring(0,attr.index)+fix;
tag=tag.substring((attr.index+attr[0].length),tag.length);
}
str+=_852+tag;
}
s=str+s;
}
_855=/(?:<(style)[^>]*>([\s\S]*?)<\/style>|<link ([^>]*rel=['"]?stylesheet['"]?[^>]*)>)/i;
while(_84b=_855.exec(s)){
if(_84b[1]&&_84b[1].toLowerCase()=="style"){
_84e.push(dojo.html.fixPathsInCssText(_84b[2],url));
}else{
if(attr=_84b[3].match(/href=(['"]?)([^'">]*)\1/i)){
_84e.push({path:attr[2]});
}
}
s=s.substring(0,_84b.index)+s.substr(_84b.index+_84b[0].length);
}
var _855=/<script([^>]*)>([\s\S]*?)<\/script>/i;
var _859=/src=(['"]?)([^"']*)\1/i;
var _85a=/.*(\bdojo\b\.js(?:\.uncompressed\.js)?)$/;
var _85b=/(?:var )?\bdjConfig\b(?:[\s]*=[\s]*\{[^}]+\}|\.[\w]*[\s]*=[\s]*[^;\n]*)?;?|dojo\.hostenv\.writeIncludes\(\s*\);?/g;
var _85c=/dojo\.(?:(?:require(?:After)?(?:If)?)|(?:widget\.(?:manager\.)?registerWidgetPackage)|(?:(?:hostenv\.)?setModulePrefix|registerModulePath)|defineNamespace)\((['"]).*?\1\)\s*;?/;
while(_84b=_855.exec(s)){
if(this.executeScripts&&_84b[1]){
if(attr=_859.exec(_84b[1])){
if(_85a.exec(attr[2])){
dojo.debug("Security note! inhibit:"+attr[2]+" from  being loaded again.");
}else{
_849.push({path:attr[2]});
}
}
}
if(_84b[2]){
var sc=_84b[2].replace(_85b,"");
if(!sc){
continue;
}
while(tmp=_85c.exec(sc)){
_84c.push(tmp[0]);
sc=sc.substring(0,tmp.index)+sc.substr(tmp.index+tmp[0].length);
}
if(this.executeScripts){
_849.push(sc);
}
}
s=s.substr(0,_84b.index)+s.substr(_84b.index+_84b[0].length);
}
if(this.extractContent){
_84b=s.match(/<body[^>]*>\s*([\s\S]+)\s*<\/body>/im);
if(_84b){
s=_84b[1];
}
}
if(this.executeScripts&&this.scriptSeparation){
var _855=/(<[a-zA-Z][a-zA-Z0-9]*\s[^>]*?\S=)((['"])[^>]*scriptScope[^>]*>)/;
var _85e=/([\s'";:\(])scriptScope(.*)/;
str="";
while(tag=_855.exec(s)){
tmp=((tag[3]=="'")?"\"":"'");
fix="";
str+=s.substring(0,tag.index)+tag[1];
while(attr=_85e.exec(tag[2])){
tag[2]=tag[2].substring(0,attr.index)+attr[1]+"dojo.widget.byId("+tmp+this.widgetId+tmp+").scriptScope"+attr[2];
}
str+=tag[2];
s=s.substr(tag.index+tag[0].length);
}
s=str+s;
}
}
return {"xml":s,"styles":_84e,"titles":_848,"requires":_84c,"scripts":_849,"url":url};
},_setContent:function(cont){
this.destroyChildren();
for(var i=0;i<this._styleNodes.length;i++){
if(this._styleNodes[i]&&this._styleNodes[i].parentNode){
this._styleNodes[i].parentNode.removeChild(this._styleNodes[i]);
}
}
this._styleNodes=[];
try{
var node=this.containerNode||this.domNode;
while(node.firstChild){
dojo.html.destroyNode(node.firstChild);
}
if(typeof cont!="string"){
node.appendChild(cont);
}else{
node.innerHTML=cont;
}
}
catch(e){
e.text="Couldn't load content:"+e.description;
this._handleDefaults(e,"onContentError");
}
},setContent:function(data){
this.abort();
if(this._callOnUnload){
this.onUnload();
}
this._callOnUnload=true;
if(!data||dojo.html.isNode(data)){
this._setContent(data);
this.onResized();
this.onLoad();
}else{
if(typeof data.xml!="string"){
this.href="";
data=this.splitAndFixPaths(data);
}
this._setContent(data.xml);
for(var i=0;i<data.styles.length;i++){
if(data.styles[i].path){
this._styleNodes.push(dojo.html.insertCssFile(data.styles[i].path,dojo.doc(),false,true));
}else{
this._styleNodes.push(dojo.html.insertCssText(data.styles[i]));
}
}
if(this.parseContent){
for(var i=0;i<data.requires.length;i++){
try{
eval(data.requires[i]);
}
catch(e){
e.text="ContentPane: error in package loading calls, "+(e.description||e);
this._handleDefaults(e,"onContentError","debug");
}
}
}
var _864=this;
function asyncParse(){
if(_864.executeScripts){
_864._executeScripts(data.scripts);
}
if(_864.parseContent){
var node=_864.containerNode||_864.domNode;
var _866=new dojo.xml.Parse();
var frag=_866.parseElement(node,null,true);
dojo.widget.getParser().createSubComponents(frag,_864);
}
_864.onResized();
_864.onLoad();
}
if(dojo.hostenv.isXDomain&&data.requires.length){
dojo.addOnLoad(asyncParse);
}else{
asyncParse();
}
}
},setHandler:function(_868){
var fcn=dojo.lang.isFunction(_868)?_868:window[_868];
if(!dojo.lang.isFunction(fcn)){
this._handleDefaults("Unable to set handler, '"+_868+"' not a function.","onExecError",true);
return;
}
this.handler=function(){
return fcn.apply(this,arguments);
};
},_runHandler:function(){
var ret=true;
if(dojo.lang.isFunction(this.handler)){
this.handler(this,this.domNode);
ret=false;
}
this.onLoad();
return ret;
},_executeScripts:function(_86b){
var self=this;
var tmp="",code="";
for(var i=0;i<_86b.length;i++){
if(_86b[i].path){
dojo.io.bind(this._cacheSetting({"url":_86b[i].path,"load":function(type,_871){
dojo.lang.hitch(self,tmp=";"+_871);
},"error":function(type,_873){
_873.text=type+" downloading remote script";
self._handleDefaults.call(self,_873,"onExecError","debug");
},"mimetype":"text/plain","sync":true},this.cacheContent));
code+=tmp;
}else{
code+=_86b[i];
}
}
try{
if(this.scriptSeparation){
delete this.scriptScope;
this.scriptScope=new (new Function("_container_",code+"; return this;"))(self);
}else{
var djg=dojo.global();
if(djg.execScript){
djg.execScript(code);
}else{
var djd=dojo.doc();
var sc=djd.createElement("script");
sc.appendChild(djd.createTextNode(code));
(this.containerNode||this.domNode).appendChild(sc);
}
}
}
catch(e){
e.text="Error running scripts from content:\n"+e.description;
this._handleDefaults(e,"onExecError","debug");
}
}});
dojo.provide("dojo.html.*");
dojo.provide("dojo.html.selection");
dojo.html.selectionType={NONE:0,TEXT:1,CONTROL:2};
dojo.html.clearSelection=function(){
var _877=dojo.global();
var _878=dojo.doc();
try{
if(_877["getSelection"]){
if(dojo.render.html.safari){
_877.getSelection().collapse();
}else{
_877.getSelection().removeAllRanges();
}
}else{
if(_878.selection){
if(_878.selection.empty){
_878.selection.empty();
}else{
if(_878.selection.clear){
_878.selection.clear();
}
}
}
}
return true;
}
catch(e){
dojo.debug(e);
return false;
}
};
dojo.html.disableSelection=function(_879){
_879=dojo.byId(_879)||dojo.body();
var h=dojo.render.html;
if(h.mozilla){
_879.style.MozUserSelect="none";
}else{
if(h.safari){
_879.style.KhtmlUserSelect="none";
}else{
if(h.ie){
_879.unselectable="on";
}else{
return false;
}
}
}
return true;
};
dojo.html.enableSelection=function(_87b){
_87b=dojo.byId(_87b)||dojo.body();
var h=dojo.render.html;
if(h.mozilla){
_87b.style.MozUserSelect="";
}else{
if(h.safari){
_87b.style.KhtmlUserSelect="";
}else{
if(h.ie){
_87b.unselectable="off";
}else{
return false;
}
}
}
return true;
};
dojo.html.selectElement=function(_87d){
dojo.deprecated("dojo.html.selectElement","replaced by dojo.html.selection.selectElementChildren",0.5);
};
dojo.html.selectInputText=function(_87e){
var _87f=dojo.global();
var _880=dojo.doc();
_87e=dojo.byId(_87e);
if(_880["selection"]&&dojo.body()["createTextRange"]){
var _881=_87e.createTextRange();
_881.moveStart("character",0);
_881.moveEnd("character",_87e.value.length);
_881.select();
}else{
if(_87f["getSelection"]){
var _882=_87f.getSelection();
_87e.setSelectionRange(0,_87e.value.length);
}
}
_87e.focus();
};
dojo.html.isSelectionCollapsed=function(){
dojo.deprecated("dojo.html.isSelectionCollapsed","replaced by dojo.html.selection.isCollapsed",0.5);
return dojo.html.selection.isCollapsed();
};
dojo.lang.mixin(dojo.html.selection,{getType:function(){
if(dojo.doc()["selection"]){
return dojo.html.selectionType[dojo.doc().selection.type.toUpperCase()];
}else{
var _883=dojo.html.selectionType.TEXT;
var oSel;
try{
oSel=dojo.global().getSelection();
}
catch(e){
}
if(oSel&&oSel.rangeCount==1){
var _885=oSel.getRangeAt(0);
if(_885.startContainer==_885.endContainer&&(_885.endOffset-_885.startOffset)==1&&_885.startContainer.nodeType!=dojo.dom.TEXT_NODE){
_883=dojo.html.selectionType.CONTROL;
}
}
return _883;
}
},isCollapsed:function(){
var _886=dojo.global();
var _887=dojo.doc();
if(_887["selection"]){
return _887.selection.createRange().text=="";
}else{
if(_886["getSelection"]){
var _888=_886.getSelection();
if(dojo.lang.isString(_888)){
return _888=="";
}else{
return _888.isCollapsed||_888.toString()=="";
}
}
}
},getSelectedElement:function(){
if(dojo.html.selection.getType()==dojo.html.selectionType.CONTROL){
if(dojo.doc()["selection"]){
var _889=dojo.doc().selection.createRange();
if(_889&&_889.item){
return dojo.doc().selection.createRange().item(0);
}
}else{
var _88a=dojo.global().getSelection();
return _88a.anchorNode.childNodes[_88a.anchorOffset];
}
}
},getParentElement:function(){
if(dojo.html.selection.getType()==dojo.html.selectionType.CONTROL){
var p=dojo.html.selection.getSelectedElement();
if(p){
return p.parentNode;
}
}else{
if(dojo.doc()["selection"]){
return dojo.doc().selection.createRange().parentElement();
}else{
var _88c=dojo.global().getSelection();
if(_88c){
var node=_88c.anchorNode;
while(node&&node.nodeType!=dojo.dom.ELEMENT_NODE){
node=node.parentNode;
}
return node;
}
}
}
},getSelectedText:function(){
if(dojo.doc()["selection"]){
if(dojo.html.selection.getType()==dojo.html.selectionType.CONTROL){
return null;
}
return dojo.doc().selection.createRange().text;
}else{
var _88e=dojo.global().getSelection();
if(_88e){
return _88e.toString();
}
}
},getSelectedHtml:function(){
if(dojo.doc()["selection"]){
if(dojo.html.selection.getType()==dojo.html.selectionType.CONTROL){
return null;
}
return dojo.doc().selection.createRange().htmlText;
}else{
var _88f=dojo.global().getSelection();
if(_88f&&_88f.rangeCount){
var frag=_88f.getRangeAt(0).cloneContents();
var div=document.createElement("div");
div.appendChild(frag);
return div.innerHTML;
}
return null;
}
},hasAncestorElement:function(_892){
return (dojo.html.selection.getAncestorElement.apply(this,arguments)!=null);
},getAncestorElement:function(_893){
var node=dojo.html.selection.getSelectedElement()||dojo.html.selection.getParentElement();
while(node){
if(dojo.html.selection.isTag(node,arguments).length>0){
return node;
}
node=node.parentNode;
}
return null;
},isTag:function(node,tags){
if(node&&node.tagName){
for(var i=0;i<tags.length;i++){
if(node.tagName.toLowerCase()==String(tags[i]).toLowerCase()){
return String(tags[i]).toLowerCase();
}
}
}
return "";
},selectElement:function(_898){
var _899=dojo.global();
var _89a=dojo.doc();
_898=dojo.byId(_898);
if(_89a.selection&&dojo.body().createTextRange){
try{
var _89b=dojo.body().createControlRange();
_89b.addElement(_898);
_89b.select();
}
catch(e){
dojo.html.selection.selectElementChildren(_898);
}
}else{
if(_899["getSelection"]){
var _89c=_899.getSelection();
if(_89c["removeAllRanges"]){
var _89b=_89a.createRange();
_89b.selectNode(_898);
_89c.removeAllRanges();
_89c.addRange(_89b);
}
}
}
},selectElementChildren:function(_89d){
var _89e=dojo.global();
var _89f=dojo.doc();
_89d=dojo.byId(_89d);
if(_89f.selection&&dojo.body().createTextRange){
var _8a0=dojo.body().createTextRange();
_8a0.moveToElementText(_89d);
_8a0.select();
}else{
if(_89e["getSelection"]){
var _8a1=_89e.getSelection();
if(_8a1["setBaseAndExtent"]){
_8a1.setBaseAndExtent(_89d,0,_89d,_89d.innerText.length-1);
}else{
if(_8a1["selectAllChildren"]){
_8a1.selectAllChildren(_89d);
}
}
}
}
},getBookmark:function(){
var _8a2;
var _8a3=dojo.doc();
if(_8a3["selection"]){
var _8a4=_8a3.selection.createRange();
_8a2=_8a4.getBookmark();
}else{
var _8a5;
try{
_8a5=dojo.global().getSelection();
}
catch(e){
}
if(_8a5){
var _8a4=_8a5.getRangeAt(0);
_8a2=_8a4.cloneRange();
}else{
dojo.debug("No idea how to store the current selection for this browser!");
}
}
return _8a2;
},moveToBookmark:function(_8a6){
var _8a7=dojo.doc();
if(_8a7["selection"]){
var _8a8=_8a7.selection.createRange();
_8a8.moveToBookmark(_8a6);
_8a8.select();
}else{
var _8a9;
try{
_8a9=dojo.global().getSelection();
}
catch(e){
}
if(_8a9&&_8a9["removeAllRanges"]){
_8a9.removeAllRanges();
_8a9.addRange(_8a6);
}else{
dojo.debug("No idea how to restore selection for this browser!");
}
}
},collapse:function(_8aa){
if(dojo.global()["getSelection"]){
var _8ab=dojo.global().getSelection();
if(_8ab.removeAllRanges){
if(_8aa){
_8ab.collapseToStart();
}else{
_8ab.collapseToEnd();
}
}else{
dojo.global().getSelection().collapse(_8aa);
}
}else{
if(dojo.doc().selection){
var _8ac=dojo.doc().selection.createRange();
_8ac.collapse(_8aa);
_8ac.select();
}
}
},remove:function(){
if(dojo.doc().selection){
var _8ad=dojo.doc().selection;
if(_8ad.type.toUpperCase()!="NONE"){
_8ad.clear();
}
return _8ad;
}else{
var _8ad=dojo.global().getSelection();
for(var i=0;i<_8ad.rangeCount;i++){
_8ad.getRangeAt(i).deleteContents();
}
return _8ad;
}
}});
dojo.provide("dojo.widget.Button");
dojo.widget.defineWidget("dojo.widget.Button",dojo.widget.HtmlWidget,{isContainer:true,caption:"",templatePath:dojo.uri.dojoUri("src/widget/templates/ButtonTemplate.html"),templateCssPath:dojo.uri.dojoUri("src/widget/templates/ButtonTemplate.css"),inactiveImg:"src/widget/templates/images/soriaButton-",activeImg:"src/widget/templates/images/soriaActive-",pressedImg:"src/widget/templates/images/soriaPressed-",disabledImg:"src/widget/templates/images/soriaDisabled-",width2height:1/3,fillInTemplate:function(){
if(this.caption){
this.containerNode.appendChild(document.createTextNode(this.caption));
}
dojo.html.disableSelection(this.containerNode);
},postCreate:function(){
this._sizeMyself();
},_sizeMyself:function(){
if(this.domNode.parentNode){
var _8af=document.createElement("span");
dojo.html.insertBefore(_8af,this.domNode);
}
dojo.body().appendChild(this.domNode);
this._sizeMyselfHelper();
if(_8af){
dojo.html.insertBefore(this.domNode,_8af);
dojo.html.removeNode(_8af);
}
},_sizeMyselfHelper:function(){
var mb=dojo.html.getMarginBox(this.containerNode);
this.height=mb.height;
this.containerWidth=mb.width;
var _8b1=this.height*this.width2height;
this.containerNode.style.left=_8b1+"px";
this.leftImage.height=this.rightImage.height=this.centerImage.height=this.height;
this.leftImage.width=this.rightImage.width=_8b1+1;
this.centerImage.width=this.containerWidth;
this.centerImage.style.left=_8b1+"px";
this._setImage(this.disabled?this.disabledImg:this.inactiveImg);
if(this.disabled){
dojo.html.prependClass(this.domNode,"dojoButtonDisabled");
this.domNode.removeAttribute("tabIndex");
dojo.widget.wai.setAttr(this.domNode,"waiState","disabled",true);
}else{
dojo.html.removeClass(this.domNode,"dojoButtonDisabled");
this.domNode.setAttribute("tabIndex","0");
dojo.widget.wai.setAttr(this.domNode,"waiState","disabled",false);
}
this.domNode.style.height=this.height+"px";
this.domNode.style.width=(this.containerWidth+2*_8b1)+"px";
},onMouseOver:function(e){
if(this.disabled){
return;
}
dojo.html.prependClass(this.buttonNode,"dojoButtonHover");
this._setImage(this.activeImg);
},onMouseDown:function(e){
if(this.disabled){
return;
}
dojo.html.prependClass(this.buttonNode,"dojoButtonDepressed");
dojo.html.removeClass(this.buttonNode,"dojoButtonHover");
this._setImage(this.pressedImg);
},onMouseUp:function(e){
if(this.disabled){
return;
}
dojo.html.prependClass(this.buttonNode,"dojoButtonHover");
dojo.html.removeClass(this.buttonNode,"dojoButtonDepressed");
this._setImage(this.activeImg);
},onMouseOut:function(e){
if(this.disabled){
return;
}
if(e.toElement&&dojo.html.isDescendantOf(e.toElement,this.buttonNode)){
return;
}
dojo.html.removeClass(this.buttonNode,"dojoButtonHover");
dojo.html.removeClass(this.buttonNode,"dojoButtonDepressed");
this._setImage(this.inactiveImg);
},onKey:function(e){
if(!e.key){
return;
}
var menu=dojo.widget.getWidgetById(this.menuId);
if(e.key==e.KEY_ENTER||e.key==" "){
this.onMouseDown(e);
this.buttonClick(e);
dojo.lang.setTimeout(this,"onMouseUp",75,e);
dojo.event.browser.stopEvent(e);
}
if(menu&&menu.isShowingNow&&e.key==e.KEY_DOWN_ARROW){
dojo.event.disconnect(this.domNode,"onblur",this,"onBlur");
}
},onFocus:function(e){
var menu=dojo.widget.getWidgetById(this.menuId);
if(menu){
dojo.event.connectOnce(this.domNode,"onblur",this,"onBlur");
}
},onBlur:function(e){
var menu=dojo.widget.getWidgetById(this.menuId);
if(!menu){
return;
}
if(menu.close&&menu.isShowingNow){
menu.close();
}
},buttonClick:function(e){
if(!this.disabled){
try{
this.domNode.focus();
}
catch(e2){
}
this.onClick(e);
}
},onClick:function(e){
},_setImage:function(_8be){
this.leftImage.src=dojo.uri.dojoUri(_8be+"l.gif");
this.centerImage.src=dojo.uri.dojoUri(_8be+"c.gif");
this.rightImage.src=dojo.uri.dojoUri(_8be+"r.gif");
},_toggleMenu:function(_8bf){
var menu=dojo.widget.getWidgetById(_8bf);
if(!menu){
return;
}
if(menu.open&&!menu.isShowingNow){
var pos=dojo.html.getAbsolutePosition(this.domNode,false);
menu.open(pos.x,pos.y+this.height,this);
}else{
if(menu.close&&menu.isShowingNow){
menu.close();
}else{
menu.toggle();
}
}
},setCaption:function(_8c2){
this.caption=_8c2;
this.containerNode.innerHTML=_8c2;
this._sizeMyself();
},setDisabled:function(_8c3){
this.disabled=_8c3;
this._sizeMyself();
}});
dojo.widget.defineWidget("dojo.widget.DropDownButton",dojo.widget.Button,{menuId:"",downArrow:"src/widget/templates/images/whiteDownArrow.gif",disabledDownArrow:"src/widget/templates/images/whiteDownArrow.gif",fillInTemplate:function(){
dojo.widget.DropDownButton.superclass.fillInTemplate.apply(this,arguments);
this.arrow=document.createElement("img");
dojo.html.setClass(this.arrow,"downArrow");
dojo.widget.wai.setAttr(this.domNode,"waiState","haspopup",this.menuId);
},_sizeMyselfHelper:function(){
this.arrow.src=dojo.uri.dojoUri(this.disabled?this.disabledDownArrow:this.downArrow);
this.containerNode.appendChild(this.arrow);
dojo.widget.DropDownButton.superclass._sizeMyselfHelper.call(this);
},onClick:function(e){
this._toggleMenu(this.menuId);
}});
dojo.widget.defineWidget("dojo.widget.ComboButton",dojo.widget.Button,{menuId:"",templatePath:dojo.uri.dojoUri("src/widget/templates/ComboButtonTemplate.html"),splitWidth:2,arrowWidth:5,_sizeMyselfHelper:function(e){
var mb=dojo.html.getMarginBox(this.containerNode);
this.height=mb.height;
this.containerWidth=mb.width;
var _8c7=this.height/3;
if(this.disabled){
dojo.widget.wai.setAttr(this.domNode,"waiState","disabled",true);
this.domNode.removeAttribute("tabIndex");
}else{
dojo.widget.wai.setAttr(this.domNode,"waiState","disabled",false);
this.domNode.setAttribute("tabIndex","0");
}
this.leftImage.height=this.rightImage.height=this.centerImage.height=this.arrowBackgroundImage.height=this.height;
this.leftImage.width=_8c7+1;
this.centerImage.width=this.containerWidth;
this.buttonNode.style.height=this.height+"px";
this.buttonNode.style.width=_8c7+this.containerWidth+"px";
this._setImage(this.disabled?this.disabledImg:this.inactiveImg);
this.arrowBackgroundImage.width=this.arrowWidth;
this.rightImage.width=_8c7+1;
this.rightPart.style.height=this.height+"px";
this.rightPart.style.width=this.arrowWidth+_8c7+"px";
this._setImageR(this.disabled?this.disabledImg:this.inactiveImg);
this.domNode.style.height=this.height+"px";
var _8c8=this.containerWidth+this.splitWidth+this.arrowWidth+2*_8c7;
this.domNode.style.width=_8c8+"px";
},_setImage:function(_8c9){
this.leftImage.src=dojo.uri.dojoUri(_8c9+"l.gif");
this.centerImage.src=dojo.uri.dojoUri(_8c9+"c.gif");
},rightOver:function(e){
if(this.disabled){
return;
}
dojo.html.prependClass(this.rightPart,"dojoButtonHover");
this._setImageR(this.activeImg);
},rightDown:function(e){
if(this.disabled){
return;
}
dojo.html.prependClass(this.rightPart,"dojoButtonDepressed");
dojo.html.removeClass(this.rightPart,"dojoButtonHover");
this._setImageR(this.pressedImg);
},rightUp:function(e){
if(this.disabled){
return;
}
dojo.html.prependClass(this.rightPart,"dojoButtonHover");
dojo.html.removeClass(this.rightPart,"dojoButtonDepressed");
this._setImageR(this.activeImg);
},rightOut:function(e){
if(this.disabled){
return;
}
dojo.html.removeClass(this.rightPart,"dojoButtonHover");
dojo.html.removeClass(this.rightPart,"dojoButtonDepressed");
this._setImageR(this.inactiveImg);
},rightClick:function(e){
if(this.disabled){
return;
}
try{
this.domNode.focus();
}
catch(e2){
}
this._toggleMenu(this.menuId);
},_setImageR:function(_8cf){
this.arrowBackgroundImage.src=dojo.uri.dojoUri(_8cf+"c.gif");
this.rightImage.src=dojo.uri.dojoUri(_8cf+"r.gif");
},onKey:function(e){
if(!e.key){
return;
}
var menu=dojo.widget.getWidgetById(this.menuId);
if(e.key==e.KEY_ENTER||e.key==" "){
this.onMouseDown(e);
this.buttonClick(e);
dojo.lang.setTimeout(this,"onMouseUp",75,e);
dojo.event.browser.stopEvent(e);
}else{
if(e.key==e.KEY_DOWN_ARROW&&e.altKey){
this.rightDown(e);
this.rightClick(e);
dojo.lang.setTimeout(this,"rightUp",75,e);
dojo.event.browser.stopEvent(e);
}else{
if(menu&&menu.isShowingNow&&e.key==e.KEY_DOWN_ARROW){
dojo.event.disconnect(this.domNode,"onblur",this,"onBlur");
}
}
}
}});
dojo.provide("dojo.date.serialize");
dojo.date.setIso8601=function(_8d2,_8d3){
var _8d4=(_8d3.indexOf("T")==-1)?_8d3.split(" "):_8d3.split("T");
_8d2=dojo.date.setIso8601Date(_8d2,_8d4[0]);
if(_8d4.length==2){
_8d2=dojo.date.setIso8601Time(_8d2,_8d4[1]);
}
return _8d2;
};
dojo.date.fromIso8601=function(_8d5){
return dojo.date.setIso8601(new Date(0,0),_8d5);
};
dojo.date.setIso8601Date=function(_8d6,_8d7){
var _8d8="^([0-9]{4})((-?([0-9]{2})(-?([0-9]{2}))?)|"+"(-?([0-9]{3}))|(-?W([0-9]{2})(-?([1-7]))?))?$";
var d=_8d7.match(new RegExp(_8d8));
if(!d){
dojo.debug("invalid date string: "+_8d7);
return null;
}
var year=d[1];
var _8db=d[4];
var date=d[6];
var _8dd=d[8];
var week=d[10];
var _8df=d[12]?d[12]:1;
_8d6.setFullYear(year);
if(_8dd){
_8d6.setMonth(0);
_8d6.setDate(Number(_8dd));
}else{
if(week){
_8d6.setMonth(0);
_8d6.setDate(1);
var gd=_8d6.getDay();
var day=gd?gd:7;
var _8e2=Number(_8df)+(7*Number(week));
if(day<=4){
_8d6.setDate(_8e2+1-day);
}else{
_8d6.setDate(_8e2+8-day);
}
}else{
if(_8db){
_8d6.setDate(1);
_8d6.setMonth(_8db-1);
}
if(date){
_8d6.setDate(date);
}
}
}
return _8d6;
};
dojo.date.fromIso8601Date=function(_8e3){
return dojo.date.setIso8601Date(new Date(0,0),_8e3);
};
dojo.date.setIso8601Time=function(_8e4,_8e5){
var _8e6="Z|(([-+])([0-9]{2})(:?([0-9]{2}))?)$";
var d=_8e5.match(new RegExp(_8e6));
var _8e8=0;
if(d){
if(d[0]!="Z"){
_8e8=(Number(d[3])*60)+Number(d[5]);
_8e8*=((d[2]=="-")?1:-1);
}
_8e8-=_8e4.getTimezoneOffset();
_8e5=_8e5.substr(0,_8e5.length-d[0].length);
}
var _8e9="^([0-9]{2})(:?([0-9]{2})(:?([0-9]{2})(.([0-9]+))?)?)?$";
d=_8e5.match(new RegExp(_8e9));
if(!d){
dojo.debug("invalid time string: "+_8e5);
return null;
}
var _8ea=d[1];
var mins=Number((d[3])?d[3]:0);
var secs=(d[5])?d[5]:0;
var ms=d[7]?(Number("0."+d[7])*1000):0;
_8e4.setHours(_8ea);
_8e4.setMinutes(mins);
_8e4.setSeconds(secs);
_8e4.setMilliseconds(ms);
if(_8e8!==0){
_8e4.setTime(_8e4.getTime()+_8e8*60000);
}
return _8e4;
};
dojo.date.fromIso8601Time=function(_8ee){
return dojo.date.setIso8601Time(new Date(0,0),_8ee);
};
dojo.date.toRfc3339=function(_8ef,_8f0){
if(!_8ef){
_8ef=new Date();
}
var _=dojo.string.pad;
var _8f2=[];
if(_8f0!="timeOnly"){
var date=[_(_8ef.getFullYear(),4),_(_8ef.getMonth()+1,2),_(_8ef.getDate(),2)].join("-");
_8f2.push(date);
}
if(_8f0!="dateOnly"){
var time=[_(_8ef.getHours(),2),_(_8ef.getMinutes(),2),_(_8ef.getSeconds(),2)].join(":");
var _8f5=_8ef.getTimezoneOffset();
time+=(_8f5>0?"-":"+")+_(Math.floor(Math.abs(_8f5)/60),2)+":"+_(Math.abs(_8f5)%60,2);
_8f2.push(time);
}
return _8f2.join("T");
};
dojo.date.fromRfc3339=function(_8f6){
if(_8f6.indexOf("Tany")!=-1){
_8f6=_8f6.replace("Tany","");
}
var _8f7=new Date();
return dojo.date.setIso8601(_8f7,_8f6);
};
dojo.provide("dojo.date.common");
dojo.date.setDayOfYear=function(_8f8,_8f9){
_8f8.setMonth(0);
_8f8.setDate(_8f9);
return _8f8;
};
dojo.date.getDayOfYear=function(_8fa){
var _8fb=_8fa.getFullYear();
var _8fc=new Date(_8fb-1,11,31);
return Math.floor((_8fa.getTime()-_8fc.getTime())/86400000);
};
dojo.date.setWeekOfYear=function(_8fd,week,_8ff){
if(arguments.length==1){
_8ff=0;
}
dojo.unimplemented("dojo.date.setWeekOfYear");
};
dojo.date.getWeekOfYear=function(_900,_901){
if(arguments.length==1){
_901=0;
}
var _902=new Date(_900.getFullYear(),0,1);
var day=_902.getDay();
_902.setDate(_902.getDate()-day+_901-(day>_901?7:0));
return Math.floor((_900.getTime()-_902.getTime())/604800000);
};
dojo.date.setIsoWeekOfYear=function(_904,week,_906){
if(arguments.length==1){
_906=1;
}
dojo.unimplemented("dojo.date.setIsoWeekOfYear");
};
dojo.date.getIsoWeekOfYear=function(_907,_908){
if(arguments.length==1){
_908=1;
}
dojo.unimplemented("dojo.date.getIsoWeekOfYear");
};
dojo.date.shortTimezones=["IDLW","BET","HST","MART","AKST","PST","MST","CST","EST","AST","NFT","BST","FST","AT","GMT","CET","EET","MSK","IRT","GST","AFT","AGTT","IST","NPT","ALMT","MMT","JT","AWST","JST","ACST","AEST","LHST","VUT","NFT","NZT","CHAST","PHOT","LINT"];
dojo.date.timezoneOffsets=[-720,-660,-600,-570,-540,-480,-420,-360,-300,-240,-210,-180,-120,-60,0,60,120,180,210,240,270,300,330,345,360,390,420,480,540,570,600,630,660,690,720,765,780,840];
dojo.date.getDaysInMonth=function(_909){
var _90a=_909.getMonth();
var days=[31,28,31,30,31,30,31,31,30,31,30,31];
if(_90a==1&&dojo.date.isLeapYear(_909)){
return 29;
}else{
return days[_90a];
}
};
dojo.date.isLeapYear=function(_90c){
var year=_90c.getFullYear();
return (year%400==0)?true:(year%100==0)?false:(year%4==0)?true:false;
};
dojo.date.getTimezoneName=function(_90e){
var str=_90e.toString();
var tz="";
var _911;
var pos=str.indexOf("(");
if(pos>-1){
pos++;
tz=str.substring(pos,str.indexOf(")"));
}else{
var pat=/([A-Z\/]+) \d{4}$/;
if((_911=str.match(pat))){
tz=_911[1];
}else{
str=_90e.toLocaleString();
pat=/ ([A-Z\/]+)$/;
if((_911=str.match(pat))){
tz=_911[1];
}
}
}
return tz=="AM"||tz=="PM"?"":tz;
};
dojo.date.getOrdinal=function(_914){
var date=_914.getDate();
if(date%100!=11&&date%10==1){
return "st";
}else{
if(date%100!=12&&date%10==2){
return "nd";
}else{
if(date%100!=13&&date%10==3){
return "rd";
}else{
return "th";
}
}
}
};
dojo.date.compareTypes={DATE:1,TIME:2};
dojo.date.compare=function(_916,_917,_918){
var dA=_916;
var dB=_917||new Date();
var now=new Date();
with(dojo.date.compareTypes){
var opt=_918||(DATE|TIME);
var d1=new Date((opt&DATE)?dA.getFullYear():now.getFullYear(),(opt&DATE)?dA.getMonth():now.getMonth(),(opt&DATE)?dA.getDate():now.getDate(),(opt&TIME)?dA.getHours():0,(opt&TIME)?dA.getMinutes():0,(opt&TIME)?dA.getSeconds():0);
var d2=new Date((opt&DATE)?dB.getFullYear():now.getFullYear(),(opt&DATE)?dB.getMonth():now.getMonth(),(opt&DATE)?dB.getDate():now.getDate(),(opt&TIME)?dB.getHours():0,(opt&TIME)?dB.getMinutes():0,(opt&TIME)?dB.getSeconds():0);
}
if(d1.valueOf()>d2.valueOf()){
return 1;
}
if(d1.valueOf()<d2.valueOf()){
return -1;
}
return 0;
};
dojo.date.dateParts={YEAR:0,MONTH:1,DAY:2,HOUR:3,MINUTE:4,SECOND:5,MILLISECOND:6,QUARTER:7,WEEK:8,WEEKDAY:9};
dojo.date.add=function(dt,_920,incr){
if(typeof dt=="number"){
dt=new Date(dt);
}
function fixOvershoot(){
if(sum.getDate()<dt.getDate()){
sum.setDate(0);
}
}
var sum=new Date(dt);
with(dojo.date.dateParts){
switch(_920){
case YEAR:
sum.setFullYear(dt.getFullYear()+incr);
fixOvershoot();
break;
case QUARTER:
incr*=3;
case MONTH:
sum.setMonth(dt.getMonth()+incr);
fixOvershoot();
break;
case WEEK:
incr*=7;
case DAY:
sum.setDate(dt.getDate()+incr);
break;
case WEEKDAY:
var dat=dt.getDate();
var _924=0;
var days=0;
var strt=0;
var trgt=0;
var adj=0;
var mod=incr%5;
if(mod==0){
days=(incr>0)?5:-5;
_924=(incr>0)?((incr-5)/5):((incr+5)/5);
}else{
days=mod;
_924=parseInt(incr/5);
}
strt=dt.getDay();
if(strt==6&&incr>0){
adj=1;
}else{
if(strt==0&&incr<0){
adj=-1;
}
}
trgt=(strt+days);
if(trgt==0||trgt==6){
adj=(incr>0)?2:-2;
}
sum.setDate(dat+(7*_924)+days+adj);
break;
case HOUR:
sum.setHours(sum.getHours()+incr);
break;
case MINUTE:
sum.setMinutes(sum.getMinutes()+incr);
break;
case SECOND:
sum.setSeconds(sum.getSeconds()+incr);
break;
case MILLISECOND:
sum.setMilliseconds(sum.getMilliseconds()+incr);
break;
default:
break;
}
}
return sum;
};
dojo.date.diff=function(dtA,dtB,_92c){
if(typeof dtA=="number"){
dtA=new Date(dtA);
}
if(typeof dtB=="number"){
dtB=new Date(dtB);
}
var _92d=dtB.getFullYear()-dtA.getFullYear();
var _92e=(dtB.getMonth()-dtA.getMonth())+(_92d*12);
var _92f=dtB.getTime()-dtA.getTime();
var _930=_92f/1000;
var _931=_930/60;
var _932=_931/60;
var _933=_932/24;
var _934=_933/7;
var _935=0;
with(dojo.date.dateParts){
switch(_92c){
case YEAR:
_935=_92d;
break;
case QUARTER:
var mA=dtA.getMonth();
var mB=dtB.getMonth();
var qA=Math.floor(mA/3)+1;
var qB=Math.floor(mB/3)+1;
qB+=(_92d*4);
_935=qB-qA;
break;
case MONTH:
_935=_92e;
break;
case WEEK:
_935=parseInt(_934);
break;
case DAY:
_935=_933;
break;
case WEEKDAY:
var days=Math.round(_933);
var _93b=parseInt(days/7);
var mod=days%7;
if(mod==0){
days=_93b*5;
}else{
var adj=0;
var aDay=dtA.getDay();
var bDay=dtB.getDay();
_93b=parseInt(days/7);
mod=days%7;
var _940=new Date(dtA);
_940.setDate(_940.getDate()+(_93b*7));
var _941=_940.getDay();
if(_933>0){
switch(true){
case aDay==6:
adj=-1;
break;
case aDay==0:
adj=0;
break;
case bDay==6:
adj=-1;
break;
case bDay==0:
adj=-2;
break;
case (_941+mod)>5:
adj=-2;
break;
default:
break;
}
}else{
if(_933<0){
switch(true){
case aDay==6:
adj=0;
break;
case aDay==0:
adj=1;
break;
case bDay==6:
adj=2;
break;
case bDay==0:
adj=1;
break;
case (_941+mod)<0:
adj=2;
break;
default:
break;
}
}
}
days+=adj;
days-=(_93b*2);
}
_935=days;
break;
case HOUR:
_935=_932;
break;
case MINUTE:
_935=_931;
break;
case SECOND:
_935=_930;
break;
case MILLISECOND:
_935=_92f;
break;
default:
break;
}
}
return Math.round(_935);
};
dojo.provide("dojo.date.supplemental");
dojo.date.getFirstDayOfWeek=function(_942){
var _943={mv:5,ae:6,af:6,bh:6,dj:6,dz:6,eg:6,er:6,et:6,iq:6,ir:6,jo:6,ke:6,kw:6,lb:6,ly:6,ma:6,om:6,qa:6,sa:6,sd:6,so:6,tn:6,ye:6,as:0,au:0,az:0,bw:0,ca:0,cn:0,fo:0,ge:0,gl:0,gu:0,hk:0,ie:0,il:0,is:0,jm:0,jp:0,kg:0,kr:0,la:0,mh:0,mo:0,mp:0,mt:0,nz:0,ph:0,pk:0,sg:0,th:0,tt:0,tw:0,um:0,us:0,uz:0,vi:0,za:0,zw:0,et:0,mw:0,ng:0,tj:0,gb:0,sy:4};
_942=dojo.hostenv.normalizeLocale(_942);
var _944=_942.split("-")[1];
var dow=_943[_944];
return (typeof dow=="undefined")?1:dow;
};
dojo.date.getWeekend=function(_946){
var _947={eg:5,il:5,sy:5,"in":0,ae:4,bh:4,dz:4,iq:4,jo:4,kw:4,lb:4,ly:4,ma:4,om:4,qa:4,sa:4,sd:4,tn:4,ye:4};
var _948={ae:5,bh:5,dz:5,iq:5,jo:5,kw:5,lb:5,ly:5,ma:5,om:5,qa:5,sa:5,sd:5,tn:5,ye:5,af:5,ir:5,eg:6,il:6,sy:6};
_946=dojo.hostenv.normalizeLocale(_946);
var _949=_946.split("-")[1];
var _94a=_947[_949];
var end=_948[_949];
if(typeof _94a=="undefined"){
_94a=6;
}
if(typeof end=="undefined"){
end=0;
}
return {start:_94a,end:end};
};
dojo.date.isWeekend=function(_94c,_94d){
var _94e=dojo.date.getWeekend(_94d);
var day=(_94c||new Date()).getDay();
if(_94e.end<_94e.start){
_94e.end+=7;
if(day<_94e.start){
day+=7;
}
}
return day>=_94e.start&&day<=_94e.end;
};
dojo.provide("dojo.i18n.common");
dojo.i18n.getLocalization=function(_950,_951,_952){
dojo.hostenv.preloadLocalizations();
_952=dojo.hostenv.normalizeLocale(_952);
var _953=_952.split("-");
var _954=[_950,"nls",_951].join(".");
var _955=dojo.hostenv.findModule(_954,true);
var _956;
for(var i=_953.length;i>0;i--){
var loc=_953.slice(0,i).join("_");
if(_955[loc]){
_956=_955[loc];
break;
}
}
if(!_956){
_956=_955.ROOT;
}
if(_956){
var _959=function(){
};
_959.prototype=_956;
return new _959();
}
dojo.raise("Bundle not found: "+_951+" in "+_950+" , locale="+_952);
};
dojo.i18n.isLTR=function(_95a){
var lang=dojo.hostenv.normalizeLocale(_95a).split("-")[0];
var RTL={ar:true,fa:true,he:true,ur:true,yi:true};
return !RTL[lang];
};
dojo.provide("dojo.date.format");
(function(){
dojo.date.format=function(_95d,_95e){
if(typeof _95e=="string"){
dojo.deprecated("dojo.date.format","To format dates with POSIX-style strings, please use dojo.date.strftime instead","0.5");
return dojo.date.strftime(_95d,_95e);
}
function formatPattern(_95f,_960){
return _960.replace(/([a-z])\1*/ig,function(_961){
var s;
var c=_961.charAt(0);
var l=_961.length;
var pad;
var _966=["abbr","wide","narrow"];
switch(c){
case "G":
if(l>3){
dojo.unimplemented("Era format not implemented");
}
s=info.eras[_95f.getFullYear()<0?1:0];
break;
case "y":
s=_95f.getFullYear();
switch(l){
case 1:
break;
case 2:
s=String(s).substr(-2);
break;
default:
pad=true;
}
break;
case "Q":
case "q":
s=Math.ceil((_95f.getMonth()+1)/3);
switch(l){
case 1:
case 2:
pad=true;
break;
case 3:
case 4:
dojo.unimplemented("Quarter format not implemented");
}
break;
case "M":
case "L":
var m=_95f.getMonth();
var _969;
switch(l){
case 1:
case 2:
s=m+1;
pad=true;
break;
case 3:
case 4:
case 5:
_969=_966[l-3];
break;
}
if(_969){
var type=(c=="L")?"standalone":"format";
var prop=["months",type,_969].join("-");
s=info[prop][m];
}
break;
case "w":
var _96c=0;
s=dojo.date.getWeekOfYear(_95f,_96c);
pad=true;
break;
case "d":
s=_95f.getDate();
pad=true;
break;
case "D":
s=dojo.date.getDayOfYear(_95f);
pad=true;
break;
case "E":
case "e":
case "c":
var d=_95f.getDay();
var _969;
switch(l){
case 1:
case 2:
if(c=="e"){
var _96e=dojo.date.getFirstDayOfWeek(_95e.locale);
d=(d-_96e+7)%7;
}
if(c!="c"){
s=d+1;
pad=true;
break;
}
case 3:
case 4:
case 5:
_969=_966[l-3];
break;
}
if(_969){
var type=(c=="c")?"standalone":"format";
var prop=["days",type,_969].join("-");
s=info[prop][d];
}
break;
case "a":
var _96f=(_95f.getHours()<12)?"am":"pm";
s=info[_96f];
break;
case "h":
case "H":
case "K":
case "k":
var h=_95f.getHours();
switch(c){
case "h":
s=(h%12)||12;
break;
case "H":
s=h;
break;
case "K":
s=(h%12);
break;
case "k":
s=h||24;
break;
}
pad=true;
break;
case "m":
s=_95f.getMinutes();
pad=true;
break;
case "s":
s=_95f.getSeconds();
pad=true;
break;
case "S":
s=Math.round(_95f.getMilliseconds()*Math.pow(10,l-3));
break;
case "v":
case "z":
s=dojo.date.getTimezoneName(_95f);
if(s){
break;
}
l=4;
case "Z":
var _971=_95f.getTimezoneOffset();
var tz=[(_971<=0?"+":"-"),dojo.string.pad(Math.floor(Math.abs(_971)/60),2),dojo.string.pad(Math.abs(_971)%60,2)];
if(l==4){
tz.splice(0,0,"GMT");
tz.splice(3,0,":");
}
s=tz.join("");
break;
case "Y":
case "u":
case "W":
case "F":
case "g":
case "A":
dojo.debug(_961+" modifier not yet implemented");
s="?";
break;
default:
dojo.raise("dojo.date.format: invalid pattern char: "+_960);
}
if(pad){
s=dojo.string.pad(s,l);
}
return s;
});
}
_95e=_95e||{};
var _973=dojo.hostenv.normalizeLocale(_95e.locale);
var _974=_95e.formatLength||"full";
var info=dojo.date._getGregorianBundle(_973);
var str=[];
var _976=dojo.lang.curry(this,formatPattern,_95d);
if(_95e.selector!="timeOnly"){
var _977=_95e.datePattern||info["dateFormat-"+_974];
if(_977){
str.push(_processPattern(_977,_976));
}
}
if(_95e.selector!="dateOnly"){
var _978=_95e.timePattern||info["timeFormat-"+_974];
if(_978){
str.push(_processPattern(_978,_976));
}
}
var _979=str.join(" ");
return _979;
};
dojo.date.parse=function(_97a,_97b){
_97b=_97b||{};
var _97c=dojo.hostenv.normalizeLocale(_97b.locale);
var info=dojo.date._getGregorianBundle(_97c);
var _97e=_97b.formatLength||"full";
if(!_97b.selector){
_97b.selector="dateOnly";
}
var _97f=_97b.datePattern||info["dateFormat-"+_97e];
var _980=_97b.timePattern||info["timeFormat-"+_97e];
var _981;
if(_97b.selector=="dateOnly"){
_981=_97f;
}else{
if(_97b.selector=="timeOnly"){
_981=_980;
}else{
if(_97b.selector=="dateTime"){
_981=_97f+" "+_980;
}else{
var msg="dojo.date.parse: Unknown selector param passed: '"+_97b.selector+"'.";
msg+=" Defaulting to date pattern.";
dojo.debug(msg);
_981=_97f;
}
}
}
var _983=[];
var _984=_processPattern(_981,dojo.lang.curry(this,_buildDateTimeRE,_983,info,_97b));
var _985=new RegExp("^"+_984+"$");
var _986=_985.exec(_97a);
if(!_986){
return null;
}
var _987=["abbr","wide","narrow"];
var _988=new Date(1972,0);
var _989={};
for(var i=1;i<_986.length;i++){
var grp=_983[i-1];
var l=grp.length;
var v=_986[i];
switch(grp.charAt(0)){
case "y":
if(l!=2){
_988.setFullYear(v);
_989.year=v;
}else{
if(v<100){
v=Number(v);
var year=""+new Date().getFullYear();
var _98f=year.substring(0,2)*100;
var _990=Number(year.substring(2,4));
var _991=Math.min(_990+20,99);
var num=(v<_991)?_98f+v:_98f-100+v;
_988.setFullYear(num);
_989.year=num;
}else{
if(_97b.strict){
return null;
}
_988.setFullYear(v);
_989.year=v;
}
}
break;
case "M":
if(l>2){
if(!_97b.strict){
v=v.replace(/\./g,"");
v=v.toLowerCase();
}
var _993=info["months-format-"+_987[l-3]].concat();
for(var j=0;j<_993.length;j++){
if(!_97b.strict){
_993[j]=_993[j].toLowerCase();
}
if(v==_993[j]){
_988.setMonth(j);
_989.month=j;
break;
}
}
if(j==_993.length){
dojo.debug("dojo.date.parse: Could not parse month name: '"+v+"'.");
return null;
}
}else{
_988.setMonth(v-1);
_989.month=v-1;
}
break;
case "E":
case "e":
if(!_97b.strict){
v=v.toLowerCase();
}
var days=info["days-format-"+_987[l-3]].concat();
for(var j=0;j<days.length;j++){
if(!_97b.strict){
days[j]=days[j].toLowerCase();
}
if(v==days[j]){
break;
}
}
if(j==days.length){
dojo.debug("dojo.date.parse: Could not parse weekday name: '"+v+"'.");
return null;
}
break;
case "d":
_988.setDate(v);
_989.date=v;
break;
case "a":
var am=_97b.am||info.am;
var pm=_97b.pm||info.pm;
if(!_97b.strict){
v=v.replace(/\./g,"").toLowerCase();
am=am.replace(/\./g,"").toLowerCase();
pm=pm.replace(/\./g,"").toLowerCase();
}
if(_97b.strict&&v!=am&&v!=pm){
dojo.debug("dojo.date.parse: Could not parse am/pm part.");
return null;
}
var _998=_988.getHours();
if(v==pm&&_998<12){
_988.setHours(_998+12);
}else{
if(v==am&&_998==12){
_988.setHours(0);
}
}
break;
case "K":
if(v==24){
v=0;
}
case "h":
case "H":
case "k":
if(v>23){
dojo.debug("dojo.date.parse: Illegal hours value");
return null;
}
_988.setHours(v);
break;
case "m":
_988.setMinutes(v);
break;
case "s":
_988.setSeconds(v);
break;
case "S":
_988.setMilliseconds(v);
break;
default:
dojo.unimplemented("dojo.date.parse: unsupported pattern char="+grp.charAt(0));
}
}
if(_989.year&&_988.getFullYear()!=_989.year){
dojo.debug("Parsed year: '"+_988.getFullYear()+"' did not match input year: '"+_989.year+"'.");
return null;
}
if(_989.month&&_988.getMonth()!=_989.month){
dojo.debug("Parsed month: '"+_988.getMonth()+"' did not match input month: '"+_989.month+"'.");
return null;
}
if(_989.date&&_988.getDate()!=_989.date){
dojo.debug("Parsed day of month: '"+_988.getDate()+"' did not match input day of month: '"+_989.date+"'.");
return null;
}
return _988;
};
function _processPattern(_999,_99a,_99b,_99c){
var _99d=function(x){
return x;
};
_99a=_99a||_99d;
_99b=_99b||_99d;
_99c=_99c||_99d;
var _99f=_999.match(/(''|[^'])+/g);
var _9a0=false;
for(var i=0;i<_99f.length;i++){
if(!_99f[i]){
_99f[i]="";
}else{
_99f[i]=(_9a0?_99b:_99a)(_99f[i]);
_9a0=!_9a0;
}
}
return _99c(_99f.join(""));
}
function _buildDateTimeRE(_9a2,info,_9a4,_9a5){
return _9a5.replace(/([a-z])\1*/ig,function(_9a6){
var s;
var c=_9a6.charAt(0);
var l=_9a6.length;
switch(c){
case "y":
s="\\d"+((l==2)?"{2,4}":"+");
break;
case "M":
s=(l>2)?"\\S+":"\\d{1,2}";
break;
case "d":
s="\\d{1,2}";
break;
case "E":
s="\\S+";
break;
case "h":
case "H":
case "K":
case "k":
s="\\d{1,2}";
break;
case "m":
case "s":
s="[0-5]\\d";
break;
case "S":
s="\\d{1,3}";
break;
case "a":
var am=_9a4.am||info.am||"AM";
var pm=_9a4.pm||info.pm||"PM";
if(_9a4.strict){
s=am+"|"+pm;
}else{
s=am;
s+=(am!=am.toLowerCase())?"|"+am.toLowerCase():"";
s+="|";
s+=(pm!=pm.toLowerCase())?pm+"|"+pm.toLowerCase():pm;
}
break;
default:
dojo.unimplemented("parse of date format, pattern="+_9a5);
}
if(_9a2){
_9a2.push(_9a6);
}
return "\\s*("+s+")\\s*";
});
}
})();
dojo.date.strftime=function(_9ac,_9ad,_9ae){
var _9af=null;
function _(s,n){
return dojo.string.pad(s,n||2,_9af||"0");
}
var info=dojo.date._getGregorianBundle(_9ae);
function $(_9b3){
switch(_9b3){
case "a":
return dojo.date.getDayShortName(_9ac,_9ae);
case "A":
return dojo.date.getDayName(_9ac,_9ae);
case "b":
case "h":
return dojo.date.getMonthShortName(_9ac,_9ae);
case "B":
return dojo.date.getMonthName(_9ac,_9ae);
case "c":
return dojo.date.format(_9ac,{locale:_9ae});
case "C":
return _(Math.floor(_9ac.getFullYear()/100));
case "d":
return _(_9ac.getDate());
case "D":
return $("m")+"/"+$("d")+"/"+$("y");
case "e":
if(_9af==null){
_9af=" ";
}
return _(_9ac.getDate());
case "f":
if(_9af==null){
_9af=" ";
}
return _(_9ac.getMonth()+1);
case "g":
break;
case "G":
dojo.unimplemented("unimplemented modifier 'G'");
break;
case "F":
return $("Y")+"-"+$("m")+"-"+$("d");
case "H":
return _(_9ac.getHours());
case "I":
return _(_9ac.getHours()%12||12);
case "j":
return _(dojo.date.getDayOfYear(_9ac),3);
case "k":
if(_9af==null){
_9af=" ";
}
return _(_9ac.getHours());
case "l":
if(_9af==null){
_9af=" ";
}
return _(_9ac.getHours()%12||12);
case "m":
return _(_9ac.getMonth()+1);
case "M":
return _(_9ac.getMinutes());
case "n":
return "\n";
case "p":
return info[_9ac.getHours()<12?"am":"pm"];
case "r":
return $("I")+":"+$("M")+":"+$("S")+" "+$("p");
case "R":
return $("H")+":"+$("M");
case "S":
return _(_9ac.getSeconds());
case "t":
return "\t";
case "T":
return $("H")+":"+$("M")+":"+$("S");
case "u":
return String(_9ac.getDay()||7);
case "U":
return _(dojo.date.getWeekOfYear(_9ac));
case "V":
return _(dojo.date.getIsoWeekOfYear(_9ac));
case "W":
return _(dojo.date.getWeekOfYear(_9ac,1));
case "w":
return String(_9ac.getDay());
case "x":
return dojo.date.format(_9ac,{selector:"dateOnly",locale:_9ae});
case "X":
return dojo.date.format(_9ac,{selector:"timeOnly",locale:_9ae});
case "y":
return _(_9ac.getFullYear()%100);
case "Y":
return String(_9ac.getFullYear());
case "z":
var _9b4=_9ac.getTimezoneOffset();
return (_9b4>0?"-":"+")+_(Math.floor(Math.abs(_9b4)/60))+":"+_(Math.abs(_9b4)%60);
case "Z":
return dojo.date.getTimezoneName(_9ac);
case "%":
return "%";
}
}
var _9b5="";
var i=0;
var _9b7=0;
var _9b8=null;
while((_9b7=_9ad.indexOf("%",i))!=-1){
_9b5+=_9ad.substring(i,_9b7++);
switch(_9ad.charAt(_9b7++)){
case "_":
_9af=" ";
break;
case "-":
_9af="";
break;
case "0":
_9af="0";
break;
case "^":
_9b8="upper";
break;
case "*":
_9b8="lower";
break;
case "#":
_9b8="swap";
break;
default:
_9af=null;
_9b7--;
break;
}
var _9b9=$(_9ad.charAt(_9b7++));
switch(_9b8){
case "upper":
_9b9=_9b9.toUpperCase();
break;
case "lower":
_9b9=_9b9.toLowerCase();
break;
case "swap":
var _9ba=_9b9.toLowerCase();
var _9bb="";
var j=0;
var ch="";
while(j<_9b9.length){
ch=_9b9.charAt(j);
_9bb+=(ch==_9ba.charAt(j))?ch.toUpperCase():ch.toLowerCase();
j++;
}
_9b9=_9bb;
break;
default:
break;
}
_9b8=null;
_9b5+=_9b9;
i=_9b7;
}
_9b5+=_9ad.substring(i);
return _9b5;
};
(function(){
var _9be=[];
dojo.date.addCustomFormats=function(_9bf,_9c0){
_9be.push({pkg:_9bf,name:_9c0});
};
dojo.date._getGregorianBundle=function(_9c1){
var _9c2={};
dojo.lang.forEach(_9be,function(desc){
var _9c4=dojo.i18n.getLocalization(desc.pkg,desc.name,_9c1);
_9c2=dojo.lang.mixin(_9c2,_9c4);
},this);
return _9c2;
};
})();
dojo.date.addCustomFormats("dojo.i18n.calendar","gregorian");
dojo.date.addCustomFormats("dojo.i18n.calendar","gregorianExtras");
dojo.date.getNames=function(item,type,use,_9c8){
var _9c9;
var _9ca=dojo.date._getGregorianBundle(_9c8);
var _9cb=[item,use,type];
if(use=="standAlone"){
_9c9=_9ca[_9cb.join("-")];
}
_9cb[1]="format";
return (_9c9||_9ca[_9cb.join("-")]).concat();
};
dojo.date.getDayName=function(_9cc,_9cd){
return dojo.date.getNames("days","wide","format",_9cd)[_9cc.getDay()];
};
dojo.date.getDayShortName=function(_9ce,_9cf){
return dojo.date.getNames("days","abbr","format",_9cf)[_9ce.getDay()];
};
dojo.date.getMonthName=function(_9d0,_9d1){
return dojo.date.getNames("months","wide","format",_9d1)[_9d0.getMonth()];
};
dojo.date.getMonthShortName=function(_9d2,_9d3){
return dojo.date.getNames("months","abbr","format",_9d3)[_9d2.getMonth()];
};
dojo.date.toRelativeString=function(_9d4){
var now=new Date();
var diff=(now-_9d4)/1000;
var end=" ago";
var _9d8=false;
if(diff<0){
_9d8=true;
end=" from now";
diff=-diff;
}
if(diff<60){
diff=Math.round(diff);
return diff+" second"+(diff==1?"":"s")+end;
}
if(diff<60*60){
diff=Math.round(diff/60);
return diff+" minute"+(diff==1?"":"s")+end;
}
if(diff<60*60*24){
diff=Math.round(diff/3600);
return diff+" hour"+(diff==1?"":"s")+end;
}
if(diff<60*60*24*7){
diff=Math.round(diff/(3600*24));
if(diff==1){
return _9d8?"Tomorrow":"Yesterday";
}else{
return diff+" days"+end;
}
}
return dojo.date.format(_9d4);
};
dojo.date.toSql=function(_9d9,_9da){
return dojo.date.strftime(_9d9,"%F"+!_9da?" %T":"");
};
dojo.date.fromSql=function(_9db){
var _9dc=_9db.split(/[\- :]/g);
while(_9dc.length<6){
_9dc.push(0);
}
return new Date(_9dc[0],(parseInt(_9dc[1],10)-1),_9dc[2],_9dc[3],_9dc[4],_9dc[5]);
};
dojo.provide("dojo.widget.TimePicker");
dojo.widget.defineWidget("dojo.widget.TimePicker",dojo.widget.HtmlWidget,function(){
this.time="";
this.useDefaultTime=false;
this.useDefaultMinutes=false;
this.storedTime="";
this.currentTime={};
this.classNames={selectedTime:"selectedItem"};
this.any="any";
this.selectedTime={hour:"",minute:"",amPm:"",anyTime:false};
this.hourIndexMap=["",2,4,6,8,10,1,3,5,7,9,11,0];
this.minuteIndexMap=[0,2,4,6,8,10,1,3,5,7,9,11];
},{isContainer:false,templatePath:dojo.uri.dojoUri("src/widget/templates/TimePicker.html"),templateCssPath:dojo.uri.dojoUri("src/widget/templates/TimePicker.css"),postMixInProperties:function(_9dd,frag){
dojo.widget.TimePicker.superclass.postMixInProperties.apply(this,arguments);
this.calendar=dojo.i18n.getLocalization("dojo.i18n.calendar","gregorian",this.lang);
this.widgetStrings=dojo.i18n.getLocalization("dojo.widget","TimePicker",this.lang);
},fillInTemplate:function(args,frag){
var _9e1=this.getFragNodeRef(frag);
dojo.html.copyStyle(this.domNode,_9e1);
if(args.value){
if(args.value instanceof Date){
this.storedTime=dojo.date.toRfc3339(args.value);
}else{
this.storedTime=args.value;
}
}
this.initData();
this.initUI();
},initData:function(){
if(this.storedTime.indexOf("T")!=-1&&this.storedTime.split("T")[1]&&this.storedTime!=" "&&this.storedTime.split("T")[1]!="any"){
this.time=dojo.widget.TimePicker.util.fromRfcDateTime(this.storedTime,this.useDefaultMinutes,this.selectedTime.anyTime);
}else{
if(this.useDefaultTime){
this.time=dojo.widget.TimePicker.util.fromRfcDateTime("",this.useDefaultMinutes,this.selectedTime.anyTime);
}else{
this.selectedTime.anyTime=true;
this.time=dojo.widget.TimePicker.util.fromRfcDateTime("",0,1);
}
}
},initUI:function(){
if(!this.selectedTime.anyTime&&this.time){
var _9e2=dojo.widget.TimePicker.util.toAmPmHour(this.time.getHours());
var hour=_9e2[0];
var isAm=_9e2[1];
var _9e5=this.time.getMinutes();
var _9e6=parseInt(_9e5/5);
this.onSetSelectedHour(this.hourIndexMap[hour]);
this.onSetSelectedMinute(this.minuteIndexMap[_9e6]);
this.onSetSelectedAmPm(isAm);
}else{
this.onSetSelectedAnyTime();
}
},setTime:function(date){
if(date){
this.selectedTime.anyTime=false;
this.setDateTime(dojo.date.toRfc3339(date));
}else{
this.selectedTime.anyTime=true;
}
this.initData();
this.initUI();
},setDateTime:function(_9e8){
this.storedTime=_9e8;
},onClearSelectedHour:function(evt){
this.clearSelectedHour();
},onClearSelectedMinute:function(evt){
this.clearSelectedMinute();
},onClearSelectedAmPm:function(evt){
this.clearSelectedAmPm();
},onClearSelectedAnyTime:function(evt){
this.clearSelectedAnyTime();
if(this.selectedTime.anyTime){
this.selectedTime.anyTime=false;
this.time=dojo.widget.TimePicker.util.fromRfcDateTime("",this.useDefaultMinutes);
this.initUI();
}
},clearSelectedHour:function(){
var _9ed=this.hourContainerNode.getElementsByTagName("td");
for(var i=0;i<_9ed.length;i++){
dojo.html.setClass(_9ed.item(i),"");
}
},clearSelectedMinute:function(){
var _9ef=this.minuteContainerNode.getElementsByTagName("td");
for(var i=0;i<_9ef.length;i++){
dojo.html.setClass(_9ef.item(i),"");
}
},clearSelectedAmPm:function(){
var _9f1=this.amPmContainerNode.getElementsByTagName("td");
for(var i=0;i<_9f1.length;i++){
dojo.html.setClass(_9f1.item(i),"");
}
},clearSelectedAnyTime:function(){
dojo.html.setClass(this.anyTimeContainerNode,"anyTimeContainer");
},onSetSelectedHour:function(evt){
this.onClearSelectedAnyTime();
this.onClearSelectedHour();
this.setSelectedHour(evt);
this.onSetTime();
},setSelectedHour:function(evt){
if(evt&&evt.target){
if(evt.target.nodeType==dojo.dom.ELEMENT_NODE){
var _9f5=evt.target;
}else{
var _9f5=evt.target.parentNode;
}
dojo.event.browser.stopEvent(evt);
dojo.html.setClass(_9f5,this.classNames.selectedTime);
this.selectedTime["hour"]=_9f5.innerHTML;
}else{
if(!isNaN(evt)){
var _9f6=this.hourContainerNode.getElementsByTagName("td");
if(_9f6.item(evt)){
dojo.html.setClass(_9f6.item(evt),this.classNames.selectedTime);
this.selectedTime["hour"]=_9f6.item(evt).innerHTML;
}
}
}
this.selectedTime.anyTime=false;
},onSetSelectedMinute:function(evt){
this.onClearSelectedAnyTime();
this.onClearSelectedMinute();
this.setSelectedMinute(evt);
this.selectedTime.anyTime=false;
this.onSetTime();
},setSelectedMinute:function(evt){
if(evt&&evt.target){
if(evt.target.nodeType==dojo.dom.ELEMENT_NODE){
var _9f9=evt.target;
}else{
var _9f9=evt.target.parentNode;
}
dojo.event.browser.stopEvent(evt);
dojo.html.setClass(_9f9,this.classNames.selectedTime);
this.selectedTime["minute"]=_9f9.innerHTML;
}else{
if(!isNaN(evt)){
var _9fa=this.minuteContainerNode.getElementsByTagName("td");
if(_9fa.item(evt)){
dojo.html.setClass(_9fa.item(evt),this.classNames.selectedTime);
this.selectedTime["minute"]=_9fa.item(evt).innerHTML;
}
}
}
},onSetSelectedAmPm:function(evt){
this.onClearSelectedAnyTime();
this.onClearSelectedAmPm();
this.setSelectedAmPm(evt);
this.selectedTime.anyTime=false;
this.onSetTime();
},setSelectedAmPm:function(evt){
var _9fd=evt.target;
if(evt&&_9fd){
if(_9fd.nodeType!=dojo.dom.ELEMENT_NODE){
_9fd=_9fd.parentNode;
}
dojo.event.browser.stopEvent(evt);
this.selectedTime.amPm=_9fd.id;
dojo.html.setClass(_9fd,this.classNames.selectedTime);
}else{
evt=evt?0:1;
var _9fe=this.amPmContainerNode.getElementsByTagName("td");
if(_9fe.item(evt)){
this.selectedTime.amPm=_9fe.item(evt).id;
dojo.html.setClass(_9fe.item(evt),this.classNames.selectedTime);
}
}
},onSetSelectedAnyTime:function(evt){
this.onClearSelectedHour();
this.onClearSelectedMinute();
this.onClearSelectedAmPm();
this.setSelectedAnyTime();
this.onSetTime();
},setSelectedAnyTime:function(evt){
this.selectedTime.anyTime=true;
dojo.html.setClass(this.anyTimeContainerNode,this.classNames.selectedTime+" "+"anyTimeContainer");
},onClick:function(evt){
dojo.event.browser.stopEvent(evt);
},onSetTime:function(){
if(this.selectedTime.anyTime){
this.time=new Date();
var _a02=dojo.widget.TimePicker.util.toRfcDateTime(this.time);
this.setDateTime(_a02.split("T")[0]);
}else{
var hour=12;
var _a04=0;
var isAm=false;
if(this.selectedTime["hour"]){
hour=parseInt(this.selectedTime["hour"],10);
}
if(this.selectedTime["minute"]){
_a04=parseInt(this.selectedTime["minute"],10);
}
if(this.selectedTime["amPm"]){
isAm=(this.selectedTime["amPm"].toLowerCase()=="am");
}
this.time=new Date();
this.time.setHours(dojo.widget.TimePicker.util.fromAmPmHour(hour,isAm));
this.time.setMinutes(_a04);
this.setDateTime(dojo.widget.TimePicker.util.toRfcDateTime(this.time));
}
this.onValueChanged(this.time);
},onValueChanged:function(date){
}});
dojo.widget.TimePicker.util=new function(){
this.toRfcDateTime=function(_a07){
if(!_a07){
_a07=new Date();
}
_a07.setSeconds(0);
return dojo.date.strftime(_a07,"%Y-%m-%dT%H:%M:00%z");
};
this.fromRfcDateTime=function(_a08,_a09,_a0a){
var _a0b=new Date();
if(!_a08||_a08.indexOf("T")==-1){
if(_a09){
_a0b.setMinutes(Math.floor(_a0b.getMinutes()/5)*5);
}else{
_a0b.setMinutes(0);
}
}else{
var _a0c=_a08.split("T")[1].split(":");
var _a0b=new Date();
_a0b.setHours(_a0c[0]);
_a0b.setMinutes(_a0c[1]);
}
return _a0b;
};
this.toAmPmHour=function(hour){
var _a0e=hour;
var isAm=true;
if(_a0e==0){
_a0e=12;
}else{
if(_a0e>12){
_a0e=_a0e-12;
isAm=false;
}else{
if(_a0e==12){
isAm=false;
}
}
}
return [_a0e,isAm];
};
this.fromAmPmHour=function(_a10,isAm){
var hour=parseInt(_a10,10);
if(isAm&&hour==12){
hour=0;
}else{
if(!isAm&&hour<12){
hour=hour+12;
}
}
return hour;
};
};


__CPAN_EDITION__ dojoWebsite build.txt

Files baked into this package:

dojoGuardStart.js,
../src/bootstrap1.js,
../src/loader.js,
dojoGuardEnd.js,
../src/hostenv_browser.js,
../src/bootstrap2.js,
../src/dom.js,
../src/xml/Parse.js,
../src/lang/common.js,
../src/lang/func.js,
../src/lang/array.js,
../src/lang/extras.js,
../src/lang/declare.js,
../src/ns.js,
../src/event/common.js,
../src/event/topic.js,
../src/event/browser.js,
../src/event/__package__.js,
../src/widget/Manager.js,
../src/uri/Uri.js,
../src/uri/__package__.js,
../src/html/common.js,
../src/a11y.js,
../src/widget/Widget.js,
../src/widget/Parse.js,
../src/html/style.js,
../src/widget/DomWidget.js,
../src/html/display.js,
../src/html/layout.js,
../src/html/util.js,
../src/gfx/color.js,
../src/lfx/Animation.js,
../src/html/color.js,
../src/lfx/html.js,
../src/lfx/__package__.js,
../src/lfx/toggle.js,
../src/widget/HtmlWidget.js,
../src/widget/__package__.js,
../src/string/common.js,
../src/string.js,
../src/io/common.js,
../src/string/extras.js,
../src/undo/browser.js,
../src/io/BrowserIO.js,
../src/io/cookie.js,
../src/io/__package__.js,
../__package__.js,
../src/widget/ContentPane.js,
../src/html/__package__.js,
../src/html/selection.js,
../src/widget/Button.js,
../src/date/serialize.js,
../src/date/common.js,
../src/date/supplemental.js,
../src/i18n/common.js,
../src/date/format.js,
../src/widget/TimePicker.js

		
__CPAN_EDITION__ editor dojo.js
/*
	Copyright (c) 2004-2006, The Dojo Foundation
	All Rights Reserved.

	Licensed under the Academic Free License version 2.1 or above OR the
	modified BSD license. For more information on Dojo licensing, see:

		http://dojotoolkit.org/community/licensing.shtml
*/

/*
	This is a compiled version of Dojo, built for deployment and not for
	development. To get an editable version, please visit:

		http://dojotoolkit.org

	for documentation and information on getting the source.
*/

if(typeof dojo=="undefined"){
var dj_global=this;
var dj_currentContext=this;
function dj_undef(_1,_2){
return (typeof (_2||dj_currentContext)[_1]=="undefined");
}
if(dj_undef("djConfig",this)){
var djConfig={};
}
if(dj_undef("dojo",this)){
var dojo={};
}
dojo.global=function(){
return dj_currentContext;
};
dojo.locale=djConfig.locale;
dojo.version={major:0,minor:4,patch:1,flag:"",revision:Number("$Rev: 6824 $".match(/[0-9]+/)[0]),toString:function(){
with(dojo.version){
return major+"."+minor+"."+patch+flag+" ("+revision+")";
}
}};
dojo.evalProp=function(_3,_4,_5){
if((!_4)||(!_3)){
return undefined;
}
if(!dj_undef(_3,_4)){
return _4[_3];
}
return (_5?(_4[_3]={}):undefined);
};
dojo.parseObjPath=function(_6,_7,_8){
var _9=(_7||dojo.global());
var _a=_6.split(".");
var _b=_a.pop();
for(var i=0,l=_a.length;i<l&&_9;i++){
_9=dojo.evalProp(_a[i],_9,_8);
}
return {obj:_9,prop:_b};
};
dojo.evalObjPath=function(_e,_f){
if(typeof _e!="string"){
return dojo.global();
}
if(_e.indexOf(".")==-1){
return dojo.evalProp(_e,dojo.global(),_f);
}
var ref=dojo.parseObjPath(_e,dojo.global(),_f);
if(ref){
return dojo.evalProp(ref.prop,ref.obj,_f);
}
return null;
};
dojo.errorToString=function(_11){
if(!dj_undef("message",_11)){
return _11.message;
}else{
if(!dj_undef("description",_11)){
return _11.description;
}else{
return _11;
}
}
};
dojo.raise=function(_12,_13){
if(_13){
_12=_12+": "+dojo.errorToString(_13);
}else{
_12=dojo.errorToString(_12);
}
try{
if(djConfig.isDebug){
dojo.hostenv.println("FATAL exception raised: "+_12);
}
}
catch(e){
}
throw _13||Error(_12);
};
dojo.debug=function(){
};
dojo.debugShallow=function(obj){
};
dojo.profile={start:function(){
},end:function(){
},stop:function(){
},dump:function(){
}};
function dj_eval(_15){
return dj_global.eval?dj_global.eval(_15):eval(_15);
}
dojo.unimplemented=function(_16,_17){
var _18="'"+_16+"' not implemented";
if(_17!=null){
_18+=" "+_17;
}
dojo.raise(_18);
};
dojo.deprecated=function(_19,_1a,_1b){
var _1c="DEPRECATED: "+_19;
if(_1a){
_1c+=" "+_1a;
}
if(_1b){
_1c+=" -- will be removed in version: "+_1b;
}
dojo.debug(_1c);
};
dojo.render=(function(){
function vscaffold(_1d,_1e){
var tmp={capable:false,support:{builtin:false,plugin:false},prefixes:_1d};
for(var i=0;i<_1e.length;i++){
tmp[_1e[i]]=false;
}
return tmp;
}
return {name:"",ver:dojo.version,os:{win:false,linux:false,osx:false},html:vscaffold(["html"],["ie","opera","khtml","safari","moz"]),svg:vscaffold(["svg"],["corel","adobe","batik"]),vml:vscaffold(["vml"],["ie"]),swf:vscaffold(["Swf","Flash","Mm"],["mm"]),swt:vscaffold(["Swt"],["ibm"])};
})();
dojo.hostenv=(function(){
var _21={isDebug:false,allowQueryConfig:false,baseScriptUri:"",baseRelativePath:"",libraryScriptUri:"",iePreventClobber:false,ieClobberMinimal:true,preventBackButtonFix:true,delayMozLoadingFix:false,searchIds:[],parseWidgets:true};
if(typeof djConfig=="undefined"){
djConfig=_21;
}else{
for(var _22 in _21){
if(typeof djConfig[_22]=="undefined"){
djConfig[_22]=_21[_22];
}
}
}
return {name_:"(unset)",version_:"(unset)",getName:function(){
return this.name_;
},getVersion:function(){
return this.version_;
},getText:function(uri){
dojo.unimplemented("getText","uri="+uri);
}};
})();
dojo.hostenv.getBaseScriptUri=function(){
if(djConfig.baseScriptUri.length){
return djConfig.baseScriptUri;
}
var uri=new String(djConfig.libraryScriptUri||djConfig.baseRelativePath);
if(!uri){
dojo.raise("Nothing returned by getLibraryScriptUri(): "+uri);
}
var _25=uri.lastIndexOf("/");
djConfig.baseScriptUri=djConfig.baseRelativePath;
return djConfig.baseScriptUri;
};
(function(){
var _26={pkgFileName:"__package__",loading_modules_:{},loaded_modules_:{},addedToLoadingCount:[],removedFromLoadingCount:[],inFlightCount:0,modulePrefixes_:{dojo:{name:"dojo",value:"src"}},setModulePrefix:function(_27,_28){
this.modulePrefixes_[_27]={name:_27,value:_28};
},moduleHasPrefix:function(_29){
var mp=this.modulePrefixes_;
return Boolean(mp[_29]&&mp[_29].value);
},getModulePrefix:function(_2b){
if(this.moduleHasPrefix(_2b)){
return this.modulePrefixes_[_2b].value;
}
return _2b;
},getTextStack:[],loadUriStack:[],loadedUris:[],post_load_:false,modulesLoadedListeners:[],unloadListeners:[],loadNotifying:false};
for(var _2c in _26){
dojo.hostenv[_2c]=_26[_2c];
}
})();
dojo.hostenv.loadPath=function(_2d,_2e,cb){
var uri;
if(_2d.charAt(0)=="/"||_2d.match(/^\w+:/)){
uri=_2d;
}else{
uri=this.getBaseScriptUri()+_2d;
}
if(djConfig.cacheBust&&dojo.render.html.capable){
uri+="?"+String(djConfig.cacheBust).replace(/\W+/g,"");
}
try{
return !_2e?this.loadUri(uri,cb):this.loadUriAndCheck(uri,_2e,cb);
}
catch(e){
dojo.debug(e);
return false;
}
};
dojo.hostenv.loadUri=function(uri,cb){
if(this.loadedUris[uri]){
return true;
}
var _33=this.getText(uri,null,true);
if(!_33){
return false;
}
this.loadedUris[uri]=true;
if(cb){
_33="("+_33+")";
}
var _34=dj_eval(_33);
if(cb){
cb(_34);
}
return true;
};
dojo.hostenv.loadUriAndCheck=function(uri,_36,cb){
var ok=true;
try{
ok=this.loadUri(uri,cb);
}
catch(e){
dojo.debug("failed loading ",uri," with error: ",e);
}
return Boolean(ok&&this.findModule(_36,false));
};
dojo.loaded=function(){
};
dojo.unloaded=function(){
};
dojo.hostenv.loaded=function(){
this.loadNotifying=true;
this.post_load_=true;
var mll=this.modulesLoadedListeners;
for(var x=0;x<mll.length;x++){
mll[x]();
}
this.modulesLoadedListeners=[];
this.loadNotifying=false;
dojo.loaded();
};
dojo.hostenv.unloaded=function(){
var mll=this.unloadListeners;
while(mll.length){
(mll.pop())();
}
dojo.unloaded();
};
dojo.addOnLoad=function(obj,_3d){
var dh=dojo.hostenv;
if(arguments.length==1){
dh.modulesLoadedListeners.push(obj);
}else{
if(arguments.length>1){
dh.modulesLoadedListeners.push(function(){
obj[_3d]();
});
}
}
if(dh.post_load_&&dh.inFlightCount==0&&!dh.loadNotifying){
dh.callLoaded();
}
};
dojo.addOnUnload=function(obj,_40){
var dh=dojo.hostenv;
if(arguments.length==1){
dh.unloadListeners.push(obj);
}else{
if(arguments.length>1){
dh.unloadListeners.push(function(){
obj[_40]();
});
}
}
};
dojo.hostenv.modulesLoaded=function(){
if(this.post_load_){
return;
}
if(this.loadUriStack.length==0&&this.getTextStack.length==0){
if(this.inFlightCount>0){
dojo.debug("files still in flight!");
return;
}
dojo.hostenv.callLoaded();
}
};
dojo.hostenv.callLoaded=function(){
if(typeof setTimeout=="object"){
setTimeout("dojo.hostenv.loaded();",0);
}else{
dojo.hostenv.loaded();
}
};
dojo.hostenv.getModuleSymbols=function(_42){
var _43=_42.split(".");
for(var i=_43.length;i>0;i--){
var _45=_43.slice(0,i).join(".");
if((i==1)&&!this.moduleHasPrefix(_45)){
_43[0]="../"+_43[0];
}else{
var _46=this.getModulePrefix(_45);
if(_46!=_45){
_43.splice(0,i,_46);
break;
}
}
}
return _43;
};
dojo.hostenv._global_omit_module_check=false;
dojo.hostenv.loadModule=function(_47,_48,_49){
if(!_47){
return;
}
_49=this._global_omit_module_check||_49;
var _4a=this.findModule(_47,false);
if(_4a){
return _4a;
}
if(dj_undef(_47,this.loading_modules_)){
this.addedToLoadingCount.push(_47);
}
this.loading_modules_[_47]=1;
var _4b=_47.replace(/\./g,"/")+".js";
var _4c=_47.split(".");
var _4d=this.getModuleSymbols(_47);
var _4e=((_4d[0].charAt(0)!="/")&&!_4d[0].match(/^\w+:/));
var _4f=_4d[_4d.length-1];
var ok;
if(_4f=="*"){
_47=_4c.slice(0,-1).join(".");
while(_4d.length){
_4d.pop();
_4d.push(this.pkgFileName);
_4b=_4d.join("/")+".js";
if(_4e&&_4b.charAt(0)=="/"){
_4b=_4b.slice(1);
}
ok=this.loadPath(_4b,!_49?_47:null);
if(ok){
break;
}
_4d.pop();
}
}else{
_4b=_4d.join("/")+".js";
_47=_4c.join(".");
var _51=!_49?_47:null;
ok=this.loadPath(_4b,_51);
if(!ok&&!_48){
_4d.pop();
while(_4d.length){
_4b=_4d.join("/")+".js";
ok=this.loadPath(_4b,_51);
if(ok){
break;
}
_4d.pop();
_4b=_4d.join("/")+"/"+this.pkgFileName+".js";
if(_4e&&_4b.charAt(0)=="/"){
_4b=_4b.slice(1);
}
ok=this.loadPath(_4b,_51);
if(ok){
break;
}
}
}
if(!ok&&!_49){
dojo.raise("Could not load '"+_47+"'; last tried '"+_4b+"'");
}
}
if(!_49&&!this["isXDomain"]){
_4a=this.findModule(_47,false);
if(!_4a){
dojo.raise("symbol '"+_47+"' is not defined after loading '"+_4b+"'");
}
}
return _4a;
};
dojo.hostenv.startPackage=function(_52){
var _53=String(_52);
var _54=_53;
var _55=_52.split(/\./);
if(_55[_55.length-1]=="*"){
_55.pop();
_54=_55.join(".");
}
var _56=dojo.evalObjPath(_54,true);
this.loaded_modules_[_53]=_56;
this.loaded_modules_[_54]=_56;
return _56;
};
dojo.hostenv.findModule=function(_57,_58){
var lmn=String(_57);
if(this.loaded_modules_[lmn]){
return this.loaded_modules_[lmn];
}
if(_58){
dojo.raise("no loaded module named '"+_57+"'");
}
return null;
};
dojo.kwCompoundRequire=function(_5a){
var _5b=_5a["common"]||[];
var _5c=_5a[dojo.hostenv.name_]?_5b.concat(_5a[dojo.hostenv.name_]||[]):_5b.concat(_5a["default"]||[]);
for(var x=0;x<_5c.length;x++){
var _5e=_5c[x];
if(_5e.constructor==Array){
dojo.hostenv.loadModule.apply(dojo.hostenv,_5e);
}else{
dojo.hostenv.loadModule(_5e);
}
}
};
dojo.require=function(_5f){
dojo.hostenv.loadModule.apply(dojo.hostenv,arguments);
};
dojo.requireIf=function(_60,_61){
var _62=arguments[0];
if((_62===true)||(_62=="common")||(_62&&dojo.render[_62].capable)){
var _63=[];
for(var i=1;i<arguments.length;i++){
_63.push(arguments[i]);
}
dojo.require.apply(dojo,_63);
}
};
dojo.requireAfterIf=dojo.requireIf;
dojo.provide=function(_65){
return dojo.hostenv.startPackage.apply(dojo.hostenv,arguments);
};
dojo.registerModulePath=function(_66,_67){
return dojo.hostenv.setModulePrefix(_66,_67);
};
dojo.setModulePrefix=function(_68,_69){
dojo.deprecated("dojo.setModulePrefix(\""+_68+"\", \""+_69+"\")","replaced by dojo.registerModulePath","0.5");
return dojo.registerModulePath(_68,_69);
};
dojo.exists=function(obj,_6b){
var p=_6b.split(".");
for(var i=0;i<p.length;i++){
if(!obj[p[i]]){
return false;
}
obj=obj[p[i]];
}
return true;
};
dojo.hostenv.normalizeLocale=function(_6e){
var _6f=_6e?_6e.toLowerCase():dojo.locale;
if(_6f=="root"){
_6f="ROOT";
}
return _6f;
};
dojo.hostenv.searchLocalePath=function(_70,_71,_72){
_70=dojo.hostenv.normalizeLocale(_70);
var _73=_70.split("-");
var _74=[];
for(var i=_73.length;i>0;i--){
_74.push(_73.slice(0,i).join("-"));
}
_74.push(false);
if(_71){
_74.reverse();
}
for(var j=_74.length-1;j>=0;j--){
var loc=_74[j]||"ROOT";
var _78=_72(loc);
if(_78){
break;
}
}
};
dojo.hostenv.localesGenerated;
dojo.hostenv.registerNlsPrefix=function(){
dojo.registerModulePath("nls","nls");
};
dojo.hostenv.preloadLocalizations=function(){
if(dojo.hostenv.localesGenerated){
dojo.hostenv.registerNlsPrefix();
function preload(_79){
_79=dojo.hostenv.normalizeLocale(_79);
dojo.hostenv.searchLocalePath(_79,true,function(loc){
for(var i=0;i<dojo.hostenv.localesGenerated.length;i++){
if(dojo.hostenv.localesGenerated[i]==loc){
dojo["require"]("nls.dojo_"+loc);
return true;
}
}
return false;
});
}
preload();
var _7c=djConfig.extraLocale||[];
for(var i=0;i<_7c.length;i++){
preload(_7c[i]);
}
}
dojo.hostenv.preloadLocalizations=function(){
};
};
dojo.requireLocalization=function(_7e,_7f,_80,_81){
dojo.hostenv.preloadLocalizations();
var _82=dojo.hostenv.normalizeLocale(_80);
var _83=[_7e,"nls",_7f].join(".");
var _84="";
if(_81){
var _85=_81.split(",");
for(var i=0;i<_85.length;i++){
if(_82.indexOf(_85[i])==0){
if(_85[i].length>_84.length){
_84=_85[i];
}
}
}
if(!_84){
_84="ROOT";
}
}
var _87=_81?_84:_82;
var _88=dojo.hostenv.findModule(_83);
var _89=null;
if(_88){
if(djConfig.localizationComplete&&_88._built){
return;
}
var _8a=_87.replace("-","_");
var _8b=_83+"."+_8a;
_89=dojo.hostenv.findModule(_8b);
}
if(!_89){
_88=dojo.hostenv.startPackage(_83);
var _8c=dojo.hostenv.getModuleSymbols(_7e);
var _8d=_8c.concat("nls").join("/");
var _8e;
dojo.hostenv.searchLocalePath(_87,_81,function(loc){
var _90=loc.replace("-","_");
var _91=_83+"."+_90;
var _92=false;
if(!dojo.hostenv.findModule(_91)){
dojo.hostenv.startPackage(_91);
var _93=[_8d];
if(loc!="ROOT"){
_93.push(loc);
}
_93.push(_7f);
var _94=_93.join("/")+".js";
_92=dojo.hostenv.loadPath(_94,null,function(_95){
var _96=function(){
};
_96.prototype=_8e;
_88[_90]=new _96();
for(var j in _95){
_88[_90][j]=_95[j];
}
});
}else{
_92=true;
}
if(_92&&_88[_90]){
_8e=_88[_90];
}else{
_88[_90]=_8e;
}
if(_81){
return true;
}
});
}
if(_81&&_82!=_84){
_88[_82.replace("-","_")]=_88[_84.replace("-","_")];
}
};
(function(){
var _98=djConfig.extraLocale;
if(_98){
if(!_98 instanceof Array){
_98=[_98];
}
var req=dojo.requireLocalization;
dojo.requireLocalization=function(m,b,_9c,_9d){
req(m,b,_9c,_9d);
if(_9c){
return;
}
for(var i=0;i<_98.length;i++){
req(m,b,_98[i],_9d);
}
};
}
})();
}
if(typeof window!="undefined"){
(function(){
if(djConfig.allowQueryConfig){
var _9f=document.location.toString();
var _a0=_9f.split("?",2);
if(_a0.length>1){
var _a1=_a0[1];
var _a2=_a1.split("&");
for(var x in _a2){
var sp=_a2[x].split("=");
if((sp[0].length>9)&&(sp[0].substr(0,9)=="djConfig.")){
var opt=sp[0].substr(9);
try{
djConfig[opt]=eval(sp[1]);
}
catch(e){
djConfig[opt]=sp[1];
}
}
}
}
}
if(((djConfig["baseScriptUri"]=="")||(djConfig["baseRelativePath"]==""))&&(document&&document.getElementsByTagName)){
var _a6=document.getElementsByTagName("script");
var _a7=/(__package__|dojo|bootstrap1)\.js([\?\.]|$)/i;
for(var i=0;i<_a6.length;i++){
var src=_a6[i].getAttribute("src");
if(!src){
continue;
}
var m=src.match(_a7);
if(m){
var _ab=src.substring(0,m.index);
if(src.indexOf("bootstrap1")>-1){
_ab+="../";
}
if(!this["djConfig"]){
djConfig={};
}
if(djConfig["baseScriptUri"]==""){
djConfig["baseScriptUri"]=_ab;
}
if(djConfig["baseRelativePath"]==""){
djConfig["baseRelativePath"]=_ab;
}
break;
}
}
}
var dr=dojo.render;
var drh=dojo.render.html;
var drs=dojo.render.svg;
var dua=(drh.UA=navigator.userAgent);
var dav=(drh.AV=navigator.appVersion);
var t=true;
var f=false;
drh.capable=t;
drh.support.builtin=t;
dr.ver=parseFloat(drh.AV);
dr.os.mac=dav.indexOf("Macintosh")>=0;
dr.os.win=dav.indexOf("Windows")>=0;
dr.os.linux=dav.indexOf("X11")>=0;
drh.opera=dua.indexOf("Opera")>=0;
drh.khtml=(dav.indexOf("Konqueror")>=0)||(dav.indexOf("Safari")>=0);
drh.safari=dav.indexOf("Safari")>=0;
var _b3=dua.indexOf("Gecko");
drh.mozilla=drh.moz=(_b3>=0)&&(!drh.khtml);
if(drh.mozilla){
drh.geckoVersion=dua.substring(_b3+6,_b3+14);
}
drh.ie=(document.all)&&(!drh.opera);
drh.ie50=drh.ie&&dav.indexOf("MSIE 5.0")>=0;
drh.ie55=drh.ie&&dav.indexOf("MSIE 5.5")>=0;
drh.ie60=drh.ie&&dav.indexOf("MSIE 6.0")>=0;
drh.ie70=drh.ie&&dav.indexOf("MSIE 7.0")>=0;
var cm=document["compatMode"];
drh.quirks=(cm=="BackCompat")||(cm=="QuirksMode")||drh.ie55||drh.ie50;
dojo.locale=dojo.locale||(drh.ie?navigator.userLanguage:navigator.language).toLowerCase();
dr.vml.capable=drh.ie;
drs.capable=f;
drs.support.plugin=f;
drs.support.builtin=f;
var _b5=window["document"];
var tdi=_b5["implementation"];
if((tdi)&&(tdi["hasFeature"])&&(tdi.hasFeature("org.w3c.dom.svg","1.0"))){
drs.capable=t;
drs.support.builtin=t;
drs.support.plugin=f;
}
if(drh.safari){
var tmp=dua.split("AppleWebKit/")[1];
var ver=parseFloat(tmp.split(" ")[0]);
if(ver>=420){
drs.capable=t;
drs.support.builtin=t;
drs.support.plugin=f;
}
}else{
}
})();
dojo.hostenv.startPackage("dojo.hostenv");
dojo.render.name=dojo.hostenv.name_="browser";
dojo.hostenv.searchIds=[];
dojo.hostenv._XMLHTTP_PROGIDS=["Msxml2.XMLHTTP","Microsoft.XMLHTTP","Msxml2.XMLHTTP.4.0"];
dojo.hostenv.getXmlhttpObject=function(){
var _b9=null;
var _ba=null;
try{
_b9=new XMLHttpRequest();
}
catch(e){
}
if(!_b9){
for(var i=0;i<3;++i){
var _bc=dojo.hostenv._XMLHTTP_PROGIDS[i];
try{
_b9=new ActiveXObject(_bc);
}
catch(e){
_ba=e;
}
if(_b9){
dojo.hostenv._XMLHTTP_PROGIDS=[_bc];
break;
}
}
}
if(!_b9){
return dojo.raise("XMLHTTP not available",_ba);
}
return _b9;
};
dojo.hostenv._blockAsync=false;
dojo.hostenv.getText=function(uri,_be,_bf){
if(!_be){
this._blockAsync=true;
}
var _c0=this.getXmlhttpObject();
function isDocumentOk(_c1){
var _c2=_c1["status"];
return Boolean((!_c2)||((200<=_c2)&&(300>_c2))||(_c2==304));
}
if(_be){
var _c3=this,_c4=null,gbl=dojo.global();
var xhr=dojo.evalObjPath("dojo.io.XMLHTTPTransport");
_c0.onreadystatechange=function(){
if(_c4){
gbl.clearTimeout(_c4);
_c4=null;
}
if(_c3._blockAsync||(xhr&&xhr._blockAsync)){
_c4=gbl.setTimeout(function(){
_c0.onreadystatechange.apply(this);
},10);
}else{
if(4==_c0.readyState){
if(isDocumentOk(_c0)){
_be(_c0.responseText);
}
}
}
};
}
_c0.open("GET",uri,_be?true:false);
try{
_c0.send(null);
if(_be){
return null;
}
if(!isDocumentOk(_c0)){
var err=Error("Unable to load "+uri+" status:"+_c0.status);
err.status=_c0.status;
err.responseText=_c0.responseText;
throw err;
}
}
catch(e){
this._blockAsync=false;
if((_bf)&&(!_be)){
return null;
}else{
throw e;
}
}
this._blockAsync=false;
return _c0.responseText;
};
dojo.hostenv.defaultDebugContainerId="dojoDebug";
dojo.hostenv._println_buffer=[];
dojo.hostenv._println_safe=false;
dojo.hostenv.println=function(_c8){
if(!dojo.hostenv._println_safe){
dojo.hostenv._println_buffer.push(_c8);
}else{
try{
var _c9=document.getElementById(djConfig.debugContainerId?djConfig.debugContainerId:dojo.hostenv.defaultDebugContainerId);
if(!_c9){
_c9=dojo.body();
}
var div=document.createElement("div");
div.appendChild(document.createTextNode(_c8));
_c9.appendChild(div);
}
catch(e){
try{
document.write("<div>"+_c8+"</div>");
}
catch(e2){
window.status=_c8;
}
}
}
};
dojo.addOnLoad(function(){
dojo.hostenv._println_safe=true;
while(dojo.hostenv._println_buffer.length>0){
dojo.hostenv.println(dojo.hostenv._println_buffer.shift());
}
});
function dj_addNodeEvtHdlr(_cb,_cc,fp){
var _ce=_cb["on"+_cc]||function(){
};
_cb["on"+_cc]=function(){
fp.apply(_cb,arguments);
_ce.apply(_cb,arguments);
};
return true;
}
function dj_load_init(e){
var _d0=(e&&e.type)?e.type.toLowerCase():"load";
if(arguments.callee.initialized||(_d0!="domcontentloaded"&&_d0!="load")){
return;
}
arguments.callee.initialized=true;
if(typeof (_timer)!="undefined"){
clearInterval(_timer);
delete _timer;
}
var _d1=function(){
if(dojo.render.html.ie){
dojo.hostenv.makeWidgets();
}
};
if(dojo.hostenv.inFlightCount==0){
_d1();
dojo.hostenv.modulesLoaded();
}else{
dojo.hostenv.modulesLoadedListeners.unshift(_d1);
}
}
if(document.addEventListener){
if(dojo.render.html.opera||(dojo.render.html.moz&&!djConfig.delayMozLoadingFix)){
document.addEventListener("DOMContentLoaded",dj_load_init,null);
}
window.addEventListener("load",dj_load_init,null);
}
if(dojo.render.html.ie&&dojo.render.os.win){
document.attachEvent("onreadystatechange",function(e){
if(document.readyState=="complete"){
dj_load_init();
}
});
}
if(/(WebKit|khtml)/i.test(navigator.userAgent)){
var _timer=setInterval(function(){
if(/loaded|complete/.test(document.readyState)){
dj_load_init();
}
},10);
}
if(dojo.render.html.ie){
dj_addNodeEvtHdlr(window,"beforeunload",function(){
dojo.hostenv._unloading=true;
window.setTimeout(function(){
dojo.hostenv._unloading=false;
},0);
});
}
dj_addNodeEvtHdlr(window,"unload",function(){
dojo.hostenv.unloaded();
if((!dojo.render.html.ie)||(dojo.render.html.ie&&dojo.hostenv._unloading)){
dojo.hostenv.unloaded();
}
});
dojo.hostenv.makeWidgets=function(){
var _d3=[];
if(djConfig.searchIds&&djConfig.searchIds.length>0){
_d3=_d3.concat(djConfig.searchIds);
}
if(dojo.hostenv.searchIds&&dojo.hostenv.searchIds.length>0){
_d3=_d3.concat(dojo.hostenv.searchIds);
}
if((djConfig.parseWidgets)||(_d3.length>0)){
if(dojo.evalObjPath("dojo.widget.Parse")){
var _d4=new dojo.xml.Parse();
if(_d3.length>0){
for(var x=0;x<_d3.length;x++){
var _d6=document.getElementById(_d3[x]);
if(!_d6){
continue;
}
var _d7=_d4.parseElement(_d6,null,true);
dojo.widget.getParser().createComponents(_d7);
}
}else{
if(djConfig.parseWidgets){
var _d7=_d4.parseElement(dojo.body(),null,true);
dojo.widget.getParser().createComponents(_d7);
}
}
}
}
};
dojo.addOnLoad(function(){
if(!dojo.render.html.ie){
dojo.hostenv.makeWidgets();
}
});
try{
if(dojo.render.html.ie){
document.namespaces.add("v","urn:schemas-microsoft-com:vml");
document.createStyleSheet().addRule("v\\:*","behavior:url(#default#VML)");
}
}
catch(e){
}
dojo.hostenv.writeIncludes=function(){
};
if(!dj_undef("document",this)){
dj_currentDocument=this.document;
}
dojo.doc=function(){
return dj_currentDocument;
};
dojo.body=function(){
return dojo.doc().body||dojo.doc().getElementsByTagName("body")[0];
};
dojo.byId=function(id,doc){
if((id)&&((typeof id=="string")||(id instanceof String))){
if(!doc){
doc=dj_currentDocument;
}
var ele=doc.getElementById(id);
if(ele&&(ele.id!=id)&&doc.all){
ele=null;
eles=doc.all[id];
if(eles){
if(eles.length){
for(var i=0;i<eles.length;i++){
if(eles[i].id==id){
ele=eles[i];
break;
}
}
}else{
ele=eles;
}
}
}
return ele;
}
return id;
};
dojo.setContext=function(_dc,_dd){
dj_currentContext=_dc;
dj_currentDocument=_dd;
};
dojo._fireCallback=function(_de,_df,_e0){
if((_df)&&((typeof _de=="string")||(_de instanceof String))){
_de=_df[_de];
}
return (_df?_de.apply(_df,_e0||[]):_de());
};
dojo.withGlobal=function(_e1,_e2,_e3,_e4){
var _e5;
var _e6=dj_currentContext;
var _e7=dj_currentDocument;
try{
dojo.setContext(_e1,_e1.document);
_e5=dojo._fireCallback(_e2,_e3,_e4);
}
finally{
dojo.setContext(_e6,_e7);
}
return _e5;
};
dojo.withDoc=function(_e8,_e9,_ea,_eb){
var _ec;
var _ed=dj_currentDocument;
try{
dj_currentDocument=_e8;
_ec=dojo._fireCallback(_e9,_ea,_eb);
}
finally{
dj_currentDocument=_ed;
}
return _ec;
};
}
(function(){
if(typeof dj_usingBootstrap!="undefined"){
return;
}
var _ee=false;
var _ef=false;
var _f0=false;
if((typeof this["load"]=="function")&&((typeof this["Packages"]=="function")||(typeof this["Packages"]=="object"))){
_ee=true;
}else{
if(typeof this["load"]=="function"){
_ef=true;
}else{
if(window.widget){
_f0=true;
}
}
}
var _f1=[];
if((this["djConfig"])&&((djConfig["isDebug"])||(djConfig["debugAtAllCosts"]))){
_f1.push("debug.js");
}
if((this["djConfig"])&&(djConfig["debugAtAllCosts"])&&(!_ee)&&(!_f0)){
_f1.push("browser_debug.js");
}
var _f2=djConfig["baseScriptUri"];
if((this["djConfig"])&&(djConfig["baseLoaderUri"])){
_f2=djConfig["baseLoaderUri"];
}
for(var x=0;x<_f1.length;x++){
var _f4=_f2+"src/"+_f1[x];
if(_ee||_ef){
load(_f4);
}else{
try{
document.write("<scr"+"ipt type='text/javascript' src='"+_f4+"'></scr"+"ipt>");
}
catch(e){
var _f5=document.createElement("script");
_f5.src=_f4;
document.getElementsByTagName("head")[0].appendChild(_f5);
}
}
}
})();
dojo.provide("dojo.dom");
dojo.dom.ELEMENT_NODE=1;
dojo.dom.ATTRIBUTE_NODE=2;
dojo.dom.TEXT_NODE=3;
dojo.dom.CDATA_SECTION_NODE=4;
dojo.dom.ENTITY_REFERENCE_NODE=5;
dojo.dom.ENTITY_NODE=6;
dojo.dom.PROCESSING_INSTRUCTION_NODE=7;
dojo.dom.COMMENT_NODE=8;
dojo.dom.DOCUMENT_NODE=9;
dojo.dom.DOCUMENT_TYPE_NODE=10;
dojo.dom.DOCUMENT_FRAGMENT_NODE=11;
dojo.dom.NOTATION_NODE=12;
dojo.dom.dojoml="http://www.dojotoolkit.org/2004/dojoml";
dojo.dom.xmlns={svg:"http://www.w3.org/2000/svg",smil:"http://www.w3.org/2001/SMIL20/",mml:"http://www.w3.org/1998/Math/MathML",cml:"http://www.xml-cml.org",xlink:"http://www.w3.org/1999/xlink",xhtml:"http://www.w3.org/1999/xhtml",xul:"http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul",xbl:"http://www.mozilla.org/xbl",fo:"http://www.w3.org/1999/XSL/Format",xsl:"http://www.w3.org/1999/XSL/Transform",xslt:"http://www.w3.org/1999/XSL/Transform",xi:"http://www.w3.org/2001/XInclude",xforms:"http://www.w3.org/2002/01/xforms",saxon:"http://icl.com/saxon",xalan:"http://xml.apache.org/xslt",xsd:"http://www.w3.org/2001/XMLSchema",dt:"http://www.w3.org/2001/XMLSchema-datatypes",xsi:"http://www.w3.org/2001/XMLSchema-instance",rdf:"http://www.w3.org/1999/02/22-rdf-syntax-ns#",rdfs:"http://www.w3.org/2000/01/rdf-schema#",dc:"http://purl.org/dc/elements/1.1/",dcq:"http://purl.org/dc/qualifiers/1.0","soap-env":"http://schemas.xmlsoap.org/soap/envelope/",wsdl:"http://schemas.xmlsoap.org/wsdl/",AdobeExtensions:"http://ns.adobe.com/AdobeSVGViewerExtensions/3.0/"};
dojo.dom.isNode=function(wh){
if(typeof Element=="function"){
try{
return wh instanceof Element;
}
catch(e){
}
}else{
return wh&&!isNaN(wh.nodeType);
}
};
dojo.dom.getUniqueId=function(){
var _f7=dojo.doc();
do{
var id="dj_unique_"+(++arguments.callee._idIncrement);
}while(_f7.getElementById(id));
return id;
};
dojo.dom.getUniqueId._idIncrement=0;
dojo.dom.firstElement=dojo.dom.getFirstChildElement=function(_f9,_fa){
var _fb=_f9.firstChild;
while(_fb&&_fb.nodeType!=dojo.dom.ELEMENT_NODE){
_fb=_fb.nextSibling;
}
if(_fa&&_fb&&_fb.tagName&&_fb.tagName.toLowerCase()!=_fa.toLowerCase()){
_fb=dojo.dom.nextElement(_fb,_fa);
}
return _fb;
};
dojo.dom.lastElement=dojo.dom.getLastChildElement=function(_fc,_fd){
var _fe=_fc.lastChild;
while(_fe&&_fe.nodeType!=dojo.dom.ELEMENT_NODE){
_fe=_fe.previousSibling;
}
if(_fd&&_fe&&_fe.tagName&&_fe.tagName.toLowerCase()!=_fd.toLowerCase()){
_fe=dojo.dom.prevElement(_fe,_fd);
}
return _fe;
};
dojo.dom.nextElement=dojo.dom.getNextSiblingElement=function(_ff,_100){
if(!_ff){
return null;
}
do{
_ff=_ff.nextSibling;
}while(_ff&&_ff.nodeType!=dojo.dom.ELEMENT_NODE);
if(_ff&&_100&&_100.toLowerCase()!=_ff.tagName.toLowerCase()){
return dojo.dom.nextElement(_ff,_100);
}
return _ff;
};
dojo.dom.prevElement=dojo.dom.getPreviousSiblingElement=function(node,_102){
if(!node){
return null;
}
if(_102){
_102=_102.toLowerCase();
}
do{
node=node.previousSibling;
}while(node&&node.nodeType!=dojo.dom.ELEMENT_NODE);
if(node&&_102&&_102.toLowerCase()!=node.tagName.toLowerCase()){
return dojo.dom.prevElement(node,_102);
}
return node;
};
dojo.dom.moveChildren=function(_103,_104,trim){
var _106=0;
if(trim){
while(_103.hasChildNodes()&&_103.firstChild.nodeType==dojo.dom.TEXT_NODE){
_103.removeChild(_103.firstChild);
}
while(_103.hasChildNodes()&&_103.lastChild.nodeType==dojo.dom.TEXT_NODE){
_103.removeChild(_103.lastChild);
}
}
while(_103.hasChildNodes()){
_104.appendChild(_103.firstChild);
_106++;
}
return _106;
};
dojo.dom.copyChildren=function(_107,_108,trim){
var _10a=_107.cloneNode(true);
return this.moveChildren(_10a,_108,trim);
};
dojo.dom.replaceChildren=function(node,_10c){
var _10d=[];
if(dojo.render.html.ie){
for(var i=0;i<node.childNodes.length;i++){
_10d.push(node.childNodes[i]);
}
}
dojo.dom.removeChildren(node);
node.appendChild(_10c);
for(var i=0;i<_10d.length;i++){
dojo.dom.destroyNode(_10d[i]);
}
};
dojo.dom.removeChildren=function(node){
var _110=node.childNodes.length;
while(node.hasChildNodes()){
dojo.dom.removeNode(node.firstChild);
}
return _110;
};
dojo.dom.replaceNode=function(node,_112){
return node.parentNode.replaceChild(_112,node);
};
dojo.dom.destroyNode=function(node){
if(node.parentNode){
node=dojo.dom.removeNode(node);
}
if(node.nodeType!=3){
if(dojo.evalObjPath("dojo.event.browser.clean",false)){
dojo.event.browser.clean(node);
}
if(dojo.render.html.ie){
node.outerHTML="";
}
}
};
dojo.dom.removeNode=function(node){
if(node&&node.parentNode){
return node.parentNode.removeChild(node);
}
};
dojo.dom.getAncestors=function(node,_116,_117){
var _118=[];
var _119=(_116&&(_116 instanceof Function||typeof _116=="function"));
while(node){
if(!_119||_116(node)){
_118.push(node);
}
if(_117&&_118.length>0){
return _118[0];
}
node=node.parentNode;
}
if(_117){
return null;
}
return _118;
};
dojo.dom.getAncestorsByTag=function(node,tag,_11c){
tag=tag.toLowerCase();
return dojo.dom.getAncestors(node,function(el){
return ((el.tagName)&&(el.tagName.toLowerCase()==tag));
},_11c);
};
dojo.dom.getFirstAncestorByTag=function(node,tag){
return dojo.dom.getAncestorsByTag(node,tag,true);
};
dojo.dom.isDescendantOf=function(node,_121,_122){
if(_122&&node){
node=node.parentNode;
}
while(node){
if(node==_121){
return true;
}
node=node.parentNode;
}
return false;
};
dojo.dom.innerXML=function(node){
if(node.innerXML){
return node.innerXML;
}else{
if(node.xml){
return node.xml;
}else{
if(typeof XMLSerializer!="undefined"){
return (new XMLSerializer()).serializeToString(node);
}
}
}
};
dojo.dom.createDocument=function(){
var doc=null;
var _125=dojo.doc();
if(!dj_undef("ActiveXObject")){
var _126=["MSXML2","Microsoft","MSXML","MSXML3"];
for(var i=0;i<_126.length;i++){
try{
doc=new ActiveXObject(_126[i]+".XMLDOM");
}
catch(e){
}
if(doc){
break;
}
}
}else{
if((_125.implementation)&&(_125.implementation.createDocument)){
doc=_125.implementation.createDocument("","",null);
}
}
return doc;
};
dojo.dom.createDocumentFromText=function(str,_129){
if(!_129){
_129="text/xml";
}
if(!dj_undef("DOMParser")){
var _12a=new DOMParser();
return _12a.parseFromString(str,_129);
}else{
if(!dj_undef("ActiveXObject")){
var _12b=dojo.dom.createDocument();
if(_12b){
_12b.async=false;
_12b.loadXML(str);
return _12b;
}else{
dojo.debug("toXml didn't work?");
}
}else{
var _12c=dojo.doc();
if(_12c.createElement){
var tmp=_12c.createElement("xml");
tmp.innerHTML=str;
if(_12c.implementation&&_12c.implementation.createDocument){
var _12e=_12c.implementation.createDocument("foo","",null);
for(var i=0;i<tmp.childNodes.length;i++){
_12e.importNode(tmp.childNodes.item(i),true);
}
return _12e;
}
return ((tmp.document)&&(tmp.document.firstChild?tmp.document.firstChild:tmp));
}
}
}
return null;
};
dojo.dom.prependChild=function(node,_131){
if(_131.firstChild){
_131.insertBefore(node,_131.firstChild);
}else{
_131.appendChild(node);
}
return true;
};
dojo.dom.insertBefore=function(node,ref,_134){
if((_134!=true)&&(node===ref||node.nextSibling===ref)){
return false;
}
var _135=ref.parentNode;
_135.insertBefore(node,ref);
return true;
};
dojo.dom.insertAfter=function(node,ref,_138){
var pn=ref.parentNode;
if(ref==pn.lastChild){
if((_138!=true)&&(node===ref)){
return false;
}
pn.appendChild(node);
}else{
return this.insertBefore(node,ref.nextSibling,_138);
}
return true;
};
dojo.dom.insertAtPosition=function(node,ref,_13c){
if((!node)||(!ref)||(!_13c)){
return false;
}
switch(_13c.toLowerCase()){
case "before":
return dojo.dom.insertBefore(node,ref);
case "after":
return dojo.dom.insertAfter(node,ref);
case "first":
if(ref.firstChild){
return dojo.dom.insertBefore(node,ref.firstChild);
}else{
ref.appendChild(node);
return true;
}
break;
default:
ref.appendChild(node);
return true;
}
};
dojo.dom.insertAtIndex=function(node,_13e,_13f){
var _140=_13e.childNodes;
if(!_140.length||_140.length==_13f){
_13e.appendChild(node);
return true;
}
if(_13f==0){
return dojo.dom.prependChild(node,_13e);
}
return dojo.dom.insertAfter(node,_140[_13f-1]);
};
dojo.dom.textContent=function(node,text){
if(arguments.length>1){
var _143=dojo.doc();
dojo.dom.replaceChildren(node,_143.createTextNode(text));
return text;
}else{
if(node.textContent!=undefined){
return node.textContent;
}
var _144="";
if(node==null){
return _144;
}
for(var i=0;i<node.childNodes.length;i++){
switch(node.childNodes[i].nodeType){
case 1:
case 5:
_144+=dojo.dom.textContent(node.childNodes[i]);
break;
case 3:
case 2:
case 4:
_144+=node.childNodes[i].nodeValue;
break;
default:
break;
}
}
return _144;
}
};
dojo.dom.hasParent=function(node){
return Boolean(node&&node.parentNode&&dojo.dom.isNode(node.parentNode));
};
dojo.dom.isTag=function(node){
if(node&&node.tagName){
for(var i=1;i<arguments.length;i++){
if(node.tagName==String(arguments[i])){
return String(arguments[i]);
}
}
}
return "";
};
dojo.dom.setAttributeNS=function(elem,_14a,_14b,_14c){
if(elem==null||((elem==undefined)&&(typeof elem=="undefined"))){
dojo.raise("No element given to dojo.dom.setAttributeNS");
}
if(!((elem.setAttributeNS==undefined)&&(typeof elem.setAttributeNS=="undefined"))){
elem.setAttributeNS(_14a,_14b,_14c);
}else{
var _14d=elem.ownerDocument;
var _14e=_14d.createNode(2,_14b,_14a);
_14e.nodeValue=_14c;
elem.setAttributeNode(_14e);
}
};
dojo.provide("dojo.xml.Parse");
dojo.xml.Parse=function(){
var isIE=((dojo.render.html.capable)&&(dojo.render.html.ie));
function getTagName(node){
try{
return node.tagName.toLowerCase();
}
catch(e){
return "";
}
}
function getDojoTagName(node){
var _152=getTagName(node);
if(!_152){
return "";
}
if((dojo.widget)&&(dojo.widget.tags[_152])){
return _152;
}
var p=_152.indexOf(":");
if(p>=0){
return _152;
}
if(_152.substr(0,5)=="dojo:"){
return _152;
}
if(dojo.render.html.capable&&dojo.render.html.ie&&node.scopeName!="HTML"){
return node.scopeName.toLowerCase()+":"+_152;
}
if(_152.substr(0,4)=="dojo"){
return "dojo:"+_152.substring(4);
}
var djt=node.getAttribute("dojoType")||node.getAttribute("dojotype");
if(djt){
if(djt.indexOf(":")<0){
djt="dojo:"+djt;
}
return djt.toLowerCase();
}
djt=node.getAttributeNS&&node.getAttributeNS(dojo.dom.dojoml,"type");
if(djt){
return "dojo:"+djt.toLowerCase();
}
try{
djt=node.getAttribute("dojo:type");
}
catch(e){
}
if(djt){
return "dojo:"+djt.toLowerCase();
}
if((dj_global["djConfig"])&&(!djConfig["ignoreClassNames"])){
var _155=node.className||node.getAttribute("class");
if((_155)&&(_155.indexOf)&&(_155.indexOf("dojo-")!=-1)){
var _156=_155.split(" ");
for(var x=0,c=_156.length;x<c;x++){
if(_156[x].slice(0,5)=="dojo-"){
return "dojo:"+_156[x].substr(5).toLowerCase();
}
}
}
}
return "";
}
this.parseElement=function(node,_15a,_15b,_15c){
var _15d=getTagName(node);
if(isIE&&_15d.indexOf("/")==0){
return null;
}
try{
var attr=node.getAttribute("parseWidgets");
if(attr&&attr.toLowerCase()=="false"){
return {};
}
}
catch(e){
}
var _15f=true;
if(_15b){
var _160=getDojoTagName(node);
_15d=_160||_15d;
_15f=Boolean(_160);
}
var _161={};
_161[_15d]=[];
var pos=_15d.indexOf(":");
if(pos>0){
var ns=_15d.substring(0,pos);
_161["ns"]=ns;
if((dojo.ns)&&(!dojo.ns.allow(ns))){
_15f=false;
}
}
if(_15f){
var _164=this.parseAttributes(node);
for(var attr in _164){
if((!_161[_15d][attr])||(typeof _161[_15d][attr]!="array")){
_161[_15d][attr]=[];
}
_161[_15d][attr].push(_164[attr]);
}
_161[_15d].nodeRef=node;
_161.tagName=_15d;
_161.index=_15c||0;
}
var _165=0;
for(var i=0;i<node.childNodes.length;i++){
var tcn=node.childNodes.item(i);
switch(tcn.nodeType){
case dojo.dom.ELEMENT_NODE:
var ctn=getDojoTagName(tcn)||getTagName(tcn);
if(!_161[ctn]){
_161[ctn]=[];
}
_161[ctn].push(this.parseElement(tcn,true,_15b,_165));
if((tcn.childNodes.length==1)&&(tcn.childNodes.item(0).nodeType==dojo.dom.TEXT_NODE)){
_161[ctn][_161[ctn].length-1].value=tcn.childNodes.item(0).nodeValue;
}
_165++;
break;
case dojo.dom.TEXT_NODE:
if(node.childNodes.length==1){
_161[_15d].push({value:node.childNodes.item(0).nodeValue});
}
break;
default:
break;
}
}
return _161;
};
this.parseAttributes=function(node){
var _16a={};
var atts=node.attributes;
var _16c,i=0;
while((_16c=atts[i++])){
if(isIE){
if(!_16c){
continue;
}
if((typeof _16c=="object")&&(typeof _16c.nodeValue=="undefined")||(_16c.nodeValue==null)||(_16c.nodeValue=="")){
continue;
}
}
var nn=_16c.nodeName.split(":");
nn=(nn.length==2)?nn[1]:_16c.nodeName;
_16a[nn]={value:_16c.nodeValue};
}
return _16a;
};
};
dojo.provide("dojo.lang.common");
dojo.lang.inherits=function(_16f,_170){
if(!dojo.lang.isFunction(_170)){
dojo.raise("dojo.inherits: superclass argument ["+_170+"] must be a function (subclass: ["+_16f+"']");
}
_16f.prototype=new _170();
_16f.prototype.constructor=_16f;
_16f.superclass=_170.prototype;
_16f["super"]=_170.prototype;
};
dojo.lang._mixin=function(obj,_172){
var tobj={};
for(var x in _172){
if((typeof tobj[x]=="undefined")||(tobj[x]!=_172[x])){
obj[x]=_172[x];
}
}
if(dojo.render.html.ie&&(typeof (_172["toString"])=="function")&&(_172["toString"]!=obj["toString"])&&(_172["toString"]!=tobj["toString"])){
obj.toString=_172.toString;
}
return obj;
};
dojo.lang.mixin=function(obj,_176){
for(var i=1,l=arguments.length;i<l;i++){
dojo.lang._mixin(obj,arguments[i]);
}
return obj;
};
dojo.lang.extend=function(_179,_17a){
for(var i=1,l=arguments.length;i<l;i++){
dojo.lang._mixin(_179.prototype,arguments[i]);
}
return _179;
};
dojo.inherits=dojo.lang.inherits;
dojo.mixin=dojo.lang.mixin;
dojo.extend=dojo.lang.extend;
dojo.lang.find=function(_17d,_17e,_17f,_180){
if(!dojo.lang.isArrayLike(_17d)&&dojo.lang.isArrayLike(_17e)){
dojo.deprecated("dojo.lang.find(value, array)","use dojo.lang.find(array, value) instead","0.5");
var temp=_17d;
_17d=_17e;
_17e=temp;
}
var _182=dojo.lang.isString(_17d);
if(_182){
_17d=_17d.split("");
}
if(_180){
var step=-1;
var i=_17d.length-1;
var end=-1;
}else{
var step=1;
var i=0;
var end=_17d.length;
}
if(_17f){
while(i!=end){
if(_17d[i]===_17e){
return i;
}
i+=step;
}
}else{
while(i!=end){
if(_17d[i]==_17e){
return i;
}
i+=step;
}
}
return -1;
};
dojo.lang.indexOf=dojo.lang.find;
dojo.lang.findLast=function(_186,_187,_188){
return dojo.lang.find(_186,_187,_188,true);
};
dojo.lang.lastIndexOf=dojo.lang.findLast;
dojo.lang.inArray=function(_189,_18a){
return dojo.lang.find(_189,_18a)>-1;
};
dojo.lang.isObject=function(it){
if(typeof it=="undefined"){
return false;
}
return (typeof it=="object"||it===null||dojo.lang.isArray(it)||dojo.lang.isFunction(it));
};
dojo.lang.isArray=function(it){
return (it&&it instanceof Array||typeof it=="array");
};
dojo.lang.isArrayLike=function(it){
if((!it)||(dojo.lang.isUndefined(it))){
return false;
}
if(dojo.lang.isString(it)){
return false;
}
if(dojo.lang.isFunction(it)){
return false;
}
if(dojo.lang.isArray(it)){
return true;
}
if((it.tagName)&&(it.tagName.toLowerCase()=="form")){
return false;
}
if(dojo.lang.isNumber(it.length)&&isFinite(it.length)){
return true;
}
return false;
};
dojo.lang.isFunction=function(it){
return (it instanceof Function||typeof it=="function");
};
(function(){
if((dojo.render.html.capable)&&(dojo.render.html["safari"])){
dojo.lang.isFunction=function(it){
if((typeof (it)=="function")&&(it=="[object NodeList]")){
return false;
}
return (it instanceof Function||typeof it=="function");
};
}
})();
dojo.lang.isString=function(it){
return (typeof it=="string"||it instanceof String);
};
dojo.lang.isAlien=function(it){
if(!it){
return false;
}
return !dojo.lang.isFunction(it)&&/\{\s*\[native code\]\s*\}/.test(String(it));
};
dojo.lang.isBoolean=function(it){
return (it instanceof Boolean||typeof it=="boolean");
};
dojo.lang.isNumber=function(it){
return (it instanceof Number||typeof it=="number");
};
dojo.lang.isUndefined=function(it){
return ((typeof (it)=="undefined")&&(it==undefined));
};
dojo.provide("dojo.lang.func");
dojo.lang.hitch=function(_195,_196){
var fcn=(dojo.lang.isString(_196)?_195[_196]:_196)||function(){
};
return function(){
return fcn.apply(_195,arguments);
};
};
dojo.lang.anonCtr=0;
dojo.lang.anon={};
dojo.lang.nameAnonFunc=function(_198,_199,_19a){
var nso=(_199||dojo.lang.anon);
if((_19a)||((dj_global["djConfig"])&&(djConfig["slowAnonFuncLookups"]==true))){
for(var x in nso){
try{
if(nso[x]===_198){
return x;
}
}
catch(e){
}
}
}
var ret="__"+dojo.lang.anonCtr++;
while(typeof nso[ret]!="undefined"){
ret="__"+dojo.lang.anonCtr++;
}
nso[ret]=_198;
return ret;
};
dojo.lang.forward=function(_19e){
return function(){
return this[_19e].apply(this,arguments);
};
};
dojo.lang.curry=function(_19f,func){
var _1a1=[];
_19f=_19f||dj_global;
if(dojo.lang.isString(func)){
func=_19f[func];
}
for(var x=2;x<arguments.length;x++){
_1a1.push(arguments[x]);
}
var _1a3=(func["__preJoinArity"]||func.length)-_1a1.length;
function gather(_1a4,_1a5,_1a6){
var _1a7=_1a6;
var _1a8=_1a5.slice(0);
for(var x=0;x<_1a4.length;x++){
_1a8.push(_1a4[x]);
}
_1a6=_1a6-_1a4.length;
if(_1a6<=0){
var res=func.apply(_19f,_1a8);
_1a6=_1a7;
return res;
}else{
return function(){
return gather(arguments,_1a8,_1a6);
};
}
}
return gather([],_1a1,_1a3);
};
dojo.lang.curryArguments=function(_1ab,func,args,_1ae){
var _1af=[];
var x=_1ae||0;
for(x=_1ae;x<args.length;x++){
_1af.push(args[x]);
}
return dojo.lang.curry.apply(dojo.lang,[_1ab,func].concat(_1af));
};
dojo.lang.tryThese=function(){
for(var x=0;x<arguments.length;x++){
try{
if(typeof arguments[x]=="function"){
var ret=(arguments[x]());
if(ret){
return ret;
}
}
}
catch(e){
dojo.debug(e);
}
}
};
dojo.lang.delayThese=function(farr,cb,_1b5,_1b6){
if(!farr.length){
if(typeof _1b6=="function"){
_1b6();
}
return;
}
if((typeof _1b5=="undefined")&&(typeof cb=="number")){
_1b5=cb;
cb=function(){
};
}else{
if(!cb){
cb=function(){
};
if(!_1b5){
_1b5=0;
}
}
}
setTimeout(function(){
(farr.shift())();
cb();
dojo.lang.delayThese(farr,cb,_1b5,_1b6);
},_1b5);
};
dojo.provide("dojo.lang.array");
dojo.lang.mixin(dojo.lang,{has:function(obj,name){
try{
return typeof obj[name]!="undefined";
}
catch(e){
return false;
}
},isEmpty:function(obj){
if(dojo.lang.isObject(obj)){
var tmp={};
var _1bb=0;
for(var x in obj){
if(obj[x]&&(!tmp[x])){
_1bb++;
break;
}
}
return _1bb==0;
}else{
if(dojo.lang.isArrayLike(obj)||dojo.lang.isString(obj)){
return obj.length==0;
}
}
},map:function(arr,obj,_1bf){
var _1c0=dojo.lang.isString(arr);
if(_1c0){
arr=arr.split("");
}
if(dojo.lang.isFunction(obj)&&(!_1bf)){
_1bf=obj;
obj=dj_global;
}else{
if(dojo.lang.isFunction(obj)&&_1bf){
var _1c1=obj;
obj=_1bf;
_1bf=_1c1;
}
}
if(Array.map){
var _1c2=Array.map(arr,_1bf,obj);
}else{
var _1c2=[];
for(var i=0;i<arr.length;++i){
_1c2.push(_1bf.call(obj,arr[i]));
}
}
if(_1c0){
return _1c2.join("");
}else{
return _1c2;
}
},reduce:function(arr,_1c5,obj,_1c7){
var _1c8=_1c5;
if(arguments.length==1){
dojo.debug("dojo.lang.reduce called with too few arguments!");
return false;
}else{
if(arguments.length==2){
_1c7=_1c5;
_1c8=arr.shift();
}else{
if(arguments.lenght==3){
if(dojo.lang.isFunction(obj)){
_1c7=obj;
obj=null;
}
}else{
if(dojo.lang.isFunction(obj)){
var tmp=_1c7;
_1c7=obj;
obj=tmp;
}
}
}
}
var ob=obj?obj:dj_global;
dojo.lang.map(arr,function(val){
_1c8=_1c7.call(ob,_1c8,val);
});
return _1c8;
},forEach:function(_1cc,_1cd,_1ce){
if(dojo.lang.isString(_1cc)){
_1cc=_1cc.split("");
}
if(Array.forEach){
Array.forEach(_1cc,_1cd,_1ce);
}else{
if(!_1ce){
_1ce=dj_global;
}
for(var i=0,l=_1cc.length;i<l;i++){
_1cd.call(_1ce,_1cc[i],i,_1cc);
}
}
},_everyOrSome:function(_1d1,arr,_1d3,_1d4){
if(dojo.lang.isString(arr)){
arr=arr.split("");
}
if(Array.every){
return Array[_1d1?"every":"some"](arr,_1d3,_1d4);
}else{
if(!_1d4){
_1d4=dj_global;
}
for(var i=0,l=arr.length;i<l;i++){
var _1d7=_1d3.call(_1d4,arr[i],i,arr);
if(_1d1&&!_1d7){
return false;
}else{
if((!_1d1)&&(_1d7)){
return true;
}
}
}
return Boolean(_1d1);
}
},every:function(arr,_1d9,_1da){
return this._everyOrSome(true,arr,_1d9,_1da);
},some:function(arr,_1dc,_1dd){
return this._everyOrSome(false,arr,_1dc,_1dd);
},filter:function(arr,_1df,_1e0){
var _1e1=dojo.lang.isString(arr);
if(_1e1){
arr=arr.split("");
}
var _1e2;
if(Array.filter){
_1e2=Array.filter(arr,_1df,_1e0);
}else{
if(!_1e0){
if(arguments.length>=3){
dojo.raise("thisObject doesn't exist!");
}
_1e0=dj_global;
}
_1e2=[];
for(var i=0;i<arr.length;i++){
if(_1df.call(_1e0,arr[i],i,arr)){
_1e2.push(arr[i]);
}
}
}
if(_1e1){
return _1e2.join("");
}else{
return _1e2;
}
},unnest:function(){
var out=[];
for(var i=0;i<arguments.length;i++){
if(dojo.lang.isArrayLike(arguments[i])){
var add=dojo.lang.unnest.apply(this,arguments[i]);
out=out.concat(add);
}else{
out.push(arguments[i]);
}
}
return out;
},toArray:function(_1e7,_1e8){
var _1e9=[];
for(var i=_1e8||0;i<_1e7.length;i++){
_1e9.push(_1e7[i]);
}
return _1e9;
}});
dojo.provide("dojo.lang.extras");
dojo.lang.setTimeout=function(func,_1ec){
var _1ed=window,_1ee=2;
if(!dojo.lang.isFunction(func)){
_1ed=func;
func=_1ec;
_1ec=arguments[2];
_1ee++;
}
if(dojo.lang.isString(func)){
func=_1ed[func];
}
var args=[];
for(var i=_1ee;i<arguments.length;i++){
args.push(arguments[i]);
}
return dojo.global().setTimeout(function(){
func.apply(_1ed,args);
},_1ec);
};
dojo.lang.clearTimeout=function(_1f1){
dojo.global().clearTimeout(_1f1);
};
dojo.lang.getNameInObj=function(ns,item){
if(!ns){
ns=dj_global;
}
for(var x in ns){
if(ns[x]===item){
return new String(x);
}
}
return null;
};
dojo.lang.shallowCopy=function(obj,deep){
var i,ret;
if(obj===null){
return null;
}
if(dojo.lang.isObject(obj)){
ret=new obj.constructor();
for(i in obj){
if(dojo.lang.isUndefined(ret[i])){
ret[i]=deep?dojo.lang.shallowCopy(obj[i],deep):obj[i];
}
}
}else{
if(dojo.lang.isArray(obj)){
ret=[];
for(i=0;i<obj.length;i++){
ret[i]=deep?dojo.lang.shallowCopy(obj[i],deep):obj[i];
}
}else{
ret=obj;
}
}
return ret;
};
dojo.lang.firstValued=function(){
for(var i=0;i<arguments.length;i++){
if(typeof arguments[i]!="undefined"){
return arguments[i];
}
}
return undefined;
};
dojo.lang.getObjPathValue=function(_1fa,_1fb,_1fc){
with(dojo.parseObjPath(_1fa,_1fb,_1fc)){
return dojo.evalProp(prop,obj,_1fc);
}
};
dojo.lang.setObjPathValue=function(_1fd,_1fe,_1ff,_200){
dojo.deprecated("dojo.lang.setObjPathValue","use dojo.parseObjPath and the '=' operator","0.6");
if(arguments.length<4){
_200=true;
}
with(dojo.parseObjPath(_1fd,_1ff,_200)){
if(obj&&(_200||(prop in obj))){
obj[prop]=_1fe;
}
}
};
dojo.provide("dojo.lang.declare");
dojo.lang.declare=function(_201,_202,init,_204){
if((dojo.lang.isFunction(_204))||((!_204)&&(!dojo.lang.isFunction(init)))){
var temp=_204;
_204=init;
init=temp;
}
var _206=[];
if(dojo.lang.isArray(_202)){
_206=_202;
_202=_206.shift();
}
if(!init){
init=dojo.evalObjPath(_201,false);
if((init)&&(!dojo.lang.isFunction(init))){
init=null;
}
}
var ctor=dojo.lang.declare._makeConstructor();
var scp=(_202?_202.prototype:null);
if(scp){
scp.prototyping=true;
ctor.prototype=new _202();
scp.prototyping=false;
}
ctor.superclass=scp;
ctor.mixins=_206;
for(var i=0,l=_206.length;i<l;i++){
dojo.lang.extend(ctor,_206[i].prototype);
}
ctor.prototype.initializer=null;
ctor.prototype.declaredClass=_201;
if(dojo.lang.isArray(_204)){
dojo.lang.extend.apply(dojo.lang,[ctor].concat(_204));
}else{
dojo.lang.extend(ctor,(_204)||{});
}
dojo.lang.extend(ctor,dojo.lang.declare._common);
ctor.prototype.constructor=ctor;
ctor.prototype.initializer=(ctor.prototype.initializer)||(init)||(function(){
});
var _20b=dojo.parseObjPath(_201,null,true);
_20b.obj[_20b.prop]=ctor;
return ctor;
};
dojo.lang.declare._makeConstructor=function(){
return function(){
var self=this._getPropContext();
var s=self.constructor.superclass;
if((s)&&(s.constructor)){
if(s.constructor==arguments.callee){
this._inherited("constructor",arguments);
}else{
this._contextMethod(s,"constructor",arguments);
}
}
var ms=(self.constructor.mixins)||([]);
for(var i=0,m;(m=ms[i]);i++){
(((m.prototype)&&(m.prototype.initializer))||(m)).apply(this,arguments);
}
if((!this.prototyping)&&(self.initializer)){
self.initializer.apply(this,arguments);
}
};
};
dojo.lang.declare._common={_getPropContext:function(){
return (this.___proto||this);
},_contextMethod:function(_211,_212,args){
var _214,_215=this.___proto;
this.___proto=_211;
try{
_214=_211[_212].apply(this,(args||[]));
}
catch(e){
throw e;
}
finally{
this.___proto=_215;
}
return _214;
},_inherited:function(prop,args){
var p=this._getPropContext();
do{
if((!p.constructor)||(!p.constructor.superclass)){
return;
}
p=p.constructor.superclass;
}while(!(prop in p));
return (dojo.lang.isFunction(p[prop])?this._contextMethod(p,prop,args):p[prop]);
},inherited:function(prop,args){
dojo.deprecated("'inherited' method is dangerous, do not up-call! 'inherited' is slated for removal in 0.5; name your super class (or use superclass property) instead.","0.5");
this._inherited(prop,args);
}};
dojo.declare=dojo.lang.declare;
dojo.provide("dojo.ns");
dojo.ns={namespaces:{},failed:{},loading:{},loaded:{},register:function(name,_21c,_21d,_21e){
if(!_21e||!this.namespaces[name]){
this.namespaces[name]=new dojo.ns.Ns(name,_21c,_21d);
}
},allow:function(name){
if(this.failed[name]){
return false;
}
if((djConfig.excludeNamespace)&&(dojo.lang.inArray(djConfig.excludeNamespace,name))){
return false;
}
return ((name==this.dojo)||(!djConfig.includeNamespace)||(dojo.lang.inArray(djConfig.includeNamespace,name)));
},get:function(name){
return this.namespaces[name];
},require:function(name){
var ns=this.namespaces[name];
if((ns)&&(this.loaded[name])){
return ns;
}
if(!this.allow(name)){
return false;
}
if(this.loading[name]){
dojo.debug("dojo.namespace.require: re-entrant request to load namespace \""+name+"\" must fail.");
return false;
}
var req=dojo.require;
this.loading[name]=true;
try{
if(name=="dojo"){
req("dojo.namespaces.dojo");
}else{
if(!dojo.hostenv.moduleHasPrefix(name)){
dojo.registerModulePath(name,"../"+name);
}
req([name,"manifest"].join("."),false,true);
}
if(!this.namespaces[name]){
this.failed[name]=true;
}
}
finally{
this.loading[name]=false;
}
return this.namespaces[name];
}};
dojo.ns.Ns=function(name,_225,_226){
this.name=name;
this.module=_225;
this.resolver=_226;
this._loaded=[];
this._failed=[];
};
dojo.ns.Ns.prototype.resolve=function(name,_228,_229){
if(!this.resolver||djConfig["skipAutoRequire"]){
return false;
}
var _22a=this.resolver(name,_228);
if((_22a)&&(!this._loaded[_22a])&&(!this._failed[_22a])){
var req=dojo.require;
req(_22a,false,true);
if(dojo.hostenv.findModule(_22a,false)){
this._loaded[_22a]=true;
}else{
if(!_229){
dojo.raise("dojo.ns.Ns.resolve: module '"+_22a+"' not found after loading via namespace '"+this.name+"'");
}
this._failed[_22a]=true;
}
}
return Boolean(this._loaded[_22a]);
};
dojo.registerNamespace=function(name,_22d,_22e){
dojo.ns.register.apply(dojo.ns,arguments);
};
dojo.registerNamespaceResolver=function(name,_230){
var n=dojo.ns.namespaces[name];
if(n){
n.resolver=_230;
}
};
dojo.registerNamespaceManifest=function(_232,path,name,_235,_236){
dojo.registerModulePath(name,path);
dojo.registerNamespace(name,_235,_236);
};
dojo.registerNamespace("dojo","dojo.widget");
dojo.provide("dojo.event.common");
dojo.event=new function(){
this._canTimeout=dojo.lang.isFunction(dj_global["setTimeout"])||dojo.lang.isAlien(dj_global["setTimeout"]);
function interpolateArgs(args,_238){
var dl=dojo.lang;
var ao={srcObj:dj_global,srcFunc:null,adviceObj:dj_global,adviceFunc:null,aroundObj:null,aroundFunc:null,adviceType:(args.length>2)?args[0]:"after",precedence:"last",once:false,delay:null,rate:0,adviceMsg:false};
switch(args.length){
case 0:
return;
case 1:
return;
case 2:
ao.srcFunc=args[0];
ao.adviceFunc=args[1];
break;
case 3:
if((dl.isObject(args[0]))&&(dl.isString(args[1]))&&(dl.isString(args[2]))){
ao.adviceType="after";
ao.srcObj=args[0];
ao.srcFunc=args[1];
ao.adviceFunc=args[2];
}else{
if((dl.isString(args[1]))&&(dl.isString(args[2]))){
ao.srcFunc=args[1];
ao.adviceFunc=args[2];
}else{
if((dl.isObject(args[0]))&&(dl.isString(args[1]))&&(dl.isFunction(args[2]))){
ao.adviceType="after";
ao.srcObj=args[0];
ao.srcFunc=args[1];
var _23b=dl.nameAnonFunc(args[2],ao.adviceObj,_238);
ao.adviceFunc=_23b;
}else{
if((dl.isFunction(args[0]))&&(dl.isObject(args[1]))&&(dl.isString(args[2]))){
ao.adviceType="after";
ao.srcObj=dj_global;
var _23b=dl.nameAnonFunc(args[0],ao.srcObj,_238);
ao.srcFunc=_23b;
ao.adviceObj=args[1];
ao.adviceFunc=args[2];
}
}
}
}
break;
case 4:
if((dl.isObject(args[0]))&&(dl.isObject(args[2]))){
ao.adviceType="after";
ao.srcObj=args[0];
ao.srcFunc=args[1];
ao.adviceObj=args[2];
ao.adviceFunc=args[3];
}else{
if((dl.isString(args[0]))&&(dl.isString(args[1]))&&(dl.isObject(args[2]))){
ao.adviceType=args[0];
ao.srcObj=dj_global;
ao.srcFunc=args[1];
ao.adviceObj=args[2];
ao.adviceFunc=args[3];
}else{
if((dl.isString(args[0]))&&(dl.isFunction(args[1]))&&(dl.isObject(args[2]))){
ao.adviceType=args[0];
ao.srcObj=dj_global;
var _23b=dl.nameAnonFunc(args[1],dj_global,_238);
ao.srcFunc=_23b;
ao.adviceObj=args[2];
ao.adviceFunc=args[3];
}else{
if((dl.isString(args[0]))&&(dl.isObject(args[1]))&&(dl.isString(args[2]))&&(dl.isFunction(args[3]))){
ao.srcObj=args[1];
ao.srcFunc=args[2];
var _23b=dl.nameAnonFunc(args[3],dj_global,_238);
ao.adviceObj=dj_global;
ao.adviceFunc=_23b;
}else{
if(dl.isObject(args[1])){
ao.srcObj=args[1];
ao.srcFunc=args[2];
ao.adviceObj=dj_global;
ao.adviceFunc=args[3];
}else{
if(dl.isObject(args[2])){
ao.srcObj=dj_global;
ao.srcFunc=args[1];
ao.adviceObj=args[2];
ao.adviceFunc=args[3];
}else{
ao.srcObj=ao.adviceObj=ao.aroundObj=dj_global;
ao.srcFunc=args[1];
ao.adviceFunc=args[2];
ao.aroundFunc=args[3];
}
}
}
}
}
}
break;
case 6:
ao.srcObj=args[1];
ao.srcFunc=args[2];
ao.adviceObj=args[3];
ao.adviceFunc=args[4];
ao.aroundFunc=args[5];
ao.aroundObj=dj_global;
break;
default:
ao.srcObj=args[1];
ao.srcFunc=args[2];
ao.adviceObj=args[3];
ao.adviceFunc=args[4];
ao.aroundObj=args[5];
ao.aroundFunc=args[6];
ao.once=args[7];
ao.delay=args[8];
ao.rate=args[9];
ao.adviceMsg=args[10];
break;
}
if(dl.isFunction(ao.aroundFunc)){
var _23b=dl.nameAnonFunc(ao.aroundFunc,ao.aroundObj,_238);
ao.aroundFunc=_23b;
}
if(dl.isFunction(ao.srcFunc)){
ao.srcFunc=dl.getNameInObj(ao.srcObj,ao.srcFunc);
}
if(dl.isFunction(ao.adviceFunc)){
ao.adviceFunc=dl.getNameInObj(ao.adviceObj,ao.adviceFunc);
}
if((ao.aroundObj)&&(dl.isFunction(ao.aroundFunc))){
ao.aroundFunc=dl.getNameInObj(ao.aroundObj,ao.aroundFunc);
}
if(!ao.srcObj){
dojo.raise("bad srcObj for srcFunc: "+ao.srcFunc);
}
if(!ao.adviceObj){
dojo.raise("bad adviceObj for adviceFunc: "+ao.adviceFunc);
}
if(!ao.adviceFunc){
dojo.debug("bad adviceFunc for srcFunc: "+ao.srcFunc);
dojo.debugShallow(ao);
}
return ao;
}
this.connect=function(){
if(arguments.length==1){
var ao=arguments[0];
}else{
var ao=interpolateArgs(arguments,true);
}
if(dojo.lang.isString(ao.srcFunc)&&(ao.srcFunc.toLowerCase()=="onkey")){
if(dojo.render.html.ie){
ao.srcFunc="onkeydown";
this.connect(ao);
}
ao.srcFunc="onkeypress";
}
if(dojo.lang.isArray(ao.srcObj)&&ao.srcObj!=""){
var _23d={};
for(var x in ao){
_23d[x]=ao[x];
}
var mjps=[];
dojo.lang.forEach(ao.srcObj,function(src){
if((dojo.render.html.capable)&&(dojo.lang.isString(src))){
src=dojo.byId(src);
}
_23d.srcObj=src;
mjps.push(dojo.event.connect.call(dojo.event,_23d));
});
return mjps;
}
var mjp=dojo.event.MethodJoinPoint.getForMethod(ao.srcObj,ao.srcFunc);
if(ao.adviceFunc){
var mjp2=dojo.event.MethodJoinPoint.getForMethod(ao.adviceObj,ao.adviceFunc);
}
mjp.kwAddAdvice(ao);
return mjp;
};
this.log=function(a1,a2){
var _245;
if((arguments.length==1)&&(typeof a1=="object")){
_245=a1;
}else{
_245={srcObj:a1,srcFunc:a2};
}
_245.adviceFunc=function(){
var _246=[];
for(var x=0;x<arguments.length;x++){
_246.push(arguments[x]);
}
dojo.debug("("+_245.srcObj+")."+_245.srcFunc,":",_246.join(", "));
};
this.kwConnect(_245);
};
this.connectBefore=function(){
var args=["before"];
for(var i=0;i<arguments.length;i++){
args.push(arguments[i]);
}
return this.connect.apply(this,args);
};
this.connectAround=function(){
var args=["around"];
for(var i=0;i<arguments.length;i++){
args.push(arguments[i]);
}
return this.connect.apply(this,args);
};
this.connectOnce=function(){
var ao=interpolateArgs(arguments,true);
ao.once=true;
return this.connect(ao);
};
this._kwConnectImpl=function(_24d,_24e){
var fn=(_24e)?"disconnect":"connect";
if(typeof _24d["srcFunc"]=="function"){
_24d.srcObj=_24d["srcObj"]||dj_global;
var _250=dojo.lang.nameAnonFunc(_24d.srcFunc,_24d.srcObj,true);
_24d.srcFunc=_250;
}
if(typeof _24d["adviceFunc"]=="function"){
_24d.adviceObj=_24d["adviceObj"]||dj_global;
var _250=dojo.lang.nameAnonFunc(_24d.adviceFunc,_24d.adviceObj,true);
_24d.adviceFunc=_250;
}
_24d.srcObj=_24d["srcObj"]||dj_global;
_24d.adviceObj=_24d["adviceObj"]||_24d["targetObj"]||dj_global;
_24d.adviceFunc=_24d["adviceFunc"]||_24d["targetFunc"];
return dojo.event[fn](_24d);
};
this.kwConnect=function(_251){
return this._kwConnectImpl(_251,false);
};
this.disconnect=function(){
if(arguments.length==1){
var ao=arguments[0];
}else{
var ao=interpolateArgs(arguments,true);
}
if(!ao.adviceFunc){
return;
}
if(dojo.lang.isString(ao.srcFunc)&&(ao.srcFunc.toLowerCase()=="onkey")){
if(dojo.render.html.ie){
ao.srcFunc="onkeydown";
this.disconnect(ao);
}
ao.srcFunc="onkeypress";
}
if(!ao.srcObj[ao.srcFunc]){
return null;
}
var mjp=dojo.event.MethodJoinPoint.getForMethod(ao.srcObj,ao.srcFunc,true);
mjp.removeAdvice(ao.adviceObj,ao.adviceFunc,ao.adviceType,ao.once);
return mjp;
};
this.kwDisconnect=function(_254){
return this._kwConnectImpl(_254,true);
};
};
dojo.event.MethodInvocation=function(_255,obj,args){
this.jp_=_255;
this.object=obj;
this.args=[];
for(var x=0;x<args.length;x++){
this.args[x]=args[x];
}
this.around_index=-1;
};
dojo.event.MethodInvocation.prototype.proceed=function(){
this.around_index++;
if(this.around_index>=this.jp_.around.length){
return this.jp_.object[this.jp_.methodname].apply(this.jp_.object,this.args);
}else{
var ti=this.jp_.around[this.around_index];
var mobj=ti[0]||dj_global;
var meth=ti[1];
return mobj[meth].call(mobj,this);
}
};
dojo.event.MethodJoinPoint=function(obj,_25d){
this.object=obj||dj_global;
this.methodname=_25d;
this.methodfunc=this.object[_25d];
this.squelch=false;
};
dojo.event.MethodJoinPoint.getForMethod=function(obj,_25f){
if(!obj){
obj=dj_global;
}
if(!obj[_25f]){
obj[_25f]=function(){
};
if(!obj[_25f]){
dojo.raise("Cannot set do-nothing method on that object "+_25f);
}
}else{
if((!dojo.lang.isFunction(obj[_25f]))&&(!dojo.lang.isAlien(obj[_25f]))){
return null;
}
}
var _260=_25f+"$joinpoint";
var _261=_25f+"$joinpoint$method";
var _262=obj[_260];
if(!_262){
var _263=false;
if(dojo.event["browser"]){
if((obj["attachEvent"])||(obj["nodeType"])||(obj["addEventListener"])){
_263=true;
dojo.event.browser.addClobberNodeAttrs(obj,[_260,_261,_25f]);
}
}
var _264=obj[_25f].length;
obj[_261]=obj[_25f];
_262=obj[_260]=new dojo.event.MethodJoinPoint(obj,_261);
obj[_25f]=function(){
var args=[];
if((_263)&&(!arguments.length)){
var evt=null;
try{
if(obj.ownerDocument){
evt=obj.ownerDocument.parentWindow.event;
}else{
if(obj.documentElement){
evt=obj.documentElement.ownerDocument.parentWindow.event;
}else{
if(obj.event){
evt=obj.event;
}else{
evt=window.event;
}
}
}
}
catch(e){
evt=window.event;
}
if(evt){
args.push(dojo.event.browser.fixEvent(evt,this));
}
}else{
for(var x=0;x<arguments.length;x++){
if((x==0)&&(_263)&&(dojo.event.browser.isEvent(arguments[x]))){
args.push(dojo.event.browser.fixEvent(arguments[x],this));
}else{
args.push(arguments[x]);
}
}
}
return _262.run.apply(_262,args);
};
obj[_25f].__preJoinArity=_264;
}
return _262;
};
dojo.lang.extend(dojo.event.MethodJoinPoint,{unintercept:function(){
this.object[this.methodname]=this.methodfunc;
this.before=[];
this.after=[];
this.around=[];
},disconnect:dojo.lang.forward("unintercept"),run:function(){
var obj=this.object||dj_global;
var args=arguments;
var _26a=[];
for(var x=0;x<args.length;x++){
_26a[x]=args[x];
}
var _26c=function(marr){
if(!marr){
dojo.debug("Null argument to unrollAdvice()");
return;
}
var _26e=marr[0]||dj_global;
var _26f=marr[1];
if(!_26e[_26f]){
dojo.raise("function \""+_26f+"\" does not exist on \""+_26e+"\"");
}
var _270=marr[2]||dj_global;
var _271=marr[3];
var msg=marr[6];
var _273;
var to={args:[],jp_:this,object:obj,proceed:function(){
return _26e[_26f].apply(_26e,to.args);
}};
to.args=_26a;
var _275=parseInt(marr[4]);
var _276=((!isNaN(_275))&&(marr[4]!==null)&&(typeof marr[4]!="undefined"));
if(marr[5]){
var rate=parseInt(marr[5]);
var cur=new Date();
var _279=false;
if((marr["last"])&&((cur-marr.last)<=rate)){
if(dojo.event._canTimeout){
if(marr["delayTimer"]){
clearTimeout(marr.delayTimer);
}
var tod=parseInt(rate*2);
var mcpy=dojo.lang.shallowCopy(marr);
marr.delayTimer=setTimeout(function(){
mcpy[5]=0;
_26c(mcpy);
},tod);
}
return;
}else{
marr.last=cur;
}
}
if(_271){
_270[_271].call(_270,to);
}else{
if((_276)&&((dojo.render.html)||(dojo.render.svg))){
dj_global["setTimeout"](function(){
if(msg){
_26e[_26f].call(_26e,to);
}else{
_26e[_26f].apply(_26e,args);
}
},_275);
}else{
if(msg){
_26e[_26f].call(_26e,to);
}else{
_26e[_26f].apply(_26e,args);
}
}
}
};
var _27c=function(){
if(this.squelch){
try{
return _26c.apply(this,arguments);
}
catch(e){
dojo.debug(e);
}
}else{
return _26c.apply(this,arguments);
}
};
if((this["before"])&&(this.before.length>0)){
dojo.lang.forEach(this.before.concat(new Array()),_27c);
}
var _27d;
try{
if((this["around"])&&(this.around.length>0)){
var mi=new dojo.event.MethodInvocation(this,obj,args);
_27d=mi.proceed();
}else{
if(this.methodfunc){
_27d=this.object[this.methodname].apply(this.object,args);
}
}
}
catch(e){
if(!this.squelch){
dojo.debug(e,"when calling",this.methodname,"on",this.object,"with arguments",args);
dojo.raise(e);
}
}
if((this["after"])&&(this.after.length>0)){
dojo.lang.forEach(this.after.concat(new Array()),_27c);
}
return (this.methodfunc)?_27d:null;
},getArr:function(kind){
var type="after";
if((typeof kind=="string")&&(kind.indexOf("before")!=-1)){
type="before";
}else{
if(kind=="around"){
type="around";
}
}
if(!this[type]){
this[type]=[];
}
return this[type];
},kwAddAdvice:function(args){
this.addAdvice(args["adviceObj"],args["adviceFunc"],args["aroundObj"],args["aroundFunc"],args["adviceType"],args["precedence"],args["once"],args["delay"],args["rate"],args["adviceMsg"]);
},addAdvice:function(_282,_283,_284,_285,_286,_287,once,_289,rate,_28b){
var arr=this.getArr(_286);
if(!arr){
dojo.raise("bad this: "+this);
}
var ao=[_282,_283,_284,_285,_289,rate,_28b];
if(once){
if(this.hasAdvice(_282,_283,_286,arr)>=0){
return;
}
}
if(_287=="first"){
arr.unshift(ao);
}else{
arr.push(ao);
}
},hasAdvice:function(_28e,_28f,_290,arr){
if(!arr){
arr=this.getArr(_290);
}
var ind=-1;
for(var x=0;x<arr.length;x++){
var aao=(typeof _28f=="object")?(new String(_28f)).toString():_28f;
var a1o=(typeof arr[x][1]=="object")?(new String(arr[x][1])).toString():arr[x][1];
if((arr[x][0]==_28e)&&(a1o==aao)){
ind=x;
}
}
return ind;
},removeAdvice:function(_296,_297,_298,once){
var arr=this.getArr(_298);
var ind=this.hasAdvice(_296,_297,_298,arr);
if(ind==-1){
return false;
}
while(ind!=-1){
arr.splice(ind,1);
if(once){
break;
}
ind=this.hasAdvice(_296,_297,_298,arr);
}
return true;
}});
dojo.provide("dojo.event.topic");
dojo.event.topic=new function(){
this.topics={};
this.getTopic=function(_29c){
if(!this.topics[_29c]){
this.topics[_29c]=new this.TopicImpl(_29c);
}
return this.topics[_29c];
};
this.registerPublisher=function(_29d,obj,_29f){
var _29d=this.getTopic(_29d);
_29d.registerPublisher(obj,_29f);
};
this.subscribe=function(_2a0,obj,_2a2){
var _2a0=this.getTopic(_2a0);
_2a0.subscribe(obj,_2a2);
};
this.unsubscribe=function(_2a3,obj,_2a5){
var _2a3=this.getTopic(_2a3);
_2a3.unsubscribe(obj,_2a5);
};
this.destroy=function(_2a6){
this.getTopic(_2a6).destroy();
delete this.topics[_2a6];
};
this.publishApply=function(_2a7,args){
var _2a7=this.getTopic(_2a7);
_2a7.sendMessage.apply(_2a7,args);
};
this.publish=function(_2a9,_2aa){
var _2a9=this.getTopic(_2a9);
var args=[];
for(var x=1;x<arguments.length;x++){
args.push(arguments[x]);
}
_2a9.sendMessage.apply(_2a9,args);
};
};
dojo.event.topic.TopicImpl=function(_2ad){
this.topicName=_2ad;
this.subscribe=function(_2ae,_2af){
var tf=_2af||_2ae;
var to=(!_2af)?dj_global:_2ae;
return dojo.event.kwConnect({srcObj:this,srcFunc:"sendMessage",adviceObj:to,adviceFunc:tf});
};
this.unsubscribe=function(_2b2,_2b3){
var tf=(!_2b3)?_2b2:_2b3;
var to=(!_2b3)?null:_2b2;
return dojo.event.kwDisconnect({srcObj:this,srcFunc:"sendMessage",adviceObj:to,adviceFunc:tf});
};
this._getJoinPoint=function(){
return dojo.event.MethodJoinPoint.getForMethod(this,"sendMessage");
};
this.setSquelch=function(_2b6){
this._getJoinPoint().squelch=_2b6;
};
this.destroy=function(){
this._getJoinPoint().disconnect();
};
this.registerPublisher=function(_2b7,_2b8){
dojo.event.connect(_2b7,_2b8,this,"sendMessage");
};
this.sendMessage=function(_2b9){
};
};
dojo.provide("dojo.event.browser");
dojo._ie_clobber=new function(){
this.clobberNodes=[];
function nukeProp(node,prop){
try{
node[prop]=null;
}
catch(e){
}
try{
delete node[prop];
}
catch(e){
}
try{
node.removeAttribute(prop);
}
catch(e){
}
}
this.clobber=function(_2bc){
var na;
var tna;
if(_2bc){
tna=_2bc.all||_2bc.getElementsByTagName("*");
na=[_2bc];
for(var x=0;x<tna.length;x++){
if(tna[x]["__doClobber__"]){
na.push(tna[x]);
}
}
}else{
try{
window.onload=null;
}
catch(e){
}
na=(this.clobberNodes.length)?this.clobberNodes:document.all;
}
tna=null;
var _2c0={};
for(var i=na.length-1;i>=0;i=i-1){
var el=na[i];
try{
if(el&&el["__clobberAttrs__"]){
for(var j=0;j<el.__clobberAttrs__.length;j++){
nukeProp(el,el.__clobberAttrs__[j]);
}
nukeProp(el,"__clobberAttrs__");
nukeProp(el,"__doClobber__");
}
}
catch(e){
}
}
na=null;
};
};
if(dojo.render.html.ie){
dojo.addOnUnload(function(){
dojo._ie_clobber.clobber();
try{
if((dojo["widget"])&&(dojo.widget["manager"])){
dojo.widget.manager.destroyAll();
}
}
catch(e){
}
if(dojo.widget){
for(var name in dojo.widget._templateCache){
if(dojo.widget._templateCache[name].node){
dojo.dom.destroyNode(dojo.widget._templateCache[name].node);
dojo.widget._templateCache[name].node=null;
delete dojo.widget._templateCache[name].node;
}
}
}
try{
window.onload=null;
}
catch(e){
}
try{
window.onunload=null;
}
catch(e){
}
dojo._ie_clobber.clobberNodes=[];
});
}
dojo.event.browser=new function(){
var _2c5=0;
this.normalizedEventName=function(_2c6){
switch(_2c6){
case "CheckboxStateChange":
case "DOMAttrModified":
case "DOMMenuItemActive":
case "DOMMenuItemInactive":
case "DOMMouseScroll":
case "DOMNodeInserted":
case "DOMNodeRemoved":
case "RadioStateChange":
return _2c6;
break;
default:
return _2c6.toLowerCase();
break;
}
};
this.clean=function(node){
if(dojo.render.html.ie){
dojo._ie_clobber.clobber(node);
}
};
this.addClobberNode=function(node){
if(!dojo.render.html.ie){
return;
}
if(!node["__doClobber__"]){
node.__doClobber__=true;
dojo._ie_clobber.clobberNodes.push(node);
node.__clobberAttrs__=[];
}
};
this.addClobberNodeAttrs=function(node,_2ca){
if(!dojo.render.html.ie){
return;
}
this.addClobberNode(node);
for(var x=0;x<_2ca.length;x++){
node.__clobberAttrs__.push(_2ca[x]);
}
};
this.removeListener=function(node,_2cd,fp,_2cf){
if(!_2cf){
var _2cf=false;
}
_2cd=dojo.event.browser.normalizedEventName(_2cd);
if((_2cd=="onkey")||(_2cd=="key")){
if(dojo.render.html.ie){
this.removeListener(node,"onkeydown",fp,_2cf);
}
_2cd="onkeypress";
}
if(_2cd.substr(0,2)=="on"){
_2cd=_2cd.substr(2);
}
if(node.removeEventListener){
node.removeEventListener(_2cd,fp,_2cf);
}
};
this.addListener=function(node,_2d1,fp,_2d3,_2d4){
if(!node){
return;
}
if(!_2d3){
var _2d3=false;
}
_2d1=dojo.event.browser.normalizedEventName(_2d1);
if((_2d1=="onkey")||(_2d1=="key")){
if(dojo.render.html.ie){
this.addListener(node,"onkeydown",fp,_2d3,_2d4);
}
_2d1="onkeypress";
}
if(_2d1.substr(0,2)!="on"){
_2d1="on"+_2d1;
}
if(!_2d4){
var _2d5=function(evt){
if(!evt){
evt=window.event;
}
var ret=fp(dojo.event.browser.fixEvent(evt,this));
if(_2d3){
dojo.event.browser.stopEvent(evt);
}
return ret;
};
}else{
_2d5=fp;
}
if(node.addEventListener){
node.addEventListener(_2d1.substr(2),_2d5,_2d3);
return _2d5;
}else{
if(typeof node[_2d1]=="function"){
var _2d8=node[_2d1];
node[_2d1]=function(e){
_2d8(e);
return _2d5(e);
};
}else{
node[_2d1]=_2d5;
}
if(dojo.render.html.ie){
this.addClobberNodeAttrs(node,[_2d1]);
}
return _2d5;
}
};
this.isEvent=function(obj){
return (typeof obj!="undefined")&&(obj)&&(typeof Event!="undefined")&&(obj.eventPhase);
};
this.currentEvent=null;
this.callListener=function(_2db,_2dc){
if(typeof _2db!="function"){
dojo.raise("listener not a function: "+_2db);
}
dojo.event.browser.currentEvent.currentTarget=_2dc;
return _2db.call(_2dc,dojo.event.browser.currentEvent);
};
this._stopPropagation=function(){
dojo.event.browser.currentEvent.cancelBubble=true;
};
this._preventDefault=function(){
dojo.event.browser.currentEvent.returnValue=false;
};
this.keys={KEY_BACKSPACE:8,KEY_TAB:9,KEY_CLEAR:12,KEY_ENTER:13,KEY_SHIFT:16,KEY_CTRL:17,KEY_ALT:18,KEY_PAUSE:19,KEY_CAPS_LOCK:20,KEY_ESCAPE:27,KEY_SPACE:32,KEY_PAGE_UP:33,KEY_PAGE_DOWN:34,KEY_END:35,KEY_HOME:36,KEY_LEFT_ARROW:37,KEY_UP_ARROW:38,KEY_RIGHT_ARROW:39,KEY_DOWN_ARROW:40,KEY_INSERT:45,KEY_DELETE:46,KEY_HELP:47,KEY_LEFT_WINDOW:91,KEY_RIGHT_WINDOW:92,KEY_SELECT:93,KEY_NUMPAD_0:96,KEY_NUMPAD_1:97,KEY_NUMPAD_2:98,KEY_NUMPAD_3:99,KEY_NUMPAD_4:100,KEY_NUMPAD_5:101,KEY_NUMPAD_6:102,KEY_NUMPAD_7:103,KEY_NUMPAD_8:104,KEY_NUMPAD_9:105,KEY_NUMPAD_MULTIPLY:106,KEY_NUMPAD_PLUS:107,KEY_NUMPAD_ENTER:108,KEY_NUMPAD_MINUS:109,KEY_NUMPAD_PERIOD:110,KEY_NUMPAD_DIVIDE:111,KEY_F1:112,KEY_F2:113,KEY_F3:114,KEY_F4:115,KEY_F5:116,KEY_F6:117,KEY_F7:118,KEY_F8:119,KEY_F9:120,KEY_F10:121,KEY_F11:122,KEY_F12:123,KEY_F13:124,KEY_F14:125,KEY_F15:126,KEY_NUM_LOCK:144,KEY_SCROLL_LOCK:145};
this.revKeys=[];
for(var key in this.keys){
this.revKeys[this.keys[key]]=key;
}
this.fixEvent=function(evt,_2df){
if(!evt){
if(window["event"]){
evt=window.event;
}
}
if((evt["type"])&&(evt["type"].indexOf("key")==0)){
evt.keys=this.revKeys;
for(var key in this.keys){
evt[key]=this.keys[key];
}
if(evt["type"]=="keydown"&&dojo.render.html.ie){
switch(evt.keyCode){
case evt.KEY_SHIFT:
case evt.KEY_CTRL:
case evt.KEY_ALT:
case evt.KEY_CAPS_LOCK:
case evt.KEY_LEFT_WINDOW:
case evt.KEY_RIGHT_WINDOW:
case evt.KEY_SELECT:
case evt.KEY_NUM_LOCK:
case evt.KEY_SCROLL_LOCK:
case evt.KEY_NUMPAD_0:
case evt.KEY_NUMPAD_1:
case evt.KEY_NUMPAD_2:
case evt.KEY_NUMPAD_3:
case evt.KEY_NUMPAD_4:
case evt.KEY_NUMPAD_5:
case evt.KEY_NUMPAD_6:
case evt.KEY_NUMPAD_7:
case evt.KEY_NUMPAD_8:
case evt.KEY_NUMPAD_9:
case evt.KEY_NUMPAD_PERIOD:
break;
case evt.KEY_NUMPAD_MULTIPLY:
case evt.KEY_NUMPAD_PLUS:
case evt.KEY_NUMPAD_ENTER:
case evt.KEY_NUMPAD_MINUS:
case evt.KEY_NUMPAD_DIVIDE:
break;
case evt.KEY_PAUSE:
case evt.KEY_TAB:
case evt.KEY_BACKSPACE:
case evt.KEY_ENTER:
case evt.KEY_ESCAPE:
case evt.KEY_PAGE_UP:
case evt.KEY_PAGE_DOWN:
case evt.KEY_END:
case evt.KEY_HOME:
case evt.KEY_LEFT_ARROW:
case evt.KEY_UP_ARROW:
case evt.KEY_RIGHT_ARROW:
case evt.KEY_DOWN_ARROW:
case evt.KEY_INSERT:
case evt.KEY_DELETE:
case evt.KEY_F1:
case evt.KEY_F2:
case evt.KEY_F3:
case evt.KEY_F4:
case evt.KEY_F5:
case evt.KEY_F6:
case evt.KEY_F7:
case evt.KEY_F8:
case evt.KEY_F9:
case evt.KEY_F10:
case evt.KEY_F11:
case evt.KEY_F12:
case evt.KEY_F12:
case evt.KEY_F13:
case evt.KEY_F14:
case evt.KEY_F15:
case evt.KEY_CLEAR:
case evt.KEY_HELP:
evt.key=evt.keyCode;
break;
default:
if(evt.ctrlKey||evt.altKey){
var _2e1=evt.keyCode;
if(_2e1>=65&&_2e1<=90&&evt.shiftKey==false){
_2e1+=32;
}
if(_2e1>=1&&_2e1<=26&&evt.ctrlKey){
_2e1+=96;
}
evt.key=String.fromCharCode(_2e1);
}
}
}else{
if(evt["type"]=="keypress"){
if(dojo.render.html.opera){
if(evt.which==0){
evt.key=evt.keyCode;
}else{
if(evt.which>0){
switch(evt.which){
case evt.KEY_SHIFT:
case evt.KEY_CTRL:
case evt.KEY_ALT:
case evt.KEY_CAPS_LOCK:
case evt.KEY_NUM_LOCK:
case evt.KEY_SCROLL_LOCK:
break;
case evt.KEY_PAUSE:
case evt.KEY_TAB:
case evt.KEY_BACKSPACE:
case evt.KEY_ENTER:
case evt.KEY_ESCAPE:
evt.key=evt.which;
break;
default:
var _2e1=evt.which;
if((evt.ctrlKey||evt.altKey||evt.metaKey)&&(evt.which>=65&&evt.which<=90&&evt.shiftKey==false)){
_2e1+=32;
}
evt.key=String.fromCharCode(_2e1);
}
}
}
}else{
if(dojo.render.html.ie){
if(!evt.ctrlKey&&!evt.altKey&&evt.keyCode>=evt.KEY_SPACE){
evt.key=String.fromCharCode(evt.keyCode);
}
}else{
if(dojo.render.html.safari){
switch(evt.keyCode){
case 25:
evt.key=evt.KEY_TAB;
evt.shift=true;
break;
case 63232:
evt.key=evt.KEY_UP_ARROW;
break;
case 63233:
evt.key=evt.KEY_DOWN_ARROW;
break;
case 63234:
evt.key=evt.KEY_LEFT_ARROW;
break;
case 63235:
evt.key=evt.KEY_RIGHT_ARROW;
break;
case 63236:
evt.key=evt.KEY_F1;
break;
case 63237:
evt.key=evt.KEY_F2;
break;
case 63238:
evt.key=evt.KEY_F3;
break;
case 63239:
evt.key=evt.KEY_F4;
break;
case 63240:
evt.key=evt.KEY_F5;
break;
case 63241:
evt.key=evt.KEY_F6;
break;
case 63242:
evt.key=evt.KEY_F7;
break;
case 63243:
evt.key=evt.KEY_F8;
break;
case 63244:
evt.key=evt.KEY_F9;
break;
case 63245:
evt.key=evt.KEY_F10;
break;
case 63246:
evt.key=evt.KEY_F11;
break;
case 63247:
evt.key=evt.KEY_F12;
break;
case 63250:
evt.key=evt.KEY_PAUSE;
break;
case 63272:
evt.key=evt.KEY_DELETE;
break;
case 63273:
evt.key=evt.KEY_HOME;
break;
case 63275:
evt.key=evt.KEY_END;
break;
case 63276:
evt.key=evt.KEY_PAGE_UP;
break;
case 63277:
evt.key=evt.KEY_PAGE_DOWN;
break;
case 63302:
evt.key=evt.KEY_INSERT;
break;
case 63248:
case 63249:
case 63289:
break;
default:
evt.key=evt.charCode>=evt.KEY_SPACE?String.fromCharCode(evt.charCode):evt.keyCode;
}
}else{
evt.key=evt.charCode>0?String.fromCharCode(evt.charCode):evt.keyCode;
}
}
}
}
}
}
if(dojo.render.html.ie){
if(!evt.target){
evt.target=evt.srcElement;
}
if(!evt.currentTarget){
evt.currentTarget=(_2df?_2df:evt.srcElement);
}
if(!evt.layerX){
evt.layerX=evt.offsetX;
}
if(!evt.layerY){
evt.layerY=evt.offsetY;
}
var doc=(evt.srcElement&&evt.srcElement.ownerDocument)?evt.srcElement.ownerDocument:document;
var _2e3=((dojo.render.html.ie55)||(doc["compatMode"]=="BackCompat"))?doc.body:doc.documentElement;
if(!evt.pageX){
evt.pageX=evt.clientX+(_2e3.scrollLeft||0);
}
if(!evt.pageY){
evt.pageY=evt.clientY+(_2e3.scrollTop||0);
}
if(evt.type=="mouseover"){
evt.relatedTarget=evt.fromElement;
}
if(evt.type=="mouseout"){
evt.relatedTarget=evt.toElement;
}
this.currentEvent=evt;
evt.callListener=this.callListener;
evt.stopPropagation=this._stopPropagation;
evt.preventDefault=this._preventDefault;
}
return evt;
};
this.stopEvent=function(evt){
if(window.event){
evt.cancelBubble=true;
evt.returnValue=false;
}else{
evt.preventDefault();
evt.stopPropagation();
}
};
};
dojo.provide("dojo.event.*");
dojo.provide("dojo.widget.Manager");
dojo.widget.manager=new function(){
this.widgets=[];
this.widgetIds=[];
this.topWidgets={};
var _2e5={};
var _2e6=[];
this.getUniqueId=function(_2e7){
var _2e8;
do{
_2e8=_2e7+"_"+(_2e5[_2e7]!=undefined?++_2e5[_2e7]:_2e5[_2e7]=0);
}while(this.getWidgetById(_2e8));
return _2e8;
};
this.add=function(_2e9){
this.widgets.push(_2e9);
if(!_2e9.extraArgs["id"]){
_2e9.extraArgs["id"]=_2e9.extraArgs["ID"];
}
if(_2e9.widgetId==""){
if(_2e9["id"]){
_2e9.widgetId=_2e9["id"];
}else{
if(_2e9.extraArgs["id"]){
_2e9.widgetId=_2e9.extraArgs["id"];
}else{
_2e9.widgetId=this.getUniqueId(_2e9.ns+"_"+_2e9.widgetType);
}
}
}
if(this.widgetIds[_2e9.widgetId]){
dojo.debug("widget ID collision on ID: "+_2e9.widgetId);
}
this.widgetIds[_2e9.widgetId]=_2e9;
};
this.destroyAll=function(){
for(var x=this.widgets.length-1;x>=0;x--){
try{
this.widgets[x].destroy(true);
delete this.widgets[x];
}
catch(e){
}
}
};
this.remove=function(_2eb){
if(dojo.lang.isNumber(_2eb)){
var tw=this.widgets[_2eb].widgetId;
delete this.widgetIds[tw];
this.widgets.splice(_2eb,1);
}else{
this.removeById(_2eb);
}
};
this.removeById=function(id){
if(!dojo.lang.isString(id)){
id=id["widgetId"];
if(!id){
dojo.debug("invalid widget or id passed to removeById");
return;
}
}
for(var i=0;i<this.widgets.length;i++){
if(this.widgets[i].widgetId==id){
this.remove(i);
break;
}
}
};
this.getWidgetById=function(id){
if(dojo.lang.isString(id)){
return this.widgetIds[id];
}
return id;
};
this.getWidgetsByType=function(type){
var lt=type.toLowerCase();
var _2f2=(type.indexOf(":")<0?function(x){
return x.widgetType.toLowerCase();
}:function(x){
return x.getNamespacedType();
});
var ret=[];
dojo.lang.forEach(this.widgets,function(x){
if(_2f2(x)==lt){
ret.push(x);
}
});
return ret;
};
this.getWidgetsByFilter=function(_2f7,_2f8){
var ret=[];
dojo.lang.every(this.widgets,function(x){
if(_2f7(x)){
ret.push(x);
if(_2f8){
return false;
}
}
return true;
});
return (_2f8?ret[0]:ret);
};
this.getAllWidgets=function(){
return this.widgets.concat();
};
this.getWidgetByNode=function(node){
var w=this.getAllWidgets();
node=dojo.byId(node);
for(var i=0;i<w.length;i++){
if(w[i].domNode==node){
return w[i];
}
}
return null;
};
this.byId=this.getWidgetById;
this.byType=this.getWidgetsByType;
this.byFilter=this.getWidgetsByFilter;
this.byNode=this.getWidgetByNode;
var _2fe={};
var _2ff=["dojo.widget"];
for(var i=0;i<_2ff.length;i++){
_2ff[_2ff[i]]=true;
}
this.registerWidgetPackage=function(_301){
if(!_2ff[_301]){
_2ff[_301]=true;
_2ff.push(_301);
}
};
this.getWidgetPackageList=function(){
return dojo.lang.map(_2ff,function(elt){
return (elt!==true?elt:undefined);
});
};
this.getImplementation=function(_303,_304,_305,ns){
var impl=this.getImplementationName(_303,ns);
if(impl){
var ret=_304?new impl(_304):new impl();
return ret;
}
};
function buildPrefixCache(){
for(var _309 in dojo.render){
if(dojo.render[_309]["capable"]===true){
var _30a=dojo.render[_309].prefixes;
for(var i=0;i<_30a.length;i++){
_2e6.push(_30a[i].toLowerCase());
}
}
}
}
var _30c=function(_30d,_30e){
if(!_30e){
return null;
}
for(var i=0,l=_2e6.length,_311;i<=l;i++){
_311=(i<l?_30e[_2e6[i]]:_30e);
if(!_311){
continue;
}
for(var name in _311){
if(name.toLowerCase()==_30d){
return _311[name];
}
}
}
return null;
};
var _313=function(_314,_315){
var _316=dojo.evalObjPath(_315,false);
return (_316?_30c(_314,_316):null);
};
this.getImplementationName=function(_317,ns){
var _319=_317.toLowerCase();
ns=ns||"dojo";
var imps=_2fe[ns]||(_2fe[ns]={});
var impl=imps[_319];
if(impl){
return impl;
}
if(!_2e6.length){
buildPrefixCache();
}
var _31c=dojo.ns.get(ns);
if(!_31c){
dojo.ns.register(ns,ns+".widget");
_31c=dojo.ns.get(ns);
}
if(_31c){
_31c.resolve(_317);
}
impl=_313(_319,_31c.module);
if(impl){
return (imps[_319]=impl);
}
_31c=dojo.ns.require(ns);
if((_31c)&&(_31c.resolver)){
_31c.resolve(_317);
impl=_313(_319,_31c.module);
if(impl){
return (imps[_319]=impl);
}
}
dojo.deprecated("dojo.widget.Manager.getImplementationName","Could not locate widget implementation for \""+_317+"\" in \""+_31c.module+"\" registered to namespace \""+_31c.name+"\". "+"Developers must specify correct namespaces for all non-Dojo widgets","0.5");
for(var i=0;i<_2ff.length;i++){
impl=_313(_319,_2ff[i]);
if(impl){
return (imps[_319]=impl);
}
}
throw new Error("Could not locate widget implementation for \""+_317+"\" in \""+_31c.module+"\" registered to namespace \""+_31c.name+"\"");
};
this.resizing=false;
this.onWindowResized=function(){
if(this.resizing){
return;
}
try{
this.resizing=true;
for(var id in this.topWidgets){
var _31f=this.topWidgets[id];
if(_31f.checkSize){
_31f.checkSize();
}
}
}
catch(e){
}
finally{
this.resizing=false;
}
};
if(typeof window!="undefined"){
dojo.addOnLoad(this,"onWindowResized");
dojo.event.connect(window,"onresize",this,"onWindowResized");
}
};
(function(){
var dw=dojo.widget;
var dwm=dw.manager;
var h=dojo.lang.curry(dojo.lang,"hitch",dwm);
var g=function(_324,_325){
dw[(_325||_324)]=h(_324);
};
g("add","addWidget");
g("destroyAll","destroyAllWidgets");
g("remove","removeWidget");
g("removeById","removeWidgetById");
g("getWidgetById");
g("getWidgetById","byId");
g("getWidgetsByType");
g("getWidgetsByFilter");
g("getWidgetsByType","byType");
g("getWidgetsByFilter","byFilter");
g("getWidgetByNode","byNode");
dw.all=function(n){
var _327=dwm.getAllWidgets.apply(dwm,arguments);
if(arguments.length>0){
return _327[n];
}
return _327;
};
g("registerWidgetPackage");
g("getImplementation","getWidgetImplementation");
g("getImplementationName","getWidgetImplementationName");
dw.widgets=dwm.widgets;
dw.widgetIds=dwm.widgetIds;
dw.root=dwm.root;
})();
dojo.provide("dojo.uri.Uri");
dojo.uri=new function(){
this.dojoUri=function(uri){
return new dojo.uri.Uri(dojo.hostenv.getBaseScriptUri(),uri);
};
this.moduleUri=function(_329,uri){
var loc=dojo.hostenv.getModuleSymbols(_329).join("/");
if(!loc){
return null;
}
if(loc.lastIndexOf("/")!=loc.length-1){
loc+="/";
}
return new dojo.uri.Uri(dojo.hostenv.getBaseScriptUri()+loc,uri);
};
this.Uri=function(){
var uri=arguments[0];
for(var i=1;i<arguments.length;i++){
if(!arguments[i]){
continue;
}
var _32e=new dojo.uri.Uri(arguments[i].toString());
var _32f=new dojo.uri.Uri(uri.toString());
if((_32e.path=="")&&(_32e.scheme==null)&&(_32e.authority==null)&&(_32e.query==null)){
if(_32e.fragment!=null){
_32f.fragment=_32e.fragment;
}
_32e=_32f;
}else{
if(_32e.scheme==null){
_32e.scheme=_32f.scheme;
if(_32e.authority==null){
_32e.authority=_32f.authority;
if(_32e.path.charAt(0)!="/"){
var path=_32f.path.substring(0,_32f.path.lastIndexOf("/")+1)+_32e.path;
var segs=path.split("/");
for(var j=0;j<segs.length;j++){
if(segs[j]=="."){
if(j==segs.length-1){
segs[j]="";
}else{
segs.splice(j,1);
j--;
}
}else{
if(j>0&&!(j==1&&segs[0]=="")&&segs[j]==".."&&segs[j-1]!=".."){
if(j==segs.length-1){
segs.splice(j,1);
segs[j-1]="";
}else{
segs.splice(j-1,2);
j-=2;
}
}
}
}
_32e.path=segs.join("/");
}
}
}
}
uri="";
if(_32e.scheme!=null){
uri+=_32e.scheme+":";
}
if(_32e.authority!=null){
uri+="//"+_32e.authority;
}
uri+=_32e.path;
if(_32e.query!=null){
uri+="?"+_32e.query;
}
if(_32e.fragment!=null){
uri+="#"+_32e.fragment;
}
}
this.uri=uri.toString();
var _333="^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$";
var r=this.uri.match(new RegExp(_333));
this.scheme=r[2]||(r[1]?"":null);
this.authority=r[4]||(r[3]?"":null);
this.path=r[5];
this.query=r[7]||(r[6]?"":null);
this.fragment=r[9]||(r[8]?"":null);
if(this.authority!=null){
_333="^((([^:]+:)?([^@]+))@)?([^:]*)(:([0-9]+))?$";
r=this.authority.match(new RegExp(_333));
this.user=r[3]||null;
this.password=r[4]||null;
this.host=r[5];
this.port=r[7]||null;
}
this.toString=function(){
return this.uri;
};
};
};
dojo.provide("dojo.uri.*");
dojo.provide("dojo.html.common");
dojo.lang.mixin(dojo.html,dojo.dom);
dojo.html.body=function(){
dojo.deprecated("dojo.html.body() moved to dojo.body()","0.5");
return dojo.body();
};
dojo.html.getEventTarget=function(evt){
if(!evt){
evt=dojo.global().event||{};
}
var t=(evt.srcElement?evt.srcElement:(evt.target?evt.target:null));
while((t)&&(t.nodeType!=1)){
t=t.parentNode;
}
return t;
};
dojo.html.getViewport=function(){
var _337=dojo.global();
var _338=dojo.doc();
var w=0;
var h=0;
if(dojo.render.html.mozilla){
w=_338.documentElement.clientWidth;
h=_337.innerHeight;
}else{
if(!dojo.render.html.opera&&_337.innerWidth){
w=_337.innerWidth;
h=_337.innerHeight;
}else{
if(!dojo.render.html.opera&&dojo.exists(_338,"documentElement.clientWidth")){
var w2=_338.documentElement.clientWidth;
if(!w||w2&&w2<w){
w=w2;
}
h=_338.documentElement.clientHeight;
}else{
if(dojo.body().clientWidth){
w=dojo.body().clientWidth;
h=dojo.body().clientHeight;
}
}
}
}
return {width:w,height:h};
};
dojo.html.getScroll=function(){
var _33c=dojo.global();
var _33d=dojo.doc();
var top=_33c.pageYOffset||_33d.documentElement.scrollTop||dojo.body().scrollTop||0;
var left=_33c.pageXOffset||_33d.documentElement.scrollLeft||dojo.body().scrollLeft||0;
return {top:top,left:left,offset:{x:left,y:top}};
};
dojo.html.getParentByType=function(node,type){
var _342=dojo.doc();
var _343=dojo.byId(node);
type=type.toLowerCase();
while((_343)&&(_343.nodeName.toLowerCase()!=type)){
if(_343==(_342["body"]||_342["documentElement"])){
return null;
}
_343=_343.parentNode;
}
return _343;
};
dojo.html.getAttribute=function(node,attr){
node=dojo.byId(node);
if((!node)||(!node.getAttribute)){
return null;
}
var ta=typeof attr=="string"?attr:new String(attr);
var v=node.getAttribute(ta.toUpperCase());
if((v)&&(typeof v=="string")&&(v!="")){
return v;
}
if(v&&v.value){
return v.value;
}
if((node.getAttributeNode)&&(node.getAttributeNode(ta))){
return (node.getAttributeNode(ta)).value;
}else{
if(node.getAttribute(ta)){
return node.getAttribute(ta);
}else{
if(node.getAttribute(ta.toLowerCase())){
return node.getAttribute(ta.toLowerCase());
}
}
}
return null;
};
dojo.html.hasAttribute=function(node,attr){
return dojo.html.getAttribute(dojo.byId(node),attr)?true:false;
};
dojo.html.getCursorPosition=function(e){
e=e||dojo.global().event;
var _34b={x:0,y:0};
if(e.pageX||e.pageY){
_34b.x=e.pageX;
_34b.y=e.pageY;
}else{
var de=dojo.doc().documentElement;
var db=dojo.body();
_34b.x=e.clientX+((de||db)["scrollLeft"])-((de||db)["clientLeft"]);
_34b.y=e.clientY+((de||db)["scrollTop"])-((de||db)["clientTop"]);
}
return _34b;
};
dojo.html.isTag=function(node){
node=dojo.byId(node);
if(node&&node.tagName){
for(var i=1;i<arguments.length;i++){
if(node.tagName.toLowerCase()==String(arguments[i]).toLowerCase()){
return String(arguments[i]).toLowerCase();
}
}
}
return "";
};
if(dojo.render.html.ie&&!dojo.render.html.ie70){
if(window.location.href.substr(0,6).toLowerCase()!="https:"){
(function(){
var _350=dojo.doc().createElement("script");
_350.src="javascript:'dojo.html.createExternalElement=function(doc, tag){ return doc.createElement(tag); }'";
dojo.doc().getElementsByTagName("head")[0].appendChild(_350);
})();
}
}else{
dojo.html.createExternalElement=function(doc,tag){
return doc.createElement(tag);
};
}
dojo.html._callDeprecated=function(_353,_354,args,_356,_357){
dojo.deprecated("dojo.html."+_353,"replaced by dojo.html."+_354+"("+(_356?"node, {"+_356+": "+_356+"}":"")+")"+(_357?"."+_357:""),"0.5");
var _358=[];
if(_356){
var _359={};
_359[_356]=args[1];
_358.push(args[0]);
_358.push(_359);
}else{
_358=args;
}
var ret=dojo.html[_354].apply(dojo.html,args);
if(_357){
return ret[_357];
}else{
return ret;
}
};
dojo.html.getViewportWidth=function(){
return dojo.html._callDeprecated("getViewportWidth","getViewport",arguments,null,"width");
};
dojo.html.getViewportHeight=function(){
return dojo.html._callDeprecated("getViewportHeight","getViewport",arguments,null,"height");
};
dojo.html.getViewportSize=function(){
return dojo.html._callDeprecated("getViewportSize","getViewport",arguments);
};
dojo.html.getScrollTop=function(){
return dojo.html._callDeprecated("getScrollTop","getScroll",arguments,null,"top");
};
dojo.html.getScrollLeft=function(){
return dojo.html._callDeprecated("getScrollLeft","getScroll",arguments,null,"left");
};
dojo.html.getScrollOffset=function(){
return dojo.html._callDeprecated("getScrollOffset","getScroll",arguments,null,"offset");
};
dojo.provide("dojo.a11y");
dojo.a11y={imgPath:dojo.uri.dojoUri("src/widget/templates/images"),doAccessibleCheck:true,accessible:null,checkAccessible:function(){
if(this.accessible===null){
this.accessible=false;
if(this.doAccessibleCheck==true){
this.accessible=this.testAccessible();
}
}
return this.accessible;
},testAccessible:function(){
this.accessible=false;
if(dojo.render.html.ie||dojo.render.html.mozilla){
var div=document.createElement("div");
div.style.backgroundImage="url(\""+this.imgPath+"/tab_close.gif\")";
dojo.body().appendChild(div);
var _35c=null;
if(window.getComputedStyle){
var _35d=getComputedStyle(div,"");
_35c=_35d.getPropertyValue("background-image");
}else{
_35c=div.currentStyle.backgroundImage;
}
var _35e=false;
if(_35c!=null&&(_35c=="none"||_35c=="url(invalid-url:)")){
this.accessible=true;
}
dojo.body().removeChild(div);
}
return this.accessible;
},setCheckAccessible:function(_35f){
this.doAccessibleCheck=_35f;
},setAccessibleMode:function(){
if(this.accessible===null){
if(this.checkAccessible()){
dojo.render.html.prefixes.unshift("a11y");
}
}
return this.accessible;
}};
dojo.provide("dojo.widget.Widget");
dojo.declare("dojo.widget.Widget",null,function(){
this.children=[];
this.extraArgs={};
},{parent:null,isTopLevel:false,disabled:false,isContainer:false,widgetId:"",widgetType:"Widget",ns:"dojo",getNamespacedType:function(){
return (this.ns?this.ns+":"+this.widgetType:this.widgetType).toLowerCase();
},toString:function(){
return "[Widget "+this.getNamespacedType()+", "+(this.widgetId||"NO ID")+"]";
},repr:function(){
return this.toString();
},enable:function(){
this.disabled=false;
},disable:function(){
this.disabled=true;
},onResized:function(){
this.notifyChildrenOfResize();
},notifyChildrenOfResize:function(){
for(var i=0;i<this.children.length;i++){
var _361=this.children[i];
if(_361.onResized){
_361.onResized();
}
}
},create:function(args,_363,_364,ns){
if(ns){
this.ns=ns;
}
this.satisfyPropertySets(args,_363,_364);
this.mixInProperties(args,_363,_364);
this.postMixInProperties(args,_363,_364);
dojo.widget.manager.add(this);
this.buildRendering(args,_363,_364);
this.initialize(args,_363,_364);
this.postInitialize(args,_363,_364);
this.postCreate(args,_363,_364);
return this;
},destroy:function(_366){
if(this.parent){
this.parent.removeChild(this);
}
this.destroyChildren();
this.uninitialize();
this.destroyRendering(_366);
dojo.widget.manager.removeById(this.widgetId);
},destroyChildren:function(){
var _367;
var i=0;
while(this.children.length>i){
_367=this.children[i];
if(_367 instanceof dojo.widget.Widget){
this.removeChild(_367);
_367.destroy();
continue;
}
i++;
}
},getChildrenOfType:function(type,_36a){
var ret=[];
var _36c=dojo.lang.isFunction(type);
if(!_36c){
type=type.toLowerCase();
}
for(var x=0;x<this.children.length;x++){
if(_36c){
if(this.children[x] instanceof type){
ret.push(this.children[x]);
}
}else{
if(this.children[x].widgetType.toLowerCase()==type){
ret.push(this.children[x]);
}
}
if(_36a){
ret=ret.concat(this.children[x].getChildrenOfType(type,_36a));
}
}
return ret;
},getDescendants:function(){
var _36e=[];
var _36f=[this];
var elem;
while((elem=_36f.pop())){
_36e.push(elem);
if(elem.children){
dojo.lang.forEach(elem.children,function(elem){
_36f.push(elem);
});
}
}
return _36e;
},isFirstChild:function(){
return this===this.parent.children[0];
},isLastChild:function(){
return this===this.parent.children[this.parent.children.length-1];
},satisfyPropertySets:function(args){
return args;
},mixInProperties:function(args,frag){
if((args["fastMixIn"])||(frag["fastMixIn"])){
for(var x in args){
this[x]=args[x];
}
return;
}
var _376;
var _377=dojo.widget.lcArgsCache[this.widgetType];
if(_377==null){
_377={};
for(var y in this){
_377[((new String(y)).toLowerCase())]=y;
}
dojo.widget.lcArgsCache[this.widgetType]=_377;
}
var _379={};
for(var x in args){
if(!this[x]){
var y=_377[(new String(x)).toLowerCase()];
if(y){
args[y]=args[x];
x=y;
}
}
if(_379[x]){
continue;
}
_379[x]=true;
if((typeof this[x])!=(typeof _376)){
if(typeof args[x]!="string"){
this[x]=args[x];
}else{
if(dojo.lang.isString(this[x])){
this[x]=args[x];
}else{
if(dojo.lang.isNumber(this[x])){
this[x]=new Number(args[x]);
}else{
if(dojo.lang.isBoolean(this[x])){
this[x]=(args[x].toLowerCase()=="false")?false:true;
}else{
if(dojo.lang.isFunction(this[x])){
if(args[x].search(/[^\w\.]+/i)==-1){
this[x]=dojo.evalObjPath(args[x],false);
}else{
var tn=dojo.lang.nameAnonFunc(new Function(args[x]),this);
dojo.event.kwConnect({srcObj:this,srcFunc:x,adviceObj:this,adviceFunc:tn});
}
}else{
if(dojo.lang.isArray(this[x])){
this[x]=args[x].split(";");
}else{
if(this[x] instanceof Date){
this[x]=new Date(Number(args[x]));
}else{
if(typeof this[x]=="object"){
if(this[x] instanceof dojo.uri.Uri){
this[x]=dojo.uri.dojoUri(args[x]);
}else{
var _37b=args[x].split(";");
for(var y=0;y<_37b.length;y++){
var si=_37b[y].indexOf(":");
if((si!=-1)&&(_37b[y].length>si)){
this[x][_37b[y].substr(0,si).replace(/^\s+|\s+$/g,"")]=_37b[y].substr(si+1);
}
}
}
}else{
this[x]=args[x];
}
}
}
}
}
}
}
}
}else{
this.extraArgs[x.toLowerCase()]=args[x];
}
}
},postMixInProperties:function(args,frag,_37f){
},initialize:function(args,frag,_382){
return false;
},postInitialize:function(args,frag,_385){
return false;
},postCreate:function(args,frag,_388){
return false;
},uninitialize:function(){
return false;
},buildRendering:function(args,frag,_38b){
dojo.unimplemented("dojo.widget.Widget.buildRendering, on "+this.toString()+", ");
return false;
},destroyRendering:function(){
dojo.unimplemented("dojo.widget.Widget.destroyRendering");
return false;
},addedTo:function(_38c){
},addChild:function(_38d){
dojo.unimplemented("dojo.widget.Widget.addChild");
return false;
},removeChild:function(_38e){
for(var x=0;x<this.children.length;x++){
if(this.children[x]===_38e){
this.children.splice(x,1);
_38e.parent=null;
break;
}
}
return _38e;
},getPreviousSibling:function(){
var idx=this.getParentIndex();
if(idx<=0){
return null;
}
return this.parent.children[idx-1];
},getSiblings:function(){
return this.parent.children;
},getParentIndex:function(){
return dojo.lang.indexOf(this.parent.children,this,true);
},getNextSibling:function(){
var idx=this.getParentIndex();
if(idx==this.parent.children.length-1){
return null;
}
if(idx<0){
return null;
}
return this.parent.children[idx+1];
}});
dojo.widget.lcArgsCache={};
dojo.widget.tags={};
dojo.widget.tags.addParseTreeHandler=function(type){
dojo.deprecated("addParseTreeHandler",". ParseTreeHandlers are now reserved for components. Any unfiltered DojoML tag without a ParseTreeHandler is assumed to be a widget","0.5");
};
dojo.widget.tags["dojo:propertyset"]=function(_393,_394,_395){
var _396=_394.parseProperties(_393["dojo:propertyset"]);
};
dojo.widget.tags["dojo:connect"]=function(_397,_398,_399){
var _39a=_398.parseProperties(_397["dojo:connect"]);
};
dojo.widget.buildWidgetFromParseTree=function(type,frag,_39d,_39e,_39f,_3a0){
dojo.a11y.setAccessibleMode();
var _3a1=type.split(":");
_3a1=(_3a1.length==2)?_3a1[1]:type;
var _3a2=_3a0||_39d.parseProperties(frag[frag["ns"]+":"+_3a1]);
var _3a3=dojo.widget.manager.getImplementation(_3a1,null,null,frag["ns"]);
if(!_3a3){
throw new Error("cannot find \""+type+"\" widget");
}else{
if(!_3a3.create){
throw new Error("\""+type+"\" widget object has no \"create\" method and does not appear to implement *Widget");
}
}
_3a2["dojoinsertionindex"]=_39f;
var ret=_3a3.create(_3a2,frag,_39e,frag["ns"]);
return ret;
};
dojo.widget.defineWidget=function(_3a5,_3a6,_3a7,init,_3a9){
if(dojo.lang.isString(arguments[3])){
dojo.widget._defineWidget(arguments[0],arguments[3],arguments[1],arguments[4],arguments[2]);
}else{
var args=[arguments[0]],p=3;
if(dojo.lang.isString(arguments[1])){
args.push(arguments[1],arguments[2]);
}else{
args.push("",arguments[1]);
p=2;
}
if(dojo.lang.isFunction(arguments[p])){
args.push(arguments[p],arguments[p+1]);
}else{
args.push(null,arguments[p]);
}
dojo.widget._defineWidget.apply(this,args);
}
};
dojo.widget.defineWidget.renderers="html|svg|vml";
dojo.widget._defineWidget=function(_3ac,_3ad,_3ae,init,_3b0){
var _3b1=_3ac.split(".");
var type=_3b1.pop();
var regx="\\.("+(_3ad?_3ad+"|":"")+dojo.widget.defineWidget.renderers+")\\.";
var r=_3ac.search(new RegExp(regx));
_3b1=(r<0?_3b1.join("."):_3ac.substr(0,r));
dojo.widget.manager.registerWidgetPackage(_3b1);
var pos=_3b1.indexOf(".");
var _3b6=(pos>-1)?_3b1.substring(0,pos):_3b1;
_3b0=(_3b0)||{};
_3b0.widgetType=type;
if((!init)&&(_3b0["classConstructor"])){
init=_3b0.classConstructor;
delete _3b0.classConstructor;
}
dojo.declare(_3ac,_3ae,init,_3b0);
};
dojo.provide("dojo.widget.Parse");
dojo.widget.Parse=function(_3b7){
this.propertySetsList=[];
this.fragment=_3b7;
this.createComponents=function(frag,_3b9){
var _3ba=[];
var _3bb=false;
try{
if(frag&&frag.tagName&&(frag!=frag.nodeRef)){
var _3bc=dojo.widget.tags;
var tna=String(frag.tagName).split(";");
for(var x=0;x<tna.length;x++){
var ltn=tna[x].replace(/^\s+|\s+$/g,"").toLowerCase();
frag.tagName=ltn;
var ret;
if(_3bc[ltn]){
_3bb=true;
ret=_3bc[ltn](frag,this,_3b9,frag.index);
_3ba.push(ret);
}else{
if(ltn.indexOf(":")==-1){
ltn="dojo:"+ltn;
}
ret=dojo.widget.buildWidgetFromParseTree(ltn,frag,this,_3b9,frag.index);
if(ret){
_3bb=true;
_3ba.push(ret);
}
}
}
}
}
catch(e){
dojo.debug("dojo.widget.Parse: error:",e);
}
if(!_3bb){
_3ba=_3ba.concat(this.createSubComponents(frag,_3b9));
}
return _3ba;
};
this.createSubComponents=function(_3c1,_3c2){
var frag,_3c4=[];
for(var item in _3c1){
frag=_3c1[item];
if(frag&&typeof frag=="object"&&(frag!=_3c1.nodeRef)&&(frag!=_3c1.tagName)&&(!dojo.dom.isNode(frag))){
_3c4=_3c4.concat(this.createComponents(frag,_3c2));
}
}
return _3c4;
};
this.parsePropertySets=function(_3c6){
return [];
};
this.parseProperties=function(_3c7){
var _3c8={};
for(var item in _3c7){
if((_3c7[item]==_3c7.tagName)||(_3c7[item]==_3c7.nodeRef)){
}else{
var frag=_3c7[item];
if(frag.tagName&&dojo.widget.tags[frag.tagName.toLowerCase()]){
}else{
if(frag[0]&&frag[0].value!=""&&frag[0].value!=null){
try{
if(item.toLowerCase()=="dataprovider"){
var _3cb=this;
this.getDataProvider(_3cb,frag[0].value);
_3c8.dataProvider=this.dataProvider;
}
_3c8[item]=frag[0].value;
var _3cc=this.parseProperties(frag);
for(var _3cd in _3cc){
_3c8[_3cd]=_3cc[_3cd];
}
}
catch(e){
dojo.debug(e);
}
}
}
switch(item.toLowerCase()){
case "checked":
case "disabled":
if(typeof _3c8[item]!="boolean"){
_3c8[item]=true;
}
break;
}
}
}
return _3c8;
};
this.getDataProvider=function(_3ce,_3cf){
dojo.io.bind({url:_3cf,load:function(type,_3d1){
if(type=="load"){
_3ce.dataProvider=_3d1;
}
},mimetype:"text/javascript",sync:true});
};
this.getPropertySetById=function(_3d2){
for(var x=0;x<this.propertySetsList.length;x++){
if(_3d2==this.propertySetsList[x]["id"][0].value){
return this.propertySetsList[x];
}
}
return "";
};
this.getPropertySetsByType=function(_3d4){
var _3d5=[];
for(var x=0;x<this.propertySetsList.length;x++){
var cpl=this.propertySetsList[x];
var cpcc=cpl.componentClass||cpl.componentType||null;
var _3d9=this.propertySetsList[x]["id"][0].value;
if(cpcc&&(_3d9==cpcc[0].value)){
_3d5.push(cpl);
}
}
return _3d5;
};
this.getPropertySets=function(_3da){
var ppl="dojo:propertyproviderlist";
var _3dc=[];
var _3dd=_3da.tagName;
if(_3da[ppl]){
var _3de=_3da[ppl].value.split(" ");
for(var _3df in _3de){
if((_3df.indexOf("..")==-1)&&(_3df.indexOf("://")==-1)){
var _3e0=this.getPropertySetById(_3df);
if(_3e0!=""){
_3dc.push(_3e0);
}
}else{
}
}
}
return this.getPropertySetsByType(_3dd).concat(_3dc);
};
this.createComponentFromScript=function(_3e1,_3e2,_3e3,ns){
_3e3.fastMixIn=true;
var ltn=(ns||"dojo")+":"+_3e2.toLowerCase();
if(dojo.widget.tags[ltn]){
return [dojo.widget.tags[ltn](_3e3,this,null,null,_3e3)];
}
return [dojo.widget.buildWidgetFromParseTree(ltn,_3e3,this,null,null,_3e3)];
};
};
dojo.widget._parser_collection={"dojo":new dojo.widget.Parse()};
dojo.widget.getParser=function(name){
if(!name){
name="dojo";
}
if(!this._parser_collection[name]){
this._parser_collection[name]=new dojo.widget.Parse();
}
return this._parser_collection[name];
};
dojo.widget.createWidget=function(name,_3e8,_3e9,_3ea){
var _3eb=false;
var _3ec=(typeof name=="string");
if(_3ec){
var pos=name.indexOf(":");
var ns=(pos>-1)?name.substring(0,pos):"dojo";
if(pos>-1){
name=name.substring(pos+1);
}
var _3ef=name.toLowerCase();
var _3f0=ns+":"+_3ef;
_3eb=(dojo.byId(name)&&!dojo.widget.tags[_3f0]);
}
if((arguments.length==1)&&(_3eb||!_3ec)){
var xp=new dojo.xml.Parse();
var tn=_3eb?dojo.byId(name):name;
return dojo.widget.getParser().createComponents(xp.parseElement(tn,null,true))[0];
}
function fromScript(_3f3,name,_3f5,ns){
_3f5[_3f0]={dojotype:[{value:_3ef}],nodeRef:_3f3,fastMixIn:true};
_3f5.ns=ns;
return dojo.widget.getParser().createComponentFromScript(_3f3,name,_3f5,ns);
}
_3e8=_3e8||{};
var _3f7=false;
var tn=null;
var h=dojo.render.html.capable;
if(h){
tn=document.createElement("span");
}
if(!_3e9){
_3f7=true;
_3e9=tn;
if(h){
dojo.body().appendChild(_3e9);
}
}else{
if(_3ea){
dojo.dom.insertAtPosition(tn,_3e9,_3ea);
}else{
tn=_3e9;
}
}
var _3f9=fromScript(tn,name.toLowerCase(),_3e8,ns);
if((!_3f9)||(!_3f9[0])||(typeof _3f9[0].widgetType=="undefined")){
throw new Error("createWidget: Creation of \""+name+"\" widget failed.");
}
try{
if(_3f7&&_3f9[0].domNode.parentNode){
_3f9[0].domNode.parentNode.removeChild(_3f9[0].domNode);
}
}
catch(e){
dojo.debug(e);
}
return _3f9[0];
};
dojo.provide("dojo.html.style");
dojo.html.getClass=function(node){
node=dojo.byId(node);
if(!node){
return "";
}
var cs="";
if(node.className){
cs=node.className;
}else{
if(dojo.html.hasAttribute(node,"class")){
cs=dojo.html.getAttribute(node,"class");
}
}
return cs.replace(/^\s+|\s+$/g,"");
};
dojo.html.getClasses=function(node){
var c=dojo.html.getClass(node);
return (c=="")?[]:c.split(/\s+/g);
};
dojo.html.hasClass=function(node,_3ff){
return (new RegExp("(^|\\s+)"+_3ff+"(\\s+|$)")).test(dojo.html.getClass(node));
};
dojo.html.prependClass=function(node,_401){
_401+=" "+dojo.html.getClass(node);
return dojo.html.setClass(node,_401);
};
dojo.html.addClass=function(node,_403){
if(dojo.html.hasClass(node,_403)){
return false;
}
_403=(dojo.html.getClass(node)+" "+_403).replace(/^\s+|\s+$/g,"");
return dojo.html.setClass(node,_403);
};
dojo.html.setClass=function(node,_405){
node=dojo.byId(node);
var cs=new String(_405);
try{
if(typeof node.className=="string"){
node.className=cs;
}else{
if(node.setAttribute){
node.setAttribute("class",_405);
node.className=cs;
}else{
return false;
}
}
}
catch(e){
dojo.debug("dojo.html.setClass() failed",e);
}
return true;
};
dojo.html.removeClass=function(node,_408,_409){
try{
if(!_409){
var _40a=dojo.html.getClass(node).replace(new RegExp("(^|\\s+)"+_408+"(\\s+|$)"),"$1$2");
}else{
var _40a=dojo.html.getClass(node).replace(_408,"");
}
dojo.html.setClass(node,_40a);
}
catch(e){
dojo.debug("dojo.html.removeClass() failed",e);
}
return true;
};
dojo.html.replaceClass=function(node,_40c,_40d){
dojo.html.removeClass(node,_40d);
dojo.html.addClass(node,_40c);
};
dojo.html.classMatchType={ContainsAll:0,ContainsAny:1,IsOnly:2};
dojo.html.getElementsByClass=function(_40e,_40f,_410,_411,_412){
_412=false;
var _413=dojo.doc();
_40f=dojo.byId(_40f)||_413;
var _414=_40e.split(/\s+/g);
var _415=[];
if(_411!=1&&_411!=2){
_411=0;
}
var _416=new RegExp("(\\s|^)(("+_414.join(")|(")+"))(\\s|$)");
var _417=_414.join(" ").length;
var _418=[];
if(!_412&&_413.evaluate){
var _419=".//"+(_410||"*")+"[contains(";
if(_411!=dojo.html.classMatchType.ContainsAny){
_419+="concat(' ',@class,' '), ' "+_414.join(" ') and contains(concat(' ',@class,' '), ' ")+" ')";
if(_411==2){
_419+=" and string-length(@class)="+_417+"]";
}else{
_419+="]";
}
}else{
_419+="concat(' ',@class,' '), ' "+_414.join(" ') or contains(concat(' ',@class,' '), ' ")+" ')]";
}
var _41a=_413.evaluate(_419,_40f,null,XPathResult.ANY_TYPE,null);
var _41b=_41a.iterateNext();
while(_41b){
try{
_418.push(_41b);
_41b=_41a.iterateNext();
}
catch(e){
break;
}
}
return _418;
}else{
if(!_410){
_410="*";
}
_418=_40f.getElementsByTagName(_410);
var node,i=0;
outer:
while(node=_418[i++]){
var _41e=dojo.html.getClasses(node);
if(_41e.length==0){
continue outer;
}
var _41f=0;
for(var j=0;j<_41e.length;j++){
if(_416.test(_41e[j])){
if(_411==dojo.html.classMatchType.ContainsAny){
_415.push(node);
continue outer;
}else{
_41f++;
}
}else{
if(_411==dojo.html.classMatchType.IsOnly){
continue outer;
}
}
}
if(_41f==_414.length){
if((_411==dojo.html.classMatchType.IsOnly)&&(_41f==_41e.length)){
_415.push(node);
}else{
if(_411==dojo.html.classMatchType.ContainsAll){
_415.push(node);
}
}
}
}
return _415;
}
};
dojo.html.getElementsByClassName=dojo.html.getElementsByClass;
dojo.html.toCamelCase=function(_421){
var arr=_421.split("-"),cc=arr[0];
for(var i=1;i<arr.length;i++){
cc+=arr[i].charAt(0).toUpperCase()+arr[i].substring(1);
}
return cc;
};
dojo.html.toSelectorCase=function(_425){
return _425.replace(/([A-Z])/g,"-$1").toLowerCase();
};
dojo.html.getComputedStyle=function(node,_427,_428){
node=dojo.byId(node);
var _427=dojo.html.toSelectorCase(_427);
var _429=dojo.html.toCamelCase(_427);
if(!node||!node.style){
return _428;
}else{
if(document.defaultView&&dojo.html.isDescendantOf(node,node.ownerDocument)){
try{
var cs=document.defaultView.getComputedStyle(node,"");
if(cs){
return cs.getPropertyValue(_427);
}
}
catch(e){
if(node.style.getPropertyValue){
return node.style.getPropertyValue(_427);
}else{
return _428;
}
}
}else{
if(node.currentStyle){
return node.currentStyle[_429];
}
}
}
if(node.style.getPropertyValue){
return node.style.getPropertyValue(_427);
}else{
return _428;
}
};
dojo.html.getStyleProperty=function(node,_42c){
node=dojo.byId(node);
return (node&&node.style?node.style[dojo.html.toCamelCase(_42c)]:undefined);
};
dojo.html.getStyle=function(node,_42e){
var _42f=dojo.html.getStyleProperty(node,_42e);
return (_42f?_42f:dojo.html.getComputedStyle(node,_42e));
};
dojo.html.setStyle=function(node,_431,_432){
node=dojo.byId(node);
if(node&&node.style){
var _433=dojo.html.toCamelCase(_431);
node.style[_433]=_432;
}
};
dojo.html.setStyleText=function(_434,text){
try{
_434.style.cssText=text;
}
catch(e){
_434.setAttribute("style",text);
}
};
dojo.html.copyStyle=function(_436,_437){
if(!_437.style.cssText){
_436.setAttribute("style",_437.getAttribute("style"));
}else{
_436.style.cssText=_437.style.cssText;
}
dojo.html.addClass(_436,dojo.html.getClass(_437));
};
dojo.html.getUnitValue=function(node,_439,_43a){
var s=dojo.html.getComputedStyle(node,_439);
if((!s)||((s=="auto")&&(_43a))){
return {value:0,units:"px"};
}
var _43c=s.match(/(\-?[\d.]+)([a-z%]*)/i);
if(!_43c){
return dojo.html.getUnitValue.bad;
}
return {value:Number(_43c[1]),units:_43c[2].toLowerCase()};
};
dojo.html.getUnitValue.bad={value:NaN,units:""};
dojo.html.getPixelValue=function(node,_43e,_43f){
var _440=dojo.html.getUnitValue(node,_43e,_43f);
if(isNaN(_440.value)){
return 0;
}
if((_440.value)&&(_440.units!="px")){
return NaN;
}
return _440.value;
};
dojo.html.setPositivePixelValue=function(node,_442,_443){
if(isNaN(_443)){
return false;
}
node.style[_442]=Math.max(0,_443)+"px";
return true;
};
dojo.html.styleSheet=null;
dojo.html.insertCssRule=function(_444,_445,_446){
if(!dojo.html.styleSheet){
if(document.createStyleSheet){
dojo.html.styleSheet=document.createStyleSheet();
}else{
if(document.styleSheets[0]){
dojo.html.styleSheet=document.styleSheets[0];
}else{
return null;
}
}
}
if(arguments.length<3){
if(dojo.html.styleSheet.cssRules){
_446=dojo.html.styleSheet.cssRules.length;
}else{
if(dojo.html.styleSheet.rules){
_446=dojo.html.styleSheet.rules.length;
}else{
return null;
}
}
}
if(dojo.html.styleSheet.insertRule){
var rule=_444+" { "+_445+" }";
return dojo.html.styleSheet.insertRule(rule,_446);
}else{
if(dojo.html.styleSheet.addRule){
return dojo.html.styleSheet.addRule(_444,_445,_446);
}else{
return null;
}
}
};
dojo.html.removeCssRule=function(_448){
if(!dojo.html.styleSheet){
dojo.debug("no stylesheet defined for removing rules");
return false;
}
if(dojo.render.html.ie){
if(!_448){
_448=dojo.html.styleSheet.rules.length;
dojo.html.styleSheet.removeRule(_448);
}
}else{
if(document.styleSheets[0]){
if(!_448){
_448=dojo.html.styleSheet.cssRules.length;
}
dojo.html.styleSheet.deleteRule(_448);
}
}
return true;
};
dojo.html._insertedCssFiles=[];
dojo.html.insertCssFile=function(URI,doc,_44b,_44c){
if(!URI){
return;
}
if(!doc){
doc=document;
}
var _44d=dojo.hostenv.getText(URI,false,_44c);
if(_44d===null){
return;
}
_44d=dojo.html.fixPathsInCssText(_44d,URI);
if(_44b){
var idx=-1,node,ent=dojo.html._insertedCssFiles;
for(var i=0;i<ent.length;i++){
if((ent[i].doc==doc)&&(ent[i].cssText==_44d)){
idx=i;
node=ent[i].nodeRef;
break;
}
}
if(node){
var _452=doc.getElementsByTagName("style");
for(var i=0;i<_452.length;i++){
if(_452[i]==node){
return;
}
}
dojo.html._insertedCssFiles.shift(idx,1);
}
}
var _453=dojo.html.insertCssText(_44d,doc);
dojo.html._insertedCssFiles.push({"doc":doc,"cssText":_44d,"nodeRef":_453});
if(_453&&djConfig.isDebug){
_453.setAttribute("dbgHref",URI);
}
return _453;
};
dojo.html.insertCssText=function(_454,doc,URI){
if(!_454){
return;
}
if(!doc){
doc=document;
}
if(URI){
_454=dojo.html.fixPathsInCssText(_454,URI);
}
var _457=doc.createElement("style");
_457.setAttribute("type","text/css");
var head=doc.getElementsByTagName("head")[0];
if(!head){
dojo.debug("No head tag in document, aborting styles");
return;
}else{
head.appendChild(_457);
}
if(_457.styleSheet){
var _459=function(){
try{
_457.styleSheet.cssText=_454;
}
catch(e){
dojo.debug(e);
}
};
if(_457.styleSheet.disabled){
setTimeout(_459,10);
}else{
_459();
}
}else{
var _45a=doc.createTextNode(_454);
_457.appendChild(_45a);
}
return _457;
};
dojo.html.fixPathsInCssText=function(_45b,URI){
if(!_45b||!URI){
return;
}
var _45d,str="",url="",_460="[\\t\\s\\w\\(\\)\\/\\.\\\\'\"-:#=&?~]+";
var _461=new RegExp("url\\(\\s*("+_460+")\\s*\\)");
var _462=/(file|https?|ftps?):\/\//;
regexTrim=new RegExp("^[\\s]*(['\"]?)("+_460+")\\1[\\s]*?$");
if(dojo.render.html.ie55||dojo.render.html.ie60){
var _463=new RegExp("AlphaImageLoader\\((.*)src=['\"]("+_460+")['\"]");
while(_45d=_463.exec(_45b)){
url=_45d[2].replace(regexTrim,"$2");
if(!_462.exec(url)){
url=(new dojo.uri.Uri(URI,url).toString());
}
str+=_45b.substring(0,_45d.index)+"AlphaImageLoader("+_45d[1]+"src='"+url+"'";
_45b=_45b.substr(_45d.index+_45d[0].length);
}
_45b=str+_45b;
str="";
}
while(_45d=_461.exec(_45b)){
url=_45d[1].replace(regexTrim,"$2");
if(!_462.exec(url)){
url=(new dojo.uri.Uri(URI,url).toString());
}
str+=_45b.substring(0,_45d.index)+"url("+url+")";
_45b=_45b.substr(_45d.index+_45d[0].length);
}
return str+_45b;
};
dojo.html.setActiveStyleSheet=function(_464){
var i=0,a,els=dojo.doc().getElementsByTagName("link");
while(a=els[i++]){
if(a.getAttribute("rel").indexOf("style")!=-1&&a.getAttribute("title")){
a.disabled=true;
if(a.getAttribute("title")==_464){
a.disabled=false;
}
}
}
};
dojo.html.getActiveStyleSheet=function(){
var i=0,a,els=dojo.doc().getElementsByTagName("link");
while(a=els[i++]){
if(a.getAttribute("rel").indexOf("style")!=-1&&a.getAttribute("title")&&!a.disabled){
return a.getAttribute("title");
}
}
return null;
};
dojo.html.getPreferredStyleSheet=function(){
var i=0,a,els=dojo.doc().getElementsByTagName("link");
while(a=els[i++]){
if(a.getAttribute("rel").indexOf("style")!=-1&&a.getAttribute("rel").indexOf("alt")==-1&&a.getAttribute("title")){
return a.getAttribute("title");
}
}
return null;
};
dojo.html.applyBrowserClass=function(node){
var drh=dojo.render.html;
var _470={dj_ie:drh.ie,dj_ie55:drh.ie55,dj_ie6:drh.ie60,dj_ie7:drh.ie70,dj_iequirks:drh.ie&&drh.quirks,dj_opera:drh.opera,dj_opera8:drh.opera&&(Math.floor(dojo.render.version)==8),dj_opera9:drh.opera&&(Math.floor(dojo.render.version)==9),dj_khtml:drh.khtml,dj_safari:drh.safari,dj_gecko:drh.mozilla};
for(var p in _470){
if(_470[p]){
dojo.html.addClass(node,p);
}
}
};
dojo.provide("dojo.widget.DomWidget");
dojo.widget._cssFiles={};
dojo.widget._cssStrings={};
dojo.widget._templateCache={};
dojo.widget.defaultStrings={dojoRoot:dojo.hostenv.getBaseScriptUri(),baseScriptUri:dojo.hostenv.getBaseScriptUri()};
dojo.widget.fillFromTemplateCache=function(obj,_473,_474,_475){
var _476=_473||obj.templatePath;
var _477=dojo.widget._templateCache;
if(!_476&&!obj["widgetType"]){
do{
var _478="__dummyTemplate__"+dojo.widget._templateCache.dummyCount++;
}while(_477[_478]);
obj.widgetType=_478;
}
var wt=_476?_476.toString():obj.widgetType;
var ts=_477[wt];
if(!ts){
_477[wt]={"string":null,"node":null};
if(_475){
ts={};
}else{
ts=_477[wt];
}
}
if((!obj.templateString)&&(!_475)){
obj.templateString=_474||ts["string"];
}
if((!obj.templateNode)&&(!_475)){
obj.templateNode=ts["node"];
}
if((!obj.templateNode)&&(!obj.templateString)&&(_476)){
var _47b=dojo.hostenv.getText(_476);
if(_47b){
_47b=_47b.replace(/^\s*<\?xml(\s)+version=[\'\"](\d)*.(\d)*[\'\"](\s)*\?>/im,"");
var _47c=_47b.match(/<body[^>]*>\s*([\s\S]+)\s*<\/body>/im);
if(_47c){
_47b=_47c[1];
}
}else{
_47b="";
}
obj.templateString=_47b;
if(!_475){
_477[wt]["string"]=_47b;
}
}
if((!ts["string"])&&(!_475)){
ts.string=obj.templateString;
}
};
dojo.widget._templateCache.dummyCount=0;
dojo.widget.attachProperties=["dojoAttachPoint","id"];
dojo.widget.eventAttachProperty="dojoAttachEvent";
dojo.widget.onBuildProperty="dojoOnBuild";
dojo.widget.waiNames=["waiRole","waiState"];
dojo.widget.wai={waiRole:{name:"waiRole","namespace":"http://www.w3.org/TR/xhtml2",alias:"x2",prefix:"wairole:"},waiState:{name:"waiState","namespace":"http://www.w3.org/2005/07/aaa",alias:"aaa",prefix:""},setAttr:function(node,ns,attr,_480){
if(dojo.render.html.ie){
node.setAttribute(this[ns].alias+":"+attr,this[ns].prefix+_480);
}else{
node.setAttributeNS(this[ns]["namespace"],attr,this[ns].prefix+_480);
}
},getAttr:function(node,ns,attr){
if(dojo.render.html.ie){
return node.getAttribute(this[ns].alias+":"+attr);
}else{
return node.getAttributeNS(this[ns]["namespace"],attr);
}
},removeAttr:function(node,ns,attr){
var _487=true;
if(dojo.render.html.ie){
_487=node.removeAttribute(this[ns].alias+":"+attr);
}else{
node.removeAttributeNS(this[ns]["namespace"],attr);
}
return _487;
}};
dojo.widget.attachTemplateNodes=function(_488,_489,_48a){
var _48b=dojo.dom.ELEMENT_NODE;
function trim(str){
return str.replace(/^\s+|\s+$/g,"");
}
if(!_488){
_488=_489.domNode;
}
if(_488.nodeType!=_48b){
return;
}
var _48d=_488.all||_488.getElementsByTagName("*");
var _48e=_489;
for(var x=-1;x<_48d.length;x++){
var _490=(x==-1)?_488:_48d[x];
var _491=[];
if(!_489.widgetsInTemplate||!_490.getAttribute("dojoType")){
for(var y=0;y<this.attachProperties.length;y++){
var _493=_490.getAttribute(this.attachProperties[y]);
if(_493){
_491=_493.split(";");
for(var z=0;z<_491.length;z++){
if(dojo.lang.isArray(_489[_491[z]])){
_489[_491[z]].push(_490);
}else{
_489[_491[z]]=_490;
}
}
break;
}
}
var _495=_490.getAttribute(this.eventAttachProperty);
if(_495){
var evts=_495.split(";");
for(var y=0;y<evts.length;y++){
if((!evts[y])||(!evts[y].length)){
continue;
}
var _497=null;
var tevt=trim(evts[y]);
if(evts[y].indexOf(":")>=0){
var _499=tevt.split(":");
tevt=trim(_499[0]);
_497=trim(_499[1]);
}
if(!_497){
_497=tevt;
}
var tf=function(){
var ntf=new String(_497);
return function(evt){
if(_48e[ntf]){
_48e[ntf](dojo.event.browser.fixEvent(evt,this));
}
};
}();
dojo.event.browser.addListener(_490,tevt,tf,false,true);
}
}
for(var y=0;y<_48a.length;y++){
var _49d=_490.getAttribute(_48a[y]);
if((_49d)&&(_49d.length)){
var _497=null;
var _49e=_48a[y].substr(4);
_497=trim(_49d);
var _49f=[_497];
if(_497.indexOf(";")>=0){
_49f=dojo.lang.map(_497.split(";"),trim);
}
for(var z=0;z<_49f.length;z++){
if(!_49f[z].length){
continue;
}
var tf=function(){
var ntf=new String(_49f[z]);
return function(evt){
if(_48e[ntf]){
_48e[ntf](dojo.event.browser.fixEvent(evt,this));
}
};
}();
dojo.event.browser.addListener(_490,_49e,tf,false,true);
}
}
}
}
var _4a2=_490.getAttribute(this.templateProperty);
if(_4a2){
_489[_4a2]=_490;
}
dojo.lang.forEach(dojo.widget.waiNames,function(name){
var wai=dojo.widget.wai[name];
var val=_490.getAttribute(wai.name);
if(val){
if(val.indexOf("-")==-1){
dojo.widget.wai.setAttr(_490,wai.name,"role",val);
}else{
var _4a6=val.split("-");
dojo.widget.wai.setAttr(_490,wai.name,_4a6[0],_4a6[1]);
}
}
},this);
var _4a7=_490.getAttribute(this.onBuildProperty);
if(_4a7){
eval("var node = baseNode; var widget = targetObj; "+_4a7);
}
}
};
dojo.widget.getDojoEventsFromStr=function(str){
var re=/(dojoOn([a-z]+)(\s?))=/gi;
var evts=str?str.match(re)||[]:[];
var ret=[];
var lem={};
for(var x=0;x<evts.length;x++){
if(evts[x].length<1){
continue;
}
var cm=evts[x].replace(/\s/,"");
cm=(cm.slice(0,cm.length-1));
if(!lem[cm]){
lem[cm]=true;
ret.push(cm);
}
}
return ret;
};
dojo.declare("dojo.widget.DomWidget",dojo.widget.Widget,function(){
if((arguments.length>0)&&(typeof arguments[0]=="object")){
this.create(arguments[0]);
}
},{templateNode:null,templateString:null,templateCssString:null,preventClobber:false,domNode:null,containerNode:null,widgetsInTemplate:false,addChild:function(_4af,_4b0,pos,ref,_4b3){
if(!this.isContainer){
dojo.debug("dojo.widget.DomWidget.addChild() attempted on non-container widget");
return null;
}else{
if(_4b3==undefined){
_4b3=this.children.length;
}
this.addWidgetAsDirectChild(_4af,_4b0,pos,ref,_4b3);
this.registerChild(_4af,_4b3);
}
return _4af;
},addWidgetAsDirectChild:function(_4b4,_4b5,pos,ref,_4b8){
if((!this.containerNode)&&(!_4b5)){
this.containerNode=this.domNode;
}
var cn=(_4b5)?_4b5:this.containerNode;
if(!pos){
pos="after";
}
if(!ref){
if(!cn){
cn=dojo.body();
}
ref=cn.lastChild;
}
if(!_4b8){
_4b8=0;
}
_4b4.domNode.setAttribute("dojoinsertionindex",_4b8);
if(!ref){
cn.appendChild(_4b4.domNode);
}else{
if(pos=="insertAtIndex"){
dojo.dom.insertAtIndex(_4b4.domNode,ref.parentNode,_4b8);
}else{
if((pos=="after")&&(ref===cn.lastChild)){
cn.appendChild(_4b4.domNode);
}else{
dojo.dom.insertAtPosition(_4b4.domNode,cn,pos);
}
}
}
},registerChild:function(_4ba,_4bb){
_4ba.dojoInsertionIndex=_4bb;
var idx=-1;
for(var i=0;i<this.children.length;i++){
if(this.children[i].dojoInsertionIndex<=_4bb){
idx=i;
}
}
this.children.splice(idx+1,0,_4ba);
_4ba.parent=this;
_4ba.addedTo(this,idx+1);
delete dojo.widget.manager.topWidgets[_4ba.widgetId];
},removeChild:function(_4be){
dojo.dom.removeNode(_4be.domNode);
return dojo.widget.DomWidget.superclass.removeChild.call(this,_4be);
},getFragNodeRef:function(frag){
if(!frag){
return null;
}
if(!frag[this.getNamespacedType()]){
dojo.raise("Error: no frag for widget type "+this.getNamespacedType()+", id "+this.widgetId+" (maybe a widget has set it's type incorrectly)");
}
return frag[this.getNamespacedType()]["nodeRef"];
},postInitialize:function(args,frag,_4c2){
var _4c3=this.getFragNodeRef(frag);
if(_4c2&&(_4c2.snarfChildDomOutput||!_4c3)){
_4c2.addWidgetAsDirectChild(this,"","insertAtIndex","",args["dojoinsertionindex"],_4c3);
}else{
if(_4c3){
if(this.domNode&&(this.domNode!==_4c3)){
this._sourceNodeRef=dojo.dom.replaceNode(_4c3,this.domNode);
}
}
}
if(_4c2){
_4c2.registerChild(this,args.dojoinsertionindex);
}else{
dojo.widget.manager.topWidgets[this.widgetId]=this;
}
if(this.widgetsInTemplate){
var _4c4=new dojo.xml.Parse();
var _4c5;
var _4c6=this.domNode.getElementsByTagName("*");
for(var i=0;i<_4c6.length;i++){
if(_4c6[i].getAttribute("dojoAttachPoint")=="subContainerWidget"){
_4c5=_4c6[i];
}
if(_4c6[i].getAttribute("dojoType")){
_4c6[i].setAttribute("isSubWidget",true);
}
}
if(this.isContainer&&!this.containerNode){
if(_4c5){
var src=this.getFragNodeRef(frag);
if(src){
dojo.dom.moveChildren(src,_4c5);
frag["dojoDontFollow"]=true;
}
}else{
dojo.debug("No subContainerWidget node can be found in template file for widget "+this);
}
}
var _4c9=_4c4.parseElement(this.domNode,null,true);
dojo.widget.getParser().createSubComponents(_4c9,this);
var _4ca=[];
var _4cb=[this];
var w;
while((w=_4cb.pop())){
for(var i=0;i<w.children.length;i++){
var _4cd=w.children[i];
if(_4cd._processedSubWidgets||!_4cd.extraArgs["issubwidget"]){
continue;
}
_4ca.push(_4cd);
if(_4cd.isContainer){
_4cb.push(_4cd);
}
}
}
for(var i=0;i<_4ca.length;i++){
var _4ce=_4ca[i];
if(_4ce._processedSubWidgets){
dojo.debug("This should not happen: widget._processedSubWidgets is already true!");
return;
}
_4ce._processedSubWidgets=true;
if(_4ce.extraArgs["dojoattachevent"]){
var evts=_4ce.extraArgs["dojoattachevent"].split(";");
for(var j=0;j<evts.length;j++){
var _4d1=null;
var tevt=dojo.string.trim(evts[j]);
if(tevt.indexOf(":")>=0){
var _4d3=tevt.split(":");
tevt=dojo.string.trim(_4d3[0]);
_4d1=dojo.string.trim(_4d3[1]);
}
if(!_4d1){
_4d1=tevt;
}
if(dojo.lang.isFunction(_4ce[tevt])){
dojo.event.kwConnect({srcObj:_4ce,srcFunc:tevt,targetObj:this,targetFunc:_4d1});
}else{
alert(tevt+" is not a function in widget "+_4ce);
}
}
}
if(_4ce.extraArgs["dojoattachpoint"]){
this[_4ce.extraArgs["dojoattachpoint"]]=_4ce;
}
}
}
if(this.isContainer&&!frag["dojoDontFollow"]){
dojo.widget.getParser().createSubComponents(frag,this);
}
},buildRendering:function(args,frag){
var ts=dojo.widget._templateCache[this.widgetType];
if(args["templatecsspath"]){
args["templateCssPath"]=args["templatecsspath"];
}
var _4d7=args["templateCssPath"]||this.templateCssPath;
if(_4d7&&!dojo.widget._cssFiles[_4d7.toString()]){
if((!this.templateCssString)&&(_4d7)){
this.templateCssString=dojo.hostenv.getText(_4d7);
this.templateCssPath=null;
}
dojo.widget._cssFiles[_4d7.toString()]=true;
}
if((this["templateCssString"])&&(!dojo.widget._cssStrings[this.templateCssString])){
dojo.html.insertCssText(this.templateCssString,null,_4d7);
dojo.widget._cssStrings[this.templateCssString]=true;
}
if((!this.preventClobber)&&((this.templatePath)||(this.templateNode)||((this["templateString"])&&(this.templateString.length))||((typeof ts!="undefined")&&((ts["string"])||(ts["node"]))))){
this.buildFromTemplate(args,frag);
}else{
this.domNode=this.getFragNodeRef(frag);
}
this.fillInTemplate(args,frag);
},buildFromTemplate:function(args,frag){
var _4da=false;
if(args["templatepath"]){
args["templatePath"]=args["templatepath"];
}
dojo.widget.fillFromTemplateCache(this,args["templatePath"],null,_4da);
var ts=dojo.widget._templateCache[this.templatePath?this.templatePath.toString():this.widgetType];
if((ts)&&(!_4da)){
if(!this.templateString.length){
this.templateString=ts["string"];
}
if(!this.templateNode){
this.templateNode=ts["node"];
}
}
var _4dc=false;
var node=null;
var tstr=this.templateString;
if((!this.templateNode)&&(this.templateString)){
_4dc=this.templateString.match(/\$\{([^\}]+)\}/g);
if(_4dc){
var hash=this.strings||{};
for(var key in dojo.widget.defaultStrings){
if(dojo.lang.isUndefined(hash[key])){
hash[key]=dojo.widget.defaultStrings[key];
}
}
for(var i=0;i<_4dc.length;i++){
var key=_4dc[i];
key=key.substring(2,key.length-1);
var kval=(key.substring(0,5)=="this.")?dojo.lang.getObjPathValue(key.substring(5),this):hash[key];
var _4e3;
if((kval)||(dojo.lang.isString(kval))){
_4e3=new String((dojo.lang.isFunction(kval))?kval.call(this,key,this.templateString):kval);
while(_4e3.indexOf("\"")>-1){
_4e3=_4e3.replace("\"","&quot;");
}
tstr=tstr.replace(_4dc[i],_4e3);
}
}
}else{
this.templateNode=this.createNodesFromText(this.templateString,true)[0];
if(!_4da){
ts.node=this.templateNode;
}
}
}
if((!this.templateNode)&&(!_4dc)){
dojo.debug("DomWidget.buildFromTemplate: could not create template");
return false;
}else{
if(!_4dc){
node=this.templateNode.cloneNode(true);
if(!node){
return false;
}
}else{
node=this.createNodesFromText(tstr,true)[0];
}
}
this.domNode=node;
this.attachTemplateNodes();
if(this.isContainer&&this.containerNode){
var src=this.getFragNodeRef(frag);
if(src){
dojo.dom.moveChildren(src,this.containerNode);
}
}
},attachTemplateNodes:function(_4e5,_4e6){
if(!_4e5){
_4e5=this.domNode;
}
if(!_4e6){
_4e6=this;
}
return dojo.widget.attachTemplateNodes(_4e5,_4e6,dojo.widget.getDojoEventsFromStr(this.templateString));
},fillInTemplate:function(){
},destroyRendering:function(){
try{
dojo.dom.destroyNode(this.domNode);
delete this.domNode;
}
catch(e){
}
if(this._sourceNodeRef){
try{
dojo.dom.destroyNode(this._sourceNodeRef);
}
catch(e){
}
}
},createNodesFromText:function(){
dojo.unimplemented("dojo.widget.DomWidget.createNodesFromText");
}});
dojo.provide("dojo.html.display");
dojo.html._toggle=function(node,_4e8,_4e9){
node=dojo.byId(node);
_4e9(node,!_4e8(node));
return _4e8(node);
};
dojo.html.show=function(node){
node=dojo.byId(node);
if(dojo.html.getStyleProperty(node,"display")=="none"){
dojo.html.setStyle(node,"display",(node.dojoDisplayCache||""));
node.dojoDisplayCache=undefined;
}
};
dojo.html.hide=function(node){
node=dojo.byId(node);
if(typeof node["dojoDisplayCache"]=="undefined"){
var d=dojo.html.getStyleProperty(node,"display");
if(d!="none"){
node.dojoDisplayCache=d;
}
}
dojo.html.setStyle(node,"display","none");
};
dojo.html.setShowing=function(node,_4ee){
dojo.html[(_4ee?"show":"hide")](node);
};
dojo.html.isShowing=function(node){
return (dojo.html.getStyleProperty(node,"display")!="none");
};
dojo.html.toggleShowing=function(node){
return dojo.html._toggle(node,dojo.html.isShowing,dojo.html.setShowing);
};
dojo.html.displayMap={tr:"",td:"",th:"",img:"inline",span:"inline",input:"inline",button:"inline"};
dojo.html.suggestDisplayByTagName=function(node){
node=dojo.byId(node);
if(node&&node.tagName){
var tag=node.tagName.toLowerCase();
return (tag in dojo.html.displayMap?dojo.html.displayMap[tag]:"block");
}
};
dojo.html.setDisplay=function(node,_4f4){
dojo.html.setStyle(node,"display",((_4f4 instanceof String||typeof _4f4=="string")?_4f4:(_4f4?dojo.html.suggestDisplayByTagName(node):"none")));
};
dojo.html.isDisplayed=function(node){
return (dojo.html.getComputedStyle(node,"display")!="none");
};
dojo.html.toggleDisplay=function(node){
return dojo.html._toggle(node,dojo.html.isDisplayed,dojo.html.setDisplay);
};
dojo.html.setVisibility=function(node,_4f8){
dojo.html.setStyle(node,"visibility",((_4f8 instanceof String||typeof _4f8=="string")?_4f8:(_4f8?"visible":"hidden")));
};
dojo.html.isVisible=function(node){
return (dojo.html.getComputedStyle(node,"visibility")!="hidden");
};
dojo.html.toggleVisibility=function(node){
return dojo.html._toggle(node,dojo.html.isVisible,dojo.html.setVisibility);
};
dojo.html.setOpacity=function(node,_4fc,_4fd){
node=dojo.byId(node);
var h=dojo.render.html;
if(!_4fd){
if(_4fc>=1){
if(h.ie){
dojo.html.clearOpacity(node);
return;
}else{
_4fc=0.999999;
}
}else{
if(_4fc<0){
_4fc=0;
}
}
}
if(h.ie){
if(node.nodeName.toLowerCase()=="tr"){
var tds=node.getElementsByTagName("td");
for(var x=0;x<tds.length;x++){
tds[x].style.filter="Alpha(Opacity="+_4fc*100+")";
}
}
node.style.filter="Alpha(Opacity="+_4fc*100+")";
}else{
if(h.moz){
node.style.opacity=_4fc;
node.style.MozOpacity=_4fc;
}else{
if(h.safari){
node.style.opacity=_4fc;
node.style.KhtmlOpacity=_4fc;
}else{
node.style.opacity=_4fc;
}
}
}
};
dojo.html.clearOpacity=function(node){
node=dojo.byId(node);
var ns=node.style;
var h=dojo.render.html;
if(h.ie){
try{
if(node.filters&&node.filters.alpha){
ns.filter="";
}
}
catch(e){
}
}else{
if(h.moz){
ns.opacity=1;
ns.MozOpacity=1;
}else{
if(h.safari){
ns.opacity=1;
ns.KhtmlOpacity=1;
}else{
ns.opacity=1;
}
}
}
};
dojo.html.getOpacity=function(node){
node=dojo.byId(node);
var h=dojo.render.html;
if(h.ie){
var opac=(node.filters&&node.filters.alpha&&typeof node.filters.alpha.opacity=="number"?node.filters.alpha.opacity:100)/100;
}else{
var opac=node.style.opacity||node.style.MozOpacity||node.style.KhtmlOpacity||1;
}
return opac>=0.999999?1:Number(opac);
};
dojo.provide("dojo.html.layout");
dojo.html.sumAncestorProperties=function(node,prop){
node=dojo.byId(node);
if(!node){
return 0;
}
var _509=0;
while(node){
if(dojo.html.getComputedStyle(node,"position")=="fixed"){
return 0;
}
var val=node[prop];
if(val){
_509+=val-0;
if(node==dojo.body()){
break;
}
}
node=node.parentNode;
}
return _509;
};
dojo.html.setStyleAttributes=function(node,_50c){
node=dojo.byId(node);
var _50d=_50c.replace(/(;)?\s*$/,"").split(";");
for(var i=0;i<_50d.length;i++){
var _50f=_50d[i].split(":");
var name=_50f[0].replace(/\s*$/,"").replace(/^\s*/,"").toLowerCase();
var _511=_50f[1].replace(/\s*$/,"").replace(/^\s*/,"");
switch(name){
case "opacity":
dojo.html.setOpacity(node,_511);
break;
case "content-height":
dojo.html.setContentBox(node,{height:_511});
break;
case "content-width":
dojo.html.setContentBox(node,{width:_511});
break;
case "outer-height":
dojo.html.setMarginBox(node,{height:_511});
break;
case "outer-width":
dojo.html.setMarginBox(node,{width:_511});
break;
default:
node.style[dojo.html.toCamelCase(name)]=_511;
}
}
};
dojo.html.boxSizing={MARGIN_BOX:"margin-box",BORDER_BOX:"border-box",PADDING_BOX:"padding-box",CONTENT_BOX:"content-box"};
dojo.html.getAbsolutePosition=dojo.html.abs=function(node,_513,_514){
node=dojo.byId(node,node.ownerDocument);
var ret={x:0,y:0};
var bs=dojo.html.boxSizing;
if(!_514){
_514=bs.CONTENT_BOX;
}
var _517=2;
var _518;
switch(_514){
case bs.MARGIN_BOX:
_518=3;
break;
case bs.BORDER_BOX:
_518=2;
break;
case bs.PADDING_BOX:
default:
_518=1;
break;
case bs.CONTENT_BOX:
_518=0;
break;
}
var h=dojo.render.html;
var db=document["body"]||document["documentElement"];
if(h.ie){
with(node.getBoundingClientRect()){
ret.x=left-2;
ret.y=top-2;
}
}else{
if(document.getBoxObjectFor){
_517=1;
try{
var bo=document.getBoxObjectFor(node);
ret.x=bo.x-dojo.html.sumAncestorProperties(node,"scrollLeft");
ret.y=bo.y-dojo.html.sumAncestorProperties(node,"scrollTop");
}
catch(e){
}
}else{
if(node["offsetParent"]){
var _51c;
if((h.safari)&&(node.style.getPropertyValue("position")=="absolute")&&(node.parentNode==db)){
_51c=db;
}else{
_51c=db.parentNode;
}
if(node.parentNode!=db){
var nd=node;
if(dojo.render.html.opera){
nd=db;
}
ret.x-=dojo.html.sumAncestorProperties(nd,"scrollLeft");
ret.y-=dojo.html.sumAncestorProperties(nd,"scrollTop");
}
var _51e=node;
do{
var n=_51e["offsetLeft"];
if(!h.opera||n>0){
ret.x+=isNaN(n)?0:n;
}
var m=_51e["offsetTop"];
ret.y+=isNaN(m)?0:m;
_51e=_51e.offsetParent;
}while((_51e!=_51c)&&(_51e!=null));
}else{
if(node["x"]&&node["y"]){
ret.x+=isNaN(node.x)?0:node.x;
ret.y+=isNaN(node.y)?0:node.y;
}
}
}
}
if(_513){
var _521=dojo.html.getScroll();
ret.y+=_521.top;
ret.x+=_521.left;
}
var _522=[dojo.html.getPaddingExtent,dojo.html.getBorderExtent,dojo.html.getMarginExtent];
if(_517>_518){
for(var i=_518;i<_517;++i){
ret.y+=_522[i](node,"top");
ret.x+=_522[i](node,"left");
}
}else{
if(_517<_518){
for(var i=_518;i>_517;--i){
ret.y-=_522[i-1](node,"top");
ret.x-=_522[i-1](node,"left");
}
}
}
ret.top=ret.y;
ret.left=ret.x;
return ret;
};
dojo.html.isPositionAbsolute=function(node){
return (dojo.html.getComputedStyle(node,"position")=="absolute");
};
dojo.html._sumPixelValues=function(node,_526,_527){
var _528=0;
for(var x=0;x<_526.length;x++){
_528+=dojo.html.getPixelValue(node,_526[x],_527);
}
return _528;
};
dojo.html.getMargin=function(node){
return {width:dojo.html._sumPixelValues(node,["margin-left","margin-right"],(dojo.html.getComputedStyle(node,"position")=="absolute")),height:dojo.html._sumPixelValues(node,["margin-top","margin-bottom"],(dojo.html.getComputedStyle(node,"position")=="absolute"))};
};
dojo.html.getBorder=function(node){
return {width:dojo.html.getBorderExtent(node,"left")+dojo.html.getBorderExtent(node,"right"),height:dojo.html.getBorderExtent(node,"top")+dojo.html.getBorderExtent(node,"bottom")};
};
dojo.html.getBorderExtent=function(node,side){
return (dojo.html.getStyle(node,"border-"+side+"-style")=="none"?0:dojo.html.getPixelValue(node,"border-"+side+"-width"));
};
dojo.html.getMarginExtent=function(node,side){
return dojo.html._sumPixelValues(node,["margin-"+side],dojo.html.isPositionAbsolute(node));
};
dojo.html.getPaddingExtent=function(node,side){
return dojo.html._sumPixelValues(node,["padding-"+side],true);
};
dojo.html.getPadding=function(node){
return {width:dojo.html._sumPixelValues(node,["padding-left","padding-right"],true),height:dojo.html._sumPixelValues(node,["padding-top","padding-bottom"],true)};
};
dojo.html.getPadBorder=function(node){
var pad=dojo.html.getPadding(node);
var _535=dojo.html.getBorder(node);
return {width:pad.width+_535.width,height:pad.height+_535.height};
};
dojo.html.getBoxSizing=function(node){
var h=dojo.render.html;
var bs=dojo.html.boxSizing;
if(((h.ie)||(h.opera))&&node.nodeName!="IMG"){
var cm=document["compatMode"];
if((cm=="BackCompat")||(cm=="QuirksMode")){
return bs.BORDER_BOX;
}else{
return bs.CONTENT_BOX;
}
}else{
if(arguments.length==0){
node=document.documentElement;
}
var _53a=dojo.html.getStyle(node,"-moz-box-sizing");
if(!_53a){
_53a=dojo.html.getStyle(node,"box-sizing");
}
return (_53a?_53a:bs.CONTENT_BOX);
}
};
dojo.html.isBorderBox=function(node){
return (dojo.html.getBoxSizing(node)==dojo.html.boxSizing.BORDER_BOX);
};
dojo.html.getBorderBox=function(node){
node=dojo.byId(node);
return {width:node.offsetWidth,height:node.offsetHeight};
};
dojo.html.getPaddingBox=function(node){
var box=dojo.html.getBorderBox(node);
var _53f=dojo.html.getBorder(node);
return {width:box.width-_53f.width,height:box.height-_53f.height};
};
dojo.html.getContentBox=function(node){
node=dojo.byId(node);
var _541=dojo.html.getPadBorder(node);
return {width:node.offsetWidth-_541.width,height:node.offsetHeight-_541.height};
};
dojo.html.setContentBox=function(node,args){
node=dojo.byId(node);
var _544=0;
var _545=0;
var isbb=dojo.html.isBorderBox(node);
var _547=(isbb?dojo.html.getPadBorder(node):{width:0,height:0});
var ret={};
if(typeof args.width!="undefined"){
_544=args.width+_547.width;
ret.width=dojo.html.setPositivePixelValue(node,"width",_544);
}
if(typeof args.height!="undefined"){
_545=args.height+_547.height;
ret.height=dojo.html.setPositivePixelValue(node,"height",_545);
}
return ret;
};
dojo.html.getMarginBox=function(node){
var _54a=dojo.html.getBorderBox(node);
var _54b=dojo.html.getMargin(node);
return {width:_54a.width+_54b.width,height:_54a.height+_54b.height};
};
dojo.html.setMarginBox=function(node,args){
node=dojo.byId(node);
var _54e=0;
var _54f=0;
var isbb=dojo.html.isBorderBox(node);
var _551=(!isbb?dojo.html.getPadBorder(node):{width:0,height:0});
var _552=dojo.html.getMargin(node);
var ret={};
if(typeof args.width!="undefined"){
_54e=args.width-_551.width;
_54e-=_552.width;
ret.width=dojo.html.setPositivePixelValue(node,"width",_54e);
}
if(typeof args.height!="undefined"){
_54f=args.height-_551.height;
_54f-=_552.height;
ret.height=dojo.html.setPositivePixelValue(node,"height",_54f);
}
return ret;
};
dojo.html.getElementBox=function(node,type){
var bs=dojo.html.boxSizing;
switch(type){
case bs.MARGIN_BOX:
return dojo.html.getMarginBox(node);
case bs.BORDER_BOX:
return dojo.html.getBorderBox(node);
case bs.PADDING_BOX:
return dojo.html.getPaddingBox(node);
case bs.CONTENT_BOX:
default:
return dojo.html.getContentBox(node);
}
};
dojo.html.toCoordinateObject=dojo.html.toCoordinateArray=function(_557,_558,_559){
if(_557 instanceof Array||typeof _557=="array"){
dojo.deprecated("dojo.html.toCoordinateArray","use dojo.html.toCoordinateObject({left: , top: , width: , height: }) instead","0.5");
while(_557.length<4){
_557.push(0);
}
while(_557.length>4){
_557.pop();
}
var ret={left:_557[0],top:_557[1],width:_557[2],height:_557[3]};
}else{
if(!_557.nodeType&&!(_557 instanceof String||typeof _557=="string")&&("width" in _557||"height" in _557||"left" in _557||"x" in _557||"top" in _557||"y" in _557)){
var ret={left:_557.left||_557.x||0,top:_557.top||_557.y||0,width:_557.width||0,height:_557.height||0};
}else{
var node=dojo.byId(_557);
var pos=dojo.html.abs(node,_558,_559);
var _55d=dojo.html.getMarginBox(node);
var ret={left:pos.left,top:pos.top,width:_55d.width,height:_55d.height};
}
}
ret.x=ret.left;
ret.y=ret.top;
return ret;
};
dojo.html.setMarginBoxWidth=dojo.html.setOuterWidth=function(node,_55f){
return dojo.html._callDeprecated("setMarginBoxWidth","setMarginBox",arguments,"width");
};
dojo.html.setMarginBoxHeight=dojo.html.setOuterHeight=function(){
return dojo.html._callDeprecated("setMarginBoxHeight","setMarginBox",arguments,"height");
};
dojo.html.getMarginBoxWidth=dojo.html.getOuterWidth=function(){
return dojo.html._callDeprecated("getMarginBoxWidth","getMarginBox",arguments,null,"width");
};
dojo.html.getMarginBoxHeight=dojo.html.getOuterHeight=function(){
return dojo.html._callDeprecated("getMarginBoxHeight","getMarginBox",arguments,null,"height");
};
dojo.html.getTotalOffset=function(node,type,_562){
return dojo.html._callDeprecated("getTotalOffset","getAbsolutePosition",arguments,null,type);
};
dojo.html.getAbsoluteX=function(node,_564){
return dojo.html._callDeprecated("getAbsoluteX","getAbsolutePosition",arguments,null,"x");
};
dojo.html.getAbsoluteY=function(node,_566){
return dojo.html._callDeprecated("getAbsoluteY","getAbsolutePosition",arguments,null,"y");
};
dojo.html.totalOffsetLeft=function(node,_568){
return dojo.html._callDeprecated("totalOffsetLeft","getAbsolutePosition",arguments,null,"left");
};
dojo.html.totalOffsetTop=function(node,_56a){
return dojo.html._callDeprecated("totalOffsetTop","getAbsolutePosition",arguments,null,"top");
};
dojo.html.getMarginWidth=function(node){
return dojo.html._callDeprecated("getMarginWidth","getMargin",arguments,null,"width");
};
dojo.html.getMarginHeight=function(node){
return dojo.html._callDeprecated("getMarginHeight","getMargin",arguments,null,"height");
};
dojo.html.getBorderWidth=function(node){
return dojo.html._callDeprecated("getBorderWidth","getBorder",arguments,null,"width");
};
dojo.html.getBorderHeight=function(node){
return dojo.html._callDeprecated("getBorderHeight","getBorder",arguments,null,"height");
};
dojo.html.getPaddingWidth=function(node){
return dojo.html._callDeprecated("getPaddingWidth","getPadding",arguments,null,"width");
};
dojo.html.getPaddingHeight=function(node){
return dojo.html._callDeprecated("getPaddingHeight","getPadding",arguments,null,"height");
};
dojo.html.getPadBorderWidth=function(node){
return dojo.html._callDeprecated("getPadBorderWidth","getPadBorder",arguments,null,"width");
};
dojo.html.getPadBorderHeight=function(node){
return dojo.html._callDeprecated("getPadBorderHeight","getPadBorder",arguments,null,"height");
};
dojo.html.getBorderBoxWidth=dojo.html.getInnerWidth=function(){
return dojo.html._callDeprecated("getBorderBoxWidth","getBorderBox",arguments,null,"width");
};
dojo.html.getBorderBoxHeight=dojo.html.getInnerHeight=function(){
return dojo.html._callDeprecated("getBorderBoxHeight","getBorderBox",arguments,null,"height");
};
dojo.html.getContentBoxWidth=dojo.html.getContentWidth=function(){
return dojo.html._callDeprecated("getContentBoxWidth","getContentBox",arguments,null,"width");
};
dojo.html.getContentBoxHeight=dojo.html.getContentHeight=function(){
return dojo.html._callDeprecated("getContentBoxHeight","getContentBox",arguments,null,"height");
};
dojo.html.setContentBoxWidth=dojo.html.setContentWidth=function(node,_574){
return dojo.html._callDeprecated("setContentBoxWidth","setContentBox",arguments,"width");
};
dojo.html.setContentBoxHeight=dojo.html.setContentHeight=function(node,_576){
return dojo.html._callDeprecated("setContentBoxHeight","setContentBox",arguments,"height");
};
dojo.provide("dojo.html.util");
dojo.html.getElementWindow=function(_577){
return dojo.html.getDocumentWindow(_577.ownerDocument);
};
dojo.html.getDocumentWindow=function(doc){
if(dojo.render.html.safari&&!doc._parentWindow){
var fix=function(win){
win.document._parentWindow=win;
for(var i=0;i<win.frames.length;i++){
fix(win.frames[i]);
}
};
fix(window.top);
}
if(dojo.render.html.ie&&window!==document.parentWindow&&!doc._parentWindow){
doc.parentWindow.execScript("document._parentWindow = window;","Javascript");
var win=doc._parentWindow;
doc._parentWindow=null;
return win;
}
return doc._parentWindow||doc.parentWindow||doc.defaultView;
};
dojo.html.gravity=function(node,e){
node=dojo.byId(node);
var _57f=dojo.html.getCursorPosition(e);
with(dojo.html){
var _580=getAbsolutePosition(node,true);
var bb=getBorderBox(node);
var _582=_580.x+(bb.width/2);
var _583=_580.y+(bb.height/2);
}
with(dojo.html.gravity){
return ((_57f.x<_582?WEST:EAST)|(_57f.y<_583?NORTH:SOUTH));
}
};
dojo.html.gravity.NORTH=1;
dojo.html.gravity.SOUTH=1<<1;
dojo.html.gravity.EAST=1<<2;
dojo.html.gravity.WEST=1<<3;
dojo.html.overElement=function(_584,e){
_584=dojo.byId(_584);
var _586=dojo.html.getCursorPosition(e);
var bb=dojo.html.getBorderBox(_584);
var _588=dojo.html.getAbsolutePosition(_584,true,dojo.html.boxSizing.BORDER_BOX);
var top=_588.y;
var _58a=top+bb.height;
var left=_588.x;
var _58c=left+bb.width;
return (_586.x>=left&&_586.x<=_58c&&_586.y>=top&&_586.y<=_58a);
};
dojo.html.renderedTextContent=function(node){
node=dojo.byId(node);
var _58e="";
if(node==null){
return _58e;
}
for(var i=0;i<node.childNodes.length;i++){
switch(node.childNodes[i].nodeType){
case 1:
case 5:
var _590="unknown";
try{
_590=dojo.html.getStyle(node.childNodes[i],"display");
}
catch(E){
}
switch(_590){
case "block":
case "list-item":
case "run-in":
case "table":
case "table-row-group":
case "table-header-group":
case "table-footer-group":
case "table-row":
case "table-column-group":
case "table-column":
case "table-cell":
case "table-caption":
_58e+="\n";
_58e+=dojo.html.renderedTextContent(node.childNodes[i]);
_58e+="\n";
break;
case "none":
break;
default:
if(node.childNodes[i].tagName&&node.childNodes[i].tagName.toLowerCase()=="br"){
_58e+="\n";
}else{
_58e+=dojo.html.renderedTextContent(node.childNodes[i]);
}
break;
}
break;
case 3:
case 2:
case 4:
var text=node.childNodes[i].nodeValue;
var _592="unknown";
try{
_592=dojo.html.getStyle(node,"text-transform");
}
catch(E){
}
switch(_592){
case "capitalize":
var _593=text.split(" ");
for(var i=0;i<_593.length;i++){
_593[i]=_593[i].charAt(0).toUpperCase()+_593[i].substring(1);
}
text=_593.join(" ");
break;
case "uppercase":
text=text.toUpperCase();
break;
case "lowercase":
text=text.toLowerCase();
break;
default:
break;
}
switch(_592){
case "nowrap":
break;
case "pre-wrap":
break;
case "pre-line":
break;
case "pre":
break;
default:
text=text.replace(/\s+/," ");
if(/\s$/.test(_58e)){
text.replace(/^\s/,"");
}
break;
}
_58e+=text;
break;
default:
break;
}
}
return _58e;
};
dojo.html.createNodesFromText=function(txt,trim){
if(trim){
txt=txt.replace(/^\s+|\s+$/g,"");
}
var tn=dojo.doc().createElement("div");
tn.style.visibility="hidden";
dojo.body().appendChild(tn);
var _597="none";
if((/^<t[dh][\s\r\n>]/i).test(txt.replace(/^\s+/))){
txt="<table><tbody><tr>"+txt+"</tr></tbody></table>";
_597="cell";
}else{
if((/^<tr[\s\r\n>]/i).test(txt.replace(/^\s+/))){
txt="<table><tbody>"+txt+"</tbody></table>";
_597="row";
}else{
if((/^<(thead|tbody|tfoot)[\s\r\n>]/i).test(txt.replace(/^\s+/))){
txt="<table>"+txt+"</table>";
_597="section";
}
}
}
tn.innerHTML=txt;
if(tn["normalize"]){
tn.normalize();
}
var _598=null;
switch(_597){
case "cell":
_598=tn.getElementsByTagName("tr")[0];
break;
case "row":
_598=tn.getElementsByTagName("tbody")[0];
break;
case "section":
_598=tn.getElementsByTagName("table")[0];
break;
default:
_598=tn;
break;
}
var _599=[];
for(var x=0;x<_598.childNodes.length;x++){
_599.push(_598.childNodes[x].cloneNode(true));
}
tn.style.display="none";
dojo.html.destroyNode(tn);
return _599;
};
dojo.html.placeOnScreen=function(node,_59c,_59d,_59e,_59f,_5a0,_5a1){
if(_59c instanceof Array||typeof _59c=="array"){
_5a1=_5a0;
_5a0=_59f;
_59f=_59e;
_59e=_59d;
_59d=_59c[1];
_59c=_59c[0];
}
if(_5a0 instanceof String||typeof _5a0=="string"){
_5a0=_5a0.split(",");
}
if(!isNaN(_59e)){
_59e=[Number(_59e),Number(_59e)];
}else{
if(!(_59e instanceof Array||typeof _59e=="array")){
_59e=[0,0];
}
}
var _5a2=dojo.html.getScroll().offset;
var view=dojo.html.getViewport();
node=dojo.byId(node);
var _5a4=node.style.display;
node.style.display="";
var bb=dojo.html.getBorderBox(node);
var w=bb.width;
var h=bb.height;
node.style.display=_5a4;
if(!(_5a0 instanceof Array||typeof _5a0=="array")){
_5a0=["TL"];
}
var _5a8,_5a9,_5aa=Infinity,_5ab;
for(var _5ac=0;_5ac<_5a0.length;++_5ac){
var _5ad=_5a0[_5ac];
var _5ae=true;
var tryX=_59c-(_5ad.charAt(1)=="L"?0:w)+_59e[0]*(_5ad.charAt(1)=="L"?1:-1);
var tryY=_59d-(_5ad.charAt(0)=="T"?0:h)+_59e[1]*(_5ad.charAt(0)=="T"?1:-1);
if(_59f){
tryX-=_5a2.x;
tryY-=_5a2.y;
}
if(tryX<0){
tryX=0;
_5ae=false;
}
if(tryY<0){
tryY=0;
_5ae=false;
}
var x=tryX+w;
if(x>view.width){
x=view.width-w;
_5ae=false;
}else{
x=tryX;
}
x=Math.max(_59e[0],x)+_5a2.x;
var y=tryY+h;
if(y>view.height){
y=view.height-h;
_5ae=false;
}else{
y=tryY;
}
y=Math.max(_59e[1],y)+_5a2.y;
if(_5ae){
_5a8=x;
_5a9=y;
_5aa=0;
_5ab=_5ad;
break;
}else{
var dist=Math.pow(x-tryX-_5a2.x,2)+Math.pow(y-tryY-_5a2.y,2);
if(_5aa>dist){
_5aa=dist;
_5a8=x;
_5a9=y;
_5ab=_5ad;
}
}
}
if(!_5a1){
node.style.left=_5a8+"px";
node.style.top=_5a9+"px";
}
return {left:_5a8,top:_5a9,x:_5a8,y:_5a9,dist:_5aa,corner:_5ab};
};
dojo.html.placeOnScreenPoint=function(node,_5b5,_5b6,_5b7,_5b8){
dojo.deprecated("dojo.html.placeOnScreenPoint","use dojo.html.placeOnScreen() instead","0.5");
return dojo.html.placeOnScreen(node,_5b5,_5b6,_5b7,_5b8,["TL","TR","BL","BR"]);
};
dojo.html.placeOnScreenAroundElement=function(node,_5ba,_5bb,_5bc,_5bd,_5be){
var best,_5c0=Infinity;
_5ba=dojo.byId(_5ba);
var _5c1=_5ba.style.display;
_5ba.style.display="";
var mb=dojo.html.getElementBox(_5ba,_5bc);
var _5c3=mb.width;
var _5c4=mb.height;
var _5c5=dojo.html.getAbsolutePosition(_5ba,true,_5bc);
_5ba.style.display=_5c1;
for(var _5c6 in _5bd){
var pos,_5c8,_5c9;
var _5ca=_5bd[_5c6];
_5c8=_5c5.x+(_5c6.charAt(1)=="L"?0:_5c3);
_5c9=_5c5.y+(_5c6.charAt(0)=="T"?0:_5c4);
pos=dojo.html.placeOnScreen(node,_5c8,_5c9,_5bb,true,_5ca,true);
if(pos.dist==0){
best=pos;
break;
}else{
if(_5c0>pos.dist){
_5c0=pos.dist;
best=pos;
}
}
}
if(!_5be){
node.style.left=best.left+"px";
node.style.top=best.top+"px";
}
return best;
};
dojo.html.scrollIntoView=function(node){
if(!node){
return;
}
if(dojo.render.html.ie){
if(dojo.html.getBorderBox(node.parentNode).height<=node.parentNode.scrollHeight){
node.scrollIntoView(false);
}
}else{
if(dojo.render.html.mozilla){
node.scrollIntoView(false);
}else{
var _5cc=node.parentNode;
var _5cd=_5cc.scrollTop+dojo.html.getBorderBox(_5cc).height;
var _5ce=node.offsetTop+dojo.html.getMarginBox(node).height;
if(_5cd<_5ce){
_5cc.scrollTop+=(_5ce-_5cd);
}else{
if(_5cc.scrollTop>node.offsetTop){
_5cc.scrollTop-=(_5cc.scrollTop-node.offsetTop);
}
}
}
}
};
dojo.provide("dojo.gfx.color");
dojo.gfx.color.Color=function(r,g,b,a){
if(dojo.lang.isArray(r)){
this.r=r[0];
this.g=r[1];
this.b=r[2];
this.a=r[3]||1;
}else{
if(dojo.lang.isString(r)){
var rgb=dojo.gfx.color.extractRGB(r);
this.r=rgb[0];
this.g=rgb[1];
this.b=rgb[2];
this.a=g||1;
}else{
if(r instanceof dojo.gfx.color.Color){
this.r=r.r;
this.b=r.b;
this.g=r.g;
this.a=r.a;
}else{
this.r=r;
this.g=g;
this.b=b;
this.a=a;
}
}
}
};
dojo.gfx.color.Color.fromArray=function(arr){
return new dojo.gfx.color.Color(arr[0],arr[1],arr[2],arr[3]);
};
dojo.extend(dojo.gfx.color.Color,{toRgb:function(_5d5){
if(_5d5){
return this.toRgba();
}else{
return [this.r,this.g,this.b];
}
},toRgba:function(){
return [this.r,this.g,this.b,this.a];
},toHex:function(){
return dojo.gfx.color.rgb2hex(this.toRgb());
},toCss:function(){
return "rgb("+this.toRgb().join()+")";
},toString:function(){
return this.toHex();
},blend:function(_5d6,_5d7){
var rgb=null;
if(dojo.lang.isArray(_5d6)){
rgb=_5d6;
}else{
if(_5d6 instanceof dojo.gfx.color.Color){
rgb=_5d6.toRgb();
}else{
rgb=new dojo.gfx.color.Color(_5d6).toRgb();
}
}
return dojo.gfx.color.blend(this.toRgb(),rgb,_5d7);
}});
dojo.gfx.color.named={white:[255,255,255],black:[0,0,0],red:[255,0,0],green:[0,255,0],lime:[0,255,0],blue:[0,0,255],navy:[0,0,128],gray:[128,128,128],silver:[192,192,192]};
dojo.gfx.color.blend=function(a,b,_5db){
if(typeof a=="string"){
return dojo.gfx.color.blendHex(a,b,_5db);
}
if(!_5db){
_5db=0;
}
_5db=Math.min(Math.max(-1,_5db),1);
_5db=((_5db+1)/2);
var c=[];
for(var x=0;x<3;x++){
c[x]=parseInt(b[x]+((a[x]-b[x])*_5db));
}
return c;
};
dojo.gfx.color.blendHex=function(a,b,_5e0){
return dojo.gfx.color.rgb2hex(dojo.gfx.color.blend(dojo.gfx.color.hex2rgb(a),dojo.gfx.color.hex2rgb(b),_5e0));
};
dojo.gfx.color.extractRGB=function(_5e1){
var hex="0123456789abcdef";
_5e1=_5e1.toLowerCase();
if(_5e1.indexOf("rgb")==0){
var _5e3=_5e1.match(/rgba*\((\d+), *(\d+), *(\d+)/i);
var ret=_5e3.splice(1,3);
return ret;
}else{
var _5e5=dojo.gfx.color.hex2rgb(_5e1);
if(_5e5){
return _5e5;
}else{
return dojo.gfx.color.named[_5e1]||[255,255,255];
}
}
};
dojo.gfx.color.hex2rgb=function(hex){
var _5e7="0123456789ABCDEF";
var rgb=new Array(3);
if(hex.indexOf("#")==0){
hex=hex.substring(1);
}
hex=hex.toUpperCase();
if(hex.replace(new RegExp("["+_5e7+"]","g"),"")!=""){
return null;
}
if(hex.length==3){
rgb[0]=hex.charAt(0)+hex.charAt(0);
rgb[1]=hex.charAt(1)+hex.charAt(1);
rgb[2]=hex.charAt(2)+hex.charAt(2);
}else{
rgb[0]=hex.substring(0,2);
rgb[1]=hex.substring(2,4);
rgb[2]=hex.substring(4);
}
for(var i=0;i<rgb.length;i++){
rgb[i]=_5e7.indexOf(rgb[i].charAt(0))*16+_5e7.indexOf(rgb[i].charAt(1));
}
return rgb;
};
dojo.gfx.color.rgb2hex=function(r,g,b){
if(dojo.lang.isArray(r)){
g=r[1]||0;
b=r[2]||0;
r=r[0]||0;
}
var ret=dojo.lang.map([r,g,b],function(x){
x=new Number(x);
var s=x.toString(16);
while(s.length<2){
s="0"+s;
}
return s;
});
ret.unshift("#");
return ret.join("");
};
dojo.provide("dojo.lfx.Animation");
dojo.lfx.Line=function(_5f0,end){
this.start=_5f0;
this.end=end;
if(dojo.lang.isArray(_5f0)){
var diff=[];
dojo.lang.forEach(this.start,function(s,i){
diff[i]=this.end[i]-s;
},this);
this.getValue=function(n){
var res=[];
dojo.lang.forEach(this.start,function(s,i){
res[i]=(diff[i]*n)+s;
},this);
return res;
};
}else{
var diff=end-_5f0;
this.getValue=function(n){
return (diff*n)+this.start;
};
}
};
dojo.lfx.easeDefault=function(n){
if(dojo.render.html.khtml){
return (parseFloat("0.5")+((Math.sin((n+parseFloat("1.5"))*Math.PI))/2));
}else{
return (0.5+((Math.sin((n+1.5)*Math.PI))/2));
}
};
dojo.lfx.easeIn=function(n){
return Math.pow(n,3);
};
dojo.lfx.easeOut=function(n){
return (1-Math.pow(1-n,3));
};
dojo.lfx.easeInOut=function(n){
return ((3*Math.pow(n,2))-(2*Math.pow(n,3)));
};
dojo.lfx.IAnimation=function(){
};
dojo.lang.extend(dojo.lfx.IAnimation,{curve:null,duration:1000,easing:null,repeatCount:0,rate:25,handler:null,beforeBegin:null,onBegin:null,onAnimate:null,onEnd:null,onPlay:null,onPause:null,onStop:null,play:null,pause:null,stop:null,connect:function(evt,_5ff,_600){
if(!_600){
_600=_5ff;
_5ff=this;
}
_600=dojo.lang.hitch(_5ff,_600);
var _601=this[evt]||function(){
};
this[evt]=function(){
var ret=_601.apply(this,arguments);
_600.apply(this,arguments);
return ret;
};
return this;
},fire:function(evt,args){
if(this[evt]){
this[evt].apply(this,(args||[]));
}
return this;
},repeat:function(_605){
this.repeatCount=_605;
return this;
},_active:false,_paused:false});
dojo.lfx.Animation=function(_606,_607,_608,_609,_60a,rate){
dojo.lfx.IAnimation.call(this);
if(dojo.lang.isNumber(_606)||(!_606&&_607.getValue)){
rate=_60a;
_60a=_609;
_609=_608;
_608=_607;
_607=_606;
_606=null;
}else{
if(_606.getValue||dojo.lang.isArray(_606)){
rate=_609;
_60a=_608;
_609=_607;
_608=_606;
_607=null;
_606=null;
}
}
if(dojo.lang.isArray(_608)){
this.curve=new dojo.lfx.Line(_608[0],_608[1]);
}else{
this.curve=_608;
}
if(_607!=null&&_607>0){
this.duration=_607;
}
if(_60a){
this.repeatCount=_60a;
}
if(rate){
this.rate=rate;
}
if(_606){
dojo.lang.forEach(["handler","beforeBegin","onBegin","onEnd","onPlay","onStop","onAnimate"],function(item){
if(_606[item]){
this.connect(item,_606[item]);
}
},this);
}
if(_609&&dojo.lang.isFunction(_609)){
this.easing=_609;
}
};
dojo.inherits(dojo.lfx.Animation,dojo.lfx.IAnimation);
dojo.lang.extend(dojo.lfx.Animation,{_startTime:null,_endTime:null,_timer:null,_percent:0,_startRepeatCount:0,play:function(_60d,_60e){
if(_60e){
clearTimeout(this._timer);
this._active=false;
this._paused=false;
this._percent=0;
}else{
if(this._active&&!this._paused){
return this;
}
}
this.fire("handler",["beforeBegin"]);
this.fire("beforeBegin");
if(_60d>0){
setTimeout(dojo.lang.hitch(this,function(){
this.play(null,_60e);
}),_60d);
return this;
}
this._startTime=new Date().valueOf();
if(this._paused){
this._startTime-=(this.duration*this._percent/100);
}
this._endTime=this._startTime+this.duration;
this._active=true;
this._paused=false;
var step=this._percent/100;
var _610=this.curve.getValue(step);
if(this._percent==0){
if(!this._startRepeatCount){
this._startRepeatCount=this.repeatCount;
}
this.fire("handler",["begin",_610]);
this.fire("onBegin",[_610]);
}
this.fire("handler",["play",_610]);
this.fire("onPlay",[_610]);
this._cycle();
return this;
},pause:function(){
clearTimeout(this._timer);
if(!this._active){
return this;
}
this._paused=true;
var _611=this.curve.getValue(this._percent/100);
this.fire("handler",["pause",_611]);
this.fire("onPause",[_611]);
return this;
},gotoPercent:function(pct,_613){
clearTimeout(this._timer);
this._active=true;
this._paused=true;
this._percent=pct;
if(_613){
this.play();
}
return this;
},stop:function(_614){
clearTimeout(this._timer);
var step=this._percent/100;
if(_614){
step=1;
}
var _616=this.curve.getValue(step);
this.fire("handler",["stop",_616]);
this.fire("onStop",[_616]);
this._active=false;
this._paused=false;
return this;
},status:function(){
if(this._active){
return this._paused?"paused":"playing";
}else{
return "stopped";
}
return this;
},_cycle:function(){
clearTimeout(this._timer);
if(this._active){
var curr=new Date().valueOf();
var step=(curr-this._startTime)/(this._endTime-this._startTime);
if(step>=1){
step=1;
this._percent=100;
}else{
this._percent=step*100;
}
if((this.easing)&&(dojo.lang.isFunction(this.easing))){
step=this.easing(step);
}
var _619=this.curve.getValue(step);
this.fire("handler",["animate",_619]);
this.fire("onAnimate",[_619]);
if(step<1){
this._timer=setTimeout(dojo.lang.hitch(this,"_cycle"),this.rate);
}else{
this._active=false;
this.fire("handler",["end"]);
this.fire("onEnd");
if(this.repeatCount>0){
this.repeatCount--;
this.play(null,true);
}else{
if(this.repeatCount==-1){
this.play(null,true);
}else{
if(this._startRepeatCount){
this.repeatCount=this._startRepeatCount;
this._startRepeatCount=0;
}
}
}
}
}
return this;
}});
dojo.lfx.Combine=function(_61a){
dojo.lfx.IAnimation.call(this);
this._anims=[];
this._animsEnded=0;
var _61b=arguments;
if(_61b.length==1&&(dojo.lang.isArray(_61b[0])||dojo.lang.isArrayLike(_61b[0]))){
_61b=_61b[0];
}
dojo.lang.forEach(_61b,function(anim){
this._anims.push(anim);
anim.connect("onEnd",dojo.lang.hitch(this,"_onAnimsEnded"));
},this);
};
dojo.inherits(dojo.lfx.Combine,dojo.lfx.IAnimation);
dojo.lang.extend(dojo.lfx.Combine,{_animsEnded:0,play:function(_61d,_61e){
if(!this._anims.length){
return this;
}
this.fire("beforeBegin");
if(_61d>0){
setTimeout(dojo.lang.hitch(this,function(){
this.play(null,_61e);
}),_61d);
return this;
}
if(_61e||this._anims[0].percent==0){
this.fire("onBegin");
}
this.fire("onPlay");
this._animsCall("play",null,_61e);
return this;
},pause:function(){
this.fire("onPause");
this._animsCall("pause");
return this;
},stop:function(_61f){
this.fire("onStop");
this._animsCall("stop",_61f);
return this;
},_onAnimsEnded:function(){
this._animsEnded++;
if(this._animsEnded>=this._anims.length){
this.fire("onEnd");
}
return this;
},_animsCall:function(_620){
var args=[];
if(arguments.length>1){
for(var i=1;i<arguments.length;i++){
args.push(arguments[i]);
}
}
var _623=this;
dojo.lang.forEach(this._anims,function(anim){
anim[_620](args);
},_623);
return this;
}});
dojo.lfx.Chain=function(_625){
dojo.lfx.IAnimation.call(this);
this._anims=[];
this._currAnim=-1;
var _626=arguments;
if(_626.length==1&&(dojo.lang.isArray(_626[0])||dojo.lang.isArrayLike(_626[0]))){
_626=_626[0];
}
var _627=this;
dojo.lang.forEach(_626,function(anim,i,_62a){
this._anims.push(anim);
if(i<_62a.length-1){
anim.connect("onEnd",dojo.lang.hitch(this,"_playNext"));
}else{
anim.connect("onEnd",dojo.lang.hitch(this,function(){
this.fire("onEnd");
}));
}
},this);
};
dojo.inherits(dojo.lfx.Chain,dojo.lfx.IAnimation);
dojo.lang.extend(dojo.lfx.Chain,{_currAnim:-1,play:function(_62b,_62c){
if(!this._anims.length){
return this;
}
if(_62c||!this._anims[this._currAnim]){
this._currAnim=0;
}
var _62d=this._anims[this._currAnim];
this.fire("beforeBegin");
if(_62b>0){
setTimeout(dojo.lang.hitch(this,function(){
this.play(null,_62c);
}),_62b);
return this;
}
if(_62d){
if(this._currAnim==0){
this.fire("handler",["begin",this._currAnim]);
this.fire("onBegin",[this._currAnim]);
}
this.fire("onPlay",[this._currAnim]);
_62d.play(null,_62c);
}
return this;
},pause:function(){
if(this._anims[this._currAnim]){
this._anims[this._currAnim].pause();
this.fire("onPause",[this._currAnim]);
}
return this;
},playPause:function(){
if(this._anims.length==0){
return this;
}
if(this._currAnim==-1){
this._currAnim=0;
}
var _62e=this._anims[this._currAnim];
if(_62e){
if(!_62e._active||_62e._paused){
this.play();
}else{
this.pause();
}
}
return this;
},stop:function(){
var _62f=this._anims[this._currAnim];
if(_62f){
_62f.stop();
this.fire("onStop",[this._currAnim]);
}
return _62f;
},_playNext:function(){
if(this._currAnim==-1||this._anims.length==0){
return this;
}
this._currAnim++;
if(this._anims[this._currAnim]){
this._anims[this._currAnim].play(null,true);
}
return this;
}});
dojo.lfx.combine=function(_630){
var _631=arguments;
if(dojo.lang.isArray(arguments[0])){
_631=arguments[0];
}
if(_631.length==1){
return _631[0];
}
return new dojo.lfx.Combine(_631);
};
dojo.lfx.chain=function(_632){
var _633=arguments;
if(dojo.lang.isArray(arguments[0])){
_633=arguments[0];
}
if(_633.length==1){
return _633[0];
}
return new dojo.lfx.Chain(_633);
};
dojo.provide("dojo.html.color");
dojo.html.getBackgroundColor=function(node){
node=dojo.byId(node);
var _635;
do{
_635=dojo.html.getStyle(node,"background-color");
if(_635.toLowerCase()=="rgba(0, 0, 0, 0)"){
_635="transparent";
}
if(node==document.getElementsByTagName("body")[0]){
node=null;
break;
}
node=node.parentNode;
}while(node&&dojo.lang.inArray(["transparent",""],_635));
if(_635=="transparent"){
_635=[255,255,255,0];
}else{
_635=dojo.gfx.color.extractRGB(_635);
}
return _635;
};
dojo.provide("dojo.lfx.html");
dojo.lfx.html._byId=function(_636){
if(!_636){
return [];
}
if(dojo.lang.isArrayLike(_636)){
if(!_636.alreadyChecked){
var n=[];
dojo.lang.forEach(_636,function(node){
n.push(dojo.byId(node));
});
n.alreadyChecked=true;
return n;
}else{
return _636;
}
}else{
var n=[];
n.push(dojo.byId(_636));
n.alreadyChecked=true;
return n;
}
};
dojo.lfx.html.propertyAnimation=function(_639,_63a,_63b,_63c,_63d){
_639=dojo.lfx.html._byId(_639);
var _63e={"propertyMap":_63a,"nodes":_639,"duration":_63b,"easing":_63c||dojo.lfx.easeDefault};
var _63f=function(args){
if(args.nodes.length==1){
var pm=args.propertyMap;
if(!dojo.lang.isArray(args.propertyMap)){
var parr=[];
for(var _643 in pm){
pm[_643].property=_643;
parr.push(pm[_643]);
}
pm=args.propertyMap=parr;
}
dojo.lang.forEach(pm,function(prop){
if(dj_undef("start",prop)){
if(prop.property!="opacity"){
prop.start=parseInt(dojo.html.getComputedStyle(args.nodes[0],prop.property));
}else{
prop.start=dojo.html.getOpacity(args.nodes[0]);
}
}
});
}
};
var _645=function(_646){
var _647=[];
dojo.lang.forEach(_646,function(c){
_647.push(Math.round(c));
});
return _647;
};
var _649=function(n,_64b){
n=dojo.byId(n);
if(!n||!n.style){
return;
}
for(var s in _64b){
try{
if(s=="opacity"){
dojo.html.setOpacity(n,_64b[s]);
}else{
n.style[s]=_64b[s];
}
}
catch(e){
dojo.debug(e);
}
}
};
var _64d=function(_64e){
this._properties=_64e;
this.diffs=new Array(_64e.length);
dojo.lang.forEach(_64e,function(prop,i){
if(dojo.lang.isFunction(prop.start)){
prop.start=prop.start(prop,i);
}
if(dojo.lang.isFunction(prop.end)){
prop.end=prop.end(prop,i);
}
if(dojo.lang.isArray(prop.start)){
this.diffs[i]=null;
}else{
if(prop.start instanceof dojo.gfx.color.Color){
prop.startRgb=prop.start.toRgb();
prop.endRgb=prop.end.toRgb();
}else{
this.diffs[i]=prop.end-prop.start;
}
}
},this);
this.getValue=function(n){
var ret={};
dojo.lang.forEach(this._properties,function(prop,i){
var _655=null;
if(dojo.lang.isArray(prop.start)){
}else{
if(prop.start instanceof dojo.gfx.color.Color){
_655=(prop.units||"rgb")+"(";
for(var j=0;j<prop.startRgb.length;j++){
_655+=Math.round(((prop.endRgb[j]-prop.startRgb[j])*n)+prop.startRgb[j])+(j<prop.startRgb.length-1?",":"");
}
_655+=")";
}else{
_655=((this.diffs[i])*n)+prop.start+(prop.property!="opacity"?prop.units||"px":"");
}
}
ret[dojo.html.toCamelCase(prop.property)]=_655;
},this);
return ret;
};
};
var anim=new dojo.lfx.Animation({beforeBegin:function(){
_63f(_63e);
anim.curve=new _64d(_63e.propertyMap);
},onAnimate:function(_658){
dojo.lang.forEach(_63e.nodes,function(node){
_649(node,_658);
});
}},_63e.duration,null,_63e.easing);
if(_63d){
for(var x in _63d){
if(dojo.lang.isFunction(_63d[x])){
anim.connect(x,anim,_63d[x]);
}
}
}
return anim;
};
dojo.lfx.html._makeFadeable=function(_65b){
var _65c=function(node){
if(dojo.render.html.ie){
if((node.style.zoom.length==0)&&(dojo.html.getStyle(node,"zoom")=="normal")){
node.style.zoom="1";
}
if((node.style.width.length==0)&&(dojo.html.getStyle(node,"width")=="auto")){
node.style.width="auto";
}
}
};
if(dojo.lang.isArrayLike(_65b)){
dojo.lang.forEach(_65b,_65c);
}else{
_65c(_65b);
}
};
dojo.lfx.html.fade=function(_65e,_65f,_660,_661,_662){
_65e=dojo.lfx.html._byId(_65e);
var _663={property:"opacity"};
if(!dj_undef("start",_65f)){
_663.start=_65f.start;
}else{
_663.start=function(){
return dojo.html.getOpacity(_65e[0]);
};
}
if(!dj_undef("end",_65f)){
_663.end=_65f.end;
}else{
dojo.raise("dojo.lfx.html.fade needs an end value");
}
var anim=dojo.lfx.propertyAnimation(_65e,[_663],_660,_661);
anim.connect("beforeBegin",function(){
dojo.lfx.html._makeFadeable(_65e);
});
if(_662){
anim.connect("onEnd",function(){
_662(_65e,anim);
});
}
return anim;
};
dojo.lfx.html.fadeIn=function(_665,_666,_667,_668){
return dojo.lfx.html.fade(_665,{end:1},_666,_667,_668);
};
dojo.lfx.html.fadeOut=function(_669,_66a,_66b,_66c){
return dojo.lfx.html.fade(_669,{end:0},_66a,_66b,_66c);
};
dojo.lfx.html.fadeShow=function(_66d,_66e,_66f,_670){
_66d=dojo.lfx.html._byId(_66d);
dojo.lang.forEach(_66d,function(node){
dojo.html.setOpacity(node,0);
});
var anim=dojo.lfx.html.fadeIn(_66d,_66e,_66f,_670);
anim.connect("beforeBegin",function(){
if(dojo.lang.isArrayLike(_66d)){
dojo.lang.forEach(_66d,dojo.html.show);
}else{
dojo.html.show(_66d);
}
});
return anim;
};
dojo.lfx.html.fadeHide=function(_673,_674,_675,_676){
var anim=dojo.lfx.html.fadeOut(_673,_674,_675,function(){
if(dojo.lang.isArrayLike(_673)){
dojo.lang.forEach(_673,dojo.html.hide);
}else{
dojo.html.hide(_673);
}
if(_676){
_676(_673,anim);
}
});
return anim;
};
dojo.lfx.html.wipeIn=function(_678,_679,_67a,_67b){
_678=dojo.lfx.html._byId(_678);
var _67c=[];
dojo.lang.forEach(_678,function(node){
var _67e={};
var _67f,_680,_681;
with(node.style){
_67f=top;
_680=left;
_681=position;
top="-9999px";
left="-9999px";
position="absolute";
display="";
}
var _682=dojo.html.getBorderBox(node).height;
with(node.style){
top=_67f;
left=_680;
position=_681;
display="none";
}
var anim=dojo.lfx.propertyAnimation(node,{"height":{start:1,end:function(){
return _682;
}}},_679,_67a);
anim.connect("beforeBegin",function(){
_67e.overflow=node.style.overflow;
_67e.height=node.style.height;
with(node.style){
overflow="hidden";
_682="1px";
}
dojo.html.show(node);
});
anim.connect("onEnd",function(){
with(node.style){
overflow=_67e.overflow;
_682=_67e.height;
}
if(_67b){
_67b(node,anim);
}
});
_67c.push(anim);
});
return dojo.lfx.combine(_67c);
};
dojo.lfx.html.wipeOut=function(_684,_685,_686,_687){
_684=dojo.lfx.html._byId(_684);
var _688=[];
dojo.lang.forEach(_684,function(node){
var _68a={};
var anim=dojo.lfx.propertyAnimation(node,{"height":{start:function(){
return dojo.html.getContentBox(node).height;
},end:1}},_685,_686,{"beforeBegin":function(){
_68a.overflow=node.style.overflow;
_68a.height=node.style.height;
with(node.style){
overflow="hidden";
}
dojo.html.show(node);
},"onEnd":function(){
dojo.html.hide(node);
with(node.style){
overflow=_68a.overflow;
height=_68a.height;
}
if(_687){
_687(node,anim);
}
}});
_688.push(anim);
});
return dojo.lfx.combine(_688);
};
dojo.lfx.html.slideTo=function(_68c,_68d,_68e,_68f,_690){
_68c=dojo.lfx.html._byId(_68c);
var _691=[];
var _692=dojo.html.getComputedStyle;
if(dojo.lang.isArray(_68d)){
dojo.deprecated("dojo.lfx.html.slideTo(node, array)","use dojo.lfx.html.slideTo(node, {top: value, left: value});","0.5");
_68d={top:_68d[0],left:_68d[1]};
}
dojo.lang.forEach(_68c,function(node){
var top=null;
var left=null;
var init=(function(){
var _697=node;
return function(){
var pos=_692(_697,"position");
top=(pos=="absolute"?node.offsetTop:parseInt(_692(node,"top"))||0);
left=(pos=="absolute"?node.offsetLeft:parseInt(_692(node,"left"))||0);
if(!dojo.lang.inArray(["absolute","relative"],pos)){
var ret=dojo.html.abs(_697,true);
dojo.html.setStyleAttributes(_697,"position:absolute;top:"+ret.y+"px;left:"+ret.x+"px;");
top=ret.y;
left=ret.x;
}
};
})();
init();
var anim=dojo.lfx.propertyAnimation(node,{"top":{start:top,end:(_68d.top||0)},"left":{start:left,end:(_68d.left||0)}},_68e,_68f,{"beforeBegin":init});
if(_690){
anim.connect("onEnd",function(){
_690(_68c,anim);
});
}
_691.push(anim);
});
return dojo.lfx.combine(_691);
};
dojo.lfx.html.slideBy=function(_69b,_69c,_69d,_69e,_69f){
_69b=dojo.lfx.html._byId(_69b);
var _6a0=[];
var _6a1=dojo.html.getComputedStyle;
if(dojo.lang.isArray(_69c)){
dojo.deprecated("dojo.lfx.html.slideBy(node, array)","use dojo.lfx.html.slideBy(node, {top: value, left: value});","0.5");
_69c={top:_69c[0],left:_69c[1]};
}
dojo.lang.forEach(_69b,function(node){
var top=null;
var left=null;
var init=(function(){
var _6a6=node;
return function(){
var pos=_6a1(_6a6,"position");
top=(pos=="absolute"?node.offsetTop:parseInt(_6a1(node,"top"))||0);
left=(pos=="absolute"?node.offsetLeft:parseInt(_6a1(node,"left"))||0);
if(!dojo.lang.inArray(["absolute","relative"],pos)){
var ret=dojo.html.abs(_6a6,true);
dojo.html.setStyleAttributes(_6a6,"position:absolute;top:"+ret.y+"px;left:"+ret.x+"px;");
top=ret.y;
left=ret.x;
}
};
})();
init();
var anim=dojo.lfx.propertyAnimation(node,{"top":{start:top,end:top+(_69c.top||0)},"left":{start:left,end:left+(_69c.left||0)}},_69d,_69e).connect("beforeBegin",init);
if(_69f){
anim.connect("onEnd",function(){
_69f(_69b,anim);
});
}
_6a0.push(anim);
});
return dojo.lfx.combine(_6a0);
};
dojo.lfx.html.explode=function(_6aa,_6ab,_6ac,_6ad,_6ae){
var h=dojo.html;
_6aa=dojo.byId(_6aa);
_6ab=dojo.byId(_6ab);
var _6b0=h.toCoordinateObject(_6aa,true);
var _6b1=document.createElement("div");
h.copyStyle(_6b1,_6ab);
if(_6ab.explodeClassName){
_6b1.className=_6ab.explodeClassName;
}
with(_6b1.style){
position="absolute";
display="none";
var _6b2=h.getStyle(_6aa,"background-color");
backgroundColor=_6b2?_6b2.toLowerCase():"transparent";
backgroundColor=(backgroundColor=="transparent")?"rgb(221, 221, 221)":backgroundColor;
}
dojo.body().appendChild(_6b1);
with(_6ab.style){
visibility="hidden";
display="block";
}
var _6b3=h.toCoordinateObject(_6ab,true);
with(_6ab.style){
display="none";
visibility="visible";
}
var _6b4={opacity:{start:0.5,end:1}};
dojo.lang.forEach(["height","width","top","left"],function(type){
_6b4[type]={start:_6b0[type],end:_6b3[type]};
});
var anim=new dojo.lfx.propertyAnimation(_6b1,_6b4,_6ac,_6ad,{"beforeBegin":function(){
h.setDisplay(_6b1,"block");
},"onEnd":function(){
h.setDisplay(_6ab,"block");
_6b1.parentNode.removeChild(_6b1);
}});
if(_6ae){
anim.connect("onEnd",function(){
_6ae(_6ab,anim);
});
}
return anim;
};
dojo.lfx.html.implode=function(_6b7,end,_6b9,_6ba,_6bb){
var h=dojo.html;
_6b7=dojo.byId(_6b7);
end=dojo.byId(end);
var _6bd=dojo.html.toCoordinateObject(_6b7,true);
var _6be=dojo.html.toCoordinateObject(end,true);
var _6bf=document.createElement("div");
dojo.html.copyStyle(_6bf,_6b7);
if(_6b7.explodeClassName){
_6bf.className=_6b7.explodeClassName;
}
dojo.html.setOpacity(_6bf,0.3);
with(_6bf.style){
position="absolute";
display="none";
backgroundColor=h.getStyle(_6b7,"background-color").toLowerCase();
}
dojo.body().appendChild(_6bf);
var _6c0={opacity:{start:1,end:0.5}};
dojo.lang.forEach(["height","width","top","left"],function(type){
_6c0[type]={start:_6bd[type],end:_6be[type]};
});
var anim=new dojo.lfx.propertyAnimation(_6bf,_6c0,_6b9,_6ba,{"beforeBegin":function(){
dojo.html.hide(_6b7);
dojo.html.show(_6bf);
},"onEnd":function(){
_6bf.parentNode.removeChild(_6bf);
}});
if(_6bb){
anim.connect("onEnd",function(){
_6bb(_6b7,anim);
});
}
return anim;
};
dojo.lfx.html.highlight=function(_6c3,_6c4,_6c5,_6c6,_6c7){
_6c3=dojo.lfx.html._byId(_6c3);
var _6c8=[];
dojo.lang.forEach(_6c3,function(node){
var _6ca=dojo.html.getBackgroundColor(node);
var bg=dojo.html.getStyle(node,"background-color").toLowerCase();
var _6cc=dojo.html.getStyle(node,"background-image");
var _6cd=(bg=="transparent"||bg=="rgba(0, 0, 0, 0)");
while(_6ca.length>3){
_6ca.pop();
}
var rgb=new dojo.gfx.color.Color(_6c4);
var _6cf=new dojo.gfx.color.Color(_6ca);
var anim=dojo.lfx.propertyAnimation(node,{"background-color":{start:rgb,end:_6cf}},_6c5,_6c6,{"beforeBegin":function(){
if(_6cc){
node.style.backgroundImage="none";
}
node.style.backgroundColor="rgb("+rgb.toRgb().join(",")+")";
},"onEnd":function(){
if(_6cc){
node.style.backgroundImage=_6cc;
}
if(_6cd){
node.style.backgroundColor="transparent";
}
if(_6c7){
_6c7(node,anim);
}
}});
_6c8.push(anim);
});
return dojo.lfx.combine(_6c8);
};
dojo.lfx.html.unhighlight=function(_6d1,_6d2,_6d3,_6d4,_6d5){
_6d1=dojo.lfx.html._byId(_6d1);
var _6d6=[];
dojo.lang.forEach(_6d1,function(node){
var _6d8=new dojo.gfx.color.Color(dojo.html.getBackgroundColor(node));
var rgb=new dojo.gfx.color.Color(_6d2);
var _6da=dojo.html.getStyle(node,"background-image");
var anim=dojo.lfx.propertyAnimation(node,{"background-color":{start:_6d8,end:rgb}},_6d3,_6d4,{"beforeBegin":function(){
if(_6da){
node.style.backgroundImage="none";
}
node.style.backgroundColor="rgb("+_6d8.toRgb().join(",")+")";
},"onEnd":function(){
if(_6d5){
_6d5(node,anim);
}
}});
_6d6.push(anim);
});
return dojo.lfx.combine(_6d6);
};
dojo.lang.mixin(dojo.lfx,dojo.lfx.html);
dojo.provide("dojo.lfx.*");
dojo.provide("dojo.lfx.toggle");
dojo.lfx.toggle.plain={show:function(node,_6dd,_6de,_6df){
dojo.html.show(node);
if(dojo.lang.isFunction(_6df)){
_6df();
}
},hide:function(node,_6e1,_6e2,_6e3){
dojo.html.hide(node);
if(dojo.lang.isFunction(_6e3)){
_6e3();
}
}};
dojo.lfx.toggle.fade={show:function(node,_6e5,_6e6,_6e7){
dojo.lfx.fadeShow(node,_6e5,_6e6,_6e7).play();
},hide:function(node,_6e9,_6ea,_6eb){
dojo.lfx.fadeHide(node,_6e9,_6ea,_6eb).play();
}};
dojo.lfx.toggle.wipe={show:function(node,_6ed,_6ee,_6ef){
dojo.lfx.wipeIn(node,_6ed,_6ee,_6ef).play();
},hide:function(node,_6f1,_6f2,_6f3){
dojo.lfx.wipeOut(node,_6f1,_6f2,_6f3).play();
}};
dojo.lfx.toggle.explode={show:function(node,_6f5,_6f6,_6f7,_6f8){
dojo.lfx.explode(_6f8||{x:0,y:0,width:0,height:0},node,_6f5,_6f6,_6f7).play();
},hide:function(node,_6fa,_6fb,_6fc,_6fd){
dojo.lfx.implode(node,_6fd||{x:0,y:0,width:0,height:0},_6fa,_6fb,_6fc).play();
}};
dojo.provide("dojo.widget.HtmlWidget");
dojo.declare("dojo.widget.HtmlWidget",dojo.widget.DomWidget,{templateCssPath:null,templatePath:null,lang:"",toggle:"plain",toggleDuration:150,initialize:function(args,frag){
},postMixInProperties:function(args,frag){
if(this.lang===""){
this.lang=null;
}
this.toggleObj=dojo.lfx.toggle[this.toggle.toLowerCase()]||dojo.lfx.toggle.plain;
},createNodesFromText:function(txt,wrap){
return dojo.html.createNodesFromText(txt,wrap);
},destroyRendering:function(_704){
try{
if(this.bgIframe){
this.bgIframe.remove();
delete this.bgIframe;
}
if(!_704&&this.domNode){
dojo.event.browser.clean(this.domNode);
}
dojo.widget.HtmlWidget.superclass.destroyRendering.call(this);
}
catch(e){
}
},isShowing:function(){
return dojo.html.isShowing(this.domNode);
},toggleShowing:function(){
if(this.isShowing()){
this.hide();
}else{
this.show();
}
},show:function(){
if(this.isShowing()){
return;
}
this.animationInProgress=true;
this.toggleObj.show(this.domNode,this.toggleDuration,null,dojo.lang.hitch(this,this.onShow),this.explodeSrc);
},onShow:function(){
this.animationInProgress=false;
this.checkSize();
},hide:function(){
if(!this.isShowing()){
return;
}
this.animationInProgress=true;
this.toggleObj.hide(this.domNode,this.toggleDuration,null,dojo.lang.hitch(this,this.onHide),this.explodeSrc);
},onHide:function(){
this.animationInProgress=false;
},_isResized:function(w,h){
if(!this.isShowing()){
return false;
}
var wh=dojo.html.getMarginBox(this.domNode);
var _708=w||wh.width;
var _709=h||wh.height;
if(this.width==_708&&this.height==_709){
return false;
}
this.width=_708;
this.height=_709;
return true;
},checkSize:function(){
if(!this._isResized()){
return;
}
this.onResized();
},resizeTo:function(w,h){
dojo.html.setMarginBox(this.domNode,{width:w,height:h});
if(this.isShowing()){
this.onResized();
}
},resizeSoon:function(){
if(this.isShowing()){
dojo.lang.setTimeout(this,this.onResized,0);
}
},onResized:function(){
dojo.lang.forEach(this.children,function(_70c){
if(_70c.checkSize){
_70c.checkSize();
}
});
}});
dojo.provide("dojo.widget.*");
dojo.provide("dojo.string.common");
dojo.string.trim=function(str,wh){
if(!str.replace){
return str;
}
if(!str.length){
return str;
}
var re=(wh>0)?(/^\s+/):(wh<0)?(/\s+$/):(/^\s+|\s+$/g);
return str.replace(re,"");
};
dojo.string.trimStart=function(str){
return dojo.string.trim(str,1);
};
dojo.string.trimEnd=function(str){
return dojo.string.trim(str,-1);
};
dojo.string.repeat=function(str,_713,_714){
var out="";
for(var i=0;i<_713;i++){
out+=str;
if(_714&&i<_713-1){
out+=_714;
}
}
return out;
};
dojo.string.pad=function(str,len,c,dir){
var out=String(str);
if(!c){
c="0";
}
if(!dir){
dir=1;
}
while(out.length<len){
if(dir>0){
out=c+out;
}else{
out+=c;
}
}
return out;
};
dojo.string.padLeft=function(str,len,c){
return dojo.string.pad(str,len,c,1);
};
dojo.string.padRight=function(str,len,c){
return dojo.string.pad(str,len,c,-1);
};
dojo.provide("dojo.string");
dojo.provide("dojo.io.common");
dojo.io.transports=[];
dojo.io.hdlrFuncNames=["load","error","timeout"];
dojo.io.Request=function(url,_723,_724,_725){
if((arguments.length==1)&&(arguments[0].constructor==Object)){
this.fromKwArgs(arguments[0]);
}else{
this.url=url;
if(_723){
this.mimetype=_723;
}
if(_724){
this.transport=_724;
}
if(arguments.length>=4){
this.changeUrl=_725;
}
}
};
dojo.lang.extend(dojo.io.Request,{url:"",mimetype:"text/plain",method:"GET",content:undefined,transport:undefined,changeUrl:undefined,formNode:undefined,sync:false,bindSuccess:false,useCache:false,preventCache:false,load:function(type,data,_728,_729){
},error:function(type,_72b,_72c,_72d){
},timeout:function(type,_72f,_730,_731){
},handle:function(type,data,_734,_735){
},timeoutSeconds:0,abort:function(){
},fromKwArgs:function(_736){
if(_736["url"]){
_736.url=_736.url.toString();
}
if(_736["formNode"]){
_736.formNode=dojo.byId(_736.formNode);
}
if(!_736["method"]&&_736["formNode"]&&_736["formNode"].method){
_736.method=_736["formNode"].method;
}
if(!_736["handle"]&&_736["handler"]){
_736.handle=_736.handler;
}
if(!_736["load"]&&_736["loaded"]){
_736.load=_736.loaded;
}
if(!_736["changeUrl"]&&_736["changeURL"]){
_736.changeUrl=_736.changeURL;
}
_736.encoding=dojo.lang.firstValued(_736["encoding"],djConfig["bindEncoding"],"");
_736.sendTransport=dojo.lang.firstValued(_736["sendTransport"],djConfig["ioSendTransport"],false);
var _737=dojo.lang.isFunction;
for(var x=0;x<dojo.io.hdlrFuncNames.length;x++){
var fn=dojo.io.hdlrFuncNames[x];
if(_736[fn]&&_737(_736[fn])){
continue;
}
if(_736["handle"]&&_737(_736["handle"])){
_736[fn]=_736.handle;
}
}
dojo.lang.mixin(this,_736);
}});
dojo.io.Error=function(msg,type,num){
this.message=msg;
this.type=type||"unknown";
this.number=num||0;
};
dojo.io.transports.addTransport=function(name){
this.push(name);
this[name]=dojo.io[name];
};
dojo.io.bind=function(_73e){
if(!(_73e instanceof dojo.io.Request)){
try{
_73e=new dojo.io.Request(_73e);
}
catch(e){
dojo.debug(e);
}
}
var _73f="";
if(_73e["transport"]){
_73f=_73e["transport"];
if(!this[_73f]){
dojo.io.sendBindError(_73e,"No dojo.io.bind() transport with name '"+_73e["transport"]+"'.");
return _73e;
}
if(!this[_73f].canHandle(_73e)){
dojo.io.sendBindError(_73e,"dojo.io.bind() transport with name '"+_73e["transport"]+"' cannot handle this type of request.");
return _73e;
}
}else{
for(var x=0;x<dojo.io.transports.length;x++){
var tmp=dojo.io.transports[x];
if((this[tmp])&&(this[tmp].canHandle(_73e))){
_73f=tmp;
break;
}
}
if(_73f==""){
dojo.io.sendBindError(_73e,"None of the loaded transports for dojo.io.bind()"+" can handle the request.");
return _73e;
}
}
this[_73f].bind(_73e);
_73e.bindSuccess=true;
return _73e;
};
dojo.io.sendBindError=function(_742,_743){
if((typeof _742.error=="function"||typeof _742.handle=="function")&&(typeof setTimeout=="function"||typeof setTimeout=="object")){
var _744=new dojo.io.Error(_743);
setTimeout(function(){
_742[(typeof _742.error=="function")?"error":"handle"]("error",_744,null,_742);
},50);
}else{
dojo.raise(_743);
}
};
dojo.io.queueBind=function(_745){
if(!(_745 instanceof dojo.io.Request)){
try{
_745=new dojo.io.Request(_745);
}
catch(e){
dojo.debug(e);
}
}
var _746=_745.load;
_745.load=function(){
dojo.io._queueBindInFlight=false;
var ret=_746.apply(this,arguments);
dojo.io._dispatchNextQueueBind();
return ret;
};
var _748=_745.error;
_745.error=function(){
dojo.io._queueBindInFlight=false;
var ret=_748.apply(this,arguments);
dojo.io._dispatchNextQueueBind();
return ret;
};
dojo.io._bindQueue.push(_745);
dojo.io._dispatchNextQueueBind();
return _745;
};
dojo.io._dispatchNextQueueBind=function(){
if(!dojo.io._queueBindInFlight){
dojo.io._queueBindInFlight=true;
if(dojo.io._bindQueue.length>0){
dojo.io.bind(dojo.io._bindQueue.shift());
}else{
dojo.io._queueBindInFlight=false;
}
}
};
dojo.io._bindQueue=[];
dojo.io._queueBindInFlight=false;
dojo.io.argsFromMap=function(map,_74b,last){
var enc=/utf/i.test(_74b||"")?encodeURIComponent:dojo.string.encodeAscii;
var _74e=[];
var _74f=new Object();
for(var name in map){
var _751=function(elt){
var val=enc(name)+"="+enc(elt);
_74e[(last==name)?"push":"unshift"](val);
};
if(!_74f[name]){
var _754=map[name];
if(dojo.lang.isArray(_754)){
dojo.lang.forEach(_754,_751);
}else{
_751(_754);
}
}
}
return _74e.join("&");
};
dojo.io.setIFrameSrc=function(_755,src,_757){
try{
var r=dojo.render.html;
if(!_757){
if(r.safari){
_755.location=src;
}else{
frames[_755.name].location=src;
}
}else{
var idoc;
if(r.ie){
idoc=_755.contentWindow.document;
}else{
if(r.safari){
idoc=_755.document;
}else{
idoc=_755.contentWindow;
}
}
if(!idoc){
_755.location=src;
return;
}else{
idoc.location.replace(src);
}
}
}
catch(e){
dojo.debug(e);
dojo.debug("setIFrameSrc: "+e);
}
};
dojo.provide("dojo.string.extras");
dojo.string.substituteParams=function(_75a,hash){
var map=(typeof hash=="object")?hash:dojo.lang.toArray(arguments,1);
return _75a.replace(/\%\{(\w+)\}/g,function(_75d,key){
if(typeof (map[key])!="undefined"&&map[key]!=null){
return map[key];
}
dojo.raise("Substitution not found: "+key);
});
};
dojo.string.capitalize=function(str){
if(!dojo.lang.isString(str)){
return "";
}
if(arguments.length==0){
str=this;
}
var _760=str.split(" ");
for(var i=0;i<_760.length;i++){
_760[i]=_760[i].charAt(0).toUpperCase()+_760[i].substring(1);
}
return _760.join(" ");
};
dojo.string.isBlank=function(str){
if(!dojo.lang.isString(str)){
return true;
}
return (dojo.string.trim(str).length==0);
};
dojo.string.encodeAscii=function(str){
if(!dojo.lang.isString(str)){
return str;
}
var ret="";
var _765=escape(str);
var _766,re=/%u([0-9A-F]{4})/i;
while((_766=_765.match(re))){
var num=Number("0x"+_766[1]);
var _769=escape("&#"+num+";");
ret+=_765.substring(0,_766.index)+_769;
_765=_765.substring(_766.index+_766[0].length);
}
ret+=_765.replace(/\+/g,"%2B");
return ret;
};
dojo.string.escape=function(type,str){
var args=dojo.lang.toArray(arguments,1);
switch(type.toLowerCase()){
case "xml":
case "html":
case "xhtml":
return dojo.string.escapeXml.apply(this,args);
case "sql":
return dojo.string.escapeSql.apply(this,args);
case "regexp":
case "regex":
return dojo.string.escapeRegExp.apply(this,args);
case "javascript":
case "jscript":
case "js":
return dojo.string.escapeJavaScript.apply(this,args);
case "ascii":
return dojo.string.encodeAscii.apply(this,args);
default:
return str;
}
};
dojo.string.escapeXml=function(str,_76e){
str=str.replace(/&/gm,"&amp;").replace(/</gm,"&lt;").replace(/>/gm,"&gt;").replace(/"/gm,"&quot;");
if(!_76e){
str=str.replace(/'/gm,"&#39;");
}
return str;
};
dojo.string.escapeSql=function(str){
return str.replace(/'/gm,"''");
};
dojo.string.escapeRegExp=function(str){
return str.replace(/\\/gm,"\\\\").replace(/([\f\b\n\t\r[\^$|?*+(){}])/gm,"\\$1");
};
dojo.string.escapeJavaScript=function(str){
return str.replace(/(["'\f\b\n\t\r])/gm,"\\$1");
};
dojo.string.escapeString=function(str){
return ("\""+str.replace(/(["\\])/g,"\\$1")+"\"").replace(/[\f]/g,"\\f").replace(/[\b]/g,"\\b").replace(/[\n]/g,"\\n").replace(/[\t]/g,"\\t").replace(/[\r]/g,"\\r");
};
dojo.string.summary=function(str,len){
if(!len||str.length<=len){
return str;
}
return str.substring(0,len).replace(/\.+$/,"")+"...";
};
dojo.string.endsWith=function(str,end,_777){
if(_777){
str=str.toLowerCase();
end=end.toLowerCase();
}
if((str.length-end.length)<0){
return false;
}
return str.lastIndexOf(end)==str.length-end.length;
};
dojo.string.endsWithAny=function(str){
for(var i=1;i<arguments.length;i++){
if(dojo.string.endsWith(str,arguments[i])){
return true;
}
}
return false;
};
dojo.string.startsWith=function(str,_77b,_77c){
if(_77c){
str=str.toLowerCase();
_77b=_77b.toLowerCase();
}
return str.indexOf(_77b)==0;
};
dojo.string.startsWithAny=function(str){
for(var i=1;i<arguments.length;i++){
if(dojo.string.startsWith(str,arguments[i])){
return true;
}
}
return false;
};
dojo.string.has=function(str){
for(var i=1;i<arguments.length;i++){
if(str.indexOf(arguments[i])>-1){
return true;
}
}
return false;
};
dojo.string.normalizeNewlines=function(text,_782){
if(_782=="\n"){
text=text.replace(/\r\n/g,"\n");
text=text.replace(/\r/g,"\n");
}else{
if(_782=="\r"){
text=text.replace(/\r\n/g,"\r");
text=text.replace(/\n/g,"\r");
}else{
text=text.replace(/([^\r])\n/g,"$1\r\n").replace(/\r([^\n])/g,"\r\n$1");
}
}
return text;
};
dojo.string.splitEscaped=function(str,_784){
var _785=[];
for(var i=0,_787=0;i<str.length;i++){
if(str.charAt(i)=="\\"){
i++;
continue;
}
if(str.charAt(i)==_784){
_785.push(str.substring(_787,i));
_787=i+1;
}
}
_785.push(str.substr(_787));
return _785;
};
dojo.provide("dojo.undo.browser");
try{
if((!djConfig["preventBackButtonFix"])&&(!dojo.hostenv.post_load_)){
document.write("<iframe style='border: 0px; width: 1px; height: 1px; position: absolute; bottom: 0px; right: 0px; visibility: visible;' name='djhistory' id='djhistory' src='"+(dojo.hostenv.getBaseScriptUri()+"iframe_history.html")+"'></iframe>");
}
}
catch(e){
}
if(dojo.render.html.opera){
dojo.debug("Opera is not supported with dojo.undo.browser, so back/forward detection will not work.");
}
dojo.undo.browser={initialHref:(!dj_undef("window"))?window.location.href:"",initialHash:(!dj_undef("window"))?window.location.hash:"",moveForward:false,historyStack:[],forwardStack:[],historyIframe:null,bookmarkAnchor:null,locationTimer:null,setInitialState:function(args){
this.initialState=this._createState(this.initialHref,args,this.initialHash);
},addToHistory:function(args){
this.forwardStack=[];
var hash=null;
var url=null;
if(!this.historyIframe){
this.historyIframe=window.frames["djhistory"];
}
if(!this.bookmarkAnchor){
this.bookmarkAnchor=document.createElement("a");
dojo.body().appendChild(this.bookmarkAnchor);
this.bookmarkAnchor.style.display="none";
}
if(args["changeUrl"]){
hash="#"+((args["changeUrl"]!==true)?args["changeUrl"]:(new Date()).getTime());
if(this.historyStack.length==0&&this.initialState.urlHash==hash){
this.initialState=this._createState(url,args,hash);
return;
}else{
if(this.historyStack.length>0&&this.historyStack[this.historyStack.length-1].urlHash==hash){
this.historyStack[this.historyStack.length-1]=this._createState(url,args,hash);
return;
}
}
this.changingUrl=true;
setTimeout("window.location.href = '"+hash+"'; dojo.undo.browser.changingUrl = false;",1);
this.bookmarkAnchor.href=hash;
if(dojo.render.html.ie){
url=this._loadIframeHistory();
var _78c=args["back"]||args["backButton"]||args["handle"];
var tcb=function(_78e){
if(window.location.hash!=""){
setTimeout("window.location.href = '"+hash+"';",1);
}
_78c.apply(this,[_78e]);
};
if(args["back"]){
args.back=tcb;
}else{
if(args["backButton"]){
args.backButton=tcb;
}else{
if(args["handle"]){
args.handle=tcb;
}
}
}
var _78f=args["forward"]||args["forwardButton"]||args["handle"];
var tfw=function(_791){
if(window.location.hash!=""){
window.location.href=hash;
}
if(_78f){
_78f.apply(this,[_791]);
}
};
if(args["forward"]){
args.forward=tfw;
}else{
if(args["forwardButton"]){
args.forwardButton=tfw;
}else{
if(args["handle"]){
args.handle=tfw;
}
}
}
}else{
if(dojo.render.html.moz){
if(!this.locationTimer){
this.locationTimer=setInterval("dojo.undo.browser.checkLocation();",200);
}
}
}
}else{
url=this._loadIframeHistory();
}
this.historyStack.push(this._createState(url,args,hash));
},checkLocation:function(){
if(!this.changingUrl){
var hsl=this.historyStack.length;
if((window.location.hash==this.initialHash||window.location.href==this.initialHref)&&(hsl==1)){
this.handleBackButton();
return;
}
if(this.forwardStack.length>0){
if(this.forwardStack[this.forwardStack.length-1].urlHash==window.location.hash){
this.handleForwardButton();
return;
}
}
if((hsl>=2)&&(this.historyStack[hsl-2])){
if(this.historyStack[hsl-2].urlHash==window.location.hash){
this.handleBackButton();
return;
}
}
}
},iframeLoaded:function(evt,_794){
if(!dojo.render.html.opera){
var _795=this._getUrlQuery(_794.href);
if(_795==null){
if(this.historyStack.length==1){
this.handleBackButton();
}
return;
}
if(this.moveForward){
this.moveForward=false;
return;
}
if(this.historyStack.length>=2&&_795==this._getUrlQuery(this.historyStack[this.historyStack.length-2].url)){
this.handleBackButton();
}else{
if(this.forwardStack.length>0&&_795==this._getUrlQuery(this.forwardStack[this.forwardStack.length-1].url)){
this.handleForwardButton();
}
}
}
},handleBackButton:function(){
var _796=this.historyStack.pop();
if(!_796){
return;
}
var last=this.historyStack[this.historyStack.length-1];
if(!last&&this.historyStack.length==0){
last=this.initialState;
}
if(last){
if(last.kwArgs["back"]){
last.kwArgs["back"]();
}else{
if(last.kwArgs["backButton"]){
last.kwArgs["backButton"]();
}else{
if(last.kwArgs["handle"]){
last.kwArgs.handle("back");
}
}
}
}
this.forwardStack.push(_796);
},handleForwardButton:function(){
var last=this.forwardStack.pop();
if(!last){
return;
}
if(last.kwArgs["forward"]){
last.kwArgs.forward();
}else{
if(last.kwArgs["forwardButton"]){
last.kwArgs.forwardButton();
}else{
if(last.kwArgs["handle"]){
last.kwArgs.handle("forward");
}
}
}
this.historyStack.push(last);
},_createState:function(url,args,hash){
return {"url":url,"kwArgs":args,"urlHash":hash};
},_getUrlQuery:function(url){
var _79d=url.split("?");
if(_79d.length<2){
return null;
}else{
return _79d[1];
}
},_loadIframeHistory:function(){
var url=dojo.hostenv.getBaseScriptUri()+"iframe_history.html?"+(new Date()).getTime();
this.moveForward=true;
dojo.io.setIFrameSrc(this.historyIframe,url,false);
return url;
}};
dojo.provide("dojo.io.BrowserIO");
if(!dj_undef("window")){
dojo.io.checkChildrenForFile=function(node){
var _7a0=false;
var _7a1=node.getElementsByTagName("input");
dojo.lang.forEach(_7a1,function(_7a2){
if(_7a0){
return;
}
if(_7a2.getAttribute("type")=="file"){
_7a0=true;
}
});
return _7a0;
};
dojo.io.formHasFile=function(_7a3){
return dojo.io.checkChildrenForFile(_7a3);
};
dojo.io.updateNode=function(node,_7a5){
node=dojo.byId(node);
var args=_7a5;
if(dojo.lang.isString(_7a5)){
args={url:_7a5};
}
args.mimetype="text/html";
args.load=function(t,d,e){
while(node.firstChild){
dojo.dom.destroyNode(node.firstChild);
}
node.innerHTML=d;
};
dojo.io.bind(args);
};
dojo.io.formFilter=function(node){
var type=(node.type||"").toLowerCase();
return !node.disabled&&node.name&&!dojo.lang.inArray(["file","submit","image","reset","button"],type);
};
dojo.io.encodeForm=function(_7ac,_7ad,_7ae){
if((!_7ac)||(!_7ac.tagName)||(!_7ac.tagName.toLowerCase()=="form")){
dojo.raise("Attempted to encode a non-form element.");
}
if(!_7ae){
_7ae=dojo.io.formFilter;
}
var enc=/utf/i.test(_7ad||"")?encodeURIComponent:dojo.string.encodeAscii;
var _7b0=[];
for(var i=0;i<_7ac.elements.length;i++){
var elm=_7ac.elements[i];
if(!elm||elm.tagName.toLowerCase()=="fieldset"||!_7ae(elm)){
continue;
}
var name=enc(elm.name);
var type=elm.type.toLowerCase();
if(type=="select-multiple"){
for(var j=0;j<elm.options.length;j++){
if(elm.options[j].selected){
_7b0.push(name+"="+enc(elm.options[j].value));
}
}
}else{
if(dojo.lang.inArray(["radio","checkbox"],type)){
if(elm.checked){
_7b0.push(name+"="+enc(elm.value));
}
}else{
_7b0.push(name+"="+enc(elm.value));
}
}
}
var _7b6=_7ac.getElementsByTagName("input");
for(var i=0;i<_7b6.length;i++){
var _7b7=_7b6[i];
if(_7b7.type.toLowerCase()=="image"&&_7b7.form==_7ac&&_7ae(_7b7)){
var name=enc(_7b7.name);
_7b0.push(name+"="+enc(_7b7.value));
_7b0.push(name+".x=0");
_7b0.push(name+".y=0");
}
}
return _7b0.join("&")+"&";
};
dojo.io.FormBind=function(args){
this.bindArgs={};
if(args&&args.formNode){
this.init(args);
}else{
if(args){
this.init({formNode:args});
}
}
};
dojo.lang.extend(dojo.io.FormBind,{form:null,bindArgs:null,clickedButton:null,init:function(args){
var form=dojo.byId(args.formNode);
if(!form||!form.tagName||form.tagName.toLowerCase()!="form"){
throw new Error("FormBind: Couldn't apply, invalid form");
}else{
if(this.form==form){
return;
}else{
if(this.form){
throw new Error("FormBind: Already applied to a form");
}
}
}
dojo.lang.mixin(this.bindArgs,args);
this.form=form;
this.connect(form,"onsubmit","submit");
for(var i=0;i<form.elements.length;i++){
var node=form.elements[i];
if(node&&node.type&&dojo.lang.inArray(["submit","button"],node.type.toLowerCase())){
this.connect(node,"onclick","click");
}
}
var _7bd=form.getElementsByTagName("input");
for(var i=0;i<_7bd.length;i++){
var _7be=_7bd[i];
if(_7be.type.toLowerCase()=="image"&&_7be.form==form){
this.connect(_7be,"onclick","click");
}
}
},onSubmit:function(form){
return true;
},submit:function(e){
e.preventDefault();
if(this.onSubmit(this.form)){
dojo.io.bind(dojo.lang.mixin(this.bindArgs,{formFilter:dojo.lang.hitch(this,"formFilter")}));
}
},click:function(e){
var node=e.currentTarget;
if(node.disabled){
return;
}
this.clickedButton=node;
},formFilter:function(node){
var type=(node.type||"").toLowerCase();
var _7c5=false;
if(node.disabled||!node.name){
_7c5=false;
}else{
if(dojo.lang.inArray(["submit","button","image"],type)){
if(!this.clickedButton){
this.clickedButton=node;
}
_7c5=node==this.clickedButton;
}else{
_7c5=!dojo.lang.inArray(["file","submit","reset","button"],type);
}
}
return _7c5;
},connect:function(_7c6,_7c7,_7c8){
if(dojo.evalObjPath("dojo.event.connect")){
dojo.event.connect(_7c6,_7c7,this,_7c8);
}else{
var fcn=dojo.lang.hitch(this,_7c8);
_7c6[_7c7]=function(e){
if(!e){
e=window.event;
}
if(!e.currentTarget){
e.currentTarget=e.srcElement;
}
if(!e.preventDefault){
e.preventDefault=function(){
window.event.returnValue=false;
};
}
fcn(e);
};
}
}});
dojo.io.XMLHTTPTransport=new function(){
var _7cb=this;
var _7cc={};
this.useCache=false;
this.preventCache=false;
function getCacheKey(url,_7ce,_7cf){
return url+"|"+_7ce+"|"+_7cf.toLowerCase();
}
function addToCache(url,_7d1,_7d2,http){
_7cc[getCacheKey(url,_7d1,_7d2)]=http;
}
function getFromCache(url,_7d5,_7d6){
return _7cc[getCacheKey(url,_7d5,_7d6)];
}
this.clearCache=function(){
_7cc={};
};
function doLoad(_7d7,http,url,_7da,_7db){
if(((http.status>=200)&&(http.status<300))||(http.status==304)||(location.protocol=="file:"&&(http.status==0||http.status==undefined))||(location.protocol=="chrome:"&&(http.status==0||http.status==undefined))){
var ret;
if(_7d7.method.toLowerCase()=="head"){
var _7dd=http.getAllResponseHeaders();
ret={};
ret.toString=function(){
return _7dd;
};
var _7de=_7dd.split(/[\r\n]+/g);
for(var i=0;i<_7de.length;i++){
var pair=_7de[i].match(/^([^:]+)\s*:\s*(.+)$/i);
if(pair){
ret[pair[1]]=pair[2];
}
}
}else{
if(_7d7.mimetype=="text/javascript"){
try{
ret=dj_eval(http.responseText);
}
catch(e){
dojo.debug(e);
dojo.debug(http.responseText);
ret=null;
}
}else{
if(_7d7.mimetype=="text/json"||_7d7.mimetype=="application/json"){
try{
ret=dj_eval("("+http.responseText+")");
}
catch(e){
dojo.debug(e);
dojo.debug(http.responseText);
ret=false;
}
}else{
if((_7d7.mimetype=="application/xml")||(_7d7.mimetype=="text/xml")){
ret=http.responseXML;
if(!ret||typeof ret=="string"||!http.getResponseHeader("Content-Type")){
ret=dojo.dom.createDocumentFromText(http.responseText);
}
}else{
ret=http.responseText;
}
}
}
}
if(_7db){
addToCache(url,_7da,_7d7.method,http);
}
_7d7[(typeof _7d7.load=="function")?"load":"handle"]("load",ret,http,_7d7);
}else{
var _7e1=new dojo.io.Error("XMLHttpTransport Error: "+http.status+" "+http.statusText);
_7d7[(typeof _7d7.error=="function")?"error":"handle"]("error",_7e1,http,_7d7);
}
}
function setHeaders(http,_7e3){
if(_7e3["headers"]){
for(var _7e4 in _7e3["headers"]){
if(_7e4.toLowerCase()=="content-type"&&!_7e3["contentType"]){
_7e3["contentType"]=_7e3["headers"][_7e4];
}else{
http.setRequestHeader(_7e4,_7e3["headers"][_7e4]);
}
}
}
}
this.inFlight=[];
this.inFlightTimer=null;
this.startWatchingInFlight=function(){
if(!this.inFlightTimer){
this.inFlightTimer=setTimeout("dojo.io.XMLHTTPTransport.watchInFlight();",10);
}
};
this.watchInFlight=function(){
var now=null;
if(!dojo.hostenv._blockAsync&&!_7cb._blockAsync){
for(var x=this.inFlight.length-1;x>=0;x--){
try{
var tif=this.inFlight[x];
if(!tif||tif.http._aborted||!tif.http.readyState){
this.inFlight.splice(x,1);
continue;
}
if(4==tif.http.readyState){
this.inFlight.splice(x,1);
doLoad(tif.req,tif.http,tif.url,tif.query,tif.useCache);
}else{
if(tif.startTime){
if(!now){
now=(new Date()).getTime();
}
if(tif.startTime+(tif.req.timeoutSeconds*1000)<now){
if(typeof tif.http.abort=="function"){
tif.http.abort();
}
this.inFlight.splice(x,1);
tif.req[(typeof tif.req.timeout=="function")?"timeout":"handle"]("timeout",null,tif.http,tif.req);
}
}
}
}
catch(e){
try{
var _7e8=new dojo.io.Error("XMLHttpTransport.watchInFlight Error: "+e);
tif.req[(typeof tif.req.error=="function")?"error":"handle"]("error",_7e8,tif.http,tif.req);
}
catch(e2){
dojo.debug("XMLHttpTransport error callback failed: "+e2);
}
}
}
}
clearTimeout(this.inFlightTimer);
if(this.inFlight.length==0){
this.inFlightTimer=null;
return;
}
this.inFlightTimer=setTimeout("dojo.io.XMLHTTPTransport.watchInFlight();",10);
};
var _7e9=dojo.hostenv.getXmlhttpObject()?true:false;
this.canHandle=function(_7ea){
return _7e9&&dojo.lang.inArray(["text/plain","text/html","application/xml","text/xml","text/javascript","text/json","application/json"],(_7ea["mimetype"].toLowerCase()||""))&&!(_7ea["formNode"]&&dojo.io.formHasFile(_7ea["formNode"]));
};
this.multipartBoundary="45309FFF-BD65-4d50-99C9-36986896A96F";
this.bind=function(_7eb){
if(!_7eb["url"]){
if(!_7eb["formNode"]&&(_7eb["backButton"]||_7eb["back"]||_7eb["changeUrl"]||_7eb["watchForURL"])&&(!djConfig.preventBackButtonFix)){
dojo.deprecated("Using dojo.io.XMLHTTPTransport.bind() to add to browser history without doing an IO request","Use dojo.undo.browser.addToHistory() instead.","0.4");
dojo.undo.browser.addToHistory(_7eb);
return true;
}
}
var url=_7eb.url;
var _7ed="";
if(_7eb["formNode"]){
var ta=_7eb.formNode.getAttribute("action");
if((ta)&&(!_7eb["url"])){
url=ta;
}
var tp=_7eb.formNode.getAttribute("method");
if((tp)&&(!_7eb["method"])){
_7eb.method=tp;
}
_7ed+=dojo.io.encodeForm(_7eb.formNode,_7eb.encoding,_7eb["formFilter"]);
}
if(url.indexOf("#")>-1){
dojo.debug("Warning: dojo.io.bind: stripping hash values from url:",url);
url=url.split("#")[0];
}
if(_7eb["file"]){
_7eb.method="post";
}
if(!_7eb["method"]){
_7eb.method="get";
}
if(_7eb.method.toLowerCase()=="get"){
_7eb.multipart=false;
}else{
if(_7eb["file"]){
_7eb.multipart=true;
}else{
if(!_7eb["multipart"]){
_7eb.multipart=false;
}
}
}
if(_7eb["backButton"]||_7eb["back"]||_7eb["changeUrl"]){
dojo.undo.browser.addToHistory(_7eb);
}
var _7f0=_7eb["content"]||{};
if(_7eb.sendTransport){
_7f0["dojo.transport"]="xmlhttp";
}
do{
if(_7eb.postContent){
_7ed=_7eb.postContent;
break;
}
if(_7f0){
_7ed+=dojo.io.argsFromMap(_7f0,_7eb.encoding);
}
if(_7eb.method.toLowerCase()=="get"||!_7eb.multipart){
break;
}
var t=[];
if(_7ed.length){
var q=_7ed.split("&");
for(var i=0;i<q.length;++i){
if(q[i].length){
var p=q[i].split("=");
t.push("--"+this.multipartBoundary,"Content-Disposition: form-data; name=\""+p[0]+"\"","",p[1]);
}
}
}
if(_7eb.file){
if(dojo.lang.isArray(_7eb.file)){
for(var i=0;i<_7eb.file.length;++i){
var o=_7eb.file[i];
t.push("--"+this.multipartBoundary,"Content-Disposition: form-data; name=\""+o.name+"\"; filename=\""+("fileName" in o?o.fileName:o.name)+"\"","Content-Type: "+("contentType" in o?o.contentType:"application/octet-stream"),"",o.content);
}
}else{
var o=_7eb.file;
t.push("--"+this.multipartBoundary,"Content-Disposition: form-data; name=\""+o.name+"\"; filename=\""+("fileName" in o?o.fileName:o.name)+"\"","Content-Type: "+("contentType" in o?o.contentType:"application/octet-stream"),"",o.content);
}
}
if(t.length){
t.push("--"+this.multipartBoundary+"--","");
_7ed=t.join("\r\n");
}
}while(false);
var _7f6=_7eb["sync"]?false:true;
var _7f7=_7eb["preventCache"]||(this.preventCache==true&&_7eb["preventCache"]!=false);
var _7f8=_7eb["useCache"]==true||(this.useCache==true&&_7eb["useCache"]!=false);
if(!_7f7&&_7f8){
var _7f9=getFromCache(url,_7ed,_7eb.method);
if(_7f9){
doLoad(_7eb,_7f9,url,_7ed,false);
return;
}
}
var http=dojo.hostenv.getXmlhttpObject(_7eb);
var _7fb=false;
if(_7f6){
var _7fc=this.inFlight.push({"req":_7eb,"http":http,"url":url,"query":_7ed,"useCache":_7f8,"startTime":_7eb.timeoutSeconds?(new Date()).getTime():0});
this.startWatchingInFlight();
}else{
_7cb._blockAsync=true;
}
if(_7eb.method.toLowerCase()=="post"){
if(!_7eb.user){
http.open("POST",url,_7f6);
}else{
http.open("POST",url,_7f6,_7eb.user,_7eb.password);
}
setHeaders(http,_7eb);
http.setRequestHeader("Content-Type",_7eb.multipart?("multipart/form-data; boundary="+this.multipartBoundary):(_7eb.contentType||"application/x-www-form-urlencoded"));
try{
http.send(_7ed);
}
catch(e){
if(typeof http.abort=="function"){
http.abort();
}
doLoad(_7eb,{status:404},url,_7ed,_7f8);
}
}else{
var _7fd=url;
if(_7ed!=""){
_7fd+=(_7fd.indexOf("?")>-1?"&":"?")+_7ed;
}
if(_7f7){
_7fd+=(dojo.string.endsWithAny(_7fd,"?","&")?"":(_7fd.indexOf("?")>-1?"&":"?"))+"dojo.preventCache="+new Date().valueOf();
}
if(!_7eb.user){
http.open(_7eb.method.toUpperCase(),_7fd,_7f6);
}else{
http.open(_7eb.method.toUpperCase(),_7fd,_7f6,_7eb.user,_7eb.password);
}
setHeaders(http,_7eb);
try{
http.send(null);
}
catch(e){
if(typeof http.abort=="function"){
http.abort();
}
doLoad(_7eb,{status:404},url,_7ed,_7f8);
}
}
if(!_7f6){
doLoad(_7eb,http,url,_7ed,_7f8);
_7cb._blockAsync=false;
}
_7eb.abort=function(){
try{
http._aborted=true;
}
catch(e){
}
return http.abort();
};
return;
};
dojo.io.transports.addTransport("XMLHTTPTransport");
};
}
dojo.provide("dojo.io.cookie");
dojo.io.cookie.setCookie=function(name,_7ff,days,path,_802,_803){
var _804=-1;
if((typeof days=="number")&&(days>=0)){
var d=new Date();
d.setTime(d.getTime()+(days*24*60*60*1000));
_804=d.toGMTString();
}
_7ff=escape(_7ff);
document.cookie=name+"="+_7ff+";"+(_804!=-1?" expires="+_804+";":"")+(path?"path="+path:"")+(_802?"; domain="+_802:"")+(_803?"; secure":"");
};
dojo.io.cookie.set=dojo.io.cookie.setCookie;
dojo.io.cookie.getCookie=function(name){
var idx=document.cookie.lastIndexOf(name+"=");
if(idx==-1){
return null;
}
var _808=document.cookie.substring(idx+name.length+1);
var end=_808.indexOf(";");
if(end==-1){
end=_808.length;
}
_808=_808.substring(0,end);
_808=unescape(_808);
return _808;
};
dojo.io.cookie.get=dojo.io.cookie.getCookie;
dojo.io.cookie.deleteCookie=function(name){
dojo.io.cookie.setCookie(name,"-",0);
};
dojo.io.cookie.setObjectCookie=function(name,obj,days,path,_80f,_810,_811){
if(arguments.length==5){
_811=_80f;
_80f=null;
_810=null;
}
var _812=[],_813,_814="";
if(!_811){
_813=dojo.io.cookie.getObjectCookie(name);
}
if(days>=0){
if(!_813){
_813={};
}
for(var prop in obj){
if(obj[prop]==null){
delete _813[prop];
}else{
if((typeof obj[prop]=="string")||(typeof obj[prop]=="number")){
_813[prop]=obj[prop];
}
}
}
prop=null;
for(var prop in _813){
_812.push(escape(prop)+"="+escape(_813[prop]));
}
_814=_812.join("&");
}
dojo.io.cookie.setCookie(name,_814,days,path,_80f,_810);
};
dojo.io.cookie.getObjectCookie=function(name){
var _817=null,_818=dojo.io.cookie.getCookie(name);
if(_818){
_817={};
var _819=_818.split("&");
for(var i=0;i<_819.length;i++){
var pair=_819[i].split("=");
var _81c=pair[1];
if(isNaN(_81c)){
_81c=unescape(pair[1]);
}
_817[unescape(pair[0])]=_81c;
}
}
return _817;
};
dojo.io.cookie.isSupported=function(){
if(typeof navigator.cookieEnabled!="boolean"){
dojo.io.cookie.setCookie("__TestingYourBrowserForCookieSupport__","CookiesAllowed",90,null);
var _81d=dojo.io.cookie.getCookie("__TestingYourBrowserForCookieSupport__");
navigator.cookieEnabled=(_81d=="CookiesAllowed");
if(navigator.cookieEnabled){
this.deleteCookie("__TestingYourBrowserForCookieSupport__");
}
}
return navigator.cookieEnabled;
};
if(!dojo.io.cookies){
dojo.io.cookies=dojo.io.cookie;
}
dojo.provide("dojo.io.*");
dojo.provide("dojo.widget.Toolbar");
dojo.widget.defineWidget("dojo.widget.ToolbarContainer",dojo.widget.HtmlWidget,{isContainer:true,templateString:"<div class=\"toolbarContainer\" dojoAttachPoint=\"containerNode\"></div>",templateCssPath:dojo.uri.dojoUri("src/widget/templates/Toolbar.css"),getItem:function(name){
if(name instanceof dojo.widget.ToolbarItem){
return name;
}
for(var i=0;i<this.children.length;i++){
var _820=this.children[i];
if(_820 instanceof dojo.widget.Toolbar){
var item=_820.getItem(name);
if(item){
return item;
}
}
}
return null;
},getItems:function(){
var _822=[];
for(var i=0;i<this.children.length;i++){
var _824=this.children[i];
if(_824 instanceof dojo.widget.Toolbar){
_822=_822.concat(_824.getItems());
}
}
return _822;
},enable:function(){
for(var i=0;i<this.children.length;i++){
var _826=this.children[i];
if(_826 instanceof dojo.widget.Toolbar){
_826.enable.apply(_826,arguments);
}
}
},disable:function(){
for(var i=0;i<this.children.length;i++){
var _828=this.children[i];
if(_828 instanceof dojo.widget.Toolbar){
_828.disable.apply(_828,arguments);
}
}
},select:function(name){
for(var i=0;i<this.children.length;i++){
var _82b=this.children[i];
if(_82b instanceof dojo.widget.Toolbar){
_82b.select(arguments);
}
}
},deselect:function(name){
for(var i=0;i<this.children.length;i++){
var _82e=this.children[i];
if(_82e instanceof dojo.widget.Toolbar){
_82e.deselect(arguments);
}
}
},getItemsState:function(){
var _82f={};
for(var i=0;i<this.children.length;i++){
var _831=this.children[i];
if(_831 instanceof dojo.widget.Toolbar){
dojo.lang.mixin(_82f,_831.getItemsState());
}
}
return _82f;
},getItemsActiveState:function(){
var _832={};
for(var i=0;i<this.children.length;i++){
var _834=this.children[i];
if(_834 instanceof dojo.widget.Toolbar){
dojo.lang.mixin(_832,_834.getItemsActiveState());
}
}
return _832;
},getItemsSelectedState:function(){
var _835={};
for(var i=0;i<this.children.length;i++){
var _837=this.children[i];
if(_837 instanceof dojo.widget.Toolbar){
dojo.lang.mixin(_835,_837.getItemsSelectedState());
}
}
return _835;
}});
dojo.widget.defineWidget("dojo.widget.Toolbar",dojo.widget.HtmlWidget,{isContainer:true,templateString:"<div class=\"toolbar\" dojoAttachPoint=\"containerNode\" unselectable=\"on\" dojoOnMouseover=\"_onmouseover\" dojoOnMouseout=\"_onmouseout\" dojoOnClick=\"_onclick\" dojoOnMousedown=\"_onmousedown\" dojoOnMouseup=\"_onmouseup\"></div>",_getItem:function(node){
var _839=new Date();
var _83a=null;
while(node&&node!=this.domNode){
if(dojo.html.hasClass(node,"toolbarItem")){
var _83b=dojo.widget.manager.getWidgetsByFilter(function(w){
return w.domNode==node;
});
if(_83b.length==1){
_83a=_83b[0];
break;
}else{
if(_83b.length>1){
dojo.raise("Toolbar._getItem: More than one widget matches the node");
}
}
}
node=node.parentNode;
}
return _83a;
},_onmouseover:function(e){
var _83e=this._getItem(e.target);
if(_83e&&_83e._onmouseover){
_83e._onmouseover(e);
}
},_onmouseout:function(e){
var _840=this._getItem(e.target);
if(_840&&_840._onmouseout){
_840._onmouseout(e);
}
},_onclick:function(e){
var _842=this._getItem(e.target);
if(_842&&_842._onclick){
_842._onclick(e);
}
},_onmousedown:function(e){
var _844=this._getItem(e.target);
if(_844&&_844._onmousedown){
_844._onmousedown(e);
}
},_onmouseup:function(e){
var _846=this._getItem(e.target);
if(_846&&_846._onmouseup){
_846._onmouseup(e);
}
},addChild:function(item,pos,_849){
var _84a=dojo.widget.ToolbarItem.make(item,null,_849);
var ret=dojo.widget.Toolbar.superclass.addChild.call(this,_84a,null,pos,null);
return ret;
},push:function(){
for(var i=0;i<arguments.length;i++){
this.addChild(arguments[i]);
}
},getItem:function(name){
if(name instanceof dojo.widget.ToolbarItem){
return name;
}
for(var i=0;i<this.children.length;i++){
var _84f=this.children[i];
if(_84f instanceof dojo.widget.ToolbarItem&&_84f._name==name){
return _84f;
}
}
return null;
},getItems:function(){
var _850=[];
for(var i=0;i<this.children.length;i++){
var _852=this.children[i];
if(_852 instanceof dojo.widget.ToolbarItem){
_850.push(_852);
}
}
return _850;
},getItemsState:function(){
var _853={};
for(var i=0;i<this.children.length;i++){
var _855=this.children[i];
if(_855 instanceof dojo.widget.ToolbarItem){
_853[_855._name]={selected:_855._selected,enabled:!_855.disabled};
}
}
return _853;
},getItemsActiveState:function(){
var _856=this.getItemsState();
for(var item in _856){
_856[item]=_856[item].enabled;
}
return _856;
},getItemsSelectedState:function(){
var _858=this.getItemsState();
for(var item in _858){
_858[item]=_858[item].selected;
}
return _858;
},enable:function(){
var _85a=arguments.length?arguments:this.children;
for(var i=0;i<_85a.length;i++){
var _85c=this.getItem(_85a[i]);
if(_85c instanceof dojo.widget.ToolbarItem){
_85c.enable(false,true);
}
}
},disable:function(){
var _85d=arguments.length?arguments:this.children;
for(var i=0;i<_85d.length;i++){
var _85f=this.getItem(_85d[i]);
if(_85f instanceof dojo.widget.ToolbarItem){
_85f.disable();
}
}
},select:function(){
for(var i=0;i<arguments.length;i++){
var name=arguments[i];
var item=this.getItem(name);
if(item){
item.select();
}
}
},deselect:function(){
for(var i=0;i<arguments.length;i++){
var name=arguments[i];
var item=this.getItem(name);
if(item){
item.disable();
}
}
},setValue:function(){
for(var i=0;i<arguments.length;i+=2){
var name=arguments[i],_868=arguments[i+1];
var item=this.getItem(name);
if(item){
if(item instanceof dojo.widget.ToolbarItem){
item.setValue(_868);
}
}
}
}});
dojo.widget.defineWidget("dojo.widget.ToolbarItem",dojo.widget.HtmlWidget,{templateString:"<span unselectable=\"on\" class=\"toolbarItem\"></span>",_name:null,getName:function(){
return this._name;
},setName:function(_86a){
return (this._name=_86a);
},getValue:function(){
return this.getName();
},setValue:function(_86b){
return this.setName(_86b);
},_selected:false,isSelected:function(){
return this._selected;
},setSelected:function(is,_86d,_86e){
if(!this._toggleItem&&!_86d){
return;
}
is=Boolean(is);
if(_86d||!this.disabled&&this._selected!=is){
this._selected=is;
this.update();
if(!_86e){
this._fireEvent(is?"onSelect":"onDeselect");
this._fireEvent("onChangeSelect");
}
}
},select:function(_86f,_870){
return this.setSelected(true,_86f,_870);
},deselect:function(_871,_872){
return this.setSelected(false,_871,_872);
},_toggleItem:false,isToggleItem:function(){
return this._toggleItem;
},setToggleItem:function(_873){
this._toggleItem=Boolean(_873);
},toggleSelected:function(_874){
return this.setSelected(!this._selected,_874);
},isEnabled:function(){
return !this.disabled;
},setEnabled:function(is,_876,_877){
is=Boolean(is);
if(_876||this.disabled==is){
this.disabled=!is;
this.update();
if(!_877){
this._fireEvent(this.disabled?"onDisable":"onEnable");
this._fireEvent("onChangeEnabled");
}
}
return !this.disabled;
},enable:function(_878,_879){
return this.setEnabled(true,_878,_879);
},disable:function(_87a,_87b){
return this.setEnabled(false,_87a,_87b);
},toggleEnabled:function(_87c,_87d){
return this.setEnabled(this.disabled,_87c,_87d);
},_icon:null,getIcon:function(){
return this._icon;
},setIcon:function(_87e){
var icon=dojo.widget.Icon.make(_87e);
if(this._icon){
this._icon.setIcon(icon);
}else{
this._icon=icon;
}
var _880=this._icon.getNode();
if(_880.parentNode!=this.domNode){
if(this.domNode.hasChildNodes()){
this.domNode.insertBefore(_880,this.domNode.firstChild);
}else{
this.domNode.appendChild(_880);
}
}
return this._icon;
},_label:"",getLabel:function(){
return this._label;
},setLabel:function(_881){
var ret=(this._label=_881);
if(!this.labelNode){
this.labelNode=document.createElement("span");
this.domNode.appendChild(this.labelNode);
}
this.labelNode.innerHTML="";
this.labelNode.appendChild(document.createTextNode(this._label));
this.update();
return ret;
},update:function(){
if(this.disabled){
this._selected=false;
dojo.html.addClass(this.domNode,"disabled");
dojo.html.removeClass(this.domNode,"down");
dojo.html.removeClass(this.domNode,"hover");
}else{
dojo.html.removeClass(this.domNode,"disabled");
if(this._selected){
dojo.html.addClass(this.domNode,"selected");
}else{
dojo.html.removeClass(this.domNode,"selected");
}
}
this._updateIcon();
},_updateIcon:function(){
if(this._icon){
if(this.disabled){
this._icon.disable();
}else{
if(this._cssHover){
this._icon.hover();
}else{
if(this._selected){
this._icon.select();
}else{
this._icon.enable();
}
}
}
}
},_fireEvent:function(evt){
if(typeof this[evt]=="function"){
var args=[this];
for(var i=1;i<arguments.length;i++){
args.push(arguments[i]);
}
this[evt].apply(this,args);
}
},_onmouseover:function(e){
if(this.disabled){
return;
}
dojo.html.addClass(this.domNode,"hover");
this._fireEvent("onMouseOver");
},_onmouseout:function(e){
dojo.html.removeClass(this.domNode,"hover");
dojo.html.removeClass(this.domNode,"down");
if(!this._selected){
dojo.html.removeClass(this.domNode,"selected");
}
this._fireEvent("onMouseOut");
},_onclick:function(e){
if(!this.disabled&&!this._toggleItem){
this._fireEvent("onClick");
}
},_onmousedown:function(e){
if(e.preventDefault){
e.preventDefault();
}
if(this.disabled){
return;
}
dojo.html.addClass(this.domNode,"down");
if(this._toggleItem){
if(this.parent.preventDeselect&&this._selected){
return;
}
this.toggleSelected();
}
this._fireEvent("onMouseDown");
},_onmouseup:function(e){
dojo.html.removeClass(this.domNode,"down");
this._fireEvent("onMouseUp");
},onClick:function(){
},onMouseOver:function(){
},onMouseOut:function(){
},onMouseDown:function(){
},onMouseUp:function(){
},fillInTemplate:function(args,frag){
if(args.name){
this._name=args.name;
}
if(args.selected){
this.select();
}
if(args.disabled){
this.disable();
}
if(args.label){
this.setLabel(args.label);
}
if(args.icon){
this.setIcon(args.icon);
}
if(args.toggleitem||args.toggleItem){
this.setToggleItem(true);
}
}});
dojo.widget.ToolbarItem.make=function(wh,_88e,_88f){
var item=null;
if(wh instanceof Array){
item=dojo.widget.createWidget("ToolbarButtonGroup",_88f);
item.setName(wh[0]);
for(var i=1;i<wh.length;i++){
item.addChild(wh[i]);
}
}else{
if(wh instanceof dojo.widget.ToolbarItem){
item=wh;
}else{
if(wh instanceof dojo.uri.Uri){
item=dojo.widget.createWidget("ToolbarButton",dojo.lang.mixin(_88f||{},{icon:new dojo.widget.Icon(wh.toString())}));
}else{
if(_88e){
item=dojo.widget.createWidget(wh,_88f);
}else{
if(typeof wh=="string"||wh instanceof String){
switch(wh.charAt(0)){
case "|":
case "-":
case "/":
item=dojo.widget.createWidget("ToolbarSeparator",_88f);
break;
case " ":
if(wh.length==1){
item=dojo.widget.createWidget("ToolbarSpace",_88f);
}else{
item=dojo.widget.createWidget("ToolbarFlexibleSpace",_88f);
}
break;
default:
if(/\.(gif|jpg|jpeg|png)$/i.test(wh)){
item=dojo.widget.createWidget("ToolbarButton",dojo.lang.mixin(_88f||{},{icon:new dojo.widget.Icon(wh.toString())}));
}else{
item=dojo.widget.createWidget("ToolbarButton",dojo.lang.mixin(_88f||{},{label:wh.toString()}));
}
}
}else{
if(wh&&wh.tagName&&/^img$/i.test(wh.tagName)){
item=dojo.widget.createWidget("ToolbarButton",dojo.lang.mixin(_88f||{},{icon:wh}));
}else{
item=dojo.widget.createWidget("ToolbarButton",dojo.lang.mixin(_88f||{},{label:wh.toString()}));
}
}
}
}
}
}
return item;
};
dojo.widget.defineWidget("dojo.widget.ToolbarButtonGroup",dojo.widget.ToolbarItem,{isContainer:true,templateString:"<span unselectable=\"on\" class=\"toolbarButtonGroup\" dojoAttachPoint=\"containerNode\"></span>",defaultButton:"",postCreate:function(){
for(var i=0;i<this.children.length;i++){
this._injectChild(this.children[i]);
}
},addChild:function(item,pos,_895){
var _896=dojo.widget.ToolbarItem.make(item,null,dojo.lang.mixin(_895||{},{toggleItem:true}));
var ret=dojo.widget.ToolbarButtonGroup.superclass.addChild.call(this,_896,null,pos,null);
this._injectChild(_896);
return ret;
},_injectChild:function(_898){
dojo.event.connect(_898,"onSelect",this,"onChildSelected");
dojo.event.connect(_898,"onDeselect",this,"onChildDeSelected");
if(_898._name==this.defaultButton||(typeof this.defaultButton=="number"&&this.children.length-1==this.defaultButton)){
_898.select(false,true);
}
},getItem:function(name){
if(name instanceof dojo.widget.ToolbarItem){
return name;
}
for(var i=0;i<this.children.length;i++){
var _89b=this.children[i];
if(_89b instanceof dojo.widget.ToolbarItem&&_89b._name==name){
return _89b;
}
}
return null;
},getItems:function(){
var _89c=[];
for(var i=0;i<this.children.length;i++){
var _89e=this.children[i];
if(_89e instanceof dojo.widget.ToolbarItem){
_89c.push(_89e);
}
}
return _89c;
},onChildSelected:function(e){
this.select(e._name);
},onChildDeSelected:function(e){
this._fireEvent("onChangeSelect",this._value);
},enable:function(_8a1,_8a2){
for(var i=0;i<this.children.length;i++){
var _8a4=this.children[i];
if(_8a4 instanceof dojo.widget.ToolbarItem){
_8a4.enable(_8a1,_8a2);
if(_8a4._name==this._value){
_8a4.select(_8a1,_8a2);
}
}
}
},disable:function(_8a5,_8a6){
for(var i=0;i<this.children.length;i++){
var _8a8=this.children[i];
if(_8a8 instanceof dojo.widget.ToolbarItem){
_8a8.disable(_8a5,_8a6);
}
}
},_value:"",getValue:function(){
return this._value;
},select:function(name,_8aa,_8ab){
for(var i=0;i<this.children.length;i++){
var _8ad=this.children[i];
if(_8ad instanceof dojo.widget.ToolbarItem){
if(_8ad._name==name){
_8ad.select(_8aa,_8ab);
this._value=name;
}else{
_8ad.deselect(true,true);
}
}
}
if(!_8ab){
this._fireEvent("onSelect",this._value);
this._fireEvent("onChangeSelect",this._value);
}
},setValue:this.select,preventDeselect:false});
dojo.widget.defineWidget("dojo.widget.ToolbarButton",dojo.widget.ToolbarItem,{fillInTemplate:function(args,frag){
dojo.widget.ToolbarButton.superclass.fillInTemplate.call(this,args,frag);
dojo.html.addClass(this.domNode,"toolbarButton");
if(this._icon){
this.setIcon(this._icon);
}
if(this._label){
this.setLabel(this._label);
}
if(!this._name){
if(this._label){
this.setName(this._label);
}else{
if(this._icon){
var src=this._icon.getSrc("enabled").match(/[\/^]([^\.\/]+)\.(gif|jpg|jpeg|png)$/i);
if(src){
this.setName(src[1]);
}
}else{
this._name=this._widgetId;
}
}
}
}});
dojo.widget.defineWidget("dojo.widget.ToolbarDialog",dojo.widget.ToolbarButton,{fillInTemplate:function(args,frag){
dojo.widget.ToolbarDialog.superclass.fillInTemplate.call(this,args,frag);
dojo.event.connect(this,"onSelect",this,"showDialog");
dojo.event.connect(this,"onDeselect",this,"hideDialog");
},showDialog:function(e){
dojo.lang.setTimeout(dojo.event.connect,1,document,"onmousedown",this,"deselect");
},hideDialog:function(e){
dojo.event.disconnect(document,"onmousedown",this,"deselect");
}});
dojo.widget.defineWidget("dojo.widget.ToolbarMenu",dojo.widget.ToolbarDialog,{});
dojo.widget.ToolbarMenuItem=function(){
};
dojo.widget.defineWidget("dojo.widget.ToolbarSeparator",dojo.widget.ToolbarItem,{templateString:"<span unselectable=\"on\" class=\"toolbarItem toolbarSeparator\"></span>",defaultIconPath:new dojo.uri.dojoUri("src/widget/templates/buttons/sep.gif"),fillInTemplate:function(args,frag,skip){
dojo.widget.ToolbarSeparator.superclass.fillInTemplate.call(this,args,frag);
this._name=this.widgetId;
if(!skip){
if(!this._icon){
this.setIcon(this.defaultIconPath);
}
this.domNode.appendChild(this._icon.getNode());
}
},_onmouseover:null,_onmouseout:null,_onclick:null,_onmousedown:null,_onmouseup:null});
dojo.widget.defineWidget("dojo.widget.ToolbarSpace",dojo.widget.ToolbarSeparator,{fillInTemplate:function(args,frag,skip){
dojo.widget.ToolbarSpace.superclass.fillInTemplate.call(this,args,frag,true);
if(!skip){
dojo.html.addClass(this.domNode,"toolbarSpace");
}
}});
dojo.widget.defineWidget("dojo.widget.ToolbarSelect",dojo.widget.ToolbarItem,{templateString:"<span class=\"toolbarItem toolbarSelect\" unselectable=\"on\"><select dojoAttachPoint=\"selectBox\" dojoOnChange=\"changed\"></select></span>",fillInTemplate:function(args,frag){
dojo.widget.ToolbarSelect.superclass.fillInTemplate.call(this,args,frag,true);
var keys=args.values;
var i=0;
for(var val in keys){
var opt=document.createElement("option");
opt.setAttribute("value",keys[val]);
opt.innerHTML=val;
this.selectBox.appendChild(opt);
}
},changed:function(e){
this._fireEvent("onSetValue",this.selectBox.value);
},setEnabled:function(is,_8c3,_8c4){
var ret=dojo.widget.ToolbarSelect.superclass.setEnabled.call(this,is,_8c3,_8c4);
this.selectBox.disabled=this.disabled;
return ret;
},_onmouseover:null,_onmouseout:null,_onclick:null,_onmousedown:null,_onmouseup:null});
dojo.widget.Icon=function(_8c6,_8c7,_8c8,_8c9){
if(!arguments.length){
throw new Error("Icon must have at least an enabled state");
}
var _8ca=["enabled","disabled","hovered","selected"];
var _8cb="enabled";
var _8cc=document.createElement("img");
this.getState=function(){
return _8cb;
};
this.setState=function(_8cd){
if(dojo.lang.inArray(_8ca,_8cd)){
if(this[_8cd]){
_8cb=_8cd;
var img=this[_8cb];
if((dojo.render.html.ie55||dojo.render.html.ie60)&&img.src&&img.src.match(/[.]png$/i)){
_8cc.width=img.width||img.offsetWidth;
_8cc.height=img.height||img.offsetHeight;
_8cc.setAttribute("src",dojo.uri.dojoUri("src/widget/templates/images/blank.gif").uri);
_8cc.style.filter="progid:DXImageTransform.Microsoft.AlphaImageLoader(src='"+img.src+"',sizingMethod='image')";
}else{
_8cc.setAttribute("src",img.src);
}
}
}else{
throw new Error("Invalid state set on Icon (state: "+_8cd+")");
}
};
this.setSrc=function(_8cf,_8d0){
if(/^img$/i.test(_8d0.tagName)){
this[_8cf]=_8d0;
}else{
if(typeof _8d0=="string"||_8d0 instanceof String||_8d0 instanceof dojo.uri.Uri){
this[_8cf]=new Image();
this[_8cf].src=_8d0.toString();
}
}
return this[_8cf];
};
this.setIcon=function(icon){
for(var i=0;i<_8ca.length;i++){
if(icon[_8ca[i]]){
this.setSrc(_8ca[i],icon[_8ca[i]]);
}
}
this.update();
};
this.enable=function(){
this.setState("enabled");
};
this.disable=function(){
this.setState("disabled");
};
this.hover=function(){
this.setState("hovered");
};
this.select=function(){
this.setState("selected");
};
this.getSize=function(){
return {width:_8cc.width||_8cc.offsetWidth,height:_8cc.height||_8cc.offsetHeight};
};
this.setSize=function(w,h){
_8cc.width=w;
_8cc.height=h;
return {width:w,height:h};
};
this.getNode=function(){
return _8cc;
};
this.getSrc=function(_8d5){
if(_8d5){
return this[_8d5].src;
}
return _8cc.src||"";
};
this.update=function(){
this.setState(_8cb);
};
for(var i=0;i<_8ca.length;i++){
var arg=arguments[i];
var _8d8=_8ca[i];
this[_8d8]=null;
if(!arg){
continue;
}
this.setSrc(_8d8,arg);
}
this.enable();
};
dojo.widget.Icon.make=function(a,b,c,d){
for(var i=0;i<arguments.length;i++){
if(arguments[i] instanceof dojo.widget.Icon){
return arguments[i];
}
}
return new dojo.widget.Icon(a,b,c,d);
};
dojo.widget.defineWidget("dojo.widget.ToolbarColorDialog",dojo.widget.ToolbarDialog,{palette:"7x10",fillInTemplate:function(args,frag){
dojo.widget.ToolbarColorDialog.superclass.fillInTemplate.call(this,args,frag);
this.dialog=dojo.widget.createWidget("ColorPalette",{palette:this.palette});
this.dialog.domNode.style.position="absolute";
dojo.event.connect(this.dialog,"onColorSelect",this,"_setValue");
},_setValue:function(_8e0){
this._value=_8e0;
this._fireEvent("onSetValue",_8e0);
},showDialog:function(e){
dojo.widget.ToolbarColorDialog.superclass.showDialog.call(this,e);
var abs=dojo.html.getAbsolutePosition(this.domNode,true);
var y=abs.y+dojo.html.getBorderBox(this.domNode).height;
this.dialog.showAt(abs.x,y);
},hideDialog:function(e){
dojo.widget.ToolbarColorDialog.superclass.hideDialog.call(this,e);
this.dialog.hide();
}});
dojo.provide("dojo.html.*");
dojo.provide("dojo.html.selection");
dojo.html.selectionType={NONE:0,TEXT:1,CONTROL:2};
dojo.html.clearSelection=function(){
var _8e5=dojo.global();
var _8e6=dojo.doc();
try{
if(_8e5["getSelection"]){
if(dojo.render.html.safari){
_8e5.getSelection().collapse();
}else{
_8e5.getSelection().removeAllRanges();
}
}else{
if(_8e6.selection){
if(_8e6.selection.empty){
_8e6.selection.empty();
}else{
if(_8e6.selection.clear){
_8e6.selection.clear();
}
}
}
}
return true;
}
catch(e){
dojo.debug(e);
return false;
}
};
dojo.html.disableSelection=function(_8e7){
_8e7=dojo.byId(_8e7)||dojo.body();
var h=dojo.render.html;
if(h.mozilla){
_8e7.style.MozUserSelect="none";
}else{
if(h.safari){
_8e7.style.KhtmlUserSelect="none";
}else{
if(h.ie){
_8e7.unselectable="on";
}else{
return false;
}
}
}
return true;
};
dojo.html.enableSelection=function(_8e9){
_8e9=dojo.byId(_8e9)||dojo.body();
var h=dojo.render.html;
if(h.mozilla){
_8e9.style.MozUserSelect="";
}else{
if(h.safari){
_8e9.style.KhtmlUserSelect="";
}else{
if(h.ie){
_8e9.unselectable="off";
}else{
return false;
}
}
}
return true;
};
dojo.html.selectElement=function(_8eb){
dojo.deprecated("dojo.html.selectElement","replaced by dojo.html.selection.selectElementChildren",0.5);
};
dojo.html.selectInputText=function(_8ec){
var _8ed=dojo.global();
var _8ee=dojo.doc();
_8ec=dojo.byId(_8ec);
if(_8ee["selection"]&&dojo.body()["createTextRange"]){
var _8ef=_8ec.createTextRange();
_8ef.moveStart("character",0);
_8ef.moveEnd("character",_8ec.value.length);
_8ef.select();
}else{
if(_8ed["getSelection"]){
var _8f0=_8ed.getSelection();
_8ec.setSelectionRange(0,_8ec.value.length);
}
}
_8ec.focus();
};
dojo.html.isSelectionCollapsed=function(){
dojo.deprecated("dojo.html.isSelectionCollapsed","replaced by dojo.html.selection.isCollapsed",0.5);
return dojo.html.selection.isCollapsed();
};
dojo.lang.mixin(dojo.html.selection,{getType:function(){
if(dojo.doc()["selection"]){
return dojo.html.selectionType[dojo.doc().selection.type.toUpperCase()];
}else{
var _8f1=dojo.html.selectionType.TEXT;
var oSel;
try{
oSel=dojo.global().getSelection();
}
catch(e){
}
if(oSel&&oSel.rangeCount==1){
var _8f3=oSel.getRangeAt(0);
if(_8f3.startContainer==_8f3.endContainer&&(_8f3.endOffset-_8f3.startOffset)==1&&_8f3.startContainer.nodeType!=dojo.dom.TEXT_NODE){
_8f1=dojo.html.selectionType.CONTROL;
}
}
return _8f1;
}
},isCollapsed:function(){
var _8f4=dojo.global();
var _8f5=dojo.doc();
if(_8f5["selection"]){
return _8f5.selection.createRange().text=="";
}else{
if(_8f4["getSelection"]){
var _8f6=_8f4.getSelection();
if(dojo.lang.isString(_8f6)){
return _8f6=="";
}else{
return _8f6.isCollapsed||_8f6.toString()=="";
}
}
}
},getSelectedElement:function(){
if(dojo.html.selection.getType()==dojo.html.selectionType.CONTROL){
if(dojo.doc()["selection"]){
var _8f7=dojo.doc().selection.createRange();
if(_8f7&&_8f7.item){
return dojo.doc().selection.createRange().item(0);
}
}else{
var _8f8=dojo.global().getSelection();
return _8f8.anchorNode.childNodes[_8f8.anchorOffset];
}
}
},getParentElement:function(){
if(dojo.html.selection.getType()==dojo.html.selectionType.CONTROL){
var p=dojo.html.selection.getSelectedElement();
if(p){
return p.parentNode;
}
}else{
if(dojo.doc()["selection"]){
return dojo.doc().selection.createRange().parentElement();
}else{
var _8fa=dojo.global().getSelection();
if(_8fa){
var node=_8fa.anchorNode;
while(node&&node.nodeType!=dojo.dom.ELEMENT_NODE){
node=node.parentNode;
}
return node;
}
}
}
},getSelectedText:function(){
if(dojo.doc()["selection"]){
if(dojo.html.selection.getType()==dojo.html.selectionType.CONTROL){
return null;
}
return dojo.doc().selection.createRange().text;
}else{
var _8fc=dojo.global().getSelection();
if(_8fc){
return _8fc.toString();
}
}
},getSelectedHtml:function(){
if(dojo.doc()["selection"]){
if(dojo.html.selection.getType()==dojo.html.selectionType.CONTROL){
return null;
}
return dojo.doc().selection.createRange().htmlText;
}else{
var _8fd=dojo.global().getSelection();
if(_8fd&&_8fd.rangeCount){
var frag=_8fd.getRangeAt(0).cloneContents();
var div=document.createElement("div");
div.appendChild(frag);
return div.innerHTML;
}
return null;
}
},hasAncestorElement:function(_900){
return (dojo.html.selection.getAncestorElement.apply(this,arguments)!=null);
},getAncestorElement:function(_901){
var node=dojo.html.selection.getSelectedElement()||dojo.html.selection.getParentElement();
while(node){
if(dojo.html.selection.isTag(node,arguments).length>0){
return node;
}
node=node.parentNode;
}
return null;
},isTag:function(node,tags){
if(node&&node.tagName){
for(var i=0;i<tags.length;i++){
if(node.tagName.toLowerCase()==String(tags[i]).toLowerCase()){
return String(tags[i]).toLowerCase();
}
}
}
return "";
},selectElement:function(_906){
var _907=dojo.global();
var _908=dojo.doc();
_906=dojo.byId(_906);
if(_908.selection&&dojo.body().createTextRange){
try{
var _909=dojo.body().createControlRange();
_909.addElement(_906);
_909.select();
}
catch(e){
dojo.html.selection.selectElementChildren(_906);
}
}else{
if(_907["getSelection"]){
var _90a=_907.getSelection();
if(_90a["removeAllRanges"]){
var _909=_908.createRange();
_909.selectNode(_906);
_90a.removeAllRanges();
_90a.addRange(_909);
}
}
}
},selectElementChildren:function(_90b){
var _90c=dojo.global();
var _90d=dojo.doc();
_90b=dojo.byId(_90b);
if(_90d.selection&&dojo.body().createTextRange){
var _90e=dojo.body().createTextRange();
_90e.moveToElementText(_90b);
_90e.select();
}else{
if(_90c["getSelection"]){
var _90f=_90c.getSelection();
if(_90f["setBaseAndExtent"]){
_90f.setBaseAndExtent(_90b,0,_90b,_90b.innerText.length-1);
}else{
if(_90f["selectAllChildren"]){
_90f.selectAllChildren(_90b);
}
}
}
}
},getBookmark:function(){
var _910;
var _911=dojo.doc();
if(_911["selection"]){
var _912=_911.selection.createRange();
_910=_912.getBookmark();
}else{
var _913;
try{
_913=dojo.global().getSelection();
}
catch(e){
}
if(_913){
var _912=_913.getRangeAt(0);
_910=_912.cloneRange();
}else{
dojo.debug("No idea how to store the current selection for this browser!");
}
}
return _910;
},moveToBookmark:function(_914){
var _915=dojo.doc();
if(_915["selection"]){
var _916=_915.selection.createRange();
_916.moveToBookmark(_914);
_916.select();
}else{
var _917;
try{
_917=dojo.global().getSelection();
}
catch(e){
}
if(_917&&_917["removeAllRanges"]){
_917.removeAllRanges();
_917.addRange(_914);
}else{
dojo.debug("No idea how to restore selection for this browser!");
}
}
},collapse:function(_918){
if(dojo.global()["getSelection"]){
var _919=dojo.global().getSelection();
if(_919.removeAllRanges){
if(_918){
_919.collapseToStart();
}else{
_919.collapseToEnd();
}
}else{
dojo.global().getSelection().collapse(_918);
}
}else{
if(dojo.doc().selection){
var _91a=dojo.doc().selection.createRange();
_91a.collapse(_918);
_91a.select();
}
}
},remove:function(){
if(dojo.doc().selection){
var _91b=dojo.doc().selection;
if(_91b.type.toUpperCase()!="NONE"){
_91b.clear();
}
return _91b;
}else{
var _91b=dojo.global().getSelection();
for(var i=0;i<_91b.rangeCount;i++){
_91b.getRangeAt(i).deleteContents();
}
return _91b;
}
}});
dojo.provide("dojo.Deferred");
dojo.Deferred=function(_91d){
this.chain=[];
this.id=this._nextId();
this.fired=-1;
this.paused=0;
this.results=[null,null];
this.canceller=_91d;
this.silentlyCancelled=false;
};
dojo.lang.extend(dojo.Deferred,{getFunctionFromArgs:function(){
var a=arguments;
if((a[0])&&(!a[1])){
if(dojo.lang.isFunction(a[0])){
return a[0];
}else{
if(dojo.lang.isString(a[0])){
return dj_global[a[0]];
}
}
}else{
if((a[0])&&(a[1])){
return dojo.lang.hitch(a[0],a[1]);
}
}
return null;
},makeCalled:function(){
var _91f=new dojo.Deferred();
_91f.callback();
return _91f;
},repr:function(){
var _920;
if(this.fired==-1){
_920="unfired";
}else{
if(this.fired==0){
_920="success";
}else{
_920="error";
}
}
return "Deferred("+this.id+", "+_920+")";
},toString:dojo.lang.forward("repr"),_nextId:(function(){
var n=1;
return function(){
return n++;
};
})(),cancel:function(){
if(this.fired==-1){
if(this.canceller){
this.canceller(this);
}else{
this.silentlyCancelled=true;
}
if(this.fired==-1){
this.errback(new Error(this.repr()));
}
}else{
if((this.fired==0)&&(this.results[0] instanceof dojo.Deferred)){
this.results[0].cancel();
}
}
},_pause:function(){
this.paused++;
},_unpause:function(){
this.paused--;
if((this.paused==0)&&(this.fired>=0)){
this._fire();
}
},_continue:function(res){
this._resback(res);
this._unpause();
},_resback:function(res){
this.fired=((res instanceof Error)?1:0);
this.results[this.fired]=res;
this._fire();
},_check:function(){
if(this.fired!=-1){
if(!this.silentlyCancelled){
dojo.raise("already called!");
}
this.silentlyCancelled=false;
return;
}
},callback:function(res){
this._check();
this._resback(res);
},errback:function(res){
this._check();
if(!(res instanceof Error)){
res=new Error(res);
}
this._resback(res);
},addBoth:function(cb,cbfn){
var _928=this.getFunctionFromArgs(cb,cbfn);
if(arguments.length>2){
_928=dojo.lang.curryArguments(null,_928,arguments,2);
}
return this.addCallbacks(_928,_928);
},addCallback:function(cb,cbfn){
var _92b=this.getFunctionFromArgs(cb,cbfn);
if(arguments.length>2){
_92b=dojo.lang.curryArguments(null,_92b,arguments,2);
}
return this.addCallbacks(_92b,null);
},addErrback:function(cb,cbfn){
var _92e=this.getFunctionFromArgs(cb,cbfn);
if(arguments.length>2){
_92e=dojo.lang.curryArguments(null,_92e,arguments,2);
}
return this.addCallbacks(null,_92e);
return this.addCallbacks(null,cbfn);
},addCallbacks:function(cb,eb){
this.chain.push([cb,eb]);
if(this.fired>=0){
this._fire();
}
return this;
},_fire:function(){
var _931=this.chain;
var _932=this.fired;
var res=this.results[_932];
var self=this;
var cb=null;
while(_931.length>0&&this.paused==0){
var pair=_931.shift();
var f=pair[_932];
if(f==null){
continue;
}
try{
res=f(res);
_932=((res instanceof Error)?1:0);
if(res instanceof dojo.Deferred){
cb=function(res){
self._continue(res);
};
this._pause();
}
}
catch(err){
_932=1;
res=err;
}
}
this.fired=_932;
this.results[_932]=res;
if((cb)&&(this.paused)){
res.addBoth(cb);
}
}});
dojo.provide("dojo.widget.RichText");
if(dojo.hostenv.post_load_){
(function(){
var _939=dojo.doc().createElement("textarea");
_939.id="dojo.widget.RichText.savedContent";
_939.style="display:none;position:absolute;top:-100px;left:-100px;height:3px;width:3px;overflow:hidden;";
dojo.body().appendChild(_939);
})();
}else{
try{
dojo.doc().write("<textarea id=\"dojo.widget.RichText.savedContent\" "+"style=\"display:none;position:absolute;top:-100px;left:-100px;height:3px;width:3px;overflow:hidden;\"></textarea>");
}
catch(e){
}
}
dojo.widget.defineWidget("dojo.widget.RichText",dojo.widget.HtmlWidget,function(){
this.contentPreFilters=[];
this.contentPostFilters=[];
this.contentDomPreFilters=[];
this.contentDomPostFilters=[];
this.editingAreaStyleSheets=[];
if(dojo.render.html.moz){
this.contentPreFilters.push(this._fixContentForMoz);
}
this._keyHandlers={};
if(dojo.Deferred){
this.onLoadDeferred=new dojo.Deferred();
}
},{inheritWidth:false,focusOnLoad:false,saveName:"",styleSheets:"",_content:"",height:"",minHeight:"1em",isClosed:true,isLoaded:false,useActiveX:false,relativeImageUrls:false,_SEPARATOR:"@@**%%__RICHTEXTBOUNDRY__%%**@@",onLoadDeferred:null,fillInTemplate:function(){
dojo.event.topic.publish("dojo.widget.RichText::init",this);
this.open();
dojo.event.connect(this,"onKeyPressed",this,"afterKeyPress");
dojo.event.connect(this,"onKeyPress",this,"keyPress");
dojo.event.connect(this,"onKeyDown",this,"keyDown");
dojo.event.connect(this,"onKeyUp",this,"keyUp");
this.setupDefaultShortcuts();
},setupDefaultShortcuts:function(){
var ctrl=this.KEY_CTRL;
var exec=function(cmd,arg){
return arguments.length==1?function(){
this.execCommand(cmd);
}:function(){
this.execCommand(cmd,arg);
};
};
this.addKeyHandler("b",ctrl,exec("bold"));
this.addKeyHandler("i",ctrl,exec("italic"));
this.addKeyHandler("u",ctrl,exec("underline"));
this.addKeyHandler("a",ctrl,exec("selectall"));
this.addKeyHandler("s",ctrl,function(){
this.save(true);
});
this.addKeyHandler("1",ctrl,exec("formatblock","h1"));
this.addKeyHandler("2",ctrl,exec("formatblock","h2"));
this.addKeyHandler("3",ctrl,exec("formatblock","h3"));
this.addKeyHandler("4",ctrl,exec("formatblock","h4"));
this.addKeyHandler("\\",ctrl,exec("insertunorderedlist"));
if(!dojo.render.html.ie){
this.addKeyHandler("Z",ctrl,exec("redo"));
}
},events:["onBlur","onFocus","onKeyPress","onKeyDown","onKeyUp","onClick"],open:function(_93e){
if(this.onLoadDeferred.fired>=0){
this.onLoadDeferred=new dojo.Deferred();
}
var h=dojo.render.html;
if(!this.isClosed){
this.close();
}
dojo.event.topic.publish("dojo.widget.RichText::open",this);
this._content="";
if((arguments.length==1)&&(_93e["nodeName"])){
this.domNode=_93e;
}
if((this.domNode["nodeName"])&&(this.domNode.nodeName.toLowerCase()=="textarea")){
this.textarea=this.domNode;
var html=dojo.string.trim(this.textarea.value);
this.domNode=dojo.doc().createElement("div");
dojo.html.copyStyle(this.domNode,this.textarea);
var _941=dojo.lang.hitch(this,function(){
with(this.textarea.style){
display="block";
position="absolute";
left=top="-1000px";
if(h.ie){
this.__overflow=overflow;
overflow="hidden";
}
}
});
if(h.ie){
setTimeout(_941,10);
}else{
_941();
}
if(!h.safari){
dojo.html.insertBefore(this.domNode,this.textarea);
}
if(this.textarea.form){
dojo.event.connect("before",this.textarea.form,"onsubmit",dojo.lang.hitch(this,function(){
this.textarea.value=this.getEditorContent();
}));
}
var _942=this;
dojo.event.connect(this,"postCreate",function(){
dojo.html.insertAfter(_942.textarea,_942.domNode);
});
}else{
var html=this._preFilterContent(dojo.string.trim(this.domNode.innerHTML));
}
if(html==""){
html="&nbsp;";
}
var _943=dojo.html.getContentBox(this.domNode);
this._oldHeight=_943.height;
this._oldWidth=_943.width;
this._firstChildContributingMargin=this._getContributingMargin(this.domNode,"top");
this._lastChildContributingMargin=this._getContributingMargin(this.domNode,"bottom");
this.savedContent=this.domNode.innerHTML;
this.domNode.innerHTML="";
this.editingArea=dojo.doc().createElement("div");
this.domNode.appendChild(this.editingArea);
if((this.domNode["nodeName"])&&(this.domNode.nodeName=="LI")){
this.domNode.innerHTML=" <br>";
}
if(this.saveName!=""){
var _944=dojo.doc().getElementById("dojo.widget.RichText.savedContent");
if(_944.value!=""){
var _945=_944.value.split(this._SEPARATOR);
for(var i=0;i<_945.length;i++){
var data=_945[i].split(":");
if(data[0]==this.saveName){
html=data[1];
_945.splice(i,1);
break;
}
}
}
dojo.event.connect("before",window,"onunload",this,"_saveContent");
}
if(h.ie70&&this.useActiveX){
dojo.debug("activeX in ie70 is not currently supported, useActiveX is ignored for now.");
this.useActiveX=false;
}
if(this.useActiveX&&h.ie){
var self=this;
setTimeout(function(){
self._drawObject(html);
},0);
}else{
if(h.ie||this._safariIsLeopard()||h.opera){
this.iframe=dojo.doc().createElement("iframe");
this.iframe.src="javascript:void(0)";
this.editorObject=this.iframe;
with(this.iframe.style){
border="0";
width="100%";
}
this.iframe.frameBorder=0;
this.editingArea.appendChild(this.iframe);
this.window=this.iframe.contentWindow;
this.document=this.window.document;
this.document.open();
this.document.write("<html><head><style>body{margin:0;padding:0;border:0;overflow:hidden;}</style></head><body><div></div></body></html>");
this.document.close();
this.editNode=this.document.body.firstChild;
this.editNode.contentEditable=true;
with(this.iframe.style){
if(h.ie70){
if(this.height){
height=this.height;
}
if(this.minHeight){
minHeight=this.minHeight;
}
}else{
height=this.height?this.height:this.minHeight;
}
}
var _949=["p","pre","address","h1","h2","h3","h4","h5","h6","ol","div","ul"];
var _94a="";
for(var i in _949){
if(_949[i].charAt(1)!="l"){
_94a+="<"+_949[i]+"><span>content</span></"+_949[i]+">";
}else{
_94a+="<"+_949[i]+"><li>content</li></"+_949[i]+">";
}
}
with(this.editNode.style){
position="absolute";
left="-2000px";
top="-2000px";
}
this.editNode.innerHTML=_94a;
var node=this.editNode.firstChild;
while(node){
dojo.withGlobal(this.window,"selectElement",dojo.html.selection,[node.firstChild]);
var _94c=node.tagName.toLowerCase();
this._local2NativeFormatNames[_94c]=this.queryCommandValue("formatblock");
this._native2LocalFormatNames[this._local2NativeFormatNames[_94c]]=_94c;
node=node.nextSibling;
}
with(this.editNode.style){
position="";
left="";
top="";
}
this.editNode.innerHTML=html;
if(this.height){
this.document.body.style.overflowY="scroll";
}
dojo.lang.forEach(this.events,function(e){
dojo.event.connect(this.editNode,e.toLowerCase(),this,e);
},this);
this.onLoad();
}else{
this._drawIframe(html);
this.editorObject=this.iframe;
}
}
if(this.domNode.nodeName=="LI"){
this.domNode.lastChild.style.marginTop="-1.2em";
}
dojo.html.addClass(this.domNode,"RichTextEditable");
this.isClosed=false;
},_hasCollapseableMargin:function(_94e,side){
if(dojo.html.getPixelValue(_94e,"border-"+side+"-width",false)){
return false;
}else{
if(dojo.html.getPixelValue(_94e,"padding-"+side,false)){
return false;
}else{
return true;
}
}
},_getContributingMargin:function(_950,_951){
if(_951=="top"){
var _952="previousSibling";
var _953="nextSibling";
var _954="firstChild";
var _955="margin-top";
var _956="margin-bottom";
}else{
var _952="nextSibling";
var _953="previousSibling";
var _954="lastChild";
var _955="margin-bottom";
var _956="margin-top";
}
var _957=dojo.html.getPixelValue(_950,_955,false);
function isSignificantNode(_958){
return !(_958.nodeType==3&&dojo.string.isBlank(_958.data))&&dojo.html.getStyle(_958,"display")!="none"&&!dojo.html.isPositionAbsolute(_958);
}
var _959=0;
var _95a=_950[_954];
while(_95a){
while((!isSignificantNode(_95a))&&_95a[_953]){
_95a=_95a[_953];
}
_959=Math.max(_959,dojo.html.getPixelValue(_95a,_955,false));
if(!this._hasCollapseableMargin(_95a,_951)){
break;
}
_95a=_95a[_954];
}
if(!this._hasCollapseableMargin(_950,_951)){
return parseInt(_959);
}
var _95b=0;
var _95c=_950[_952];
while(_95c){
if(isSignificantNode(_95c)){
_95b=dojo.html.getPixelValue(_95c,_956,false);
break;
}
_95c=_95c[_952];
}
if(!_95c){
_95b=dojo.html.getPixelValue(_950.parentNode,_955,false);
}
if(_959>_957){
return parseInt(Math.max((_959-_957)-_95b,0));
}else{
return 0;
}
},_drawIframe:function(html){
var _95e=Boolean(dojo.render.html.moz&&(typeof window.XML=="undefined"));
if(!this.iframe){
var _95f=(new dojo.uri.Uri(dojo.doc().location)).host;
this.iframe=dojo.doc().createElement("iframe");
with(this.iframe){
style.border="none";
style.lineHeight="0";
style.verticalAlign="bottom";
scrolling=this.height?"auto":"no";
}
}
this.iframe.src=dojo.uri.dojoUri("src/widget/templates/richtextframe.html")+((dojo.doc().domain!=_95f)?("#"+dojo.doc().domain):"");
this.iframe.width=this.inheritWidth?this._oldWidth:"100%";
if(this.height){
this.iframe.style.height=this.height;
}else{
var _960=this._oldHeight;
if(this._hasCollapseableMargin(this.domNode,"top")){
_960+=this._firstChildContributingMargin;
}
if(this._hasCollapseableMargin(this.domNode,"bottom")){
_960+=this._lastChildContributingMargin;
}
this.iframe.height=_960;
}
var _961=dojo.doc().createElement("div");
_961.innerHTML=html;
this.editingArea.appendChild(_961);
if(this.relativeImageUrls){
var imgs=_961.getElementsByTagName("img");
for(var i=0;i<imgs.length;i++){
imgs[i].src=(new dojo.uri.Uri(dojo.global().location,imgs[i].src)).toString();
}
html=_961.innerHTML;
}
var _964=dojo.html.firstElement(_961);
var _965=dojo.html.lastElement(_961);
if(_964){
_964.style.marginTop=this._firstChildContributingMargin+"px";
}
if(_965){
_965.style.marginBottom=this._lastChildContributingMargin+"px";
}
this.editingArea.appendChild(this.iframe);
if(dojo.render.html.safari){
this.iframe.src=this.iframe.src;
}
var _966=false;
var _967=dojo.lang.hitch(this,function(){
if(!_966){
_966=true;
}else{
return;
}
if(!this.editNode){
if(this.iframe.contentWindow){
this.window=this.iframe.contentWindow;
this.document=this.iframe.contentWindow.document;
}else{
if(this.iframe.contentDocument){
this.window=this.iframe.contentDocument.window;
this.document=this.iframe.contentDocument;
}
}
var _968=(function(_969){
return function(_96a){
return dojo.html.getStyle(_969,_96a);
};
})(this.domNode);
var font=_968("font-weight")+" "+_968("font-size")+" "+_968("font-family");
var _96c="1.0";
var _96d=dojo.html.getUnitValue(this.domNode,"line-height");
if(_96d.value&&_96d.units==""){
_96c=_96d.value;
}
dojo.html.insertCssText("body,html{background:transparent;padding:0;margin:0;}"+"body{top:0;left:0;right:0;"+(((this.height)||(dojo.render.html.opera))?"":"position:fixed;")+"font:"+font+";"+"min-height:"+this.minHeight+";"+"line-height:"+_96c+"}"+"p{margin: 1em 0 !important;}"+"body > *:first-child{padding-top:0 !important;margin-top:"+this._firstChildContributingMargin+"px !important;}"+"body > *:last-child{padding-bottom:0 !important;margin-bottom:"+this._lastChildContributingMargin+"px !important;}"+"li > ul:-moz-first-node, li > ol:-moz-first-node{padding-top:1.2em;}\n"+"li{min-height:1.2em;}"+"",this.document);
dojo.html.removeNode(_961);
this.document.body.innerHTML=html;
if(_95e||dojo.render.html.safari){
this.document.designMode="on";
}
this.onLoad();
}else{
dojo.html.removeNode(_961);
this.editNode.innerHTML=html;
this.onDisplayChanged();
}
});
if(this.editNode){
_967();
}else{
if(dojo.render.html.moz){
this.iframe.onload=function(){
setTimeout(_967,250);
};
}else{
this.iframe.onload=_967;
}
}
},_applyEditingAreaStyleSheets:function(){
var _96e=[];
if(this.styleSheets){
_96e=this.styleSheets.split(";");
this.styleSheets="";
}
_96e=_96e.concat(this.editingAreaStyleSheets);
this.editingAreaStyleSheets=[];
if(_96e.length>0){
for(var i=0;i<_96e.length;i++){
var url=_96e[i];
if(url){
this.addStyleSheet(dojo.uri.dojoUri(url));
}
}
}
},addStyleSheet:function(uri){
var url=uri.toString();
if(dojo.lang.find(this.editingAreaStyleSheets,url)>-1){
dojo.debug("dojo.widget.RichText.addStyleSheet: Style sheet "+url+" is already applied to the editing area!");
return;
}
if(url.charAt(0)=="."||(url.charAt(0)!="/"&&!uri.host)){
url=(new dojo.uri.Uri(dojo.global().location,url)).toString();
}
this.editingAreaStyleSheets.push(url);
if(this.document.createStyleSheet){
this.document.createStyleSheet(url);
}else{
var head=this.document.getElementsByTagName("head")[0];
var _974=this.document.createElement("link");
with(_974){
rel="stylesheet";
type="text/css";
href=url;
}
head.appendChild(_974);
}
},removeStyleSheet:function(uri){
var url=uri.toString();
if(url.charAt(0)=="."||(url.charAt(0)!="/"&&!uri.host)){
url=(new dojo.uri.Uri(dojo.global().location,url)).toString();
}
var _977=dojo.lang.find(this.editingAreaStyleSheets,url);
if(_977==-1){
dojo.debug("dojo.widget.RichText.removeStyleSheet: Style sheet "+url+" is not applied to the editing area so it can not be removed!");
return;
}
delete this.editingAreaStyleSheets[_977];
var _978=this.document.getElementsByTagName("link");
for(var i=0;i<_978.length;i++){
if(_978[i].href==url){
if(dojo.render.html.ie){
_978[i].href="";
}
dojo.html.removeNode(_978[i]);
break;
}
}
},_drawObject:function(html){
this.object=dojo.html.createExternalElement(dojo.doc(),"object");
with(this.object){
classid="clsid:2D360201-FFF5-11D1-8D03-00A0C959BC0A";
width=this.inheritWidth?this._oldWidth:"100%";
style.height=this.height?this.height:(this._oldHeight+"px");
Scrollbars=this.height?true:false;
Appearance=this._activeX.appearance.flat;
}
this.editorObject=this.object;
this.editingArea.appendChild(this.object);
this.object.attachEvent("DocumentComplete",dojo.lang.hitch(this,"onLoad"));
dojo.lang.forEach(this.events,function(e){
this.object.attachEvent(e.toLowerCase(),dojo.lang.hitch(this,e));
},this);
this.object.DocumentHTML="<!doctype HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\">"+"<html><title></title>"+"<style type=\"text/css\">"+"    body,html { padding: 0; margin: 0; }"+(this.height?"":"    body,  { overflow: hidden; }")+"</style>"+"<body><div>"+html+"<div></body></html>";
this._cacheLocalBlockFormatNames();
},_local2NativeFormatNames:{},_native2LocalFormatNames:{},_cacheLocalBlockFormatNames:function(){
if(!this._native2LocalFormatNames["p"]){
var obj=this.object;
var _97d=false;
if(!obj){
try{
obj=dojo.html.createExternalElement(dojo.doc(),"object");
obj.classid="clsid:2D360201-FFF5-11D1-8D03-00A0C959BC0A";
dojo.body().appendChild(obj);
obj.DocumentHTML="<html><head></head><body></body></html>";
}
catch(e){
_97d=true;
}
}
try{
var _97e=new ActiveXObject("DEGetBlockFmtNamesParam.DEGetBlockFmtNamesParam");
obj.ExecCommand(this._activeX.command["getblockformatnames"],0,_97e);
var _97f=new VBArray(_97e.Names);
var _980=_97f.toArray();
var _981=["p","pre","address","h1","h2","h3","h4","h5","h6","ol","ul","","","","","div"];
for(var i=0;i<_981.length;++i){
if(_981[i].length>0){
this._local2NativeFormatNames[_980[i]]=_981[i];
this._native2LocalFormatNames[_981[i]]=_980[i];
}
}
}
catch(e){
_97d=true;
}
if(obj&&!this.object){
dojo.body().removeChild(obj);
}
}
return !_97d;
},_isResized:function(){
return false;
},onLoad:function(e){
this.isLoaded=true;
if(this.object){
this.document=this.object.DOM;
this.window=this.document.parentWindow;
this.editNode=this.document.body.firstChild;
this.editingArea.style.height=this.height?this.height:this.minHeight;
if(!this.height){
this.connect(this,"onDisplayChanged","_updateHeight");
}
this.window._frameElement=this.object;
}else{
if(this.iframe&&!dojo.render.html.ie){
this.editNode=this.document.body;
if(!this.height){
this.connect(this,"onDisplayChanged","_updateHeight");
}
try{
this.document.execCommand("useCSS",false,true);
this.document.execCommand("styleWithCSS",false,false);
}
catch(e2){
}
if(dojo.render.html.safari){
this.connect(this.editNode,"onblur","onBlur");
this.connect(this.editNode,"onfocus","onFocus");
this.connect(this.editNode,"onclick","onFocus");
this.interval=setInterval(dojo.lang.hitch(this,"onDisplayChanged"),750);
}else{
if(dojo.render.html.mozilla||dojo.render.html.opera){
var doc=this.document;
var _985=dojo.event.browser.addListener;
var self=this;
dojo.lang.forEach(this.events,function(e){
var l=_985(self.document,e.substr(2).toLowerCase(),dojo.lang.hitch(self,e));
if(e=="onBlur"){
var _989={unBlur:function(e){
dojo.event.browser.removeListener(doc,"blur",l);
}};
dojo.event.connect("before",self,"close",_989,"unBlur");
}
});
}
}
}else{
if(dojo.render.html.ie){
if(!this.height){
this.connect(this,"onDisplayChanged","_updateHeight");
}
this.editNode.style.zoom=1;
}
}
}
this._applyEditingAreaStyleSheets();
if(this.focusOnLoad){
this.focus();
}
this.onDisplayChanged(e);
if(this.onLoadDeferred){
this.onLoadDeferred.callback(true);
}
},onKeyDown:function(e){
if((!e)&&(this.object)){
e=dojo.event.browser.fixEvent(this.window.event);
}
if((dojo.render.html.ie)&&(e.keyCode==e.KEY_TAB)){
e.preventDefault();
e.stopPropagation();
this.execCommand((e.shiftKey?"outdent":"indent"));
}else{
if(dojo.render.html.ie){
if((65<=e.keyCode)&&(e.keyCode<=90)){
e.charCode=e.keyCode;
this.onKeyPress(e);
}
}
}
},onKeyUp:function(e){
return;
},KEY_CTRL:1,onKeyPress:function(e){
if((!e)&&(this.object)){
e=dojo.event.browser.fixEvent(this.window.event);
}
var _98e=e.ctrlKey?this.KEY_CTRL:0;
if(this._keyHandlers[e.key]){
var _98f=this._keyHandlers[e.key],i=0,_991;
while(_991=_98f[i++]){
if(_98e==_991.modifiers){
e.preventDefault();
_991.handler.call(this);
break;
}
}
}
dojo.lang.setTimeout(this,this.onKeyPressed,1,e);
},addKeyHandler:function(key,_993,_994){
if(!(this._keyHandlers[key] instanceof Array)){
this._keyHandlers[key]=[];
}
this._keyHandlers[key].push({modifiers:_993||0,handler:_994});
},onKeyPressed:function(e){
this.onDisplayChanged();
},onClick:function(e){
this.onDisplayChanged(e);
},onBlur:function(e){
},_initialFocus:true,onFocus:function(e){
if((dojo.render.html.mozilla)&&(this._initialFocus)){
this._initialFocus=false;
if(dojo.string.trim(this.editNode.innerHTML)=="&nbsp;"){
this.placeCursorAtStart();
}
}
},blur:function(){
if(this.iframe){
this.window.blur();
}else{
if(this.object){
this.document.body.blur();
}else{
if(this.editNode){
this.editNode.blur();
}
}
}
},focus:function(){
if(this.iframe&&!dojo.render.html.ie){
this.window.focus();
}else{
if(this.object){
this.document.focus();
}else{
if(this.editNode&&this.editNode.focus){
this.editNode.focus();
}else{
dojo.debug("Have no idea how to focus into the editor!");
}
}
}
},onDisplayChanged:function(e){
},_activeX:{command:{bold:5000,italic:5023,underline:5048,justifycenter:5024,justifyleft:5025,justifyright:5026,cut:5003,copy:5002,paste:5032,"delete":5004,undo:5049,redo:5033,removeformat:5034,selectall:5035,unlink:5050,indent:5018,outdent:5031,insertorderedlist:5030,insertunorderedlist:5051,inserttable:5022,insertcell:5019,insertcol:5020,insertrow:5021,deletecells:5005,deletecols:5006,deleterows:5007,mergecells:5029,splitcell:5047,setblockformat:5043,getblockformat:5011,getblockformatnames:5012,setfontname:5044,getfontname:5013,setfontsize:5045,getfontsize:5014,setbackcolor:5042,getbackcolor:5010,setforecolor:5046,getforecolor:5015,findtext:5008,font:5009,hyperlink:5016,image:5017,lockelement:5027,makeabsolute:5028,sendbackward:5036,bringforward:5037,sendbelowtext:5038,bringabovetext:5039,sendtoback:5040,bringtofront:5041,properties:5052},ui:{"default":0,prompt:1,noprompt:2},status:{notsupported:0,disabled:1,enabled:3,latched:7,ninched:11},appearance:{flat:0,inset:1},state:{unchecked:0,checked:1,gray:2}},_normalizeCommand:function(cmd){
var drh=dojo.render.html;
var _99c=cmd.toLowerCase();
if(_99c=="formatblock"){
if(drh.safari){
_99c="heading";
}
}else{
if(this.object){
switch(_99c){
case "createlink":
_99c="hyperlink";
break;
case "insertimage":
_99c="image";
break;
}
}else{
if(_99c=="hilitecolor"&&!drh.mozilla){
_99c="backcolor";
}
}
}
return _99c;
},_safariIsLeopard:function(){
var _99d=false;
if(dojo.render.html.safari){
var tmp=dojo.render.html.UA.split("AppleWebKit/")[1];
var ver=parseFloat(tmp.split(" ")[0]);
if(ver>=420){
_99d=true;
}
}
return _99d;
},queryCommandAvailable:function(_9a0){
var ie=1;
var _9a2=1<<1;
var _9a3=1<<2;
var _9a4=1<<3;
var _9a5=1<<4;
var _9a6=this._safariIsLeopard();
function isSupportedBy(_9a7){
return {ie:Boolean(_9a7&ie),mozilla:Boolean(_9a7&_9a2),safari:Boolean(_9a7&_9a3),safari420:Boolean(_9a7&_9a5),opera:Boolean(_9a7&_9a4)};
}
var _9a8=null;
switch(_9a0.toLowerCase()){
case "bold":
case "italic":
case "underline":
case "subscript":
case "superscript":
case "fontname":
case "fontsize":
case "forecolor":
case "hilitecolor":
case "justifycenter":
case "justifyfull":
case "justifyleft":
case "justifyright":
case "delete":
case "selectall":
_9a8=isSupportedBy(_9a2|ie|_9a3|_9a4);
break;
case "createlink":
case "unlink":
case "removeformat":
case "inserthorizontalrule":
case "insertimage":
case "insertorderedlist":
case "insertunorderedlist":
case "indent":
case "outdent":
case "formatblock":
case "inserthtml":
case "undo":
case "redo":
case "strikethrough":
_9a8=isSupportedBy(_9a2|ie|_9a4|_9a5);
break;
case "blockdirltr":
case "blockdirrtl":
case "dirltr":
case "dirrtl":
case "inlinedirltr":
case "inlinedirrtl":
_9a8=isSupportedBy(ie);
break;
case "cut":
case "copy":
case "paste":
_9a8=isSupportedBy(ie|_9a2|_9a5);
break;
case "inserttable":
_9a8=isSupportedBy(_9a2|(this.object?ie:0));
break;
case "insertcell":
case "insertcol":
case "insertrow":
case "deletecells":
case "deletecols":
case "deleterows":
case "mergecells":
case "splitcell":
_9a8=isSupportedBy(this.object?ie:0);
break;
default:
return false;
}
return (dojo.render.html.ie&&_9a8.ie)||(dojo.render.html.mozilla&&_9a8.mozilla)||(dojo.render.html.safari&&_9a8.safari)||(_9a6&&_9a8.safari420)||(dojo.render.html.opera&&_9a8.opera);
},execCommand:function(_9a9,_9aa){
var _9ab;
this.focus();
_9a9=this._normalizeCommand(_9a9);
if(_9aa!=undefined){
if(_9a9=="heading"){
throw new Error("unimplemented");
}else{
if(_9a9=="formatblock"){
if(this.object){
_9aa=this._native2LocalFormatNames[_9aa];
}else{
if(dojo.render.html.ie){
_9aa="<"+_9aa+">";
}
}
}
}
}
if(this.object){
switch(_9a9){
case "hilitecolor":
_9a9="setbackcolor";
break;
case "forecolor":
case "backcolor":
case "fontsize":
case "fontname":
_9a9="set"+_9a9;
break;
case "formatblock":
_9a9="setblockformat";
}
if(_9a9=="strikethrough"){
_9a9="inserthtml";
var _9ac=this.document.selection.createRange();
if(!_9ac.htmlText){
return;
}
_9aa=_9ac.htmlText.strike();
}else{
if(_9a9=="inserthorizontalrule"){
_9a9="inserthtml";
_9aa="<hr>";
}
}
if(_9a9=="inserthtml"){
var _9ac=this.document.selection.createRange();
if(this.document.selection.type.toUpperCase()=="CONTROL"){
for(var i=0;i<_9ac.length;i++){
_9ac.item(i).outerHTML=_9aa;
}
}else{
_9ac.pasteHTML(_9aa);
_9ac.select();
}
_9ab=true;
}else{
if(arguments.length==1){
_9ab=this.object.ExecCommand(this._activeX.command[_9a9],this._activeX.ui.noprompt);
}else{
_9ab=this.object.ExecCommand(this._activeX.command[_9a9],this._activeX.ui.noprompt,_9aa);
}
}
}else{
if(_9a9=="inserthtml"){
if(dojo.render.html.ie){
var _9ae=this.document.selection.createRange();
_9ae.pasteHTML(_9aa);
_9ae.select();
return true;
}else{
return this.document.execCommand(_9a9,false,_9aa);
}
}else{
if((_9a9=="unlink")&&(this.queryCommandEnabled("unlink"))&&(dojo.render.html.mozilla)){
var _9af=this.window.getSelection();
var _9b0=_9af.getRangeAt(0);
var _9b1=_9b0.startContainer;
var _9b2=_9b0.startOffset;
var _9b3=_9b0.endContainer;
var _9b4=_9b0.endOffset;
var a=dojo.withGlobal(this.window,"getAncestorElement",dojo.html.selection,["a"]);
dojo.withGlobal(this.window,"selectElement",dojo.html.selection,[a]);
_9ab=this.document.execCommand("unlink",false,null);
var _9b0=this.document.createRange();
_9b0.setStart(_9b1,_9b2);
_9b0.setEnd(_9b3,_9b4);
_9af.removeAllRanges();
_9af.addRange(_9b0);
return _9ab;
}else{
if((_9a9=="hilitecolor")&&(dojo.render.html.mozilla)){
this.document.execCommand("useCSS",false,false);
_9ab=this.document.execCommand(_9a9,false,_9aa);
this.document.execCommand("useCSS",false,true);
}else{
if((dojo.render.html.ie)&&((_9a9=="backcolor")||(_9a9=="forecolor"))){
_9aa=arguments.length>1?_9aa:null;
_9ab=this.document.execCommand(_9a9,false,_9aa);
}else{
_9aa=arguments.length>1?_9aa:null;
if(_9aa||_9a9!="createlink"){
_9ab=this.document.execCommand(_9a9,false,_9aa);
}
}
}
}
}
}
this.onDisplayChanged();
return _9ab;
},queryCommandEnabled:function(_9b6){
_9b6=this._normalizeCommand(_9b6);
if(this.object){
switch(_9b6){
case "hilitecolor":
_9b6="setbackcolor";
break;
case "forecolor":
case "backcolor":
case "fontsize":
case "fontname":
_9b6="set"+_9b6;
break;
case "formatblock":
_9b6="setblockformat";
break;
case "strikethrough":
_9b6="bold";
break;
case "inserthorizontalrule":
return true;
}
if(typeof this._activeX.command[_9b6]=="undefined"){
return false;
}
var _9b7=this.object.QueryStatus(this._activeX.command[_9b6]);
return ((_9b7!=this._activeX.status.notsupported)&&(_9b7!=this._activeX.status.disabled));
}else{
if(dojo.render.html.mozilla){
if(_9b6=="unlink"){
return dojo.withGlobal(this.window,"hasAncestorElement",dojo.html.selection,["a"]);
}else{
if(_9b6=="inserttable"){
return true;
}
}
}
var elem=(dojo.render.html.ie)?this.document.selection.createRange():this.document;
return elem.queryCommandEnabled(_9b6);
}
},queryCommandState:function(_9b9){
_9b9=this._normalizeCommand(_9b9);
if(this.object){
if(_9b9=="forecolor"){
_9b9="setforecolor";
}else{
if(_9b9=="backcolor"){
_9b9="setbackcolor";
}else{
if(_9b9=="strikethrough"){
return dojo.withGlobal(this.window,"hasAncestorElement",dojo.html.selection,["strike"]);
}else{
if(_9b9=="inserthorizontalrule"){
return false;
}
}
}
}
if(typeof this._activeX.command[_9b9]=="undefined"){
return null;
}
var _9ba=this.object.QueryStatus(this._activeX.command[_9b9]);
return ((_9ba==this._activeX.status.latched)||(_9ba==this._activeX.status.ninched));
}else{
return this.document.queryCommandState(_9b9);
}
},queryCommandValue:function(_9bb){
_9bb=this._normalizeCommand(_9bb);
if(this.object){
switch(_9bb){
case "forecolor":
case "backcolor":
case "fontsize":
case "fontname":
_9bb="get"+_9bb;
return this.object.execCommand(this._activeX.command[_9bb],this._activeX.ui.noprompt);
case "formatblock":
var _9bc=this.object.execCommand(this._activeX.command["getblockformat"],this._activeX.ui.noprompt);
if(_9bc){
return this._local2NativeFormatNames[_9bc];
}
}
}else{
if(dojo.render.html.ie&&_9bb=="formatblock"){
return this._local2NativeFormatNames[this.document.queryCommandValue(_9bb)]||this.document.queryCommandValue(_9bb);
}
return this.document.queryCommandValue(_9bb);
}
},placeCursorAtStart:function(){
this.focus();
if(dojo.render.html.moz&&this.editNode.firstChild&&this.editNode.firstChild.nodeType!=dojo.dom.TEXT_NODE){
dojo.withGlobal(this.window,"selectElementChildren",dojo.html.selection,[this.editNode.firstChild]);
}else{
dojo.withGlobal(this.window,"selectElementChildren",dojo.html.selection,[this.editNode]);
}
dojo.withGlobal(this.window,"collapse",dojo.html.selection,[true]);
},placeCursorAtEnd:function(){
this.focus();
if(dojo.render.html.moz&&this.editNode.lastChild&&this.editNode.lastChild.nodeType!=dojo.dom.TEXT_NODE){
dojo.withGlobal(this.window,"selectElementChildren",dojo.html.selection,[this.editNode.lastChild]);
}else{
dojo.withGlobal(this.window,"selectElementChildren",dojo.html.selection,[this.editNode]);
}
dojo.withGlobal(this.window,"collapse",dojo.html.selection,[false]);
},replaceEditorContent:function(html){
html=this._preFilterContent(html);
if(this.isClosed){
this.domNode.innerHTML=html;
}else{
if(this.window&&this.window.getSelection&&!dojo.render.html.moz){
this.editNode.innerHTML=html;
}else{
if((this.window&&this.window.getSelection)||(this.document&&this.document.selection)){
this.execCommand("selectall");
if(dojo.render.html.moz&&!html){
html="&nbsp;";
}
this.execCommand("inserthtml",html);
}
}
}
},_preFilterContent:function(html){
var ec=html;
dojo.lang.forEach(this.contentPreFilters,function(ef){
ec=ef(ec);
});
if(this.contentDomPreFilters.length>0){
var dom=dojo.doc().createElement("div");
dom.style.display="none";
dojo.body().appendChild(dom);
dom.innerHTML=ec;
dojo.lang.forEach(this.contentDomPreFilters,function(ef){
dom=ef(dom);
});
ec=dom.innerHTML;
dojo.body().removeChild(dom);
}
return ec;
},_postFilterContent:function(html){
var ec=html;
if(this.contentDomPostFilters.length>0){
var dom=this.document.createElement("div");
dom.innerHTML=ec;
dojo.lang.forEach(this.contentDomPostFilters,function(ef){
dom=ef(dom);
});
ec=dom.innerHTML;
}
dojo.lang.forEach(this.contentPostFilters,function(ef){
ec=ef(ec);
});
return ec;
},_lastHeight:0,_updateHeight:function(){
if(!this.isLoaded){
return;
}
if(this.height){
return;
}
var _9c8=dojo.html.getBorderBox(this.editNode).height;
if(!_9c8){
_9c8=dojo.html.getBorderBox(this.document.body).height;
}
if(_9c8==0){
dojo.debug("Can not figure out the height of the editing area!");
return;
}
this._lastHeight=_9c8;
this.editorObject.style.height=this._lastHeight+"px";
this.window.scrollTo(0,0);
},_saveContent:function(e){
var _9ca=dojo.doc().getElementById("dojo.widget.RichText.savedContent");
_9ca.value+=this._SEPARATOR+this.saveName+":"+this.getEditorContent();
},getEditorContent:function(){
var ec="";
try{
ec=(this._content.length>0)?this._content:this.editNode.innerHTML;
if(dojo.string.trim(ec)=="&nbsp;"){
ec="";
}
}
catch(e){
}
if(dojo.render.html.ie&&!this.object){
var re=new RegExp("(?:<p>&nbsp;</p>[\n\r]*)+$","i");
ec=ec.replace(re,"");
}
ec=this._postFilterContent(ec);
if(this.relativeImageUrls){
var _9cd=dojo.global().location.protocol+"//"+dojo.global().location.host;
var _9ce=dojo.global().location.pathname;
if(_9ce.match(/\/$/)){
}else{
var _9cf=_9ce.split("/");
if(_9cf.length){
_9cf.pop();
}
_9ce=_9cf.join("/")+"/";
}
var _9d0=new RegExp("(<img[^>]* src=[\"'])("+_9cd+"("+_9ce+")?)","ig");
ec=ec.replace(_9d0,"$1");
}
return ec;
},close:function(save,_9d2){
if(this.isClosed){
return false;
}
if(arguments.length==0){
save=true;
}
this._content=this._postFilterContent(this.editNode.innerHTML);
var _9d3=(this.savedContent!=this._content);
if(this.interval){
clearInterval(this.interval);
}
if(dojo.render.html.ie&&!this.object){
dojo.event.browser.clean(this.editNode);
}
if(this.iframe){
delete this.iframe;
}
if(this.textarea){
with(this.textarea.style){
position="";
left=top="";
if(dojo.render.html.ie){
overflow=this.__overflow;
this.__overflow=null;
}
}
if(save){
this.textarea.value=this._content;
}else{
this.textarea.value=this.savedContent;
}
dojo.html.removeNode(this.domNode);
this.domNode=this.textarea;
}else{
if(save){
if(dojo.render.html.moz){
var nc=dojo.doc().createElement("span");
this.domNode.appendChild(nc);
nc.innerHTML=this.editNode.innerHTML;
}else{
this.domNode.innerHTML=this._content;
}
}else{
this.domNode.innerHTML=this.savedContent;
}
}
dojo.html.removeClass(this.domNode,"RichTextEditable");
this.isClosed=true;
this.isLoaded=false;
delete this.editNode;
if(this.window._frameElement){
this.window._frameElement=null;
}
this.window=null;
this.document=null;
this.object=null;
this.editingArea=null;
this.editorObject=null;
return _9d3;
},destroyRendering:function(){
},destroy:function(){
this.destroyRendering();
if(!this.isClosed){
this.close(false);
}
dojo.widget.RichText.superclass.destroy.call(this);
},connect:function(_9d5,_9d6,_9d7){
dojo.event.connect(_9d5,_9d6,this,_9d7);
},disconnect:function(_9d8,_9d9,_9da){
dojo.event.disconnect(_9d8,_9d9,this,_9da);
},disconnectAllWithRoot:function(_9db){
dojo.deprecated("disconnectAllWithRoot","is deprecated. No need to disconnect manually","0.5");
},_fixContentForMoz:function(html){
html=html.replace(/<strong([ \>])/gi,"<b$1");
html=html.replace(/<\/strong>/gi,"</b>");
html=html.replace(/<em([ \>])/gi,"<i$1");
html=html.replace(/<\/em>/gi,"</i>");
return html;
}});
dojo.provide("dojo.widget.ColorPalette");
dojo.widget.defineWidget("dojo.widget.ColorPalette",dojo.widget.HtmlWidget,{palette:"7x10",_palettes:{"7x10":[["fff","fcc","fc9","ff9","ffc","9f9","9ff","cff","ccf","fcf"],["ccc","f66","f96","ff6","ff3","6f9","3ff","6ff","99f","f9f"],["c0c0c0","f00","f90","fc6","ff0","3f3","6cc","3cf","66c","c6c"],["999","c00","f60","fc3","fc0","3c0","0cc","36f","63f","c3c"],["666","900","c60","c93","990","090","399","33f","60c","939"],["333","600","930","963","660","060","366","009","339","636"],["000","300","630","633","330","030","033","006","309","303"]],"3x4":[["ffffff","00ff00","008000","0000ff"],["c0c0c0","ffff00","ff00ff","000080"],["808080","ff0000","800080","000000"]]},buildRendering:function(){
this.domNode=document.createElement("table");
dojo.html.disableSelection(this.domNode);
dojo.event.connect(this.domNode,"onmousedown",function(e){
e.preventDefault();
});
with(this.domNode){
cellPadding="0";
cellSpacing="1";
border="1";
style.backgroundColor="white";
}
var _9de=this._palettes[this.palette];
for(var i=0;i<_9de.length;i++){
var tr=this.domNode.insertRow(-1);
for(var j=0;j<_9de[i].length;j++){
if(_9de[i][j].length==3){
_9de[i][j]=_9de[i][j].replace(/(.)(.)(.)/,"$1$1$2$2$3$3");
}
var td=tr.insertCell(-1);
with(td.style){
backgroundColor="#"+_9de[i][j];
border="1px solid gray";
width=height="15px";
fontSize="1px";
}
td.color="#"+_9de[i][j];
td.onmouseover=function(e){
this.style.borderColor="white";
};
td.onmouseout=function(e){
this.style.borderColor="gray";
};
dojo.event.connect(td,"onmousedown",this,"onClick");
td.innerHTML="&nbsp;";
}
}
},onClick:function(e){
this.onColorSelect(e.currentTarget.color);
e.currentTarget.style.borderColor="gray";
},onColorSelect:function(_9e6){
}});
dojo.provide("dojo.widget.Editor");
dojo.deprecated("dojo.widget.Editor","is replaced by dojo.widget.Editor2","0.5");
dojo.widget.tags.addParseTreeHandler("dojo:Editor");
dojo.widget.Editor=function(){
dojo.widget.HtmlWidget.call(this);
this.contentFilters=[];
this._toolbars=[];
};
dojo.inherits(dojo.widget.Editor,dojo.widget.HtmlWidget);
dojo.widget.Editor.itemGroups={textGroup:["bold","italic","underline","strikethrough"],blockGroup:["formatBlock","fontName","fontSize"],justifyGroup:["justifyleft","justifycenter","justifyright"],commandGroup:["save","cancel"],colorGroup:["forecolor","hilitecolor"],listGroup:["insertorderedlist","insertunorderedlist"],indentGroup:["outdent","indent"],linkGroup:["createlink","insertimage","inserthorizontalrule"]};
dojo.widget.Editor.formatBlockValues={"Normal":"p","Main heading":"h2","Sub heading":"h3","Sub sub heading":"h4","Preformatted":"pre"};
dojo.widget.Editor.fontNameValues={"Arial":"Arial, Helvetica, sans-serif","Verdana":"Verdana, sans-serif","Times New Roman":"Times New Roman, serif","Courier":"Courier New, monospace"};
dojo.widget.Editor.fontSizeValues={"1 (8 pt)":"1","2 (10 pt)":"2","3 (12 pt)":"3","4 (14 pt)":"4","5 (18 pt)":"5","6 (24 pt)":"6","7 (36 pt)":"7"};
dojo.widget.Editor.defaultItems=["commandGroup","|","blockGroup","|","textGroup","|","colorGroup","|","justifyGroup","|","listGroup","indentGroup","|","linkGroup"];
dojo.widget.Editor.supportedCommands=["save","cancel","|","-","/"," "];
dojo.lang.extend(dojo.widget.Editor,{widgetType:"Editor",saveUrl:"",saveMethod:"post",saveArgName:"editorContent",closeOnSave:false,items:dojo.widget.Editor.defaultItems,formatBlockItems:dojo.lang.shallowCopy(dojo.widget.Editor.formatBlockValues),fontNameItems:dojo.lang.shallowCopy(dojo.widget.Editor.fontNameValues),fontSizeItems:dojo.lang.shallowCopy(dojo.widget.Editor.fontSizeValues),getItemProperties:function(name){
var _9e8={};
switch(name.toLowerCase()){
case "bold":
case "italic":
case "underline":
case "strikethrough":
_9e8.toggleItem=true;
break;
case "justifygroup":
_9e8.defaultButton="justifyleft";
_9e8.preventDeselect=true;
_9e8.buttonGroup=true;
break;
case "listgroup":
_9e8.buttonGroup=true;
break;
case "save":
case "cancel":
_9e8.label=dojo.string.capitalize(name);
break;
case "forecolor":
case "hilitecolor":
_9e8.name=name;
_9e8.toggleItem=true;
_9e8.icon=this.getCommandImage(name);
break;
case "formatblock":
_9e8.name="formatBlock";
_9e8.values=this.formatBlockItems;
break;
case "fontname":
_9e8.name="fontName";
_9e8.values=this.fontNameItems;
case "fontsize":
_9e8.name="fontSize";
_9e8.values=this.fontSizeItems;
}
return _9e8;
},validateItems:true,focusOnLoad:true,minHeight:"1em",_richText:null,_richTextType:"RichText",_toolbarContainer:null,_toolbarContainerType:"ToolbarContainer",_toolbars:[],_toolbarType:"Toolbar",_toolbarItemType:"ToolbarItem",buildRendering:function(args,frag){
var node=frag["dojo:"+this.widgetType.toLowerCase()]["nodeRef"];
var trt=dojo.widget.createWidget(this._richTextType,{focusOnLoad:this.focusOnLoad,minHeight:this.minHeight},node);
var _9ed=this;
setTimeout(function(){
_9ed.setRichText(trt);
_9ed.initToolbar();
_9ed.fillInTemplate(args,frag);
},0);
},setRichText:function(_9ee){
if(this._richText&&this._richText==_9ee){
dojo.debug("Already set the richText to this richText!");
return;
}
if(this._richText&&!this._richText.isClosed){
dojo.debug("You are switching richTexts yet you haven't closed the current one. Losing reference!");
}
this._richText=_9ee;
dojo.event.connect(this._richText,"close",this,"onClose");
dojo.event.connect(this._richText,"onLoad",this,"onLoad");
dojo.event.connect(this._richText,"onDisplayChanged",this,"updateToolbar");
if(this._toolbarContainer){
this._toolbarContainer.enable();
this.updateToolbar(true);
}
},initToolbar:function(){
if(this._toolbarContainer){
return;
}
this._toolbarContainer=dojo.widget.createWidget(this._toolbarContainerType);
var tb=this.addToolbar();
var last=true;
for(var i=0;i<this.items.length;i++){
if(this.items[i]=="\n"){
tb=this.addToolbar();
}else{
if((this.items[i]=="|")&&(!last)){
last=true;
}else{
last=this.addItem(this.items[i],tb);
}
}
}
this.insertToolbar(this._toolbarContainer.domNode,this._richText.domNode);
},insertToolbar:function(_9f2,_9f3){
dojo.html.insertBefore(_9f2,_9f3);
},addToolbar:function(_9f4){
this.initToolbar();
if(!(_9f4 instanceof dojo.widget.Toolbar)){
_9f4=dojo.widget.createWidget(this._toolbarType);
}
this._toolbarContainer.addChild(_9f4);
this._toolbars.push(_9f4);
return _9f4;
},addItem:function(item,tb,_9f7){
if(!tb){
tb=this._toolbars[0];
}
var cmd=((item)&&(!dojo.lang.isUndefined(item["getValue"])))?cmd=item["getValue"]():item;
var _9f9=dojo.widget.Editor.itemGroups;
if(item instanceof dojo.widget.ToolbarItem){
tb.addChild(item);
}else{
if(_9f9[cmd]){
var _9fa=_9f9[cmd];
var _9fb=true;
if(cmd=="justifyGroup"||cmd=="listGroup"){
var _9fc=[cmd];
for(var i=0;i<_9fa.length;i++){
if(_9f7||this.isSupportedCommand(_9fa[i])){
_9fc.push(this.getCommandImage(_9fa[i]));
}else{
_9fb=false;
}
}
if(_9fc.length){
var btn=tb.addChild(_9fc,null,this.getItemProperties(cmd));
dojo.event.connect(btn,"onClick",this,"_action");
dojo.event.connect(btn,"onChangeSelect",this,"_action");
}
return _9fb;
}else{
for(var i=0;i<_9fa.length;i++){
if(!this.addItem(_9fa[i],tb)){
_9fb=false;
}
}
return _9fb;
}
}else{
if((!_9f7)&&(!this.isSupportedCommand(cmd))){
return false;
}
if(_9f7||this.isSupportedCommand(cmd)){
cmd=cmd.toLowerCase();
if(cmd=="formatblock"){
var _9ff=dojo.widget.createWidget("ToolbarSelect",{name:"formatBlock",values:this.formatBlockItems});
tb.addChild(_9ff);
var _a00=this;
dojo.event.connect(_9ff,"onSetValue",function(item,_a02){
_a00.onAction("formatBlock",_a02);
});
}else{
if(cmd=="fontname"){
var _9ff=dojo.widget.createWidget("ToolbarSelect",{name:"fontName",values:this.fontNameItems});
tb.addChild(_9ff);
dojo.event.connect(_9ff,"onSetValue",dojo.lang.hitch(this,function(item,_a04){
this.onAction("fontName",_a04);
}));
}else{
if(cmd=="fontsize"){
var _9ff=dojo.widget.createWidget("ToolbarSelect",{name:"fontSize",values:this.fontSizeItems});
tb.addChild(_9ff);
dojo.event.connect(_9ff,"onSetValue",dojo.lang.hitch(this,function(item,_a06){
this.onAction("fontSize",_a06);
}));
}else{
if(dojo.lang.inArray(cmd,["forecolor","hilitecolor"])){
var btn=tb.addChild(dojo.widget.createWidget("ToolbarColorDialog",this.getItemProperties(cmd)));
dojo.event.connect(btn,"onSetValue",this,"_setValue");
}else{
var btn=tb.addChild(this.getCommandImage(cmd),null,this.getItemProperties(cmd));
if(cmd=="save"){
dojo.event.connect(btn,"onClick",this,"_save");
}else{
if(cmd=="cancel"){
dojo.event.connect(btn,"onClick",this,"_close");
}else{
dojo.event.connect(btn,"onClick",this,"_action");
dojo.event.connect(btn,"onChangeSelect",this,"_action");
}
}
}
}
}
}
}
}
}
return true;
},enableToolbar:function(){
if(this._toolbarContainer){
this._toolbarContainer.domNode.style.display="";
this._toolbarContainer.enable();
}
},disableToolbar:function(hide){
if(hide){
if(this._toolbarContainer){
this._toolbarContainer.domNode.style.display="none";
}
}else{
if(this._toolbarContainer){
this._toolbarContainer.disable();
}
}
},_updateToolbarLastRan:null,_updateToolbarTimer:null,_updateToolbarFrequency:500,updateToolbar:function(_a08){
if(!this._toolbarContainer){
return;
}
var diff=new Date()-this._updateToolbarLastRan;
if(!_a08&&this._updateToolbarLastRan&&(diff<this._updateToolbarFrequency)){
clearTimeout(this._updateToolbarTimer);
var _a0a=this;
this._updateToolbarTimer=setTimeout(function(){
_a0a.updateToolbar();
},this._updateToolbarFrequency/2);
return;
}else{
this._updateToolbarLastRan=new Date();
}
var _a0b=this._toolbarContainer.getItems();
for(var i=0;i<_a0b.length;i++){
var item=_a0b[i];
if(item instanceof dojo.widget.ToolbarSeparator){
continue;
}
var cmd=item._name;
if(cmd=="save"||cmd=="cancel"){
continue;
}else{
if(cmd=="justifyGroup"){
try{
if(!this._richText.queryCommandEnabled("justifyleft")){
item.disable(false,true);
}else{
item.enable(false,true);
var _a0f=item.getItems();
for(var j=0;j<_a0f.length;j++){
var name=_a0f[j]._name;
var _a12=this._richText.queryCommandValue(name);
if(typeof _a12=="boolean"&&_a12){
_a12=name;
break;
}else{
if(typeof _a12=="string"){
_a12="justify"+_a12;
}else{
_a12=null;
}
}
}
if(!_a12){
_a12="justifyleft";
}
item.setValue(_a12,false,true);
}
}
catch(err){
}
}else{
if(cmd=="listGroup"){
var _a13=item.getItems();
for(var j=0;j<_a13.length;j++){
this.updateItem(_a13[j]);
}
}else{
this.updateItem(item);
}
}
}
}
},updateItem:function(item){
try{
var cmd=item._name;
var _a16=this._richText.queryCommandEnabled(cmd);
item.setEnabled(_a16,false,true);
var _a17=this._richText.queryCommandState(cmd);
if(_a17&&cmd=="underline"){
_a17=!this._richText.queryCommandEnabled("unlink");
}
item.setSelected(_a17,false,true);
return true;
}
catch(err){
return false;
}
},supportedCommands:dojo.widget.Editor.supportedCommands.concat(),isSupportedCommand:function(cmd){
var yes=dojo.lang.inArray(cmd,this.supportedCommands);
if(!yes){
try{
var _a1a=this._richText||dojo.widget.HtmlRichText.prototype;
yes=_a1a.queryCommandAvailable(cmd);
}
catch(E){
}
}
return yes;
},getCommandImage:function(cmd){
if(cmd=="|"){
return cmd;
}else{
return dojo.uri.dojoUri("src/widget/templates/buttons/"+cmd+".gif");
}
},_action:function(e){
this._fire("onAction",e.getValue());
},_setValue:function(a,b){
this._fire("onAction",a.getValue(),b);
},_save:function(e){
if(!this._richText.isClosed){
if(this.saveUrl.length){
var _a20={};
_a20[this.saveArgName]=this.getHtml();
dojo.io.bind({method:this.saveMethod,url:this.saveUrl,content:_a20});
}else{
dojo.debug("please set a saveUrl for the editor");
}
if(this.closeOnSave){
this._richText.close(e.getName().toLowerCase()=="save");
}
}
},_close:function(e){
if(!this._richText.isClosed){
this._richText.close(e.getName().toLowerCase()=="save");
}
},onAction:function(cmd,_a23){
switch(cmd){
case "createlink":
if(!(_a23=prompt("Please enter the URL of the link:","http://"))){
return;
}
break;
case "insertimage":
if(!(_a23=prompt("Please enter the URL of the image:","http://"))){
return;
}
break;
}
this._richText.execCommand(cmd,_a23);
},fillInTemplate:function(args,frag){
},_fire:function(_a26){
if(dojo.lang.isFunction(this[_a26])){
var args=[];
if(arguments.length==1){
args.push(this);
}else{
for(var i=1;i<arguments.length;i++){
args.push(arguments[i]);
}
}
this[_a26].apply(this,args);
}
},getHtml:function(){
this._richText.contentFilters=this._richText.contentFilters.concat(this.contentFilters);
return this._richText.getEditorContent();
},getEditorContent:function(){
return this.getHtml();
},onClose:function(save,hide){
this.disableToolbar(hide);
if(save){
this._fire("onSave");
}else{
this._fire("onCancel");
}
},onLoad:function(){
},onSave:function(){
},onCancel:function(){
}});
dojo.provide("dojo.lang.type");
dojo.lang.whatAmI=function(_a2b){
dojo.deprecated("dojo.lang.whatAmI","use dojo.lang.getType instead","0.5");
return dojo.lang.getType(_a2b);
};
dojo.lang.whatAmI.custom={};
dojo.lang.getType=function(_a2c){
try{
if(dojo.lang.isArray(_a2c)){
return "array";
}
if(dojo.lang.isFunction(_a2c)){
return "function";
}
if(dojo.lang.isString(_a2c)){
return "string";
}
if(dojo.lang.isNumber(_a2c)){
return "number";
}
if(dojo.lang.isBoolean(_a2c)){
return "boolean";
}
if(dojo.lang.isAlien(_a2c)){
return "alien";
}
if(dojo.lang.isUndefined(_a2c)){
return "undefined";
}
for(var name in dojo.lang.whatAmI.custom){
if(dojo.lang.whatAmI.custom[name](_a2c)){
return name;
}
}
if(dojo.lang.isObject(_a2c)){
return "object";
}
}
catch(e){
}
return "unknown";
};
dojo.lang.isNumeric=function(_a2e){
return (!isNaN(_a2e)&&isFinite(_a2e)&&(_a2e!=null)&&!dojo.lang.isBoolean(_a2e)&&!dojo.lang.isArray(_a2e)&&!/^\s*$/.test(_a2e));
};
dojo.lang.isBuiltIn=function(_a2f){
return (dojo.lang.isArray(_a2f)||dojo.lang.isFunction(_a2f)||dojo.lang.isString(_a2f)||dojo.lang.isNumber(_a2f)||dojo.lang.isBoolean(_a2f)||(_a2f==null)||(_a2f instanceof Error)||(typeof _a2f=="error"));
};
dojo.lang.isPureObject=function(_a30){
return ((_a30!=null)&&dojo.lang.isObject(_a30)&&_a30.constructor==Object);
};
dojo.lang.isOfType=function(_a31,type,_a33){
var _a34=false;
if(_a33){
_a34=_a33["optional"];
}
if(_a34&&((_a31===null)||dojo.lang.isUndefined(_a31))){
return true;
}
if(dojo.lang.isArray(type)){
var _a35=type;
for(var i in _a35){
var _a37=_a35[i];
if(dojo.lang.isOfType(_a31,_a37)){
return true;
}
}
return false;
}else{
if(dojo.lang.isString(type)){
type=type.toLowerCase();
}
switch(type){
case Array:
case "array":
return dojo.lang.isArray(_a31);
case Function:
case "function":
return dojo.lang.isFunction(_a31);
case String:
case "string":
return dojo.lang.isString(_a31);
case Number:
case "number":
return dojo.lang.isNumber(_a31);
case "numeric":
return dojo.lang.isNumeric(_a31);
case Boolean:
case "boolean":
return dojo.lang.isBoolean(_a31);
case Object:
case "object":
return dojo.lang.isObject(_a31);
case "pureobject":
return dojo.lang.isPureObject(_a31);
case "builtin":
return dojo.lang.isBuiltIn(_a31);
case "alien":
return dojo.lang.isAlien(_a31);
case "undefined":
return dojo.lang.isUndefined(_a31);
case null:
case "null":
return (_a31===null);
case "optional":
dojo.deprecated("dojo.lang.isOfType(value, [type, \"optional\"])","use dojo.lang.isOfType(value, type, {optional: true} ) instead","0.5");
return ((_a31===null)||dojo.lang.isUndefined(_a31));
default:
if(dojo.lang.isFunction(type)){
return (_a31 instanceof type);
}else{
dojo.raise("dojo.lang.isOfType() was passed an invalid type");
}
}
}
dojo.raise("If we get here, it means a bug was introduced above.");
};
dojo.lang.getObject=function(str){
var _a39=str.split("."),i=0,obj=dj_global;
do{
obj=obj[_a39[i++]];
}while(i<_a39.length&&obj);
return (obj!=dj_global)?obj:null;
};
dojo.lang.doesObjectExist=function(str){
var _a3d=str.split("."),i=0,obj=dj_global;
do{
obj=obj[_a3d[i++]];
}while(i<_a3d.length&&obj);
return (obj&&obj!=dj_global);
};
dojo.provide("dojo.lang.assert");
dojo.lang.assert=function(_a40,_a41){
if(!_a40){
var _a42="An assert statement failed.\n"+"The method dojo.lang.assert() was called with a 'false' value.\n";
if(_a41){
_a42+="Here's the assert message:\n"+_a41+"\n";
}
throw new Error(_a42);
}
};
dojo.lang.assertType=function(_a43,type,_a45){
if(dojo.lang.isString(_a45)){
dojo.deprecated("dojo.lang.assertType(value, type, \"message\")","use dojo.lang.assertType(value, type) instead","0.5");
}
if(!dojo.lang.isOfType(_a43,type,_a45)){
if(!dojo.lang.assertType._errorMessage){
dojo.lang.assertType._errorMessage="Type mismatch: dojo.lang.assertType() failed.";
}
dojo.lang.assert(false,dojo.lang.assertType._errorMessage);
}
};
dojo.lang.assertValidKeywords=function(_a46,_a47,_a48){
var key;
if(!_a48){
if(!dojo.lang.assertValidKeywords._errorMessage){
dojo.lang.assertValidKeywords._errorMessage="In dojo.lang.assertValidKeywords(), found invalid keyword:";
}
_a48=dojo.lang.assertValidKeywords._errorMessage;
}
if(dojo.lang.isArray(_a47)){
for(key in _a46){
if(!dojo.lang.inArray(_a47,key)){
dojo.lang.assert(false,_a48+" "+key);
}
}
}else{
for(key in _a46){
if(!(key in _a47)){
dojo.lang.assert(false,_a48+" "+key);
}
}
}
};
dojo.provide("dojo.AdapterRegistry");
dojo.AdapterRegistry=function(_a4a){
this.pairs=[];
this.returnWrappers=_a4a||false;
};
dojo.lang.extend(dojo.AdapterRegistry,{register:function(name,_a4c,wrap,_a4e,_a4f){
var type=(_a4f)?"unshift":"push";
this.pairs[type]([name,_a4c,wrap,_a4e]);
},match:function(){
for(var i=0;i<this.pairs.length;i++){
var pair=this.pairs[i];
if(pair[1].apply(this,arguments)){
if((pair[3])||(this.returnWrappers)){
return pair[2];
}else{
return pair[2].apply(this,arguments);
}
}
}
throw new Error("No match found");
},unregister:function(name){
for(var i=0;i<this.pairs.length;i++){
var pair=this.pairs[i];
if(pair[0]==name){
this.pairs.splice(i,1);
return true;
}
}
return false;
}});
dojo.provide("dojo.lang.repr");
dojo.lang.reprRegistry=new dojo.AdapterRegistry();
dojo.lang.registerRepr=function(name,_a57,wrap,_a59){
dojo.lang.reprRegistry.register(name,_a57,wrap,_a59);
};
dojo.lang.repr=function(obj){
if(typeof (obj)=="undefined"){
return "undefined";
}else{
if(obj===null){
return "null";
}
}
try{
if(typeof (obj["__repr__"])=="function"){
return obj["__repr__"]();
}else{
if((typeof (obj["repr"])=="function")&&(obj.repr!=arguments.callee)){
return obj["repr"]();
}
}
return dojo.lang.reprRegistry.match(obj);
}
catch(e){
if(typeof (obj.NAME)=="string"&&(obj.toString==Function.prototype.toString||obj.toString==Object.prototype.toString)){
return obj.NAME;
}
}
if(typeof (obj)=="function"){
obj=(obj+"").replace(/^\s+/,"");
var idx=obj.indexOf("{");
if(idx!=-1){
obj=obj.substr(0,idx)+"{...}";
}
}
return obj+"";
};
dojo.lang.reprArrayLike=function(arr){
try{
var na=dojo.lang.map(arr,dojo.lang.repr);
return "["+na.join(", ")+"]";
}
catch(e){
}
};
(function(){
var m=dojo.lang;
m.registerRepr("arrayLike",m.isArrayLike,m.reprArrayLike);
m.registerRepr("string",m.isString,m.reprString);
m.registerRepr("numbers",m.isNumber,m.reprNumber);
m.registerRepr("boolean",m.isBoolean,m.reprNumber);
})();
dojo.provide("dojo.lang.*");
dojo.provide("dojo.html.iframe");
dojo.html.iframeContentWindow=function(_a5f){
var win=dojo.html.getDocumentWindow(dojo.html.iframeContentDocument(_a5f))||dojo.html.iframeContentDocument(_a5f).__parent__||(_a5f.name&&document.frames[_a5f.name])||null;
return win;
};
dojo.html.iframeContentDocument=function(_a61){
var doc=_a61.contentDocument||((_a61.contentWindow)&&(_a61.contentWindow.document))||((_a61.name)&&(document.frames[_a61.name])&&(document.frames[_a61.name].document))||null;
return doc;
};
dojo.html.BackgroundIframe=function(node){
if(dojo.render.html.ie55||dojo.render.html.ie60){
var html="<iframe src='javascript:false'"+" style='position: absolute; left: 0px; top: 0px; width: 100%; height: 100%;"+"z-index: -1; filter:Alpha(Opacity=\"0\");' "+">";
this.iframe=dojo.doc().createElement(html);
this.iframe.tabIndex=-1;
if(node){
node.appendChild(this.iframe);
this.domNode=node;
}else{
dojo.body().appendChild(this.iframe);
this.iframe.style.display="none";
}
}
};
dojo.lang.extend(dojo.html.BackgroundIframe,{iframe:null,onResized:function(){
if(this.iframe&&this.domNode&&this.domNode.parentNode){
var _a65=dojo.html.getMarginBox(this.domNode);
if(_a65.width==0||_a65.height==0){
dojo.lang.setTimeout(this,this.onResized,100);
return;
}
this.iframe.style.width=_a65.width+"px";
this.iframe.style.height=_a65.height+"px";
}
},size:function(node){
if(!this.iframe){
return;
}
var _a67=dojo.html.toCoordinateObject(node,true,dojo.html.boxSizing.BORDER_BOX);
with(this.iframe.style){
width=_a67.width+"px";
height=_a67.height+"px";
left=_a67.left+"px";
top=_a67.top+"px";
}
},setZIndex:function(node){
if(!this.iframe){
return;
}
if(dojo.dom.isNode(node)){
this.iframe.style.zIndex=dojo.html.getStyle(node,"z-index")-1;
}else{
if(!isNaN(node)){
this.iframe.style.zIndex=node;
}
}
},show:function(){
if(this.iframe){
this.iframe.style.display="block";
}
},hide:function(){
if(this.iframe){
this.iframe.style.display="none";
}
},remove:function(){
if(this.iframe){
dojo.html.removeNode(this.iframe,true);
delete this.iframe;
this.iframe=null;
}
}});
dojo.provide("dojo.widget.PopupContainer");
dojo.declare("dojo.widget.PopupContainerBase",null,function(){
this.queueOnAnimationFinish=[];
},{isContainer:true,templateString:"<div dojoAttachPoint=\"containerNode\" style=\"display:none;position:absolute;\" class=\"dojoPopupContainer\" ></div>",isShowingNow:false,currentSubpopup:null,beginZIndex:1000,parentPopup:null,parent:null,popupIndex:0,aroundBox:dojo.html.boxSizing.BORDER_BOX,openedForWindow:null,processKey:function(evt){
return false;
},applyPopupBasicStyle:function(){
with(this.domNode.style){
display="none";
position="absolute";
}
},aboutToShow:function(){
},open:function(x,y,_a6c,_a6d,_a6e,_a6f){
if(this.isShowingNow){
return;
}
if(this.animationInProgress){
this.queueOnAnimationFinish.push(this.open,arguments);
return;
}
this.aboutToShow();
var _a70=false,node,_a72;
if(typeof x=="object"){
node=x;
_a72=_a6d;
_a6d=_a6c;
_a6c=y;
_a70=true;
}
this.parent=_a6c;
dojo.body().appendChild(this.domNode);
_a6d=_a6d||_a6c["domNode"]||[];
var _a73=null;
this.isTopLevel=true;
while(_a6c){
if(_a6c!==this&&(_a6c.setOpenedSubpopup!=undefined&&_a6c.applyPopupBasicStyle!=undefined)){
_a73=_a6c;
this.isTopLevel=false;
_a73.setOpenedSubpopup(this);
break;
}
_a6c=_a6c.parent;
}
this.parentPopup=_a73;
this.popupIndex=_a73?_a73.popupIndex+1:1;
if(this.isTopLevel){
var _a74=dojo.html.isNode(_a6d)?_a6d:null;
dojo.widget.PopupManager.opened(this,_a74);
}
if(this.isTopLevel&&!dojo.withGlobal(this.openedForWindow||dojo.global(),dojo.html.selection.isCollapsed)){
this._bookmark=dojo.withGlobal(this.openedForWindow||dojo.global(),dojo.html.selection.getBookmark);
}else{
this._bookmark=null;
}
if(_a6d instanceof Array){
_a6d={left:_a6d[0],top:_a6d[1],width:0,height:0};
}
with(this.domNode.style){
display="";
zIndex=this.beginZIndex+this.popupIndex;
}
if(_a70){
this.move(node,_a6f,_a72);
}else{
this.move(x,y,_a6f,_a6e);
}
this.domNode.style.display="none";
this.explodeSrc=_a6d;
this.show();
this.isShowingNow=true;
},move:function(x,y,_a77,_a78){
var _a79=(typeof x=="object");
if(_a79){
var _a7a=_a77;
var node=x;
_a77=y;
if(!_a7a){
_a7a={"BL":"TL","TL":"BL"};
}
dojo.html.placeOnScreenAroundElement(this.domNode,node,_a77,this.aroundBox,_a7a);
}else{
if(!_a78){
_a78="TL,TR,BL,BR";
}
dojo.html.placeOnScreen(this.domNode,x,y,_a77,true,_a78);
}
},close:function(_a7c){
if(_a7c){
this.domNode.style.display="none";
}
if(this.animationInProgress){
this.queueOnAnimationFinish.push(this.close,[]);
return;
}
this.closeSubpopup(_a7c);
this.hide();
if(this.bgIframe){
this.bgIframe.hide();
this.bgIframe.size({left:0,top:0,width:0,height:0});
}
if(this.isTopLevel){
dojo.widget.PopupManager.closed(this);
}
this.isShowingNow=false;
if(this.parent){
setTimeout(dojo.lang.hitch(this,function(){
try{
if(this.parent["focus"]){
this.parent.focus();
}else{
this.parent.domNode.focus();
}
}
catch(e){
dojo.debug("No idea how to focus to parent",e);
}
}),10);
}
if(this._bookmark&&dojo.withGlobal(this.openedForWindow||dojo.global(),dojo.html.selection.isCollapsed)){
if(this.openedForWindow){
this.openedForWindow.focus();
}
try{
dojo.withGlobal(this.openedForWindow||dojo.global(),"moveToBookmark",dojo.html.selection,[this._bookmark]);
}
catch(e){
}
}
this._bookmark=null;
},closeAll:function(_a7d){
if(this.parentPopup){
this.parentPopup.closeAll(_a7d);
}else{
this.close(_a7d);
}
},setOpenedSubpopup:function(_a7e){
this.currentSubpopup=_a7e;
},closeSubpopup:function(_a7f){
if(this.currentSubpopup==null){
return;
}
this.currentSubpopup.close(_a7f);
this.currentSubpopup=null;
},onShow:function(){
dojo.widget.PopupContainer.superclass.onShow.apply(this,arguments);
this.openedSize={w:this.domNode.style.width,h:this.domNode.style.height};
if(dojo.render.html.ie){
if(!this.bgIframe){
this.bgIframe=new dojo.html.BackgroundIframe();
this.bgIframe.setZIndex(this.domNode);
}
this.bgIframe.size(this.domNode);
this.bgIframe.show();
}
this.processQueue();
},processQueue:function(){
if(!this.queueOnAnimationFinish.length){
return;
}
var func=this.queueOnAnimationFinish.shift();
var args=this.queueOnAnimationFinish.shift();
func.apply(this,args);
},onHide:function(){
dojo.widget.HtmlWidget.prototype.onHide.call(this);
if(this.openedSize){
with(this.domNode.style){
width=this.openedSize.w;
height=this.openedSize.h;
}
}
this.processQueue();
}});
dojo.widget.defineWidget("dojo.widget.PopupContainer",[dojo.widget.HtmlWidget,dojo.widget.PopupContainerBase],{});
dojo.widget.PopupManager=new function(){
this.currentMenu=null;
this.currentButton=null;
this.currentFocusMenu=null;
this.focusNode=null;
this.registeredWindows=[];
this.registerWin=function(win){
if(!win.__PopupManagerRegistered){
dojo.event.connect(win.document,"onmousedown",this,"onClick");
dojo.event.connect(win,"onscroll",this,"onClick");
dojo.event.connect(win.document,"onkey",this,"onKey");
win.__PopupManagerRegistered=true;
this.registeredWindows.push(win);
}
};
this.registerAllWindows=function(_a83){
if(!_a83){
_a83=dojo.html.getDocumentWindow(window.top&&window.top.document||window.document);
}
this.registerWin(_a83);
for(var i=0;i<_a83.frames.length;i++){
try{
var win=dojo.html.getDocumentWindow(_a83.frames[i].document);
if(win){
this.registerAllWindows(win);
}
}
catch(e){
}
}
};
this.unRegisterWin=function(win){
if(win.__PopupManagerRegistered){
dojo.event.disconnect(win.document,"onmousedown",this,"onClick");
dojo.event.disconnect(win,"onscroll",this,"onClick");
dojo.event.disconnect(win.document,"onkey",this,"onKey");
win.__PopupManagerRegistered=false;
}
};
this.unRegisterAllWindows=function(){
for(var i=0;i<this.registeredWindows.length;++i){
this.unRegisterWin(this.registeredWindows[i]);
}
this.registeredWindows=[];
};
dojo.addOnLoad(this,"registerAllWindows");
dojo.addOnUnload(this,"unRegisterAllWindows");
this.closed=function(menu){
if(this.currentMenu==menu){
this.currentMenu=null;
this.currentButton=null;
this.currentFocusMenu=null;
}
};
this.opened=function(menu,_a8a){
if(menu==this.currentMenu){
return;
}
if(this.currentMenu){
this.currentMenu.close();
}
this.currentMenu=menu;
this.currentFocusMenu=menu;
this.currentButton=_a8a;
};
this.setFocusedMenu=function(menu){
this.currentFocusMenu=menu;
};
this.onKey=function(e){
if(!e.key){
return;
}
if(!this.currentMenu||!this.currentMenu.isShowingNow){
return;
}
var m=this.currentFocusMenu;
while(m){
if(m.processKey(e)){
e.preventDefault();
e.stopPropagation();
break;
}
m=m.parentPopup;
}
},this.onClick=function(e){
if(!this.currentMenu){
return;
}
var _a8f=dojo.html.getScroll().offset;
var m=this.currentMenu;
while(m){
if(dojo.html.overElement(m.domNode,e)||dojo.html.isDescendantOf(e.target,m.domNode)){
return;
}
m=m.currentSubpopup;
}
if(this.currentButton&&dojo.html.overElement(this.currentButton,e)){
return;
}
this.currentMenu.close();
};
};
dojo.provide("dojo.widget.ContentPane");
dojo.widget.defineWidget("dojo.widget.ContentPane",dojo.widget.HtmlWidget,function(){
this._styleNodes=[];
this._onLoadStack=[];
this._onUnloadStack=[];
this._callOnUnload=false;
this._ioBindObj;
this.scriptScope;
this.bindArgs={};
},{isContainer:true,adjustPaths:true,href:"",extractContent:true,parseContent:true,cacheContent:true,preload:false,refreshOnShow:false,handler:"",executeScripts:false,scriptSeparation:true,loadingMessage:"Loading...",isLoaded:false,postCreate:function(args,frag,_a93){
if(this.handler!==""){
this.setHandler(this.handler);
}
if(this.isShowing()||this.preload){
this.loadContents();
}
},show:function(){
if(this.refreshOnShow){
this.refresh();
}else{
this.loadContents();
}
dojo.widget.ContentPane.superclass.show.call(this);
},refresh:function(){
this.isLoaded=false;
this.loadContents();
},loadContents:function(){
if(this.isLoaded){
return;
}
if(dojo.lang.isFunction(this.handler)){
this._runHandler();
}else{
if(this.href!=""){
this._downloadExternalContent(this.href,this.cacheContent&&!this.refreshOnShow);
}
}
},setUrl:function(url){
this.href=url;
this.isLoaded=false;
if(this.preload||this.isShowing()){
this.loadContents();
}
},abort:function(){
var bind=this._ioBindObj;
if(!bind||!bind.abort){
return;
}
bind.abort();
delete this._ioBindObj;
},_downloadExternalContent:function(url,_a97){
this.abort();
this._handleDefaults(this.loadingMessage,"onDownloadStart");
var self=this;
this._ioBindObj=dojo.io.bind(this._cacheSetting({url:url,mimetype:"text/html",handler:function(type,data,xhr){
delete self._ioBindObj;
if(type=="load"){
self.onDownloadEnd.call(self,url,data);
}else{
var e={responseText:xhr.responseText,status:xhr.status,statusText:xhr.statusText,responseHeaders:xhr.getAllResponseHeaders(),text:"Error loading '"+url+"' ("+xhr.status+" "+xhr.statusText+")"};
self._handleDefaults.call(self,e,"onDownloadError");
self.onLoad();
}
}},_a97));
},_cacheSetting:function(_a9d,_a9e){
for(var x in this.bindArgs){
if(dojo.lang.isUndefined(_a9d[x])){
_a9d[x]=this.bindArgs[x];
}
}
if(dojo.lang.isUndefined(_a9d.useCache)){
_a9d.useCache=_a9e;
}
if(dojo.lang.isUndefined(_a9d.preventCache)){
_a9d.preventCache=!_a9e;
}
if(dojo.lang.isUndefined(_a9d.mimetype)){
_a9d.mimetype="text/html";
}
return _a9d;
},onLoad:function(e){
this._runStack("_onLoadStack");
this.isLoaded=true;
},onUnLoad:function(e){
dojo.deprecated(this.widgetType+".onUnLoad, use .onUnload (lowercased load)",0.5);
},onUnload:function(e){
this._runStack("_onUnloadStack");
delete this.scriptScope;
if(this.onUnLoad!==dojo.widget.ContentPane.prototype.onUnLoad){
this.onUnLoad.apply(this,arguments);
}
},_runStack:function(_aa3){
var st=this[_aa3];
var err="";
var _aa6=this.scriptScope||window;
for(var i=0;i<st.length;i++){
try{
st[i].call(_aa6);
}
catch(e){
err+="\n"+st[i]+" failed: "+e.description;
}
}
this[_aa3]=[];
if(err.length){
var name=(_aa3=="_onLoadStack")?"addOnLoad":"addOnUnLoad";
this._handleDefaults(name+" failure\n "+err,"onExecError","debug");
}
},addOnLoad:function(obj,func){
this._pushOnStack(this._onLoadStack,obj,func);
},addOnUnload:function(obj,func){
this._pushOnStack(this._onUnloadStack,obj,func);
},addOnUnLoad:function(){
dojo.deprecated(this.widgetType+".addOnUnLoad, use addOnUnload instead. (lowercased Load)",0.5);
this.addOnUnload.apply(this,arguments);
},_pushOnStack:function(_aad,obj,func){
if(typeof func=="undefined"){
_aad.push(obj);
}else{
_aad.push(function(){
obj[func]();
});
}
},destroy:function(){
this.onUnload();
dojo.widget.ContentPane.superclass.destroy.call(this);
},onExecError:function(e){
},onContentError:function(e){
},onDownloadError:function(e){
},onDownloadStart:function(e){
},onDownloadEnd:function(url,data){
data=this.splitAndFixPaths(data,url);
this.setContent(data);
},_handleDefaults:function(e,_ab7,_ab8){
if(!_ab7){
_ab7="onContentError";
}
if(dojo.lang.isString(e)){
e={text:e};
}
if(!e.text){
e.text=e.toString();
}
e.toString=function(){
return this.text;
};
if(typeof e.returnValue!="boolean"){
e.returnValue=true;
}
if(typeof e.preventDefault!="function"){
e.preventDefault=function(){
this.returnValue=false;
};
}
this[_ab7](e);
if(e.returnValue){
switch(_ab8){
case true:
case "alert":
alert(e.toString());
break;
case "debug":
dojo.debug(e.toString());
break;
default:
if(this._callOnUnload){
this.onUnload();
}
this._callOnUnload=false;
if(arguments.callee._loopStop){
dojo.debug(e.toString());
}else{
arguments.callee._loopStop=true;
this._setContent(e.toString());
}
}
}
arguments.callee._loopStop=false;
},splitAndFixPaths:function(s,url){
var _abb=[],_abc=[],tmp=[];
var _abe=[],_abf=[],attr=[],_ac1=[];
var str="",path="",fix="",_ac5="",tag="",_ac7="";
if(!url){
url="./";
}
if(s){
var _ac8=/<title[^>]*>([\s\S]*?)<\/title>/i;
while(_abe=_ac8.exec(s)){
_abb.push(_abe[1]);
s=s.substring(0,_abe.index)+s.substr(_abe.index+_abe[0].length);
}
if(this.adjustPaths){
var _ac9=/<[a-z][a-z0-9]*[^>]*\s(?:(?:src|href|style)=[^>])+[^>]*>/i;
var _aca=/\s(src|href|style)=(['"]?)([\w()\[\]\/.,\\'"-:;#=&?\s@]+?)\2/i;
var _acb=/^(?:[#]|(?:(?:https?|ftps?|file|javascript|mailto|news):))/;
while(tag=_ac9.exec(s)){
str+=s.substring(0,tag.index);
s=s.substring((tag.index+tag[0].length),s.length);
tag=tag[0];
_ac5="";
while(attr=_aca.exec(tag)){
path="";
_ac7=attr[3];
switch(attr[1].toLowerCase()){
case "src":
case "href":
if(_acb.exec(_ac7)){
path=_ac7;
}else{
path=(new dojo.uri.Uri(url,_ac7).toString());
}
break;
case "style":
path=dojo.html.fixPathsInCssText(_ac7,url);
break;
default:
path=_ac7;
}
fix=" "+attr[1]+"="+attr[2]+path+attr[2];
_ac5+=tag.substring(0,attr.index)+fix;
tag=tag.substring((attr.index+attr[0].length),tag.length);
}
str+=_ac5+tag;
}
s=str+s;
}
_ac8=/(?:<(style)[^>]*>([\s\S]*?)<\/style>|<link ([^>]*rel=['"]?stylesheet['"]?[^>]*)>)/i;
while(_abe=_ac8.exec(s)){
if(_abe[1]&&_abe[1].toLowerCase()=="style"){
_ac1.push(dojo.html.fixPathsInCssText(_abe[2],url));
}else{
if(attr=_abe[3].match(/href=(['"]?)([^'">]*)\1/i)){
_ac1.push({path:attr[2]});
}
}
s=s.substring(0,_abe.index)+s.substr(_abe.index+_abe[0].length);
}
var _ac8=/<script([^>]*)>([\s\S]*?)<\/script>/i;
var _acc=/src=(['"]?)([^"']*)\1/i;
var _acd=/.*(\bdojo\b\.js(?:\.uncompressed\.js)?)$/;
var _ace=/(?:var )?\bdjConfig\b(?:[\s]*=[\s]*\{[^}]+\}|\.[\w]*[\s]*=[\s]*[^;\n]*)?;?|dojo\.hostenv\.writeIncludes\(\s*\);?/g;
var _acf=/dojo\.(?:(?:require(?:After)?(?:If)?)|(?:widget\.(?:manager\.)?registerWidgetPackage)|(?:(?:hostenv\.)?setModulePrefix|registerModulePath)|defineNamespace)\((['"]).*?\1\)\s*;?/;
while(_abe=_ac8.exec(s)){
if(this.executeScripts&&_abe[1]){
if(attr=_acc.exec(_abe[1])){
if(_acd.exec(attr[2])){
dojo.debug("Security note! inhibit:"+attr[2]+" from  being loaded again.");
}else{
_abc.push({path:attr[2]});
}
}
}
if(_abe[2]){
var sc=_abe[2].replace(_ace,"");
if(!sc){
continue;
}
while(tmp=_acf.exec(sc)){
_abf.push(tmp[0]);
sc=sc.substring(0,tmp.index)+sc.substr(tmp.index+tmp[0].length);
}
if(this.executeScripts){
_abc.push(sc);
}
}
s=s.substr(0,_abe.index)+s.substr(_abe.index+_abe[0].length);
}
if(this.extractContent){
_abe=s.match(/<body[^>]*>\s*([\s\S]+)\s*<\/body>/im);
if(_abe){
s=_abe[1];
}
}
if(this.executeScripts&&this.scriptSeparation){
var _ac8=/(<[a-zA-Z][a-zA-Z0-9]*\s[^>]*?\S=)((['"])[^>]*scriptScope[^>]*>)/;
var _ad1=/([\s'";:\(])scriptScope(.*)/;
str="";
while(tag=_ac8.exec(s)){
tmp=((tag[3]=="'")?"\"":"'");
fix="";
str+=s.substring(0,tag.index)+tag[1];
while(attr=_ad1.exec(tag[2])){
tag[2]=tag[2].substring(0,attr.index)+attr[1]+"dojo.widget.byId("+tmp+this.widgetId+tmp+").scriptScope"+attr[2];
}
str+=tag[2];
s=s.substr(tag.index+tag[0].length);
}
s=str+s;
}
}
return {"xml":s,"styles":_ac1,"titles":_abb,"requires":_abf,"scripts":_abc,"url":url};
},_setContent:function(cont){
this.destroyChildren();
for(var i=0;i<this._styleNodes.length;i++){
if(this._styleNodes[i]&&this._styleNodes[i].parentNode){
this._styleNodes[i].parentNode.removeChild(this._styleNodes[i]);
}
}
this._styleNodes=[];
try{
var node=this.containerNode||this.domNode;
while(node.firstChild){
dojo.html.destroyNode(node.firstChild);
}
if(typeof cont!="string"){
node.appendChild(cont);
}else{
node.innerHTML=cont;
}
}
catch(e){
e.text="Couldn't load content:"+e.description;
this._handleDefaults(e,"onContentError");
}
},setContent:function(data){
this.abort();
if(this._callOnUnload){
this.onUnload();
}
this._callOnUnload=true;
if(!data||dojo.html.isNode(data)){
this._setContent(data);
this.onResized();
this.onLoad();
}else{
if(typeof data.xml!="string"){
this.href="";
data=this.splitAndFixPaths(data);
}
this._setContent(data.xml);
for(var i=0;i<data.styles.length;i++){
if(data.styles[i].path){
this._styleNodes.push(dojo.html.insertCssFile(data.styles[i].path,dojo.doc(),false,true));
}else{
this._styleNodes.push(dojo.html.insertCssText(data.styles[i]));
}
}
if(this.parseContent){
for(var i=0;i<data.requires.length;i++){
try{
eval(data.requires[i]);
}
catch(e){
e.text="ContentPane: error in package loading calls, "+(e.description||e);
this._handleDefaults(e,"onContentError","debug");
}
}
}
var _ad7=this;
function asyncParse(){
if(_ad7.executeScripts){
_ad7._executeScripts(data.scripts);
}
if(_ad7.parseContent){
var node=_ad7.containerNode||_ad7.domNode;
var _ad9=new dojo.xml.Parse();
var frag=_ad9.parseElement(node,null,true);
dojo.widget.getParser().createSubComponents(frag,_ad7);
}
_ad7.onResized();
_ad7.onLoad();
}
if(dojo.hostenv.isXDomain&&data.requires.length){
dojo.addOnLoad(asyncParse);
}else{
asyncParse();
}
}
},setHandler:function(_adb){
var fcn=dojo.lang.isFunction(_adb)?_adb:window[_adb];
if(!dojo.lang.isFunction(fcn)){
this._handleDefaults("Unable to set handler, '"+_adb+"' not a function.","onExecError",true);
return;
}
this.handler=function(){
return fcn.apply(this,arguments);
};
},_runHandler:function(){
var ret=true;
if(dojo.lang.isFunction(this.handler)){
this.handler(this,this.domNode);
ret=false;
}
this.onLoad();
return ret;
},_executeScripts:function(_ade){
var self=this;
var tmp="",code="";
for(var i=0;i<_ade.length;i++){
if(_ade[i].path){
dojo.io.bind(this._cacheSetting({"url":_ade[i].path,"load":function(type,_ae4){
dojo.lang.hitch(self,tmp=";"+_ae4);
},"error":function(type,_ae6){
_ae6.text=type+" downloading remote script";
self._handleDefaults.call(self,_ae6,"onExecError","debug");
},"mimetype":"text/plain","sync":true},this.cacheContent));
code+=tmp;
}else{
code+=_ade[i];
}
}
try{
if(this.scriptSeparation){
delete this.scriptScope;
this.scriptScope=new (new Function("_container_",code+"; return this;"))(self);
}else{
var djg=dojo.global();
if(djg.execScript){
djg.execScript(code);
}else{
var djd=dojo.doc();
var sc=djd.createElement("script");
sc.appendChild(djd.createTextNode(code));
(this.containerNode||this.domNode).appendChild(sc);
}
}
}
catch(e){
e.text="Error running scripts from content:\n"+e.description;
this._handleDefaults(e,"onExecError","debug");
}
}});
dojo.provide("dojo.widget.Editor2Toolbar");
dojo.lang.declare("dojo.widget.HandlerManager",null,function(){
this._registeredHandlers=[];
},{registerHandler:function(obj,func){
if(arguments.length==2){
this._registeredHandlers.push(function(){
return obj[func].apply(obj,arguments);
});
}else{
this._registeredHandlers.push(obj);
}
},removeHandler:function(func){
for(var i=0;i<this._registeredHandlers.length;i++){
if(func===this._registeredHandlers[i]){
delete this._registeredHandlers[i];
return;
}
}
dojo.debug("HandlerManager handler "+func+" is not registered, can not remove.");
},destroy:function(){
for(var i=0;i<this._registeredHandlers.length;i++){
delete this._registeredHandlers[i];
}
}});
dojo.widget.Editor2ToolbarItemManager=new dojo.widget.HandlerManager;
dojo.lang.mixin(dojo.widget.Editor2ToolbarItemManager,{getToolbarItem:function(name){
var item;
name=name.toLowerCase();
for(var i=0;i<this._registeredHandlers.length;i++){
item=this._registeredHandlers[i](name);
if(item){
return item;
}
}
switch(name){
case "bold":
case "copy":
case "cut":
case "delete":
case "indent":
case "inserthorizontalrule":
case "insertorderedlist":
case "insertunorderedlist":
case "italic":
case "justifycenter":
case "justifyfull":
case "justifyleft":
case "justifyright":
case "outdent":
case "paste":
case "redo":
case "removeformat":
case "selectall":
case "strikethrough":
case "subscript":
case "superscript":
case "underline":
case "undo":
case "unlink":
case "createlink":
case "insertimage":
case "htmltoggle":
item=new dojo.widget.Editor2ToolbarButton(name);
break;
case "forecolor":
case "hilitecolor":
item=new dojo.widget.Editor2ToolbarColorPaletteButton(name);
break;
case "plainformatblock":
item=new dojo.widget.Editor2ToolbarFormatBlockPlainSelect("formatblock");
break;
case "formatblock":
item=new dojo.widget.Editor2ToolbarFormatBlockSelect("formatblock");
break;
case "fontsize":
item=new dojo.widget.Editor2ToolbarFontSizeSelect("fontsize");
break;
case "fontname":
item=new dojo.widget.Editor2ToolbarFontNameSelect("fontname");
break;
case "inserttable":
case "insertcell":
case "insertcol":
case "insertrow":
case "deletecells":
case "deletecols":
case "deleterows":
case "mergecells":
case "splitcell":
dojo.debug(name+" is implemented in dojo.widget.Editor2Plugin.TableOperation, please require it first.");
break;
case "inserthtml":
case "blockdirltr":
case "blockdirrtl":
case "dirltr":
case "dirrtl":
case "inlinedirltr":
case "inlinedirrtl":
dojo.debug("Not yet implemented toolbar item: "+name);
break;
default:
dojo.debug("dojo.widget.Editor2ToolbarItemManager.getToolbarItem: Unknown toolbar item: "+name);
}
return item;
}});
dojo.addOnUnload(dojo.widget.Editor2ToolbarItemManager,"destroy");
dojo.declare("dojo.widget.Editor2ToolbarButton",null,function(name){
this._name=name;
},{create:function(node,_af4,_af5){
this._domNode=node;
var cmd=_af4.parent.getCommand(this._name);
if(cmd){
this._domNode.title=cmd.getText();
}
this.disableSelection(this._domNode);
this._parentToolbar=_af4;
dojo.event.connect(this._domNode,"onclick",this,"onClick");
if(!_af5){
dojo.event.connect(this._domNode,"onmouseover",this,"onMouseOver");
dojo.event.connect(this._domNode,"onmouseout",this,"onMouseOut");
}
},disableSelection:function(_af7){
dojo.html.disableSelection(_af7);
var _af8=_af7.all||_af7.getElementsByTagName("*");
for(var x=0;x<_af8.length;x++){
dojo.html.disableSelection(_af8[x]);
}
},onMouseOver:function(){
var _afa=dojo.widget.Editor2Manager.getCurrentInstance();
if(_afa){
var _afb=_afa.getCommand(this._name);
if(_afb&&_afb.getState()!=dojo.widget.Editor2Manager.commandState.Disabled){
this.highlightToolbarItem();
}
}
},onMouseOut:function(){
this.unhighlightToolbarItem();
},destroy:function(){
this._domNode=null;
this._parentToolbar=null;
},onClick:function(e){
if(this._domNode&&!this._domNode.disabled&&this._parentToolbar.checkAvailability()){
e.preventDefault();
e.stopPropagation();
var _afd=dojo.widget.Editor2Manager.getCurrentInstance();
if(_afd){
var _afe=_afd.getCommand(this._name);
if(_afe){
_afe.execute();
}
}
}
},refreshState:function(){
var _aff=dojo.widget.Editor2Manager.getCurrentInstance();
var em=dojo.widget.Editor2Manager;
if(_aff){
var _b01=_aff.getCommand(this._name);
if(_b01){
var _b02=_b01.getState();
if(_b02!=this._lastState){
switch(_b02){
case em.commandState.Latched:
this.latchToolbarItem();
break;
case em.commandState.Enabled:
this.enableToolbarItem();
break;
case em.commandState.Disabled:
default:
this.disableToolbarItem();
}
this._lastState=_b02;
}
}
}
return em.commandState.Enabled;
},latchToolbarItem:function(){
this._domNode.disabled=false;
this.removeToolbarItemStyle(this._domNode);
dojo.html.addClass(this._domNode,this._parentToolbar.ToolbarLatchedItemStyle);
},enableToolbarItem:function(){
this._domNode.disabled=false;
this.removeToolbarItemStyle(this._domNode);
dojo.html.addClass(this._domNode,this._parentToolbar.ToolbarEnabledItemStyle);
},disableToolbarItem:function(){
this._domNode.disabled=true;
this.removeToolbarItemStyle(this._domNode);
dojo.html.addClass(this._domNode,this._parentToolbar.ToolbarDisabledItemStyle);
},highlightToolbarItem:function(){
dojo.html.addClass(this._domNode,this._parentToolbar.ToolbarHighlightedItemStyle);
},unhighlightToolbarItem:function(){
dojo.html.removeClass(this._domNode,this._parentToolbar.ToolbarHighlightedItemStyle);
},removeToolbarItemStyle:function(){
dojo.html.removeClass(this._domNode,this._parentToolbar.ToolbarEnabledItemStyle);
dojo.html.removeClass(this._domNode,this._parentToolbar.ToolbarLatchedItemStyle);
dojo.html.removeClass(this._domNode,this._parentToolbar.ToolbarDisabledItemStyle);
this.unhighlightToolbarItem();
}});
dojo.declare("dojo.widget.Editor2ToolbarDropDownButton",dojo.widget.Editor2ToolbarButton,{onClick:function(){
if(this._domNode&&!this._domNode.disabled&&this._parentToolbar.checkAvailability()){
if(!this._dropdown){
this._dropdown=dojo.widget.createWidget("PopupContainer",{});
this._domNode.appendChild(this._dropdown.domNode);
}
if(this._dropdown.isShowingNow){
this._dropdown.close();
}else{
this.onDropDownShown();
this._dropdown.open(this._domNode,null,this._domNode);
}
}
},destroy:function(){
this.onDropDownDestroy();
if(this._dropdown){
this._dropdown.destroy();
}
dojo.widget.Editor2ToolbarDropDownButton.superclass.destroy.call(this);
},onDropDownShown:function(){
},onDropDownDestroy:function(){
}});
dojo.declare("dojo.widget.Editor2ToolbarColorPaletteButton",dojo.widget.Editor2ToolbarDropDownButton,{onDropDownShown:function(){
if(!this._colorpalette){
this._colorpalette=dojo.widget.createWidget("ColorPalette",{});
this._dropdown.addChild(this._colorpalette);
this.disableSelection(this._dropdown.domNode);
this.disableSelection(this._colorpalette.domNode);
dojo.event.connect(this._colorpalette,"onColorSelect",this,"setColor");
dojo.event.connect(this._dropdown,"open",this,"latchToolbarItem");
dojo.event.connect(this._dropdown,"close",this,"enableToolbarItem");
}
},setColor:function(_b03){
this._dropdown.close();
var _b04=dojo.widget.Editor2Manager.getCurrentInstance();
if(_b04){
var _b05=_b04.getCommand(this._name);
if(_b05){
_b05.execute(_b03);
}
}
}});
dojo.declare("dojo.widget.Editor2ToolbarFormatBlockPlainSelect",dojo.widget.Editor2ToolbarButton,{create:function(node,_b07){
this._domNode=node;
this._parentToolbar=_b07;
this._domNode=node;
this.disableSelection(this._domNode);
dojo.event.connect(this._domNode,"onchange",this,"onChange");
},destroy:function(){
this._domNode=null;
},onChange:function(){
if(this._parentToolbar.checkAvailability()){
var sv=this._domNode.value.toLowerCase();
var _b09=dojo.widget.Editor2Manager.getCurrentInstance();
if(_b09){
var _b0a=_b09.getCommand(this._name);
if(_b0a){
_b0a.execute(sv);
}
}
}
},refreshState:function(){
if(this._domNode){
dojo.widget.Editor2ToolbarFormatBlockPlainSelect.superclass.refreshState.call(this);
var _b0b=dojo.widget.Editor2Manager.getCurrentInstance();
if(_b0b){
var _b0c=_b0b.getCommand(this._name);
if(_b0c){
var _b0d=_b0c.getValue();
if(!_b0d){
_b0d="";
}
dojo.lang.forEach(this._domNode.options,function(item){
if(item.value.toLowerCase()==_b0d.toLowerCase()){
item.selected=true;
}
});
}
}
}
}});
dojo.declare("dojo.widget.Editor2ToolbarComboItem",dojo.widget.Editor2ToolbarDropDownButton,{href:null,create:function(node,_b10){
dojo.widget.Editor2ToolbarComboItem.superclass.create.apply(this,arguments);
if(!this._contentPane){
dojo.require("dojo.widget.ContentPane");
this._contentPane=dojo.widget.createWidget("ContentPane",{preload:"true"});
this._contentPane.addOnLoad(this,"setup");
this._contentPane.setUrl(this.href);
}
},onMouseOver:function(e){
if(this._lastState!=dojo.widget.Editor2Manager.commandState.Disabled){
dojo.html.addClass(e.currentTarget,this._parentToolbar.ToolbarHighlightedSelectStyle);
}
},onMouseOut:function(e){
dojo.html.removeClass(e.currentTarget,this._parentToolbar.ToolbarHighlightedSelectStyle);
},onDropDownShown:function(){
if(!this._dropdown.__addedContentPage){
this._dropdown.addChild(this._contentPane);
this._dropdown.__addedContentPage=true;
}
},setup:function(){
},onChange:function(e){
if(this._parentToolbar.checkAvailability()){
var name=e.currentTarget.getAttribute("dropDownItemName");
var _b15=dojo.widget.Editor2Manager.getCurrentInstance();
if(_b15){
var _b16=_b15.getCommand(this._name);
if(_b16){
_b16.execute(name);
}
}
}
this._dropdown.close();
},onMouseOverItem:function(e){
dojo.html.addClass(e.currentTarget,this._parentToolbar.ToolbarHighlightedSelectItemStyle);
},onMouseOutItem:function(e){
dojo.html.removeClass(e.currentTarget,this._parentToolbar.ToolbarHighlightedSelectItemStyle);
}});
dojo.declare("dojo.widget.Editor2ToolbarFormatBlockSelect",dojo.widget.Editor2ToolbarComboItem,{href:dojo.uri.dojoUri("src/widget/templates/Editor2/EditorToolbar_FormatBlock.html"),setup:function(){
dojo.widget.Editor2ToolbarFormatBlockSelect.superclass.setup.call(this);
var _b19=this._contentPane.domNode.all||this._contentPane.domNode.getElementsByTagName("*");
this._blockNames={};
this._blockDisplayNames={};
for(var x=0;x<_b19.length;x++){
var node=_b19[x];
dojo.html.disableSelection(node);
var name=node.getAttribute("dropDownItemName");
if(name){
this._blockNames[name]=node;
var _b1d=node.getElementsByTagName(name);
this._blockDisplayNames[name]=_b1d[_b1d.length-1].innerHTML;
}
}
for(var name in this._blockNames){
dojo.event.connect(this._blockNames[name],"onclick",this,"onChange");
dojo.event.connect(this._blockNames[name],"onmouseover",this,"onMouseOverItem");
dojo.event.connect(this._blockNames[name],"onmouseout",this,"onMouseOutItem");
}
},onDropDownDestroy:function(){
if(this._blockNames){
for(var name in this._blockNames){
delete this._blockNames[name];
delete this._blockDisplayNames[name];
}
}
},refreshState:function(){
dojo.widget.Editor2ToolbarFormatBlockSelect.superclass.refreshState.call(this);
if(this._lastState!=dojo.widget.Editor2Manager.commandState.Disabled){
var _b1f=dojo.widget.Editor2Manager.getCurrentInstance();
if(_b1f){
var _b20=_b1f.getCommand(this._name);
if(_b20){
var _b21=_b20.getValue();
if(_b21==this._lastSelectedFormat&&this._blockDisplayNames){
return this._lastState;
}
this._lastSelectedFormat=_b21;
var _b22=this._domNode.getElementsByTagName("label")[0];
var _b23=false;
if(this._blockDisplayNames){
for(var name in this._blockDisplayNames){
if(name==_b21){
_b22.innerHTML=this._blockDisplayNames[name];
_b23=true;
break;
}
}
if(!_b23){
_b22.innerHTML="&nbsp;";
}
}
}
}
}
return this._lastState;
}});
dojo.declare("dojo.widget.Editor2ToolbarFontSizeSelect",dojo.widget.Editor2ToolbarComboItem,{href:dojo.uri.dojoUri("src/widget/templates/Editor2/EditorToolbar_FontSize.html"),setup:function(){
dojo.widget.Editor2ToolbarFormatBlockSelect.superclass.setup.call(this);
var _b25=this._contentPane.domNode.all||this._contentPane.domNode.getElementsByTagName("*");
this._fontsizes={};
this._fontSizeDisplayNames={};
for(var x=0;x<_b25.length;x++){
var node=_b25[x];
dojo.html.disableSelection(node);
var name=node.getAttribute("dropDownItemName");
if(name){
this._fontsizes[name]=node;
this._fontSizeDisplayNames[name]=node.getElementsByTagName("font")[0].innerHTML;
}
}
for(var name in this._fontsizes){
dojo.event.connect(this._fontsizes[name],"onclick",this,"onChange");
dojo.event.connect(this._fontsizes[name],"onmouseover",this,"onMouseOverItem");
dojo.event.connect(this._fontsizes[name],"onmouseout",this,"onMouseOutItem");
}
},onDropDownDestroy:function(){
if(this._fontsizes){
for(var name in this._fontsizes){
delete this._fontsizes[name];
delete this._fontSizeDisplayNames[name];
}
}
},refreshState:function(){
dojo.widget.Editor2ToolbarFormatBlockSelect.superclass.refreshState.call(this);
if(this._lastState!=dojo.widget.Editor2Manager.commandState.Disabled){
var _b2a=dojo.widget.Editor2Manager.getCurrentInstance();
if(_b2a){
var _b2b=_b2a.getCommand(this._name);
if(_b2b){
var size=_b2b.getValue();
if(size==this._lastSelectedSize&&this._fontSizeDisplayNames){
return this._lastState;
}
this._lastSelectedSize=size;
var _b2d=this._domNode.getElementsByTagName("label")[0];
var _b2e=false;
if(this._fontSizeDisplayNames){
for(var name in this._fontSizeDisplayNames){
if(name==size){
_b2d.innerHTML=this._fontSizeDisplayNames[name];
_b2e=true;
break;
}
}
if(!_b2e){
_b2d.innerHTML="&nbsp;";
}
}
}
}
}
return this._lastState;
}});
dojo.declare("dojo.widget.Editor2ToolbarFontNameSelect",dojo.widget.Editor2ToolbarFontSizeSelect,{href:dojo.uri.dojoUri("src/widget/templates/Editor2/EditorToolbar_FontName.html")});
dojo.widget.defineWidget("dojo.widget.Editor2Toolbar",dojo.widget.HtmlWidget,function(){
dojo.event.connect(this,"fillInTemplate",dojo.lang.hitch(this,function(){
if(dojo.render.html.ie){
this.domNode.style.zoom=1;
}
}));
},{templatePath:dojo.uri.dojoUri("src/widget/templates/EditorToolbar.html"),templateCssPath:dojo.uri.dojoUri("src/widget/templates/EditorToolbar.css"),ToolbarLatchedItemStyle:"ToolbarButtonLatched",ToolbarEnabledItemStyle:"ToolbarButtonEnabled",ToolbarDisabledItemStyle:"ToolbarButtonDisabled",ToolbarHighlightedItemStyle:"ToolbarButtonHighlighted",ToolbarHighlightedSelectStyle:"ToolbarSelectHighlighted",ToolbarHighlightedSelectItemStyle:"ToolbarSelectHighlightedItem",postCreate:function(){
var _b30=dojo.html.getElementsByClass("dojoEditorToolbarItem",this.domNode);
this.items={};
for(var x=0;x<_b30.length;x++){
var node=_b30[x];
var _b33=node.getAttribute("dojoETItemName");
if(_b33){
var item=dojo.widget.Editor2ToolbarItemManager.getToolbarItem(_b33);
if(item){
item.create(node,this);
this.items[_b33.toLowerCase()]=item;
}else{
node.style.display="none";
}
}
}
},update:function(){
for(var cmd in this.items){
this.items[cmd].refreshState();
}
},shareGroup:"",checkAvailability:function(){
if(!this.shareGroup){
this.parent.focus();
return true;
}
var _b36=dojo.widget.Editor2Manager.getCurrentInstance();
if(this.shareGroup==_b36.toolbarGroup){
return true;
}
return false;
},destroy:function(){
for(var it in this.items){
this.items[it].destroy();
delete this.items[it];
}
dojo.widget.Editor2Toolbar.superclass.destroy.call(this);
}});
dojo.provide("dojo.lfx.shadow");
dojo.lfx.shadow=function(node){
this.shadowPng=dojo.uri.dojoUri("src/html/images/shadow");
this.shadowThickness=8;
this.shadowOffset=15;
this.init(node);
};
dojo.extend(dojo.lfx.shadow,{init:function(node){
this.node=node;
this.pieces={};
var x1=-1*this.shadowThickness;
var y0=this.shadowOffset;
var y1=this.shadowOffset+this.shadowThickness;
this._makePiece("tl","top",y0,"left",x1);
this._makePiece("l","top",y1,"left",x1,"scale");
this._makePiece("tr","top",y0,"left",0);
this._makePiece("r","top",y1,"left",0,"scale");
this._makePiece("bl","top",0,"left",x1);
this._makePiece("b","top",0,"left",0,"crop");
this._makePiece("br","top",0,"left",0);
},_makePiece:function(name,_b3e,_b3f,_b40,_b41,_b42){
var img;
var url=this.shadowPng+name.toUpperCase()+".png";
if(dojo.render.html.ie55||dojo.render.html.ie60){
img=dojo.doc().createElement("div");
img.style.filter="progid:DXImageTransform.Microsoft.AlphaImageLoader(src='"+url+"'"+(_b42?", sizingMethod='"+_b42+"'":"")+")";
}else{
img=dojo.doc().createElement("img");
img.src=url;
}
img.style.position="absolute";
img.style[_b3e]=_b3f+"px";
img.style[_b40]=_b41+"px";
img.style.width=this.shadowThickness+"px";
img.style.height=this.shadowThickness+"px";
this.pieces[name]=img;
this.node.appendChild(img);
},size:function(_b45,_b46){
var _b47=_b46-(this.shadowOffset+this.shadowThickness+1);
if(_b47<0){
_b47=0;
}
if(_b46<1){
_b46=1;
}
if(_b45<1){
_b45=1;
}
with(this.pieces){
l.style.height=_b47+"px";
r.style.height=_b47+"px";
b.style.width=(_b45-1)+"px";
bl.style.top=(_b46-1)+"px";
b.style.top=(_b46-1)+"px";
br.style.top=(_b46-1)+"px";
tr.style.left=(_b45-1)+"px";
r.style.left=(_b45-1)+"px";
br.style.left=(_b45-1)+"px";
}
}});
dojo.provide("dojo.widget.html.layout");
dojo.widget.html.layout=function(_b48,_b49,_b4a){
dojo.html.addClass(_b48,"dojoLayoutContainer");
_b49=dojo.lang.filter(_b49,function(_b4b,idx){
_b4b.idx=idx;
return dojo.lang.inArray(["top","bottom","left","right","client","flood"],_b4b.layoutAlign);
});
if(_b4a&&_b4a!="none"){
var rank=function(_b4e){
switch(_b4e.layoutAlign){
case "flood":
return 1;
case "left":
case "right":
return (_b4a=="left-right")?2:3;
case "top":
case "bottom":
return (_b4a=="left-right")?3:2;
default:
return 4;
}
};
_b49.sort(function(a,b){
return (rank(a)-rank(b))||(a.idx-b.idx);
});
}
var f={top:dojo.html.getPixelValue(_b48,"padding-top",true),left:dojo.html.getPixelValue(_b48,"padding-left",true)};
dojo.lang.mixin(f,dojo.html.getContentBox(_b48));
dojo.lang.forEach(_b49,function(_b52){
var elm=_b52.domNode;
var pos=_b52.layoutAlign;
with(elm.style){
left=f.left+"px";
top=f.top+"px";
bottom="auto";
right="auto";
}
dojo.html.addClass(elm,"dojoAlign"+dojo.string.capitalize(pos));
if((pos=="top")||(pos=="bottom")){
dojo.html.setMarginBox(elm,{width:f.width});
var h=dojo.html.getMarginBox(elm).height;
f.height-=h;
if(pos=="top"){
f.top+=h;
}else{
elm.style.top=f.top+f.height+"px";
}
if(_b52.onResized){
_b52.onResized();
}
}else{
if(pos=="left"||pos=="right"){
var w=dojo.html.getMarginBox(elm).width;
if(_b52.resizeTo){
_b52.resizeTo(w,f.height);
}else{
dojo.html.setMarginBox(elm,{width:w,height:f.height});
}
f.width-=w;
if(pos=="left"){
f.left+=w;
}else{
elm.style.left=f.left+f.width+"px";
}
}else{
if(pos=="flood"||pos=="client"){
if(_b52.resizeTo){
_b52.resizeTo(f.width,f.height);
}else{
dojo.html.setMarginBox(elm,{width:f.width,height:f.height});
}
}
}
}
});
};
dojo.html.insertCssText(".dojoLayoutContainer{ position: relative; display: block; overflow: hidden; }\n"+"body .dojoAlignTop, body .dojoAlignBottom, body .dojoAlignLeft, body .dojoAlignRight { position: absolute; overflow: hidden; }\n"+"body .dojoAlignClient { position: absolute }\n"+".dojoAlignClient { overflow: auto; }\n");
dojo.provide("dojo.dnd.DragAndDrop");
dojo.declare("dojo.dnd.DragSource",null,{type:"",onDragEnd:function(evt){
},onDragStart:function(evt){
},onSelected:function(evt){
},unregister:function(){
dojo.dnd.dragManager.unregisterDragSource(this);
},reregister:function(){
dojo.dnd.dragManager.registerDragSource(this);
}});
dojo.declare("dojo.dnd.DragObject",null,{type:"",register:function(){
var dm=dojo.dnd.dragManager;
if(dm["registerDragObject"]){
dm.registerDragObject(this);
}
},onDragStart:function(evt){
},onDragMove:function(evt){
},onDragOver:function(evt){
},onDragOut:function(evt){
},onDragEnd:function(evt){
},onDragLeave:dojo.lang.forward("onDragOut"),onDragEnter:dojo.lang.forward("onDragOver"),ondragout:dojo.lang.forward("onDragOut"),ondragover:dojo.lang.forward("onDragOver")});
dojo.declare("dojo.dnd.DropTarget",null,{acceptsType:function(type){
if(!dojo.lang.inArray(this.acceptedTypes,"*")){
if(!dojo.lang.inArray(this.acceptedTypes,type)){
return false;
}
}
return true;
},accepts:function(_b61){
if(!dojo.lang.inArray(this.acceptedTypes,"*")){
for(var i=0;i<_b61.length;i++){
if(!dojo.lang.inArray(this.acceptedTypes,_b61[i].type)){
return false;
}
}
}
return true;
},unregister:function(){
dojo.dnd.dragManager.unregisterDropTarget(this);
},onDragOver:function(evt){
},onDragOut:function(evt){
},onDragMove:function(evt){
},onDropStart:function(evt){
},onDrop:function(evt){
},onDropEnd:function(){
}},function(){
this.acceptedTypes=[];
});
dojo.dnd.DragEvent=function(){
this.dragSource=null;
this.dragObject=null;
this.target=null;
this.eventStatus="success";
};
dojo.declare("dojo.dnd.DragManager",null,{selectedSources:[],dragObjects:[],dragSources:[],registerDragSource:function(_b68){
},dropTargets:[],registerDropTarget:function(_b69){
},lastDragTarget:null,currentDragTarget:null,onKeyDown:function(){
},onMouseOut:function(){
},onMouseMove:function(){
},onMouseUp:function(){
}});
dojo.provide("dojo.dnd.HtmlDragManager");
dojo.declare("dojo.dnd.HtmlDragManager",dojo.dnd.DragManager,{disabled:false,nestedTargets:false,mouseDownTimer:null,dsCounter:0,dsPrefix:"dojoDragSource",dropTargetDimensions:[],currentDropTarget:null,previousDropTarget:null,_dragTriggered:false,selectedSources:[],dragObjects:[],dragSources:[],currentX:null,currentY:null,lastX:null,lastY:null,mouseDownX:null,mouseDownY:null,threshold:7,dropAcceptable:false,cancelEvent:function(e){
e.stopPropagation();
e.preventDefault();
},registerDragSource:function(ds){
if(ds["domNode"]){
var dp=this.dsPrefix;
var _b6d=dp+"Idx_"+(this.dsCounter++);
ds.dragSourceId=_b6d;
this.dragSources[_b6d]=ds;
ds.domNode.setAttribute(dp,_b6d);
if(dojo.render.html.ie){
dojo.event.browser.addListener(ds.domNode,"ondragstart",this.cancelEvent);
}
}
},unregisterDragSource:function(ds){
if(ds["domNode"]){
var dp=this.dsPrefix;
var _b70=ds.dragSourceId;
delete ds.dragSourceId;
delete this.dragSources[_b70];
ds.domNode.setAttribute(dp,null);
if(dojo.render.html.ie){
dojo.event.browser.removeListener(ds.domNode,"ondragstart",this.cancelEvent);
}
}
},registerDropTarget:function(dt){
this.dropTargets.push(dt);
},unregisterDropTarget:function(dt){
var _b73=dojo.lang.find(this.dropTargets,dt,true);
if(_b73>=0){
this.dropTargets.splice(_b73,1);
}
},getDragSource:function(e){
var tn=e.target;
if(tn===dojo.body()){
return;
}
var ta=dojo.html.getAttribute(tn,this.dsPrefix);
while((!ta)&&(tn)){
tn=tn.parentNode;
if((!tn)||(tn===dojo.body())){
return;
}
ta=dojo.html.getAttribute(tn,this.dsPrefix);
}
return this.dragSources[ta];
},onKeyDown:function(e){
},onMouseDown:function(e){
if(this.disabled){
return;
}
if(dojo.render.html.ie){
if(e.button!=1){
return;
}
}else{
if(e.which!=1){
return;
}
}
var _b79=e.target.nodeType==dojo.html.TEXT_NODE?e.target.parentNode:e.target;
if(dojo.html.isTag(_b79,"button","textarea","input","select","option")){
return;
}
var ds=this.getDragSource(e);
if(!ds){
return;
}
if(!dojo.lang.inArray(this.selectedSources,ds)){
this.selectedSources.push(ds);
ds.onSelected();
}
this.mouseDownX=e.pageX;
this.mouseDownY=e.pageY;
e.preventDefault();
dojo.event.connect(document,"onmousemove",this,"onMouseMove");
},onMouseUp:function(e,_b7c){
if(this.selectedSources.length==0){
return;
}
this.mouseDownX=null;
this.mouseDownY=null;
this._dragTriggered=false;
e.dragSource=this.dragSource;
if((!e.shiftKey)&&(!e.ctrlKey)){
if(this.currentDropTarget){
this.currentDropTarget.onDropStart();
}
dojo.lang.forEach(this.dragObjects,function(_b7d){
var ret=null;
if(!_b7d){
return;
}
if(this.currentDropTarget){
e.dragObject=_b7d;
var ce=this.currentDropTarget.domNode.childNodes;
if(ce.length>0){
e.dropTarget=ce[0];
while(e.dropTarget==_b7d.domNode){
e.dropTarget=e.dropTarget.nextSibling;
}
}else{
e.dropTarget=this.currentDropTarget.domNode;
}
if(this.dropAcceptable){
ret=this.currentDropTarget.onDrop(e);
}else{
this.currentDropTarget.onDragOut(e);
}
}
e.dragStatus=this.dropAcceptable&&ret?"dropSuccess":"dropFailure";
dojo.lang.delayThese([function(){
try{
_b7d.dragSource.onDragEnd(e);
}
catch(err){
var _b80={};
for(var i in e){
if(i=="type"){
_b80.type="mouseup";
continue;
}
_b80[i]=e[i];
}
_b7d.dragSource.onDragEnd(_b80);
}
},function(){
_b7d.onDragEnd(e);
}]);
},this);
this.selectedSources=[];
this.dragObjects=[];
this.dragSource=null;
if(this.currentDropTarget){
this.currentDropTarget.onDropEnd();
}
}else{
}
dojo.event.disconnect(document,"onmousemove",this,"onMouseMove");
this.currentDropTarget=null;
},onScroll:function(){
for(var i=0;i<this.dragObjects.length;i++){
if(this.dragObjects[i].updateDragOffset){
this.dragObjects[i].updateDragOffset();
}
}
if(this.dragObjects.length){
this.cacheTargetLocations();
}
},_dragStartDistance:function(x,y){
if((!this.mouseDownX)||(!this.mouseDownX)){
return;
}
var dx=Math.abs(x-this.mouseDownX);
var dx2=dx*dx;
var dy=Math.abs(y-this.mouseDownY);
var dy2=dy*dy;
return parseInt(Math.sqrt(dx2+dy2),10);
},cacheTargetLocations:function(){
dojo.profile.start("cacheTargetLocations");
this.dropTargetDimensions=[];
dojo.lang.forEach(this.dropTargets,function(_b89){
var tn=_b89.domNode;
if(!tn||!_b89.accepts([this.dragSource])){
return;
}
var abs=dojo.html.getAbsolutePosition(tn,true);
var bb=dojo.html.getBorderBox(tn);
this.dropTargetDimensions.push([[abs.x,abs.y],[abs.x+bb.width,abs.y+bb.height],_b89]);
},this);
dojo.profile.end("cacheTargetLocations");
},onMouseMove:function(e){
if((dojo.render.html.ie)&&(e.button!=1)){
this.currentDropTarget=null;
this.onMouseUp(e,true);
return;
}
if((this.selectedSources.length)&&(!this.dragObjects.length)){
var dx;
var dy;
if(!this._dragTriggered){
this._dragTriggered=(this._dragStartDistance(e.pageX,e.pageY)>this.threshold);
if(!this._dragTriggered){
return;
}
dx=e.pageX-this.mouseDownX;
dy=e.pageY-this.mouseDownY;
}
this.dragSource=this.selectedSources[0];
dojo.lang.forEach(this.selectedSources,function(_b90){
if(!_b90){
return;
}
var tdo=_b90.onDragStart(e);
if(tdo){
tdo.onDragStart(e);
tdo.dragOffset.y+=dy;
tdo.dragOffset.x+=dx;
tdo.dragSource=_b90;
this.dragObjects.push(tdo);
}
},this);
this.previousDropTarget=null;
this.cacheTargetLocations();
}
dojo.lang.forEach(this.dragObjects,function(_b92){
if(_b92){
_b92.onDragMove(e);
}
});
if(this.currentDropTarget){
var c=dojo.html.toCoordinateObject(this.currentDropTarget.domNode,true);
var dtp=[[c.x,c.y],[c.x+c.width,c.y+c.height]];
}
if((!this.nestedTargets)&&(dtp)&&(this.isInsideBox(e,dtp))){
if(this.dropAcceptable){
this.currentDropTarget.onDragMove(e,this.dragObjects);
}
}else{
var _b95=this.findBestTarget(e);
if(_b95.target===null){
if(this.currentDropTarget){
this.currentDropTarget.onDragOut(e);
this.previousDropTarget=this.currentDropTarget;
this.currentDropTarget=null;
}
this.dropAcceptable=false;
return;
}
if(this.currentDropTarget!==_b95.target){
if(this.currentDropTarget){
this.previousDropTarget=this.currentDropTarget;
this.currentDropTarget.onDragOut(e);
}
this.currentDropTarget=_b95.target;
e.dragObjects=this.dragObjects;
this.dropAcceptable=this.currentDropTarget.onDragOver(e);
}else{
if(this.dropAcceptable){
this.currentDropTarget.onDragMove(e,this.dragObjects);
}
}
}
},findBestTarget:function(e){
var _b97=this;
var _b98=new Object();
_b98.target=null;
_b98.points=null;
dojo.lang.every(this.dropTargetDimensions,function(_b99){
if(!_b97.isInsideBox(e,_b99)){
return true;
}
_b98.target=_b99[2];
_b98.points=_b99;
return Boolean(_b97.nestedTargets);
});
return _b98;
},isInsideBox:function(e,_b9b){
if((e.pageX>_b9b[0][0])&&(e.pageX<_b9b[1][0])&&(e.pageY>_b9b[0][1])&&(e.pageY<_b9b[1][1])){
return true;
}
return false;
},onMouseOver:function(e){
},onMouseOut:function(e){
}});
dojo.dnd.dragManager=new dojo.dnd.HtmlDragManager();
(function(){
var d=document;
var dm=dojo.dnd.dragManager;
dojo.event.connect(d,"onkeydown",dm,"onKeyDown");
dojo.event.connect(d,"onmouseover",dm,"onMouseOver");
dojo.event.connect(d,"onmouseout",dm,"onMouseOut");
dojo.event.connect(d,"onmousedown",dm,"onMouseDown");
dojo.event.connect(d,"onmouseup",dm,"onMouseUp");
dojo.event.connect(window,"onscroll",dm,"onScroll");
})();
dojo.provide("dojo.dnd.HtmlDragAndDrop");
dojo.declare("dojo.dnd.HtmlDragSource",dojo.dnd.DragSource,{dragClass:"",onDragStart:function(){
var _ba0=new dojo.dnd.HtmlDragObject(this.dragObject,this.type);
if(this.dragClass){
_ba0.dragClass=this.dragClass;
}
if(this.constrainToContainer){
_ba0.constrainTo(this.constrainingContainer||this.domNode.parentNode);
}
return _ba0;
},setDragHandle:function(node){
node=dojo.byId(node);
dojo.dnd.dragManager.unregisterDragSource(this);
this.domNode=node;
dojo.dnd.dragManager.registerDragSource(this);
},setDragTarget:function(node){
this.dragObject=node;
},constrainTo:function(_ba3){
this.constrainToContainer=true;
if(_ba3){
this.constrainingContainer=_ba3;
}
},onSelected:function(){
for(var i=0;i<this.dragObjects.length;i++){
dojo.dnd.dragManager.selectedSources.push(new dojo.dnd.HtmlDragSource(this.dragObjects[i]));
}
},addDragObjects:function(el){
for(var i=0;i<arguments.length;i++){
this.dragObjects.push(dojo.byId(arguments[i]));
}
}},function(node,type){
node=dojo.byId(node);
this.dragObjects=[];
this.constrainToContainer=false;
if(node){
this.domNode=node;
this.dragObject=node;
this.type=(type)||(this.domNode.nodeName.toLowerCase());
dojo.dnd.DragSource.prototype.reregister.call(this);
}
});
dojo.declare("dojo.dnd.HtmlDragObject",dojo.dnd.DragObject,{dragClass:"",opacity:0.5,createIframe:true,disableX:false,disableY:false,createDragNode:function(){
var node=this.domNode.cloneNode(true);
if(this.dragClass){
dojo.html.addClass(node,this.dragClass);
}
if(this.opacity<1){
dojo.html.setOpacity(node,this.opacity);
}
var ltn=node.tagName.toLowerCase();
var isTr=(ltn=="tr");
if((isTr)||(ltn=="tbody")){
var doc=this.domNode.ownerDocument;
var _bad=doc.createElement("table");
if(isTr){
var _bae=doc.createElement("tbody");
_bad.appendChild(_bae);
_bae.appendChild(node);
}else{
_bad.appendChild(node);
}
var _baf=((isTr)?this.domNode:this.domNode.firstChild);
var _bb0=((isTr)?node:node.firstChild);
var _bb1=tdp.childNodes;
var _bb2=_bb0.childNodes;
for(var i=0;i<_bb1.length;i++){
if((_bb2[i])&&(_bb2[i].style)){
_bb2[i].style.width=dojo.html.getContentBox(_bb1[i]).width+"px";
}
}
node=_bad;
}
if((dojo.render.html.ie55||dojo.render.html.ie60)&&this.createIframe){
with(node.style){
top="0px";
left="0px";
}
var _bb4=document.createElement("div");
_bb4.appendChild(node);
this.bgIframe=new dojo.html.BackgroundIframe(_bb4);
_bb4.appendChild(this.bgIframe.iframe);
node=_bb4;
}
node.style.zIndex=999;
return node;
},onDragStart:function(e){
dojo.html.clearSelection();
this.scrollOffset=dojo.html.getScroll().offset;
this.dragStartPosition=dojo.html.getAbsolutePosition(this.domNode,true);
this.dragOffset={y:this.dragStartPosition.y-e.pageY,x:this.dragStartPosition.x-e.pageX};
this.dragClone=this.createDragNode();
this.containingBlockPosition=this.domNode.offsetParent?dojo.html.getAbsolutePosition(this.domNode.offsetParent,true):{x:0,y:0};
if(this.constrainToContainer){
this.constraints=this.getConstraints();
}
with(this.dragClone.style){
position="absolute";
top=this.dragOffset.y+e.pageY+"px";
left=this.dragOffset.x+e.pageX+"px";
}
dojo.body().appendChild(this.dragClone);
dojo.event.topic.publish("dragStart",{source:this});
},getConstraints:function(){
if(this.constrainingContainer.nodeName.toLowerCase()=="body"){
var _bb6=dojo.html.getViewport();
var _bb7=_bb6.width;
var _bb8=_bb6.height;
var _bb9=dojo.html.getScroll().offset;
var x=_bb9.x;
var y=_bb9.y;
}else{
var _bbc=dojo.html.getContentBox(this.constrainingContainer);
_bb7=_bbc.width;
_bb8=_bbc.height;
x=this.containingBlockPosition.x+dojo.html.getPixelValue(this.constrainingContainer,"padding-left",true)+dojo.html.getBorderExtent(this.constrainingContainer,"left");
y=this.containingBlockPosition.y+dojo.html.getPixelValue(this.constrainingContainer,"padding-top",true)+dojo.html.getBorderExtent(this.constrainingContainer,"top");
}
var mb=dojo.html.getMarginBox(this.domNode);
return {minX:x,minY:y,maxX:x+_bb7-mb.width,maxY:y+_bb8-mb.height};
},updateDragOffset:function(){
var _bbe=dojo.html.getScroll().offset;
if(_bbe.y!=this.scrollOffset.y){
var diff=_bbe.y-this.scrollOffset.y;
this.dragOffset.y+=diff;
this.scrollOffset.y=_bbe.y;
}
if(_bbe.x!=this.scrollOffset.x){
var diff=_bbe.x-this.scrollOffset.x;
this.dragOffset.x+=diff;
this.scrollOffset.x=_bbe.x;
}
},onDragMove:function(e){
this.updateDragOffset();
var x=this.dragOffset.x+e.pageX;
var y=this.dragOffset.y+e.pageY;
if(this.constrainToContainer){
if(x<this.constraints.minX){
x=this.constraints.minX;
}
if(y<this.constraints.minY){
y=this.constraints.minY;
}
if(x>this.constraints.maxX){
x=this.constraints.maxX;
}
if(y>this.constraints.maxY){
y=this.constraints.maxY;
}
}
this.setAbsolutePosition(x,y);
dojo.event.topic.publish("dragMove",{source:this});
},setAbsolutePosition:function(x,y){
if(!this.disableY){
this.dragClone.style.top=y+"px";
}
if(!this.disableX){
this.dragClone.style.left=x+"px";
}
},onDragEnd:function(e){
switch(e.dragStatus){
case "dropSuccess":
dojo.html.removeNode(this.dragClone);
this.dragClone=null;
break;
case "dropFailure":
var _bc6=dojo.html.getAbsolutePosition(this.dragClone,true);
var _bc7={left:this.dragStartPosition.x+1,top:this.dragStartPosition.y+1};
var anim=dojo.lfx.slideTo(this.dragClone,_bc7,300);
var _bc9=this;
dojo.event.connect(anim,"onEnd",function(e){
dojo.html.removeNode(_bc9.dragClone);
_bc9.dragClone=null;
});
anim.play();
break;
}
dojo.event.topic.publish("dragEnd",{source:this});
},constrainTo:function(_bcb){
this.constrainToContainer=true;
if(_bcb){
this.constrainingContainer=_bcb;
}else{
this.constrainingContainer=this.domNode.parentNode;
}
}},function(node,type){
this.domNode=dojo.byId(node);
this.type=type;
this.constrainToContainer=false;
this.dragSource=null;
dojo.dnd.DragObject.prototype.register.call(this);
});
dojo.declare("dojo.dnd.HtmlDropTarget",dojo.dnd.DropTarget,{vertical:false,onDragOver:function(e){
if(!this.accepts(e.dragObjects)){
return false;
}
this.childBoxes=[];
for(var i=0,_bd0;i<this.domNode.childNodes.length;i++){
_bd0=this.domNode.childNodes[i];
if(_bd0.nodeType!=dojo.html.ELEMENT_NODE){
continue;
}
var pos=dojo.html.getAbsolutePosition(_bd0,true);
var _bd2=dojo.html.getBorderBox(_bd0);
this.childBoxes.push({top:pos.y,bottom:pos.y+_bd2.height,left:pos.x,right:pos.x+_bd2.width,height:_bd2.height,width:_bd2.width,node:_bd0});
}
return true;
},_getNodeUnderMouse:function(e){
for(var i=0,_bd5;i<this.childBoxes.length;i++){
with(this.childBoxes[i]){
if(e.pageX>=left&&e.pageX<=right&&e.pageY>=top&&e.pageY<=bottom){
return i;
}
}
}
return -1;
},createDropIndicator:function(){
this.dropIndicator=document.createElement("div");
with(this.dropIndicator.style){
position="absolute";
zIndex=999;
if(this.vertical){
borderLeftWidth="1px";
borderLeftColor="black";
borderLeftStyle="solid";
height=dojo.html.getBorderBox(this.domNode).height+"px";
top=dojo.html.getAbsolutePosition(this.domNode,true).y+"px";
}else{
borderTopWidth="1px";
borderTopColor="black";
borderTopStyle="solid";
width=dojo.html.getBorderBox(this.domNode).width+"px";
left=dojo.html.getAbsolutePosition(this.domNode,true).x+"px";
}
}
},onDragMove:function(e,_bd7){
var i=this._getNodeUnderMouse(e);
if(!this.dropIndicator){
this.createDropIndicator();
}
var _bd9=this.vertical?dojo.html.gravity.WEST:dojo.html.gravity.NORTH;
var hide=false;
if(i<0){
if(this.childBoxes.length){
var _bdb=(dojo.html.gravity(this.childBoxes[0].node,e)&_bd9);
if(_bdb){
hide=true;
}
}else{
var _bdb=true;
}
}else{
var _bdc=this.childBoxes[i];
var _bdb=(dojo.html.gravity(_bdc.node,e)&_bd9);
if(_bdc.node===_bd7[0].dragSource.domNode){
hide=true;
}else{
var _bdd=_bdb?(i>0?this.childBoxes[i-1]:_bdc):(i<this.childBoxes.length-1?this.childBoxes[i+1]:_bdc);
if(_bdd.node===_bd7[0].dragSource.domNode){
hide=true;
}
}
}
if(hide){
this.dropIndicator.style.display="none";
return;
}else{
this.dropIndicator.style.display="";
}
this.placeIndicator(e,_bd7,i,_bdb);
if(!dojo.html.hasParent(this.dropIndicator)){
dojo.body().appendChild(this.dropIndicator);
}
},placeIndicator:function(e,_bdf,_be0,_be1){
var _be2=this.vertical?"left":"top";
var _be3;
if(_be0<0){
if(this.childBoxes.length){
_be3=_be1?this.childBoxes[0]:this.childBoxes[this.childBoxes.length-1];
}else{
this.dropIndicator.style[_be2]=dojo.html.getAbsolutePosition(this.domNode,true)[this.vertical?"x":"y"]+"px";
}
}else{
_be3=this.childBoxes[_be0];
}
if(_be3){
this.dropIndicator.style[_be2]=(_be1?_be3[_be2]:_be3[this.vertical?"right":"bottom"])+"px";
if(this.vertical){
this.dropIndicator.style.height=_be3.height+"px";
this.dropIndicator.style.top=_be3.top+"px";
}else{
this.dropIndicator.style.width=_be3.width+"px";
this.dropIndicator.style.left=_be3.left+"px";
}
}
},onDragOut:function(e){
if(this.dropIndicator){
dojo.html.removeNode(this.dropIndicator);
delete this.dropIndicator;
}
},onDrop:function(e){
this.onDragOut(e);
var i=this._getNodeUnderMouse(e);
var _be7=this.vertical?dojo.html.gravity.WEST:dojo.html.gravity.NORTH;
if(i<0){
if(this.childBoxes.length){
if(dojo.html.gravity(this.childBoxes[0].node,e)&_be7){
return this.insert(e,this.childBoxes[0].node,"before");
}else{
return this.insert(e,this.childBoxes[this.childBoxes.length-1].node,"after");
}
}
return this.insert(e,this.domNode,"append");
}
var _be8=this.childBoxes[i];
if(dojo.html.gravity(_be8.node,e)&_be7){
return this.insert(e,_be8.node,"before");
}else{
return this.insert(e,_be8.node,"after");
}
},insert:function(e,_bea,_beb){
var node=e.dragObject.domNode;
if(_beb=="before"){
return dojo.html.insertBefore(node,_bea);
}else{
if(_beb=="after"){
return dojo.html.insertAfter(node,_bea);
}else{
if(_beb=="append"){
_bea.appendChild(node);
return true;
}
}
}
return false;
}},function(node,_bee){
if(arguments.length==0){
return;
}
this.domNode=dojo.byId(node);
dojo.dnd.DropTarget.call(this);
if(_bee&&dojo.lang.isString(_bee)){
_bee=[_bee];
}
this.acceptedTypes=_bee||[];
dojo.dnd.dragManager.registerDropTarget(this);
});
dojo.provide("dojo.dnd.*");
dojo.provide("dojo.dnd.HtmlDragMove");
dojo.declare("dojo.dnd.HtmlDragMoveSource",dojo.dnd.HtmlDragSource,{onDragStart:function(){
var _bef=new dojo.dnd.HtmlDragMoveObject(this.dragObject,this.type);
if(this.constrainToContainer){
_bef.constrainTo(this.constrainingContainer);
}
return _bef;
},onSelected:function(){
for(var i=0;i<this.dragObjects.length;i++){
dojo.dnd.dragManager.selectedSources.push(new dojo.dnd.HtmlDragMoveSource(this.dragObjects[i]));
}
}});
dojo.declare("dojo.dnd.HtmlDragMoveObject",dojo.dnd.HtmlDragObject,{onDragStart:function(e){
dojo.html.clearSelection();
this.dragClone=this.domNode;
if(dojo.html.getComputedStyle(this.domNode,"position")!="absolute"){
this.domNode.style.position="relative";
}
var left=parseInt(dojo.html.getComputedStyle(this.domNode,"left"));
var top=parseInt(dojo.html.getComputedStyle(this.domNode,"top"));
this.dragStartPosition={x:isNaN(left)?0:left,y:isNaN(top)?0:top};
this.scrollOffset=dojo.html.getScroll().offset;
this.dragOffset={y:this.dragStartPosition.y-e.pageY,x:this.dragStartPosition.x-e.pageX};
this.containingBlockPosition={x:0,y:0};
if(this.constrainToContainer){
this.constraints=this.getConstraints();
}
dojo.event.connect(this.domNode,"onclick",this,"_squelchOnClick");
},onDragEnd:function(e){
},setAbsolutePosition:function(x,y){
if(!this.disableY){
this.domNode.style.top=y+"px";
}
if(!this.disableX){
this.domNode.style.left=x+"px";
}
},_squelchOnClick:function(e){
dojo.event.browser.stopEvent(e);
dojo.event.disconnect(this.domNode,"onclick",this,"_squelchOnClick");
}});
dojo.provide("dojo.widget.Dialog");
dojo.declare("dojo.widget.ModalDialogBase",null,{isContainer:true,focusElement:"",bgColor:"black",bgOpacity:0.4,followScroll:true,closeOnBackgroundClick:false,trapTabs:function(e){
if(e.target==this.tabStartOuter){
if(this._fromTrap){
this.tabStart.focus();
this._fromTrap=false;
}else{
this._fromTrap=true;
this.tabEnd.focus();
}
}else{
if(e.target==this.tabStart){
if(this._fromTrap){
this._fromTrap=false;
}else{
this._fromTrap=true;
this.tabEnd.focus();
}
}else{
if(e.target==this.tabEndOuter){
if(this._fromTrap){
this.tabEnd.focus();
this._fromTrap=false;
}else{
this._fromTrap=true;
this.tabStart.focus();
}
}else{
if(e.target==this.tabEnd){
if(this._fromTrap){
this._fromTrap=false;
}else{
this._fromTrap=true;
this.tabStart.focus();
}
}
}
}
}
},clearTrap:function(e){
var _bfa=this;
setTimeout(function(){
_bfa._fromTrap=false;
},100);
},postCreate:function(){
with(this.domNode.style){
position="absolute";
zIndex=999;
display="none";
overflow="visible";
}
var b=dojo.body();
b.appendChild(this.domNode);
this.bg=document.createElement("div");
this.bg.className="dialogUnderlay";
with(this.bg.style){
position="absolute";
left=top="0px";
zIndex=998;
display="none";
}
b.appendChild(this.bg);
this.setBackgroundColor(this.bgColor);
this.bgIframe=new dojo.html.BackgroundIframe();
if(this.bgIframe.iframe){
with(this.bgIframe.iframe.style){
position="absolute";
left=top="0px";
zIndex=90;
display="none";
}
}
if(this.closeOnBackgroundClick){
dojo.event.kwConnect({srcObj:this.bg,srcFunc:"onclick",adviceObj:this,adviceFunc:"onBackgroundClick",once:true});
}
},uninitialize:function(){
this.bgIframe.remove();
dojo.html.removeNode(this.bg,true);
},setBackgroundColor:function(_bfc){
if(arguments.length>=3){
_bfc=new dojo.gfx.color.Color(arguments[0],arguments[1],arguments[2]);
}else{
_bfc=new dojo.gfx.color.Color(_bfc);
}
this.bg.style.backgroundColor=_bfc.toString();
return this.bgColor=_bfc;
},setBackgroundOpacity:function(op){
if(arguments.length==0){
op=this.bgOpacity;
}
dojo.html.setOpacity(this.bg,op);
try{
this.bgOpacity=dojo.html.getOpacity(this.bg);
}
catch(e){
this.bgOpacity=op;
}
return this.bgOpacity;
},_sizeBackground:function(){
if(this.bgOpacity>0){
var _bfe=dojo.html.getViewport();
var h=_bfe.height;
var w=_bfe.width;
with(this.bg.style){
width=w+"px";
height=h+"px";
}
var _c01=dojo.html.getScroll().offset;
this.bg.style.top=_c01.y+"px";
this.bg.style.left=_c01.x+"px";
var _bfe=dojo.html.getViewport();
if(_bfe.width!=w){
this.bg.style.width=_bfe.width+"px";
}
if(_bfe.height!=h){
this.bg.style.height=_bfe.height+"px";
}
}
this.bgIframe.size(this.bg);
},_showBackground:function(){
if(this.bgOpacity>0){
this.bg.style.display="block";
}
if(this.bgIframe.iframe){
this.bgIframe.iframe.style.display="block";
}
},placeModalDialog:function(){
var _c02=dojo.html.getScroll().offset;
var _c03=dojo.html.getViewport();
var mb;
if(this.isShowing()){
mb=dojo.html.getMarginBox(this.domNode);
}else{
dojo.html.setVisibility(this.domNode,false);
dojo.html.show(this.domNode);
mb=dojo.html.getMarginBox(this.domNode);
dojo.html.hide(this.domNode);
dojo.html.setVisibility(this.domNode,true);
}
var x=_c02.x+(_c03.width-mb.width)/2;
var y=_c02.y+(_c03.height-mb.height)/2;
with(this.domNode.style){
left=x+"px";
top=y+"px";
}
},_onKey:function(evt){
if(evt.key){
var node=evt.target;
while(node!=null){
if(node==this.domNode){
return;
}
node=node.parentNode;
}
if(evt.key!=evt.KEY_TAB){
dojo.event.browser.stopEvent(evt);
}else{
if(!dojo.render.html.opera){
try{
this.tabStart.focus();
}
catch(e){
}
}
}
}
},showModalDialog:function(){
if(this.followScroll&&!this._scrollConnected){
this._scrollConnected=true;
dojo.event.connect(window,"onscroll",this,"_onScroll");
}
dojo.event.connect(document.documentElement,"onkey",this,"_onKey");
this.placeModalDialog();
this.setBackgroundOpacity();
this._sizeBackground();
this._showBackground();
this._fromTrap=true;
setTimeout(dojo.lang.hitch(this,function(){
try{
this.tabStart.focus();
}
catch(e){
}
}),50);
},hideModalDialog:function(){
if(this.focusElement){
dojo.byId(this.focusElement).focus();
dojo.byId(this.focusElement).blur();
}
this.bg.style.display="none";
this.bg.style.width=this.bg.style.height="1px";
if(this.bgIframe.iframe){
this.bgIframe.iframe.style.display="none";
}
dojo.event.disconnect(document.documentElement,"onkey",this,"_onKey");
if(this._scrollConnected){
this._scrollConnected=false;
dojo.event.disconnect(window,"onscroll",this,"_onScroll");
}
},_onScroll:function(){
var _c09=dojo.html.getScroll().offset;
this.bg.style.top=_c09.y+"px";
this.bg.style.left=_c09.x+"px";
this.placeModalDialog();
},checkSize:function(){
if(this.isShowing()){
this._sizeBackground();
this.placeModalDialog();
this.onResized();
}
},onBackgroundClick:function(){
if(this.lifetime-this.timeRemaining>=this.blockDuration){
return;
}
this.hide();
}});
dojo.widget.defineWidget("dojo.widget.Dialog",[dojo.widget.ContentPane,dojo.widget.ModalDialogBase],{templatePath:dojo.uri.dojoUri("src/widget/templates/Dialog.html"),blockDuration:0,lifetime:0,closeNode:"",postMixInProperties:function(){
dojo.widget.Dialog.superclass.postMixInProperties.apply(this,arguments);
if(this.closeNode){
this.setCloseControl(this.closeNode);
}
},postCreate:function(){
dojo.widget.Dialog.superclass.postCreate.apply(this,arguments);
dojo.widget.ModalDialogBase.prototype.postCreate.apply(this,arguments);
},show:function(){
if(this.lifetime){
this.timeRemaining=this.lifetime;
if(this.timerNode){
this.timerNode.innerHTML=Math.ceil(this.timeRemaining/1000);
}
if(this.blockDuration&&this.closeNode){
if(this.lifetime>this.blockDuration){
this.closeNode.style.visibility="hidden";
}else{
this.closeNode.style.display="none";
}
}
if(this.timer){
clearInterval(this.timer);
}
this.timer=setInterval(dojo.lang.hitch(this,"_onTick"),100);
}
this.showModalDialog();
dojo.widget.Dialog.superclass.show.call(this);
},onLoad:function(){
this.placeModalDialog();
dojo.widget.Dialog.superclass.onLoad.call(this);
},fillInTemplate:function(){
},hide:function(){
this.hideModalDialog();
dojo.widget.Dialog.superclass.hide.call(this);
if(this.timer){
clearInterval(this.timer);
}
},setTimerNode:function(node){
this.timerNode=node;
},setCloseControl:function(node){
this.closeNode=dojo.byId(node);
dojo.event.connect(this.closeNode,"onclick",this,"hide");
},setShowControl:function(node){
node=dojo.byId(node);
dojo.event.connect(node,"onclick",this,"show");
},_onTick:function(){
if(this.timer){
this.timeRemaining-=100;
if(this.lifetime-this.timeRemaining>=this.blockDuration){
if(this.closeNode){
this.closeNode.style.visibility="visible";
}
}
if(!this.timeRemaining){
clearInterval(this.timer);
this.hide();
}else{
if(this.timerNode){
this.timerNode.innerHTML=Math.ceil(this.timeRemaining/1000);
}
}
}
}});
dojo.provide("dojo.widget.ResizeHandle");
dojo.widget.defineWidget("dojo.widget.ResizeHandle",dojo.widget.HtmlWidget,{targetElmId:"",templateCssPath:dojo.uri.dojoUri("src/widget/templates/ResizeHandle.css"),templateString:"<div class=\"dojoHtmlResizeHandle\"><div></div></div>",postCreate:function(){
dojo.event.connect(this.domNode,"onmousedown",this,"_beginSizing");
},_beginSizing:function(e){
if(this._isSizing){
return false;
}
this.targetWidget=dojo.widget.byId(this.targetElmId);
this.targetDomNode=this.targetWidget?this.targetWidget.domNode:dojo.byId(this.targetElmId);
if(!this.targetDomNode){
return;
}
this._isSizing=true;
this.startPoint={"x":e.clientX,"y":e.clientY};
var mb=dojo.html.getMarginBox(this.targetDomNode);
this.startSize={"w":mb.width,"h":mb.height};
dojo.event.kwConnect({srcObj:dojo.body(),srcFunc:"onmousemove",targetObj:this,targetFunc:"_changeSizing",rate:25});
dojo.event.connect(dojo.body(),"onmouseup",this,"_endSizing");
e.preventDefault();
},_changeSizing:function(e){
try{
if(!e.clientX||!e.clientY){
return;
}
}
catch(e){
return;
}
var dx=this.startPoint.x-e.clientX;
var dy=this.startPoint.y-e.clientY;
var newW=this.startSize.w-dx;
var newH=this.startSize.h-dy;
if(this.minSize){
var mb=dojo.html.getMarginBox(this.targetDomNode);
if(newW<this.minSize.w){
newW=mb.width;
}
if(newH<this.minSize.h){
newH=mb.height;
}
}
if(this.targetWidget){
this.targetWidget.resizeTo(newW,newH);
}else{
dojo.html.setMarginBox(this.targetDomNode,{width:newW,height:newH});
}
e.preventDefault();
},_endSizing:function(e){
dojo.event.disconnect(dojo.body(),"onmousemove",this,"_changeSizing");
dojo.event.disconnect(dojo.body(),"onmouseup",this,"_endSizing");
this._isSizing=false;
}});
dojo.provide("dojo.widget.FloatingPane");
dojo.declare("dojo.widget.FloatingPaneBase",null,{title:"",iconSrc:"",hasShadow:false,constrainToContainer:false,taskBarId:"",resizable:true,titleBarDisplay:true,windowState:"normal",displayCloseAction:false,displayMinimizeAction:false,displayMaximizeAction:false,_max_taskBarConnectAttempts:5,_taskBarConnectAttempts:0,templatePath:dojo.uri.dojoUri("src/widget/templates/FloatingPane.html"),templateCssPath:dojo.uri.dojoUri("src/widget/templates/FloatingPane.css"),fillInFloatingPaneTemplate:function(args,frag){
var _c18=this.getFragNodeRef(frag);
dojo.html.copyStyle(this.domNode,_c18);
dojo.body().appendChild(this.domNode);
if(!this.isShowing()){
this.windowState="minimized";
}
if(this.iconSrc==""){
dojo.html.removeNode(this.titleBarIcon);
}else{
this.titleBarIcon.src=this.iconSrc.toString();
}
if(this.titleBarDisplay){
this.titleBar.style.display="";
dojo.html.disableSelection(this.titleBar);
this.titleBarIcon.style.display=(this.iconSrc==""?"none":"");
this.minimizeAction.style.display=(this.displayMinimizeAction?"":"none");
this.maximizeAction.style.display=(this.displayMaximizeAction&&this.windowState!="maximized"?"":"none");
this.restoreAction.style.display=(this.displayMaximizeAction&&this.windowState=="maximized"?"":"none");
this.closeAction.style.display=(this.displayCloseAction?"":"none");
this.drag=new dojo.dnd.HtmlDragMoveSource(this.domNode);
if(this.constrainToContainer){
this.drag.constrainTo();
}
this.drag.setDragHandle(this.titleBar);
var self=this;
dojo.event.topic.subscribe("dragMove",function(info){
if(info.source.domNode==self.domNode){
dojo.event.topic.publish("floatingPaneMove",{source:self});
}
});
}
if(this.resizable){
this.resizeBar.style.display="";
this.resizeHandle=dojo.widget.createWidget("ResizeHandle",{targetElmId:this.widgetId,id:this.widgetId+"_resize"});
this.resizeBar.appendChild(this.resizeHandle.domNode);
}
if(this.hasShadow){
this.shadow=new dojo.lfx.shadow(this.domNode);
}
this.bgIframe=new dojo.html.BackgroundIframe(this.domNode);
if(this.taskBarId){
this._taskBarSetup();
}
dojo.body().removeChild(this.domNode);
},postCreate:function(){
if(dojo.hostenv.post_load_){
this._setInitialWindowState();
}else{
dojo.addOnLoad(this,"_setInitialWindowState");
}
},maximizeWindow:function(evt){
var mb=dojo.html.getMarginBox(this.domNode);
this.previous={width:mb.width||this.width,height:mb.height||this.height,left:this.domNode.style.left,top:this.domNode.style.top,bottom:this.domNode.style.bottom,right:this.domNode.style.right};
if(this.domNode.parentNode.style.overflow.toLowerCase()!="hidden"){
this.parentPrevious={overflow:this.domNode.parentNode.style.overflow};
dojo.debug(this.domNode.parentNode.style.overflow);
this.domNode.parentNode.style.overflow="hidden";
}
this.domNode.style.left=dojo.html.getPixelValue(this.domNode.parentNode,"padding-left",true)+"px";
this.domNode.style.top=dojo.html.getPixelValue(this.domNode.parentNode,"padding-top",true)+"px";
if((this.domNode.parentNode.nodeName.toLowerCase()=="body")){
var _c1d=dojo.html.getViewport();
var _c1e=dojo.html.getPadding(dojo.body());
this.resizeTo(_c1d.width-_c1e.width,_c1d.height-_c1e.height);
}else{
var _c1f=dojo.html.getContentBox(this.domNode.parentNode);
this.resizeTo(_c1f.width,_c1f.height);
}
this.maximizeAction.style.display="none";
this.restoreAction.style.display="";
if(this.resizeHandle){
this.resizeHandle.domNode.style.display="none";
}
this.drag.setDragHandle(null);
this.windowState="maximized";
},minimizeWindow:function(evt){
this.hide();
for(var attr in this.parentPrevious){
this.domNode.parentNode.style[attr]=this.parentPrevious[attr];
}
this.lastWindowState=this.windowState;
this.windowState="minimized";
},restoreWindow:function(evt){
if(this.windowState=="minimized"){
this.show();
if(this.lastWindowState=="maximized"){
this.domNode.parentNode.style.overflow="hidden";
this.windowState="maximized";
}else{
this.windowState="normal";
}
}else{
if(this.windowState=="maximized"){
for(var attr in this.previous){
this.domNode.style[attr]=this.previous[attr];
}
for(var attr in this.parentPrevious){
this.domNode.parentNode.style[attr]=this.parentPrevious[attr];
}
this.resizeTo(this.previous.width,this.previous.height);
this.previous=null;
this.parentPrevious=null;
this.restoreAction.style.display="none";
this.maximizeAction.style.display=this.displayMaximizeAction?"":"none";
if(this.resizeHandle){
this.resizeHandle.domNode.style.display="";
}
this.drag.setDragHandle(this.titleBar);
this.windowState="normal";
}else{
}
}
},toggleDisplay:function(){
if(this.windowState=="minimized"){
this.restoreWindow();
}else{
this.minimizeWindow();
}
},closeWindow:function(evt){
dojo.html.removeNode(this.domNode);
this.destroy();
},onMouseDown:function(evt){
this.bringToTop();
},bringToTop:function(){
var _c26=dojo.widget.manager.getWidgetsByType(this.widgetType);
var _c27=[];
for(var x=0;x<_c26.length;x++){
if(this.widgetId!=_c26[x].widgetId){
_c27.push(_c26[x]);
}
}
_c27.sort(function(a,b){
return a.domNode.style.zIndex-b.domNode.style.zIndex;
});
_c27.push(this);
var _c2b=100;
for(x=0;x<_c27.length;x++){
_c27[x].domNode.style.zIndex=_c2b+x*2;
}
},_setInitialWindowState:function(){
if(this.isShowing()){
this.width=-1;
var mb=dojo.html.getMarginBox(this.domNode);
this.resizeTo(mb.width,mb.height);
}
if(this.windowState=="maximized"){
this.maximizeWindow();
this.show();
return;
}
if(this.windowState=="normal"){
this.show();
return;
}
if(this.windowState=="minimized"){
this.hide();
return;
}
this.windowState="minimized";
},_taskBarSetup:function(){
var _c2d=dojo.widget.getWidgetById(this.taskBarId);
if(!_c2d){
if(this._taskBarConnectAttempts<this._max_taskBarConnectAttempts){
dojo.lang.setTimeout(this,this._taskBarSetup,50);
this._taskBarConnectAttempts++;
}else{
dojo.debug("Unable to connect to the taskBar");
}
return;
}
_c2d.addChild(this);
},showFloatingPane:function(){
this.bringToTop();
},onFloatingPaneShow:function(){
var mb=dojo.html.getMarginBox(this.domNode);
this.resizeTo(mb.width,mb.height);
},resizeTo:function(_c2f,_c30){
dojo.html.setMarginBox(this.domNode,{width:_c2f,height:_c30});
dojo.widget.html.layout(this.domNode,[{domNode:this.titleBar,layoutAlign:"top"},{domNode:this.resizeBar,layoutAlign:"bottom"},{domNode:this.containerNode,layoutAlign:"client"}]);
dojo.widget.html.layout(this.containerNode,this.children,"top-bottom");
this.bgIframe.onResized();
if(this.shadow){
this.shadow.size(_c2f,_c30);
}
this.onResized();
},checkSize:function(){
},destroyFloatingPane:function(){
if(this.resizeHandle){
this.resizeHandle.destroy();
this.resizeHandle=null;
}
}});
dojo.widget.defineWidget("dojo.widget.FloatingPane",[dojo.widget.ContentPane,dojo.widget.FloatingPaneBase],{fillInTemplate:function(args,frag){
this.fillInFloatingPaneTemplate(args,frag);
dojo.widget.FloatingPane.superclass.fillInTemplate.call(this,args,frag);
},postCreate:function(){
dojo.widget.FloatingPaneBase.prototype.postCreate.apply(this,arguments);
dojo.widget.FloatingPane.superclass.postCreate.apply(this,arguments);
},show:function(){
dojo.widget.FloatingPane.superclass.show.apply(this,arguments);
this.showFloatingPane();
},onShow:function(){
dojo.widget.FloatingPane.superclass.onShow.call(this);
this.onFloatingPaneShow();
},destroy:function(){
this.destroyFloatingPane();
dojo.widget.FloatingPane.superclass.destroy.apply(this,arguments);
}});
dojo.widget.defineWidget("dojo.widget.ModalFloatingPane",[dojo.widget.FloatingPane,dojo.widget.ModalDialogBase],{windowState:"minimized",displayCloseAction:true,postCreate:function(){
dojo.widget.ModalDialogBase.prototype.postCreate.call(this);
dojo.widget.ModalFloatingPane.superclass.postCreate.call(this);
},show:function(){
this.showModalDialog();
dojo.widget.ModalFloatingPane.superclass.show.apply(this,arguments);
this.bg.style.zIndex=this.domNode.style.zIndex-1;
},hide:function(){
this.hideModalDialog();
dojo.widget.ModalFloatingPane.superclass.hide.apply(this,arguments);
},closeWindow:function(){
this.hide();
dojo.widget.ModalFloatingPane.superclass.closeWindow.apply(this,arguments);
}});
dojo.provide("dojo.widget.Editor2Plugin.AlwaysShowToolbar");
dojo.event.topic.subscribe("dojo.widget.Editor2::onLoad",function(_c33){
if(_c33.toolbarAlwaysVisible){
var p=new dojo.widget.Editor2Plugin.AlwaysShowToolbar(_c33);
}
});
dojo.declare("dojo.widget.Editor2Plugin.AlwaysShowToolbar",null,function(_c35){
this.editor=_c35;
this.editor.registerLoadedPlugin(this);
this.setup();
},{_scrollSetUp:false,_fixEnabled:false,_scrollThreshold:false,_handleScroll:true,setup:function(){
var tdn=this.editor.toolbarWidget;
if(!tdn.tbBgIframe){
tdn.tbBgIframe=new dojo.html.BackgroundIframe(tdn.domNode);
tdn.tbBgIframe.onResized();
}
this.scrollInterval=setInterval(dojo.lang.hitch(this,"globalOnScrollHandler"),100);
dojo.event.connect("before",this.editor.toolbarWidget,"destroy",this,"destroy");
},globalOnScrollHandler:function(){
var isIE=dojo.render.html.ie;
if(!this._handleScroll){
return;
}
var dh=dojo.html;
var tdn=this.editor.toolbarWidget.domNode;
var db=dojo.body();
if(!this._scrollSetUp){
this._scrollSetUp=true;
var _c3b=dh.getMarginBox(this.editor.domNode).width;
this._scrollThreshold=dh.abs(tdn,true).y;
if((isIE)&&(db)&&(dh.getStyle(db,"background-image")=="none")){
with(db.style){
backgroundImage="url("+dojo.uri.dojoUri("src/widget/templates/images/blank.gif")+")";
backgroundAttachment="fixed";
}
}
}
var _c3c=(window["pageYOffset"])?window["pageYOffset"]:(document["documentElement"]||document["body"]).scrollTop;
if(_c3c>this._scrollThreshold){
if(!this._fixEnabled){
var _c3d=dojo.html.getMarginBox(tdn);
this.editor.editorObject.style.marginTop=_c3d.height+"px";
if(isIE){
tdn.style.left=dojo.html.abs(tdn,dojo.html.boxSizing.MARGIN_BOX).x;
if(tdn.previousSibling){
this._IEOriginalPos=["after",tdn.previousSibling];
}else{
if(tdn.nextSibling){
this._IEOriginalPos=["before",tdn.nextSibling];
}else{
this._IEOriginalPos=["",tdn.parentNode];
}
}
dojo.body().appendChild(tdn);
dojo.html.addClass(tdn,"IEFixedToolbar");
}else{
with(tdn.style){
position="fixed";
top="0px";
}
}
tdn.style.width=_c3d.width+"px";
tdn.style.zIndex=1000;
this._fixEnabled=true;
}
if(!dojo.render.html.safari){
var _c3e=(this.height)?parseInt(this.editor.height):this.editor._lastHeight;
if(_c3c>(this._scrollThreshold+_c3e)){
tdn.style.display="none";
}else{
tdn.style.display="";
}
}
}else{
if(this._fixEnabled){
(this.editor.object||this.editor.iframe).style.marginTop=null;
with(tdn.style){
position="";
top="";
zIndex="";
display="";
}
if(isIE){
tdn.style.left="";
dojo.html.removeClass(tdn,"IEFixedToolbar");
if(this._IEOriginalPos){
dojo.html.insertAtPosition(tdn,this._IEOriginalPos[1],this._IEOriginalPos[0]);
this._IEOriginalPos=null;
}else{
dojo.html.insertBefore(tdn,this.editor.object||this.editor.iframe);
}
}
tdn.style.width="";
this._fixEnabled=false;
}
}
},destroy:function(){
this._IEOriginalPos=null;
this._handleScroll=false;
clearInterval(this.scrollInterval);
this.editor.unregisterLoadedPlugin(this);
if(dojo.render.html.ie){
dojo.html.removeClass(this.editor.toolbarWidget.domNode,"IEFixedToolbar");
}
}});
dojo.provide("dojo.widget.Editor2");
dojo.widget.Editor2Manager=new dojo.widget.HandlerManager;
dojo.lang.mixin(dojo.widget.Editor2Manager,{_currentInstance:null,commandState:{Disabled:0,Latched:1,Enabled:2},getCurrentInstance:function(){
return this._currentInstance;
},setCurrentInstance:function(inst){
this._currentInstance=inst;
},getCommand:function(_c40,name){
var _c42;
name=name.toLowerCase();
for(var i=0;i<this._registeredHandlers.length;i++){
_c42=this._registeredHandlers[i](_c40,name);
if(_c42){
return _c42;
}
}
switch(name){
case "htmltoggle":
_c42=new dojo.widget.Editor2BrowserCommand(_c40,name);
break;
case "formatblock":
_c42=new dojo.widget.Editor2FormatBlockCommand(_c40,name);
break;
case "anchor":
_c42=new dojo.widget.Editor2Command(_c40,name);
break;
case "createlink":
_c42=new dojo.widget.Editor2DialogCommand(_c40,name,{contentFile:"dojo.widget.Editor2Plugin.CreateLinkDialog",contentClass:"Editor2CreateLinkDialog",title:"Insert/Edit Link",width:"300px",height:"200px"});
break;
case "insertimage":
_c42=new dojo.widget.Editor2DialogCommand(_c40,name,{contentFile:"dojo.widget.Editor2Plugin.InsertImageDialog",contentClass:"Editor2InsertImageDialog",title:"Insert/Edit Image",width:"400px",height:"270px"});
break;
default:
var _c44=this.getCurrentInstance();
if((_c44&&_c44.queryCommandAvailable(name))||(!_c44&&dojo.widget.Editor2.prototype.queryCommandAvailable(name))){
_c42=new dojo.widget.Editor2BrowserCommand(_c40,name);
}else{
dojo.debug("dojo.widget.Editor2Manager.getCommand: Unknown command "+name);
return;
}
}
return _c42;
},destroy:function(){
this._currentInstance=null;
dojo.widget.HandlerManager.prototype.destroy.call(this);
}});
dojo.addOnUnload(dojo.widget.Editor2Manager,"destroy");
dojo.lang.declare("dojo.widget.Editor2Command",null,function(_c45,name){
this._editor=_c45;
this._updateTime=0;
this._name=name;
},{_text:"Unknown",execute:function(para){
dojo.unimplemented("dojo.widget.Editor2Command.execute");
},getText:function(){
return this._text;
},getState:function(){
return dojo.widget.Editor2Manager.commandState.Enabled;
},destroy:function(){
}});
dojo.widget.Editor2BrowserCommandNames={"bold":"Bold","copy":"Copy","cut":"Cut","Delete":"Delete","indent":"Indent","inserthorizontalrule":"Horizental Rule","insertorderedlist":"Numbered List","insertunorderedlist":"Bullet List","italic":"Italic","justifycenter":"Align Center","justifyfull":"Justify","justifyleft":"Align Left","justifyright":"Align Right","outdent":"Outdent","paste":"Paste","redo":"Redo","removeformat":"Remove Format","selectall":"Select All","strikethrough":"Strikethrough","subscript":"Subscript","superscript":"Superscript","underline":"Underline","undo":"Undo","unlink":"Remove Link","createlink":"Create Link","insertimage":"Insert Image","htmltoggle":"HTML Source","forecolor":"Foreground Color","hilitecolor":"Background Color","plainformatblock":"Paragraph Style","formatblock":"Paragraph Style","fontsize":"Font Size","fontname":"Font Name"};
dojo.lang.declare("dojo.widget.Editor2BrowserCommand",dojo.widget.Editor2Command,function(_c48,name){
var text=dojo.widget.Editor2BrowserCommandNames[name.toLowerCase()];
if(text){
this._text=text;
}
},{execute:function(para){
this._editor.execCommand(this._name,para);
},getState:function(){
if(this._editor._lastStateTimestamp>this._updateTime||this._state==undefined){
this._updateTime=this._editor._lastStateTimestamp;
try{
if(this._editor.queryCommandEnabled(this._name)){
if(this._editor.queryCommandState(this._name)){
this._state=dojo.widget.Editor2Manager.commandState.Latched;
}else{
this._state=dojo.widget.Editor2Manager.commandState.Enabled;
}
}else{
this._state=dojo.widget.Editor2Manager.commandState.Disabled;
}
}
catch(e){
this._state=dojo.widget.Editor2Manager.commandState.Enabled;
}
}
return this._state;
},getValue:function(){
try{
return this._editor.queryCommandValue(this._name);
}
catch(e){
}
}});
dojo.lang.declare("dojo.widget.Editor2FormatBlockCommand",dojo.widget.Editor2BrowserCommand,{});
dojo.widget.defineWidget("dojo.widget.Editor2Dialog",[dojo.widget.HtmlWidget,dojo.widget.FloatingPaneBase,dojo.widget.ModalDialogBase],{templatePath:dojo.uri.dojoUri("src/widget/templates/Editor2/EditorDialog.html"),modal:true,width:"",height:"",windowState:"minimized",displayCloseAction:true,contentFile:"",contentClass:"",fillInTemplate:function(args,frag){
this.fillInFloatingPaneTemplate(args,frag);
dojo.widget.Editor2Dialog.superclass.fillInTemplate.call(this,args,frag);
},postCreate:function(){
if(this.contentFile){
dojo.require(this.contentFile);
}
if(this.modal){
dojo.widget.ModalDialogBase.prototype.postCreate.call(this);
}else{
with(this.domNode.style){
zIndex=999;
display="none";
}
}
dojo.widget.FloatingPaneBase.prototype.postCreate.apply(this,arguments);
dojo.widget.Editor2Dialog.superclass.postCreate.call(this);
if(this.width&&this.height){
with(this.domNode.style){
width=this.width;
height=this.height;
}
}
},createContent:function(){
if(!this.contentWidget&&this.contentClass){
this.contentWidget=dojo.widget.createWidget(this.contentClass);
this.addChild(this.contentWidget);
}
},show:function(){
if(!this.contentWidget){
dojo.widget.Editor2Dialog.superclass.show.apply(this,arguments);
this.createContent();
dojo.widget.Editor2Dialog.superclass.hide.call(this);
}
if(!this.contentWidget||!this.contentWidget.loadContent()){
return;
}
this.showFloatingPane();
dojo.widget.Editor2Dialog.superclass.show.apply(this,arguments);
if(this.modal){
this.showModalDialog();
}
if(this.modal){
this.bg.style.zIndex=this.domNode.style.zIndex-1;
}
},onShow:function(){
dojo.widget.Editor2Dialog.superclass.onShow.call(this);
this.onFloatingPaneShow();
},closeWindow:function(){
this.hide();
dojo.widget.Editor2Dialog.superclass.closeWindow.apply(this,arguments);
},hide:function(){
if(this.modal){
this.hideModalDialog();
}
dojo.widget.Editor2Dialog.superclass.hide.call(this);
},checkSize:function(){
if(this.isShowing()){
if(this.modal){
this._sizeBackground();
}
this.placeModalDialog();
this.onResized();
}
}});
dojo.widget.defineWidget("dojo.widget.Editor2DialogContent",dojo.widget.HtmlWidget,{widgetsInTemplate:true,loadContent:function(){
return true;
},cancel:function(){
this.parent.hide();
}});
dojo.lang.declare("dojo.widget.Editor2DialogCommand",dojo.widget.Editor2BrowserCommand,function(_c4e,name,_c50){
this.dialogParas=_c50;
},{execute:function(){
if(!this.dialog){
if(!this.dialogParas.contentFile||!this.dialogParas.contentClass){
alert("contentFile and contentClass should be set for dojo.widget.Editor2DialogCommand.dialogParas!");
return;
}
this.dialog=dojo.widget.createWidget("Editor2Dialog",this.dialogParas);
dojo.body().appendChild(this.dialog.domNode);
dojo.event.connect(this,"destroy",this.dialog,"destroy");
}
this.dialog.show();
},getText:function(){
return this.dialogParas.title||dojo.widget.Editor2DialogCommand.superclass.getText.call(this);
}});
dojo.widget.Editor2ToolbarGroups={};
dojo.widget.defineWidget("dojo.widget.Editor2",dojo.widget.RichText,function(){
this._loadedCommands={};
},{toolbarAlwaysVisible:false,toolbarWidget:null,scrollInterval:null,toolbarTemplatePath:dojo.uri.dojoUri("src/widget/templates/EditorToolbarOneline.html"),toolbarTemplateCssPath:null,toolbarPlaceHolder:"",_inSourceMode:false,_htmlEditNode:null,toolbarGroup:"",shareToolbar:false,contextMenuGroupSet:"",editorOnLoad:function(){
dojo.event.topic.publish("dojo.widget.Editor2::preLoadingToolbar",this);
if(this.toolbarAlwaysVisible){
dojo.require("dojo.widget.Editor2Plugin.AlwaysShowToolbar");
}
if(this.toolbarWidget){
this.toolbarWidget.show();
dojo.html.insertBefore(this.toolbarWidget.domNode,this.domNode.firstChild);
}else{
if(this.shareToolbar){
dojo.deprecated("Editor2:shareToolbar is deprecated in favor of toolbarGroup","0.5");
this.toolbarGroup="defaultDojoToolbarGroup";
}
if(this.toolbarGroup){
if(dojo.widget.Editor2ToolbarGroups[this.toolbarGroup]){
this.toolbarWidget=dojo.widget.Editor2ToolbarGroups[this.toolbarGroup];
}
}
if(!this.toolbarWidget){
var _c51={shareGroup:this.toolbarGroup,parent:this};
_c51.templatePath=this.toolbarTemplatePath;
if(this.toolbarTemplateCssPath){
_c51.templateCssPath=this.toolbarTemplateCssPath;
}
if(this.toolbarPlaceHolder){
this.toolbarWidget=dojo.widget.createWidget("Editor2Toolbar",_c51,dojo.byId(this.toolbarPlaceHolder),"after");
}else{
this.toolbarWidget=dojo.widget.createWidget("Editor2Toolbar",_c51,this.domNode.firstChild,"before");
}
if(this.toolbarGroup){
dojo.widget.Editor2ToolbarGroups[this.toolbarGroup]=this.toolbarWidget;
}
dojo.event.connect(this,"close",this.toolbarWidget,"hide");
this.toolbarLoaded();
}
}
dojo.event.topic.registerPublisher("Editor2.clobberFocus",this,"clobberFocus");
dojo.event.topic.subscribe("Editor2.clobberFocus",this,"setBlur");
dojo.event.topic.publish("dojo.widget.Editor2::onLoad",this);
},toolbarLoaded:function(){
},registerLoadedPlugin:function(obj){
if(!this.loadedPlugins){
this.loadedPlugins=[];
}
this.loadedPlugins.push(obj);
},unregisterLoadedPlugin:function(obj){
for(var i in this.loadedPlugins){
if(this.loadedPlugins[i]===obj){
delete this.loadedPlugins[i];
return;
}
}
dojo.debug("dojo.widget.Editor2.unregisterLoadedPlugin: unknow plugin object: "+obj);
},execCommand:function(_c55,_c56){
switch(_c55.toLowerCase()){
case "htmltoggle":
this.toggleHtmlEditing();
break;
default:
dojo.widget.Editor2.superclass.execCommand.apply(this,arguments);
}
},queryCommandEnabled:function(_c57,_c58){
switch(_c57.toLowerCase()){
case "htmltoggle":
return true;
default:
if(this._inSourceMode){
return false;
}
return dojo.widget.Editor2.superclass.queryCommandEnabled.apply(this,arguments);
}
},queryCommandState:function(_c59,_c5a){
switch(_c59.toLowerCase()){
case "htmltoggle":
return this._inSourceMode;
default:
return dojo.widget.Editor2.superclass.queryCommandState.apply(this,arguments);
}
},onClick:function(e){
dojo.widget.Editor2.superclass.onClick.call(this,e);
if(dojo.widget.PopupManager){
if(!e){
e=this.window.event;
}
dojo.widget.PopupManager.onClick(e);
}
},clobberFocus:function(){
},toggleHtmlEditing:function(){
if(this===dojo.widget.Editor2Manager.getCurrentInstance()){
if(!this._inSourceMode){
var html=this.getEditorContent();
this._inSourceMode=true;
if(!this._htmlEditNode){
this._htmlEditNode=dojo.doc().createElement("textarea");
dojo.html.insertAfter(this._htmlEditNode,this.editorObject);
}
this._htmlEditNode.style.display="";
this._htmlEditNode.style.width="100%";
this._htmlEditNode.style.height=dojo.html.getBorderBox(this.editNode).height+"px";
this._htmlEditNode.value=html;
with(this.editorObject.style){
position="absolute";
left="-2000px";
top="-2000px";
}
}else{
this._inSourceMode=false;
this._htmlEditNode.blur();
with(this.editorObject.style){
position="";
left="";
top="";
}
var html=this._htmlEditNode.value;
dojo.lang.setTimeout(this,"replaceEditorContent",1,html);
this._htmlEditNode.style.display="none";
this.focus();
}
this.onDisplayChanged(null,true);
}
},setFocus:function(){
if(dojo.widget.Editor2Manager.getCurrentInstance()===this){
return;
}
this.clobberFocus();
dojo.widget.Editor2Manager.setCurrentInstance(this);
},setBlur:function(){
},saveSelection:function(){
this._bookmark=null;
this._bookmark=dojo.withGlobal(this.window,dojo.html.selection.getBookmark);
},restoreSelection:function(){
if(this._bookmark){
this.focus();
dojo.withGlobal(this.window,"moveToBookmark",dojo.html.selection,[this._bookmark]);
this._bookmark=null;
}else{
dojo.debug("restoreSelection: no saved selection is found!");
}
},_updateToolbarLastRan:null,_updateToolbarTimer:null,_updateToolbarFrequency:500,updateToolbar:function(_c5d){
if((!this.isLoaded)||(!this.toolbarWidget)){
return;
}
var diff=new Date()-this._updateToolbarLastRan;
if((!_c5d)&&(this._updateToolbarLastRan)&&((diff<this._updateToolbarFrequency))){
clearTimeout(this._updateToolbarTimer);
var _c5f=this;
this._updateToolbarTimer=setTimeout(function(){
_c5f.updateToolbar();
},this._updateToolbarFrequency/2);
return;
}else{
this._updateToolbarLastRan=new Date();
}
if(dojo.widget.Editor2Manager.getCurrentInstance()!==this){
return;
}
this.toolbarWidget.update();
},destroy:function(_c60){
this._htmlEditNode=null;
dojo.event.disconnect(this,"close",this.toolbarWidget,"hide");
if(!_c60){
this.toolbarWidget.destroy();
}
dojo.widget.Editor2.superclass.destroy.call(this);
},_lastStateTimestamp:0,onDisplayChanged:function(e,_c62){
this._lastStateTimestamp=(new Date()).getTime();
dojo.widget.Editor2.superclass.onDisplayChanged.call(this,e);
this.updateToolbar(_c62);
},onLoad:function(){
try{
dojo.widget.Editor2.superclass.onLoad.call(this);
}
catch(e){
dojo.debug(e);
}
this.editorOnLoad();
},onFocus:function(){
dojo.widget.Editor2.superclass.onFocus.call(this);
this.setFocus();
},getEditorContent:function(){
if(this._inSourceMode){
return this._htmlEditNode.value;
}
return dojo.widget.Editor2.superclass.getEditorContent.call(this);
},replaceEditorContent:function(html){
if(this._inSourceMode){
this._htmlEditNode.value=html;
return;
}
dojo.widget.Editor2.superclass.replaceEditorContent.apply(this,arguments);
},getCommand:function(name){
if(this._loadedCommands[name]){
return this._loadedCommands[name];
}
var cmd=dojo.widget.Editor2Manager.getCommand(this,name);
this._loadedCommands[name]=cmd;
return cmd;
},shortcuts:[["bold"],["italic"],["underline"],["selectall","a"],["insertunorderedlist","\\"]],setupDefaultShortcuts:function(){
var exec=function(cmd){
return function(){
cmd.execute();
};
};
var self=this;
dojo.lang.forEach(this.shortcuts,function(item){
var cmd=self.getCommand(item[0]);
if(cmd){
self.addKeyHandler(item[1]?item[1]:item[0].charAt(0),item[2]==undefined?self.KEY_CTRL:item[2],exec(cmd));
}
});
}});


__CPAN_EDITION__ editor build.txt

Files baked into this package:

dojoGuardStart.js,
../src/bootstrap1.js,
../src/loader.js,
dojoGuardEnd.js,
../src/hostenv_browser.js,
../src/bootstrap2.js,
../src/dom.js,
../src/xml/Parse.js,
../src/lang/common.js,
../src/lang/func.js,
../src/lang/array.js,
../src/lang/extras.js,
../src/lang/declare.js,
../src/ns.js,
../src/event/common.js,
../src/event/topic.js,
../src/event/browser.js,
../src/event/__package__.js,
../src/widget/Manager.js,
../src/uri/Uri.js,
../src/uri/__package__.js,
../src/html/common.js,
../src/a11y.js,
../src/widget/Widget.js,
../src/widget/Parse.js,
../src/html/style.js,
../src/widget/DomWidget.js,
../src/html/display.js,
../src/html/layout.js,
../src/html/util.js,
../src/gfx/color.js,
../src/lfx/Animation.js,
../src/html/color.js,
../src/lfx/html.js,
../src/lfx/__package__.js,
../src/lfx/toggle.js,
../src/widget/HtmlWidget.js,
../src/widget/__package__.js,
../src/string/common.js,
../src/string.js,
../src/io/common.js,
../src/string/extras.js,
../src/undo/browser.js,
../src/io/BrowserIO.js,
../src/io/cookie.js,
../src/io/__package__.js,
../src/widget/Toolbar.js,
../src/html/__package__.js,
../src/html/selection.js,
../src/Deferred.js,
../src/widget/RichText.js,
../src/widget/ColorPalette.js,
../src/widget/Editor.js,
../src/lang/type.js,
../src/lang/assert.js,
../src/AdapterRegistry.js,
../src/lang/repr.js,
../src/lang/__package__.js,
../src/html/iframe.js,
../src/widget/PopupContainer.js,
../src/widget/ContentPane.js,
../src/widget/Editor2Toolbar.js,
../src/lfx/shadow.js,
../src/widget/html/layout.js,
../src/dnd/DragAndDrop.js,
../src/dnd/HtmlDragManager.js,
../src/dnd/HtmlDragAndDrop.js,
../src/dnd/__package__.js,
../src/dnd/HtmlDragMove.js,
../src/widget/Dialog.js,
../src/widget/ResizeHandle.js,
../src/widget/FloatingPane.js,
../src/widget/Editor2Plugin/AlwaysShowToolbar.js,
../src/widget/Editor2.js

		
__CPAN_EDITION__ event dojo.js
/*
	Copyright (c) 2004-2006, The Dojo Foundation
	All Rights Reserved.

	Licensed under the Academic Free License version 2.1 or above OR the
	modified BSD license. For more information on Dojo licensing, see:

		http://dojotoolkit.org/community/licensing.shtml
*/

/*
	This is a compiled version of Dojo, built for deployment and not for
	development. To get an editable version, please visit:

		http://dojotoolkit.org

	for documentation and information on getting the source.
*/

if(typeof dojo=="undefined"){
var dj_global=this;
var dj_currentContext=this;
function dj_undef(_1,_2){
return (typeof (_2||dj_currentContext)[_1]=="undefined");
}
if(dj_undef("djConfig",this)){
var djConfig={};
}
if(dj_undef("dojo",this)){
var dojo={};
}
dojo.global=function(){
return dj_currentContext;
};
dojo.locale=djConfig.locale;
dojo.version={major:0,minor:4,patch:1,flag:"",revision:Number("$Rev: 6824 $".match(/[0-9]+/)[0]),toString:function(){
with(dojo.version){
return major+"."+minor+"."+patch+flag+" ("+revision+")";
}
}};
dojo.evalProp=function(_3,_4,_5){
if((!_4)||(!_3)){
return undefined;
}
if(!dj_undef(_3,_4)){
return _4[_3];
}
return (_5?(_4[_3]={}):undefined);
};
dojo.parseObjPath=function(_6,_7,_8){
var _9=(_7||dojo.global());
var _a=_6.split(".");
var _b=_a.pop();
for(var i=0,l=_a.length;i<l&&_9;i++){
_9=dojo.evalProp(_a[i],_9,_8);
}
return {obj:_9,prop:_b};
};
dojo.evalObjPath=function(_e,_f){
if(typeof _e!="string"){
return dojo.global();
}
if(_e.indexOf(".")==-1){
return dojo.evalProp(_e,dojo.global(),_f);
}
var ref=dojo.parseObjPath(_e,dojo.global(),_f);
if(ref){
return dojo.evalProp(ref.prop,ref.obj,_f);
}
return null;
};
dojo.errorToString=function(_11){
if(!dj_undef("message",_11)){
return _11.message;
}else{
if(!dj_undef("description",_11)){
return _11.description;
}else{
return _11;
}
}
};
dojo.raise=function(_12,_13){
if(_13){
_12=_12+": "+dojo.errorToString(_13);
}else{
_12=dojo.errorToString(_12);
}
try{
if(djConfig.isDebug){
dojo.hostenv.println("FATAL exception raised: "+_12);
}
}
catch(e){
}
throw _13||Error(_12);
};
dojo.debug=function(){
};
dojo.debugShallow=function(obj){
};
dojo.profile={start:function(){
},end:function(){
},stop:function(){
},dump:function(){
}};
function dj_eval(_15){
return dj_global.eval?dj_global.eval(_15):eval(_15);
}
dojo.unimplemented=function(_16,_17){
var _18="'"+_16+"' not implemented";
if(_17!=null){
_18+=" "+_17;
}
dojo.raise(_18);
};
dojo.deprecated=function(_19,_1a,_1b){
var _1c="DEPRECATED: "+_19;
if(_1a){
_1c+=" "+_1a;
}
if(_1b){
_1c+=" -- will be removed in version: "+_1b;
}
dojo.debug(_1c);
};
dojo.render=(function(){
function vscaffold(_1d,_1e){
var tmp={capable:false,support:{builtin:false,plugin:false},prefixes:_1d};
for(var i=0;i<_1e.length;i++){
tmp[_1e[i]]=false;
}
return tmp;
}
return {name:"",ver:dojo.version,os:{win:false,linux:false,osx:false},html:vscaffold(["html"],["ie","opera","khtml","safari","moz"]),svg:vscaffold(["svg"],["corel","adobe","batik"]),vml:vscaffold(["vml"],["ie"]),swf:vscaffold(["Swf","Flash","Mm"],["mm"]),swt:vscaffold(["Swt"],["ibm"])};
})();
dojo.hostenv=(function(){
var _21={isDebug:false,allowQueryConfig:false,baseScriptUri:"",baseRelativePath:"",libraryScriptUri:"",iePreventClobber:false,ieClobberMinimal:true,preventBackButtonFix:true,delayMozLoadingFix:false,searchIds:[],parseWidgets:true};
if(typeof djConfig=="undefined"){
djConfig=_21;
}else{
for(var _22 in _21){
if(typeof djConfig[_22]=="undefined"){
djConfig[_22]=_21[_22];
}
}
}
return {name_:"(unset)",version_:"(unset)",getName:function(){
return this.name_;
},getVersion:function(){
return this.version_;
},getText:function(uri){
dojo.unimplemented("getText","uri="+uri);
}};
})();
dojo.hostenv.getBaseScriptUri=function(){
if(djConfig.baseScriptUri.length){
return djConfig.baseScriptUri;
}
var uri=new String(djConfig.libraryScriptUri||djConfig.baseRelativePath);
if(!uri){
dojo.raise("Nothing returned by getLibraryScriptUri(): "+uri);
}
var _25=uri.lastIndexOf("/");
djConfig.baseScriptUri=djConfig.baseRelativePath;
return djConfig.baseScriptUri;
};
(function(){
var _26={pkgFileName:"__package__",loading_modules_:{},loaded_modules_:{},addedToLoadingCount:[],removedFromLoadingCount:[],inFlightCount:0,modulePrefixes_:{dojo:{name:"dojo",value:"src"}},setModulePrefix:function(_27,_28){
this.modulePrefixes_[_27]={name:_27,value:_28};
},moduleHasPrefix:function(_29){
var mp=this.modulePrefixes_;
return Boolean(mp[_29]&&mp[_29].value);
},getModulePrefix:function(_2b){
if(this.moduleHasPrefix(_2b)){
return this.modulePrefixes_[_2b].value;
}
return _2b;
},getTextStack:[],loadUriStack:[],loadedUris:[],post_load_:false,modulesLoadedListeners:[],unloadListeners:[],loadNotifying:false};
for(var _2c in _26){
dojo.hostenv[_2c]=_26[_2c];
}
})();
dojo.hostenv.loadPath=function(_2d,_2e,cb){
var uri;
if(_2d.charAt(0)=="/"||_2d.match(/^\w+:/)){
uri=_2d;
}else{
uri=this.getBaseScriptUri()+_2d;
}
if(djConfig.cacheBust&&dojo.render.html.capable){
uri+="?"+String(djConfig.cacheBust).replace(/\W+/g,"");
}
try{
return !_2e?this.loadUri(uri,cb):this.loadUriAndCheck(uri,_2e,cb);
}
catch(e){
dojo.debug(e);
return false;
}
};
dojo.hostenv.loadUri=function(uri,cb){
if(this.loadedUris[uri]){
return true;
}
var _33=this.getText(uri,null,true);
if(!_33){
return false;
}
this.loadedUris[uri]=true;
if(cb){
_33="("+_33+")";
}
var _34=dj_eval(_33);
if(cb){
cb(_34);
}
return true;
};
dojo.hostenv.loadUriAndCheck=function(uri,_36,cb){
var ok=true;
try{
ok=this.loadUri(uri,cb);
}
catch(e){
dojo.debug("failed loading ",uri," with error: ",e);
}
return Boolean(ok&&this.findModule(_36,false));
};
dojo.loaded=function(){
};
dojo.unloaded=function(){
};
dojo.hostenv.loaded=function(){
this.loadNotifying=true;
this.post_load_=true;
var mll=this.modulesLoadedListeners;
for(var x=0;x<mll.length;x++){
mll[x]();
}
this.modulesLoadedListeners=[];
this.loadNotifying=false;
dojo.loaded();
};
dojo.hostenv.unloaded=function(){
var mll=this.unloadListeners;
while(mll.length){
(mll.pop())();
}
dojo.unloaded();
};
dojo.addOnLoad=function(obj,_3d){
var dh=dojo.hostenv;
if(arguments.length==1){
dh.modulesLoadedListeners.push(obj);
}else{
if(arguments.length>1){
dh.modulesLoadedListeners.push(function(){
obj[_3d]();
});
}
}
if(dh.post_load_&&dh.inFlightCount==0&&!dh.loadNotifying){
dh.callLoaded();
}
};
dojo.addOnUnload=function(obj,_40){
var dh=dojo.hostenv;
if(arguments.length==1){
dh.unloadListeners.push(obj);
}else{
if(arguments.length>1){
dh.unloadListeners.push(function(){
obj[_40]();
});
}
}
};
dojo.hostenv.modulesLoaded=function(){
if(this.post_load_){
return;
}
if(this.loadUriStack.length==0&&this.getTextStack.length==0){
if(this.inFlightCount>0){
dojo.debug("files still in flight!");
return;
}
dojo.hostenv.callLoaded();
}
};
dojo.hostenv.callLoaded=function(){
if(typeof setTimeout=="object"){
setTimeout("dojo.hostenv.loaded();",0);
}else{
dojo.hostenv.loaded();
}
};
dojo.hostenv.getModuleSymbols=function(_42){
var _43=_42.split(".");
for(var i=_43.length;i>0;i--){
var _45=_43.slice(0,i).join(".");
if((i==1)&&!this.moduleHasPrefix(_45)){
_43[0]="../"+_43[0];
}else{
var _46=this.getModulePrefix(_45);
if(_46!=_45){
_43.splice(0,i,_46);
break;
}
}
}
return _43;
};
dojo.hostenv._global_omit_module_check=false;
dojo.hostenv.loadModule=function(_47,_48,_49){
if(!_47){
return;
}
_49=this._global_omit_module_check||_49;
var _4a=this.findModule(_47,false);
if(_4a){
return _4a;
}
if(dj_undef(_47,this.loading_modules_)){
this.addedToLoadingCount.push(_47);
}
this.loading_modules_[_47]=1;
var _4b=_47.replace(/\./g,"/")+".js";
var _4c=_47.split(".");
var _4d=this.getModuleSymbols(_47);
var _4e=((_4d[0].charAt(0)!="/")&&!_4d[0].match(/^\w+:/));
var _4f=_4d[_4d.length-1];
var ok;
if(_4f=="*"){
_47=_4c.slice(0,-1).join(".");
while(_4d.length){
_4d.pop();
_4d.push(this.pkgFileName);
_4b=_4d.join("/")+".js";
if(_4e&&_4b.charAt(0)=="/"){
_4b=_4b.slice(1);
}
ok=this.loadPath(_4b,!_49?_47:null);
if(ok){
break;
}
_4d.pop();
}
}else{
_4b=_4d.join("/")+".js";
_47=_4c.join(".");
var _51=!_49?_47:null;
ok=this.loadPath(_4b,_51);
if(!ok&&!_48){
_4d.pop();
while(_4d.length){
_4b=_4d.join("/")+".js";
ok=this.loadPath(_4b,_51);
if(ok){
break;
}
_4d.pop();
_4b=_4d.join("/")+"/"+this.pkgFileName+".js";
if(_4e&&_4b.charAt(0)=="/"){
_4b=_4b.slice(1);
}
ok=this.loadPath(_4b,_51);
if(ok){
break;
}
}
}
if(!ok&&!_49){
dojo.raise("Could not load '"+_47+"'; last tried '"+_4b+"'");
}
}
if(!_49&&!this["isXDomain"]){
_4a=this.findModule(_47,false);
if(!_4a){
dojo.raise("symbol '"+_47+"' is not defined after loading '"+_4b+"'");
}
}
return _4a;
};
dojo.hostenv.startPackage=function(_52){
var _53=String(_52);
var _54=_53;
var _55=_52.split(/\./);
if(_55[_55.length-1]=="*"){
_55.pop();
_54=_55.join(".");
}
var _56=dojo.evalObjPath(_54,true);
this.loaded_modules_[_53]=_56;
this.loaded_modules_[_54]=_56;
return _56;
};
dojo.hostenv.findModule=function(_57,_58){
var lmn=String(_57);
if(this.loaded_modules_[lmn]){
return this.loaded_modules_[lmn];
}
if(_58){
dojo.raise("no loaded module named '"+_57+"'");
}
return null;
};
dojo.kwCompoundRequire=function(_5a){
var _5b=_5a["common"]||[];
var _5c=_5a[dojo.hostenv.name_]?_5b.concat(_5a[dojo.hostenv.name_]||[]):_5b.concat(_5a["default"]||[]);
for(var x=0;x<_5c.length;x++){
var _5e=_5c[x];
if(_5e.constructor==Array){
dojo.hostenv.loadModule.apply(dojo.hostenv,_5e);
}else{
dojo.hostenv.loadModule(_5e);
}
}
};
dojo.require=function(_5f){
dojo.hostenv.loadModule.apply(dojo.hostenv,arguments);
};
dojo.requireIf=function(_60,_61){
var _62=arguments[0];
if((_62===true)||(_62=="common")||(_62&&dojo.render[_62].capable)){
var _63=[];
for(var i=1;i<arguments.length;i++){
_63.push(arguments[i]);
}
dojo.require.apply(dojo,_63);
}
};
dojo.requireAfterIf=dojo.requireIf;
dojo.provide=function(_65){
return dojo.hostenv.startPackage.apply(dojo.hostenv,arguments);
};
dojo.registerModulePath=function(_66,_67){
return dojo.hostenv.setModulePrefix(_66,_67);
};
dojo.setModulePrefix=function(_68,_69){
dojo.deprecated("dojo.setModulePrefix(\""+_68+"\", \""+_69+"\")","replaced by dojo.registerModulePath","0.5");
return dojo.registerModulePath(_68,_69);
};
dojo.exists=function(obj,_6b){
var p=_6b.split(".");
for(var i=0;i<p.length;i++){
if(!obj[p[i]]){
return false;
}
obj=obj[p[i]];
}
return true;
};
dojo.hostenv.normalizeLocale=function(_6e){
var _6f=_6e?_6e.toLowerCase():dojo.locale;
if(_6f=="root"){
_6f="ROOT";
}
return _6f;
};
dojo.hostenv.searchLocalePath=function(_70,_71,_72){
_70=dojo.hostenv.normalizeLocale(_70);
var _73=_70.split("-");
var _74=[];
for(var i=_73.length;i>0;i--){
_74.push(_73.slice(0,i).join("-"));
}
_74.push(false);
if(_71){
_74.reverse();
}
for(var j=_74.length-1;j>=0;j--){
var loc=_74[j]||"ROOT";
var _78=_72(loc);
if(_78){
break;
}
}
};
dojo.hostenv.localesGenerated;
dojo.hostenv.registerNlsPrefix=function(){
dojo.registerModulePath("nls","nls");
};
dojo.hostenv.preloadLocalizations=function(){
if(dojo.hostenv.localesGenerated){
dojo.hostenv.registerNlsPrefix();
function preload(_79){
_79=dojo.hostenv.normalizeLocale(_79);
dojo.hostenv.searchLocalePath(_79,true,function(loc){
for(var i=0;i<dojo.hostenv.localesGenerated.length;i++){
if(dojo.hostenv.localesGenerated[i]==loc){
dojo["require"]("nls.dojo_"+loc);
return true;
}
}
return false;
});
}
preload();
var _7c=djConfig.extraLocale||[];
for(var i=0;i<_7c.length;i++){
preload(_7c[i]);
}
}
dojo.hostenv.preloadLocalizations=function(){
};
};
dojo.requireLocalization=function(_7e,_7f,_80,_81){
dojo.hostenv.preloadLocalizations();
var _82=dojo.hostenv.normalizeLocale(_80);
var _83=[_7e,"nls",_7f].join(".");
var _84="";
if(_81){
var _85=_81.split(",");
for(var i=0;i<_85.length;i++){
if(_82.indexOf(_85[i])==0){
if(_85[i].length>_84.length){
_84=_85[i];
}
}
}
if(!_84){
_84="ROOT";
}
}
var _87=_81?_84:_82;
var _88=dojo.hostenv.findModule(_83);
var _89=null;
if(_88){
if(djConfig.localizationComplete&&_88._built){
return;
}
var _8a=_87.replace("-","_");
var _8b=_83+"."+_8a;
_89=dojo.hostenv.findModule(_8b);
}
if(!_89){
_88=dojo.hostenv.startPackage(_83);
var _8c=dojo.hostenv.getModuleSymbols(_7e);
var _8d=_8c.concat("nls").join("/");
var _8e;
dojo.hostenv.searchLocalePath(_87,_81,function(loc){
var _90=loc.replace("-","_");
var _91=_83+"."+_90;
var _92=false;
if(!dojo.hostenv.findModule(_91)){
dojo.hostenv.startPackage(_91);
var _93=[_8d];
if(loc!="ROOT"){
_93.push(loc);
}
_93.push(_7f);
var _94=_93.join("/")+".js";
_92=dojo.hostenv.loadPath(_94,null,function(_95){
var _96=function(){
};
_96.prototype=_8e;
_88[_90]=new _96();
for(var j in _95){
_88[_90][j]=_95[j];
}
});
}else{
_92=true;
}
if(_92&&_88[_90]){
_8e=_88[_90];
}else{
_88[_90]=_8e;
}
if(_81){
return true;
}
});
}
if(_81&&_82!=_84){
_88[_82.replace("-","_")]=_88[_84.replace("-","_")];
}
};
(function(){
var _98=djConfig.extraLocale;
if(_98){
if(!_98 instanceof Array){
_98=[_98];
}
var req=dojo.requireLocalization;
dojo.requireLocalization=function(m,b,_9c,_9d){
req(m,b,_9c,_9d);
if(_9c){
return;
}
for(var i=0;i<_98.length;i++){
req(m,b,_98[i],_9d);
}
};
}
})();
}
if(typeof window!="undefined"){
(function(){
if(djConfig.allowQueryConfig){
var _9f=document.location.toString();
var _a0=_9f.split("?",2);
if(_a0.length>1){
var _a1=_a0[1];
var _a2=_a1.split("&");
for(var x in _a2){
var sp=_a2[x].split("=");
if((sp[0].length>9)&&(sp[0].substr(0,9)=="djConfig.")){
var opt=sp[0].substr(9);
try{
djConfig[opt]=eval(sp[1]);
}
catch(e){
djConfig[opt]=sp[1];
}
}
}
}
}
if(((djConfig["baseScriptUri"]=="")||(djConfig["baseRelativePath"]==""))&&(document&&document.getElementsByTagName)){
var _a6=document.getElementsByTagName("script");
var _a7=/(__package__|dojo|bootstrap1)\.js([\?\.]|$)/i;
for(var i=0;i<_a6.length;i++){
var src=_a6[i].getAttribute("src");
if(!src){
continue;
}
var m=src.match(_a7);
if(m){
var _ab=src.substring(0,m.index);
if(src.indexOf("bootstrap1")>-1){
_ab+="../";
}
if(!this["djConfig"]){
djConfig={};
}
if(djConfig["baseScriptUri"]==""){
djConfig["baseScriptUri"]=_ab;
}
if(djConfig["baseRelativePath"]==""){
djConfig["baseRelativePath"]=_ab;
}
break;
}
}
}
var dr=dojo.render;
var drh=dojo.render.html;
var drs=dojo.render.svg;
var dua=(drh.UA=navigator.userAgent);
var dav=(drh.AV=navigator.appVersion);
var t=true;
var f=false;
drh.capable=t;
drh.support.builtin=t;
dr.ver=parseFloat(drh.AV);
dr.os.mac=dav.indexOf("Macintosh")>=0;
dr.os.win=dav.indexOf("Windows")>=0;
dr.os.linux=dav.indexOf("X11")>=0;
drh.opera=dua.indexOf("Opera")>=0;
drh.khtml=(dav.indexOf("Konqueror")>=0)||(dav.indexOf("Safari")>=0);
drh.safari=dav.indexOf("Safari")>=0;
var _b3=dua.indexOf("Gecko");
drh.mozilla=drh.moz=(_b3>=0)&&(!drh.khtml);
if(drh.mozilla){
drh.geckoVersion=dua.substring(_b3+6,_b3+14);
}
drh.ie=(document.all)&&(!drh.opera);
drh.ie50=drh.ie&&dav.indexOf("MSIE 5.0")>=0;
drh.ie55=drh.ie&&dav.indexOf("MSIE 5.5")>=0;
drh.ie60=drh.ie&&dav.indexOf("MSIE 6.0")>=0;
drh.ie70=drh.ie&&dav.indexOf("MSIE 7.0")>=0;
var cm=document["compatMode"];
drh.quirks=(cm=="BackCompat")||(cm=="QuirksMode")||drh.ie55||drh.ie50;
dojo.locale=dojo.locale||(drh.ie?navigator.userLanguage:navigator.language).toLowerCase();
dr.vml.capable=drh.ie;
drs.capable=f;
drs.support.plugin=f;
drs.support.builtin=f;
var _b5=window["document"];
var tdi=_b5["implementation"];
if((tdi)&&(tdi["hasFeature"])&&(tdi.hasFeature("org.w3c.dom.svg","1.0"))){
drs.capable=t;
drs.support.builtin=t;
drs.support.plugin=f;
}
if(drh.safari){
var tmp=dua.split("AppleWebKit/")[1];
var ver=parseFloat(tmp.split(" ")[0]);
if(ver>=420){
drs.capable=t;
drs.support.builtin=t;
drs.support.plugin=f;
}
}else{
}
})();
dojo.hostenv.startPackage("dojo.hostenv");
dojo.render.name=dojo.hostenv.name_="browser";
dojo.hostenv.searchIds=[];
dojo.hostenv._XMLHTTP_PROGIDS=["Msxml2.XMLHTTP","Microsoft.XMLHTTP","Msxml2.XMLHTTP.4.0"];
dojo.hostenv.getXmlhttpObject=function(){
var _b9=null;
var _ba=null;
try{
_b9=new XMLHttpRequest();
}
catch(e){
}
if(!_b9){
for(var i=0;i<3;++i){
var _bc=dojo.hostenv._XMLHTTP_PROGIDS[i];
try{
_b9=new ActiveXObject(_bc);
}
catch(e){
_ba=e;
}
if(_b9){
dojo.hostenv._XMLHTTP_PROGIDS=[_bc];
break;
}
}
}
if(!_b9){
return dojo.raise("XMLHTTP not available",_ba);
}
return _b9;
};
dojo.hostenv._blockAsync=false;
dojo.hostenv.getText=function(uri,_be,_bf){
if(!_be){
this._blockAsync=true;
}
var _c0=this.getXmlhttpObject();
function isDocumentOk(_c1){
var _c2=_c1["status"];
return Boolean((!_c2)||((200<=_c2)&&(300>_c2))||(_c2==304));
}
if(_be){
var _c3=this,_c4=null,gbl=dojo.global();
var xhr=dojo.evalObjPath("dojo.io.XMLHTTPTransport");
_c0.onreadystatechange=function(){
if(_c4){
gbl.clearTimeout(_c4);
_c4=null;
}
if(_c3._blockAsync||(xhr&&xhr._blockAsync)){
_c4=gbl.setTimeout(function(){
_c0.onreadystatechange.apply(this);
},10);
}else{
if(4==_c0.readyState){
if(isDocumentOk(_c0)){
_be(_c0.responseText);
}
}
}
};
}
_c0.open("GET",uri,_be?true:false);
try{
_c0.send(null);
if(_be){
return null;
}
if(!isDocumentOk(_c0)){
var err=Error("Unable to load "+uri+" status:"+_c0.status);
err.status=_c0.status;
err.responseText=_c0.responseText;
throw err;
}
}
catch(e){
this._blockAsync=false;
if((_bf)&&(!_be)){
return null;
}else{
throw e;
}
}
this._blockAsync=false;
return _c0.responseText;
};
dojo.hostenv.defaultDebugContainerId="dojoDebug";
dojo.hostenv._println_buffer=[];
dojo.hostenv._println_safe=false;
dojo.hostenv.println=function(_c8){
if(!dojo.hostenv._println_safe){
dojo.hostenv._println_buffer.push(_c8);
}else{
try{
var _c9=document.getElementById(djConfig.debugContainerId?djConfig.debugContainerId:dojo.hostenv.defaultDebugContainerId);
if(!_c9){
_c9=dojo.body();
}
var div=document.createElement("div");
div.appendChild(document.createTextNode(_c8));
_c9.appendChild(div);
}
catch(e){
try{
document.write("<div>"+_c8+"</div>");
}
catch(e2){
window.status=_c8;
}
}
}
};
dojo.addOnLoad(function(){
dojo.hostenv._println_safe=true;
while(dojo.hostenv._println_buffer.length>0){
dojo.hostenv.println(dojo.hostenv._println_buffer.shift());
}
});
function dj_addNodeEvtHdlr(_cb,_cc,fp){
var _ce=_cb["on"+_cc]||function(){
};
_cb["on"+_cc]=function(){
fp.apply(_cb,arguments);
_ce.apply(_cb,arguments);
};
return true;
}
function dj_load_init(e){
var _d0=(e&&e.type)?e.type.toLowerCase():"load";
if(arguments.callee.initialized||(_d0!="domcontentloaded"&&_d0!="load")){
return;
}
arguments.callee.initialized=true;
if(typeof (_timer)!="undefined"){
clearInterval(_timer);
delete _timer;
}
var _d1=function(){
if(dojo.render.html.ie){
dojo.hostenv.makeWidgets();
}
};
if(dojo.hostenv.inFlightCount==0){
_d1();
dojo.hostenv.modulesLoaded();
}else{
dojo.hostenv.modulesLoadedListeners.unshift(_d1);
}
}
if(document.addEventListener){
if(dojo.render.html.opera||(dojo.render.html.moz&&!djConfig.delayMozLoadingFix)){
document.addEventListener("DOMContentLoaded",dj_load_init,null);
}
window.addEventListener("load",dj_load_init,null);
}
if(dojo.render.html.ie&&dojo.render.os.win){
document.attachEvent("onreadystatechange",function(e){
if(document.readyState=="complete"){
dj_load_init();
}
});
}
if(/(WebKit|khtml)/i.test(navigator.userAgent)){
var _timer=setInterval(function(){
if(/loaded|complete/.test(document.readyState)){
dj_load_init();
}
},10);
}
if(dojo.render.html.ie){
dj_addNodeEvtHdlr(window,"beforeunload",function(){
dojo.hostenv._unloading=true;
window.setTimeout(function(){
dojo.hostenv._unloading=false;
},0);
});
}
dj_addNodeEvtHdlr(window,"unload",function(){
dojo.hostenv.unloaded();
if((!dojo.render.html.ie)||(dojo.render.html.ie&&dojo.hostenv._unloading)){
dojo.hostenv.unloaded();
}
});
dojo.hostenv.makeWidgets=function(){
var _d3=[];
if(djConfig.searchIds&&djConfig.searchIds.length>0){
_d3=_d3.concat(djConfig.searchIds);
}
if(dojo.hostenv.searchIds&&dojo.hostenv.searchIds.length>0){
_d3=_d3.concat(dojo.hostenv.searchIds);
}
if((djConfig.parseWidgets)||(_d3.length>0)){
if(dojo.evalObjPath("dojo.widget.Parse")){
var _d4=new dojo.xml.Parse();
if(_d3.length>0){
for(var x=0;x<_d3.length;x++){
var _d6=document.getElementById(_d3[x]);
if(!_d6){
continue;
}
var _d7=_d4.parseElement(_d6,null,true);
dojo.widget.getParser().createComponents(_d7);
}
}else{
if(djConfig.parseWidgets){
var _d7=_d4.parseElement(dojo.body(),null,true);
dojo.widget.getParser().createComponents(_d7);
}
}
}
}
};
dojo.addOnLoad(function(){
if(!dojo.render.html.ie){
dojo.hostenv.makeWidgets();
}
});
try{
if(dojo.render.html.ie){
document.namespaces.add("v","urn:schemas-microsoft-com:vml");
document.createStyleSheet().addRule("v\\:*","behavior:url(#default#VML)");
}
}
catch(e){
}
dojo.hostenv.writeIncludes=function(){
};
if(!dj_undef("document",this)){
dj_currentDocument=this.document;
}
dojo.doc=function(){
return dj_currentDocument;
};
dojo.body=function(){
return dojo.doc().body||dojo.doc().getElementsByTagName("body")[0];
};
dojo.byId=function(id,doc){
if((id)&&((typeof id=="string")||(id instanceof String))){
if(!doc){
doc=dj_currentDocument;
}
var ele=doc.getElementById(id);
if(ele&&(ele.id!=id)&&doc.all){
ele=null;
eles=doc.all[id];
if(eles){
if(eles.length){
for(var i=0;i<eles.length;i++){
if(eles[i].id==id){
ele=eles[i];
break;
}
}
}else{
ele=eles;
}
}
}
return ele;
}
return id;
};
dojo.setContext=function(_dc,_dd){
dj_currentContext=_dc;
dj_currentDocument=_dd;
};
dojo._fireCallback=function(_de,_df,_e0){
if((_df)&&((typeof _de=="string")||(_de instanceof String))){
_de=_df[_de];
}
return (_df?_de.apply(_df,_e0||[]):_de());
};
dojo.withGlobal=function(_e1,_e2,_e3,_e4){
var _e5;
var _e6=dj_currentContext;
var _e7=dj_currentDocument;
try{
dojo.setContext(_e1,_e1.document);
_e5=dojo._fireCallback(_e2,_e3,_e4);
}
finally{
dojo.setContext(_e6,_e7);
}
return _e5;
};
dojo.withDoc=function(_e8,_e9,_ea,_eb){
var _ec;
var _ed=dj_currentDocument;
try{
dj_currentDocument=_e8;
_ec=dojo._fireCallback(_e9,_ea,_eb);
}
finally{
dj_currentDocument=_ed;
}
return _ec;
};
}
(function(){
if(typeof dj_usingBootstrap!="undefined"){
return;
}
var _ee=false;
var _ef=false;
var _f0=false;
if((typeof this["load"]=="function")&&((typeof this["Packages"]=="function")||(typeof this["Packages"]=="object"))){
_ee=true;
}else{
if(typeof this["load"]=="function"){
_ef=true;
}else{
if(window.widget){
_f0=true;
}
}
}
var _f1=[];
if((this["djConfig"])&&((djConfig["isDebug"])||(djConfig["debugAtAllCosts"]))){
_f1.push("debug.js");
}
if((this["djConfig"])&&(djConfig["debugAtAllCosts"])&&(!_ee)&&(!_f0)){
_f1.push("browser_debug.js");
}
var _f2=djConfig["baseScriptUri"];
if((this["djConfig"])&&(djConfig["baseLoaderUri"])){
_f2=djConfig["baseLoaderUri"];
}
for(var x=0;x<_f1.length;x++){
var _f4=_f2+"src/"+_f1[x];
if(_ee||_ef){
load(_f4);
}else{
try{
document.write("<scr"+"ipt type='text/javascript' src='"+_f4+"'></scr"+"ipt>");
}
catch(e){
var _f5=document.createElement("script");
_f5.src=_f4;
document.getElementsByTagName("head")[0].appendChild(_f5);
}
}
}
})();
dojo.provide("dojo.lang.common");
dojo.lang.inherits=function(_f6,_f7){
if(!dojo.lang.isFunction(_f7)){
dojo.raise("dojo.inherits: superclass argument ["+_f7+"] must be a function (subclass: ["+_f6+"']");
}
_f6.prototype=new _f7();
_f6.prototype.constructor=_f6;
_f6.superclass=_f7.prototype;
_f6["super"]=_f7.prototype;
};
dojo.lang._mixin=function(obj,_f9){
var _fa={};
for(var x in _f9){
if((typeof _fa[x]=="undefined")||(_fa[x]!=_f9[x])){
obj[x]=_f9[x];
}
}
if(dojo.render.html.ie&&(typeof (_f9["toString"])=="function")&&(_f9["toString"]!=obj["toString"])&&(_f9["toString"]!=_fa["toString"])){
obj.toString=_f9.toString;
}
return obj;
};
dojo.lang.mixin=function(obj,_fd){
for(var i=1,l=arguments.length;i<l;i++){
dojo.lang._mixin(obj,arguments[i]);
}
return obj;
};
dojo.lang.extend=function(_100,_101){
for(var i=1,l=arguments.length;i<l;i++){
dojo.lang._mixin(_100.prototype,arguments[i]);
}
return _100;
};
dojo.inherits=dojo.lang.inherits;
dojo.mixin=dojo.lang.mixin;
dojo.extend=dojo.lang.extend;
dojo.lang.find=function(_104,_105,_106,_107){
if(!dojo.lang.isArrayLike(_104)&&dojo.lang.isArrayLike(_105)){
dojo.deprecated("dojo.lang.find(value, array)","use dojo.lang.find(array, value) instead","0.5");
var temp=_104;
_104=_105;
_105=temp;
}
var _109=dojo.lang.isString(_104);
if(_109){
_104=_104.split("");
}
if(_107){
var step=-1;
var i=_104.length-1;
var end=-1;
}else{
var step=1;
var i=0;
var end=_104.length;
}
if(_106){
while(i!=end){
if(_104[i]===_105){
return i;
}
i+=step;
}
}else{
while(i!=end){
if(_104[i]==_105){
return i;
}
i+=step;
}
}
return -1;
};
dojo.lang.indexOf=dojo.lang.find;
dojo.lang.findLast=function(_10d,_10e,_10f){
return dojo.lang.find(_10d,_10e,_10f,true);
};
dojo.lang.lastIndexOf=dojo.lang.findLast;
dojo.lang.inArray=function(_110,_111){
return dojo.lang.find(_110,_111)>-1;
};
dojo.lang.isObject=function(it){
if(typeof it=="undefined"){
return false;
}
return (typeof it=="object"||it===null||dojo.lang.isArray(it)||dojo.lang.isFunction(it));
};
dojo.lang.isArray=function(it){
return (it&&it instanceof Array||typeof it=="array");
};
dojo.lang.isArrayLike=function(it){
if((!it)||(dojo.lang.isUndefined(it))){
return false;
}
if(dojo.lang.isString(it)){
return false;
}
if(dojo.lang.isFunction(it)){
return false;
}
if(dojo.lang.isArray(it)){
return true;
}
if((it.tagName)&&(it.tagName.toLowerCase()=="form")){
return false;
}
if(dojo.lang.isNumber(it.length)&&isFinite(it.length)){
return true;
}
return false;
};
dojo.lang.isFunction=function(it){
return (it instanceof Function||typeof it=="function");
};
(function(){
if((dojo.render.html.capable)&&(dojo.render.html["safari"])){
dojo.lang.isFunction=function(it){
if((typeof (it)=="function")&&(it=="[object NodeList]")){
return false;
}
return (it instanceof Function||typeof it=="function");
};
}
})();
dojo.lang.isString=function(it){
return (typeof it=="string"||it instanceof String);
};
dojo.lang.isAlien=function(it){
if(!it){
return false;
}
return !dojo.lang.isFunction(it)&&/\{\s*\[native code\]\s*\}/.test(String(it));
};
dojo.lang.isBoolean=function(it){
return (it instanceof Boolean||typeof it=="boolean");
};
dojo.lang.isNumber=function(it){
return (it instanceof Number||typeof it=="number");
};
dojo.lang.isUndefined=function(it){
return ((typeof (it)=="undefined")&&(it==undefined));
};
dojo.provide("dojo.lang.array");
dojo.lang.mixin(dojo.lang,{has:function(obj,name){
try{
return typeof obj[name]!="undefined";
}
catch(e){
return false;
}
},isEmpty:function(obj){
if(dojo.lang.isObject(obj)){
var tmp={};
var _120=0;
for(var x in obj){
if(obj[x]&&(!tmp[x])){
_120++;
break;
}
}
return _120==0;
}else{
if(dojo.lang.isArrayLike(obj)||dojo.lang.isString(obj)){
return obj.length==0;
}
}
},map:function(arr,obj,_124){
var _125=dojo.lang.isString(arr);
if(_125){
arr=arr.split("");
}
if(dojo.lang.isFunction(obj)&&(!_124)){
_124=obj;
obj=dj_global;
}else{
if(dojo.lang.isFunction(obj)&&_124){
var _126=obj;
obj=_124;
_124=_126;
}
}
if(Array.map){
var _127=Array.map(arr,_124,obj);
}else{
var _127=[];
for(var i=0;i<arr.length;++i){
_127.push(_124.call(obj,arr[i]));
}
}
if(_125){
return _127.join("");
}else{
return _127;
}
},reduce:function(arr,_12a,obj,_12c){
var _12d=_12a;
if(arguments.length==1){
dojo.debug("dojo.lang.reduce called with too few arguments!");
return false;
}else{
if(arguments.length==2){
_12c=_12a;
_12d=arr.shift();
}else{
if(arguments.lenght==3){
if(dojo.lang.isFunction(obj)){
_12c=obj;
obj=null;
}
}else{
if(dojo.lang.isFunction(obj)){
var tmp=_12c;
_12c=obj;
obj=tmp;
}
}
}
}
var ob=obj?obj:dj_global;
dojo.lang.map(arr,function(val){
_12d=_12c.call(ob,_12d,val);
});
return _12d;
},forEach:function(_131,_132,_133){
if(dojo.lang.isString(_131)){
_131=_131.split("");
}
if(Array.forEach){
Array.forEach(_131,_132,_133);
}else{
if(!_133){
_133=dj_global;
}
for(var i=0,l=_131.length;i<l;i++){
_132.call(_133,_131[i],i,_131);
}
}
},_everyOrSome:function(_136,arr,_138,_139){
if(dojo.lang.isString(arr)){
arr=arr.split("");
}
if(Array.every){
return Array[_136?"every":"some"](arr,_138,_139);
}else{
if(!_139){
_139=dj_global;
}
for(var i=0,l=arr.length;i<l;i++){
var _13c=_138.call(_139,arr[i],i,arr);
if(_136&&!_13c){
return false;
}else{
if((!_136)&&(_13c)){
return true;
}
}
}
return Boolean(_136);
}
},every:function(arr,_13e,_13f){
return this._everyOrSome(true,arr,_13e,_13f);
},some:function(arr,_141,_142){
return this._everyOrSome(false,arr,_141,_142);
},filter:function(arr,_144,_145){
var _146=dojo.lang.isString(arr);
if(_146){
arr=arr.split("");
}
var _147;
if(Array.filter){
_147=Array.filter(arr,_144,_145);
}else{
if(!_145){
if(arguments.length>=3){
dojo.raise("thisObject doesn't exist!");
}
_145=dj_global;
}
_147=[];
for(var i=0;i<arr.length;i++){
if(_144.call(_145,arr[i],i,arr)){
_147.push(arr[i]);
}
}
}
if(_146){
return _147.join("");
}else{
return _147;
}
},unnest:function(){
var out=[];
for(var i=0;i<arguments.length;i++){
if(dojo.lang.isArrayLike(arguments[i])){
var add=dojo.lang.unnest.apply(this,arguments[i]);
out=out.concat(add);
}else{
out.push(arguments[i]);
}
}
return out;
},toArray:function(_14c,_14d){
var _14e=[];
for(var i=_14d||0;i<_14c.length;i++){
_14e.push(_14c[i]);
}
return _14e;
}});
dojo.provide("dojo.lang.extras");
dojo.lang.setTimeout=function(func,_151){
var _152=window,_153=2;
if(!dojo.lang.isFunction(func)){
_152=func;
func=_151;
_151=arguments[2];
_153++;
}
if(dojo.lang.isString(func)){
func=_152[func];
}
var args=[];
for(var i=_153;i<arguments.length;i++){
args.push(arguments[i]);
}
return dojo.global().setTimeout(function(){
func.apply(_152,args);
},_151);
};
dojo.lang.clearTimeout=function(_156){
dojo.global().clearTimeout(_156);
};
dojo.lang.getNameInObj=function(ns,item){
if(!ns){
ns=dj_global;
}
for(var x in ns){
if(ns[x]===item){
return new String(x);
}
}
return null;
};
dojo.lang.shallowCopy=function(obj,deep){
var i,ret;
if(obj===null){
return null;
}
if(dojo.lang.isObject(obj)){
ret=new obj.constructor();
for(i in obj){
if(dojo.lang.isUndefined(ret[i])){
ret[i]=deep?dojo.lang.shallowCopy(obj[i],deep):obj[i];
}
}
}else{
if(dojo.lang.isArray(obj)){
ret=[];
for(i=0;i<obj.length;i++){
ret[i]=deep?dojo.lang.shallowCopy(obj[i],deep):obj[i];
}
}else{
ret=obj;
}
}
return ret;
};
dojo.lang.firstValued=function(){
for(var i=0;i<arguments.length;i++){
if(typeof arguments[i]!="undefined"){
return arguments[i];
}
}
return undefined;
};
dojo.lang.getObjPathValue=function(_15f,_160,_161){
with(dojo.parseObjPath(_15f,_160,_161)){
return dojo.evalProp(prop,obj,_161);
}
};
dojo.lang.setObjPathValue=function(_162,_163,_164,_165){
dojo.deprecated("dojo.lang.setObjPathValue","use dojo.parseObjPath and the '=' operator","0.6");
if(arguments.length<4){
_165=true;
}
with(dojo.parseObjPath(_162,_164,_165)){
if(obj&&(_165||(prop in obj))){
obj[prop]=_163;
}
}
};
dojo.provide("dojo.lang.func");
dojo.lang.hitch=function(_166,_167){
var fcn=(dojo.lang.isString(_167)?_166[_167]:_167)||function(){
};
return function(){
return fcn.apply(_166,arguments);
};
};
dojo.lang.anonCtr=0;
dojo.lang.anon={};
dojo.lang.nameAnonFunc=function(_169,_16a,_16b){
var nso=(_16a||dojo.lang.anon);
if((_16b)||((dj_global["djConfig"])&&(djConfig["slowAnonFuncLookups"]==true))){
for(var x in nso){
try{
if(nso[x]===_169){
return x;
}
}
catch(e){
}
}
}
var ret="__"+dojo.lang.anonCtr++;
while(typeof nso[ret]!="undefined"){
ret="__"+dojo.lang.anonCtr++;
}
nso[ret]=_169;
return ret;
};
dojo.lang.forward=function(_16f){
return function(){
return this[_16f].apply(this,arguments);
};
};
dojo.lang.curry=function(_170,func){
var _172=[];
_170=_170||dj_global;
if(dojo.lang.isString(func)){
func=_170[func];
}
for(var x=2;x<arguments.length;x++){
_172.push(arguments[x]);
}
var _174=(func["__preJoinArity"]||func.length)-_172.length;
function gather(_175,_176,_177){
var _178=_177;
var _179=_176.slice(0);
for(var x=0;x<_175.length;x++){
_179.push(_175[x]);
}
_177=_177-_175.length;
if(_177<=0){
var res=func.apply(_170,_179);
_177=_178;
return res;
}else{
return function(){
return gather(arguments,_179,_177);
};
}
}
return gather([],_172,_174);
};
dojo.lang.curryArguments=function(_17c,func,args,_17f){
var _180=[];
var x=_17f||0;
for(x=_17f;x<args.length;x++){
_180.push(args[x]);
}
return dojo.lang.curry.apply(dojo.lang,[_17c,func].concat(_180));
};
dojo.lang.tryThese=function(){
for(var x=0;x<arguments.length;x++){
try{
if(typeof arguments[x]=="function"){
var ret=(arguments[x]());
if(ret){
return ret;
}
}
}
catch(e){
dojo.debug(e);
}
}
};
dojo.lang.delayThese=function(farr,cb,_186,_187){
if(!farr.length){
if(typeof _187=="function"){
_187();
}
return;
}
if((typeof _186=="undefined")&&(typeof cb=="number")){
_186=cb;
cb=function(){
};
}else{
if(!cb){
cb=function(){
};
if(!_186){
_186=0;
}
}
}
setTimeout(function(){
(farr.shift())();
cb();
dojo.lang.delayThese(farr,cb,_186,_187);
},_186);
};
dojo.provide("dojo.event.common");
dojo.event=new function(){
this._canTimeout=dojo.lang.isFunction(dj_global["setTimeout"])||dojo.lang.isAlien(dj_global["setTimeout"]);
function interpolateArgs(args,_189){
var dl=dojo.lang;
var ao={srcObj:dj_global,srcFunc:null,adviceObj:dj_global,adviceFunc:null,aroundObj:null,aroundFunc:null,adviceType:(args.length>2)?args[0]:"after",precedence:"last",once:false,delay:null,rate:0,adviceMsg:false};
switch(args.length){
case 0:
return;
case 1:
return;
case 2:
ao.srcFunc=args[0];
ao.adviceFunc=args[1];
break;
case 3:
if((dl.isObject(args[0]))&&(dl.isString(args[1]))&&(dl.isString(args[2]))){
ao.adviceType="after";
ao.srcObj=args[0];
ao.srcFunc=args[1];
ao.adviceFunc=args[2];
}else{
if((dl.isString(args[1]))&&(dl.isString(args[2]))){
ao.srcFunc=args[1];
ao.adviceFunc=args[2];
}else{
if((dl.isObject(args[0]))&&(dl.isString(args[1]))&&(dl.isFunction(args[2]))){
ao.adviceType="after";
ao.srcObj=args[0];
ao.srcFunc=args[1];
var _18c=dl.nameAnonFunc(args[2],ao.adviceObj,_189);
ao.adviceFunc=_18c;
}else{
if((dl.isFunction(args[0]))&&(dl.isObject(args[1]))&&(dl.isString(args[2]))){
ao.adviceType="after";
ao.srcObj=dj_global;
var _18c=dl.nameAnonFunc(args[0],ao.srcObj,_189);
ao.srcFunc=_18c;
ao.adviceObj=args[1];
ao.adviceFunc=args[2];
}
}
}
}
break;
case 4:
if((dl.isObject(args[0]))&&(dl.isObject(args[2]))){
ao.adviceType="after";
ao.srcObj=args[0];
ao.srcFunc=args[1];
ao.adviceObj=args[2];
ao.adviceFunc=args[3];
}else{
if((dl.isString(args[0]))&&(dl.isString(args[1]))&&(dl.isObject(args[2]))){
ao.adviceType=args[0];
ao.srcObj=dj_global;
ao.srcFunc=args[1];
ao.adviceObj=args[2];
ao.adviceFunc=args[3];
}else{
if((dl.isString(args[0]))&&(dl.isFunction(args[1]))&&(dl.isObject(args[2]))){
ao.adviceType=args[0];
ao.srcObj=dj_global;
var _18c=dl.nameAnonFunc(args[1],dj_global,_189);
ao.srcFunc=_18c;
ao.adviceObj=args[2];
ao.adviceFunc=args[3];
}else{
if((dl.isString(args[0]))&&(dl.isObject(args[1]))&&(dl.isString(args[2]))&&(dl.isFunction(args[3]))){
ao.srcObj=args[1];
ao.srcFunc=args[2];
var _18c=dl.nameAnonFunc(args[3],dj_global,_189);
ao.adviceObj=dj_global;
ao.adviceFunc=_18c;
}else{
if(dl.isObject(args[1])){
ao.srcObj=args[1];
ao.srcFunc=args[2];
ao.adviceObj=dj_global;
ao.adviceFunc=args[3];
}else{
if(dl.isObject(args[2])){
ao.srcObj=dj_global;
ao.srcFunc=args[1];
ao.adviceObj=args[2];
ao.adviceFunc=args[3];
}else{
ao.srcObj=ao.adviceObj=ao.aroundObj=dj_global;
ao.srcFunc=args[1];
ao.adviceFunc=args[2];
ao.aroundFunc=args[3];
}
}
}
}
}
}
break;
case 6:
ao.srcObj=args[1];
ao.srcFunc=args[2];
ao.adviceObj=args[3];
ao.adviceFunc=args[4];
ao.aroundFunc=args[5];
ao.aroundObj=dj_global;
break;
default:
ao.srcObj=args[1];
ao.srcFunc=args[2];
ao.adviceObj=args[3];
ao.adviceFunc=args[4];
ao.aroundObj=args[5];
ao.aroundFunc=args[6];
ao.once=args[7];
ao.delay=args[8];
ao.rate=args[9];
ao.adviceMsg=args[10];
break;
}
if(dl.isFunction(ao.aroundFunc)){
var _18c=dl.nameAnonFunc(ao.aroundFunc,ao.aroundObj,_189);
ao.aroundFunc=_18c;
}
if(dl.isFunction(ao.srcFunc)){
ao.srcFunc=dl.getNameInObj(ao.srcObj,ao.srcFunc);
}
if(dl.isFunction(ao.adviceFunc)){
ao.adviceFunc=dl.getNameInObj(ao.adviceObj,ao.adviceFunc);
}
if((ao.aroundObj)&&(dl.isFunction(ao.aroundFunc))){
ao.aroundFunc=dl.getNameInObj(ao.aroundObj,ao.aroundFunc);
}
if(!ao.srcObj){
dojo.raise("bad srcObj for srcFunc: "+ao.srcFunc);
}
if(!ao.adviceObj){
dojo.raise("bad adviceObj for adviceFunc: "+ao.adviceFunc);
}
if(!ao.adviceFunc){
dojo.debug("bad adviceFunc for srcFunc: "+ao.srcFunc);
dojo.debugShallow(ao);
}
return ao;
}
this.connect=function(){
if(arguments.length==1){
var ao=arguments[0];
}else{
var ao=interpolateArgs(arguments,true);
}
if(dojo.lang.isString(ao.srcFunc)&&(ao.srcFunc.toLowerCase()=="onkey")){
if(dojo.render.html.ie){
ao.srcFunc="onkeydown";
this.connect(ao);
}
ao.srcFunc="onkeypress";
}
if(dojo.lang.isArray(ao.srcObj)&&ao.srcObj!=""){
var _18e={};
for(var x in ao){
_18e[x]=ao[x];
}
var mjps=[];
dojo.lang.forEach(ao.srcObj,function(src){
if((dojo.render.html.capable)&&(dojo.lang.isString(src))){
src=dojo.byId(src);
}
_18e.srcObj=src;
mjps.push(dojo.event.connect.call(dojo.event,_18e));
});
return mjps;
}
var mjp=dojo.event.MethodJoinPoint.getForMethod(ao.srcObj,ao.srcFunc);
if(ao.adviceFunc){
var mjp2=dojo.event.MethodJoinPoint.getForMethod(ao.adviceObj,ao.adviceFunc);
}
mjp.kwAddAdvice(ao);
return mjp;
};
this.log=function(a1,a2){
var _196;
if((arguments.length==1)&&(typeof a1=="object")){
_196=a1;
}else{
_196={srcObj:a1,srcFunc:a2};
}
_196.adviceFunc=function(){
var _197=[];
for(var x=0;x<arguments.length;x++){
_197.push(arguments[x]);
}
dojo.debug("("+_196.srcObj+")."+_196.srcFunc,":",_197.join(", "));
};
this.kwConnect(_196);
};
this.connectBefore=function(){
var args=["before"];
for(var i=0;i<arguments.length;i++){
args.push(arguments[i]);
}
return this.connect.apply(this,args);
};
this.connectAround=function(){
var args=["around"];
for(var i=0;i<arguments.length;i++){
args.push(arguments[i]);
}
return this.connect.apply(this,args);
};
this.connectOnce=function(){
var ao=interpolateArgs(arguments,true);
ao.once=true;
return this.connect(ao);
};
this._kwConnectImpl=function(_19e,_19f){
var fn=(_19f)?"disconnect":"connect";
if(typeof _19e["srcFunc"]=="function"){
_19e.srcObj=_19e["srcObj"]||dj_global;
var _1a1=dojo.lang.nameAnonFunc(_19e.srcFunc,_19e.srcObj,true);
_19e.srcFunc=_1a1;
}
if(typeof _19e["adviceFunc"]=="function"){
_19e.adviceObj=_19e["adviceObj"]||dj_global;
var _1a1=dojo.lang.nameAnonFunc(_19e.adviceFunc,_19e.adviceObj,true);
_19e.adviceFunc=_1a1;
}
_19e.srcObj=_19e["srcObj"]||dj_global;
_19e.adviceObj=_19e["adviceObj"]||_19e["targetObj"]||dj_global;
_19e.adviceFunc=_19e["adviceFunc"]||_19e["targetFunc"];
return dojo.event[fn](_19e);
};
this.kwConnect=function(_1a2){
return this._kwConnectImpl(_1a2,false);
};
this.disconnect=function(){
if(arguments.length==1){
var ao=arguments[0];
}else{
var ao=interpolateArgs(arguments,true);
}
if(!ao.adviceFunc){
return;
}
if(dojo.lang.isString(ao.srcFunc)&&(ao.srcFunc.toLowerCase()=="onkey")){
if(dojo.render.html.ie){
ao.srcFunc="onkeydown";
this.disconnect(ao);
}
ao.srcFunc="onkeypress";
}
if(!ao.srcObj[ao.srcFunc]){
return null;
}
var mjp=dojo.event.MethodJoinPoint.getForMethod(ao.srcObj,ao.srcFunc,true);
mjp.removeAdvice(ao.adviceObj,ao.adviceFunc,ao.adviceType,ao.once);
return mjp;
};
this.kwDisconnect=function(_1a5){
return this._kwConnectImpl(_1a5,true);
};
};
dojo.event.MethodInvocation=function(_1a6,obj,args){
this.jp_=_1a6;
this.object=obj;
this.args=[];
for(var x=0;x<args.length;x++){
this.args[x]=args[x];
}
this.around_index=-1;
};
dojo.event.MethodInvocation.prototype.proceed=function(){
this.around_index++;
if(this.around_index>=this.jp_.around.length){
return this.jp_.object[this.jp_.methodname].apply(this.jp_.object,this.args);
}else{
var ti=this.jp_.around[this.around_index];
var mobj=ti[0]||dj_global;
var meth=ti[1];
return mobj[meth].call(mobj,this);
}
};
dojo.event.MethodJoinPoint=function(obj,_1ae){
this.object=obj||dj_global;
this.methodname=_1ae;
this.methodfunc=this.object[_1ae];
this.squelch=false;
};
dojo.event.MethodJoinPoint.getForMethod=function(obj,_1b0){
if(!obj){
obj=dj_global;
}
if(!obj[_1b0]){
obj[_1b0]=function(){
};
if(!obj[_1b0]){
dojo.raise("Cannot set do-nothing method on that object "+_1b0);
}
}else{
if((!dojo.lang.isFunction(obj[_1b0]))&&(!dojo.lang.isAlien(obj[_1b0]))){
return null;
}
}
var _1b1=_1b0+"$joinpoint";
var _1b2=_1b0+"$joinpoint$method";
var _1b3=obj[_1b1];
if(!_1b3){
var _1b4=false;
if(dojo.event["browser"]){
if((obj["attachEvent"])||(obj["nodeType"])||(obj["addEventListener"])){
_1b4=true;
dojo.event.browser.addClobberNodeAttrs(obj,[_1b1,_1b2,_1b0]);
}
}
var _1b5=obj[_1b0].length;
obj[_1b2]=obj[_1b0];
_1b3=obj[_1b1]=new dojo.event.MethodJoinPoint(obj,_1b2);
obj[_1b0]=function(){
var args=[];
if((_1b4)&&(!arguments.length)){
var evt=null;
try{
if(obj.ownerDocument){
evt=obj.ownerDocument.parentWindow.event;
}else{
if(obj.documentElement){
evt=obj.documentElement.ownerDocument.parentWindow.event;
}else{
if(obj.event){
evt=obj.event;
}else{
evt=window.event;
}
}
}
}
catch(e){
evt=window.event;
}
if(evt){
args.push(dojo.event.browser.fixEvent(evt,this));
}
}else{
for(var x=0;x<arguments.length;x++){
if((x==0)&&(_1b4)&&(dojo.event.browser.isEvent(arguments[x]))){
args.push(dojo.event.browser.fixEvent(arguments[x],this));
}else{
args.push(arguments[x]);
}
}
}
return _1b3.run.apply(_1b3,args);
};
obj[_1b0].__preJoinArity=_1b5;
}
return _1b3;
};
dojo.lang.extend(dojo.event.MethodJoinPoint,{unintercept:function(){
this.object[this.methodname]=this.methodfunc;
this.before=[];
this.after=[];
this.around=[];
},disconnect:dojo.lang.forward("unintercept"),run:function(){
var obj=this.object||dj_global;
var args=arguments;
var _1bb=[];
for(var x=0;x<args.length;x++){
_1bb[x]=args[x];
}
var _1bd=function(marr){
if(!marr){
dojo.debug("Null argument to unrollAdvice()");
return;
}
var _1bf=marr[0]||dj_global;
var _1c0=marr[1];
if(!_1bf[_1c0]){
dojo.raise("function \""+_1c0+"\" does not exist on \""+_1bf+"\"");
}
var _1c1=marr[2]||dj_global;
var _1c2=marr[3];
var msg=marr[6];
var _1c4;
var to={args:[],jp_:this,object:obj,proceed:function(){
return _1bf[_1c0].apply(_1bf,to.args);
}};
to.args=_1bb;
var _1c6=parseInt(marr[4]);
var _1c7=((!isNaN(_1c6))&&(marr[4]!==null)&&(typeof marr[4]!="undefined"));
if(marr[5]){
var rate=parseInt(marr[5]);
var cur=new Date();
var _1ca=false;
if((marr["last"])&&((cur-marr.last)<=rate)){
if(dojo.event._canTimeout){
if(marr["delayTimer"]){
clearTimeout(marr.delayTimer);
}
var tod=parseInt(rate*2);
var mcpy=dojo.lang.shallowCopy(marr);
marr.delayTimer=setTimeout(function(){
mcpy[5]=0;
_1bd(mcpy);
},tod);
}
return;
}else{
marr.last=cur;
}
}
if(_1c2){
_1c1[_1c2].call(_1c1,to);
}else{
if((_1c7)&&((dojo.render.html)||(dojo.render.svg))){
dj_global["setTimeout"](function(){
if(msg){
_1bf[_1c0].call(_1bf,to);
}else{
_1bf[_1c0].apply(_1bf,args);
}
},_1c6);
}else{
if(msg){
_1bf[_1c0].call(_1bf,to);
}else{
_1bf[_1c0].apply(_1bf,args);
}
}
}
};
var _1cd=function(){
if(this.squelch){
try{
return _1bd.apply(this,arguments);
}
catch(e){
dojo.debug(e);
}
}else{
return _1bd.apply(this,arguments);
}
};
if((this["before"])&&(this.before.length>0)){
dojo.lang.forEach(this.before.concat(new Array()),_1cd);
}
var _1ce;
try{
if((this["around"])&&(this.around.length>0)){
var mi=new dojo.event.MethodInvocation(this,obj,args);
_1ce=mi.proceed();
}else{
if(this.methodfunc){
_1ce=this.object[this.methodname].apply(this.object,args);
}
}
}
catch(e){
if(!this.squelch){
dojo.debug(e,"when calling",this.methodname,"on",this.object,"with arguments",args);
dojo.raise(e);
}
}
if((this["after"])&&(this.after.length>0)){
dojo.lang.forEach(this.after.concat(new Array()),_1cd);
}
return (this.methodfunc)?_1ce:null;
},getArr:function(kind){
var type="after";
if((typeof kind=="string")&&(kind.indexOf("before")!=-1)){
type="before";
}else{
if(kind=="around"){
type="around";
}
}
if(!this[type]){
this[type]=[];
}
return this[type];
},kwAddAdvice:function(args){
this.addAdvice(args["adviceObj"],args["adviceFunc"],args["aroundObj"],args["aroundFunc"],args["adviceType"],args["precedence"],args["once"],args["delay"],args["rate"],args["adviceMsg"]);
},addAdvice:function(_1d3,_1d4,_1d5,_1d6,_1d7,_1d8,once,_1da,rate,_1dc){
var arr=this.getArr(_1d7);
if(!arr){
dojo.raise("bad this: "+this);
}
var ao=[_1d3,_1d4,_1d5,_1d6,_1da,rate,_1dc];
if(once){
if(this.hasAdvice(_1d3,_1d4,_1d7,arr)>=0){
return;
}
}
if(_1d8=="first"){
arr.unshift(ao);
}else{
arr.push(ao);
}
},hasAdvice:function(_1df,_1e0,_1e1,arr){
if(!arr){
arr=this.getArr(_1e1);
}
var ind=-1;
for(var x=0;x<arr.length;x++){
var aao=(typeof _1e0=="object")?(new String(_1e0)).toString():_1e0;
var a1o=(typeof arr[x][1]=="object")?(new String(arr[x][1])).toString():arr[x][1];
if((arr[x][0]==_1df)&&(a1o==aao)){
ind=x;
}
}
return ind;
},removeAdvice:function(_1e7,_1e8,_1e9,once){
var arr=this.getArr(_1e9);
var ind=this.hasAdvice(_1e7,_1e8,_1e9,arr);
if(ind==-1){
return false;
}
while(ind!=-1){
arr.splice(ind,1);
if(once){
break;
}
ind=this.hasAdvice(_1e7,_1e8,_1e9,arr);
}
return true;
}});
dojo.provide("dojo.event.topic");
dojo.event.topic=new function(){
this.topics={};
this.getTopic=function(_1ed){
if(!this.topics[_1ed]){
this.topics[_1ed]=new this.TopicImpl(_1ed);
}
return this.topics[_1ed];
};
this.registerPublisher=function(_1ee,obj,_1f0){
var _1ee=this.getTopic(_1ee);
_1ee.registerPublisher(obj,_1f0);
};
this.subscribe=function(_1f1,obj,_1f3){
var _1f1=this.getTopic(_1f1);
_1f1.subscribe(obj,_1f3);
};
this.unsubscribe=function(_1f4,obj,_1f6){
var _1f4=this.getTopic(_1f4);
_1f4.unsubscribe(obj,_1f6);
};
this.destroy=function(_1f7){
this.getTopic(_1f7).destroy();
delete this.topics[_1f7];
};
this.publishApply=function(_1f8,args){
var _1f8=this.getTopic(_1f8);
_1f8.sendMessage.apply(_1f8,args);
};
this.publish=function(_1fa,_1fb){
var _1fa=this.getTopic(_1fa);
var args=[];
for(var x=1;x<arguments.length;x++){
args.push(arguments[x]);
}
_1fa.sendMessage.apply(_1fa,args);
};
};
dojo.event.topic.TopicImpl=function(_1fe){
this.topicName=_1fe;
this.subscribe=function(_1ff,_200){
var tf=_200||_1ff;
var to=(!_200)?dj_global:_1ff;
return dojo.event.kwConnect({srcObj:this,srcFunc:"sendMessage",adviceObj:to,adviceFunc:tf});
};
this.unsubscribe=function(_203,_204){
var tf=(!_204)?_203:_204;
var to=(!_204)?null:_203;
return dojo.event.kwDisconnect({srcObj:this,srcFunc:"sendMessage",adviceObj:to,adviceFunc:tf});
};
this._getJoinPoint=function(){
return dojo.event.MethodJoinPoint.getForMethod(this,"sendMessage");
};
this.setSquelch=function(_207){
this._getJoinPoint().squelch=_207;
};
this.destroy=function(){
this._getJoinPoint().disconnect();
};
this.registerPublisher=function(_208,_209){
dojo.event.connect(_208,_209,this,"sendMessage");
};
this.sendMessage=function(_20a){
};
};
dojo.provide("dojo.event.browser");
dojo._ie_clobber=new function(){
this.clobberNodes=[];
function nukeProp(node,prop){
try{
node[prop]=null;
}
catch(e){
}
try{
delete node[prop];
}
catch(e){
}
try{
node.removeAttribute(prop);
}
catch(e){
}
}
this.clobber=function(_20d){
var na;
var tna;
if(_20d){
tna=_20d.all||_20d.getElementsByTagName("*");
na=[_20d];
for(var x=0;x<tna.length;x++){
if(tna[x]["__doClobber__"]){
na.push(tna[x]);
}
}
}else{
try{
window.onload=null;
}
catch(e){
}
na=(this.clobberNodes.length)?this.clobberNodes:document.all;
}
tna=null;
var _211={};
for(var i=na.length-1;i>=0;i=i-1){
var el=na[i];
try{
if(el&&el["__clobberAttrs__"]){
for(var j=0;j<el.__clobberAttrs__.length;j++){
nukeProp(el,el.__clobberAttrs__[j]);
}
nukeProp(el,"__clobberAttrs__");
nukeProp(el,"__doClobber__");
}
}
catch(e){
}
}
na=null;
};
};
if(dojo.render.html.ie){
dojo.addOnUnload(function(){
dojo._ie_clobber.clobber();
try{
if((dojo["widget"])&&(dojo.widget["manager"])){
dojo.widget.manager.destroyAll();
}
}
catch(e){
}
if(dojo.widget){
for(var name in dojo.widget._templateCache){
if(dojo.widget._templateCache[name].node){
dojo.dom.destroyNode(dojo.widget._templateCache[name].node);
dojo.widget._templateCache[name].node=null;
delete dojo.widget._templateCache[name].node;
}
}
}
try{
window.onload=null;
}
catch(e){
}
try{
window.onunload=null;
}
catch(e){
}
dojo._ie_clobber.clobberNodes=[];
});
}
dojo.event.browser=new function(){
var _216=0;
this.normalizedEventName=function(_217){
switch(_217){
case "CheckboxStateChange":
case "DOMAttrModified":
case "DOMMenuItemActive":
case "DOMMenuItemInactive":
case "DOMMouseScroll":
case "DOMNodeInserted":
case "DOMNodeRemoved":
case "RadioStateChange":
return _217;
break;
default:
return _217.toLowerCase();
break;
}
};
this.clean=function(node){
if(dojo.render.html.ie){
dojo._ie_clobber.clobber(node);
}
};
this.addClobberNode=function(node){
if(!dojo.render.html.ie){
return;
}
if(!node["__doClobber__"]){
node.__doClobber__=true;
dojo._ie_clobber.clobberNodes.push(node);
node.__clobberAttrs__=[];
}
};
this.addClobberNodeAttrs=function(node,_21b){
if(!dojo.render.html.ie){
return;
}
this.addClobberNode(node);
for(var x=0;x<_21b.length;x++){
node.__clobberAttrs__.push(_21b[x]);
}
};
this.removeListener=function(node,_21e,fp,_220){
if(!_220){
var _220=false;
}
_21e=dojo.event.browser.normalizedEventName(_21e);
if((_21e=="onkey")||(_21e=="key")){
if(dojo.render.html.ie){
this.removeListener(node,"onkeydown",fp,_220);
}
_21e="onkeypress";
}
if(_21e.substr(0,2)=="on"){
_21e=_21e.substr(2);
}
if(node.removeEventListener){
node.removeEventListener(_21e,fp,_220);
}
};
this.addListener=function(node,_222,fp,_224,_225){
if(!node){
return;
}
if(!_224){
var _224=false;
}
_222=dojo.event.browser.normalizedEventName(_222);
if((_222=="onkey")||(_222=="key")){
if(dojo.render.html.ie){
this.addListener(node,"onkeydown",fp,_224,_225);
}
_222="onkeypress";
}
if(_222.substr(0,2)!="on"){
_222="on"+_222;
}
if(!_225){
var _226=function(evt){
if(!evt){
evt=window.event;
}
var ret=fp(dojo.event.browser.fixEvent(evt,this));
if(_224){
dojo.event.browser.stopEvent(evt);
}
return ret;
};
}else{
_226=fp;
}
if(node.addEventListener){
node.addEventListener(_222.substr(2),_226,_224);
return _226;
}else{
if(typeof node[_222]=="function"){
var _229=node[_222];
node[_222]=function(e){
_229(e);
return _226(e);
};
}else{
node[_222]=_226;
}
if(dojo.render.html.ie){
this.addClobberNodeAttrs(node,[_222]);
}
return _226;
}
};
this.isEvent=function(obj){
return (typeof obj!="undefined")&&(obj)&&(typeof Event!="undefined")&&(obj.eventPhase);
};
this.currentEvent=null;
this.callListener=function(_22c,_22d){
if(typeof _22c!="function"){
dojo.raise("listener not a function: "+_22c);
}
dojo.event.browser.currentEvent.currentTarget=_22d;
return _22c.call(_22d,dojo.event.browser.currentEvent);
};
this._stopPropagation=function(){
dojo.event.browser.currentEvent.cancelBubble=true;
};
this._preventDefault=function(){
dojo.event.browser.currentEvent.returnValue=false;
};
this.keys={KEY_BACKSPACE:8,KEY_TAB:9,KEY_CLEAR:12,KEY_ENTER:13,KEY_SHIFT:16,KEY_CTRL:17,KEY_ALT:18,KEY_PAUSE:19,KEY_CAPS_LOCK:20,KEY_ESCAPE:27,KEY_SPACE:32,KEY_PAGE_UP:33,KEY_PAGE_DOWN:34,KEY_END:35,KEY_HOME:36,KEY_LEFT_ARROW:37,KEY_UP_ARROW:38,KEY_RIGHT_ARROW:39,KEY_DOWN_ARROW:40,KEY_INSERT:45,KEY_DELETE:46,KEY_HELP:47,KEY_LEFT_WINDOW:91,KEY_RIGHT_WINDOW:92,KEY_SELECT:93,KEY_NUMPAD_0:96,KEY_NUMPAD_1:97,KEY_NUMPAD_2:98,KEY_NUMPAD_3:99,KEY_NUMPAD_4:100,KEY_NUMPAD_5:101,KEY_NUMPAD_6:102,KEY_NUMPAD_7:103,KEY_NUMPAD_8:104,KEY_NUMPAD_9:105,KEY_NUMPAD_MULTIPLY:106,KEY_NUMPAD_PLUS:107,KEY_NUMPAD_ENTER:108,KEY_NUMPAD_MINUS:109,KEY_NUMPAD_PERIOD:110,KEY_NUMPAD_DIVIDE:111,KEY_F1:112,KEY_F2:113,KEY_F3:114,KEY_F4:115,KEY_F5:116,KEY_F6:117,KEY_F7:118,KEY_F8:119,KEY_F9:120,KEY_F10:121,KEY_F11:122,KEY_F12:123,KEY_F13:124,KEY_F14:125,KEY_F15:126,KEY_NUM_LOCK:144,KEY_SCROLL_LOCK:145};
this.revKeys=[];
for(var key in this.keys){
this.revKeys[this.keys[key]]=key;
}
this.fixEvent=function(evt,_230){
if(!evt){
if(window["event"]){
evt=window.event;
}
}
if((evt["type"])&&(evt["type"].indexOf("key")==0)){
evt.keys=this.revKeys;
for(var key in this.keys){
evt[key]=this.keys[key];
}
if(evt["type"]=="keydown"&&dojo.render.html.ie){
switch(evt.keyCode){
case evt.KEY_SHIFT:
case evt.KEY_CTRL:
case evt.KEY_ALT:
case evt.KEY_CAPS_LOCK:
case evt.KEY_LEFT_WINDOW:
case evt.KEY_RIGHT_WINDOW:
case evt.KEY_SELECT:
case evt.KEY_NUM_LOCK:
case evt.KEY_SCROLL_LOCK:
case evt.KEY_NUMPAD_0:
case evt.KEY_NUMPAD_1:
case evt.KEY_NUMPAD_2:
case evt.KEY_NUMPAD_3:
case evt.KEY_NUMPAD_4:
case evt.KEY_NUMPAD_5:
case evt.KEY_NUMPAD_6:
case evt.KEY_NUMPAD_7:
case evt.KEY_NUMPAD_8:
case evt.KEY_NUMPAD_9:
case evt.KEY_NUMPAD_PERIOD:
break;
case evt.KEY_NUMPAD_MULTIPLY:
case evt.KEY_NUMPAD_PLUS:
case evt.KEY_NUMPAD_ENTER:
case evt.KEY_NUMPAD_MINUS:
case evt.KEY_NUMPAD_DIVIDE:
break;
case evt.KEY_PAUSE:
case evt.KEY_TAB:
case evt.KEY_BACKSPACE:
case evt.KEY_ENTER:
case evt.KEY_ESCAPE:
case evt.KEY_PAGE_UP:
case evt.KEY_PAGE_DOWN:
case evt.KEY_END:
case evt.KEY_HOME:
case evt.KEY_LEFT_ARROW:
case evt.KEY_UP_ARROW:
case evt.KEY_RIGHT_ARROW:
case evt.KEY_DOWN_ARROW:
case evt.KEY_INSERT:
case evt.KEY_DELETE:
case evt.KEY_F1:
case evt.KEY_F2:
case evt.KEY_F3:
case evt.KEY_F4:
case evt.KEY_F5:
case evt.KEY_F6:
case evt.KEY_F7:
case evt.KEY_F8:
case evt.KEY_F9:
case evt.KEY_F10:
case evt.KEY_F11:
case evt.KEY_F12:
case evt.KEY_F12:
case evt.KEY_F13:
case evt.KEY_F14:
case evt.KEY_F15:
case evt.KEY_CLEAR:
case evt.KEY_HELP:
evt.key=evt.keyCode;
break;
default:
if(evt.ctrlKey||evt.altKey){
var _232=evt.keyCode;
if(_232>=65&&_232<=90&&evt.shiftKey==false){
_232+=32;
}
if(_232>=1&&_232<=26&&evt.ctrlKey){
_232+=96;
}
evt.key=String.fromCharCode(_232);
}
}
}else{
if(evt["type"]=="keypress"){
if(dojo.render.html.opera){
if(evt.which==0){
evt.key=evt.keyCode;
}else{
if(evt.which>0){
switch(evt.which){
case evt.KEY_SHIFT:
case evt.KEY_CTRL:
case evt.KEY_ALT:
case evt.KEY_CAPS_LOCK:
case evt.KEY_NUM_LOCK:
case evt.KEY_SCROLL_LOCK:
break;
case evt.KEY_PAUSE:
case evt.KEY_TAB:
case evt.KEY_BACKSPACE:
case evt.KEY_ENTER:
case evt.KEY_ESCAPE:
evt.key=evt.which;
break;
default:
var _232=evt.which;
if((evt.ctrlKey||evt.altKey||evt.metaKey)&&(evt.which>=65&&evt.which<=90&&evt.shiftKey==false)){
_232+=32;
}
evt.key=String.fromCharCode(_232);
}
}
}
}else{
if(dojo.render.html.ie){
if(!evt.ctrlKey&&!evt.altKey&&evt.keyCode>=evt.KEY_SPACE){
evt.key=String.fromCharCode(evt.keyCode);
}
}else{
if(dojo.render.html.safari){
switch(evt.keyCode){
case 25:
evt.key=evt.KEY_TAB;
evt.shift=true;
break;
case 63232:
evt.key=evt.KEY_UP_ARROW;
break;
case 63233:
evt.key=evt.KEY_DOWN_ARROW;
break;
case 63234:
evt.key=evt.KEY_LEFT_ARROW;
break;
case 63235:
evt.key=evt.KEY_RIGHT_ARROW;
break;
case 63236:
evt.key=evt.KEY_F1;
break;
case 63237:
evt.key=evt.KEY_F2;
break;
case 63238:
evt.key=evt.KEY_F3;
break;
case 63239:
evt.key=evt.KEY_F4;
break;
case 63240:
evt.key=evt.KEY_F5;
break;
case 63241:
evt.key=evt.KEY_F6;
break;
case 63242:
evt.key=evt.KEY_F7;
break;
case 63243:
evt.key=evt.KEY_F8;
break;
case 63244:
evt.key=evt.KEY_F9;
break;
case 63245:
evt.key=evt.KEY_F10;
break;
case 63246:
evt.key=evt.KEY_F11;
break;
case 63247:
evt.key=evt.KEY_F12;
break;
case 63250:
evt.key=evt.KEY_PAUSE;
break;
case 63272:
evt.key=evt.KEY_DELETE;
break;
case 63273:
evt.key=evt.KEY_HOME;
break;
case 63275:
evt.key=evt.KEY_END;
break;
case 63276:
evt.key=evt.KEY_PAGE_UP;
break;
case 63277:
evt.key=evt.KEY_PAGE_DOWN;
break;
case 63302:
evt.key=evt.KEY_INSERT;
break;
case 63248:
case 63249:
case 63289:
break;
default:
evt.key=evt.charCode>=evt.KEY_SPACE?String.fromCharCode(evt.charCode):evt.keyCode;
}
}else{
evt.key=evt.charCode>0?String.fromCharCode(evt.charCode):evt.keyCode;
}
}
}
}
}
}
if(dojo.render.html.ie){
if(!evt.target){
evt.target=evt.srcElement;
}
if(!evt.currentTarget){
evt.currentTarget=(_230?_230:evt.srcElement);
}
if(!evt.layerX){
evt.layerX=evt.offsetX;
}
if(!evt.layerY){
evt.layerY=evt.offsetY;
}
var doc=(evt.srcElement&&evt.srcElement.ownerDocument)?evt.srcElement.ownerDocument:document;
var _234=((dojo.render.html.ie55)||(doc["compatMode"]=="BackCompat"))?doc.body:doc.documentElement;
if(!evt.pageX){
evt.pageX=evt.clientX+(_234.scrollLeft||0);
}
if(!evt.pageY){
evt.pageY=evt.clientY+(_234.scrollTop||0);
}
if(evt.type=="mouseover"){
evt.relatedTarget=evt.fromElement;
}
if(evt.type=="mouseout"){
evt.relatedTarget=evt.toElement;
}
this.currentEvent=evt;
evt.callListener=this.callListener;
evt.stopPropagation=this._stopPropagation;
evt.preventDefault=this._preventDefault;
}
return evt;
};
this.stopEvent=function(evt){
if(window.event){
evt.cancelBubble=true;
evt.returnValue=false;
}else{
evt.preventDefault();
evt.stopPropagation();
}
};
};
dojo.provide("dojo.event.*");


__CPAN_EDITION__ event build.txt

Files baked into this package:

dojoGuardStart.js,
../src/bootstrap1.js,
../src/loader.js,
dojoGuardEnd.js,
../src/hostenv_browser.js,
../src/bootstrap2.js,
../src/lang/common.js,
../src/lang/array.js,
../src/lang/extras.js,
../src/lang/func.js,
../src/event/common.js,
../src/event/topic.js,
../src/event/browser.js,
../src/event/__package__.js

		
__CPAN_EDITION__ event_and_io dojo.js
/*
	Copyright (c) 2004-2006, The Dojo Foundation
	All Rights Reserved.

	Licensed under the Academic Free License version 2.1 or above OR the
	modified BSD license. For more information on Dojo licensing, see:

		http://dojotoolkit.org/community/licensing.shtml
*/

/*
	This is a compiled version of Dojo, built for deployment and not for
	development. To get an editable version, please visit:

		http://dojotoolkit.org

	for documentation and information on getting the source.
*/

if(typeof dojo=="undefined"){
var dj_global=this;
var dj_currentContext=this;
function dj_undef(_1,_2){
return (typeof (_2||dj_currentContext)[_1]=="undefined");
}
if(dj_undef("djConfig",this)){
var djConfig={};
}
if(dj_undef("dojo",this)){
var dojo={};
}
dojo.global=function(){
return dj_currentContext;
};
dojo.locale=djConfig.locale;
dojo.version={major:0,minor:4,patch:1,flag:"",revision:Number("$Rev: 6824 $".match(/[0-9]+/)[0]),toString:function(){
with(dojo.version){
return major+"."+minor+"."+patch+flag+" ("+revision+")";
}
}};
dojo.evalProp=function(_3,_4,_5){
if((!_4)||(!_3)){
return undefined;
}
if(!dj_undef(_3,_4)){
return _4[_3];
}
return (_5?(_4[_3]={}):undefined);
};
dojo.parseObjPath=function(_6,_7,_8){
var _9=(_7||dojo.global());
var _a=_6.split(".");
var _b=_a.pop();
for(var i=0,l=_a.length;i<l&&_9;i++){
_9=dojo.evalProp(_a[i],_9,_8);
}
return {obj:_9,prop:_b};
};
dojo.evalObjPath=function(_e,_f){
if(typeof _e!="string"){
return dojo.global();
}
if(_e.indexOf(".")==-1){
return dojo.evalProp(_e,dojo.global(),_f);
}
var ref=dojo.parseObjPath(_e,dojo.global(),_f);
if(ref){
return dojo.evalProp(ref.prop,ref.obj,_f);
}
return null;
};
dojo.errorToString=function(_11){
if(!dj_undef("message",_11)){
return _11.message;
}else{
if(!dj_undef("description",_11)){
return _11.description;
}else{
return _11;
}
}
};
dojo.raise=function(_12,_13){
if(_13){
_12=_12+": "+dojo.errorToString(_13);
}else{
_12=dojo.errorToString(_12);
}
try{
if(djConfig.isDebug){
dojo.hostenv.println("FATAL exception raised: "+_12);
}
}
catch(e){
}
throw _13||Error(_12);
};
dojo.debug=function(){
};
dojo.debugShallow=function(obj){
};
dojo.profile={start:function(){
},end:function(){
},stop:function(){
},dump:function(){
}};
function dj_eval(_15){
return dj_global.eval?dj_global.eval(_15):eval(_15);
}
dojo.unimplemented=function(_16,_17){
var _18="'"+_16+"' not implemented";
if(_17!=null){
_18+=" "+_17;
}
dojo.raise(_18);
};
dojo.deprecated=function(_19,_1a,_1b){
var _1c="DEPRECATED: "+_19;
if(_1a){
_1c+=" "+_1a;
}
if(_1b){
_1c+=" -- will be removed in version: "+_1b;
}
dojo.debug(_1c);
};
dojo.render=(function(){
function vscaffold(_1d,_1e){
var tmp={capable:false,support:{builtin:false,plugin:false},prefixes:_1d};
for(var i=0;i<_1e.length;i++){
tmp[_1e[i]]=false;
}
return tmp;
}
return {name:"",ver:dojo.version,os:{win:false,linux:false,osx:false},html:vscaffold(["html"],["ie","opera","khtml","safari","moz"]),svg:vscaffold(["svg"],["corel","adobe","batik"]),vml:vscaffold(["vml"],["ie"]),swf:vscaffold(["Swf","Flash","Mm"],["mm"]),swt:vscaffold(["Swt"],["ibm"])};
})();
dojo.hostenv=(function(){
var _21={isDebug:false,allowQueryConfig:false,baseScriptUri:"",baseRelativePath:"",libraryScriptUri:"",iePreventClobber:false,ieClobberMinimal:true,preventBackButtonFix:true,delayMozLoadingFix:false,searchIds:[],parseWidgets:true};
if(typeof djConfig=="undefined"){
djConfig=_21;
}else{
for(var _22 in _21){
if(typeof djConfig[_22]=="undefined"){
djConfig[_22]=_21[_22];
}
}
}
return {name_:"(unset)",version_:"(unset)",getName:function(){
return this.name_;
},getVersion:function(){
return this.version_;
},getText:function(uri){
dojo.unimplemented("getText","uri="+uri);
}};
})();
dojo.hostenv.getBaseScriptUri=function(){
if(djConfig.baseScriptUri.length){
return djConfig.baseScriptUri;
}
var uri=new String(djConfig.libraryScriptUri||djConfig.baseRelativePath);
if(!uri){
dojo.raise("Nothing returned by getLibraryScriptUri(): "+uri);
}
var _25=uri.lastIndexOf("/");
djConfig.baseScriptUri=djConfig.baseRelativePath;
return djConfig.baseScriptUri;
};
(function(){
var _26={pkgFileName:"__package__",loading_modules_:{},loaded_modules_:{},addedToLoadingCount:[],removedFromLoadingCount:[],inFlightCount:0,modulePrefixes_:{dojo:{name:"dojo",value:"src"}},setModulePrefix:function(_27,_28){
this.modulePrefixes_[_27]={name:_27,value:_28};
},moduleHasPrefix:function(_29){
var mp=this.modulePrefixes_;
return Boolean(mp[_29]&&mp[_29].value);
},getModulePrefix:function(_2b){
if(this.moduleHasPrefix(_2b)){
return this.modulePrefixes_[_2b].value;
}
return _2b;
},getTextStack:[],loadUriStack:[],loadedUris:[],post_load_:false,modulesLoadedListeners:[],unloadListeners:[],loadNotifying:false};
for(var _2c in _26){
dojo.hostenv[_2c]=_26[_2c];
}
})();
dojo.hostenv.loadPath=function(_2d,_2e,cb){
var uri;
if(_2d.charAt(0)=="/"||_2d.match(/^\w+:/)){
uri=_2d;
}else{
uri=this.getBaseScriptUri()+_2d;
}
if(djConfig.cacheBust&&dojo.render.html.capable){
uri+="?"+String(djConfig.cacheBust).replace(/\W+/g,"");
}
try{
return !_2e?this.loadUri(uri,cb):this.loadUriAndCheck(uri,_2e,cb);
}
catch(e){
dojo.debug(e);
return false;
}
};
dojo.hostenv.loadUri=function(uri,cb){
if(this.loadedUris[uri]){
return true;
}
var _33=this.getText(uri,null,true);
if(!_33){
return false;
}
this.loadedUris[uri]=true;
if(cb){
_33="("+_33+")";
}
var _34=dj_eval(_33);
if(cb){
cb(_34);
}
return true;
};
dojo.hostenv.loadUriAndCheck=function(uri,_36,cb){
var ok=true;
try{
ok=this.loadUri(uri,cb);
}
catch(e){
dojo.debug("failed loading ",uri," with error: ",e);
}
return Boolean(ok&&this.findModule(_36,false));
};
dojo.loaded=function(){
};
dojo.unloaded=function(){
};
dojo.hostenv.loaded=function(){
this.loadNotifying=true;
this.post_load_=true;
var mll=this.modulesLoadedListeners;
for(var x=0;x<mll.length;x++){
mll[x]();
}
this.modulesLoadedListeners=[];
this.loadNotifying=false;
dojo.loaded();
};
dojo.hostenv.unloaded=function(){
var mll=this.unloadListeners;
while(mll.length){
(mll.pop())();
}
dojo.unloaded();
};
dojo.addOnLoad=function(obj,_3d){
var dh=dojo.hostenv;
if(arguments.length==1){
dh.modulesLoadedListeners.push(obj);
}else{
if(arguments.length>1){
dh.modulesLoadedListeners.push(function(){
obj[_3d]();
});
}
}
if(dh.post_load_&&dh.inFlightCount==0&&!dh.loadNotifying){
dh.callLoaded();
}
};
dojo.addOnUnload=function(obj,_40){
var dh=dojo.hostenv;
if(arguments.length==1){
dh.unloadListeners.push(obj);
}else{
if(arguments.length>1){
dh.unloadListeners.push(function(){
obj[_40]();
});
}
}
};
dojo.hostenv.modulesLoaded=function(){
if(this.post_load_){
return;
}
if(this.loadUriStack.length==0&&this.getTextStack.length==0){
if(this.inFlightCount>0){
dojo.debug("files still in flight!");
return;
}
dojo.hostenv.callLoaded();
}
};
dojo.hostenv.callLoaded=function(){
if(typeof setTimeout=="object"){
setTimeout("dojo.hostenv.loaded();",0);
}else{
dojo.hostenv.loaded();
}
};
dojo.hostenv.getModuleSymbols=function(_42){
var _43=_42.split(".");
for(var i=_43.length;i>0;i--){
var _45=_43.slice(0,i).join(".");
if((i==1)&&!this.moduleHasPrefix(_45)){
_43[0]="../"+_43[0];
}else{
var _46=this.getModulePrefix(_45);
if(_46!=_45){
_43.splice(0,i,_46);
break;
}
}
}
return _43;
};
dojo.hostenv._global_omit_module_check=false;
dojo.hostenv.loadModule=function(_47,_48,_49){
if(!_47){
return;
}
_49=this._global_omit_module_check||_49;
var _4a=this.findModule(_47,false);
if(_4a){
return _4a;
}
if(dj_undef(_47,this.loading_modules_)){
this.addedToLoadingCount.push(_47);
}
this.loading_modules_[_47]=1;
var _4b=_47.replace(/\./g,"/")+".js";
var _4c=_47.split(".");
var _4d=this.getModuleSymbols(_47);
var _4e=((_4d[0].charAt(0)!="/")&&!_4d[0].match(/^\w+:/));
var _4f=_4d[_4d.length-1];
var ok;
if(_4f=="*"){
_47=_4c.slice(0,-1).join(".");
while(_4d.length){
_4d.pop();
_4d.push(this.pkgFileName);
_4b=_4d.join("/")+".js";
if(_4e&&_4b.charAt(0)=="/"){
_4b=_4b.slice(1);
}
ok=this.loadPath(_4b,!_49?_47:null);
if(ok){
break;
}
_4d.pop();
}
}else{
_4b=_4d.join("/")+".js";
_47=_4c.join(".");
var _51=!_49?_47:null;
ok=this.loadPath(_4b,_51);
if(!ok&&!_48){
_4d.pop();
while(_4d.length){
_4b=_4d.join("/")+".js";
ok=this.loadPath(_4b,_51);
if(ok){
break;
}
_4d.pop();
_4b=_4d.join("/")+"/"+this.pkgFileName+".js";
if(_4e&&_4b.charAt(0)=="/"){
_4b=_4b.slice(1);
}
ok=this.loadPath(_4b,_51);
if(ok){
break;
}
}
}
if(!ok&&!_49){
dojo.raise("Could not load '"+_47+"'; last tried '"+_4b+"'");
}
}
if(!_49&&!this["isXDomain"]){
_4a=this.findModule(_47,false);
if(!_4a){
dojo.raise("symbol '"+_47+"' is not defined after loading '"+_4b+"'");
}
}
return _4a;
};
dojo.hostenv.startPackage=function(_52){
var _53=String(_52);
var _54=_53;
var _55=_52.split(/\./);
if(_55[_55.length-1]=="*"){
_55.pop();
_54=_55.join(".");
}
var _56=dojo.evalObjPath(_54,true);
this.loaded_modules_[_53]=_56;
this.loaded_modules_[_54]=_56;
return _56;
};
dojo.hostenv.findModule=function(_57,_58){
var lmn=String(_57);
if(this.loaded_modules_[lmn]){
return this.loaded_modules_[lmn];
}
if(_58){
dojo.raise("no loaded module named '"+_57+"'");
}
return null;
};
dojo.kwCompoundRequire=function(_5a){
var _5b=_5a["common"]||[];
var _5c=_5a[dojo.hostenv.name_]?_5b.concat(_5a[dojo.hostenv.name_]||[]):_5b.concat(_5a["default"]||[]);
for(var x=0;x<_5c.length;x++){
var _5e=_5c[x];
if(_5e.constructor==Array){
dojo.hostenv.loadModule.apply(dojo.hostenv,_5e);
}else{
dojo.hostenv.loadModule(_5e);
}
}
};
dojo.require=function(_5f){
dojo.hostenv.loadModule.apply(dojo.hostenv,arguments);
};
dojo.requireIf=function(_60,_61){
var _62=arguments[0];
if((_62===true)||(_62=="common")||(_62&&dojo.render[_62].capable)){
var _63=[];
for(var i=1;i<arguments.length;i++){
_63.push(arguments[i]);
}
dojo.require.apply(dojo,_63);
}
};
dojo.requireAfterIf=dojo.requireIf;
dojo.provide=function(_65){
return dojo.hostenv.startPackage.apply(dojo.hostenv,arguments);
};
dojo.registerModulePath=function(_66,_67){
return dojo.hostenv.setModulePrefix(_66,_67);
};
dojo.setModulePrefix=function(_68,_69){
dojo.deprecated("dojo.setModulePrefix(\""+_68+"\", \""+_69+"\")","replaced by dojo.registerModulePath","0.5");
return dojo.registerModulePath(_68,_69);
};
dojo.exists=function(obj,_6b){
var p=_6b.split(".");
for(var i=0;i<p.length;i++){
if(!obj[p[i]]){
return false;
}
obj=obj[p[i]];
}
return true;
};
dojo.hostenv.normalizeLocale=function(_6e){
var _6f=_6e?_6e.toLowerCase():dojo.locale;
if(_6f=="root"){
_6f="ROOT";
}
return _6f;
};
dojo.hostenv.searchLocalePath=function(_70,_71,_72){
_70=dojo.hostenv.normalizeLocale(_70);
var _73=_70.split("-");
var _74=[];
for(var i=_73.length;i>0;i--){
_74.push(_73.slice(0,i).join("-"));
}
_74.push(false);
if(_71){
_74.reverse();
}
for(var j=_74.length-1;j>=0;j--){
var loc=_74[j]||"ROOT";
var _78=_72(loc);
if(_78){
break;
}
}
};
dojo.hostenv.localesGenerated;
dojo.hostenv.registerNlsPrefix=function(){
dojo.registerModulePath("nls","nls");
};
dojo.hostenv.preloadLocalizations=function(){
if(dojo.hostenv.localesGenerated){
dojo.hostenv.registerNlsPrefix();
function preload(_79){
_79=dojo.hostenv.normalizeLocale(_79);
dojo.hostenv.searchLocalePath(_79,true,function(loc){
for(var i=0;i<dojo.hostenv.localesGenerated.length;i++){
if(dojo.hostenv.localesGenerated[i]==loc){
dojo["require"]("nls.dojo_"+loc);
return true;
}
}
return false;
});
}
preload();
var _7c=djConfig.extraLocale||[];
for(var i=0;i<_7c.length;i++){
preload(_7c[i]);
}
}
dojo.hostenv.preloadLocalizations=function(){
};
};
dojo.requireLocalization=function(_7e,_7f,_80,_81){
dojo.hostenv.preloadLocalizations();
var _82=dojo.hostenv.normalizeLocale(_80);
var _83=[_7e,"nls",_7f].join(".");
var _84="";
if(_81){
var _85=_81.split(",");
for(var i=0;i<_85.length;i++){
if(_82.indexOf(_85[i])==0){
if(_85[i].length>_84.length){
_84=_85[i];
}
}
}
if(!_84){
_84="ROOT";
}
}
var _87=_81?_84:_82;
var _88=dojo.hostenv.findModule(_83);
var _89=null;
if(_88){
if(djConfig.localizationComplete&&_88._built){
return;
}
var _8a=_87.replace("-","_");
var _8b=_83+"."+_8a;
_89=dojo.hostenv.findModule(_8b);
}
if(!_89){
_88=dojo.hostenv.startPackage(_83);
var _8c=dojo.hostenv.getModuleSymbols(_7e);
var _8d=_8c.concat("nls").join("/");
var _8e;
dojo.hostenv.searchLocalePath(_87,_81,function(loc){
var _90=loc.replace("-","_");
var _91=_83+"."+_90;
var _92=false;
if(!dojo.hostenv.findModule(_91)){
dojo.hostenv.startPackage(_91);
var _93=[_8d];
if(loc!="ROOT"){
_93.push(loc);
}
_93.push(_7f);
var _94=_93.join("/")+".js";
_92=dojo.hostenv.loadPath(_94,null,function(_95){
var _96=function(){
};
_96.prototype=_8e;
_88[_90]=new _96();
for(var j in _95){
_88[_90][j]=_95[j];
}
});
}else{
_92=true;
}
if(_92&&_88[_90]){
_8e=_88[_90];
}else{
_88[_90]=_8e;
}
if(_81){
return true;
}
});
}
if(_81&&_82!=_84){
_88[_82.replace("-","_")]=_88[_84.replace("-","_")];
}
};
(function(){
var _98=djConfig.extraLocale;
if(_98){
if(!_98 instanceof Array){
_98=[_98];
}
var req=dojo.requireLocalization;
dojo.requireLocalization=function(m,b,_9c,_9d){
req(m,b,_9c,_9d);
if(_9c){
return;
}
for(var i=0;i<_98.length;i++){
req(m,b,_98[i],_9d);
}
};
}
})();
}
if(typeof window!="undefined"){
(function(){
if(djConfig.allowQueryConfig){
var _9f=document.location.toString();
var _a0=_9f.split("?",2);
if(_a0.length>1){
var _a1=_a0[1];
var _a2=_a1.split("&");
for(var x in _a2){
var sp=_a2[x].split("=");
if((sp[0].length>9)&&(sp[0].substr(0,9)=="djConfig.")){
var opt=sp[0].substr(9);
try{
djConfig[opt]=eval(sp[1]);
}
catch(e){
djConfig[opt]=sp[1];
}
}
}
}
}
if(((djConfig["baseScriptUri"]=="")||(djConfig["baseRelativePath"]==""))&&(document&&document.getElementsByTagName)){
var _a6=document.getElementsByTagName("script");
var _a7=/(__package__|dojo|bootstrap1)\.js([\?\.]|$)/i;
for(var i=0;i<_a6.length;i++){
var src=_a6[i].getAttribute("src");
if(!src){
continue;
}
var m=src.match(_a7);
if(m){
var _ab=src.substring(0,m.index);
if(src.indexOf("bootstrap1")>-1){
_ab+="../";
}
if(!this["djConfig"]){
djConfig={};
}
if(djConfig["baseScriptUri"]==""){
djConfig["baseScriptUri"]=_ab;
}
if(djConfig["baseRelativePath"]==""){
djConfig["baseRelativePath"]=_ab;
}
break;
}
}
}
var dr=dojo.render;
var drh=dojo.render.html;
var drs=dojo.render.svg;
var dua=(drh.UA=navigator.userAgent);
var dav=(drh.AV=navigator.appVersion);
var t=true;
var f=false;
drh.capable=t;
drh.support.builtin=t;
dr.ver=parseFloat(drh.AV);
dr.os.mac=dav.indexOf("Macintosh")>=0;
dr.os.win=dav.indexOf("Windows")>=0;
dr.os.linux=dav.indexOf("X11")>=0;
drh.opera=dua.indexOf("Opera")>=0;
drh.khtml=(dav.indexOf("Konqueror")>=0)||(dav.indexOf("Safari")>=0);
drh.safari=dav.indexOf("Safari")>=0;
var _b3=dua.indexOf("Gecko");
drh.mozilla=drh.moz=(_b3>=0)&&(!drh.khtml);
if(drh.mozilla){
drh.geckoVersion=dua.substring(_b3+6,_b3+14);
}
drh.ie=(document.all)&&(!drh.opera);
drh.ie50=drh.ie&&dav.indexOf("MSIE 5.0")>=0;
drh.ie55=drh.ie&&dav.indexOf("MSIE 5.5")>=0;
drh.ie60=drh.ie&&dav.indexOf("MSIE 6.0")>=0;
drh.ie70=drh.ie&&dav.indexOf("MSIE 7.0")>=0;
var cm=document["compatMode"];
drh.quirks=(cm=="BackCompat")||(cm=="QuirksMode")||drh.ie55||drh.ie50;
dojo.locale=dojo.locale||(drh.ie?navigator.userLanguage:navigator.language).toLowerCase();
dr.vml.capable=drh.ie;
drs.capable=f;
drs.support.plugin=f;
drs.support.builtin=f;
var _b5=window["document"];
var tdi=_b5["implementation"];
if((tdi)&&(tdi["hasFeature"])&&(tdi.hasFeature("org.w3c.dom.svg","1.0"))){
drs.capable=t;
drs.support.builtin=t;
drs.support.plugin=f;
}
if(drh.safari){
var tmp=dua.split("AppleWebKit/")[1];
var ver=parseFloat(tmp.split(" ")[0]);
if(ver>=420){
drs.capable=t;
drs.support.builtin=t;
drs.support.plugin=f;
}
}else{
}
})();
dojo.hostenv.startPackage("dojo.hostenv");
dojo.render.name=dojo.hostenv.name_="browser";
dojo.hostenv.searchIds=[];
dojo.hostenv._XMLHTTP_PROGIDS=["Msxml2.XMLHTTP","Microsoft.XMLHTTP","Msxml2.XMLHTTP.4.0"];
dojo.hostenv.getXmlhttpObject=function(){
var _b9=null;
var _ba=null;
try{
_b9=new XMLHttpRequest();
}
catch(e){
}
if(!_b9){
for(var i=0;i<3;++i){
var _bc=dojo.hostenv._XMLHTTP_PROGIDS[i];
try{
_b9=new ActiveXObject(_bc);
}
catch(e){
_ba=e;
}
if(_b9){
dojo.hostenv._XMLHTTP_PROGIDS=[_bc];
break;
}
}
}
if(!_b9){
return dojo.raise("XMLHTTP not available",_ba);
}
return _b9;
};
dojo.hostenv._blockAsync=false;
dojo.hostenv.getText=function(uri,_be,_bf){
if(!_be){
this._blockAsync=true;
}
var _c0=this.getXmlhttpObject();
function isDocumentOk(_c1){
var _c2=_c1["status"];
return Boolean((!_c2)||((200<=_c2)&&(300>_c2))||(_c2==304));
}
if(_be){
var _c3=this,_c4=null,gbl=dojo.global();
var xhr=dojo.evalObjPath("dojo.io.XMLHTTPTransport");
_c0.onreadystatechange=function(){
if(_c4){
gbl.clearTimeout(_c4);
_c4=null;
}
if(_c3._blockAsync||(xhr&&xhr._blockAsync)){
_c4=gbl.setTimeout(function(){
_c0.onreadystatechange.apply(this);
},10);
}else{
if(4==_c0.readyState){
if(isDocumentOk(_c0)){
_be(_c0.responseText);
}
}
}
};
}
_c0.open("GET",uri,_be?true:false);
try{
_c0.send(null);
if(_be){
return null;
}
if(!isDocumentOk(_c0)){
var err=Error("Unable to load "+uri+" status:"+_c0.status);
err.status=_c0.status;
err.responseText=_c0.responseText;
throw err;
}
}
catch(e){
this._blockAsync=false;
if((_bf)&&(!_be)){
return null;
}else{
throw e;
}
}
this._blockAsync=false;
return _c0.responseText;
};
dojo.hostenv.defaultDebugContainerId="dojoDebug";
dojo.hostenv._println_buffer=[];
dojo.hostenv._println_safe=false;
dojo.hostenv.println=function(_c8){
if(!dojo.hostenv._println_safe){
dojo.hostenv._println_buffer.push(_c8);
}else{
try{
var _c9=document.getElementById(djConfig.debugContainerId?djConfig.debugContainerId:dojo.hostenv.defaultDebugContainerId);
if(!_c9){
_c9=dojo.body();
}
var div=document.createElement("div");
div.appendChild(document.createTextNode(_c8));
_c9.appendChild(div);
}
catch(e){
try{
document.write("<div>"+_c8+"</div>");
}
catch(e2){
window.status=_c8;
}
}
}
};
dojo.addOnLoad(function(){
dojo.hostenv._println_safe=true;
while(dojo.hostenv._println_buffer.length>0){
dojo.hostenv.println(dojo.hostenv._println_buffer.shift());
}
});
function dj_addNodeEvtHdlr(_cb,_cc,fp){
var _ce=_cb["on"+_cc]||function(){
};
_cb["on"+_cc]=function(){
fp.apply(_cb,arguments);
_ce.apply(_cb,arguments);
};
return true;
}
function dj_load_init(e){
var _d0=(e&&e.type)?e.type.toLowerCase():"load";
if(arguments.callee.initialized||(_d0!="domcontentloaded"&&_d0!="load")){
return;
}
arguments.callee.initialized=true;
if(typeof (_timer)!="undefined"){
clearInterval(_timer);
delete _timer;
}
var _d1=function(){
if(dojo.render.html.ie){
dojo.hostenv.makeWidgets();
}
};
if(dojo.hostenv.inFlightCount==0){
_d1();
dojo.hostenv.modulesLoaded();
}else{
dojo.hostenv.modulesLoadedListeners.unshift(_d1);
}
}
if(document.addEventListener){
if(dojo.render.html.opera||(dojo.render.html.moz&&!djConfig.delayMozLoadingFix)){
document.addEventListener("DOMContentLoaded",dj_load_init,null);
}
window.addEventListener("load",dj_load_init,null);
}
if(dojo.render.html.ie&&dojo.render.os.win){
document.attachEvent("onreadystatechange",function(e){
if(document.readyState=="complete"){
dj_load_init();
}
});
}
if(/(WebKit|khtml)/i.test(navigator.userAgent)){
var _timer=setInterval(function(){
if(/loaded|complete/.test(document.readyState)){
dj_load_init();
}
},10);
}
if(dojo.render.html.ie){
dj_addNodeEvtHdlr(window,"beforeunload",function(){
dojo.hostenv._unloading=true;
window.setTimeout(function(){
dojo.hostenv._unloading=false;
},0);
});
}
dj_addNodeEvtHdlr(window,"unload",function(){
dojo.hostenv.unloaded();
if((!dojo.render.html.ie)||(dojo.render.html.ie&&dojo.hostenv._unloading)){
dojo.hostenv.unloaded();
}
});
dojo.hostenv.makeWidgets=function(){
var _d3=[];
if(djConfig.searchIds&&djConfig.searchIds.length>0){
_d3=_d3.concat(djConfig.searchIds);
}
if(dojo.hostenv.searchIds&&dojo.hostenv.searchIds.length>0){
_d3=_d3.concat(dojo.hostenv.searchIds);
}
if((djConfig.parseWidgets)||(_d3.length>0)){
if(dojo.evalObjPath("dojo.widget.Parse")){
var _d4=new dojo.xml.Parse();
if(_d3.length>0){
for(var x=0;x<_d3.length;x++){
var _d6=document.getElementById(_d3[x]);
if(!_d6){
continue;
}
var _d7=_d4.parseElement(_d6,null,true);
dojo.widget.getParser().createComponents(_d7);
}
}else{
if(djConfig.parseWidgets){
var _d7=_d4.parseElement(dojo.body(),null,true);
dojo.widget.getParser().createComponents(_d7);
}
}
}
}
};
dojo.addOnLoad(function(){
if(!dojo.render.html.ie){
dojo.hostenv.makeWidgets();
}
});
try{
if(dojo.render.html.ie){
document.namespaces.add("v","urn:schemas-microsoft-com:vml");
document.createStyleSheet().addRule("v\\:*","behavior:url(#default#VML)");
}
}
catch(e){
}
dojo.hostenv.writeIncludes=function(){
};
if(!dj_undef("document",this)){
dj_currentDocument=this.document;
}
dojo.doc=function(){
return dj_currentDocument;
};
dojo.body=function(){
return dojo.doc().body||dojo.doc().getElementsByTagName("body")[0];
};
dojo.byId=function(id,doc){
if((id)&&((typeof id=="string")||(id instanceof String))){
if(!doc){
doc=dj_currentDocument;
}
var ele=doc.getElementById(id);
if(ele&&(ele.id!=id)&&doc.all){
ele=null;
eles=doc.all[id];
if(eles){
if(eles.length){
for(var i=0;i<eles.length;i++){
if(eles[i].id==id){
ele=eles[i];
break;
}
}
}else{
ele=eles;
}
}
}
return ele;
}
return id;
};
dojo.setContext=function(_dc,_dd){
dj_currentContext=_dc;
dj_currentDocument=_dd;
};
dojo._fireCallback=function(_de,_df,_e0){
if((_df)&&((typeof _de=="string")||(_de instanceof String))){
_de=_df[_de];
}
return (_df?_de.apply(_df,_e0||[]):_de());
};
dojo.withGlobal=function(_e1,_e2,_e3,_e4){
var _e5;
var _e6=dj_currentContext;
var _e7=dj_currentDocument;
try{
dojo.setContext(_e1,_e1.document);
_e5=dojo._fireCallback(_e2,_e3,_e4);
}
finally{
dojo.setContext(_e6,_e7);
}
return _e5;
};
dojo.withDoc=function(_e8,_e9,_ea,_eb){
var _ec;
var _ed=dj_currentDocument;
try{
dj_currentDocument=_e8;
_ec=dojo._fireCallback(_e9,_ea,_eb);
}
finally{
dj_currentDocument=_ed;
}
return _ec;
};
}
(function(){
if(typeof dj_usingBootstrap!="undefined"){
return;
}
var _ee=false;
var _ef=false;
var _f0=false;
if((typeof this["load"]=="function")&&((typeof this["Packages"]=="function")||(typeof this["Packages"]=="object"))){
_ee=true;
}else{
if(typeof this["load"]=="function"){
_ef=true;
}else{
if(window.widget){
_f0=true;
}
}
}
var _f1=[];
if((this["djConfig"])&&((djConfig["isDebug"])||(djConfig["debugAtAllCosts"]))){
_f1.push("debug.js");
}
if((this["djConfig"])&&(djConfig["debugAtAllCosts"])&&(!_ee)&&(!_f0)){
_f1.push("browser_debug.js");
}
var _f2=djConfig["baseScriptUri"];
if((this["djConfig"])&&(djConfig["baseLoaderUri"])){
_f2=djConfig["baseLoaderUri"];
}
for(var x=0;x<_f1.length;x++){
var _f4=_f2+"src/"+_f1[x];
if(_ee||_ef){
load(_f4);
}else{
try{
document.write("<scr"+"ipt type='text/javascript' src='"+_f4+"'></scr"+"ipt>");
}
catch(e){
var _f5=document.createElement("script");
_f5.src=_f4;
document.getElementsByTagName("head")[0].appendChild(_f5);
}
}
}
})();
dojo.provide("dojo.string.common");
dojo.string.trim=function(str,wh){
if(!str.replace){
return str;
}
if(!str.length){
return str;
}
var re=(wh>0)?(/^\s+/):(wh<0)?(/\s+$/):(/^\s+|\s+$/g);
return str.replace(re,"");
};
dojo.string.trimStart=function(str){
return dojo.string.trim(str,1);
};
dojo.string.trimEnd=function(str){
return dojo.string.trim(str,-1);
};
dojo.string.repeat=function(str,_fc,_fd){
var out="";
for(var i=0;i<_fc;i++){
out+=str;
if(_fd&&i<_fc-1){
out+=_fd;
}
}
return out;
};
dojo.string.pad=function(str,len,c,dir){
var out=String(str);
if(!c){
c="0";
}
if(!dir){
dir=1;
}
while(out.length<len){
if(dir>0){
out=c+out;
}else{
out+=c;
}
}
return out;
};
dojo.string.padLeft=function(str,len,c){
return dojo.string.pad(str,len,c,1);
};
dojo.string.padRight=function(str,len,c){
return dojo.string.pad(str,len,c,-1);
};
dojo.provide("dojo.string");
dojo.provide("dojo.lang.common");
dojo.lang.inherits=function(_10b,_10c){
if(!dojo.lang.isFunction(_10c)){
dojo.raise("dojo.inherits: superclass argument ["+_10c+"] must be a function (subclass: ["+_10b+"']");
}
_10b.prototype=new _10c();
_10b.prototype.constructor=_10b;
_10b.superclass=_10c.prototype;
_10b["super"]=_10c.prototype;
};
dojo.lang._mixin=function(obj,_10e){
var tobj={};
for(var x in _10e){
if((typeof tobj[x]=="undefined")||(tobj[x]!=_10e[x])){
obj[x]=_10e[x];
}
}
if(dojo.render.html.ie&&(typeof (_10e["toString"])=="function")&&(_10e["toString"]!=obj["toString"])&&(_10e["toString"]!=tobj["toString"])){
obj.toString=_10e.toString;
}
return obj;
};
dojo.lang.mixin=function(obj,_112){
for(var i=1,l=arguments.length;i<l;i++){
dojo.lang._mixin(obj,arguments[i]);
}
return obj;
};
dojo.lang.extend=function(_115,_116){
for(var i=1,l=arguments.length;i<l;i++){
dojo.lang._mixin(_115.prototype,arguments[i]);
}
return _115;
};
dojo.inherits=dojo.lang.inherits;
dojo.mixin=dojo.lang.mixin;
dojo.extend=dojo.lang.extend;
dojo.lang.find=function(_119,_11a,_11b,_11c){
if(!dojo.lang.isArrayLike(_119)&&dojo.lang.isArrayLike(_11a)){
dojo.deprecated("dojo.lang.find(value, array)","use dojo.lang.find(array, value) instead","0.5");
var temp=_119;
_119=_11a;
_11a=temp;
}
var _11e=dojo.lang.isString(_119);
if(_11e){
_119=_119.split("");
}
if(_11c){
var step=-1;
var i=_119.length-1;
var end=-1;
}else{
var step=1;
var i=0;
var end=_119.length;
}
if(_11b){
while(i!=end){
if(_119[i]===_11a){
return i;
}
i+=step;
}
}else{
while(i!=end){
if(_119[i]==_11a){
return i;
}
i+=step;
}
}
return -1;
};
dojo.lang.indexOf=dojo.lang.find;
dojo.lang.findLast=function(_122,_123,_124){
return dojo.lang.find(_122,_123,_124,true);
};
dojo.lang.lastIndexOf=dojo.lang.findLast;
dojo.lang.inArray=function(_125,_126){
return dojo.lang.find(_125,_126)>-1;
};
dojo.lang.isObject=function(it){
if(typeof it=="undefined"){
return false;
}
return (typeof it=="object"||it===null||dojo.lang.isArray(it)||dojo.lang.isFunction(it));
};
dojo.lang.isArray=function(it){
return (it&&it instanceof Array||typeof it=="array");
};
dojo.lang.isArrayLike=function(it){
if((!it)||(dojo.lang.isUndefined(it))){
return false;
}
if(dojo.lang.isString(it)){
return false;
}
if(dojo.lang.isFunction(it)){
return false;
}
if(dojo.lang.isArray(it)){
return true;
}
if((it.tagName)&&(it.tagName.toLowerCase()=="form")){
return false;
}
if(dojo.lang.isNumber(it.length)&&isFinite(it.length)){
return true;
}
return false;
};
dojo.lang.isFunction=function(it){
return (it instanceof Function||typeof it=="function");
};
(function(){
if((dojo.render.html.capable)&&(dojo.render.html["safari"])){
dojo.lang.isFunction=function(it){
if((typeof (it)=="function")&&(it=="[object NodeList]")){
return false;
}
return (it instanceof Function||typeof it=="function");
};
}
})();
dojo.lang.isString=function(it){
return (typeof it=="string"||it instanceof String);
};
dojo.lang.isAlien=function(it){
if(!it){
return false;
}
return !dojo.lang.isFunction(it)&&/\{\s*\[native code\]\s*\}/.test(String(it));
};
dojo.lang.isBoolean=function(it){
return (it instanceof Boolean||typeof it=="boolean");
};
dojo.lang.isNumber=function(it){
return (it instanceof Number||typeof it=="number");
};
dojo.lang.isUndefined=function(it){
return ((typeof (it)=="undefined")&&(it==undefined));
};
dojo.provide("dojo.lang.extras");
dojo.lang.setTimeout=function(func,_132){
var _133=window,_134=2;
if(!dojo.lang.isFunction(func)){
_133=func;
func=_132;
_132=arguments[2];
_134++;
}
if(dojo.lang.isString(func)){
func=_133[func];
}
var args=[];
for(var i=_134;i<arguments.length;i++){
args.push(arguments[i]);
}
return dojo.global().setTimeout(function(){
func.apply(_133,args);
},_132);
};
dojo.lang.clearTimeout=function(_137){
dojo.global().clearTimeout(_137);
};
dojo.lang.getNameInObj=function(ns,item){
if(!ns){
ns=dj_global;
}
for(var x in ns){
if(ns[x]===item){
return new String(x);
}
}
return null;
};
dojo.lang.shallowCopy=function(obj,deep){
var i,ret;
if(obj===null){
return null;
}
if(dojo.lang.isObject(obj)){
ret=new obj.constructor();
for(i in obj){
if(dojo.lang.isUndefined(ret[i])){
ret[i]=deep?dojo.lang.shallowCopy(obj[i],deep):obj[i];
}
}
}else{
if(dojo.lang.isArray(obj)){
ret=[];
for(i=0;i<obj.length;i++){
ret[i]=deep?dojo.lang.shallowCopy(obj[i],deep):obj[i];
}
}else{
ret=obj;
}
}
return ret;
};
dojo.lang.firstValued=function(){
for(var i=0;i<arguments.length;i++){
if(typeof arguments[i]!="undefined"){
return arguments[i];
}
}
return undefined;
};
dojo.lang.getObjPathValue=function(_140,_141,_142){
with(dojo.parseObjPath(_140,_141,_142)){
return dojo.evalProp(prop,obj,_142);
}
};
dojo.lang.setObjPathValue=function(_143,_144,_145,_146){
dojo.deprecated("dojo.lang.setObjPathValue","use dojo.parseObjPath and the '=' operator","0.6");
if(arguments.length<4){
_146=true;
}
with(dojo.parseObjPath(_143,_145,_146)){
if(obj&&(_146||(prop in obj))){
obj[prop]=_144;
}
}
};
dojo.provide("dojo.io.common");
dojo.io.transports=[];
dojo.io.hdlrFuncNames=["load","error","timeout"];
dojo.io.Request=function(url,_148,_149,_14a){
if((arguments.length==1)&&(arguments[0].constructor==Object)){
this.fromKwArgs(arguments[0]);
}else{
this.url=url;
if(_148){
this.mimetype=_148;
}
if(_149){
this.transport=_149;
}
if(arguments.length>=4){
this.changeUrl=_14a;
}
}
};
dojo.lang.extend(dojo.io.Request,{url:"",mimetype:"text/plain",method:"GET",content:undefined,transport:undefined,changeUrl:undefined,formNode:undefined,sync:false,bindSuccess:false,useCache:false,preventCache:false,load:function(type,data,_14d,_14e){
},error:function(type,_150,_151,_152){
},timeout:function(type,_154,_155,_156){
},handle:function(type,data,_159,_15a){
},timeoutSeconds:0,abort:function(){
},fromKwArgs:function(_15b){
if(_15b["url"]){
_15b.url=_15b.url.toString();
}
if(_15b["formNode"]){
_15b.formNode=dojo.byId(_15b.formNode);
}
if(!_15b["method"]&&_15b["formNode"]&&_15b["formNode"].method){
_15b.method=_15b["formNode"].method;
}
if(!_15b["handle"]&&_15b["handler"]){
_15b.handle=_15b.handler;
}
if(!_15b["load"]&&_15b["loaded"]){
_15b.load=_15b.loaded;
}
if(!_15b["changeUrl"]&&_15b["changeURL"]){
_15b.changeUrl=_15b.changeURL;
}
_15b.encoding=dojo.lang.firstValued(_15b["encoding"],djConfig["bindEncoding"],"");
_15b.sendTransport=dojo.lang.firstValued(_15b["sendTransport"],djConfig["ioSendTransport"],false);
var _15c=dojo.lang.isFunction;
for(var x=0;x<dojo.io.hdlrFuncNames.length;x++){
var fn=dojo.io.hdlrFuncNames[x];
if(_15b[fn]&&_15c(_15b[fn])){
continue;
}
if(_15b["handle"]&&_15c(_15b["handle"])){
_15b[fn]=_15b.handle;
}
}
dojo.lang.mixin(this,_15b);
}});
dojo.io.Error=function(msg,type,num){
this.message=msg;
this.type=type||"unknown";
this.number=num||0;
};
dojo.io.transports.addTransport=function(name){
this.push(name);
this[name]=dojo.io[name];
};
dojo.io.bind=function(_163){
if(!(_163 instanceof dojo.io.Request)){
try{
_163=new dojo.io.Request(_163);
}
catch(e){
dojo.debug(e);
}
}
var _164="";
if(_163["transport"]){
_164=_163["transport"];
if(!this[_164]){
dojo.io.sendBindError(_163,"No dojo.io.bind() transport with name '"+_163["transport"]+"'.");
return _163;
}
if(!this[_164].canHandle(_163)){
dojo.io.sendBindError(_163,"dojo.io.bind() transport with name '"+_163["transport"]+"' cannot handle this type of request.");
return _163;
}
}else{
for(var x=0;x<dojo.io.transports.length;x++){
var tmp=dojo.io.transports[x];
if((this[tmp])&&(this[tmp].canHandle(_163))){
_164=tmp;
break;
}
}
if(_164==""){
dojo.io.sendBindError(_163,"None of the loaded transports for dojo.io.bind()"+" can handle the request.");
return _163;
}
}
this[_164].bind(_163);
_163.bindSuccess=true;
return _163;
};
dojo.io.sendBindError=function(_167,_168){
if((typeof _167.error=="function"||typeof _167.handle=="function")&&(typeof setTimeout=="function"||typeof setTimeout=="object")){
var _169=new dojo.io.Error(_168);
setTimeout(function(){
_167[(typeof _167.error=="function")?"error":"handle"]("error",_169,null,_167);
},50);
}else{
dojo.raise(_168);
}
};
dojo.io.queueBind=function(_16a){
if(!(_16a instanceof dojo.io.Request)){
try{
_16a=new dojo.io.Request(_16a);
}
catch(e){
dojo.debug(e);
}
}
var _16b=_16a.load;
_16a.load=function(){
dojo.io._queueBindInFlight=false;
var ret=_16b.apply(this,arguments);
dojo.io._dispatchNextQueueBind();
return ret;
};
var _16d=_16a.error;
_16a.error=function(){
dojo.io._queueBindInFlight=false;
var ret=_16d.apply(this,arguments);
dojo.io._dispatchNextQueueBind();
return ret;
};
dojo.io._bindQueue.push(_16a);
dojo.io._dispatchNextQueueBind();
return _16a;
};
dojo.io._dispatchNextQueueBind=function(){
if(!dojo.io._queueBindInFlight){
dojo.io._queueBindInFlight=true;
if(dojo.io._bindQueue.length>0){
dojo.io.bind(dojo.io._bindQueue.shift());
}else{
dojo.io._queueBindInFlight=false;
}
}
};
dojo.io._bindQueue=[];
dojo.io._queueBindInFlight=false;
dojo.io.argsFromMap=function(map,_170,last){
var enc=/utf/i.test(_170||"")?encodeURIComponent:dojo.string.encodeAscii;
var _173=[];
var _174=new Object();
for(var name in map){
var _176=function(elt){
var val=enc(name)+"="+enc(elt);
_173[(last==name)?"push":"unshift"](val);
};
if(!_174[name]){
var _179=map[name];
if(dojo.lang.isArray(_179)){
dojo.lang.forEach(_179,_176);
}else{
_176(_179);
}
}
}
return _173.join("&");
};
dojo.io.setIFrameSrc=function(_17a,src,_17c){
try{
var r=dojo.render.html;
if(!_17c){
if(r.safari){
_17a.location=src;
}else{
frames[_17a.name].location=src;
}
}else{
var idoc;
if(r.ie){
idoc=_17a.contentWindow.document;
}else{
if(r.safari){
idoc=_17a.document;
}else{
idoc=_17a.contentWindow;
}
}
if(!idoc){
_17a.location=src;
return;
}else{
idoc.location.replace(src);
}
}
}
catch(e){
dojo.debug(e);
dojo.debug("setIFrameSrc: "+e);
}
};
dojo.provide("dojo.lang.array");
dojo.lang.mixin(dojo.lang,{has:function(obj,name){
try{
return typeof obj[name]!="undefined";
}
catch(e){
return false;
}
},isEmpty:function(obj){
if(dojo.lang.isObject(obj)){
var tmp={};
var _183=0;
for(var x in obj){
if(obj[x]&&(!tmp[x])){
_183++;
break;
}
}
return _183==0;
}else{
if(dojo.lang.isArrayLike(obj)||dojo.lang.isString(obj)){
return obj.length==0;
}
}
},map:function(arr,obj,_187){
var _188=dojo.lang.isString(arr);
if(_188){
arr=arr.split("");
}
if(dojo.lang.isFunction(obj)&&(!_187)){
_187=obj;
obj=dj_global;
}else{
if(dojo.lang.isFunction(obj)&&_187){
var _189=obj;
obj=_187;
_187=_189;
}
}
if(Array.map){
var _18a=Array.map(arr,_187,obj);
}else{
var _18a=[];
for(var i=0;i<arr.length;++i){
_18a.push(_187.call(obj,arr[i]));
}
}
if(_188){
return _18a.join("");
}else{
return _18a;
}
},reduce:function(arr,_18d,obj,_18f){
var _190=_18d;
if(arguments.length==1){
dojo.debug("dojo.lang.reduce called with too few arguments!");
return false;
}else{
if(arguments.length==2){
_18f=_18d;
_190=arr.shift();
}else{
if(arguments.lenght==3){
if(dojo.lang.isFunction(obj)){
_18f=obj;
obj=null;
}
}else{
if(dojo.lang.isFunction(obj)){
var tmp=_18f;
_18f=obj;
obj=tmp;
}
}
}
}
var ob=obj?obj:dj_global;
dojo.lang.map(arr,function(val){
_190=_18f.call(ob,_190,val);
});
return _190;
},forEach:function(_194,_195,_196){
if(dojo.lang.isString(_194)){
_194=_194.split("");
}
if(Array.forEach){
Array.forEach(_194,_195,_196);
}else{
if(!_196){
_196=dj_global;
}
for(var i=0,l=_194.length;i<l;i++){
_195.call(_196,_194[i],i,_194);
}
}
},_everyOrSome:function(_199,arr,_19b,_19c){
if(dojo.lang.isString(arr)){
arr=arr.split("");
}
if(Array.every){
return Array[_199?"every":"some"](arr,_19b,_19c);
}else{
if(!_19c){
_19c=dj_global;
}
for(var i=0,l=arr.length;i<l;i++){
var _19f=_19b.call(_19c,arr[i],i,arr);
if(_199&&!_19f){
return false;
}else{
if((!_199)&&(_19f)){
return true;
}
}
}
return Boolean(_199);
}
},every:function(arr,_1a1,_1a2){
return this._everyOrSome(true,arr,_1a1,_1a2);
},some:function(arr,_1a4,_1a5){
return this._everyOrSome(false,arr,_1a4,_1a5);
},filter:function(arr,_1a7,_1a8){
var _1a9=dojo.lang.isString(arr);
if(_1a9){
arr=arr.split("");
}
var _1aa;
if(Array.filter){
_1aa=Array.filter(arr,_1a7,_1a8);
}else{
if(!_1a8){
if(arguments.length>=3){
dojo.raise("thisObject doesn't exist!");
}
_1a8=dj_global;
}
_1aa=[];
for(var i=0;i<arr.length;i++){
if(_1a7.call(_1a8,arr[i],i,arr)){
_1aa.push(arr[i]);
}
}
}
if(_1a9){
return _1aa.join("");
}else{
return _1aa;
}
},unnest:function(){
var out=[];
for(var i=0;i<arguments.length;i++){
if(dojo.lang.isArrayLike(arguments[i])){
var add=dojo.lang.unnest.apply(this,arguments[i]);
out=out.concat(add);
}else{
out.push(arguments[i]);
}
}
return out;
},toArray:function(_1af,_1b0){
var _1b1=[];
for(var i=_1b0||0;i<_1af.length;i++){
_1b1.push(_1af[i]);
}
return _1b1;
}});
dojo.provide("dojo.lang.func");
dojo.lang.hitch=function(_1b3,_1b4){
var fcn=(dojo.lang.isString(_1b4)?_1b3[_1b4]:_1b4)||function(){
};
return function(){
return fcn.apply(_1b3,arguments);
};
};
dojo.lang.anonCtr=0;
dojo.lang.anon={};
dojo.lang.nameAnonFunc=function(_1b6,_1b7,_1b8){
var nso=(_1b7||dojo.lang.anon);
if((_1b8)||((dj_global["djConfig"])&&(djConfig["slowAnonFuncLookups"]==true))){
for(var x in nso){
try{
if(nso[x]===_1b6){
return x;
}
}
catch(e){
}
}
}
var ret="__"+dojo.lang.anonCtr++;
while(typeof nso[ret]!="undefined"){
ret="__"+dojo.lang.anonCtr++;
}
nso[ret]=_1b6;
return ret;
};
dojo.lang.forward=function(_1bc){
return function(){
return this[_1bc].apply(this,arguments);
};
};
dojo.lang.curry=function(_1bd,func){
var _1bf=[];
_1bd=_1bd||dj_global;
if(dojo.lang.isString(func)){
func=_1bd[func];
}
for(var x=2;x<arguments.length;x++){
_1bf.push(arguments[x]);
}
var _1c1=(func["__preJoinArity"]||func.length)-_1bf.length;
function gather(_1c2,_1c3,_1c4){
var _1c5=_1c4;
var _1c6=_1c3.slice(0);
for(var x=0;x<_1c2.length;x++){
_1c6.push(_1c2[x]);
}
_1c4=_1c4-_1c2.length;
if(_1c4<=0){
var res=func.apply(_1bd,_1c6);
_1c4=_1c5;
return res;
}else{
return function(){
return gather(arguments,_1c6,_1c4);
};
}
}
return gather([],_1bf,_1c1);
};
dojo.lang.curryArguments=function(_1c9,func,args,_1cc){
var _1cd=[];
var x=_1cc||0;
for(x=_1cc;x<args.length;x++){
_1cd.push(args[x]);
}
return dojo.lang.curry.apply(dojo.lang,[_1c9,func].concat(_1cd));
};
dojo.lang.tryThese=function(){
for(var x=0;x<arguments.length;x++){
try{
if(typeof arguments[x]=="function"){
var ret=(arguments[x]());
if(ret){
return ret;
}
}
}
catch(e){
dojo.debug(e);
}
}
};
dojo.lang.delayThese=function(farr,cb,_1d3,_1d4){
if(!farr.length){
if(typeof _1d4=="function"){
_1d4();
}
return;
}
if((typeof _1d3=="undefined")&&(typeof cb=="number")){
_1d3=cb;
cb=function(){
};
}else{
if(!cb){
cb=function(){
};
if(!_1d3){
_1d3=0;
}
}
}
setTimeout(function(){
(farr.shift())();
cb();
dojo.lang.delayThese(farr,cb,_1d3,_1d4);
},_1d3);
};
dojo.provide("dojo.string.extras");
dojo.string.substituteParams=function(_1d5,hash){
var map=(typeof hash=="object")?hash:dojo.lang.toArray(arguments,1);
return _1d5.replace(/\%\{(\w+)\}/g,function(_1d8,key){
if(typeof (map[key])!="undefined"&&map[key]!=null){
return map[key];
}
dojo.raise("Substitution not found: "+key);
});
};
dojo.string.capitalize=function(str){
if(!dojo.lang.isString(str)){
return "";
}
if(arguments.length==0){
str=this;
}
var _1db=str.split(" ");
for(var i=0;i<_1db.length;i++){
_1db[i]=_1db[i].charAt(0).toUpperCase()+_1db[i].substring(1);
}
return _1db.join(" ");
};
dojo.string.isBlank=function(str){
if(!dojo.lang.isString(str)){
return true;
}
return (dojo.string.trim(str).length==0);
};
dojo.string.encodeAscii=function(str){
if(!dojo.lang.isString(str)){
return str;
}
var ret="";
var _1e0=escape(str);
var _1e1,re=/%u([0-9A-F]{4})/i;
while((_1e1=_1e0.match(re))){
var num=Number("0x"+_1e1[1]);
var _1e4=escape("&#"+num+";");
ret+=_1e0.substring(0,_1e1.index)+_1e4;
_1e0=_1e0.substring(_1e1.index+_1e1[0].length);
}
ret+=_1e0.replace(/\+/g,"%2B");
return ret;
};
dojo.string.escape=function(type,str){
var args=dojo.lang.toArray(arguments,1);
switch(type.toLowerCase()){
case "xml":
case "html":
case "xhtml":
return dojo.string.escapeXml.apply(this,args);
case "sql":
return dojo.string.escapeSql.apply(this,args);
case "regexp":
case "regex":
return dojo.string.escapeRegExp.apply(this,args);
case "javascript":
case "jscript":
case "js":
return dojo.string.escapeJavaScript.apply(this,args);
case "ascii":
return dojo.string.encodeAscii.apply(this,args);
default:
return str;
}
};
dojo.string.escapeXml=function(str,_1e9){
str=str.replace(/&/gm,"&amp;").replace(/</gm,"&lt;").replace(/>/gm,"&gt;").replace(/"/gm,"&quot;");
if(!_1e9){
str=str.replace(/'/gm,"&#39;");
}
return str;
};
dojo.string.escapeSql=function(str){
return str.replace(/'/gm,"''");
};
dojo.string.escapeRegExp=function(str){
return str.replace(/\\/gm,"\\\\").replace(/([\f\b\n\t\r[\^$|?*+(){}])/gm,"\\$1");
};
dojo.string.escapeJavaScript=function(str){
return str.replace(/(["'\f\b\n\t\r])/gm,"\\$1");
};
dojo.string.escapeString=function(str){
return ("\""+str.replace(/(["\\])/g,"\\$1")+"\"").replace(/[\f]/g,"\\f").replace(/[\b]/g,"\\b").replace(/[\n]/g,"\\n").replace(/[\t]/g,"\\t").replace(/[\r]/g,"\\r");
};
dojo.string.summary=function(str,len){
if(!len||str.length<=len){
return str;
}
return str.substring(0,len).replace(/\.+$/,"")+"...";
};
dojo.string.endsWith=function(str,end,_1f2){
if(_1f2){
str=str.toLowerCase();
end=end.toLowerCase();
}
if((str.length-end.length)<0){
return false;
}
return str.lastIndexOf(end)==str.length-end.length;
};
dojo.string.endsWithAny=function(str){
for(var i=1;i<arguments.length;i++){
if(dojo.string.endsWith(str,arguments[i])){
return true;
}
}
return false;
};
dojo.string.startsWith=function(str,_1f6,_1f7){
if(_1f7){
str=str.toLowerCase();
_1f6=_1f6.toLowerCase();
}
return str.indexOf(_1f6)==0;
};
dojo.string.startsWithAny=function(str){
for(var i=1;i<arguments.length;i++){
if(dojo.string.startsWith(str,arguments[i])){
return true;
}
}
return false;
};
dojo.string.has=function(str){
for(var i=1;i<arguments.length;i++){
if(str.indexOf(arguments[i])>-1){
return true;
}
}
return false;
};
dojo.string.normalizeNewlines=function(text,_1fd){
if(_1fd=="\n"){
text=text.replace(/\r\n/g,"\n");
text=text.replace(/\r/g,"\n");
}else{
if(_1fd=="\r"){
text=text.replace(/\r\n/g,"\r");
text=text.replace(/\n/g,"\r");
}else{
text=text.replace(/([^\r])\n/g,"$1\r\n").replace(/\r([^\n])/g,"\r\n$1");
}
}
return text;
};
dojo.string.splitEscaped=function(str,_1ff){
var _200=[];
for(var i=0,_202=0;i<str.length;i++){
if(str.charAt(i)=="\\"){
i++;
continue;
}
if(str.charAt(i)==_1ff){
_200.push(str.substring(_202,i));
_202=i+1;
}
}
_200.push(str.substr(_202));
return _200;
};
dojo.provide("dojo.dom");
dojo.dom.ELEMENT_NODE=1;
dojo.dom.ATTRIBUTE_NODE=2;
dojo.dom.TEXT_NODE=3;
dojo.dom.CDATA_SECTION_NODE=4;
dojo.dom.ENTITY_REFERENCE_NODE=5;
dojo.dom.ENTITY_NODE=6;
dojo.dom.PROCESSING_INSTRUCTION_NODE=7;
dojo.dom.COMMENT_NODE=8;
dojo.dom.DOCUMENT_NODE=9;
dojo.dom.DOCUMENT_TYPE_NODE=10;
dojo.dom.DOCUMENT_FRAGMENT_NODE=11;
dojo.dom.NOTATION_NODE=12;
dojo.dom.dojoml="http://www.dojotoolkit.org/2004/dojoml";
dojo.dom.xmlns={svg:"http://www.w3.org/2000/svg",smil:"http://www.w3.org/2001/SMIL20/",mml:"http://www.w3.org/1998/Math/MathML",cml:"http://www.xml-cml.org",xlink:"http://www.w3.org/1999/xlink",xhtml:"http://www.w3.org/1999/xhtml",xul:"http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul",xbl:"http://www.mozilla.org/xbl",fo:"http://www.w3.org/1999/XSL/Format",xsl:"http://www.w3.org/1999/XSL/Transform",xslt:"http://www.w3.org/1999/XSL/Transform",xi:"http://www.w3.org/2001/XInclude",xforms:"http://www.w3.org/2002/01/xforms",saxon:"http://icl.com/saxon",xalan:"http://xml.apache.org/xslt",xsd:"http://www.w3.org/2001/XMLSchema",dt:"http://www.w3.org/2001/XMLSchema-datatypes",xsi:"http://www.w3.org/2001/XMLSchema-instance",rdf:"http://www.w3.org/1999/02/22-rdf-syntax-ns#",rdfs:"http://www.w3.org/2000/01/rdf-schema#",dc:"http://purl.org/dc/elements/1.1/",dcq:"http://purl.org/dc/qualifiers/1.0","soap-env":"http://schemas.xmlsoap.org/soap/envelope/",wsdl:"http://schemas.xmlsoap.org/wsdl/",AdobeExtensions:"http://ns.adobe.com/AdobeSVGViewerExtensions/3.0/"};
dojo.dom.isNode=function(wh){
if(typeof Element=="function"){
try{
return wh instanceof Element;
}
catch(e){
}
}else{
return wh&&!isNaN(wh.nodeType);
}
};
dojo.dom.getUniqueId=function(){
var _204=dojo.doc();
do{
var id="dj_unique_"+(++arguments.callee._idIncrement);
}while(_204.getElementById(id));
return id;
};
dojo.dom.getUniqueId._idIncrement=0;
dojo.dom.firstElement=dojo.dom.getFirstChildElement=function(_206,_207){
var node=_206.firstChild;
while(node&&node.nodeType!=dojo.dom.ELEMENT_NODE){
node=node.nextSibling;
}
if(_207&&node&&node.tagName&&node.tagName.toLowerCase()!=_207.toLowerCase()){
node=dojo.dom.nextElement(node,_207);
}
return node;
};
dojo.dom.lastElement=dojo.dom.getLastChildElement=function(_209,_20a){
var node=_209.lastChild;
while(node&&node.nodeType!=dojo.dom.ELEMENT_NODE){
node=node.previousSibling;
}
if(_20a&&node&&node.tagName&&node.tagName.toLowerCase()!=_20a.toLowerCase()){
node=dojo.dom.prevElement(node,_20a);
}
return node;
};
dojo.dom.nextElement=dojo.dom.getNextSiblingElement=function(node,_20d){
if(!node){
return null;
}
do{
node=node.nextSibling;
}while(node&&node.nodeType!=dojo.dom.ELEMENT_NODE);
if(node&&_20d&&_20d.toLowerCase()!=node.tagName.toLowerCase()){
return dojo.dom.nextElement(node,_20d);
}
return node;
};
dojo.dom.prevElement=dojo.dom.getPreviousSiblingElement=function(node,_20f){
if(!node){
return null;
}
if(_20f){
_20f=_20f.toLowerCase();
}
do{
node=node.previousSibling;
}while(node&&node.nodeType!=dojo.dom.ELEMENT_NODE);
if(node&&_20f&&_20f.toLowerCase()!=node.tagName.toLowerCase()){
return dojo.dom.prevElement(node,_20f);
}
return node;
};
dojo.dom.moveChildren=function(_210,_211,trim){
var _213=0;
if(trim){
while(_210.hasChildNodes()&&_210.firstChild.nodeType==dojo.dom.TEXT_NODE){
_210.removeChild(_210.firstChild);
}
while(_210.hasChildNodes()&&_210.lastChild.nodeType==dojo.dom.TEXT_NODE){
_210.removeChild(_210.lastChild);
}
}
while(_210.hasChildNodes()){
_211.appendChild(_210.firstChild);
_213++;
}
return _213;
};
dojo.dom.copyChildren=function(_214,_215,trim){
var _217=_214.cloneNode(true);
return this.moveChildren(_217,_215,trim);
};
dojo.dom.replaceChildren=function(node,_219){
var _21a=[];
if(dojo.render.html.ie){
for(var i=0;i<node.childNodes.length;i++){
_21a.push(node.childNodes[i]);
}
}
dojo.dom.removeChildren(node);
node.appendChild(_219);
for(var i=0;i<_21a.length;i++){
dojo.dom.destroyNode(_21a[i]);
}
};
dojo.dom.removeChildren=function(node){
var _21d=node.childNodes.length;
while(node.hasChildNodes()){
dojo.dom.removeNode(node.firstChild);
}
return _21d;
};
dojo.dom.replaceNode=function(node,_21f){
return node.parentNode.replaceChild(_21f,node);
};
dojo.dom.destroyNode=function(node){
if(node.parentNode){
node=dojo.dom.removeNode(node);
}
if(node.nodeType!=3){
if(dojo.evalObjPath("dojo.event.browser.clean",false)){
dojo.event.browser.clean(node);
}
if(dojo.render.html.ie){
node.outerHTML="";
}
}
};
dojo.dom.removeNode=function(node){
if(node&&node.parentNode){
return node.parentNode.removeChild(node);
}
};
dojo.dom.getAncestors=function(node,_223,_224){
var _225=[];
var _226=(_223&&(_223 instanceof Function||typeof _223=="function"));
while(node){
if(!_226||_223(node)){
_225.push(node);
}
if(_224&&_225.length>0){
return _225[0];
}
node=node.parentNode;
}
if(_224){
return null;
}
return _225;
};
dojo.dom.getAncestorsByTag=function(node,tag,_229){
tag=tag.toLowerCase();
return dojo.dom.getAncestors(node,function(el){
return ((el.tagName)&&(el.tagName.toLowerCase()==tag));
},_229);
};
dojo.dom.getFirstAncestorByTag=function(node,tag){
return dojo.dom.getAncestorsByTag(node,tag,true);
};
dojo.dom.isDescendantOf=function(node,_22e,_22f){
if(_22f&&node){
node=node.parentNode;
}
while(node){
if(node==_22e){
return true;
}
node=node.parentNode;
}
return false;
};
dojo.dom.innerXML=function(node){
if(node.innerXML){
return node.innerXML;
}else{
if(node.xml){
return node.xml;
}else{
if(typeof XMLSerializer!="undefined"){
return (new XMLSerializer()).serializeToString(node);
}
}
}
};
dojo.dom.createDocument=function(){
var doc=null;
var _232=dojo.doc();
if(!dj_undef("ActiveXObject")){
var _233=["MSXML2","Microsoft","MSXML","MSXML3"];
for(var i=0;i<_233.length;i++){
try{
doc=new ActiveXObject(_233[i]+".XMLDOM");
}
catch(e){
}
if(doc){
break;
}
}
}else{
if((_232.implementation)&&(_232.implementation.createDocument)){
doc=_232.implementation.createDocument("","",null);
}
}
return doc;
};
dojo.dom.createDocumentFromText=function(str,_236){
if(!_236){
_236="text/xml";
}
if(!dj_undef("DOMParser")){
var _237=new DOMParser();
return _237.parseFromString(str,_236);
}else{
if(!dj_undef("ActiveXObject")){
var _238=dojo.dom.createDocument();
if(_238){
_238.async=false;
_238.loadXML(str);
return _238;
}else{
dojo.debug("toXml didn't work?");
}
}else{
var _239=dojo.doc();
if(_239.createElement){
var tmp=_239.createElement("xml");
tmp.innerHTML=str;
if(_239.implementation&&_239.implementation.createDocument){
var _23b=_239.implementation.createDocument("foo","",null);
for(var i=0;i<tmp.childNodes.length;i++){
_23b.importNode(tmp.childNodes.item(i),true);
}
return _23b;
}
return ((tmp.document)&&(tmp.document.firstChild?tmp.document.firstChild:tmp));
}
}
}
return null;
};
dojo.dom.prependChild=function(node,_23e){
if(_23e.firstChild){
_23e.insertBefore(node,_23e.firstChild);
}else{
_23e.appendChild(node);
}
return true;
};
dojo.dom.insertBefore=function(node,ref,_241){
if((_241!=true)&&(node===ref||node.nextSibling===ref)){
return false;
}
var _242=ref.parentNode;
_242.insertBefore(node,ref);
return true;
};
dojo.dom.insertAfter=function(node,ref,_245){
var pn=ref.parentNode;
if(ref==pn.lastChild){
if((_245!=true)&&(node===ref)){
return false;
}
pn.appendChild(node);
}else{
return this.insertBefore(node,ref.nextSibling,_245);
}
return true;
};
dojo.dom.insertAtPosition=function(node,ref,_249){
if((!node)||(!ref)||(!_249)){
return false;
}
switch(_249.toLowerCase()){
case "before":
return dojo.dom.insertBefore(node,ref);
case "after":
return dojo.dom.insertAfter(node,ref);
case "first":
if(ref.firstChild){
return dojo.dom.insertBefore(node,ref.firstChild);
}else{
ref.appendChild(node);
return true;
}
break;
default:
ref.appendChild(node);
return true;
}
};
dojo.dom.insertAtIndex=function(node,_24b,_24c){
var _24d=_24b.childNodes;
if(!_24d.length||_24d.length==_24c){
_24b.appendChild(node);
return true;
}
if(_24c==0){
return dojo.dom.prependChild(node,_24b);
}
return dojo.dom.insertAfter(node,_24d[_24c-1]);
};
dojo.dom.textContent=function(node,text){
if(arguments.length>1){
var _250=dojo.doc();
dojo.dom.replaceChildren(node,_250.createTextNode(text));
return text;
}else{
if(node.textContent!=undefined){
return node.textContent;
}
var _251="";
if(node==null){
return _251;
}
for(var i=0;i<node.childNodes.length;i++){
switch(node.childNodes[i].nodeType){
case 1:
case 5:
_251+=dojo.dom.textContent(node.childNodes[i]);
break;
case 3:
case 2:
case 4:
_251+=node.childNodes[i].nodeValue;
break;
default:
break;
}
}
return _251;
}
};
dojo.dom.hasParent=function(node){
return Boolean(node&&node.parentNode&&dojo.dom.isNode(node.parentNode));
};
dojo.dom.isTag=function(node){
if(node&&node.tagName){
for(var i=1;i<arguments.length;i++){
if(node.tagName==String(arguments[i])){
return String(arguments[i]);
}
}
}
return "";
};
dojo.dom.setAttributeNS=function(elem,_257,_258,_259){
if(elem==null||((elem==undefined)&&(typeof elem=="undefined"))){
dojo.raise("No element given to dojo.dom.setAttributeNS");
}
if(!((elem.setAttributeNS==undefined)&&(typeof elem.setAttributeNS=="undefined"))){
elem.setAttributeNS(_257,_258,_259);
}else{
var _25a=elem.ownerDocument;
var _25b=_25a.createNode(2,_258,_257);
_25b.nodeValue=_259;
elem.setAttributeNode(_25b);
}
};
dojo.provide("dojo.undo.browser");
try{
if((!djConfig["preventBackButtonFix"])&&(!dojo.hostenv.post_load_)){
document.write("<iframe style='border: 0px; width: 1px; height: 1px; position: absolute; bottom: 0px; right: 0px; visibility: visible;' name='djhistory' id='djhistory' src='"+(dojo.hostenv.getBaseScriptUri()+"iframe_history.html")+"'></iframe>");
}
}
catch(e){
}
if(dojo.render.html.opera){
dojo.debug("Opera is not supported with dojo.undo.browser, so back/forward detection will not work.");
}
dojo.undo.browser={initialHref:(!dj_undef("window"))?window.location.href:"",initialHash:(!dj_undef("window"))?window.location.hash:"",moveForward:false,historyStack:[],forwardStack:[],historyIframe:null,bookmarkAnchor:null,locationTimer:null,setInitialState:function(args){
this.initialState=this._createState(this.initialHref,args,this.initialHash);
},addToHistory:function(args){
this.forwardStack=[];
var hash=null;
var url=null;
if(!this.historyIframe){
this.historyIframe=window.frames["djhistory"];
}
if(!this.bookmarkAnchor){
this.bookmarkAnchor=document.createElement("a");
dojo.body().appendChild(this.bookmarkAnchor);
this.bookmarkAnchor.style.display="none";
}
if(args["changeUrl"]){
hash="#"+((args["changeUrl"]!==true)?args["changeUrl"]:(new Date()).getTime());
if(this.historyStack.length==0&&this.initialState.urlHash==hash){
this.initialState=this._createState(url,args,hash);
return;
}else{
if(this.historyStack.length>0&&this.historyStack[this.historyStack.length-1].urlHash==hash){
this.historyStack[this.historyStack.length-1]=this._createState(url,args,hash);
return;
}
}
this.changingUrl=true;
setTimeout("window.location.href = '"+hash+"'; dojo.undo.browser.changingUrl = false;",1);
this.bookmarkAnchor.href=hash;
if(dojo.render.html.ie){
url=this._loadIframeHistory();
var _260=args["back"]||args["backButton"]||args["handle"];
var tcb=function(_262){
if(window.location.hash!=""){
setTimeout("window.location.href = '"+hash+"';",1);
}
_260.apply(this,[_262]);
};
if(args["back"]){
args.back=tcb;
}else{
if(args["backButton"]){
args.backButton=tcb;
}else{
if(args["handle"]){
args.handle=tcb;
}
}
}
var _263=args["forward"]||args["forwardButton"]||args["handle"];
var tfw=function(_265){
if(window.location.hash!=""){
window.location.href=hash;
}
if(_263){
_263.apply(this,[_265]);
}
};
if(args["forward"]){
args.forward=tfw;
}else{
if(args["forwardButton"]){
args.forwardButton=tfw;
}else{
if(args["handle"]){
args.handle=tfw;
}
}
}
}else{
if(dojo.render.html.moz){
if(!this.locationTimer){
this.locationTimer=setInterval("dojo.undo.browser.checkLocation();",200);
}
}
}
}else{
url=this._loadIframeHistory();
}
this.historyStack.push(this._createState(url,args,hash));
},checkLocation:function(){
if(!this.changingUrl){
var hsl=this.historyStack.length;
if((window.location.hash==this.initialHash||window.location.href==this.initialHref)&&(hsl==1)){
this.handleBackButton();
return;
}
if(this.forwardStack.length>0){
if(this.forwardStack[this.forwardStack.length-1].urlHash==window.location.hash){
this.handleForwardButton();
return;
}
}
if((hsl>=2)&&(this.historyStack[hsl-2])){
if(this.historyStack[hsl-2].urlHash==window.location.hash){
this.handleBackButton();
return;
}
}
}
},iframeLoaded:function(evt,_268){
if(!dojo.render.html.opera){
var _269=this._getUrlQuery(_268.href);
if(_269==null){
if(this.historyStack.length==1){
this.handleBackButton();
}
return;
}
if(this.moveForward){
this.moveForward=false;
return;
}
if(this.historyStack.length>=2&&_269==this._getUrlQuery(this.historyStack[this.historyStack.length-2].url)){
this.handleBackButton();
}else{
if(this.forwardStack.length>0&&_269==this._getUrlQuery(this.forwardStack[this.forwardStack.length-1].url)){
this.handleForwardButton();
}
}
}
},handleBackButton:function(){
var _26a=this.historyStack.pop();
if(!_26a){
return;
}
var last=this.historyStack[this.historyStack.length-1];
if(!last&&this.historyStack.length==0){
last=this.initialState;
}
if(last){
if(last.kwArgs["back"]){
last.kwArgs["back"]();
}else{
if(last.kwArgs["backButton"]){
last.kwArgs["backButton"]();
}else{
if(last.kwArgs["handle"]){
last.kwArgs.handle("back");
}
}
}
}
this.forwardStack.push(_26a);
},handleForwardButton:function(){
var last=this.forwardStack.pop();
if(!last){
return;
}
if(last.kwArgs["forward"]){
last.kwArgs.forward();
}else{
if(last.kwArgs["forwardButton"]){
last.kwArgs.forwardButton();
}else{
if(last.kwArgs["handle"]){
last.kwArgs.handle("forward");
}
}
}
this.historyStack.push(last);
},_createState:function(url,args,hash){
return {"url":url,"kwArgs":args,"urlHash":hash};
},_getUrlQuery:function(url){
var _271=url.split("?");
if(_271.length<2){
return null;
}else{
return _271[1];
}
},_loadIframeHistory:function(){
var url=dojo.hostenv.getBaseScriptUri()+"iframe_history.html?"+(new Date()).getTime();
this.moveForward=true;
dojo.io.setIFrameSrc(this.historyIframe,url,false);
return url;
}};
dojo.provide("dojo.io.BrowserIO");
if(!dj_undef("window")){
dojo.io.checkChildrenForFile=function(node){
var _274=false;
var _275=node.getElementsByTagName("input");
dojo.lang.forEach(_275,function(_276){
if(_274){
return;
}
if(_276.getAttribute("type")=="file"){
_274=true;
}
});
return _274;
};
dojo.io.formHasFile=function(_277){
return dojo.io.checkChildrenForFile(_277);
};
dojo.io.updateNode=function(node,_279){
node=dojo.byId(node);
var args=_279;
if(dojo.lang.isString(_279)){
args={url:_279};
}
args.mimetype="text/html";
args.load=function(t,d,e){
while(node.firstChild){
dojo.dom.destroyNode(node.firstChild);
}
node.innerHTML=d;
};
dojo.io.bind(args);
};
dojo.io.formFilter=function(node){
var type=(node.type||"").toLowerCase();
return !node.disabled&&node.name&&!dojo.lang.inArray(["file","submit","image","reset","button"],type);
};
dojo.io.encodeForm=function(_280,_281,_282){
if((!_280)||(!_280.tagName)||(!_280.tagName.toLowerCase()=="form")){
dojo.raise("Attempted to encode a non-form element.");
}
if(!_282){
_282=dojo.io.formFilter;
}
var enc=/utf/i.test(_281||"")?encodeURIComponent:dojo.string.encodeAscii;
var _284=[];
for(var i=0;i<_280.elements.length;i++){
var elm=_280.elements[i];
if(!elm||elm.tagName.toLowerCase()=="fieldset"||!_282(elm)){
continue;
}
var name=enc(elm.name);
var type=elm.type.toLowerCase();
if(type=="select-multiple"){
for(var j=0;j<elm.options.length;j++){
if(elm.options[j].selected){
_284.push(name+"="+enc(elm.options[j].value));
}
}
}else{
if(dojo.lang.inArray(["radio","checkbox"],type)){
if(elm.checked){
_284.push(name+"="+enc(elm.value));
}
}else{
_284.push(name+"="+enc(elm.value));
}
}
}
var _28a=_280.getElementsByTagName("input");
for(var i=0;i<_28a.length;i++){
var _28b=_28a[i];
if(_28b.type.toLowerCase()=="image"&&_28b.form==_280&&_282(_28b)){
var name=enc(_28b.name);
_284.push(name+"="+enc(_28b.value));
_284.push(name+".x=0");
_284.push(name+".y=0");
}
}
return _284.join("&")+"&";
};
dojo.io.FormBind=function(args){
this.bindArgs={};
if(args&&args.formNode){
this.init(args);
}else{
if(args){
this.init({formNode:args});
}
}
};
dojo.lang.extend(dojo.io.FormBind,{form:null,bindArgs:null,clickedButton:null,init:function(args){
var form=dojo.byId(args.formNode);
if(!form||!form.tagName||form.tagName.toLowerCase()!="form"){
throw new Error("FormBind: Couldn't apply, invalid form");
}else{
if(this.form==form){
return;
}else{
if(this.form){
throw new Error("FormBind: Already applied to a form");
}
}
}
dojo.lang.mixin(this.bindArgs,args);
this.form=form;
this.connect(form,"onsubmit","submit");
for(var i=0;i<form.elements.length;i++){
var node=form.elements[i];
if(node&&node.type&&dojo.lang.inArray(["submit","button"],node.type.toLowerCase())){
this.connect(node,"onclick","click");
}
}
var _291=form.getElementsByTagName("input");
for(var i=0;i<_291.length;i++){
var _292=_291[i];
if(_292.type.toLowerCase()=="image"&&_292.form==form){
this.connect(_292,"onclick","click");
}
}
},onSubmit:function(form){
return true;
},submit:function(e){
e.preventDefault();
if(this.onSubmit(this.form)){
dojo.io.bind(dojo.lang.mixin(this.bindArgs,{formFilter:dojo.lang.hitch(this,"formFilter")}));
}
},click:function(e){
var node=e.currentTarget;
if(node.disabled){
return;
}
this.clickedButton=node;
},formFilter:function(node){
var type=(node.type||"").toLowerCase();
var _299=false;
if(node.disabled||!node.name){
_299=false;
}else{
if(dojo.lang.inArray(["submit","button","image"],type)){
if(!this.clickedButton){
this.clickedButton=node;
}
_299=node==this.clickedButton;
}else{
_299=!dojo.lang.inArray(["file","submit","reset","button"],type);
}
}
return _299;
},connect:function(_29a,_29b,_29c){
if(dojo.evalObjPath("dojo.event.connect")){
dojo.event.connect(_29a,_29b,this,_29c);
}else{
var fcn=dojo.lang.hitch(this,_29c);
_29a[_29b]=function(e){
if(!e){
e=window.event;
}
if(!e.currentTarget){
e.currentTarget=e.srcElement;
}
if(!e.preventDefault){
e.preventDefault=function(){
window.event.returnValue=false;
};
}
fcn(e);
};
}
}});
dojo.io.XMLHTTPTransport=new function(){
var _29f=this;
var _2a0={};
this.useCache=false;
this.preventCache=false;
function getCacheKey(url,_2a2,_2a3){
return url+"|"+_2a2+"|"+_2a3.toLowerCase();
}
function addToCache(url,_2a5,_2a6,http){
_2a0[getCacheKey(url,_2a5,_2a6)]=http;
}
function getFromCache(url,_2a9,_2aa){
return _2a0[getCacheKey(url,_2a9,_2aa)];
}
this.clearCache=function(){
_2a0={};
};
function doLoad(_2ab,http,url,_2ae,_2af){
if(((http.status>=200)&&(http.status<300))||(http.status==304)||(location.protocol=="file:"&&(http.status==0||http.status==undefined))||(location.protocol=="chrome:"&&(http.status==0||http.status==undefined))){
var ret;
if(_2ab.method.toLowerCase()=="head"){
var _2b1=http.getAllResponseHeaders();
ret={};
ret.toString=function(){
return _2b1;
};
var _2b2=_2b1.split(/[\r\n]+/g);
for(var i=0;i<_2b2.length;i++){
var pair=_2b2[i].match(/^([^:]+)\s*:\s*(.+)$/i);
if(pair){
ret[pair[1]]=pair[2];
}
}
}else{
if(_2ab.mimetype=="text/javascript"){
try{
ret=dj_eval(http.responseText);
}
catch(e){
dojo.debug(e);
dojo.debug(http.responseText);
ret=null;
}
}else{
if(_2ab.mimetype=="text/json"||_2ab.mimetype=="application/json"){
try{
ret=dj_eval("("+http.responseText+")");
}
catch(e){
dojo.debug(e);
dojo.debug(http.responseText);
ret=false;
}
}else{
if((_2ab.mimetype=="application/xml")||(_2ab.mimetype=="text/xml")){
ret=http.responseXML;
if(!ret||typeof ret=="string"||!http.getResponseHeader("Content-Type")){
ret=dojo.dom.createDocumentFromText(http.responseText);
}
}else{
ret=http.responseText;
}
}
}
}
if(_2af){
addToCache(url,_2ae,_2ab.method,http);
}
_2ab[(typeof _2ab.load=="function")?"load":"handle"]("load",ret,http,_2ab);
}else{
var _2b5=new dojo.io.Error("XMLHttpTransport Error: "+http.status+" "+http.statusText);
_2ab[(typeof _2ab.error=="function")?"error":"handle"]("error",_2b5,http,_2ab);
}
}
function setHeaders(http,_2b7){
if(_2b7["headers"]){
for(var _2b8 in _2b7["headers"]){
if(_2b8.toLowerCase()=="content-type"&&!_2b7["contentType"]){
_2b7["contentType"]=_2b7["headers"][_2b8];
}else{
http.setRequestHeader(_2b8,_2b7["headers"][_2b8]);
}
}
}
}
this.inFlight=[];
this.inFlightTimer=null;
this.startWatchingInFlight=function(){
if(!this.inFlightTimer){
this.inFlightTimer=setTimeout("dojo.io.XMLHTTPTransport.watchInFlight();",10);
}
};
this.watchInFlight=function(){
var now=null;
if(!dojo.hostenv._blockAsync&&!_29f._blockAsync){
for(var x=this.inFlight.length-1;x>=0;x--){
try{
var tif=this.inFlight[x];
if(!tif||tif.http._aborted||!tif.http.readyState){
this.inFlight.splice(x,1);
continue;
}
if(4==tif.http.readyState){
this.inFlight.splice(x,1);
doLoad(tif.req,tif.http,tif.url,tif.query,tif.useCache);
}else{
if(tif.startTime){
if(!now){
now=(new Date()).getTime();
}
if(tif.startTime+(tif.req.timeoutSeconds*1000)<now){
if(typeof tif.http.abort=="function"){
tif.http.abort();
}
this.inFlight.splice(x,1);
tif.req[(typeof tif.req.timeout=="function")?"timeout":"handle"]("timeout",null,tif.http,tif.req);
}
}
}
}
catch(e){
try{
var _2bc=new dojo.io.Error("XMLHttpTransport.watchInFlight Error: "+e);
tif.req[(typeof tif.req.error=="function")?"error":"handle"]("error",_2bc,tif.http,tif.req);
}
catch(e2){
dojo.debug("XMLHttpTransport error callback failed: "+e2);
}
}
}
}
clearTimeout(this.inFlightTimer);
if(this.inFlight.length==0){
this.inFlightTimer=null;
return;
}
this.inFlightTimer=setTimeout("dojo.io.XMLHTTPTransport.watchInFlight();",10);
};
var _2bd=dojo.hostenv.getXmlhttpObject()?true:false;
this.canHandle=function(_2be){
return _2bd&&dojo.lang.inArray(["text/plain","text/html","application/xml","text/xml","text/javascript","text/json","application/json"],(_2be["mimetype"].toLowerCase()||""))&&!(_2be["formNode"]&&dojo.io.formHasFile(_2be["formNode"]));
};
this.multipartBoundary="45309FFF-BD65-4d50-99C9-36986896A96F";
this.bind=function(_2bf){
if(!_2bf["url"]){
if(!_2bf["formNode"]&&(_2bf["backButton"]||_2bf["back"]||_2bf["changeUrl"]||_2bf["watchForURL"])&&(!djConfig.preventBackButtonFix)){
dojo.deprecated("Using dojo.io.XMLHTTPTransport.bind() to add to browser history without doing an IO request","Use dojo.undo.browser.addToHistory() instead.","0.4");
dojo.undo.browser.addToHistory(_2bf);
return true;
}
}
var url=_2bf.url;
var _2c1="";
if(_2bf["formNode"]){
var ta=_2bf.formNode.getAttribute("action");
if((ta)&&(!_2bf["url"])){
url=ta;
}
var tp=_2bf.formNode.getAttribute("method");
if((tp)&&(!_2bf["method"])){
_2bf.method=tp;
}
_2c1+=dojo.io.encodeForm(_2bf.formNode,_2bf.encoding,_2bf["formFilter"]);
}
if(url.indexOf("#")>-1){
dojo.debug("Warning: dojo.io.bind: stripping hash values from url:",url);
url=url.split("#")[0];
}
if(_2bf["file"]){
_2bf.method="post";
}
if(!_2bf["method"]){
_2bf.method="get";
}
if(_2bf.method.toLowerCase()=="get"){
_2bf.multipart=false;
}else{
if(_2bf["file"]){
_2bf.multipart=true;
}else{
if(!_2bf["multipart"]){
_2bf.multipart=false;
}
}
}
if(_2bf["backButton"]||_2bf["back"]||_2bf["changeUrl"]){
dojo.undo.browser.addToHistory(_2bf);
}
var _2c4=_2bf["content"]||{};
if(_2bf.sendTransport){
_2c4["dojo.transport"]="xmlhttp";
}
do{
if(_2bf.postContent){
_2c1=_2bf.postContent;
break;
}
if(_2c4){
_2c1+=dojo.io.argsFromMap(_2c4,_2bf.encoding);
}
if(_2bf.method.toLowerCase()=="get"||!_2bf.multipart){
break;
}
var t=[];
if(_2c1.length){
var q=_2c1.split("&");
for(var i=0;i<q.length;++i){
if(q[i].length){
var p=q[i].split("=");
t.push("--"+this.multipartBoundary,"Content-Disposition: form-data; name=\""+p[0]+"\"","",p[1]);
}
}
}
if(_2bf.file){
if(dojo.lang.isArray(_2bf.file)){
for(var i=0;i<_2bf.file.length;++i){
var o=_2bf.file[i];
t.push("--"+this.multipartBoundary,"Content-Disposition: form-data; name=\""+o.name+"\"; filename=\""+("fileName" in o?o.fileName:o.name)+"\"","Content-Type: "+("contentType" in o?o.contentType:"application/octet-stream"),"",o.content);
}
}else{
var o=_2bf.file;
t.push("--"+this.multipartBoundary,"Content-Disposition: form-data; name=\""+o.name+"\"; filename=\""+("fileName" in o?o.fileName:o.name)+"\"","Content-Type: "+("contentType" in o?o.contentType:"application/octet-stream"),"",o.content);
}
}
if(t.length){
t.push("--"+this.multipartBoundary+"--","");
_2c1=t.join("\r\n");
}
}while(false);
var _2ca=_2bf["sync"]?false:true;
var _2cb=_2bf["preventCache"]||(this.preventCache==true&&_2bf["preventCache"]!=false);
var _2cc=_2bf["useCache"]==true||(this.useCache==true&&_2bf["useCache"]!=false);
if(!_2cb&&_2cc){
var _2cd=getFromCache(url,_2c1,_2bf.method);
if(_2cd){
doLoad(_2bf,_2cd,url,_2c1,false);
return;
}
}
var http=dojo.hostenv.getXmlhttpObject(_2bf);
var _2cf=false;
if(_2ca){
var _2d0=this.inFlight.push({"req":_2bf,"http":http,"url":url,"query":_2c1,"useCache":_2cc,"startTime":_2bf.timeoutSeconds?(new Date()).getTime():0});
this.startWatchingInFlight();
}else{
_29f._blockAsync=true;
}
if(_2bf.method.toLowerCase()=="post"){
if(!_2bf.user){
http.open("POST",url,_2ca);
}else{
http.open("POST",url,_2ca,_2bf.user,_2bf.password);
}
setHeaders(http,_2bf);
http.setRequestHeader("Content-Type",_2bf.multipart?("multipart/form-data; boundary="+this.multipartBoundary):(_2bf.contentType||"application/x-www-form-urlencoded"));
try{
http.send(_2c1);
}
catch(e){
if(typeof http.abort=="function"){
http.abort();
}
doLoad(_2bf,{status:404},url,_2c1,_2cc);
}
}else{
var _2d1=url;
if(_2c1!=""){
_2d1+=(_2d1.indexOf("?")>-1?"&":"?")+_2c1;
}
if(_2cb){
_2d1+=(dojo.string.endsWithAny(_2d1,"?","&")?"":(_2d1.indexOf("?")>-1?"&":"?"))+"dojo.preventCache="+new Date().valueOf();
}
if(!_2bf.user){
http.open(_2bf.method.toUpperCase(),_2d1,_2ca);
}else{
http.open(_2bf.method.toUpperCase(),_2d1,_2ca,_2bf.user,_2bf.password);
}
setHeaders(http,_2bf);
try{
http.send(null);
}
catch(e){
if(typeof http.abort=="function"){
http.abort();
}
doLoad(_2bf,{status:404},url,_2c1,_2cc);
}
}
if(!_2ca){
doLoad(_2bf,http,url,_2c1,_2cc);
_29f._blockAsync=false;
}
_2bf.abort=function(){
try{
http._aborted=true;
}
catch(e){
}
return http.abort();
};
return;
};
dojo.io.transports.addTransport("XMLHTTPTransport");
};
}
dojo.provide("dojo.io.cookie");
dojo.io.cookie.setCookie=function(name,_2d3,days,path,_2d6,_2d7){
var _2d8=-1;
if((typeof days=="number")&&(days>=0)){
var d=new Date();
d.setTime(d.getTime()+(days*24*60*60*1000));
_2d8=d.toGMTString();
}
_2d3=escape(_2d3);
document.cookie=name+"="+_2d3+";"+(_2d8!=-1?" expires="+_2d8+";":"")+(path?"path="+path:"")+(_2d6?"; domain="+_2d6:"")+(_2d7?"; secure":"");
};
dojo.io.cookie.set=dojo.io.cookie.setCookie;
dojo.io.cookie.getCookie=function(name){
var idx=document.cookie.lastIndexOf(name+"=");
if(idx==-1){
return null;
}
var _2dc=document.cookie.substring(idx+name.length+1);
var end=_2dc.indexOf(";");
if(end==-1){
end=_2dc.length;
}
_2dc=_2dc.substring(0,end);
_2dc=unescape(_2dc);
return _2dc;
};
dojo.io.cookie.get=dojo.io.cookie.getCookie;
dojo.io.cookie.deleteCookie=function(name){
dojo.io.cookie.setCookie(name,"-",0);
};
dojo.io.cookie.setObjectCookie=function(name,obj,days,path,_2e3,_2e4,_2e5){
if(arguments.length==5){
_2e5=_2e3;
_2e3=null;
_2e4=null;
}
var _2e6=[],_2e7,_2e8="";
if(!_2e5){
_2e7=dojo.io.cookie.getObjectCookie(name);
}
if(days>=0){
if(!_2e7){
_2e7={};
}
for(var prop in obj){
if(obj[prop]==null){
delete _2e7[prop];
}else{
if((typeof obj[prop]=="string")||(typeof obj[prop]=="number")){
_2e7[prop]=obj[prop];
}
}
}
prop=null;
for(var prop in _2e7){
_2e6.push(escape(prop)+"="+escape(_2e7[prop]));
}
_2e8=_2e6.join("&");
}
dojo.io.cookie.setCookie(name,_2e8,days,path,_2e3,_2e4);
};
dojo.io.cookie.getObjectCookie=function(name){
var _2eb=null,_2ec=dojo.io.cookie.getCookie(name);
if(_2ec){
_2eb={};
var _2ed=_2ec.split("&");
for(var i=0;i<_2ed.length;i++){
var pair=_2ed[i].split("=");
var _2f0=pair[1];
if(isNaN(_2f0)){
_2f0=unescape(pair[1]);
}
_2eb[unescape(pair[0])]=_2f0;
}
}
return _2eb;
};
dojo.io.cookie.isSupported=function(){
if(typeof navigator.cookieEnabled!="boolean"){
dojo.io.cookie.setCookie("__TestingYourBrowserForCookieSupport__","CookiesAllowed",90,null);
var _2f1=dojo.io.cookie.getCookie("__TestingYourBrowserForCookieSupport__");
navigator.cookieEnabled=(_2f1=="CookiesAllowed");
if(navigator.cookieEnabled){
this.deleteCookie("__TestingYourBrowserForCookieSupport__");
}
}
return navigator.cookieEnabled;
};
if(!dojo.io.cookies){
dojo.io.cookies=dojo.io.cookie;
}
dojo.provide("dojo.io.*");
dojo.provide("dojo.event.common");
dojo.event=new function(){
this._canTimeout=dojo.lang.isFunction(dj_global["setTimeout"])||dojo.lang.isAlien(dj_global["setTimeout"]);
function interpolateArgs(args,_2f3){
var dl=dojo.lang;
var ao={srcObj:dj_global,srcFunc:null,adviceObj:dj_global,adviceFunc:null,aroundObj:null,aroundFunc:null,adviceType:(args.length>2)?args[0]:"after",precedence:"last",once:false,delay:null,rate:0,adviceMsg:false};
switch(args.length){
case 0:
return;
case 1:
return;
case 2:
ao.srcFunc=args[0];
ao.adviceFunc=args[1];
break;
case 3:
if((dl.isObject(args[0]))&&(dl.isString(args[1]))&&(dl.isString(args[2]))){
ao.adviceType="after";
ao.srcObj=args[0];
ao.srcFunc=args[1];
ao.adviceFunc=args[2];
}else{
if((dl.isString(args[1]))&&(dl.isString(args[2]))){
ao.srcFunc=args[1];
ao.adviceFunc=args[2];
}else{
if((dl.isObject(args[0]))&&(dl.isString(args[1]))&&(dl.isFunction(args[2]))){
ao.adviceType="after";
ao.srcObj=args[0];
ao.srcFunc=args[1];
var _2f6=dl.nameAnonFunc(args[2],ao.adviceObj,_2f3);
ao.adviceFunc=_2f6;
}else{
if((dl.isFunction(args[0]))&&(dl.isObject(args[1]))&&(dl.isString(args[2]))){
ao.adviceType="after";
ao.srcObj=dj_global;
var _2f6=dl.nameAnonFunc(args[0],ao.srcObj,_2f3);
ao.srcFunc=_2f6;
ao.adviceObj=args[1];
ao.adviceFunc=args[2];
}
}
}
}
break;
case 4:
if((dl.isObject(args[0]))&&(dl.isObject(args[2]))){
ao.adviceType="after";
ao.srcObj=args[0];
ao.srcFunc=args[1];
ao.adviceObj=args[2];
ao.adviceFunc=args[3];
}else{
if((dl.isString(args[0]))&&(dl.isString(args[1]))&&(dl.isObject(args[2]))){
ao.adviceType=args[0];
ao.srcObj=dj_global;
ao.srcFunc=args[1];
ao.adviceObj=args[2];
ao.adviceFunc=args[3];
}else{
if((dl.isString(args[0]))&&(dl.isFunction(args[1]))&&(dl.isObject(args[2]))){
ao.adviceType=args[0];
ao.srcObj=dj_global;
var _2f6=dl.nameAnonFunc(args[1],dj_global,_2f3);
ao.srcFunc=_2f6;
ao.adviceObj=args[2];
ao.adviceFunc=args[3];
}else{
if((dl.isString(args[0]))&&(dl.isObject(args[1]))&&(dl.isString(args[2]))&&(dl.isFunction(args[3]))){
ao.srcObj=args[1];
ao.srcFunc=args[2];
var _2f6=dl.nameAnonFunc(args[3],dj_global,_2f3);
ao.adviceObj=dj_global;
ao.adviceFunc=_2f6;
}else{
if(dl.isObject(args[1])){
ao.srcObj=args[1];
ao.srcFunc=args[2];
ao.adviceObj=dj_global;
ao.adviceFunc=args[3];
}else{
if(dl.isObject(args[2])){
ao.srcObj=dj_global;
ao.srcFunc=args[1];
ao.adviceObj=args[2];
ao.adviceFunc=args[3];
}else{
ao.srcObj=ao.adviceObj=ao.aroundObj=dj_global;
ao.srcFunc=args[1];
ao.adviceFunc=args[2];
ao.aroundFunc=args[3];
}
}
}
}
}
}
break;
case 6:
ao.srcObj=args[1];
ao.srcFunc=args[2];
ao.adviceObj=args[3];
ao.adviceFunc=args[4];
ao.aroundFunc=args[5];
ao.aroundObj=dj_global;
break;
default:
ao.srcObj=args[1];
ao.srcFunc=args[2];
ao.adviceObj=args[3];
ao.adviceFunc=args[4];
ao.aroundObj=args[5];
ao.aroundFunc=args[6];
ao.once=args[7];
ao.delay=args[8];
ao.rate=args[9];
ao.adviceMsg=args[10];
break;
}
if(dl.isFunction(ao.aroundFunc)){
var _2f6=dl.nameAnonFunc(ao.aroundFunc,ao.aroundObj,_2f3);
ao.aroundFunc=_2f6;
}
if(dl.isFunction(ao.srcFunc)){
ao.srcFunc=dl.getNameInObj(ao.srcObj,ao.srcFunc);
}
if(dl.isFunction(ao.adviceFunc)){
ao.adviceFunc=dl.getNameInObj(ao.adviceObj,ao.adviceFunc);
}
if((ao.aroundObj)&&(dl.isFunction(ao.aroundFunc))){
ao.aroundFunc=dl.getNameInObj(ao.aroundObj,ao.aroundFunc);
}
if(!ao.srcObj){
dojo.raise("bad srcObj for srcFunc: "+ao.srcFunc);
}
if(!ao.adviceObj){
dojo.raise("bad adviceObj for adviceFunc: "+ao.adviceFunc);
}
if(!ao.adviceFunc){
dojo.debug("bad adviceFunc for srcFunc: "+ao.srcFunc);
dojo.debugShallow(ao);
}
return ao;
}
this.connect=function(){
if(arguments.length==1){
var ao=arguments[0];
}else{
var ao=interpolateArgs(arguments,true);
}
if(dojo.lang.isString(ao.srcFunc)&&(ao.srcFunc.toLowerCase()=="onkey")){
if(dojo.render.html.ie){
ao.srcFunc="onkeydown";
this.connect(ao);
}
ao.srcFunc="onkeypress";
}
if(dojo.lang.isArray(ao.srcObj)&&ao.srcObj!=""){
var _2f8={};
for(var x in ao){
_2f8[x]=ao[x];
}
var mjps=[];
dojo.lang.forEach(ao.srcObj,function(src){
if((dojo.render.html.capable)&&(dojo.lang.isString(src))){
src=dojo.byId(src);
}
_2f8.srcObj=src;
mjps.push(dojo.event.connect.call(dojo.event,_2f8));
});
return mjps;
}
var mjp=dojo.event.MethodJoinPoint.getForMethod(ao.srcObj,ao.srcFunc);
if(ao.adviceFunc){
var mjp2=dojo.event.MethodJoinPoint.getForMethod(ao.adviceObj,ao.adviceFunc);
}
mjp.kwAddAdvice(ao);
return mjp;
};
this.log=function(a1,a2){
var _300;
if((arguments.length==1)&&(typeof a1=="object")){
_300=a1;
}else{
_300={srcObj:a1,srcFunc:a2};
}
_300.adviceFunc=function(){
var _301=[];
for(var x=0;x<arguments.length;x++){
_301.push(arguments[x]);
}
dojo.debug("("+_300.srcObj+")."+_300.srcFunc,":",_301.join(", "));
};
this.kwConnect(_300);
};
this.connectBefore=function(){
var args=["before"];
for(var i=0;i<arguments.length;i++){
args.push(arguments[i]);
}
return this.connect.apply(this,args);
};
this.connectAround=function(){
var args=["around"];
for(var i=0;i<arguments.length;i++){
args.push(arguments[i]);
}
return this.connect.apply(this,args);
};
this.connectOnce=function(){
var ao=interpolateArgs(arguments,true);
ao.once=true;
return this.connect(ao);
};
this._kwConnectImpl=function(_308,_309){
var fn=(_309)?"disconnect":"connect";
if(typeof _308["srcFunc"]=="function"){
_308.srcObj=_308["srcObj"]||dj_global;
var _30b=dojo.lang.nameAnonFunc(_308.srcFunc,_308.srcObj,true);
_308.srcFunc=_30b;
}
if(typeof _308["adviceFunc"]=="function"){
_308.adviceObj=_308["adviceObj"]||dj_global;
var _30b=dojo.lang.nameAnonFunc(_308.adviceFunc,_308.adviceObj,true);
_308.adviceFunc=_30b;
}
_308.srcObj=_308["srcObj"]||dj_global;
_308.adviceObj=_308["adviceObj"]||_308["targetObj"]||dj_global;
_308.adviceFunc=_308["adviceFunc"]||_308["targetFunc"];
return dojo.event[fn](_308);
};
this.kwConnect=function(_30c){
return this._kwConnectImpl(_30c,false);
};
this.disconnect=function(){
if(arguments.length==1){
var ao=arguments[0];
}else{
var ao=interpolateArgs(arguments,true);
}
if(!ao.adviceFunc){
return;
}
if(dojo.lang.isString(ao.srcFunc)&&(ao.srcFunc.toLowerCase()=="onkey")){
if(dojo.render.html.ie){
ao.srcFunc="onkeydown";
this.disconnect(ao);
}
ao.srcFunc="onkeypress";
}
if(!ao.srcObj[ao.srcFunc]){
return null;
}
var mjp=dojo.event.MethodJoinPoint.getForMethod(ao.srcObj,ao.srcFunc,true);
mjp.removeAdvice(ao.adviceObj,ao.adviceFunc,ao.adviceType,ao.once);
return mjp;
};
this.kwDisconnect=function(_30f){
return this._kwConnectImpl(_30f,true);
};
};
dojo.event.MethodInvocation=function(_310,obj,args){
this.jp_=_310;
this.object=obj;
this.args=[];
for(var x=0;x<args.length;x++){
this.args[x]=args[x];
}
this.around_index=-1;
};
dojo.event.MethodInvocation.prototype.proceed=function(){
this.around_index++;
if(this.around_index>=this.jp_.around.length){
return this.jp_.object[this.jp_.methodname].apply(this.jp_.object,this.args);
}else{
var ti=this.jp_.around[this.around_index];
var mobj=ti[0]||dj_global;
var meth=ti[1];
return mobj[meth].call(mobj,this);
}
};
dojo.event.MethodJoinPoint=function(obj,_318){
this.object=obj||dj_global;
this.methodname=_318;
this.methodfunc=this.object[_318];
this.squelch=false;
};
dojo.event.MethodJoinPoint.getForMethod=function(obj,_31a){
if(!obj){
obj=dj_global;
}
if(!obj[_31a]){
obj[_31a]=function(){
};
if(!obj[_31a]){
dojo.raise("Cannot set do-nothing method on that object "+_31a);
}
}else{
if((!dojo.lang.isFunction(obj[_31a]))&&(!dojo.lang.isAlien(obj[_31a]))){
return null;
}
}
var _31b=_31a+"$joinpoint";
var _31c=_31a+"$joinpoint$method";
var _31d=obj[_31b];
if(!_31d){
var _31e=false;
if(dojo.event["browser"]){
if((obj["attachEvent"])||(obj["nodeType"])||(obj["addEventListener"])){
_31e=true;
dojo.event.browser.addClobberNodeAttrs(obj,[_31b,_31c,_31a]);
}
}
var _31f=obj[_31a].length;
obj[_31c]=obj[_31a];
_31d=obj[_31b]=new dojo.event.MethodJoinPoint(obj,_31c);
obj[_31a]=function(){
var args=[];
if((_31e)&&(!arguments.length)){
var evt=null;
try{
if(obj.ownerDocument){
evt=obj.ownerDocument.parentWindow.event;
}else{
if(obj.documentElement){
evt=obj.documentElement.ownerDocument.parentWindow.event;
}else{
if(obj.event){
evt=obj.event;
}else{
evt=window.event;
}
}
}
}
catch(e){
evt=window.event;
}
if(evt){
args.push(dojo.event.browser.fixEvent(evt,this));
}
}else{
for(var x=0;x<arguments.length;x++){
if((x==0)&&(_31e)&&(dojo.event.browser.isEvent(arguments[x]))){
args.push(dojo.event.browser.fixEvent(arguments[x],this));
}else{
args.push(arguments[x]);
}
}
}
return _31d.run.apply(_31d,args);
};
obj[_31a].__preJoinArity=_31f;
}
return _31d;
};
dojo.lang.extend(dojo.event.MethodJoinPoint,{unintercept:function(){
this.object[this.methodname]=this.methodfunc;
this.before=[];
this.after=[];
this.around=[];
},disconnect:dojo.lang.forward("unintercept"),run:function(){
var obj=this.object||dj_global;
var args=arguments;
var _325=[];
for(var x=0;x<args.length;x++){
_325[x]=args[x];
}
var _327=function(marr){
if(!marr){
dojo.debug("Null argument to unrollAdvice()");
return;
}
var _329=marr[0]||dj_global;
var _32a=marr[1];
if(!_329[_32a]){
dojo.raise("function \""+_32a+"\" does not exist on \""+_329+"\"");
}
var _32b=marr[2]||dj_global;
var _32c=marr[3];
var msg=marr[6];
var _32e;
var to={args:[],jp_:this,object:obj,proceed:function(){
return _329[_32a].apply(_329,to.args);
}};
to.args=_325;
var _330=parseInt(marr[4]);
var _331=((!isNaN(_330))&&(marr[4]!==null)&&(typeof marr[4]!="undefined"));
if(marr[5]){
var rate=parseInt(marr[5]);
var cur=new Date();
var _334=false;
if((marr["last"])&&((cur-marr.last)<=rate)){
if(dojo.event._canTimeout){
if(marr["delayTimer"]){
clearTimeout(marr.delayTimer);
}
var tod=parseInt(rate*2);
var mcpy=dojo.lang.shallowCopy(marr);
marr.delayTimer=setTimeout(function(){
mcpy[5]=0;
_327(mcpy);
},tod);
}
return;
}else{
marr.last=cur;
}
}
if(_32c){
_32b[_32c].call(_32b,to);
}else{
if((_331)&&((dojo.render.html)||(dojo.render.svg))){
dj_global["setTimeout"](function(){
if(msg){
_329[_32a].call(_329,to);
}else{
_329[_32a].apply(_329,args);
}
},_330);
}else{
if(msg){
_329[_32a].call(_329,to);
}else{
_329[_32a].apply(_329,args);
}
}
}
};
var _337=function(){
if(this.squelch){
try{
return _327.apply(this,arguments);
}
catch(e){
dojo.debug(e);
}
}else{
return _327.apply(this,arguments);
}
};
if((this["before"])&&(this.before.length>0)){
dojo.lang.forEach(this.before.concat(new Array()),_337);
}
var _338;
try{
if((this["around"])&&(this.around.length>0)){
var mi=new dojo.event.MethodInvocation(this,obj,args);
_338=mi.proceed();
}else{
if(this.methodfunc){
_338=this.object[this.methodname].apply(this.object,args);
}
}
}
catch(e){
if(!this.squelch){
dojo.debug(e,"when calling",this.methodname,"on",this.object,"with arguments",args);
dojo.raise(e);
}
}
if((this["after"])&&(this.after.length>0)){
dojo.lang.forEach(this.after.concat(new Array()),_337);
}
return (this.methodfunc)?_338:null;
},getArr:function(kind){
var type="after";
if((typeof kind=="string")&&(kind.indexOf("before")!=-1)){
type="before";
}else{
if(kind=="around"){
type="around";
}
}
if(!this[type]){
this[type]=[];
}
return this[type];
},kwAddAdvice:function(args){
this.addAdvice(args["adviceObj"],args["adviceFunc"],args["aroundObj"],args["aroundFunc"],args["adviceType"],args["precedence"],args["once"],args["delay"],args["rate"],args["adviceMsg"]);
},addAdvice:function(_33d,_33e,_33f,_340,_341,_342,once,_344,rate,_346){
var arr=this.getArr(_341);
if(!arr){
dojo.raise("bad this: "+this);
}
var ao=[_33d,_33e,_33f,_340,_344,rate,_346];
if(once){
if(this.hasAdvice(_33d,_33e,_341,arr)>=0){
return;
}
}
if(_342=="first"){
arr.unshift(ao);
}else{
arr.push(ao);
}
},hasAdvice:function(_349,_34a,_34b,arr){
if(!arr){
arr=this.getArr(_34b);
}
var ind=-1;
for(var x=0;x<arr.length;x++){
var aao=(typeof _34a=="object")?(new String(_34a)).toString():_34a;
var a1o=(typeof arr[x][1]=="object")?(new String(arr[x][1])).toString():arr[x][1];
if((arr[x][0]==_349)&&(a1o==aao)){
ind=x;
}
}
return ind;
},removeAdvice:function(_351,_352,_353,once){
var arr=this.getArr(_353);
var ind=this.hasAdvice(_351,_352,_353,arr);
if(ind==-1){
return false;
}
while(ind!=-1){
arr.splice(ind,1);
if(once){
break;
}
ind=this.hasAdvice(_351,_352,_353,arr);
}
return true;
}});
dojo.provide("dojo.event.topic");
dojo.event.topic=new function(){
this.topics={};
this.getTopic=function(_357){
if(!this.topics[_357]){
this.topics[_357]=new this.TopicImpl(_357);
}
return this.topics[_357];
};
this.registerPublisher=function(_358,obj,_35a){
var _358=this.getTopic(_358);
_358.registerPublisher(obj,_35a);
};
this.subscribe=function(_35b,obj,_35d){
var _35b=this.getTopic(_35b);
_35b.subscribe(obj,_35d);
};
this.unsubscribe=function(_35e,obj,_360){
var _35e=this.getTopic(_35e);
_35e.unsubscribe(obj,_360);
};
this.destroy=function(_361){
this.getTopic(_361).destroy();
delete this.topics[_361];
};
this.publishApply=function(_362,args){
var _362=this.getTopic(_362);
_362.sendMessage.apply(_362,args);
};
this.publish=function(_364,_365){
var _364=this.getTopic(_364);
var args=[];
for(var x=1;x<arguments.length;x++){
args.push(arguments[x]);
}
_364.sendMessage.apply(_364,args);
};
};
dojo.event.topic.TopicImpl=function(_368){
this.topicName=_368;
this.subscribe=function(_369,_36a){
var tf=_36a||_369;
var to=(!_36a)?dj_global:_369;
return dojo.event.kwConnect({srcObj:this,srcFunc:"sendMessage",adviceObj:to,adviceFunc:tf});
};
this.unsubscribe=function(_36d,_36e){
var tf=(!_36e)?_36d:_36e;
var to=(!_36e)?null:_36d;
return dojo.event.kwDisconnect({srcObj:this,srcFunc:"sendMessage",adviceObj:to,adviceFunc:tf});
};
this._getJoinPoint=function(){
return dojo.event.MethodJoinPoint.getForMethod(this,"sendMessage");
};
this.setSquelch=function(_371){
this._getJoinPoint().squelch=_371;
};
this.destroy=function(){
this._getJoinPoint().disconnect();
};
this.registerPublisher=function(_372,_373){
dojo.event.connect(_372,_373,this,"sendMessage");
};
this.sendMessage=function(_374){
};
};
dojo.provide("dojo.event.browser");
dojo._ie_clobber=new function(){
this.clobberNodes=[];
function nukeProp(node,prop){
try{
node[prop]=null;
}
catch(e){
}
try{
delete node[prop];
}
catch(e){
}
try{
node.removeAttribute(prop);
}
catch(e){
}
}
this.clobber=function(_377){
var na;
var tna;
if(_377){
tna=_377.all||_377.getElementsByTagName("*");
na=[_377];
for(var x=0;x<tna.length;x++){
if(tna[x]["__doClobber__"]){
na.push(tna[x]);
}
}
}else{
try{
window.onload=null;
}
catch(e){
}
na=(this.clobberNodes.length)?this.clobberNodes:document.all;
}
tna=null;
var _37b={};
for(var i=na.length-1;i>=0;i=i-1){
var el=na[i];
try{
if(el&&el["__clobberAttrs__"]){
for(var j=0;j<el.__clobberAttrs__.length;j++){
nukeProp(el,el.__clobberAttrs__[j]);
}
nukeProp(el,"__clobberAttrs__");
nukeProp(el,"__doClobber__");
}
}
catch(e){
}
}
na=null;
};
};
if(dojo.render.html.ie){
dojo.addOnUnload(function(){
dojo._ie_clobber.clobber();
try{
if((dojo["widget"])&&(dojo.widget["manager"])){
dojo.widget.manager.destroyAll();
}
}
catch(e){
}
if(dojo.widget){
for(var name in dojo.widget._templateCache){
if(dojo.widget._templateCache[name].node){
dojo.dom.destroyNode(dojo.widget._templateCache[name].node);
dojo.widget._templateCache[name].node=null;
delete dojo.widget._templateCache[name].node;
}
}
}
try{
window.onload=null;
}
catch(e){
}
try{
window.onunload=null;
}
catch(e){
}
dojo._ie_clobber.clobberNodes=[];
});
}
dojo.event.browser=new function(){
var _380=0;
this.normalizedEventName=function(_381){
switch(_381){
case "CheckboxStateChange":
case "DOMAttrModified":
case "DOMMenuItemActive":
case "DOMMenuItemInactive":
case "DOMMouseScroll":
case "DOMNodeInserted":
case "DOMNodeRemoved":
case "RadioStateChange":
return _381;
break;
default:
return _381.toLowerCase();
break;
}
};
this.clean=function(node){
if(dojo.render.html.ie){
dojo._ie_clobber.clobber(node);
}
};
this.addClobberNode=function(node){
if(!dojo.render.html.ie){
return;
}
if(!node["__doClobber__"]){
node.__doClobber__=true;
dojo._ie_clobber.clobberNodes.push(node);
node.__clobberAttrs__=[];
}
};
this.addClobberNodeAttrs=function(node,_385){
if(!dojo.render.html.ie){
return;
}
this.addClobberNode(node);
for(var x=0;x<_385.length;x++){
node.__clobberAttrs__.push(_385[x]);
}
};
this.removeListener=function(node,_388,fp,_38a){
if(!_38a){
var _38a=false;
}
_388=dojo.event.browser.normalizedEventName(_388);
if((_388=="onkey")||(_388=="key")){
if(dojo.render.html.ie){
this.removeListener(node,"onkeydown",fp,_38a);
}
_388="onkeypress";
}
if(_388.substr(0,2)=="on"){
_388=_388.substr(2);
}
if(node.removeEventListener){
node.removeEventListener(_388,fp,_38a);
}
};
this.addListener=function(node,_38c,fp,_38e,_38f){
if(!node){
return;
}
if(!_38e){
var _38e=false;
}
_38c=dojo.event.browser.normalizedEventName(_38c);
if((_38c=="onkey")||(_38c=="key")){
if(dojo.render.html.ie){
this.addListener(node,"onkeydown",fp,_38e,_38f);
}
_38c="onkeypress";
}
if(_38c.substr(0,2)!="on"){
_38c="on"+_38c;
}
if(!_38f){
var _390=function(evt){
if(!evt){
evt=window.event;
}
var ret=fp(dojo.event.browser.fixEvent(evt,this));
if(_38e){
dojo.event.browser.stopEvent(evt);
}
return ret;
};
}else{
_390=fp;
}
if(node.addEventListener){
node.addEventListener(_38c.substr(2),_390,_38e);
return _390;
}else{
if(typeof node[_38c]=="function"){
var _393=node[_38c];
node[_38c]=function(e){
_393(e);
return _390(e);
};
}else{
node[_38c]=_390;
}
if(dojo.render.html.ie){
this.addClobberNodeAttrs(node,[_38c]);
}
return _390;
}
};
this.isEvent=function(obj){
return (typeof obj!="undefined")&&(obj)&&(typeof Event!="undefined")&&(obj.eventPhase);
};
this.currentEvent=null;
this.callListener=function(_396,_397){
if(typeof _396!="function"){
dojo.raise("listener not a function: "+_396);
}
dojo.event.browser.currentEvent.currentTarget=_397;
return _396.call(_397,dojo.event.browser.currentEvent);
};
this._stopPropagation=function(){
dojo.event.browser.currentEvent.cancelBubble=true;
};
this._preventDefault=function(){
dojo.event.browser.currentEvent.returnValue=false;
};
this.keys={KEY_BACKSPACE:8,KEY_TAB:9,KEY_CLEAR:12,KEY_ENTER:13,KEY_SHIFT:16,KEY_CTRL:17,KEY_ALT:18,KEY_PAUSE:19,KEY_CAPS_LOCK:20,KEY_ESCAPE:27,KEY_SPACE:32,KEY_PAGE_UP:33,KEY_PAGE_DOWN:34,KEY_END:35,KEY_HOME:36,KEY_LEFT_ARROW:37,KEY_UP_ARROW:38,KEY_RIGHT_ARROW:39,KEY_DOWN_ARROW:40,KEY_INSERT:45,KEY_DELETE:46,KEY_HELP:47,KEY_LEFT_WINDOW:91,KEY_RIGHT_WINDOW:92,KEY_SELECT:93,KEY_NUMPAD_0:96,KEY_NUMPAD_1:97,KEY_NUMPAD_2:98,KEY_NUMPAD_3:99,KEY_NUMPAD_4:100,KEY_NUMPAD_5:101,KEY_NUMPAD_6:102,KEY_NUMPAD_7:103,KEY_NUMPAD_8:104,KEY_NUMPAD_9:105,KEY_NUMPAD_MULTIPLY:106,KEY_NUMPAD_PLUS:107,KEY_NUMPAD_ENTER:108,KEY_NUMPAD_MINUS:109,KEY_NUMPAD_PERIOD:110,KEY_NUMPAD_DIVIDE:111,KEY_F1:112,KEY_F2:113,KEY_F3:114,KEY_F4:115,KEY_F5:116,KEY_F6:117,KEY_F7:118,KEY_F8:119,KEY_F9:120,KEY_F10:121,KEY_F11:122,KEY_F12:123,KEY_F13:124,KEY_F14:125,KEY_F15:126,KEY_NUM_LOCK:144,KEY_SCROLL_LOCK:145};
this.revKeys=[];
for(var key in this.keys){
this.revKeys[this.keys[key]]=key;
}
this.fixEvent=function(evt,_39a){
if(!evt){
if(window["event"]){
evt=window.event;
}
}
if((evt["type"])&&(evt["type"].indexOf("key")==0)){
evt.keys=this.revKeys;
for(var key in this.keys){
evt[key]=this.keys[key];
}
if(evt["type"]=="keydown"&&dojo.render.html.ie){
switch(evt.keyCode){
case evt.KEY_SHIFT:
case evt.KEY_CTRL:
case evt.KEY_ALT:
case evt.KEY_CAPS_LOCK:
case evt.KEY_LEFT_WINDOW:
case evt.KEY_RIGHT_WINDOW:
case evt.KEY_SELECT:
case evt.KEY_NUM_LOCK:
case evt.KEY_SCROLL_LOCK:
case evt.KEY_NUMPAD_0:
case evt.KEY_NUMPAD_1:
case evt.KEY_NUMPAD_2:
case evt.KEY_NUMPAD_3:
case evt.KEY_NUMPAD_4:
case evt.KEY_NUMPAD_5:
case evt.KEY_NUMPAD_6:
case evt.KEY_NUMPAD_7:
case evt.KEY_NUMPAD_8:
case evt.KEY_NUMPAD_9:
case evt.KEY_NUMPAD_PERIOD:
break;
case evt.KEY_NUMPAD_MULTIPLY:
case evt.KEY_NUMPAD_PLUS:
case evt.KEY_NUMPAD_ENTER:
case evt.KEY_NUMPAD_MINUS:
case evt.KEY_NUMPAD_DIVIDE:
break;
case evt.KEY_PAUSE:
case evt.KEY_TAB:
case evt.KEY_BACKSPACE:
case evt.KEY_ENTER:
case evt.KEY_ESCAPE:
case evt.KEY_PAGE_UP:
case evt.KEY_PAGE_DOWN:
case evt.KEY_END:
case evt.KEY_HOME:
case evt.KEY_LEFT_ARROW:
case evt.KEY_UP_ARROW:
case evt.KEY_RIGHT_ARROW:
case evt.KEY_DOWN_ARROW:
case evt.KEY_INSERT:
case evt.KEY_DELETE:
case evt.KEY_F1:
case evt.KEY_F2:
case evt.KEY_F3:
case evt.KEY_F4:
case evt.KEY_F5:
case evt.KEY_F6:
case evt.KEY_F7:
case evt.KEY_F8:
case evt.KEY_F9:
case evt.KEY_F10:
case evt.KEY_F11:
case evt.KEY_F12:
case evt.KEY_F12:
case evt.KEY_F13:
case evt.KEY_F14:
case evt.KEY_F15:
case evt.KEY_CLEAR:
case evt.KEY_HELP:
evt.key=evt.keyCode;
break;
default:
if(evt.ctrlKey||evt.altKey){
var _39c=evt.keyCode;
if(_39c>=65&&_39c<=90&&evt.shiftKey==false){
_39c+=32;
}
if(_39c>=1&&_39c<=26&&evt.ctrlKey){
_39c+=96;
}
evt.key=String.fromCharCode(_39c);
}
}
}else{
if(evt["type"]=="keypress"){
if(dojo.render.html.opera){
if(evt.which==0){
evt.key=evt.keyCode;
}else{
if(evt.which>0){
switch(evt.which){
case evt.KEY_SHIFT:
case evt.KEY_CTRL:
case evt.KEY_ALT:
case evt.KEY_CAPS_LOCK:
case evt.KEY_NUM_LOCK:
case evt.KEY_SCROLL_LOCK:
break;
case evt.KEY_PAUSE:
case evt.KEY_TAB:
case evt.KEY_BACKSPACE:
case evt.KEY_ENTER:
case evt.KEY_ESCAPE:
evt.key=evt.which;
break;
default:
var _39c=evt.which;
if((evt.ctrlKey||evt.altKey||evt.metaKey)&&(evt.which>=65&&evt.which<=90&&evt.shiftKey==false)){
_39c+=32;
}
evt.key=String.fromCharCode(_39c);
}
}
}
}else{
if(dojo.render.html.ie){
if(!evt.ctrlKey&&!evt.altKey&&evt.keyCode>=evt.KEY_SPACE){
evt.key=String.fromCharCode(evt.keyCode);
}
}else{
if(dojo.render.html.safari){
switch(evt.keyCode){
case 25:
evt.key=evt.KEY_TAB;
evt.shift=true;
break;
case 63232:
evt.key=evt.KEY_UP_ARROW;
break;
case 63233:
evt.key=evt.KEY_DOWN_ARROW;
break;
case 63234:
evt.key=evt.KEY_LEFT_ARROW;
break;
case 63235:
evt.key=evt.KEY_RIGHT_ARROW;
break;
case 63236:
evt.key=evt.KEY_F1;
break;
case 63237:
evt.key=evt.KEY_F2;
break;
case 63238:
evt.key=evt.KEY_F3;
break;
case 63239:
evt.key=evt.KEY_F4;
break;
case 63240:
evt.key=evt.KEY_F5;
break;
case 63241:
evt.key=evt.KEY_F6;
break;
case 63242:
evt.key=evt.KEY_F7;
break;
case 63243:
evt.key=evt.KEY_F8;
break;
case 63244:
evt.key=evt.KEY_F9;
break;
case 63245:
evt.key=evt.KEY_F10;
break;
case 63246:
evt.key=evt.KEY_F11;
break;
case 63247:
evt.key=evt.KEY_F12;
break;
case 63250:
evt.key=evt.KEY_PAUSE;
break;
case 63272:
evt.key=evt.KEY_DELETE;
break;
case 63273:
evt.key=evt.KEY_HOME;
break;
case 63275:
evt.key=evt.KEY_END;
break;
case 63276:
evt.key=evt.KEY_PAGE_UP;
break;
case 63277:
evt.key=evt.KEY_PAGE_DOWN;
break;
case 63302:
evt.key=evt.KEY_INSERT;
break;
case 63248:
case 63249:
case 63289:
break;
default:
evt.key=evt.charCode>=evt.KEY_SPACE?String.fromCharCode(evt.charCode):evt.keyCode;
}
}else{
evt.key=evt.charCode>0?String.fromCharCode(evt.charCode):evt.keyCode;
}
}
}
}
}
}
if(dojo.render.html.ie){
if(!evt.target){
evt.target=evt.srcElement;
}
if(!evt.currentTarget){
evt.currentTarget=(_39a?_39a:evt.srcElement);
}
if(!evt.layerX){
evt.layerX=evt.offsetX;
}
if(!evt.layerY){
evt.layerY=evt.offsetY;
}
var doc=(evt.srcElement&&evt.srcElement.ownerDocument)?evt.srcElement.ownerDocument:document;
var _39e=((dojo.render.html.ie55)||(doc["compatMode"]=="BackCompat"))?doc.body:doc.documentElement;
if(!evt.pageX){
evt.pageX=evt.clientX+(_39e.scrollLeft||0);
}
if(!evt.pageY){
evt.pageY=evt.clientY+(_39e.scrollTop||0);
}
if(evt.type=="mouseover"){
evt.relatedTarget=evt.fromElement;
}
if(evt.type=="mouseout"){
evt.relatedTarget=evt.toElement;
}
this.currentEvent=evt;
evt.callListener=this.callListener;
evt.stopPropagation=this._stopPropagation;
evt.preventDefault=this._preventDefault;
}
return evt;
};
this.stopEvent=function(evt){
if(window.event){
evt.cancelBubble=true;
evt.returnValue=false;
}else{
evt.preventDefault();
evt.stopPropagation();
}
};
};
dojo.provide("dojo.event.*");


__CPAN_EDITION__ event_and_io build.txt

Files baked into this package:

dojoGuardStart.js,
../src/bootstrap1.js,
../src/loader.js,
dojoGuardEnd.js,
../src/hostenv_browser.js,
../src/bootstrap2.js,
../src/string/common.js,
../src/string.js,
../src/lang/common.js,
../src/lang/extras.js,
../src/io/common.js,
../src/lang/array.js,
../src/lang/func.js,
../src/string/extras.js,
../src/dom.js,
../src/undo/browser.js,
../src/io/BrowserIO.js,
../src/io/cookie.js,
../src/io/__package__.js,
../src/event/common.js,
../src/event/topic.js,
../src/event/browser.js,
../src/event/__package__.js

		
__CPAN_EDITION__ kitchen_sink dojo.js
/*
	Copyright (c) 2004-2006, The Dojo Foundation
	All Rights Reserved.

	Licensed under the Academic Free License version 2.1 or above OR the
	modified BSD license. For more information on Dojo licensing, see:

		http://dojotoolkit.org/community/licensing.shtml
*/

/*
	This is a compiled version of Dojo, built for deployment and not for
	development. To get an editable version, please visit:

		http://dojotoolkit.org

	for documentation and information on getting the source.
*/

if(typeof dojo=="undefined"){
var dj_global=this;
var dj_currentContext=this;
function dj_undef(_1,_2){
return (typeof (_2||dj_currentContext)[_1]=="undefined");
}
if(dj_undef("djConfig",this)){
var djConfig={};
}
if(dj_undef("dojo",this)){
var dojo={};
}
dojo.global=function(){
return dj_currentContext;
};
dojo.locale=djConfig.locale;
dojo.version={major:0,minor:4,patch:1,flag:"",revision:Number("$Rev: 6824 $".match(/[0-9]+/)[0]),toString:function(){
with(dojo.version){
return major+"."+minor+"."+patch+flag+" ("+revision+")";
}
}};
dojo.evalProp=function(_3,_4,_5){
if((!_4)||(!_3)){
return undefined;
}
if(!dj_undef(_3,_4)){
return _4[_3];
}
return (_5?(_4[_3]={}):undefined);
};
dojo.parseObjPath=function(_6,_7,_8){
var _9=(_7||dojo.global());
var _a=_6.split(".");
var _b=_a.pop();
for(var i=0,l=_a.length;i<l&&_9;i++){
_9=dojo.evalProp(_a[i],_9,_8);
}
return {obj:_9,prop:_b};
};
dojo.evalObjPath=function(_e,_f){
if(typeof _e!="string"){
return dojo.global();
}
if(_e.indexOf(".")==-1){
return dojo.evalProp(_e,dojo.global(),_f);
}
var ref=dojo.parseObjPath(_e,dojo.global(),_f);
if(ref){
return dojo.evalProp(ref.prop,ref.obj,_f);
}
return null;
};
dojo.errorToString=function(_11){
if(!dj_undef("message",_11)){
return _11.message;
}else{
if(!dj_undef("description",_11)){
return _11.description;
}else{
return _11;
}
}
};
dojo.raise=function(_12,_13){
if(_13){
_12=_12+": "+dojo.errorToString(_13);
}else{
_12=dojo.errorToString(_12);
}
try{
if(djConfig.isDebug){
dojo.hostenv.println("FATAL exception raised: "+_12);
}
}
catch(e){
}
throw _13||Error(_12);
};
dojo.debug=function(){
};
dojo.debugShallow=function(obj){
};
dojo.profile={start:function(){
},end:function(){
},stop:function(){
},dump:function(){
}};
function dj_eval(_15){
return dj_global.eval?dj_global.eval(_15):eval(_15);
}
dojo.unimplemented=function(_16,_17){
var _18="'"+_16+"' not implemented";
if(_17!=null){
_18+=" "+_17;
}
dojo.raise(_18);
};
dojo.deprecated=function(_19,_1a,_1b){
var _1c="DEPRECATED: "+_19;
if(_1a){
_1c+=" "+_1a;
}
if(_1b){
_1c+=" -- will be removed in version: "+_1b;
}
dojo.debug(_1c);
};
dojo.render=(function(){
function vscaffold(_1d,_1e){
var tmp={capable:false,support:{builtin:false,plugin:false},prefixes:_1d};
for(var i=0;i<_1e.length;i++){
tmp[_1e[i]]=false;
}
return tmp;
}
return {name:"",ver:dojo.version,os:{win:false,linux:false,osx:false},html:vscaffold(["html"],["ie","opera","khtml","safari","moz"]),svg:vscaffold(["svg"],["corel","adobe","batik"]),vml:vscaffold(["vml"],["ie"]),swf:vscaffold(["Swf","Flash","Mm"],["mm"]),swt:vscaffold(["Swt"],["ibm"])};
})();
dojo.hostenv=(function(){
var _21={isDebug:false,allowQueryConfig:false,baseScriptUri:"",baseRelativePath:"",libraryScriptUri:"",iePreventClobber:false,ieClobberMinimal:true,preventBackButtonFix:true,delayMozLoadingFix:false,searchIds:[],parseWidgets:true};
if(typeof djConfig=="undefined"){
djConfig=_21;
}else{
for(var _22 in _21){
if(typeof djConfig[_22]=="undefined"){
djConfig[_22]=_21[_22];
}
}
}
return {name_:"(unset)",version_:"(unset)",getName:function(){
return this.name_;
},getVersion:function(){
return this.version_;
},getText:function(uri){
dojo.unimplemented("getText","uri="+uri);
}};
})();
dojo.hostenv.getBaseScriptUri=function(){
if(djConfig.baseScriptUri.length){
return djConfig.baseScriptUri;
}
var uri=new String(djConfig.libraryScriptUri||djConfig.baseRelativePath);
if(!uri){
dojo.raise("Nothing returned by getLibraryScriptUri(): "+uri);
}
var _25=uri.lastIndexOf("/");
djConfig.baseScriptUri=djConfig.baseRelativePath;
return djConfig.baseScriptUri;
};
(function(){
var _26={pkgFileName:"__package__",loading_modules_:{},loaded_modules_:{},addedToLoadingCount:[],removedFromLoadingCount:[],inFlightCount:0,modulePrefixes_:{dojo:{name:"dojo",value:"src"}},setModulePrefix:function(_27,_28){
this.modulePrefixes_[_27]={name:_27,value:_28};
},moduleHasPrefix:function(_29){
var mp=this.modulePrefixes_;
return Boolean(mp[_29]&&mp[_29].value);
},getModulePrefix:function(_2b){
if(this.moduleHasPrefix(_2b)){
return this.modulePrefixes_[_2b].value;
}
return _2b;
},getTextStack:[],loadUriStack:[],loadedUris:[],post_load_:false,modulesLoadedListeners:[],unloadListeners:[],loadNotifying:false};
for(var _2c in _26){
dojo.hostenv[_2c]=_26[_2c];
}
})();
dojo.hostenv.loadPath=function(_2d,_2e,cb){
var uri;
if(_2d.charAt(0)=="/"||_2d.match(/^\w+:/)){
uri=_2d;
}else{
uri=this.getBaseScriptUri()+_2d;
}
if(djConfig.cacheBust&&dojo.render.html.capable){
uri+="?"+String(djConfig.cacheBust).replace(/\W+/g,"");
}
try{
return !_2e?this.loadUri(uri,cb):this.loadUriAndCheck(uri,_2e,cb);
}
catch(e){
dojo.debug(e);
return false;
}
};
dojo.hostenv.loadUri=function(uri,cb){
if(this.loadedUris[uri]){
return true;
}
var _33=this.getText(uri,null,true);
if(!_33){
return false;
}
this.loadedUris[uri]=true;
if(cb){
_33="("+_33+")";
}
var _34=dj_eval(_33);
if(cb){
cb(_34);
}
return true;
};
dojo.hostenv.loadUriAndCheck=function(uri,_36,cb){
var ok=true;
try{
ok=this.loadUri(uri,cb);
}
catch(e){
dojo.debug("failed loading ",uri," with error: ",e);
}
return Boolean(ok&&this.findModule(_36,false));
};
dojo.loaded=function(){
};
dojo.unloaded=function(){
};
dojo.hostenv.loaded=function(){
this.loadNotifying=true;
this.post_load_=true;
var mll=this.modulesLoadedListeners;
for(var x=0;x<mll.length;x++){
mll[x]();
}
this.modulesLoadedListeners=[];
this.loadNotifying=false;
dojo.loaded();
};
dojo.hostenv.unloaded=function(){
var mll=this.unloadListeners;
while(mll.length){
(mll.pop())();
}
dojo.unloaded();
};
dojo.addOnLoad=function(obj,_3d){
var dh=dojo.hostenv;
if(arguments.length==1){
dh.modulesLoadedListeners.push(obj);
}else{
if(arguments.length>1){
dh.modulesLoadedListeners.push(function(){
obj[_3d]();
});
}
}
if(dh.post_load_&&dh.inFlightCount==0&&!dh.loadNotifying){
dh.callLoaded();
}
};
dojo.addOnUnload=function(obj,_40){
var dh=dojo.hostenv;
if(arguments.length==1){
dh.unloadListeners.push(obj);
}else{
if(arguments.length>1){
dh.unloadListeners.push(function(){
obj[_40]();
});
}
}
};
dojo.hostenv.modulesLoaded=function(){
if(this.post_load_){
return;
}
if(this.loadUriStack.length==0&&this.getTextStack.length==0){
if(this.inFlightCount>0){
dojo.debug("files still in flight!");
return;
}
dojo.hostenv.callLoaded();
}
};
dojo.hostenv.callLoaded=function(){
if(typeof setTimeout=="object"){
setTimeout("dojo.hostenv.loaded();",0);
}else{
dojo.hostenv.loaded();
}
};
dojo.hostenv.getModuleSymbols=function(_42){
var _43=_42.split(".");
for(var i=_43.length;i>0;i--){
var _45=_43.slice(0,i).join(".");
if((i==1)&&!this.moduleHasPrefix(_45)){
_43[0]="../"+_43[0];
}else{
var _46=this.getModulePrefix(_45);
if(_46!=_45){
_43.splice(0,i,_46);
break;
}
}
}
return _43;
};
dojo.hostenv._global_omit_module_check=false;
dojo.hostenv.loadModule=function(_47,_48,_49){
if(!_47){
return;
}
_49=this._global_omit_module_check||_49;
var _4a=this.findModule(_47,false);
if(_4a){
return _4a;
}
if(dj_undef(_47,this.loading_modules_)){
this.addedToLoadingCount.push(_47);
}
this.loading_modules_[_47]=1;
var _4b=_47.replace(/\./g,"/")+".js";
var _4c=_47.split(".");
var _4d=this.getModuleSymbols(_47);
var _4e=((_4d[0].charAt(0)!="/")&&!_4d[0].match(/^\w+:/));
var _4f=_4d[_4d.length-1];
var ok;
if(_4f=="*"){
_47=_4c.slice(0,-1).join(".");
while(_4d.length){
_4d.pop();
_4d.push(this.pkgFileName);
_4b=_4d.join("/")+".js";
if(_4e&&_4b.charAt(0)=="/"){
_4b=_4b.slice(1);
}
ok=this.loadPath(_4b,!_49?_47:null);
if(ok){
break;
}
_4d.pop();
}
}else{
_4b=_4d.join("/")+".js";
_47=_4c.join(".");
var _51=!_49?_47:null;
ok=this.loadPath(_4b,_51);
if(!ok&&!_48){
_4d.pop();
while(_4d.length){
_4b=_4d.join("/")+".js";
ok=this.loadPath(_4b,_51);
if(ok){
break;
}
_4d.pop();
_4b=_4d.join("/")+"/"+this.pkgFileName+".js";
if(_4e&&_4b.charAt(0)=="/"){
_4b=_4b.slice(1);
}
ok=this.loadPath(_4b,_51);
if(ok){
break;
}
}
}
if(!ok&&!_49){
dojo.raise("Could not load '"+_47+"'; last tried '"+_4b+"'");
}
}
if(!_49&&!this["isXDomain"]){
_4a=this.findModule(_47,false);
if(!_4a){
dojo.raise("symbol '"+_47+"' is not defined after loading '"+_4b+"'");
}
}
return _4a;
};
dojo.hostenv.startPackage=function(_52){
var _53=String(_52);
var _54=_53;
var _55=_52.split(/\./);
if(_55[_55.length-1]=="*"){
_55.pop();
_54=_55.join(".");
}
var _56=dojo.evalObjPath(_54,true);
this.loaded_modules_[_53]=_56;
this.loaded_modules_[_54]=_56;
return _56;
};
dojo.hostenv.findModule=function(_57,_58){
var lmn=String(_57);
if(this.loaded_modules_[lmn]){
return this.loaded_modules_[lmn];
}
if(_58){
dojo.raise("no loaded module named '"+_57+"'");
}
return null;
};
dojo.kwCompoundRequire=function(_5a){
var _5b=_5a["common"]||[];
var _5c=_5a[dojo.hostenv.name_]?_5b.concat(_5a[dojo.hostenv.name_]||[]):_5b.concat(_5a["default"]||[]);
for(var x=0;x<_5c.length;x++){
var _5e=_5c[x];
if(_5e.constructor==Array){
dojo.hostenv.loadModule.apply(dojo.hostenv,_5e);
}else{
dojo.hostenv.loadModule(_5e);
}
}
};
dojo.require=function(_5f){
dojo.hostenv.loadModule.apply(dojo.hostenv,arguments);
};
dojo.requireIf=function(_60,_61){
var _62=arguments[0];
if((_62===true)||(_62=="common")||(_62&&dojo.render[_62].capable)){
var _63=[];
for(var i=1;i<arguments.length;i++){
_63.push(arguments[i]);
}
dojo.require.apply(dojo,_63);
}
};
dojo.requireAfterIf=dojo.requireIf;
dojo.provide=function(_65){
return dojo.hostenv.startPackage.apply(dojo.hostenv,arguments);
};
dojo.registerModulePath=function(_66,_67){
return dojo.hostenv.setModulePrefix(_66,_67);
};
dojo.setModulePrefix=function(_68,_69){
dojo.deprecated("dojo.setModulePrefix(\""+_68+"\", \""+_69+"\")","replaced by dojo.registerModulePath","0.5");
return dojo.registerModulePath(_68,_69);
};
dojo.exists=function(obj,_6b){
var p=_6b.split(".");
for(var i=0;i<p.length;i++){
if(!obj[p[i]]){
return false;
}
obj=obj[p[i]];
}
return true;
};
dojo.hostenv.normalizeLocale=function(_6e){
var _6f=_6e?_6e.toLowerCase():dojo.locale;
if(_6f=="root"){
_6f="ROOT";
}
return _6f;
};
dojo.hostenv.searchLocalePath=function(_70,_71,_72){
_70=dojo.hostenv.normalizeLocale(_70);
var _73=_70.split("-");
var _74=[];
for(var i=_73.length;i>0;i--){
_74.push(_73.slice(0,i).join("-"));
}
_74.push(false);
if(_71){
_74.reverse();
}
for(var j=_74.length-1;j>=0;j--){
var loc=_74[j]||"ROOT";
var _78=_72(loc);
if(_78){
break;
}
}
};
dojo.hostenv.localesGenerated;
dojo.hostenv.registerNlsPrefix=function(){
dojo.registerModulePath("nls","nls");
};
dojo.hostenv.preloadLocalizations=function(){
if(dojo.hostenv.localesGenerated){
dojo.hostenv.registerNlsPrefix();
function preload(_79){
_79=dojo.hostenv.normalizeLocale(_79);
dojo.hostenv.searchLocalePath(_79,true,function(loc){
for(var i=0;i<dojo.hostenv.localesGenerated.length;i++){
if(dojo.hostenv.localesGenerated[i]==loc){
dojo["require"]("nls.dojo_"+loc);
return true;
}
}
return false;
});
}
preload();
var _7c=djConfig.extraLocale||[];
for(var i=0;i<_7c.length;i++){
preload(_7c[i]);
}
}
dojo.hostenv.preloadLocalizations=function(){
};
};
dojo.requireLocalization=function(_7e,_7f,_80,_81){
dojo.hostenv.preloadLocalizations();
var _82=dojo.hostenv.normalizeLocale(_80);
var _83=[_7e,"nls",_7f].join(".");
var _84="";
if(_81){
var _85=_81.split(",");
for(var i=0;i<_85.length;i++){
if(_82.indexOf(_85[i])==0){
if(_85[i].length>_84.length){
_84=_85[i];
}
}
}
if(!_84){
_84="ROOT";
}
}
var _87=_81?_84:_82;
var _88=dojo.hostenv.findModule(_83);
var _89=null;
if(_88){
if(djConfig.localizationComplete&&_88._built){
return;
}
var _8a=_87.replace("-","_");
var _8b=_83+"."+_8a;
_89=dojo.hostenv.findModule(_8b);
}
if(!_89){
_88=dojo.hostenv.startPackage(_83);
var _8c=dojo.hostenv.getModuleSymbols(_7e);
var _8d=_8c.concat("nls").join("/");
var _8e;
dojo.hostenv.searchLocalePath(_87,_81,function(loc){
var _90=loc.replace("-","_");
var _91=_83+"."+_90;
var _92=false;
if(!dojo.hostenv.findModule(_91)){
dojo.hostenv.startPackage(_91);
var _93=[_8d];
if(loc!="ROOT"){
_93.push(loc);
}
_93.push(_7f);
var _94=_93.join("/")+".js";
_92=dojo.hostenv.loadPath(_94,null,function(_95){
var _96=function(){
};
_96.prototype=_8e;
_88[_90]=new _96();
for(var j in _95){
_88[_90][j]=_95[j];
}
});
}else{
_92=true;
}
if(_92&&_88[_90]){
_8e=_88[_90];
}else{
_88[_90]=_8e;
}
if(_81){
return true;
}
});
}
if(_81&&_82!=_84){
_88[_82.replace("-","_")]=_88[_84.replace("-","_")];
}
};
(function(){
var _98=djConfig.extraLocale;
if(_98){
if(!_98 instanceof Array){
_98=[_98];
}
var req=dojo.requireLocalization;
dojo.requireLocalization=function(m,b,_9c,_9d){
req(m,b,_9c,_9d);
if(_9c){
return;
}
for(var i=0;i<_98.length;i++){
req(m,b,_98[i],_9d);
}
};
}
})();
}
if(typeof window!="undefined"){
(function(){
if(djConfig.allowQueryConfig){
var _9f=document.location.toString();
var _a0=_9f.split("?",2);
if(_a0.length>1){
var _a1=_a0[1];
var _a2=_a1.split("&");
for(var x in _a2){
var sp=_a2[x].split("=");
if((sp[0].length>9)&&(sp[0].substr(0,9)=="djConfig.")){
var opt=sp[0].substr(9);
try{
djConfig[opt]=eval(sp[1]);
}
catch(e){
djConfig[opt]=sp[1];
}
}
}
}
}
if(((djConfig["baseScriptUri"]=="")||(djConfig["baseRelativePath"]==""))&&(document&&document.getElementsByTagName)){
var _a6=document.getElementsByTagName("script");
var _a7=/(__package__|dojo|bootstrap1)\.js([\?\.]|$)/i;
for(var i=0;i<_a6.length;i++){
var src=_a6[i].getAttribute("src");
if(!src){
continue;
}
var m=src.match(_a7);
if(m){
var _ab=src.substring(0,m.index);
if(src.indexOf("bootstrap1")>-1){
_ab+="../";
}
if(!this["djConfig"]){
djConfig={};
}
if(djConfig["baseScriptUri"]==""){
djConfig["baseScriptUri"]=_ab;
}
if(djConfig["baseRelativePath"]==""){
djConfig["baseRelativePath"]=_ab;
}
break;
}
}
}
var dr=dojo.render;
var drh=dojo.render.html;
var drs=dojo.render.svg;
var dua=(drh.UA=navigator.userAgent);
var dav=(drh.AV=navigator.appVersion);
var t=true;
var f=false;
drh.capable=t;
drh.support.builtin=t;
dr.ver=parseFloat(drh.AV);
dr.os.mac=dav.indexOf("Macintosh")>=0;
dr.os.win=dav.indexOf("Windows")>=0;
dr.os.linux=dav.indexOf("X11")>=0;
drh.opera=dua.indexOf("Opera")>=0;
drh.khtml=(dav.indexOf("Konqueror")>=0)||(dav.indexOf("Safari")>=0);
drh.safari=dav.indexOf("Safari")>=0;
var _b3=dua.indexOf("Gecko");
drh.mozilla=drh.moz=(_b3>=0)&&(!drh.khtml);
if(drh.mozilla){
drh.geckoVersion=dua.substring(_b3+6,_b3+14);
}
drh.ie=(document.all)&&(!drh.opera);
drh.ie50=drh.ie&&dav.indexOf("MSIE 5.0")>=0;
drh.ie55=drh.ie&&dav.indexOf("MSIE 5.5")>=0;
drh.ie60=drh.ie&&dav.indexOf("MSIE 6.0")>=0;
drh.ie70=drh.ie&&dav.indexOf("MSIE 7.0")>=0;
var cm=document["compatMode"];
drh.quirks=(cm=="BackCompat")||(cm=="QuirksMode")||drh.ie55||drh.ie50;
dojo.locale=dojo.locale||(drh.ie?navigator.userLanguage:navigator.language).toLowerCase();
dr.vml.capable=drh.ie;
drs.capable=f;
drs.support.plugin=f;
drs.support.builtin=f;
var _b5=window["document"];
var tdi=_b5["implementation"];
if((tdi)&&(tdi["hasFeature"])&&(tdi.hasFeature("org.w3c.dom.svg","1.0"))){
drs.capable=t;
drs.support.builtin=t;
drs.support.plugin=f;
}
if(drh.safari){
var tmp=dua.split("AppleWebKit/")[1];
var ver=parseFloat(tmp.split(" ")[0]);
if(ver>=420){
drs.capable=t;
drs.support.builtin=t;
drs.support.plugin=f;
}
}else{
}
})();
dojo.hostenv.startPackage("dojo.hostenv");
dojo.render.name=dojo.hostenv.name_="browser";
dojo.hostenv.searchIds=[];
dojo.hostenv._XMLHTTP_PROGIDS=["Msxml2.XMLHTTP","Microsoft.XMLHTTP","Msxml2.XMLHTTP.4.0"];
dojo.hostenv.getXmlhttpObject=function(){
var _b9=null;
var _ba=null;
try{
_b9=new XMLHttpRequest();
}
catch(e){
}
if(!_b9){
for(var i=0;i<3;++i){
var _bc=dojo.hostenv._XMLHTTP_PROGIDS[i];
try{
_b9=new ActiveXObject(_bc);
}
catch(e){
_ba=e;
}
if(_b9){
dojo.hostenv._XMLHTTP_PROGIDS=[_bc];
break;
}
}
}
if(!_b9){
return dojo.raise("XMLHTTP not available",_ba);
}
return _b9;
};
dojo.hostenv._blockAsync=false;
dojo.hostenv.getText=function(uri,_be,_bf){
if(!_be){
this._blockAsync=true;
}
var _c0=this.getXmlhttpObject();
function isDocumentOk(_c1){
var _c2=_c1["status"];
return Boolean((!_c2)||((200<=_c2)&&(300>_c2))||(_c2==304));
}
if(_be){
var _c3=this,_c4=null,gbl=dojo.global();
var xhr=dojo.evalObjPath("dojo.io.XMLHTTPTransport");
_c0.onreadystatechange=function(){
if(_c4){
gbl.clearTimeout(_c4);
_c4=null;
}
if(_c3._blockAsync||(xhr&&xhr._blockAsync)){
_c4=gbl.setTimeout(function(){
_c0.onreadystatechange.apply(this);
},10);
}else{
if(4==_c0.readyState){
if(isDocumentOk(_c0)){
_be(_c0.responseText);
}
}
}
};
}
_c0.open("GET",uri,_be?true:false);
try{
_c0.send(null);
if(_be){
return null;
}
if(!isDocumentOk(_c0)){
var err=Error("Unable to load "+uri+" status:"+_c0.status);
err.status=_c0.status;
err.responseText=_c0.responseText;
throw err;
}
}
catch(e){
this._blockAsync=false;
if((_bf)&&(!_be)){
return null;
}else{
throw e;
}
}
this._blockAsync=false;
return _c0.responseText;
};
dojo.hostenv.defaultDebugContainerId="dojoDebug";
dojo.hostenv._println_buffer=[];
dojo.hostenv._println_safe=false;
dojo.hostenv.println=function(_c8){
if(!dojo.hostenv._println_safe){
dojo.hostenv._println_buffer.push(_c8);
}else{
try{
var _c9=document.getElementById(djConfig.debugContainerId?djConfig.debugContainerId:dojo.hostenv.defaultDebugContainerId);
if(!_c9){
_c9=dojo.body();
}
var div=document.createElement("div");
div.appendChild(document.createTextNode(_c8));
_c9.appendChild(div);
}
catch(e){
try{
document.write("<div>"+_c8+"</div>");
}
catch(e2){
window.status=_c8;
}
}
}
};
dojo.addOnLoad(function(){
dojo.hostenv._println_safe=true;
while(dojo.hostenv._println_buffer.length>0){
dojo.hostenv.println(dojo.hostenv._println_buffer.shift());
}
});
function dj_addNodeEvtHdlr(_cb,_cc,fp){
var _ce=_cb["on"+_cc]||function(){
};
_cb["on"+_cc]=function(){
fp.apply(_cb,arguments);
_ce.apply(_cb,arguments);
};
return true;
}
function dj_load_init(e){
var _d0=(e&&e.type)?e.type.toLowerCase():"load";
if(arguments.callee.initialized||(_d0!="domcontentloaded"&&_d0!="load")){
return;
}
arguments.callee.initialized=true;
if(typeof (_timer)!="undefined"){
clearInterval(_timer);
delete _timer;
}
var _d1=function(){
if(dojo.render.html.ie){
dojo.hostenv.makeWidgets();
}
};
if(dojo.hostenv.inFlightCount==0){
_d1();
dojo.hostenv.modulesLoaded();
}else{
dojo.hostenv.modulesLoadedListeners.unshift(_d1);
}
}
if(document.addEventListener){
if(dojo.render.html.opera||(dojo.render.html.moz&&!djConfig.delayMozLoadingFix)){
document.addEventListener("DOMContentLoaded",dj_load_init,null);
}
window.addEventListener("load",dj_load_init,null);
}
if(dojo.render.html.ie&&dojo.render.os.win){
document.attachEvent("onreadystatechange",function(e){
if(document.readyState=="complete"){
dj_load_init();
}
});
}
if(/(WebKit|khtml)/i.test(navigator.userAgent)){
var _timer=setInterval(function(){
if(/loaded|complete/.test(document.readyState)){
dj_load_init();
}
},10);
}
if(dojo.render.html.ie){
dj_addNodeEvtHdlr(window,"beforeunload",function(){
dojo.hostenv._unloading=true;
window.setTimeout(function(){
dojo.hostenv._unloading=false;
},0);
});
}
dj_addNodeEvtHdlr(window,"unload",function(){
dojo.hostenv.unloaded();
if((!dojo.render.html.ie)||(dojo.render.html.ie&&dojo.hostenv._unloading)){
dojo.hostenv.unloaded();
}
});
dojo.hostenv.makeWidgets=function(){
var _d3=[];
if(djConfig.searchIds&&djConfig.searchIds.length>0){
_d3=_d3.concat(djConfig.searchIds);
}
if(dojo.hostenv.searchIds&&dojo.hostenv.searchIds.length>0){
_d3=_d3.concat(dojo.hostenv.searchIds);
}
if((djConfig.parseWidgets)||(_d3.length>0)){
if(dojo.evalObjPath("dojo.widget.Parse")){
var _d4=new dojo.xml.Parse();
if(_d3.length>0){
for(var x=0;x<_d3.length;x++){
var _d6=document.getElementById(_d3[x]);
if(!_d6){
continue;
}
var _d7=_d4.parseElement(_d6,null,true);
dojo.widget.getParser().createComponents(_d7);
}
}else{
if(djConfig.parseWidgets){
var _d7=_d4.parseElement(dojo.body(),null,true);
dojo.widget.getParser().createComponents(_d7);
}
}
}
}
};
dojo.addOnLoad(function(){
if(!dojo.render.html.ie){
dojo.hostenv.makeWidgets();
}
});
try{
if(dojo.render.html.ie){
document.namespaces.add("v","urn:schemas-microsoft-com:vml");
document.createStyleSheet().addRule("v\\:*","behavior:url(#default#VML)");
}
}
catch(e){
}
dojo.hostenv.writeIncludes=function(){
};
if(!dj_undef("document",this)){
dj_currentDocument=this.document;
}
dojo.doc=function(){
return dj_currentDocument;
};
dojo.body=function(){
return dojo.doc().body||dojo.doc().getElementsByTagName("body")[0];
};
dojo.byId=function(id,doc){
if((id)&&((typeof id=="string")||(id instanceof String))){
if(!doc){
doc=dj_currentDocument;
}
var ele=doc.getElementById(id);
if(ele&&(ele.id!=id)&&doc.all){
ele=null;
eles=doc.all[id];
if(eles){
if(eles.length){
for(var i=0;i<eles.length;i++){
if(eles[i].id==id){
ele=eles[i];
break;
}
}
}else{
ele=eles;
}
}
}
return ele;
}
return id;
};
dojo.setContext=function(_dc,_dd){
dj_currentContext=_dc;
dj_currentDocument=_dd;
};
dojo._fireCallback=function(_de,_df,_e0){
if((_df)&&((typeof _de=="string")||(_de instanceof String))){
_de=_df[_de];
}
return (_df?_de.apply(_df,_e0||[]):_de());
};
dojo.withGlobal=function(_e1,_e2,_e3,_e4){
var _e5;
var _e6=dj_currentContext;
var _e7=dj_currentDocument;
try{
dojo.setContext(_e1,_e1.document);
_e5=dojo._fireCallback(_e2,_e3,_e4);
}
finally{
dojo.setContext(_e6,_e7);
}
return _e5;
};
dojo.withDoc=function(_e8,_e9,_ea,_eb){
var _ec;
var _ed=dj_currentDocument;
try{
dj_currentDocument=_e8;
_ec=dojo._fireCallback(_e9,_ea,_eb);
}
finally{
dj_currentDocument=_ed;
}
return _ec;
};
}
(function(){
if(typeof dj_usingBootstrap!="undefined"){
return;
}
var _ee=false;
var _ef=false;
var _f0=false;
if((typeof this["load"]=="function")&&((typeof this["Packages"]=="function")||(typeof this["Packages"]=="object"))){
_ee=true;
}else{
if(typeof this["load"]=="function"){
_ef=true;
}else{
if(window.widget){
_f0=true;
}
}
}
var _f1=[];
if((this["djConfig"])&&((djConfig["isDebug"])||(djConfig["debugAtAllCosts"]))){
_f1.push("debug.js");
}
if((this["djConfig"])&&(djConfig["debugAtAllCosts"])&&(!_ee)&&(!_f0)){
_f1.push("browser_debug.js");
}
var _f2=djConfig["baseScriptUri"];
if((this["djConfig"])&&(djConfig["baseLoaderUri"])){
_f2=djConfig["baseLoaderUri"];
}
for(var x=0;x<_f1.length;x++){
var _f4=_f2+"src/"+_f1[x];
if(_ee||_ef){
load(_f4);
}else{
try{
document.write("<scr"+"ipt type='text/javascript' src='"+_f4+"'></scr"+"ipt>");
}
catch(e){
var _f5=document.createElement("script");
_f5.src=_f4;
document.getElementsByTagName("head")[0].appendChild(_f5);
}
}
}
})();
dojo.provide("dojo.lang.common");
dojo.lang.inherits=function(_f6,_f7){
if(!dojo.lang.isFunction(_f7)){
dojo.raise("dojo.inherits: superclass argument ["+_f7+"] must be a function (subclass: ["+_f6+"']");
}
_f6.prototype=new _f7();
_f6.prototype.constructor=_f6;
_f6.superclass=_f7.prototype;
_f6["super"]=_f7.prototype;
};
dojo.lang._mixin=function(obj,_f9){
var _fa={};
for(var x in _f9){
if((typeof _fa[x]=="undefined")||(_fa[x]!=_f9[x])){
obj[x]=_f9[x];
}
}
if(dojo.render.html.ie&&(typeof (_f9["toString"])=="function")&&(_f9["toString"]!=obj["toString"])&&(_f9["toString"]!=_fa["toString"])){
obj.toString=_f9.toString;
}
return obj;
};
dojo.lang.mixin=function(obj,_fd){
for(var i=1,l=arguments.length;i<l;i++){
dojo.lang._mixin(obj,arguments[i]);
}
return obj;
};
dojo.lang.extend=function(_100,_101){
for(var i=1,l=arguments.length;i<l;i++){
dojo.lang._mixin(_100.prototype,arguments[i]);
}
return _100;
};
dojo.inherits=dojo.lang.inherits;
dojo.mixin=dojo.lang.mixin;
dojo.extend=dojo.lang.extend;
dojo.lang.find=function(_104,_105,_106,_107){
if(!dojo.lang.isArrayLike(_104)&&dojo.lang.isArrayLike(_105)){
dojo.deprecated("dojo.lang.find(value, array)","use dojo.lang.find(array, value) instead","0.5");
var temp=_104;
_104=_105;
_105=temp;
}
var _109=dojo.lang.isString(_104);
if(_109){
_104=_104.split("");
}
if(_107){
var step=-1;
var i=_104.length-1;
var end=-1;
}else{
var step=1;
var i=0;
var end=_104.length;
}
if(_106){
while(i!=end){
if(_104[i]===_105){
return i;
}
i+=step;
}
}else{
while(i!=end){
if(_104[i]==_105){
return i;
}
i+=step;
}
}
return -1;
};
dojo.lang.indexOf=dojo.lang.find;
dojo.lang.findLast=function(_10d,_10e,_10f){
return dojo.lang.find(_10d,_10e,_10f,true);
};
dojo.lang.lastIndexOf=dojo.lang.findLast;
dojo.lang.inArray=function(_110,_111){
return dojo.lang.find(_110,_111)>-1;
};
dojo.lang.isObject=function(it){
if(typeof it=="undefined"){
return false;
}
return (typeof it=="object"||it===null||dojo.lang.isArray(it)||dojo.lang.isFunction(it));
};
dojo.lang.isArray=function(it){
return (it&&it instanceof Array||typeof it=="array");
};
dojo.lang.isArrayLike=function(it){
if((!it)||(dojo.lang.isUndefined(it))){
return false;
}
if(dojo.lang.isString(it)){
return false;
}
if(dojo.lang.isFunction(it)){
return false;
}
if(dojo.lang.isArray(it)){
return true;
}
if((it.tagName)&&(it.tagName.toLowerCase()=="form")){
return false;
}
if(dojo.lang.isNumber(it.length)&&isFinite(it.length)){
return true;
}
return false;
};
dojo.lang.isFunction=function(it){
return (it instanceof Function||typeof it=="function");
};
(function(){
if((dojo.render.html.capable)&&(dojo.render.html["safari"])){
dojo.lang.isFunction=function(it){
if((typeof (it)=="function")&&(it=="[object NodeList]")){
return false;
}
return (it instanceof Function||typeof it=="function");
};
}
})();
dojo.lang.isString=function(it){
return (typeof it=="string"||it instanceof String);
};
dojo.lang.isAlien=function(it){
if(!it){
return false;
}
return !dojo.lang.isFunction(it)&&/\{\s*\[native code\]\s*\}/.test(String(it));
};
dojo.lang.isBoolean=function(it){
return (it instanceof Boolean||typeof it=="boolean");
};
dojo.lang.isNumber=function(it){
return (it instanceof Number||typeof it=="number");
};
dojo.lang.isUndefined=function(it){
return ((typeof (it)=="undefined")&&(it==undefined));
};
dojo.provide("dojo.lang");
dojo.deprecated("dojo.lang","replaced by dojo.lang.common","0.5");
dojo.provide("dojo.dom");
dojo.dom.ELEMENT_NODE=1;
dojo.dom.ATTRIBUTE_NODE=2;
dojo.dom.TEXT_NODE=3;
dojo.dom.CDATA_SECTION_NODE=4;
dojo.dom.ENTITY_REFERENCE_NODE=5;
dojo.dom.ENTITY_NODE=6;
dojo.dom.PROCESSING_INSTRUCTION_NODE=7;
dojo.dom.COMMENT_NODE=8;
dojo.dom.DOCUMENT_NODE=9;
dojo.dom.DOCUMENT_TYPE_NODE=10;
dojo.dom.DOCUMENT_FRAGMENT_NODE=11;
dojo.dom.NOTATION_NODE=12;
dojo.dom.dojoml="http://www.dojotoolkit.org/2004/dojoml";
dojo.dom.xmlns={svg:"http://www.w3.org/2000/svg",smil:"http://www.w3.org/2001/SMIL20/",mml:"http://www.w3.org/1998/Math/MathML",cml:"http://www.xml-cml.org",xlink:"http://www.w3.org/1999/xlink",xhtml:"http://www.w3.org/1999/xhtml",xul:"http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul",xbl:"http://www.mozilla.org/xbl",fo:"http://www.w3.org/1999/XSL/Format",xsl:"http://www.w3.org/1999/XSL/Transform",xslt:"http://www.w3.org/1999/XSL/Transform",xi:"http://www.w3.org/2001/XInclude",xforms:"http://www.w3.org/2002/01/xforms",saxon:"http://icl.com/saxon",xalan:"http://xml.apache.org/xslt",xsd:"http://www.w3.org/2001/XMLSchema",dt:"http://www.w3.org/2001/XMLSchema-datatypes",xsi:"http://www.w3.org/2001/XMLSchema-instance",rdf:"http://www.w3.org/1999/02/22-rdf-syntax-ns#",rdfs:"http://www.w3.org/2000/01/rdf-schema#",dc:"http://purl.org/dc/elements/1.1/",dcq:"http://purl.org/dc/qualifiers/1.0","soap-env":"http://schemas.xmlsoap.org/soap/envelope/",wsdl:"http://schemas.xmlsoap.org/wsdl/",AdobeExtensions:"http://ns.adobe.com/AdobeSVGViewerExtensions/3.0/"};
dojo.dom.isNode=function(wh){
if(typeof Element=="function"){
try{
return wh instanceof Element;
}
catch(e){
}
}else{
return wh&&!isNaN(wh.nodeType);
}
};
dojo.dom.getUniqueId=function(){
var _11d=dojo.doc();
do{
var id="dj_unique_"+(++arguments.callee._idIncrement);
}while(_11d.getElementById(id));
return id;
};
dojo.dom.getUniqueId._idIncrement=0;
dojo.dom.firstElement=dojo.dom.getFirstChildElement=function(_11f,_120){
var node=_11f.firstChild;
while(node&&node.nodeType!=dojo.dom.ELEMENT_NODE){
node=node.nextSibling;
}
if(_120&&node&&node.tagName&&node.tagName.toLowerCase()!=_120.toLowerCase()){
node=dojo.dom.nextElement(node,_120);
}
return node;
};
dojo.dom.lastElement=dojo.dom.getLastChildElement=function(_122,_123){
var node=_122.lastChild;
while(node&&node.nodeType!=dojo.dom.ELEMENT_NODE){
node=node.previousSibling;
}
if(_123&&node&&node.tagName&&node.tagName.toLowerCase()!=_123.toLowerCase()){
node=dojo.dom.prevElement(node,_123);
}
return node;
};
dojo.dom.nextElement=dojo.dom.getNextSiblingElement=function(node,_126){
if(!node){
return null;
}
do{
node=node.nextSibling;
}while(node&&node.nodeType!=dojo.dom.ELEMENT_NODE);
if(node&&_126&&_126.toLowerCase()!=node.tagName.toLowerCase()){
return dojo.dom.nextElement(node,_126);
}
return node;
};
dojo.dom.prevElement=dojo.dom.getPreviousSiblingElement=function(node,_128){
if(!node){
return null;
}
if(_128){
_128=_128.toLowerCase();
}
do{
node=node.previousSibling;
}while(node&&node.nodeType!=dojo.dom.ELEMENT_NODE);
if(node&&_128&&_128.toLowerCase()!=node.tagName.toLowerCase()){
return dojo.dom.prevElement(node,_128);
}
return node;
};
dojo.dom.moveChildren=function(_129,_12a,trim){
var _12c=0;
if(trim){
while(_129.hasChildNodes()&&_129.firstChild.nodeType==dojo.dom.TEXT_NODE){
_129.removeChild(_129.firstChild);
}
while(_129.hasChildNodes()&&_129.lastChild.nodeType==dojo.dom.TEXT_NODE){
_129.removeChild(_129.lastChild);
}
}
while(_129.hasChildNodes()){
_12a.appendChild(_129.firstChild);
_12c++;
}
return _12c;
};
dojo.dom.copyChildren=function(_12d,_12e,trim){
var _130=_12d.cloneNode(true);
return this.moveChildren(_130,_12e,trim);
};
dojo.dom.replaceChildren=function(node,_132){
var _133=[];
if(dojo.render.html.ie){
for(var i=0;i<node.childNodes.length;i++){
_133.push(node.childNodes[i]);
}
}
dojo.dom.removeChildren(node);
node.appendChild(_132);
for(var i=0;i<_133.length;i++){
dojo.dom.destroyNode(_133[i]);
}
};
dojo.dom.removeChildren=function(node){
var _136=node.childNodes.length;
while(node.hasChildNodes()){
dojo.dom.removeNode(node.firstChild);
}
return _136;
};
dojo.dom.replaceNode=function(node,_138){
return node.parentNode.replaceChild(_138,node);
};
dojo.dom.destroyNode=function(node){
if(node.parentNode){
node=dojo.dom.removeNode(node);
}
if(node.nodeType!=3){
if(dojo.evalObjPath("dojo.event.browser.clean",false)){
dojo.event.browser.clean(node);
}
if(dojo.render.html.ie){
node.outerHTML="";
}
}
};
dojo.dom.removeNode=function(node){
if(node&&node.parentNode){
return node.parentNode.removeChild(node);
}
};
dojo.dom.getAncestors=function(node,_13c,_13d){
var _13e=[];
var _13f=(_13c&&(_13c instanceof Function||typeof _13c=="function"));
while(node){
if(!_13f||_13c(node)){
_13e.push(node);
}
if(_13d&&_13e.length>0){
return _13e[0];
}
node=node.parentNode;
}
if(_13d){
return null;
}
return _13e;
};
dojo.dom.getAncestorsByTag=function(node,tag,_142){
tag=tag.toLowerCase();
return dojo.dom.getAncestors(node,function(el){
return ((el.tagName)&&(el.tagName.toLowerCase()==tag));
},_142);
};
dojo.dom.getFirstAncestorByTag=function(node,tag){
return dojo.dom.getAncestorsByTag(node,tag,true);
};
dojo.dom.isDescendantOf=function(node,_147,_148){
if(_148&&node){
node=node.parentNode;
}
while(node){
if(node==_147){
return true;
}
node=node.parentNode;
}
return false;
};
dojo.dom.innerXML=function(node){
if(node.innerXML){
return node.innerXML;
}else{
if(node.xml){
return node.xml;
}else{
if(typeof XMLSerializer!="undefined"){
return (new XMLSerializer()).serializeToString(node);
}
}
}
};
dojo.dom.createDocument=function(){
var doc=null;
var _14b=dojo.doc();
if(!dj_undef("ActiveXObject")){
var _14c=["MSXML2","Microsoft","MSXML","MSXML3"];
for(var i=0;i<_14c.length;i++){
try{
doc=new ActiveXObject(_14c[i]+".XMLDOM");
}
catch(e){
}
if(doc){
break;
}
}
}else{
if((_14b.implementation)&&(_14b.implementation.createDocument)){
doc=_14b.implementation.createDocument("","",null);
}
}
return doc;
};
dojo.dom.createDocumentFromText=function(str,_14f){
if(!_14f){
_14f="text/xml";
}
if(!dj_undef("DOMParser")){
var _150=new DOMParser();
return _150.parseFromString(str,_14f);
}else{
if(!dj_undef("ActiveXObject")){
var _151=dojo.dom.createDocument();
if(_151){
_151.async=false;
_151.loadXML(str);
return _151;
}else{
dojo.debug("toXml didn't work?");
}
}else{
var _152=dojo.doc();
if(_152.createElement){
var tmp=_152.createElement("xml");
tmp.innerHTML=str;
if(_152.implementation&&_152.implementation.createDocument){
var _154=_152.implementation.createDocument("foo","",null);
for(var i=0;i<tmp.childNodes.length;i++){
_154.importNode(tmp.childNodes.item(i),true);
}
return _154;
}
return ((tmp.document)&&(tmp.document.firstChild?tmp.document.firstChild:tmp));
}
}
}
return null;
};
dojo.dom.prependChild=function(node,_157){
if(_157.firstChild){
_157.insertBefore(node,_157.firstChild);
}else{
_157.appendChild(node);
}
return true;
};
dojo.dom.insertBefore=function(node,ref,_15a){
if((_15a!=true)&&(node===ref||node.nextSibling===ref)){
return false;
}
var _15b=ref.parentNode;
_15b.insertBefore(node,ref);
return true;
};
dojo.dom.insertAfter=function(node,ref,_15e){
var pn=ref.parentNode;
if(ref==pn.lastChild){
if((_15e!=true)&&(node===ref)){
return false;
}
pn.appendChild(node);
}else{
return this.insertBefore(node,ref.nextSibling,_15e);
}
return true;
};
dojo.dom.insertAtPosition=function(node,ref,_162){
if((!node)||(!ref)||(!_162)){
return false;
}
switch(_162.toLowerCase()){
case "before":
return dojo.dom.insertBefore(node,ref);
case "after":
return dojo.dom.insertAfter(node,ref);
case "first":
if(ref.firstChild){
return dojo.dom.insertBefore(node,ref.firstChild);
}else{
ref.appendChild(node);
return true;
}
break;
default:
ref.appendChild(node);
return true;
}
};
dojo.dom.insertAtIndex=function(node,_164,_165){
var _166=_164.childNodes;
if(!_166.length||_166.length==_165){
_164.appendChild(node);
return true;
}
if(_165==0){
return dojo.dom.prependChild(node,_164);
}
return dojo.dom.insertAfter(node,_166[_165-1]);
};
dojo.dom.textContent=function(node,text){
if(arguments.length>1){
var _169=dojo.doc();
dojo.dom.replaceChildren(node,_169.createTextNode(text));
return text;
}else{
if(node.textContent!=undefined){
return node.textContent;
}
var _16a="";
if(node==null){
return _16a;
}
for(var i=0;i<node.childNodes.length;i++){
switch(node.childNodes[i].nodeType){
case 1:
case 5:
_16a+=dojo.dom.textContent(node.childNodes[i]);
break;
case 3:
case 2:
case 4:
_16a+=node.childNodes[i].nodeValue;
break;
default:
break;
}
}
return _16a;
}
};
dojo.dom.hasParent=function(node){
return Boolean(node&&node.parentNode&&dojo.dom.isNode(node.parentNode));
};
dojo.dom.isTag=function(node){
if(node&&node.tagName){
for(var i=1;i<arguments.length;i++){
if(node.tagName==String(arguments[i])){
return String(arguments[i]);
}
}
}
return "";
};
dojo.dom.setAttributeNS=function(elem,_170,_171,_172){
if(elem==null||((elem==undefined)&&(typeof elem=="undefined"))){
dojo.raise("No element given to dojo.dom.setAttributeNS");
}
if(!((elem.setAttributeNS==undefined)&&(typeof elem.setAttributeNS=="undefined"))){
elem.setAttributeNS(_170,_171,_172);
}else{
var _173=elem.ownerDocument;
var _174=_173.createNode(2,_171,_170);
_174.nodeValue=_172;
elem.setAttributeNode(_174);
}
};
dojo.provide("dojo.html.common");
dojo.lang.mixin(dojo.html,dojo.dom);
dojo.html.body=function(){
dojo.deprecated("dojo.html.body() moved to dojo.body()","0.5");
return dojo.body();
};
dojo.html.getEventTarget=function(evt){
if(!evt){
evt=dojo.global().event||{};
}
var t=(evt.srcElement?evt.srcElement:(evt.target?evt.target:null));
while((t)&&(t.nodeType!=1)){
t=t.parentNode;
}
return t;
};
dojo.html.getViewport=function(){
var _177=dojo.global();
var _178=dojo.doc();
var w=0;
var h=0;
if(dojo.render.html.mozilla){
w=_178.documentElement.clientWidth;
h=_177.innerHeight;
}else{
if(!dojo.render.html.opera&&_177.innerWidth){
w=_177.innerWidth;
h=_177.innerHeight;
}else{
if(!dojo.render.html.opera&&dojo.exists(_178,"documentElement.clientWidth")){
var w2=_178.documentElement.clientWidth;
if(!w||w2&&w2<w){
w=w2;
}
h=_178.documentElement.clientHeight;
}else{
if(dojo.body().clientWidth){
w=dojo.body().clientWidth;
h=dojo.body().clientHeight;
}
}
}
}
return {width:w,height:h};
};
dojo.html.getScroll=function(){
var _17c=dojo.global();
var _17d=dojo.doc();
var top=_17c.pageYOffset||_17d.documentElement.scrollTop||dojo.body().scrollTop||0;
var left=_17c.pageXOffset||_17d.documentElement.scrollLeft||dojo.body().scrollLeft||0;
return {top:top,left:left,offset:{x:left,y:top}};
};
dojo.html.getParentByType=function(node,type){
var _182=dojo.doc();
var _183=dojo.byId(node);
type=type.toLowerCase();
while((_183)&&(_183.nodeName.toLowerCase()!=type)){
if(_183==(_182["body"]||_182["documentElement"])){
return null;
}
_183=_183.parentNode;
}
return _183;
};
dojo.html.getAttribute=function(node,attr){
node=dojo.byId(node);
if((!node)||(!node.getAttribute)){
return null;
}
var ta=typeof attr=="string"?attr:new String(attr);
var v=node.getAttribute(ta.toUpperCase());
if((v)&&(typeof v=="string")&&(v!="")){
return v;
}
if(v&&v.value){
return v.value;
}
if((node.getAttributeNode)&&(node.getAttributeNode(ta))){
return (node.getAttributeNode(ta)).value;
}else{
if(node.getAttribute(ta)){
return node.getAttribute(ta);
}else{
if(node.getAttribute(ta.toLowerCase())){
return node.getAttribute(ta.toLowerCase());
}
}
}
return null;
};
dojo.html.hasAttribute=function(node,attr){
return dojo.html.getAttribute(dojo.byId(node),attr)?true:false;
};
dojo.html.getCursorPosition=function(e){
e=e||dojo.global().event;
var _18b={x:0,y:0};
if(e.pageX||e.pageY){
_18b.x=e.pageX;
_18b.y=e.pageY;
}else{
var de=dojo.doc().documentElement;
var db=dojo.body();
_18b.x=e.clientX+((de||db)["scrollLeft"])-((de||db)["clientLeft"]);
_18b.y=e.clientY+((de||db)["scrollTop"])-((de||db)["clientTop"]);
}
return _18b;
};
dojo.html.isTag=function(node){
node=dojo.byId(node);
if(node&&node.tagName){
for(var i=1;i<arguments.length;i++){
if(node.tagName.toLowerCase()==String(arguments[i]).toLowerCase()){
return String(arguments[i]).toLowerCase();
}
}
}
return "";
};
if(dojo.render.html.ie&&!dojo.render.html.ie70){
if(window.location.href.substr(0,6).toLowerCase()!="https:"){
(function(){
var _190=dojo.doc().createElement("script");
_190.src="javascript:'dojo.html.createExternalElement=function(doc, tag){ return doc.createElement(tag); }'";
dojo.doc().getElementsByTagName("head")[0].appendChild(_190);
})();
}
}else{
dojo.html.createExternalElement=function(doc,tag){
return doc.createElement(tag);
};
}
dojo.html._callDeprecated=function(_193,_194,args,_196,_197){
dojo.deprecated("dojo.html."+_193,"replaced by dojo.html."+_194+"("+(_196?"node, {"+_196+": "+_196+"}":"")+")"+(_197?"."+_197:""),"0.5");
var _198=[];
if(_196){
var _199={};
_199[_196]=args[1];
_198.push(args[0]);
_198.push(_199);
}else{
_198=args;
}
var ret=dojo.html[_194].apply(dojo.html,args);
if(_197){
return ret[_197];
}else{
return ret;
}
};
dojo.html.getViewportWidth=function(){
return dojo.html._callDeprecated("getViewportWidth","getViewport",arguments,null,"width");
};
dojo.html.getViewportHeight=function(){
return dojo.html._callDeprecated("getViewportHeight","getViewport",arguments,null,"height");
};
dojo.html.getViewportSize=function(){
return dojo.html._callDeprecated("getViewportSize","getViewport",arguments);
};
dojo.html.getScrollTop=function(){
return dojo.html._callDeprecated("getScrollTop","getScroll",arguments,null,"top");
};
dojo.html.getScrollLeft=function(){
return dojo.html._callDeprecated("getScrollLeft","getScroll",arguments,null,"left");
};
dojo.html.getScrollOffset=function(){
return dojo.html._callDeprecated("getScrollOffset","getScroll",arguments,null,"offset");
};
dojo.provide("dojo.uri.Uri");
dojo.uri=new function(){
this.dojoUri=function(uri){
return new dojo.uri.Uri(dojo.hostenv.getBaseScriptUri(),uri);
};
this.moduleUri=function(_19c,uri){
var loc=dojo.hostenv.getModuleSymbols(_19c).join("/");
if(!loc){
return null;
}
if(loc.lastIndexOf("/")!=loc.length-1){
loc+="/";
}
return new dojo.uri.Uri(dojo.hostenv.getBaseScriptUri()+loc,uri);
};
this.Uri=function(){
var uri=arguments[0];
for(var i=1;i<arguments.length;i++){
if(!arguments[i]){
continue;
}
var _1a1=new dojo.uri.Uri(arguments[i].toString());
var _1a2=new dojo.uri.Uri(uri.toString());
if((_1a1.path=="")&&(_1a1.scheme==null)&&(_1a1.authority==null)&&(_1a1.query==null)){
if(_1a1.fragment!=null){
_1a2.fragment=_1a1.fragment;
}
_1a1=_1a2;
}else{
if(_1a1.scheme==null){
_1a1.scheme=_1a2.scheme;
if(_1a1.authority==null){
_1a1.authority=_1a2.authority;
if(_1a1.path.charAt(0)!="/"){
var path=_1a2.path.substring(0,_1a2.path.lastIndexOf("/")+1)+_1a1.path;
var segs=path.split("/");
for(var j=0;j<segs.length;j++){
if(segs[j]=="."){
if(j==segs.length-1){
segs[j]="";
}else{
segs.splice(j,1);
j--;
}
}else{
if(j>0&&!(j==1&&segs[0]=="")&&segs[j]==".."&&segs[j-1]!=".."){
if(j==segs.length-1){
segs.splice(j,1);
segs[j-1]="";
}else{
segs.splice(j-1,2);
j-=2;
}
}
}
}
_1a1.path=segs.join("/");
}
}
}
}
uri="";
if(_1a1.scheme!=null){
uri+=_1a1.scheme+":";
}
if(_1a1.authority!=null){
uri+="//"+_1a1.authority;
}
uri+=_1a1.path;
if(_1a1.query!=null){
uri+="?"+_1a1.query;
}
if(_1a1.fragment!=null){
uri+="#"+_1a1.fragment;
}
}
this.uri=uri.toString();
var _1a6="^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$";
var r=this.uri.match(new RegExp(_1a6));
this.scheme=r[2]||(r[1]?"":null);
this.authority=r[4]||(r[3]?"":null);
this.path=r[5];
this.query=r[7]||(r[6]?"":null);
this.fragment=r[9]||(r[8]?"":null);
if(this.authority!=null){
_1a6="^((([^:]+:)?([^@]+))@)?([^:]*)(:([0-9]+))?$";
r=this.authority.match(new RegExp(_1a6));
this.user=r[3]||null;
this.password=r[4]||null;
this.host=r[5];
this.port=r[7]||null;
}
this.toString=function(){
return this.uri;
};
};
};
dojo.provide("dojo.html.style");
dojo.html.getClass=function(node){
node=dojo.byId(node);
if(!node){
return "";
}
var cs="";
if(node.className){
cs=node.className;
}else{
if(dojo.html.hasAttribute(node,"class")){
cs=dojo.html.getAttribute(node,"class");
}
}
return cs.replace(/^\s+|\s+$/g,"");
};
dojo.html.getClasses=function(node){
var c=dojo.html.getClass(node);
return (c=="")?[]:c.split(/\s+/g);
};
dojo.html.hasClass=function(node,_1ad){
return (new RegExp("(^|\\s+)"+_1ad+"(\\s+|$)")).test(dojo.html.getClass(node));
};
dojo.html.prependClass=function(node,_1af){
_1af+=" "+dojo.html.getClass(node);
return dojo.html.setClass(node,_1af);
};
dojo.html.addClass=function(node,_1b1){
if(dojo.html.hasClass(node,_1b1)){
return false;
}
_1b1=(dojo.html.getClass(node)+" "+_1b1).replace(/^\s+|\s+$/g,"");
return dojo.html.setClass(node,_1b1);
};
dojo.html.setClass=function(node,_1b3){
node=dojo.byId(node);
var cs=new String(_1b3);
try{
if(typeof node.className=="string"){
node.className=cs;
}else{
if(node.setAttribute){
node.setAttribute("class",_1b3);
node.className=cs;
}else{
return false;
}
}
}
catch(e){
dojo.debug("dojo.html.setClass() failed",e);
}
return true;
};
dojo.html.removeClass=function(node,_1b6,_1b7){
try{
if(!_1b7){
var _1b8=dojo.html.getClass(node).replace(new RegExp("(^|\\s+)"+_1b6+"(\\s+|$)"),"$1$2");
}else{
var _1b8=dojo.html.getClass(node).replace(_1b6,"");
}
dojo.html.setClass(node,_1b8);
}
catch(e){
dojo.debug("dojo.html.removeClass() failed",e);
}
return true;
};
dojo.html.replaceClass=function(node,_1ba,_1bb){
dojo.html.removeClass(node,_1bb);
dojo.html.addClass(node,_1ba);
};
dojo.html.classMatchType={ContainsAll:0,ContainsAny:1,IsOnly:2};
dojo.html.getElementsByClass=function(_1bc,_1bd,_1be,_1bf,_1c0){
_1c0=false;
var _1c1=dojo.doc();
_1bd=dojo.byId(_1bd)||_1c1;
var _1c2=_1bc.split(/\s+/g);
var _1c3=[];
if(_1bf!=1&&_1bf!=2){
_1bf=0;
}
var _1c4=new RegExp("(\\s|^)(("+_1c2.join(")|(")+"))(\\s|$)");
var _1c5=_1c2.join(" ").length;
var _1c6=[];
if(!_1c0&&_1c1.evaluate){
var _1c7=".//"+(_1be||"*")+"[contains(";
if(_1bf!=dojo.html.classMatchType.ContainsAny){
_1c7+="concat(' ',@class,' '), ' "+_1c2.join(" ') and contains(concat(' ',@class,' '), ' ")+" ')";
if(_1bf==2){
_1c7+=" and string-length(@class)="+_1c5+"]";
}else{
_1c7+="]";
}
}else{
_1c7+="concat(' ',@class,' '), ' "+_1c2.join(" ') or contains(concat(' ',@class,' '), ' ")+" ')]";
}
var _1c8=_1c1.evaluate(_1c7,_1bd,null,XPathResult.ANY_TYPE,null);
var _1c9=_1c8.iterateNext();
while(_1c9){
try{
_1c6.push(_1c9);
_1c9=_1c8.iterateNext();
}
catch(e){
break;
}
}
return _1c6;
}else{
if(!_1be){
_1be="*";
}
_1c6=_1bd.getElementsByTagName(_1be);
var node,i=0;
outer:
while(node=_1c6[i++]){
var _1cc=dojo.html.getClasses(node);
if(_1cc.length==0){
continue outer;
}
var _1cd=0;
for(var j=0;j<_1cc.length;j++){
if(_1c4.test(_1cc[j])){
if(_1bf==dojo.html.classMatchType.ContainsAny){
_1c3.push(node);
continue outer;
}else{
_1cd++;
}
}else{
if(_1bf==dojo.html.classMatchType.IsOnly){
continue outer;
}
}
}
if(_1cd==_1c2.length){
if((_1bf==dojo.html.classMatchType.IsOnly)&&(_1cd==_1cc.length)){
_1c3.push(node);
}else{
if(_1bf==dojo.html.classMatchType.ContainsAll){
_1c3.push(node);
}
}
}
}
return _1c3;
}
};
dojo.html.getElementsByClassName=dojo.html.getElementsByClass;
dojo.html.toCamelCase=function(_1cf){
var arr=_1cf.split("-"),cc=arr[0];
for(var i=1;i<arr.length;i++){
cc+=arr[i].charAt(0).toUpperCase()+arr[i].substring(1);
}
return cc;
};
dojo.html.toSelectorCase=function(_1d3){
return _1d3.replace(/([A-Z])/g,"-$1").toLowerCase();
};
dojo.html.getComputedStyle=function(node,_1d5,_1d6){
node=dojo.byId(node);
var _1d5=dojo.html.toSelectorCase(_1d5);
var _1d7=dojo.html.toCamelCase(_1d5);
if(!node||!node.style){
return _1d6;
}else{
if(document.defaultView&&dojo.html.isDescendantOf(node,node.ownerDocument)){
try{
var cs=document.defaultView.getComputedStyle(node,"");
if(cs){
return cs.getPropertyValue(_1d5);
}
}
catch(e){
if(node.style.getPropertyValue){
return node.style.getPropertyValue(_1d5);
}else{
return _1d6;
}
}
}else{
if(node.currentStyle){
return node.currentStyle[_1d7];
}
}
}
if(node.style.getPropertyValue){
return node.style.getPropertyValue(_1d5);
}else{
return _1d6;
}
};
dojo.html.getStyleProperty=function(node,_1da){
node=dojo.byId(node);
return (node&&node.style?node.style[dojo.html.toCamelCase(_1da)]:undefined);
};
dojo.html.getStyle=function(node,_1dc){
var _1dd=dojo.html.getStyleProperty(node,_1dc);
return (_1dd?_1dd:dojo.html.getComputedStyle(node,_1dc));
};
dojo.html.setStyle=function(node,_1df,_1e0){
node=dojo.byId(node);
if(node&&node.style){
var _1e1=dojo.html.toCamelCase(_1df);
node.style[_1e1]=_1e0;
}
};
dojo.html.setStyleText=function(_1e2,text){
try{
_1e2.style.cssText=text;
}
catch(e){
_1e2.setAttribute("style",text);
}
};
dojo.html.copyStyle=function(_1e4,_1e5){
if(!_1e5.style.cssText){
_1e4.setAttribute("style",_1e5.getAttribute("style"));
}else{
_1e4.style.cssText=_1e5.style.cssText;
}
dojo.html.addClass(_1e4,dojo.html.getClass(_1e5));
};
dojo.html.getUnitValue=function(node,_1e7,_1e8){
var s=dojo.html.getComputedStyle(node,_1e7);
if((!s)||((s=="auto")&&(_1e8))){
return {value:0,units:"px"};
}
var _1ea=s.match(/(\-?[\d.]+)([a-z%]*)/i);
if(!_1ea){
return dojo.html.getUnitValue.bad;
}
return {value:Number(_1ea[1]),units:_1ea[2].toLowerCase()};
};
dojo.html.getUnitValue.bad={value:NaN,units:""};
dojo.html.getPixelValue=function(node,_1ec,_1ed){
var _1ee=dojo.html.getUnitValue(node,_1ec,_1ed);
if(isNaN(_1ee.value)){
return 0;
}
if((_1ee.value)&&(_1ee.units!="px")){
return NaN;
}
return _1ee.value;
};
dojo.html.setPositivePixelValue=function(node,_1f0,_1f1){
if(isNaN(_1f1)){
return false;
}
node.style[_1f0]=Math.max(0,_1f1)+"px";
return true;
};
dojo.html.styleSheet=null;
dojo.html.insertCssRule=function(_1f2,_1f3,_1f4){
if(!dojo.html.styleSheet){
if(document.createStyleSheet){
dojo.html.styleSheet=document.createStyleSheet();
}else{
if(document.styleSheets[0]){
dojo.html.styleSheet=document.styleSheets[0];
}else{
return null;
}
}
}
if(arguments.length<3){
if(dojo.html.styleSheet.cssRules){
_1f4=dojo.html.styleSheet.cssRules.length;
}else{
if(dojo.html.styleSheet.rules){
_1f4=dojo.html.styleSheet.rules.length;
}else{
return null;
}
}
}
if(dojo.html.styleSheet.insertRule){
var rule=_1f2+" { "+_1f3+" }";
return dojo.html.styleSheet.insertRule(rule,_1f4);
}else{
if(dojo.html.styleSheet.addRule){
return dojo.html.styleSheet.addRule(_1f2,_1f3,_1f4);
}else{
return null;
}
}
};
dojo.html.removeCssRule=function(_1f6){
if(!dojo.html.styleSheet){
dojo.debug("no stylesheet defined for removing rules");
return false;
}
if(dojo.render.html.ie){
if(!_1f6){
_1f6=dojo.html.styleSheet.rules.length;
dojo.html.styleSheet.removeRule(_1f6);
}
}else{
if(document.styleSheets[0]){
if(!_1f6){
_1f6=dojo.html.styleSheet.cssRules.length;
}
dojo.html.styleSheet.deleteRule(_1f6);
}
}
return true;
};
dojo.html._insertedCssFiles=[];
dojo.html.insertCssFile=function(URI,doc,_1f9,_1fa){
if(!URI){
return;
}
if(!doc){
doc=document;
}
var _1fb=dojo.hostenv.getText(URI,false,_1fa);
if(_1fb===null){
return;
}
_1fb=dojo.html.fixPathsInCssText(_1fb,URI);
if(_1f9){
var idx=-1,node,ent=dojo.html._insertedCssFiles;
for(var i=0;i<ent.length;i++){
if((ent[i].doc==doc)&&(ent[i].cssText==_1fb)){
idx=i;
node=ent[i].nodeRef;
break;
}
}
if(node){
var _200=doc.getElementsByTagName("style");
for(var i=0;i<_200.length;i++){
if(_200[i]==node){
return;
}
}
dojo.html._insertedCssFiles.shift(idx,1);
}
}
var _201=dojo.html.insertCssText(_1fb,doc);
dojo.html._insertedCssFiles.push({"doc":doc,"cssText":_1fb,"nodeRef":_201});
if(_201&&djConfig.isDebug){
_201.setAttribute("dbgHref",URI);
}
return _201;
};
dojo.html.insertCssText=function(_202,doc,URI){
if(!_202){
return;
}
if(!doc){
doc=document;
}
if(URI){
_202=dojo.html.fixPathsInCssText(_202,URI);
}
var _205=doc.createElement("style");
_205.setAttribute("type","text/css");
var head=doc.getElementsByTagName("head")[0];
if(!head){
dojo.debug("No head tag in document, aborting styles");
return;
}else{
head.appendChild(_205);
}
if(_205.styleSheet){
var _207=function(){
try{
_205.styleSheet.cssText=_202;
}
catch(e){
dojo.debug(e);
}
};
if(_205.styleSheet.disabled){
setTimeout(_207,10);
}else{
_207();
}
}else{
var _208=doc.createTextNode(_202);
_205.appendChild(_208);
}
return _205;
};
dojo.html.fixPathsInCssText=function(_209,URI){
if(!_209||!URI){
return;
}
var _20b,str="",url="",_20e="[\\t\\s\\w\\(\\)\\/\\.\\\\'\"-:#=&?~]+";
var _20f=new RegExp("url\\(\\s*("+_20e+")\\s*\\)");
var _210=/(file|https?|ftps?):\/\//;
regexTrim=new RegExp("^[\\s]*(['\"]?)("+_20e+")\\1[\\s]*?$");
if(dojo.render.html.ie55||dojo.render.html.ie60){
var _211=new RegExp("AlphaImageLoader\\((.*)src=['\"]("+_20e+")['\"]");
while(_20b=_211.exec(_209)){
url=_20b[2].replace(regexTrim,"$2");
if(!_210.exec(url)){
url=(new dojo.uri.Uri(URI,url).toString());
}
str+=_209.substring(0,_20b.index)+"AlphaImageLoader("+_20b[1]+"src='"+url+"'";
_209=_209.substr(_20b.index+_20b[0].length);
}
_209=str+_209;
str="";
}
while(_20b=_20f.exec(_209)){
url=_20b[1].replace(regexTrim,"$2");
if(!_210.exec(url)){
url=(new dojo.uri.Uri(URI,url).toString());
}
str+=_209.substring(0,_20b.index)+"url("+url+")";
_209=_209.substr(_20b.index+_20b[0].length);
}
return str+_209;
};
dojo.html.setActiveStyleSheet=function(_212){
var i=0,a,els=dojo.doc().getElementsByTagName("link");
while(a=els[i++]){
if(a.getAttribute("rel").indexOf("style")!=-1&&a.getAttribute("title")){
a.disabled=true;
if(a.getAttribute("title")==_212){
a.disabled=false;
}
}
}
};
dojo.html.getActiveStyleSheet=function(){
var i=0,a,els=dojo.doc().getElementsByTagName("link");
while(a=els[i++]){
if(a.getAttribute("rel").indexOf("style")!=-1&&a.getAttribute("title")&&!a.disabled){
return a.getAttribute("title");
}
}
return null;
};
dojo.html.getPreferredStyleSheet=function(){
var i=0,a,els=dojo.doc().getElementsByTagName("link");
while(a=els[i++]){
if(a.getAttribute("rel").indexOf("style")!=-1&&a.getAttribute("rel").indexOf("alt")==-1&&a.getAttribute("title")){
return a.getAttribute("title");
}
}
return null;
};
dojo.html.applyBrowserClass=function(node){
var drh=dojo.render.html;
var _21e={dj_ie:drh.ie,dj_ie55:drh.ie55,dj_ie6:drh.ie60,dj_ie7:drh.ie70,dj_iequirks:drh.ie&&drh.quirks,dj_opera:drh.opera,dj_opera8:drh.opera&&(Math.floor(dojo.render.version)==8),dj_opera9:drh.opera&&(Math.floor(dojo.render.version)==9),dj_khtml:drh.khtml,dj_safari:drh.safari,dj_gecko:drh.mozilla};
for(var p in _21e){
if(_21e[p]){
dojo.html.addClass(node,p);
}
}
};
dojo.provide("dojo.html.*");
dojo.provide("dojo.html.display");
dojo.html._toggle=function(node,_221,_222){
node=dojo.byId(node);
_222(node,!_221(node));
return _221(node);
};
dojo.html.show=function(node){
node=dojo.byId(node);
if(dojo.html.getStyleProperty(node,"display")=="none"){
dojo.html.setStyle(node,"display",(node.dojoDisplayCache||""));
node.dojoDisplayCache=undefined;
}
};
dojo.html.hide=function(node){
node=dojo.byId(node);
if(typeof node["dojoDisplayCache"]=="undefined"){
var d=dojo.html.getStyleProperty(node,"display");
if(d!="none"){
node.dojoDisplayCache=d;
}
}
dojo.html.setStyle(node,"display","none");
};
dojo.html.setShowing=function(node,_227){
dojo.html[(_227?"show":"hide")](node);
};
dojo.html.isShowing=function(node){
return (dojo.html.getStyleProperty(node,"display")!="none");
};
dojo.html.toggleShowing=function(node){
return dojo.html._toggle(node,dojo.html.isShowing,dojo.html.setShowing);
};
dojo.html.displayMap={tr:"",td:"",th:"",img:"inline",span:"inline",input:"inline",button:"inline"};
dojo.html.suggestDisplayByTagName=function(node){
node=dojo.byId(node);
if(node&&node.tagName){
var tag=node.tagName.toLowerCase();
return (tag in dojo.html.displayMap?dojo.html.displayMap[tag]:"block");
}
};
dojo.html.setDisplay=function(node,_22d){
dojo.html.setStyle(node,"display",((_22d instanceof String||typeof _22d=="string")?_22d:(_22d?dojo.html.suggestDisplayByTagName(node):"none")));
};
dojo.html.isDisplayed=function(node){
return (dojo.html.getComputedStyle(node,"display")!="none");
};
dojo.html.toggleDisplay=function(node){
return dojo.html._toggle(node,dojo.html.isDisplayed,dojo.html.setDisplay);
};
dojo.html.setVisibility=function(node,_231){
dojo.html.setStyle(node,"visibility",((_231 instanceof String||typeof _231=="string")?_231:(_231?"visible":"hidden")));
};
dojo.html.isVisible=function(node){
return (dojo.html.getComputedStyle(node,"visibility")!="hidden");
};
dojo.html.toggleVisibility=function(node){
return dojo.html._toggle(node,dojo.html.isVisible,dojo.html.setVisibility);
};
dojo.html.setOpacity=function(node,_235,_236){
node=dojo.byId(node);
var h=dojo.render.html;
if(!_236){
if(_235>=1){
if(h.ie){
dojo.html.clearOpacity(node);
return;
}else{
_235=0.999999;
}
}else{
if(_235<0){
_235=0;
}
}
}
if(h.ie){
if(node.nodeName.toLowerCase()=="tr"){
var tds=node.getElementsByTagName("td");
for(var x=0;x<tds.length;x++){
tds[x].style.filter="Alpha(Opacity="+_235*100+")";
}
}
node.style.filter="Alpha(Opacity="+_235*100+")";
}else{
if(h.moz){
node.style.opacity=_235;
node.style.MozOpacity=_235;
}else{
if(h.safari){
node.style.opacity=_235;
node.style.KhtmlOpacity=_235;
}else{
node.style.opacity=_235;
}
}
}
};
dojo.html.clearOpacity=function(node){
node=dojo.byId(node);
var ns=node.style;
var h=dojo.render.html;
if(h.ie){
try{
if(node.filters&&node.filters.alpha){
ns.filter="";
}
}
catch(e){
}
}else{
if(h.moz){
ns.opacity=1;
ns.MozOpacity=1;
}else{
if(h.safari){
ns.opacity=1;
ns.KhtmlOpacity=1;
}else{
ns.opacity=1;
}
}
}
};
dojo.html.getOpacity=function(node){
node=dojo.byId(node);
var h=dojo.render.html;
if(h.ie){
var opac=(node.filters&&node.filters.alpha&&typeof node.filters.alpha.opacity=="number"?node.filters.alpha.opacity:100)/100;
}else{
var opac=node.style.opacity||node.style.MozOpacity||node.style.KhtmlOpacity||1;
}
return opac>=0.999999?1:Number(opac);
};
dojo.provide("dojo.html.layout");
dojo.html.sumAncestorProperties=function(node,prop){
node=dojo.byId(node);
if(!node){
return 0;
}
var _242=0;
while(node){
if(dojo.html.getComputedStyle(node,"position")=="fixed"){
return 0;
}
var val=node[prop];
if(val){
_242+=val-0;
if(node==dojo.body()){
break;
}
}
node=node.parentNode;
}
return _242;
};
dojo.html.setStyleAttributes=function(node,_245){
node=dojo.byId(node);
var _246=_245.replace(/(;)?\s*$/,"").split(";");
for(var i=0;i<_246.length;i++){
var _248=_246[i].split(":");
var name=_248[0].replace(/\s*$/,"").replace(/^\s*/,"").toLowerCase();
var _24a=_248[1].replace(/\s*$/,"").replace(/^\s*/,"");
switch(name){
case "opacity":
dojo.html.setOpacity(node,_24a);
break;
case "content-height":
dojo.html.setContentBox(node,{height:_24a});
break;
case "content-width":
dojo.html.setContentBox(node,{width:_24a});
break;
case "outer-height":
dojo.html.setMarginBox(node,{height:_24a});
break;
case "outer-width":
dojo.html.setMarginBox(node,{width:_24a});
break;
default:
node.style[dojo.html.toCamelCase(name)]=_24a;
}
}
};
dojo.html.boxSizing={MARGIN_BOX:"margin-box",BORDER_BOX:"border-box",PADDING_BOX:"padding-box",CONTENT_BOX:"content-box"};
dojo.html.getAbsolutePosition=dojo.html.abs=function(node,_24c,_24d){
node=dojo.byId(node,node.ownerDocument);
var ret={x:0,y:0};
var bs=dojo.html.boxSizing;
if(!_24d){
_24d=bs.CONTENT_BOX;
}
var _250=2;
var _251;
switch(_24d){
case bs.MARGIN_BOX:
_251=3;
break;
case bs.BORDER_BOX:
_251=2;
break;
case bs.PADDING_BOX:
default:
_251=1;
break;
case bs.CONTENT_BOX:
_251=0;
break;
}
var h=dojo.render.html;
var db=document["body"]||document["documentElement"];
if(h.ie){
with(node.getBoundingClientRect()){
ret.x=left-2;
ret.y=top-2;
}
}else{
if(document.getBoxObjectFor){
_250=1;
try{
var bo=document.getBoxObjectFor(node);
ret.x=bo.x-dojo.html.sumAncestorProperties(node,"scrollLeft");
ret.y=bo.y-dojo.html.sumAncestorProperties(node,"scrollTop");
}
catch(e){
}
}else{
if(node["offsetParent"]){
var _255;
if((h.safari)&&(node.style.getPropertyValue("position")=="absolute")&&(node.parentNode==db)){
_255=db;
}else{
_255=db.parentNode;
}
if(node.parentNode!=db){
var nd=node;
if(dojo.render.html.opera){
nd=db;
}
ret.x-=dojo.html.sumAncestorProperties(nd,"scrollLeft");
ret.y-=dojo.html.sumAncestorProperties(nd,"scrollTop");
}
var _257=node;
do{
var n=_257["offsetLeft"];
if(!h.opera||n>0){
ret.x+=isNaN(n)?0:n;
}
var m=_257["offsetTop"];
ret.y+=isNaN(m)?0:m;
_257=_257.offsetParent;
}while((_257!=_255)&&(_257!=null));
}else{
if(node["x"]&&node["y"]){
ret.x+=isNaN(node.x)?0:node.x;
ret.y+=isNaN(node.y)?0:node.y;
}
}
}
}
if(_24c){
var _25a=dojo.html.getScroll();
ret.y+=_25a.top;
ret.x+=_25a.left;
}
var _25b=[dojo.html.getPaddingExtent,dojo.html.getBorderExtent,dojo.html.getMarginExtent];
if(_250>_251){
for(var i=_251;i<_250;++i){
ret.y+=_25b[i](node,"top");
ret.x+=_25b[i](node,"left");
}
}else{
if(_250<_251){
for(var i=_251;i>_250;--i){
ret.y-=_25b[i-1](node,"top");
ret.x-=_25b[i-1](node,"left");
}
}
}
ret.top=ret.y;
ret.left=ret.x;
return ret;
};
dojo.html.isPositionAbsolute=function(node){
return (dojo.html.getComputedStyle(node,"position")=="absolute");
};
dojo.html._sumPixelValues=function(node,_25f,_260){
var _261=0;
for(var x=0;x<_25f.length;x++){
_261+=dojo.html.getPixelValue(node,_25f[x],_260);
}
return _261;
};
dojo.html.getMargin=function(node){
return {width:dojo.html._sumPixelValues(node,["margin-left","margin-right"],(dojo.html.getComputedStyle(node,"position")=="absolute")),height:dojo.html._sumPixelValues(node,["margin-top","margin-bottom"],(dojo.html.getComputedStyle(node,"position")=="absolute"))};
};
dojo.html.getBorder=function(node){
return {width:dojo.html.getBorderExtent(node,"left")+dojo.html.getBorderExtent(node,"right"),height:dojo.html.getBorderExtent(node,"top")+dojo.html.getBorderExtent(node,"bottom")};
};
dojo.html.getBorderExtent=function(node,side){
return (dojo.html.getStyle(node,"border-"+side+"-style")=="none"?0:dojo.html.getPixelValue(node,"border-"+side+"-width"));
};
dojo.html.getMarginExtent=function(node,side){
return dojo.html._sumPixelValues(node,["margin-"+side],dojo.html.isPositionAbsolute(node));
};
dojo.html.getPaddingExtent=function(node,side){
return dojo.html._sumPixelValues(node,["padding-"+side],true);
};
dojo.html.getPadding=function(node){
return {width:dojo.html._sumPixelValues(node,["padding-left","padding-right"],true),height:dojo.html._sumPixelValues(node,["padding-top","padding-bottom"],true)};
};
dojo.html.getPadBorder=function(node){
var pad=dojo.html.getPadding(node);
var _26e=dojo.html.getBorder(node);
return {width:pad.width+_26e.width,height:pad.height+_26e.height};
};
dojo.html.getBoxSizing=function(node){
var h=dojo.render.html;
var bs=dojo.html.boxSizing;
if(((h.ie)||(h.opera))&&node.nodeName!="IMG"){
var cm=document["compatMode"];
if((cm=="BackCompat")||(cm=="QuirksMode")){
return bs.BORDER_BOX;
}else{
return bs.CONTENT_BOX;
}
}else{
if(arguments.length==0){
node=document.documentElement;
}
var _273=dojo.html.getStyle(node,"-moz-box-sizing");
if(!_273){
_273=dojo.html.getStyle(node,"box-sizing");
}
return (_273?_273:bs.CONTENT_BOX);
}
};
dojo.html.isBorderBox=function(node){
return (dojo.html.getBoxSizing(node)==dojo.html.boxSizing.BORDER_BOX);
};
dojo.html.getBorderBox=function(node){
node=dojo.byId(node);
return {width:node.offsetWidth,height:node.offsetHeight};
};
dojo.html.getPaddingBox=function(node){
var box=dojo.html.getBorderBox(node);
var _278=dojo.html.getBorder(node);
return {width:box.width-_278.width,height:box.height-_278.height};
};
dojo.html.getContentBox=function(node){
node=dojo.byId(node);
var _27a=dojo.html.getPadBorder(node);
return {width:node.offsetWidth-_27a.width,height:node.offsetHeight-_27a.height};
};
dojo.html.setContentBox=function(node,args){
node=dojo.byId(node);
var _27d=0;
var _27e=0;
var isbb=dojo.html.isBorderBox(node);
var _280=(isbb?dojo.html.getPadBorder(node):{width:0,height:0});
var ret={};
if(typeof args.width!="undefined"){
_27d=args.width+_280.width;
ret.width=dojo.html.setPositivePixelValue(node,"width",_27d);
}
if(typeof args.height!="undefined"){
_27e=args.height+_280.height;
ret.height=dojo.html.setPositivePixelValue(node,"height",_27e);
}
return ret;
};
dojo.html.getMarginBox=function(node){
var _283=dojo.html.getBorderBox(node);
var _284=dojo.html.getMargin(node);
return {width:_283.width+_284.width,height:_283.height+_284.height};
};
dojo.html.setMarginBox=function(node,args){
node=dojo.byId(node);
var _287=0;
var _288=0;
var isbb=dojo.html.isBorderBox(node);
var _28a=(!isbb?dojo.html.getPadBorder(node):{width:0,height:0});
var _28b=dojo.html.getMargin(node);
var ret={};
if(typeof args.width!="undefined"){
_287=args.width-_28a.width;
_287-=_28b.width;
ret.width=dojo.html.setPositivePixelValue(node,"width",_287);
}
if(typeof args.height!="undefined"){
_288=args.height-_28a.height;
_288-=_28b.height;
ret.height=dojo.html.setPositivePixelValue(node,"height",_288);
}
return ret;
};
dojo.html.getElementBox=function(node,type){
var bs=dojo.html.boxSizing;
switch(type){
case bs.MARGIN_BOX:
return dojo.html.getMarginBox(node);
case bs.BORDER_BOX:
return dojo.html.getBorderBox(node);
case bs.PADDING_BOX:
return dojo.html.getPaddingBox(node);
case bs.CONTENT_BOX:
default:
return dojo.html.getContentBox(node);
}
};
dojo.html.toCoordinateObject=dojo.html.toCoordinateArray=function(_290,_291,_292){
if(_290 instanceof Array||typeof _290=="array"){
dojo.deprecated("dojo.html.toCoordinateArray","use dojo.html.toCoordinateObject({left: , top: , width: , height: }) instead","0.5");
while(_290.length<4){
_290.push(0);
}
while(_290.length>4){
_290.pop();
}
var ret={left:_290[0],top:_290[1],width:_290[2],height:_290[3]};
}else{
if(!_290.nodeType&&!(_290 instanceof String||typeof _290=="string")&&("width" in _290||"height" in _290||"left" in _290||"x" in _290||"top" in _290||"y" in _290)){
var ret={left:_290.left||_290.x||0,top:_290.top||_290.y||0,width:_290.width||0,height:_290.height||0};
}else{
var node=dojo.byId(_290);
var pos=dojo.html.abs(node,_291,_292);
var _296=dojo.html.getMarginBox(node);
var ret={left:pos.left,top:pos.top,width:_296.width,height:_296.height};
}
}
ret.x=ret.left;
ret.y=ret.top;
return ret;
};
dojo.html.setMarginBoxWidth=dojo.html.setOuterWidth=function(node,_298){
return dojo.html._callDeprecated("setMarginBoxWidth","setMarginBox",arguments,"width");
};
dojo.html.setMarginBoxHeight=dojo.html.setOuterHeight=function(){
return dojo.html._callDeprecated("setMarginBoxHeight","setMarginBox",arguments,"height");
};
dojo.html.getMarginBoxWidth=dojo.html.getOuterWidth=function(){
return dojo.html._callDeprecated("getMarginBoxWidth","getMarginBox",arguments,null,"width");
};
dojo.html.getMarginBoxHeight=dojo.html.getOuterHeight=function(){
return dojo.html._callDeprecated("getMarginBoxHeight","getMarginBox",arguments,null,"height");
};
dojo.html.getTotalOffset=function(node,type,_29b){
return dojo.html._callDeprecated("getTotalOffset","getAbsolutePosition",arguments,null,type);
};
dojo.html.getAbsoluteX=function(node,_29d){
return dojo.html._callDeprecated("getAbsoluteX","getAbsolutePosition",arguments,null,"x");
};
dojo.html.getAbsoluteY=function(node,_29f){
return dojo.html._callDeprecated("getAbsoluteY","getAbsolutePosition",arguments,null,"y");
};
dojo.html.totalOffsetLeft=function(node,_2a1){
return dojo.html._callDeprecated("totalOffsetLeft","getAbsolutePosition",arguments,null,"left");
};
dojo.html.totalOffsetTop=function(node,_2a3){
return dojo.html._callDeprecated("totalOffsetTop","getAbsolutePosition",arguments,null,"top");
};
dojo.html.getMarginWidth=function(node){
return dojo.html._callDeprecated("getMarginWidth","getMargin",arguments,null,"width");
};
dojo.html.getMarginHeight=function(node){
return dojo.html._callDeprecated("getMarginHeight","getMargin",arguments,null,"height");
};
dojo.html.getBorderWidth=function(node){
return dojo.html._callDeprecated("getBorderWidth","getBorder",arguments,null,"width");
};
dojo.html.getBorderHeight=function(node){
return dojo.html._callDeprecated("getBorderHeight","getBorder",arguments,null,"height");
};
dojo.html.getPaddingWidth=function(node){
return dojo.html._callDeprecated("getPaddingWidth","getPadding",arguments,null,"width");
};
dojo.html.getPaddingHeight=function(node){
return dojo.html._callDeprecated("getPaddingHeight","getPadding",arguments,null,"height");
};
dojo.html.getPadBorderWidth=function(node){
return dojo.html._callDeprecated("getPadBorderWidth","getPadBorder",arguments,null,"width");
};
dojo.html.getPadBorderHeight=function(node){
return dojo.html._callDeprecated("getPadBorderHeight","getPadBorder",arguments,null,"height");
};
dojo.html.getBorderBoxWidth=dojo.html.getInnerWidth=function(){
return dojo.html._callDeprecated("getBorderBoxWidth","getBorderBox",arguments,null,"width");
};
dojo.html.getBorderBoxHeight=dojo.html.getInnerHeight=function(){
return dojo.html._callDeprecated("getBorderBoxHeight","getBorderBox",arguments,null,"height");
};
dojo.html.getContentBoxWidth=dojo.html.getContentWidth=function(){
return dojo.html._callDeprecated("getContentBoxWidth","getContentBox",arguments,null,"width");
};
dojo.html.getContentBoxHeight=dojo.html.getContentHeight=function(){
return dojo.html._callDeprecated("getContentBoxHeight","getContentBox",arguments,null,"height");
};
dojo.html.setContentBoxWidth=dojo.html.setContentWidth=function(node,_2ad){
return dojo.html._callDeprecated("setContentBoxWidth","setContentBox",arguments,"width");
};
dojo.html.setContentBoxHeight=dojo.html.setContentHeight=function(node,_2af){
return dojo.html._callDeprecated("setContentBoxHeight","setContentBox",arguments,"height");
};
dojo.provide("dojo.html.util");
dojo.html.getElementWindow=function(_2b0){
return dojo.html.getDocumentWindow(_2b0.ownerDocument);
};
dojo.html.getDocumentWindow=function(doc){
if(dojo.render.html.safari&&!doc._parentWindow){
var fix=function(win){
win.document._parentWindow=win;
for(var i=0;i<win.frames.length;i++){
fix(win.frames[i]);
}
};
fix(window.top);
}
if(dojo.render.html.ie&&window!==document.parentWindow&&!doc._parentWindow){
doc.parentWindow.execScript("document._parentWindow = window;","Javascript");
var win=doc._parentWindow;
doc._parentWindow=null;
return win;
}
return doc._parentWindow||doc.parentWindow||doc.defaultView;
};
dojo.html.gravity=function(node,e){
node=dojo.byId(node);
var _2b8=dojo.html.getCursorPosition(e);
with(dojo.html){
var _2b9=getAbsolutePosition(node,true);
var bb=getBorderBox(node);
var _2bb=_2b9.x+(bb.width/2);
var _2bc=_2b9.y+(bb.height/2);
}
with(dojo.html.gravity){
return ((_2b8.x<_2bb?WEST:EAST)|(_2b8.y<_2bc?NORTH:SOUTH));
}
};
dojo.html.gravity.NORTH=1;
dojo.html.gravity.SOUTH=1<<1;
dojo.html.gravity.EAST=1<<2;
dojo.html.gravity.WEST=1<<3;
dojo.html.overElement=function(_2bd,e){
_2bd=dojo.byId(_2bd);
var _2bf=dojo.html.getCursorPosition(e);
var bb=dojo.html.getBorderBox(_2bd);
var _2c1=dojo.html.getAbsolutePosition(_2bd,true,dojo.html.boxSizing.BORDER_BOX);
var top=_2c1.y;
var _2c3=top+bb.height;
var left=_2c1.x;
var _2c5=left+bb.width;
return (_2bf.x>=left&&_2bf.x<=_2c5&&_2bf.y>=top&&_2bf.y<=_2c3);
};
dojo.html.renderedTextContent=function(node){
node=dojo.byId(node);
var _2c7="";
if(node==null){
return _2c7;
}
for(var i=0;i<node.childNodes.length;i++){
switch(node.childNodes[i].nodeType){
case 1:
case 5:
var _2c9="unknown";
try{
_2c9=dojo.html.getStyle(node.childNodes[i],"display");
}
catch(E){
}
switch(_2c9){
case "block":
case "list-item":
case "run-in":
case "table":
case "table-row-group":
case "table-header-group":
case "table-footer-group":
case "table-row":
case "table-column-group":
case "table-column":
case "table-cell":
case "table-caption":
_2c7+="\n";
_2c7+=dojo.html.renderedTextContent(node.childNodes[i]);
_2c7+="\n";
break;
case "none":
break;
default:
if(node.childNodes[i].tagName&&node.childNodes[i].tagName.toLowerCase()=="br"){
_2c7+="\n";
}else{
_2c7+=dojo.html.renderedTextContent(node.childNodes[i]);
}
break;
}
break;
case 3:
case 2:
case 4:
var text=node.childNodes[i].nodeValue;
var _2cb="unknown";
try{
_2cb=dojo.html.getStyle(node,"text-transform");
}
catch(E){
}
switch(_2cb){
case "capitalize":
var _2cc=text.split(" ");
for(var i=0;i<_2cc.length;i++){
_2cc[i]=_2cc[i].charAt(0).toUpperCase()+_2cc[i].substring(1);
}
text=_2cc.join(" ");
break;
case "uppercase":
text=text.toUpperCase();
break;
case "lowercase":
text=text.toLowerCase();
break;
default:
break;
}
switch(_2cb){
case "nowrap":
break;
case "pre-wrap":
break;
case "pre-line":
break;
case "pre":
break;
default:
text=text.replace(/\s+/," ");
if(/\s$/.test(_2c7)){
text.replace(/^\s/,"");
}
break;
}
_2c7+=text;
break;
default:
break;
}
}
return _2c7;
};
dojo.html.createNodesFromText=function(txt,trim){
if(trim){
txt=txt.replace(/^\s+|\s+$/g,"");
}
var tn=dojo.doc().createElement("div");
tn.style.visibility="hidden";
dojo.body().appendChild(tn);
var _2d0="none";
if((/^<t[dh][\s\r\n>]/i).test(txt.replace(/^\s+/))){
txt="<table><tbody><tr>"+txt+"</tr></tbody></table>";
_2d0="cell";
}else{
if((/^<tr[\s\r\n>]/i).test(txt.replace(/^\s+/))){
txt="<table><tbody>"+txt+"</tbody></table>";
_2d0="row";
}else{
if((/^<(thead|tbody|tfoot)[\s\r\n>]/i).test(txt.replace(/^\s+/))){
txt="<table>"+txt+"</table>";
_2d0="section";
}
}
}
tn.innerHTML=txt;
if(tn["normalize"]){
tn.normalize();
}
var _2d1=null;
switch(_2d0){
case "cell":
_2d1=tn.getElementsByTagName("tr")[0];
break;
case "row":
_2d1=tn.getElementsByTagName("tbody")[0];
break;
case "section":
_2d1=tn.getElementsByTagName("table")[0];
break;
default:
_2d1=tn;
break;
}
var _2d2=[];
for(var x=0;x<_2d1.childNodes.length;x++){
_2d2.push(_2d1.childNodes[x].cloneNode(true));
}
tn.style.display="none";
dojo.html.destroyNode(tn);
return _2d2;
};
dojo.html.placeOnScreen=function(node,_2d5,_2d6,_2d7,_2d8,_2d9,_2da){
if(_2d5 instanceof Array||typeof _2d5=="array"){
_2da=_2d9;
_2d9=_2d8;
_2d8=_2d7;
_2d7=_2d6;
_2d6=_2d5[1];
_2d5=_2d5[0];
}
if(_2d9 instanceof String||typeof _2d9=="string"){
_2d9=_2d9.split(",");
}
if(!isNaN(_2d7)){
_2d7=[Number(_2d7),Number(_2d7)];
}else{
if(!(_2d7 instanceof Array||typeof _2d7=="array")){
_2d7=[0,0];
}
}
var _2db=dojo.html.getScroll().offset;
var view=dojo.html.getViewport();
node=dojo.byId(node);
var _2dd=node.style.display;
node.style.display="";
var bb=dojo.html.getBorderBox(node);
var w=bb.width;
var h=bb.height;
node.style.display=_2dd;
if(!(_2d9 instanceof Array||typeof _2d9=="array")){
_2d9=["TL"];
}
var _2e1,_2e2,_2e3=Infinity,_2e4;
for(var _2e5=0;_2e5<_2d9.length;++_2e5){
var _2e6=_2d9[_2e5];
var _2e7=true;
var tryX=_2d5-(_2e6.charAt(1)=="L"?0:w)+_2d7[0]*(_2e6.charAt(1)=="L"?1:-1);
var tryY=_2d6-(_2e6.charAt(0)=="T"?0:h)+_2d7[1]*(_2e6.charAt(0)=="T"?1:-1);
if(_2d8){
tryX-=_2db.x;
tryY-=_2db.y;
}
if(tryX<0){
tryX=0;
_2e7=false;
}
if(tryY<0){
tryY=0;
_2e7=false;
}
var x=tryX+w;
if(x>view.width){
x=view.width-w;
_2e7=false;
}else{
x=tryX;
}
x=Math.max(_2d7[0],x)+_2db.x;
var y=tryY+h;
if(y>view.height){
y=view.height-h;
_2e7=false;
}else{
y=tryY;
}
y=Math.max(_2d7[1],y)+_2db.y;
if(_2e7){
_2e1=x;
_2e2=y;
_2e3=0;
_2e4=_2e6;
break;
}else{
var dist=Math.pow(x-tryX-_2db.x,2)+Math.pow(y-tryY-_2db.y,2);
if(_2e3>dist){
_2e3=dist;
_2e1=x;
_2e2=y;
_2e4=_2e6;
}
}
}
if(!_2da){
node.style.left=_2e1+"px";
node.style.top=_2e2+"px";
}
return {left:_2e1,top:_2e2,x:_2e1,y:_2e2,dist:_2e3,corner:_2e4};
};
dojo.html.placeOnScreenPoint=function(node,_2ee,_2ef,_2f0,_2f1){
dojo.deprecated("dojo.html.placeOnScreenPoint","use dojo.html.placeOnScreen() instead","0.5");
return dojo.html.placeOnScreen(node,_2ee,_2ef,_2f0,_2f1,["TL","TR","BL","BR"]);
};
dojo.html.placeOnScreenAroundElement=function(node,_2f3,_2f4,_2f5,_2f6,_2f7){
var best,_2f9=Infinity;
_2f3=dojo.byId(_2f3);
var _2fa=_2f3.style.display;
_2f3.style.display="";
var mb=dojo.html.getElementBox(_2f3,_2f5);
var _2fc=mb.width;
var _2fd=mb.height;
var _2fe=dojo.html.getAbsolutePosition(_2f3,true,_2f5);
_2f3.style.display=_2fa;
for(var _2ff in _2f6){
var pos,_301,_302;
var _303=_2f6[_2ff];
_301=_2fe.x+(_2ff.charAt(1)=="L"?0:_2fc);
_302=_2fe.y+(_2ff.charAt(0)=="T"?0:_2fd);
pos=dojo.html.placeOnScreen(node,_301,_302,_2f4,true,_303,true);
if(pos.dist==0){
best=pos;
break;
}else{
if(_2f9>pos.dist){
_2f9=pos.dist;
best=pos;
}
}
}
if(!_2f7){
node.style.left=best.left+"px";
node.style.top=best.top+"px";
}
return best;
};
dojo.html.scrollIntoView=function(node){
if(!node){
return;
}
if(dojo.render.html.ie){
if(dojo.html.getBorderBox(node.parentNode).height<=node.parentNode.scrollHeight){
node.scrollIntoView(false);
}
}else{
if(dojo.render.html.mozilla){
node.scrollIntoView(false);
}else{
var _305=node.parentNode;
var _306=_305.scrollTop+dojo.html.getBorderBox(_305).height;
var _307=node.offsetTop+dojo.html.getMarginBox(node).height;
if(_306<_307){
_305.scrollTop+=(_307-_306);
}else{
if(_305.scrollTop>node.offsetTop){
_305.scrollTop-=(_305.scrollTop-node.offsetTop);
}
}
}
}
};
dojo.provide("dojo.lang.array");
dojo.lang.mixin(dojo.lang,{has:function(obj,name){
try{
return typeof obj[name]!="undefined";
}
catch(e){
return false;
}
},isEmpty:function(obj){
if(dojo.lang.isObject(obj)){
var tmp={};
var _30c=0;
for(var x in obj){
if(obj[x]&&(!tmp[x])){
_30c++;
break;
}
}
return _30c==0;
}else{
if(dojo.lang.isArrayLike(obj)||dojo.lang.isString(obj)){
return obj.length==0;
}
}
},map:function(arr,obj,_310){
var _311=dojo.lang.isString(arr);
if(_311){
arr=arr.split("");
}
if(dojo.lang.isFunction(obj)&&(!_310)){
_310=obj;
obj=dj_global;
}else{
if(dojo.lang.isFunction(obj)&&_310){
var _312=obj;
obj=_310;
_310=_312;
}
}
if(Array.map){
var _313=Array.map(arr,_310,obj);
}else{
var _313=[];
for(var i=0;i<arr.length;++i){
_313.push(_310.call(obj,arr[i]));
}
}
if(_311){
return _313.join("");
}else{
return _313;
}
},reduce:function(arr,_316,obj,_318){
var _319=_316;
if(arguments.length==1){
dojo.debug("dojo.lang.reduce called with too few arguments!");
return false;
}else{
if(arguments.length==2){
_318=_316;
_319=arr.shift();
}else{
if(arguments.lenght==3){
if(dojo.lang.isFunction(obj)){
_318=obj;
obj=null;
}
}else{
if(dojo.lang.isFunction(obj)){
var tmp=_318;
_318=obj;
obj=tmp;
}
}
}
}
var ob=obj?obj:dj_global;
dojo.lang.map(arr,function(val){
_319=_318.call(ob,_319,val);
});
return _319;
},forEach:function(_31d,_31e,_31f){
if(dojo.lang.isString(_31d)){
_31d=_31d.split("");
}
if(Array.forEach){
Array.forEach(_31d,_31e,_31f);
}else{
if(!_31f){
_31f=dj_global;
}
for(var i=0,l=_31d.length;i<l;i++){
_31e.call(_31f,_31d[i],i,_31d);
}
}
},_everyOrSome:function(_322,arr,_324,_325){
if(dojo.lang.isString(arr)){
arr=arr.split("");
}
if(Array.every){
return Array[_322?"every":"some"](arr,_324,_325);
}else{
if(!_325){
_325=dj_global;
}
for(var i=0,l=arr.length;i<l;i++){
var _328=_324.call(_325,arr[i],i,arr);
if(_322&&!_328){
return false;
}else{
if((!_322)&&(_328)){
return true;
}
}
}
return Boolean(_322);
}
},every:function(arr,_32a,_32b){
return this._everyOrSome(true,arr,_32a,_32b);
},some:function(arr,_32d,_32e){
return this._everyOrSome(false,arr,_32d,_32e);
},filter:function(arr,_330,_331){
var _332=dojo.lang.isString(arr);
if(_332){
arr=arr.split("");
}
var _333;
if(Array.filter){
_333=Array.filter(arr,_330,_331);
}else{
if(!_331){
if(arguments.length>=3){
dojo.raise("thisObject doesn't exist!");
}
_331=dj_global;
}
_333=[];
for(var i=0;i<arr.length;i++){
if(_330.call(_331,arr[i],i,arr)){
_333.push(arr[i]);
}
}
}
if(_332){
return _333.join("");
}else{
return _333;
}
},unnest:function(){
var out=[];
for(var i=0;i<arguments.length;i++){
if(dojo.lang.isArrayLike(arguments[i])){
var add=dojo.lang.unnest.apply(this,arguments[i]);
out=out.concat(add);
}else{
out.push(arguments[i]);
}
}
return out;
},toArray:function(_338,_339){
var _33a=[];
for(var i=_339||0;i<_338.length;i++){
_33a.push(_338[i]);
}
return _33a;
}});
dojo.provide("dojo.gfx.color");
dojo.gfx.color.Color=function(r,g,b,a){
if(dojo.lang.isArray(r)){
this.r=r[0];
this.g=r[1];
this.b=r[2];
this.a=r[3]||1;
}else{
if(dojo.lang.isString(r)){
var rgb=dojo.gfx.color.extractRGB(r);
this.r=rgb[0];
this.g=rgb[1];
this.b=rgb[2];
this.a=g||1;
}else{
if(r instanceof dojo.gfx.color.Color){
this.r=r.r;
this.b=r.b;
this.g=r.g;
this.a=r.a;
}else{
this.r=r;
this.g=g;
this.b=b;
this.a=a;
}
}
}
};
dojo.gfx.color.Color.fromArray=function(arr){
return new dojo.gfx.color.Color(arr[0],arr[1],arr[2],arr[3]);
};
dojo.extend(dojo.gfx.color.Color,{toRgb:function(_342){
if(_342){
return this.toRgba();
}else{
return [this.r,this.g,this.b];
}
},toRgba:function(){
return [this.r,this.g,this.b,this.a];
},toHex:function(){
return dojo.gfx.color.rgb2hex(this.toRgb());
},toCss:function(){
return "rgb("+this.toRgb().join()+")";
},toString:function(){
return this.toHex();
},blend:function(_343,_344){
var rgb=null;
if(dojo.lang.isArray(_343)){
rgb=_343;
}else{
if(_343 instanceof dojo.gfx.color.Color){
rgb=_343.toRgb();
}else{
rgb=new dojo.gfx.color.Color(_343).toRgb();
}
}
return dojo.gfx.color.blend(this.toRgb(),rgb,_344);
}});
dojo.gfx.color.named={white:[255,255,255],black:[0,0,0],red:[255,0,0],green:[0,255,0],lime:[0,255,0],blue:[0,0,255],navy:[0,0,128],gray:[128,128,128],silver:[192,192,192]};
dojo.gfx.color.blend=function(a,b,_348){
if(typeof a=="string"){
return dojo.gfx.color.blendHex(a,b,_348);
}
if(!_348){
_348=0;
}
_348=Math.min(Math.max(-1,_348),1);
_348=((_348+1)/2);
var c=[];
for(var x=0;x<3;x++){
c[x]=parseInt(b[x]+((a[x]-b[x])*_348));
}
return c;
};
dojo.gfx.color.blendHex=function(a,b,_34d){
return dojo.gfx.color.rgb2hex(dojo.gfx.color.blend(dojo.gfx.color.hex2rgb(a),dojo.gfx.color.hex2rgb(b),_34d));
};
dojo.gfx.color.extractRGB=function(_34e){
var hex="0123456789abcdef";
_34e=_34e.toLowerCase();
if(_34e.indexOf("rgb")==0){
var _350=_34e.match(/rgba*\((\d+), *(\d+), *(\d+)/i);
var ret=_350.splice(1,3);
return ret;
}else{
var _352=dojo.gfx.color.hex2rgb(_34e);
if(_352){
return _352;
}else{
return dojo.gfx.color.named[_34e]||[255,255,255];
}
}
};
dojo.gfx.color.hex2rgb=function(hex){
var _354="0123456789ABCDEF";
var rgb=new Array(3);
if(hex.indexOf("#")==0){
hex=hex.substring(1);
}
hex=hex.toUpperCase();
if(hex.replace(new RegExp("["+_354+"]","g"),"")!=""){
return null;
}
if(hex.length==3){
rgb[0]=hex.charAt(0)+hex.charAt(0);
rgb[1]=hex.charAt(1)+hex.charAt(1);
rgb[2]=hex.charAt(2)+hex.charAt(2);
}else{
rgb[0]=hex.substring(0,2);
rgb[1]=hex.substring(2,4);
rgb[2]=hex.substring(4);
}
for(var i=0;i<rgb.length;i++){
rgb[i]=_354.indexOf(rgb[i].charAt(0))*16+_354.indexOf(rgb[i].charAt(1));
}
return rgb;
};
dojo.gfx.color.rgb2hex=function(r,g,b){
if(dojo.lang.isArray(r)){
g=r[1]||0;
b=r[2]||0;
r=r[0]||0;
}
var ret=dojo.lang.map([r,g,b],function(x){
x=new Number(x);
var s=x.toString(16);
while(s.length<2){
s="0"+s;
}
return s;
});
ret.unshift("#");
return ret.join("");
};
dojo.provide("dojo.lang.func");
dojo.lang.hitch=function(_35d,_35e){
var fcn=(dojo.lang.isString(_35e)?_35d[_35e]:_35e)||function(){
};
return function(){
return fcn.apply(_35d,arguments);
};
};
dojo.lang.anonCtr=0;
dojo.lang.anon={};
dojo.lang.nameAnonFunc=function(_360,_361,_362){
var nso=(_361||dojo.lang.anon);
if((_362)||((dj_global["djConfig"])&&(djConfig["slowAnonFuncLookups"]==true))){
for(var x in nso){
try{
if(nso[x]===_360){
return x;
}
}
catch(e){
}
}
}
var ret="__"+dojo.lang.anonCtr++;
while(typeof nso[ret]!="undefined"){
ret="__"+dojo.lang.anonCtr++;
}
nso[ret]=_360;
return ret;
};
dojo.lang.forward=function(_366){
return function(){
return this[_366].apply(this,arguments);
};
};
dojo.lang.curry=function(_367,func){
var _369=[];
_367=_367||dj_global;
if(dojo.lang.isString(func)){
func=_367[func];
}
for(var x=2;x<arguments.length;x++){
_369.push(arguments[x]);
}
var _36b=(func["__preJoinArity"]||func.length)-_369.length;
function gather(_36c,_36d,_36e){
var _36f=_36e;
var _370=_36d.slice(0);
for(var x=0;x<_36c.length;x++){
_370.push(_36c[x]);
}
_36e=_36e-_36c.length;
if(_36e<=0){
var res=func.apply(_367,_370);
_36e=_36f;
return res;
}else{
return function(){
return gather(arguments,_370,_36e);
};
}
}
return gather([],_369,_36b);
};
dojo.lang.curryArguments=function(_373,func,args,_376){
var _377=[];
var x=_376||0;
for(x=_376;x<args.length;x++){
_377.push(args[x]);
}
return dojo.lang.curry.apply(dojo.lang,[_373,func].concat(_377));
};
dojo.lang.tryThese=function(){
for(var x=0;x<arguments.length;x++){
try{
if(typeof arguments[x]=="function"){
var ret=(arguments[x]());
if(ret){
return ret;
}
}
}
catch(e){
dojo.debug(e);
}
}
};
dojo.lang.delayThese=function(farr,cb,_37d,_37e){
if(!farr.length){
if(typeof _37e=="function"){
_37e();
}
return;
}
if((typeof _37d=="undefined")&&(typeof cb=="number")){
_37d=cb;
cb=function(){
};
}else{
if(!cb){
cb=function(){
};
if(!_37d){
_37d=0;
}
}
}
setTimeout(function(){
(farr.shift())();
cb();
dojo.lang.delayThese(farr,cb,_37d,_37e);
},_37d);
};
dojo.provide("dojo.lfx.Animation");
dojo.lfx.Line=function(_37f,end){
this.start=_37f;
this.end=end;
if(dojo.lang.isArray(_37f)){
var diff=[];
dojo.lang.forEach(this.start,function(s,i){
diff[i]=this.end[i]-s;
},this);
this.getValue=function(n){
var res=[];
dojo.lang.forEach(this.start,function(s,i){
res[i]=(diff[i]*n)+s;
},this);
return res;
};
}else{
var diff=end-_37f;
this.getValue=function(n){
return (diff*n)+this.start;
};
}
};
dojo.lfx.easeDefault=function(n){
if(dojo.render.html.khtml){
return (parseFloat("0.5")+((Math.sin((n+parseFloat("1.5"))*Math.PI))/2));
}else{
return (0.5+((Math.sin((n+1.5)*Math.PI))/2));
}
};
dojo.lfx.easeIn=function(n){
return Math.pow(n,3);
};
dojo.lfx.easeOut=function(n){
return (1-Math.pow(1-n,3));
};
dojo.lfx.easeInOut=function(n){
return ((3*Math.pow(n,2))-(2*Math.pow(n,3)));
};
dojo.lfx.IAnimation=function(){
};
dojo.lang.extend(dojo.lfx.IAnimation,{curve:null,duration:1000,easing:null,repeatCount:0,rate:25,handler:null,beforeBegin:null,onBegin:null,onAnimate:null,onEnd:null,onPlay:null,onPause:null,onStop:null,play:null,pause:null,stop:null,connect:function(evt,_38e,_38f){
if(!_38f){
_38f=_38e;
_38e=this;
}
_38f=dojo.lang.hitch(_38e,_38f);
var _390=this[evt]||function(){
};
this[evt]=function(){
var ret=_390.apply(this,arguments);
_38f.apply(this,arguments);
return ret;
};
return this;
},fire:function(evt,args){
if(this[evt]){
this[evt].apply(this,(args||[]));
}
return this;
},repeat:function(_394){
this.repeatCount=_394;
return this;
},_active:false,_paused:false});
dojo.lfx.Animation=function(_395,_396,_397,_398,_399,rate){
dojo.lfx.IAnimation.call(this);
if(dojo.lang.isNumber(_395)||(!_395&&_396.getValue)){
rate=_399;
_399=_398;
_398=_397;
_397=_396;
_396=_395;
_395=null;
}else{
if(_395.getValue||dojo.lang.isArray(_395)){
rate=_398;
_399=_397;
_398=_396;
_397=_395;
_396=null;
_395=null;
}
}
if(dojo.lang.isArray(_397)){
this.curve=new dojo.lfx.Line(_397[0],_397[1]);
}else{
this.curve=_397;
}
if(_396!=null&&_396>0){
this.duration=_396;
}
if(_399){
this.repeatCount=_399;
}
if(rate){
this.rate=rate;
}
if(_395){
dojo.lang.forEach(["handler","beforeBegin","onBegin","onEnd","onPlay","onStop","onAnimate"],function(item){
if(_395[item]){
this.connect(item,_395[item]);
}
},this);
}
if(_398&&dojo.lang.isFunction(_398)){
this.easing=_398;
}
};
dojo.inherits(dojo.lfx.Animation,dojo.lfx.IAnimation);
dojo.lang.extend(dojo.lfx.Animation,{_startTime:null,_endTime:null,_timer:null,_percent:0,_startRepeatCount:0,play:function(_39c,_39d){
if(_39d){
clearTimeout(this._timer);
this._active=false;
this._paused=false;
this._percent=0;
}else{
if(this._active&&!this._paused){
return this;
}
}
this.fire("handler",["beforeBegin"]);
this.fire("beforeBegin");
if(_39c>0){
setTimeout(dojo.lang.hitch(this,function(){
this.play(null,_39d);
}),_39c);
return this;
}
this._startTime=new Date().valueOf();
if(this._paused){
this._startTime-=(this.duration*this._percent/100);
}
this._endTime=this._startTime+this.duration;
this._active=true;
this._paused=false;
var step=this._percent/100;
var _39f=this.curve.getValue(step);
if(this._percent==0){
if(!this._startRepeatCount){
this._startRepeatCount=this.repeatCount;
}
this.fire("handler",["begin",_39f]);
this.fire("onBegin",[_39f]);
}
this.fire("handler",["play",_39f]);
this.fire("onPlay",[_39f]);
this._cycle();
return this;
},pause:function(){
clearTimeout(this._timer);
if(!this._active){
return this;
}
this._paused=true;
var _3a0=this.curve.getValue(this._percent/100);
this.fire("handler",["pause",_3a0]);
this.fire("onPause",[_3a0]);
return this;
},gotoPercent:function(pct,_3a2){
clearTimeout(this._timer);
this._active=true;
this._paused=true;
this._percent=pct;
if(_3a2){
this.play();
}
return this;
},stop:function(_3a3){
clearTimeout(this._timer);
var step=this._percent/100;
if(_3a3){
step=1;
}
var _3a5=this.curve.getValue(step);
this.fire("handler",["stop",_3a5]);
this.fire("onStop",[_3a5]);
this._active=false;
this._paused=false;
return this;
},status:function(){
if(this._active){
return this._paused?"paused":"playing";
}else{
return "stopped";
}
return this;
},_cycle:function(){
clearTimeout(this._timer);
if(this._active){
var curr=new Date().valueOf();
var step=(curr-this._startTime)/(this._endTime-this._startTime);
if(step>=1){
step=1;
this._percent=100;
}else{
this._percent=step*100;
}
if((this.easing)&&(dojo.lang.isFunction(this.easing))){
step=this.easing(step);
}
var _3a8=this.curve.getValue(step);
this.fire("handler",["animate",_3a8]);
this.fire("onAnimate",[_3a8]);
if(step<1){
this._timer=setTimeout(dojo.lang.hitch(this,"_cycle"),this.rate);
}else{
this._active=false;
this.fire("handler",["end"]);
this.fire("onEnd");
if(this.repeatCount>0){
this.repeatCount--;
this.play(null,true);
}else{
if(this.repeatCount==-1){
this.play(null,true);
}else{
if(this._startRepeatCount){
this.repeatCount=this._startRepeatCount;
this._startRepeatCount=0;
}
}
}
}
}
return this;
}});
dojo.lfx.Combine=function(_3a9){
dojo.lfx.IAnimation.call(this);
this._anims=[];
this._animsEnded=0;
var _3aa=arguments;
if(_3aa.length==1&&(dojo.lang.isArray(_3aa[0])||dojo.lang.isArrayLike(_3aa[0]))){
_3aa=_3aa[0];
}
dojo.lang.forEach(_3aa,function(anim){
this._anims.push(anim);
anim.connect("onEnd",dojo.lang.hitch(this,"_onAnimsEnded"));
},this);
};
dojo.inherits(dojo.lfx.Combine,dojo.lfx.IAnimation);
dojo.lang.extend(dojo.lfx.Combine,{_animsEnded:0,play:function(_3ac,_3ad){
if(!this._anims.length){
return this;
}
this.fire("beforeBegin");
if(_3ac>0){
setTimeout(dojo.lang.hitch(this,function(){
this.play(null,_3ad);
}),_3ac);
return this;
}
if(_3ad||this._anims[0].percent==0){
this.fire("onBegin");
}
this.fire("onPlay");
this._animsCall("play",null,_3ad);
return this;
},pause:function(){
this.fire("onPause");
this._animsCall("pause");
return this;
},stop:function(_3ae){
this.fire("onStop");
this._animsCall("stop",_3ae);
return this;
},_onAnimsEnded:function(){
this._animsEnded++;
if(this._animsEnded>=this._anims.length){
this.fire("onEnd");
}
return this;
},_animsCall:function(_3af){
var args=[];
if(arguments.length>1){
for(var i=1;i<arguments.length;i++){
args.push(arguments[i]);
}
}
var _3b2=this;
dojo.lang.forEach(this._anims,function(anim){
anim[_3af](args);
},_3b2);
return this;
}});
dojo.lfx.Chain=function(_3b4){
dojo.lfx.IAnimation.call(this);
this._anims=[];
this._currAnim=-1;
var _3b5=arguments;
if(_3b5.length==1&&(dojo.lang.isArray(_3b5[0])||dojo.lang.isArrayLike(_3b5[0]))){
_3b5=_3b5[0];
}
var _3b6=this;
dojo.lang.forEach(_3b5,function(anim,i,_3b9){
this._anims.push(anim);
if(i<_3b9.length-1){
anim.connect("onEnd",dojo.lang.hitch(this,"_playNext"));
}else{
anim.connect("onEnd",dojo.lang.hitch(this,function(){
this.fire("onEnd");
}));
}
},this);
};
dojo.inherits(dojo.lfx.Chain,dojo.lfx.IAnimation);
dojo.lang.extend(dojo.lfx.Chain,{_currAnim:-1,play:function(_3ba,_3bb){
if(!this._anims.length){
return this;
}
if(_3bb||!this._anims[this._currAnim]){
this._currAnim=0;
}
var _3bc=this._anims[this._currAnim];
this.fire("beforeBegin");
if(_3ba>0){
setTimeout(dojo.lang.hitch(this,function(){
this.play(null,_3bb);
}),_3ba);
return this;
}
if(_3bc){
if(this._currAnim==0){
this.fire("handler",["begin",this._currAnim]);
this.fire("onBegin",[this._currAnim]);
}
this.fire("onPlay",[this._currAnim]);
_3bc.play(null,_3bb);
}
return this;
},pause:function(){
if(this._anims[this._currAnim]){
this._anims[this._currAnim].pause();
this.fire("onPause",[this._currAnim]);
}
return this;
},playPause:function(){
if(this._anims.length==0){
return this;
}
if(this._currAnim==-1){
this._currAnim=0;
}
var _3bd=this._anims[this._currAnim];
if(_3bd){
if(!_3bd._active||_3bd._paused){
this.play();
}else{
this.pause();
}
}
return this;
},stop:function(){
var _3be=this._anims[this._currAnim];
if(_3be){
_3be.stop();
this.fire("onStop",[this._currAnim]);
}
return _3be;
},_playNext:function(){
if(this._currAnim==-1||this._anims.length==0){
return this;
}
this._currAnim++;
if(this._anims[this._currAnim]){
this._anims[this._currAnim].play(null,true);
}
return this;
}});
dojo.lfx.combine=function(_3bf){
var _3c0=arguments;
if(dojo.lang.isArray(arguments[0])){
_3c0=arguments[0];
}
if(_3c0.length==1){
return _3c0[0];
}
return new dojo.lfx.Combine(_3c0);
};
dojo.lfx.chain=function(_3c1){
var _3c2=arguments;
if(dojo.lang.isArray(arguments[0])){
_3c2=arguments[0];
}
if(_3c2.length==1){
return _3c2[0];
}
return new dojo.lfx.Chain(_3c2);
};
dojo.provide("dojo.html.color");
dojo.html.getBackgroundColor=function(node){
node=dojo.byId(node);
var _3c4;
do{
_3c4=dojo.html.getStyle(node,"background-color");
if(_3c4.toLowerCase()=="rgba(0, 0, 0, 0)"){
_3c4="transparent";
}
if(node==document.getElementsByTagName("body")[0]){
node=null;
break;
}
node=node.parentNode;
}while(node&&dojo.lang.inArray(["transparent",""],_3c4));
if(_3c4=="transparent"){
_3c4=[255,255,255,0];
}else{
_3c4=dojo.gfx.color.extractRGB(_3c4);
}
return _3c4;
};
dojo.provide("dojo.lfx.html");
dojo.lfx.html._byId=function(_3c5){
if(!_3c5){
return [];
}
if(dojo.lang.isArrayLike(_3c5)){
if(!_3c5.alreadyChecked){
var n=[];
dojo.lang.forEach(_3c5,function(node){
n.push(dojo.byId(node));
});
n.alreadyChecked=true;
return n;
}else{
return _3c5;
}
}else{
var n=[];
n.push(dojo.byId(_3c5));
n.alreadyChecked=true;
return n;
}
};
dojo.lfx.html.propertyAnimation=function(_3c8,_3c9,_3ca,_3cb,_3cc){
_3c8=dojo.lfx.html._byId(_3c8);
var _3cd={"propertyMap":_3c9,"nodes":_3c8,"duration":_3ca,"easing":_3cb||dojo.lfx.easeDefault};
var _3ce=function(args){
if(args.nodes.length==1){
var pm=args.propertyMap;
if(!dojo.lang.isArray(args.propertyMap)){
var parr=[];
for(var _3d2 in pm){
pm[_3d2].property=_3d2;
parr.push(pm[_3d2]);
}
pm=args.propertyMap=parr;
}
dojo.lang.forEach(pm,function(prop){
if(dj_undef("start",prop)){
if(prop.property!="opacity"){
prop.start=parseInt(dojo.html.getComputedStyle(args.nodes[0],prop.property));
}else{
prop.start=dojo.html.getOpacity(args.nodes[0]);
}
}
});
}
};
var _3d4=function(_3d5){
var _3d6=[];
dojo.lang.forEach(_3d5,function(c){
_3d6.push(Math.round(c));
});
return _3d6;
};
var _3d8=function(n,_3da){
n=dojo.byId(n);
if(!n||!n.style){
return;
}
for(var s in _3da){
try{
if(s=="opacity"){
dojo.html.setOpacity(n,_3da[s]);
}else{
n.style[s]=_3da[s];
}
}
catch(e){
dojo.debug(e);
}
}
};
var _3dc=function(_3dd){
this._properties=_3dd;
this.diffs=new Array(_3dd.length);
dojo.lang.forEach(_3dd,function(prop,i){
if(dojo.lang.isFunction(prop.start)){
prop.start=prop.start(prop,i);
}
if(dojo.lang.isFunction(prop.end)){
prop.end=prop.end(prop,i);
}
if(dojo.lang.isArray(prop.start)){
this.diffs[i]=null;
}else{
if(prop.start instanceof dojo.gfx.color.Color){
prop.startRgb=prop.start.toRgb();
prop.endRgb=prop.end.toRgb();
}else{
this.diffs[i]=prop.end-prop.start;
}
}
},this);
this.getValue=function(n){
var ret={};
dojo.lang.forEach(this._properties,function(prop,i){
var _3e4=null;
if(dojo.lang.isArray(prop.start)){
}else{
if(prop.start instanceof dojo.gfx.color.Color){
_3e4=(prop.units||"rgb")+"(";
for(var j=0;j<prop.startRgb.length;j++){
_3e4+=Math.round(((prop.endRgb[j]-prop.startRgb[j])*n)+prop.startRgb[j])+(j<prop.startRgb.length-1?",":"");
}
_3e4+=")";
}else{
_3e4=((this.diffs[i])*n)+prop.start+(prop.property!="opacity"?prop.units||"px":"");
}
}
ret[dojo.html.toCamelCase(prop.property)]=_3e4;
},this);
return ret;
};
};
var anim=new dojo.lfx.Animation({beforeBegin:function(){
_3ce(_3cd);
anim.curve=new _3dc(_3cd.propertyMap);
},onAnimate:function(_3e7){
dojo.lang.forEach(_3cd.nodes,function(node){
_3d8(node,_3e7);
});
}},_3cd.duration,null,_3cd.easing);
if(_3cc){
for(var x in _3cc){
if(dojo.lang.isFunction(_3cc[x])){
anim.connect(x,anim,_3cc[x]);
}
}
}
return anim;
};
dojo.lfx.html._makeFadeable=function(_3ea){
var _3eb=function(node){
if(dojo.render.html.ie){
if((node.style.zoom.length==0)&&(dojo.html.getStyle(node,"zoom")=="normal")){
node.style.zoom="1";
}
if((node.style.width.length==0)&&(dojo.html.getStyle(node,"width")=="auto")){
node.style.width="auto";
}
}
};
if(dojo.lang.isArrayLike(_3ea)){
dojo.lang.forEach(_3ea,_3eb);
}else{
_3eb(_3ea);
}
};
dojo.lfx.html.fade=function(_3ed,_3ee,_3ef,_3f0,_3f1){
_3ed=dojo.lfx.html._byId(_3ed);
var _3f2={property:"opacity"};
if(!dj_undef("start",_3ee)){
_3f2.start=_3ee.start;
}else{
_3f2.start=function(){
return dojo.html.getOpacity(_3ed[0]);
};
}
if(!dj_undef("end",_3ee)){
_3f2.end=_3ee.end;
}else{
dojo.raise("dojo.lfx.html.fade needs an end value");
}
var anim=dojo.lfx.propertyAnimation(_3ed,[_3f2],_3ef,_3f0);
anim.connect("beforeBegin",function(){
dojo.lfx.html._makeFadeable(_3ed);
});
if(_3f1){
anim.connect("onEnd",function(){
_3f1(_3ed,anim);
});
}
return anim;
};
dojo.lfx.html.fadeIn=function(_3f4,_3f5,_3f6,_3f7){
return dojo.lfx.html.fade(_3f4,{end:1},_3f5,_3f6,_3f7);
};
dojo.lfx.html.fadeOut=function(_3f8,_3f9,_3fa,_3fb){
return dojo.lfx.html.fade(_3f8,{end:0},_3f9,_3fa,_3fb);
};
dojo.lfx.html.fadeShow=function(_3fc,_3fd,_3fe,_3ff){
_3fc=dojo.lfx.html._byId(_3fc);
dojo.lang.forEach(_3fc,function(node){
dojo.html.setOpacity(node,0);
});
var anim=dojo.lfx.html.fadeIn(_3fc,_3fd,_3fe,_3ff);
anim.connect("beforeBegin",function(){
if(dojo.lang.isArrayLike(_3fc)){
dojo.lang.forEach(_3fc,dojo.html.show);
}else{
dojo.html.show(_3fc);
}
});
return anim;
};
dojo.lfx.html.fadeHide=function(_402,_403,_404,_405){
var anim=dojo.lfx.html.fadeOut(_402,_403,_404,function(){
if(dojo.lang.isArrayLike(_402)){
dojo.lang.forEach(_402,dojo.html.hide);
}else{
dojo.html.hide(_402);
}
if(_405){
_405(_402,anim);
}
});
return anim;
};
dojo.lfx.html.wipeIn=function(_407,_408,_409,_40a){
_407=dojo.lfx.html._byId(_407);
var _40b=[];
dojo.lang.forEach(_407,function(node){
var _40d={};
var _40e,_40f,_410;
with(node.style){
_40e=top;
_40f=left;
_410=position;
top="-9999px";
left="-9999px";
position="absolute";
display="";
}
var _411=dojo.html.getBorderBox(node).height;
with(node.style){
top=_40e;
left=_40f;
position=_410;
display="none";
}
var anim=dojo.lfx.propertyAnimation(node,{"height":{start:1,end:function(){
return _411;
}}},_408,_409);
anim.connect("beforeBegin",function(){
_40d.overflow=node.style.overflow;
_40d.height=node.style.height;
with(node.style){
overflow="hidden";
_411="1px";
}
dojo.html.show(node);
});
anim.connect("onEnd",function(){
with(node.style){
overflow=_40d.overflow;
_411=_40d.height;
}
if(_40a){
_40a(node,anim);
}
});
_40b.push(anim);
});
return dojo.lfx.combine(_40b);
};
dojo.lfx.html.wipeOut=function(_413,_414,_415,_416){
_413=dojo.lfx.html._byId(_413);
var _417=[];
dojo.lang.forEach(_413,function(node){
var _419={};
var anim=dojo.lfx.propertyAnimation(node,{"height":{start:function(){
return dojo.html.getContentBox(node).height;
},end:1}},_414,_415,{"beforeBegin":function(){
_419.overflow=node.style.overflow;
_419.height=node.style.height;
with(node.style){
overflow="hidden";
}
dojo.html.show(node);
},"onEnd":function(){
dojo.html.hide(node);
with(node.style){
overflow=_419.overflow;
height=_419.height;
}
if(_416){
_416(node,anim);
}
}});
_417.push(anim);
});
return dojo.lfx.combine(_417);
};
dojo.lfx.html.slideTo=function(_41b,_41c,_41d,_41e,_41f){
_41b=dojo.lfx.html._byId(_41b);
var _420=[];
var _421=dojo.html.getComputedStyle;
if(dojo.lang.isArray(_41c)){
dojo.deprecated("dojo.lfx.html.slideTo(node, array)","use dojo.lfx.html.slideTo(node, {top: value, left: value});","0.5");
_41c={top:_41c[0],left:_41c[1]};
}
dojo.lang.forEach(_41b,function(node){
var top=null;
var left=null;
var init=(function(){
var _426=node;
return function(){
var pos=_421(_426,"position");
top=(pos=="absolute"?node.offsetTop:parseInt(_421(node,"top"))||0);
left=(pos=="absolute"?node.offsetLeft:parseInt(_421(node,"left"))||0);
if(!dojo.lang.inArray(["absolute","relative"],pos)){
var ret=dojo.html.abs(_426,true);
dojo.html.setStyleAttributes(_426,"position:absolute;top:"+ret.y+"px;left:"+ret.x+"px;");
top=ret.y;
left=ret.x;
}
};
})();
init();
var anim=dojo.lfx.propertyAnimation(node,{"top":{start:top,end:(_41c.top||0)},"left":{start:left,end:(_41c.left||0)}},_41d,_41e,{"beforeBegin":init});
if(_41f){
anim.connect("onEnd",function(){
_41f(_41b,anim);
});
}
_420.push(anim);
});
return dojo.lfx.combine(_420);
};
dojo.lfx.html.slideBy=function(_42a,_42b,_42c,_42d,_42e){
_42a=dojo.lfx.html._byId(_42a);
var _42f=[];
var _430=dojo.html.getComputedStyle;
if(dojo.lang.isArray(_42b)){
dojo.deprecated("dojo.lfx.html.slideBy(node, array)","use dojo.lfx.html.slideBy(node, {top: value, left: value});","0.5");
_42b={top:_42b[0],left:_42b[1]};
}
dojo.lang.forEach(_42a,function(node){
var top=null;
var left=null;
var init=(function(){
var _435=node;
return function(){
var pos=_430(_435,"position");
top=(pos=="absolute"?node.offsetTop:parseInt(_430(node,"top"))||0);
left=(pos=="absolute"?node.offsetLeft:parseInt(_430(node,"left"))||0);
if(!dojo.lang.inArray(["absolute","relative"],pos)){
var ret=dojo.html.abs(_435,true);
dojo.html.setStyleAttributes(_435,"position:absolute;top:"+ret.y+"px;left:"+ret.x+"px;");
top=ret.y;
left=ret.x;
}
};
})();
init();
var anim=dojo.lfx.propertyAnimation(node,{"top":{start:top,end:top+(_42b.top||0)},"left":{start:left,end:left+(_42b.left||0)}},_42c,_42d).connect("beforeBegin",init);
if(_42e){
anim.connect("onEnd",function(){
_42e(_42a,anim);
});
}
_42f.push(anim);
});
return dojo.lfx.combine(_42f);
};
dojo.lfx.html.explode=function(_439,_43a,_43b,_43c,_43d){
var h=dojo.html;
_439=dojo.byId(_439);
_43a=dojo.byId(_43a);
var _43f=h.toCoordinateObject(_439,true);
var _440=document.createElement("div");
h.copyStyle(_440,_43a);
if(_43a.explodeClassName){
_440.className=_43a.explodeClassName;
}
with(_440.style){
position="absolute";
display="none";
var _441=h.getStyle(_439,"background-color");
backgroundColor=_441?_441.toLowerCase():"transparent";
backgroundColor=(backgroundColor=="transparent")?"rgb(221, 221, 221)":backgroundColor;
}
dojo.body().appendChild(_440);
with(_43a.style){
visibility="hidden";
display="block";
}
var _442=h.toCoordinateObject(_43a,true);
with(_43a.style){
display="none";
visibility="visible";
}
var _443={opacity:{start:0.5,end:1}};
dojo.lang.forEach(["height","width","top","left"],function(type){
_443[type]={start:_43f[type],end:_442[type]};
});
var anim=new dojo.lfx.propertyAnimation(_440,_443,_43b,_43c,{"beforeBegin":function(){
h.setDisplay(_440,"block");
},"onEnd":function(){
h.setDisplay(_43a,"block");
_440.parentNode.removeChild(_440);
}});
if(_43d){
anim.connect("onEnd",function(){
_43d(_43a,anim);
});
}
return anim;
};
dojo.lfx.html.implode=function(_446,end,_448,_449,_44a){
var h=dojo.html;
_446=dojo.byId(_446);
end=dojo.byId(end);
var _44c=dojo.html.toCoordinateObject(_446,true);
var _44d=dojo.html.toCoordinateObject(end,true);
var _44e=document.createElement("div");
dojo.html.copyStyle(_44e,_446);
if(_446.explodeClassName){
_44e.className=_446.explodeClassName;
}
dojo.html.setOpacity(_44e,0.3);
with(_44e.style){
position="absolute";
display="none";
backgroundColor=h.getStyle(_446,"background-color").toLowerCase();
}
dojo.body().appendChild(_44e);
var _44f={opacity:{start:1,end:0.5}};
dojo.lang.forEach(["height","width","top","left"],function(type){
_44f[type]={start:_44c[type],end:_44d[type]};
});
var anim=new dojo.lfx.propertyAnimation(_44e,_44f,_448,_449,{"beforeBegin":function(){
dojo.html.hide(_446);
dojo.html.show(_44e);
},"onEnd":function(){
_44e.parentNode.removeChild(_44e);
}});
if(_44a){
anim.connect("onEnd",function(){
_44a(_446,anim);
});
}
return anim;
};
dojo.lfx.html.highlight=function(_452,_453,_454,_455,_456){
_452=dojo.lfx.html._byId(_452);
var _457=[];
dojo.lang.forEach(_452,function(node){
var _459=dojo.html.getBackgroundColor(node);
var bg=dojo.html.getStyle(node,"background-color").toLowerCase();
var _45b=dojo.html.getStyle(node,"background-image");
var _45c=(bg=="transparent"||bg=="rgba(0, 0, 0, 0)");
while(_459.length>3){
_459.pop();
}
var rgb=new dojo.gfx.color.Color(_453);
var _45e=new dojo.gfx.color.Color(_459);
var anim=dojo.lfx.propertyAnimation(node,{"background-color":{start:rgb,end:_45e}},_454,_455,{"beforeBegin":function(){
if(_45b){
node.style.backgroundImage="none";
}
node.style.backgroundColor="rgb("+rgb.toRgb().join(",")+")";
},"onEnd":function(){
if(_45b){
node.style.backgroundImage=_45b;
}
if(_45c){
node.style.backgroundColor="transparent";
}
if(_456){
_456(node,anim);
}
}});
_457.push(anim);
});
return dojo.lfx.combine(_457);
};
dojo.lfx.html.unhighlight=function(_460,_461,_462,_463,_464){
_460=dojo.lfx.html._byId(_460);
var _465=[];
dojo.lang.forEach(_460,function(node){
var _467=new dojo.gfx.color.Color(dojo.html.getBackgroundColor(node));
var rgb=new dojo.gfx.color.Color(_461);
var _469=dojo.html.getStyle(node,"background-image");
var anim=dojo.lfx.propertyAnimation(node,{"background-color":{start:_467,end:rgb}},_462,_463,{"beforeBegin":function(){
if(_469){
node.style.backgroundImage="none";
}
node.style.backgroundColor="rgb("+_467.toRgb().join(",")+")";
},"onEnd":function(){
if(_464){
_464(node,anim);
}
}});
_465.push(anim);
});
return dojo.lfx.combine(_465);
};
dojo.lang.mixin(dojo.lfx,dojo.lfx.html);
dojo.provide("dojo.lfx.*");
dojo.provide("dojo.lang.extras");
dojo.lang.setTimeout=function(func,_46c){
var _46d=window,_46e=2;
if(!dojo.lang.isFunction(func)){
_46d=func;
func=_46c;
_46c=arguments[2];
_46e++;
}
if(dojo.lang.isString(func)){
func=_46d[func];
}
var args=[];
for(var i=_46e;i<arguments.length;i++){
args.push(arguments[i]);
}
return dojo.global().setTimeout(function(){
func.apply(_46d,args);
},_46c);
};
dojo.lang.clearTimeout=function(_471){
dojo.global().clearTimeout(_471);
};
dojo.lang.getNameInObj=function(ns,item){
if(!ns){
ns=dj_global;
}
for(var x in ns){
if(ns[x]===item){
return new String(x);
}
}
return null;
};
dojo.lang.shallowCopy=function(obj,deep){
var i,ret;
if(obj===null){
return null;
}
if(dojo.lang.isObject(obj)){
ret=new obj.constructor();
for(i in obj){
if(dojo.lang.isUndefined(ret[i])){
ret[i]=deep?dojo.lang.shallowCopy(obj[i],deep):obj[i];
}
}
}else{
if(dojo.lang.isArray(obj)){
ret=[];
for(i=0;i<obj.length;i++){
ret[i]=deep?dojo.lang.shallowCopy(obj[i],deep):obj[i];
}
}else{
ret=obj;
}
}
return ret;
};
dojo.lang.firstValued=function(){
for(var i=0;i<arguments.length;i++){
if(typeof arguments[i]!="undefined"){
return arguments[i];
}
}
return undefined;
};
dojo.lang.getObjPathValue=function(_47a,_47b,_47c){
with(dojo.parseObjPath(_47a,_47b,_47c)){
return dojo.evalProp(prop,obj,_47c);
}
};
dojo.lang.setObjPathValue=function(_47d,_47e,_47f,_480){
dojo.deprecated("dojo.lang.setObjPathValue","use dojo.parseObjPath and the '=' operator","0.6");
if(arguments.length<4){
_480=true;
}
with(dojo.parseObjPath(_47d,_47f,_480)){
if(obj&&(_480||(prop in obj))){
obj[prop]=_47e;
}
}
};
dojo.provide("dojo.event.common");
dojo.event=new function(){
this._canTimeout=dojo.lang.isFunction(dj_global["setTimeout"])||dojo.lang.isAlien(dj_global["setTimeout"]);
function interpolateArgs(args,_482){
var dl=dojo.lang;
var ao={srcObj:dj_global,srcFunc:null,adviceObj:dj_global,adviceFunc:null,aroundObj:null,aroundFunc:null,adviceType:(args.length>2)?args[0]:"after",precedence:"last",once:false,delay:null,rate:0,adviceMsg:false};
switch(args.length){
case 0:
return;
case 1:
return;
case 2:
ao.srcFunc=args[0];
ao.adviceFunc=args[1];
break;
case 3:
if((dl.isObject(args[0]))&&(dl.isString(args[1]))&&(dl.isString(args[2]))){
ao.adviceType="after";
ao.srcObj=args[0];
ao.srcFunc=args[1];
ao.adviceFunc=args[2];
}else{
if((dl.isString(args[1]))&&(dl.isString(args[2]))){
ao.srcFunc=args[1];
ao.adviceFunc=args[2];
}else{
if((dl.isObject(args[0]))&&(dl.isString(args[1]))&&(dl.isFunction(args[2]))){
ao.adviceType="after";
ao.srcObj=args[0];
ao.srcFunc=args[1];
var _485=dl.nameAnonFunc(args[2],ao.adviceObj,_482);
ao.adviceFunc=_485;
}else{
if((dl.isFunction(args[0]))&&(dl.isObject(args[1]))&&(dl.isString(args[2]))){
ao.adviceType="after";
ao.srcObj=dj_global;
var _485=dl.nameAnonFunc(args[0],ao.srcObj,_482);
ao.srcFunc=_485;
ao.adviceObj=args[1];
ao.adviceFunc=args[2];
}
}
}
}
break;
case 4:
if((dl.isObject(args[0]))&&(dl.isObject(args[2]))){
ao.adviceType="after";
ao.srcObj=args[0];
ao.srcFunc=args[1];
ao.adviceObj=args[2];
ao.adviceFunc=args[3];
}else{
if((dl.isString(args[0]))&&(dl.isString(args[1]))&&(dl.isObject(args[2]))){
ao.adviceType=args[0];
ao.srcObj=dj_global;
ao.srcFunc=args[1];
ao.adviceObj=args[2];
ao.adviceFunc=args[3];
}else{
if((dl.isString(args[0]))&&(dl.isFunction(args[1]))&&(dl.isObject(args[2]))){
ao.adviceType=args[0];
ao.srcObj=dj_global;
var _485=dl.nameAnonFunc(args[1],dj_global,_482);
ao.srcFunc=_485;
ao.adviceObj=args[2];
ao.adviceFunc=args[3];
}else{
if((dl.isString(args[0]))&&(dl.isObject(args[1]))&&(dl.isString(args[2]))&&(dl.isFunction(args[3]))){
ao.srcObj=args[1];
ao.srcFunc=args[2];
var _485=dl.nameAnonFunc(args[3],dj_global,_482);
ao.adviceObj=dj_global;
ao.adviceFunc=_485;
}else{
if(dl.isObject(args[1])){
ao.srcObj=args[1];
ao.srcFunc=args[2];
ao.adviceObj=dj_global;
ao.adviceFunc=args[3];
}else{
if(dl.isObject(args[2])){
ao.srcObj=dj_global;
ao.srcFunc=args[1];
ao.adviceObj=args[2];
ao.adviceFunc=args[3];
}else{
ao.srcObj=ao.adviceObj=ao.aroundObj=dj_global;
ao.srcFunc=args[1];
ao.adviceFunc=args[2];
ao.aroundFunc=args[3];
}
}
}
}
}
}
break;
case 6:
ao.srcObj=args[1];
ao.srcFunc=args[2];
ao.adviceObj=args[3];
ao.adviceFunc=args[4];
ao.aroundFunc=args[5];
ao.aroundObj=dj_global;
break;
default:
ao.srcObj=args[1];
ao.srcFunc=args[2];
ao.adviceObj=args[3];
ao.adviceFunc=args[4];
ao.aroundObj=args[5];
ao.aroundFunc=args[6];
ao.once=args[7];
ao.delay=args[8];
ao.rate=args[9];
ao.adviceMsg=args[10];
break;
}
if(dl.isFunction(ao.aroundFunc)){
var _485=dl.nameAnonFunc(ao.aroundFunc,ao.aroundObj,_482);
ao.aroundFunc=_485;
}
if(dl.isFunction(ao.srcFunc)){
ao.srcFunc=dl.getNameInObj(ao.srcObj,ao.srcFunc);
}
if(dl.isFunction(ao.adviceFunc)){
ao.adviceFunc=dl.getNameInObj(ao.adviceObj,ao.adviceFunc);
}
if((ao.aroundObj)&&(dl.isFunction(ao.aroundFunc))){
ao.aroundFunc=dl.getNameInObj(ao.aroundObj,ao.aroundFunc);
}
if(!ao.srcObj){
dojo.raise("bad srcObj for srcFunc: "+ao.srcFunc);
}
if(!ao.adviceObj){
dojo.raise("bad adviceObj for adviceFunc: "+ao.adviceFunc);
}
if(!ao.adviceFunc){
dojo.debug("bad adviceFunc for srcFunc: "+ao.srcFunc);
dojo.debugShallow(ao);
}
return ao;
}
this.connect=function(){
if(arguments.length==1){
var ao=arguments[0];
}else{
var ao=interpolateArgs(arguments,true);
}
if(dojo.lang.isString(ao.srcFunc)&&(ao.srcFunc.toLowerCase()=="onkey")){
if(dojo.render.html.ie){
ao.srcFunc="onkeydown";
this.connect(ao);
}
ao.srcFunc="onkeypress";
}
if(dojo.lang.isArray(ao.srcObj)&&ao.srcObj!=""){
var _487={};
for(var x in ao){
_487[x]=ao[x];
}
var mjps=[];
dojo.lang.forEach(ao.srcObj,function(src){
if((dojo.render.html.capable)&&(dojo.lang.isString(src))){
src=dojo.byId(src);
}
_487.srcObj=src;
mjps.push(dojo.event.connect.call(dojo.event,_487));
});
return mjps;
}
var mjp=dojo.event.MethodJoinPoint.getForMethod(ao.srcObj,ao.srcFunc);
if(ao.adviceFunc){
var mjp2=dojo.event.MethodJoinPoint.getForMethod(ao.adviceObj,ao.adviceFunc);
}
mjp.kwAddAdvice(ao);
return mjp;
};
this.log=function(a1,a2){
var _48f;
if((arguments.length==1)&&(typeof a1=="object")){
_48f=a1;
}else{
_48f={srcObj:a1,srcFunc:a2};
}
_48f.adviceFunc=function(){
var _490=[];
for(var x=0;x<arguments.length;x++){
_490.push(arguments[x]);
}
dojo.debug("("+_48f.srcObj+")."+_48f.srcFunc,":",_490.join(", "));
};
this.kwConnect(_48f);
};
this.connectBefore=function(){
var args=["before"];
for(var i=0;i<arguments.length;i++){
args.push(arguments[i]);
}
return this.connect.apply(this,args);
};
this.connectAround=function(){
var args=["around"];
for(var i=0;i<arguments.length;i++){
args.push(arguments[i]);
}
return this.connect.apply(this,args);
};
this.connectOnce=function(){
var ao=interpolateArgs(arguments,true);
ao.once=true;
return this.connect(ao);
};
this._kwConnectImpl=function(_497,_498){
var fn=(_498)?"disconnect":"connect";
if(typeof _497["srcFunc"]=="function"){
_497.srcObj=_497["srcObj"]||dj_global;
var _49a=dojo.lang.nameAnonFunc(_497.srcFunc,_497.srcObj,true);
_497.srcFunc=_49a;
}
if(typeof _497["adviceFunc"]=="function"){
_497.adviceObj=_497["adviceObj"]||dj_global;
var _49a=dojo.lang.nameAnonFunc(_497.adviceFunc,_497.adviceObj,true);
_497.adviceFunc=_49a;
}
_497.srcObj=_497["srcObj"]||dj_global;
_497.adviceObj=_497["adviceObj"]||_497["targetObj"]||dj_global;
_497.adviceFunc=_497["adviceFunc"]||_497["targetFunc"];
return dojo.event[fn](_497);
};
this.kwConnect=function(_49b){
return this._kwConnectImpl(_49b,false);
};
this.disconnect=function(){
if(arguments.length==1){
var ao=arguments[0];
}else{
var ao=interpolateArgs(arguments,true);
}
if(!ao.adviceFunc){
return;
}
if(dojo.lang.isString(ao.srcFunc)&&(ao.srcFunc.toLowerCase()=="onkey")){
if(dojo.render.html.ie){
ao.srcFunc="onkeydown";
this.disconnect(ao);
}
ao.srcFunc="onkeypress";
}
if(!ao.srcObj[ao.srcFunc]){
return null;
}
var mjp=dojo.event.MethodJoinPoint.getForMethod(ao.srcObj,ao.srcFunc,true);
mjp.removeAdvice(ao.adviceObj,ao.adviceFunc,ao.adviceType,ao.once);
return mjp;
};
this.kwDisconnect=function(_49e){
return this._kwConnectImpl(_49e,true);
};
};
dojo.event.MethodInvocation=function(_49f,obj,args){
this.jp_=_49f;
this.object=obj;
this.args=[];
for(var x=0;x<args.length;x++){
this.args[x]=args[x];
}
this.around_index=-1;
};
dojo.event.MethodInvocation.prototype.proceed=function(){
this.around_index++;
if(this.around_index>=this.jp_.around.length){
return this.jp_.object[this.jp_.methodname].apply(this.jp_.object,this.args);
}else{
var ti=this.jp_.around[this.around_index];
var mobj=ti[0]||dj_global;
var meth=ti[1];
return mobj[meth].call(mobj,this);
}
};
dojo.event.MethodJoinPoint=function(obj,_4a7){
this.object=obj||dj_global;
this.methodname=_4a7;
this.methodfunc=this.object[_4a7];
this.squelch=false;
};
dojo.event.MethodJoinPoint.getForMethod=function(obj,_4a9){
if(!obj){
obj=dj_global;
}
if(!obj[_4a9]){
obj[_4a9]=function(){
};
if(!obj[_4a9]){
dojo.raise("Cannot set do-nothing method on that object "+_4a9);
}
}else{
if((!dojo.lang.isFunction(obj[_4a9]))&&(!dojo.lang.isAlien(obj[_4a9]))){
return null;
}
}
var _4aa=_4a9+"$joinpoint";
var _4ab=_4a9+"$joinpoint$method";
var _4ac=obj[_4aa];
if(!_4ac){
var _4ad=false;
if(dojo.event["browser"]){
if((obj["attachEvent"])||(obj["nodeType"])||(obj["addEventListener"])){
_4ad=true;
dojo.event.browser.addClobberNodeAttrs(obj,[_4aa,_4ab,_4a9]);
}
}
var _4ae=obj[_4a9].length;
obj[_4ab]=obj[_4a9];
_4ac=obj[_4aa]=new dojo.event.MethodJoinPoint(obj,_4ab);
obj[_4a9]=function(){
var args=[];
if((_4ad)&&(!arguments.length)){
var evt=null;
try{
if(obj.ownerDocument){
evt=obj.ownerDocument.parentWindow.event;
}else{
if(obj.documentElement){
evt=obj.documentElement.ownerDocument.parentWindow.event;
}else{
if(obj.event){
evt=obj.event;
}else{
evt=window.event;
}
}
}
}
catch(e){
evt=window.event;
}
if(evt){
args.push(dojo.event.browser.fixEvent(evt,this));
}
}else{
for(var x=0;x<arguments.length;x++){
if((x==0)&&(_4ad)&&(dojo.event.browser.isEvent(arguments[x]))){
args.push(dojo.event.browser.fixEvent(arguments[x],this));
}else{
args.push(arguments[x]);
}
}
}
return _4ac.run.apply(_4ac,args);
};
obj[_4a9].__preJoinArity=_4ae;
}
return _4ac;
};
dojo.lang.extend(dojo.event.MethodJoinPoint,{unintercept:function(){
this.object[this.methodname]=this.methodfunc;
this.before=[];
this.after=[];
this.around=[];
},disconnect:dojo.lang.forward("unintercept"),run:function(){
var obj=this.object||dj_global;
var args=arguments;
var _4b4=[];
for(var x=0;x<args.length;x++){
_4b4[x]=args[x];
}
var _4b6=function(marr){
if(!marr){
dojo.debug("Null argument to unrollAdvice()");
return;
}
var _4b8=marr[0]||dj_global;
var _4b9=marr[1];
if(!_4b8[_4b9]){
dojo.raise("function \""+_4b9+"\" does not exist on \""+_4b8+"\"");
}
var _4ba=marr[2]||dj_global;
var _4bb=marr[3];
var msg=marr[6];
var _4bd;
var to={args:[],jp_:this,object:obj,proceed:function(){
return _4b8[_4b9].apply(_4b8,to.args);
}};
to.args=_4b4;
var _4bf=parseInt(marr[4]);
var _4c0=((!isNaN(_4bf))&&(marr[4]!==null)&&(typeof marr[4]!="undefined"));
if(marr[5]){
var rate=parseInt(marr[5]);
var cur=new Date();
var _4c3=false;
if((marr["last"])&&((cur-marr.last)<=rate)){
if(dojo.event._canTimeout){
if(marr["delayTimer"]){
clearTimeout(marr.delayTimer);
}
var tod=parseInt(rate*2);
var mcpy=dojo.lang.shallowCopy(marr);
marr.delayTimer=setTimeout(function(){
mcpy[5]=0;
_4b6(mcpy);
},tod);
}
return;
}else{
marr.last=cur;
}
}
if(_4bb){
_4ba[_4bb].call(_4ba,to);
}else{
if((_4c0)&&((dojo.render.html)||(dojo.render.svg))){
dj_global["setTimeout"](function(){
if(msg){
_4b8[_4b9].call(_4b8,to);
}else{
_4b8[_4b9].apply(_4b8,args);
}
},_4bf);
}else{
if(msg){
_4b8[_4b9].call(_4b8,to);
}else{
_4b8[_4b9].apply(_4b8,args);
}
}
}
};
var _4c6=function(){
if(this.squelch){
try{
return _4b6.apply(this,arguments);
}
catch(e){
dojo.debug(e);
}
}else{
return _4b6.apply(this,arguments);
}
};
if((this["before"])&&(this.before.length>0)){
dojo.lang.forEach(this.before.concat(new Array()),_4c6);
}
var _4c7;
try{
if((this["around"])&&(this.around.length>0)){
var mi=new dojo.event.MethodInvocation(this,obj,args);
_4c7=mi.proceed();
}else{
if(this.methodfunc){
_4c7=this.object[this.methodname].apply(this.object,args);
}
}
}
catch(e){
if(!this.squelch){
dojo.debug(e,"when calling",this.methodname,"on",this.object,"with arguments",args);
dojo.raise(e);
}
}
if((this["after"])&&(this.after.length>0)){
dojo.lang.forEach(this.after.concat(new Array()),_4c6);
}
return (this.methodfunc)?_4c7:null;
},getArr:function(kind){
var type="after";
if((typeof kind=="string")&&(kind.indexOf("before")!=-1)){
type="before";
}else{
if(kind=="around"){
type="around";
}
}
if(!this[type]){
this[type]=[];
}
return this[type];
},kwAddAdvice:function(args){
this.addAdvice(args["adviceObj"],args["adviceFunc"],args["aroundObj"],args["aroundFunc"],args["adviceType"],args["precedence"],args["once"],args["delay"],args["rate"],args["adviceMsg"]);
},addAdvice:function(_4cc,_4cd,_4ce,_4cf,_4d0,_4d1,once,_4d3,rate,_4d5){
var arr=this.getArr(_4d0);
if(!arr){
dojo.raise("bad this: "+this);
}
var ao=[_4cc,_4cd,_4ce,_4cf,_4d3,rate,_4d5];
if(once){
if(this.hasAdvice(_4cc,_4cd,_4d0,arr)>=0){
return;
}
}
if(_4d1=="first"){
arr.unshift(ao);
}else{
arr.push(ao);
}
},hasAdvice:function(_4d8,_4d9,_4da,arr){
if(!arr){
arr=this.getArr(_4da);
}
var ind=-1;
for(var x=0;x<arr.length;x++){
var aao=(typeof _4d9=="object")?(new String(_4d9)).toString():_4d9;
var a1o=(typeof arr[x][1]=="object")?(new String(arr[x][1])).toString():arr[x][1];
if((arr[x][0]==_4d8)&&(a1o==aao)){
ind=x;
}
}
return ind;
},removeAdvice:function(_4e0,_4e1,_4e2,once){
var arr=this.getArr(_4e2);
var ind=this.hasAdvice(_4e0,_4e1,_4e2,arr);
if(ind==-1){
return false;
}
while(ind!=-1){
arr.splice(ind,1);
if(once){
break;
}
ind=this.hasAdvice(_4e0,_4e1,_4e2,arr);
}
return true;
}});
dojo.provide("dojo.event.topic");
dojo.event.topic=new function(){
this.topics={};
this.getTopic=function(_4e6){
if(!this.topics[_4e6]){
this.topics[_4e6]=new this.TopicImpl(_4e6);
}
return this.topics[_4e6];
};
this.registerPublisher=function(_4e7,obj,_4e9){
var _4e7=this.getTopic(_4e7);
_4e7.registerPublisher(obj,_4e9);
};
this.subscribe=function(_4ea,obj,_4ec){
var _4ea=this.getTopic(_4ea);
_4ea.subscribe(obj,_4ec);
};
this.unsubscribe=function(_4ed,obj,_4ef){
var _4ed=this.getTopic(_4ed);
_4ed.unsubscribe(obj,_4ef);
};
this.destroy=function(_4f0){
this.getTopic(_4f0).destroy();
delete this.topics[_4f0];
};
this.publishApply=function(_4f1,args){
var _4f1=this.getTopic(_4f1);
_4f1.sendMessage.apply(_4f1,args);
};
this.publish=function(_4f3,_4f4){
var _4f3=this.getTopic(_4f3);
var args=[];
for(var x=1;x<arguments.length;x++){
args.push(arguments[x]);
}
_4f3.sendMessage.apply(_4f3,args);
};
};
dojo.event.topic.TopicImpl=function(_4f7){
this.topicName=_4f7;
this.subscribe=function(_4f8,_4f9){
var tf=_4f9||_4f8;
var to=(!_4f9)?dj_global:_4f8;
return dojo.event.kwConnect({srcObj:this,srcFunc:"sendMessage",adviceObj:to,adviceFunc:tf});
};
this.unsubscribe=function(_4fc,_4fd){
var tf=(!_4fd)?_4fc:_4fd;
var to=(!_4fd)?null:_4fc;
return dojo.event.kwDisconnect({srcObj:this,srcFunc:"sendMessage",adviceObj:to,adviceFunc:tf});
};
this._getJoinPoint=function(){
return dojo.event.MethodJoinPoint.getForMethod(this,"sendMessage");
};
this.setSquelch=function(_500){
this._getJoinPoint().squelch=_500;
};
this.destroy=function(){
this._getJoinPoint().disconnect();
};
this.registerPublisher=function(_501,_502){
dojo.event.connect(_501,_502,this,"sendMessage");
};
this.sendMessage=function(_503){
};
};
dojo.provide("dojo.event.browser");
dojo._ie_clobber=new function(){
this.clobberNodes=[];
function nukeProp(node,prop){
try{
node[prop]=null;
}
catch(e){
}
try{
delete node[prop];
}
catch(e){
}
try{
node.removeAttribute(prop);
}
catch(e){
}
}
this.clobber=function(_506){
var na;
var tna;
if(_506){
tna=_506.all||_506.getElementsByTagName("*");
na=[_506];
for(var x=0;x<tna.length;x++){
if(tna[x]["__doClobber__"]){
na.push(tna[x]);
}
}
}else{
try{
window.onload=null;
}
catch(e){
}
na=(this.clobberNodes.length)?this.clobberNodes:document.all;
}
tna=null;
var _50a={};
for(var i=na.length-1;i>=0;i=i-1){
var el=na[i];
try{
if(el&&el["__clobberAttrs__"]){
for(var j=0;j<el.__clobberAttrs__.length;j++){
nukeProp(el,el.__clobberAttrs__[j]);
}
nukeProp(el,"__clobberAttrs__");
nukeProp(el,"__doClobber__");
}
}
catch(e){
}
}
na=null;
};
};
if(dojo.render.html.ie){
dojo.addOnUnload(function(){
dojo._ie_clobber.clobber();
try{
if((dojo["widget"])&&(dojo.widget["manager"])){
dojo.widget.manager.destroyAll();
}
}
catch(e){
}
if(dojo.widget){
for(var name in dojo.widget._templateCache){
if(dojo.widget._templateCache[name].node){
dojo.dom.destroyNode(dojo.widget._templateCache[name].node);
dojo.widget._templateCache[name].node=null;
delete dojo.widget._templateCache[name].node;
}
}
}
try{
window.onload=null;
}
catch(e){
}
try{
window.onunload=null;
}
catch(e){
}
dojo._ie_clobber.clobberNodes=[];
});
}
dojo.event.browser=new function(){
var _50f=0;
this.normalizedEventName=function(_510){
switch(_510){
case "CheckboxStateChange":
case "DOMAttrModified":
case "DOMMenuItemActive":
case "DOMMenuItemInactive":
case "DOMMouseScroll":
case "DOMNodeInserted":
case "DOMNodeRemoved":
case "RadioStateChange":
return _510;
break;
default:
return _510.toLowerCase();
break;
}
};
this.clean=function(node){
if(dojo.render.html.ie){
dojo._ie_clobber.clobber(node);
}
};
this.addClobberNode=function(node){
if(!dojo.render.html.ie){
return;
}
if(!node["__doClobber__"]){
node.__doClobber__=true;
dojo._ie_clobber.clobberNodes.push(node);
node.__clobberAttrs__=[];
}
};
this.addClobberNodeAttrs=function(node,_514){
if(!dojo.render.html.ie){
return;
}
this.addClobberNode(node);
for(var x=0;x<_514.length;x++){
node.__clobberAttrs__.push(_514[x]);
}
};
this.removeListener=function(node,_517,fp,_519){
if(!_519){
var _519=false;
}
_517=dojo.event.browser.normalizedEventName(_517);
if((_517=="onkey")||(_517=="key")){
if(dojo.render.html.ie){
this.removeListener(node,"onkeydown",fp,_519);
}
_517="onkeypress";
}
if(_517.substr(0,2)=="on"){
_517=_517.substr(2);
}
if(node.removeEventListener){
node.removeEventListener(_517,fp,_519);
}
};
this.addListener=function(node,_51b,fp,_51d,_51e){
if(!node){
return;
}
if(!_51d){
var _51d=false;
}
_51b=dojo.event.browser.normalizedEventName(_51b);
if((_51b=="onkey")||(_51b=="key")){
if(dojo.render.html.ie){
this.addListener(node,"onkeydown",fp,_51d,_51e);
}
_51b="onkeypress";
}
if(_51b.substr(0,2)!="on"){
_51b="on"+_51b;
}
if(!_51e){
var _51f=function(evt){
if(!evt){
evt=window.event;
}
var ret=fp(dojo.event.browser.fixEvent(evt,this));
if(_51d){
dojo.event.browser.stopEvent(evt);
}
return ret;
};
}else{
_51f=fp;
}
if(node.addEventListener){
node.addEventListener(_51b.substr(2),_51f,_51d);
return _51f;
}else{
if(typeof node[_51b]=="function"){
var _522=node[_51b];
node[_51b]=function(e){
_522(e);
return _51f(e);
};
}else{
node[_51b]=_51f;
}
if(dojo.render.html.ie){
this.addClobberNodeAttrs(node,[_51b]);
}
return _51f;
}
};
this.isEvent=function(obj){
return (typeof obj!="undefined")&&(obj)&&(typeof Event!="undefined")&&(obj.eventPhase);
};
this.currentEvent=null;
this.callListener=function(_525,_526){
if(typeof _525!="function"){
dojo.raise("listener not a function: "+_525);
}
dojo.event.browser.currentEvent.currentTarget=_526;
return _525.call(_526,dojo.event.browser.currentEvent);
};
this._stopPropagation=function(){
dojo.event.browser.currentEvent.cancelBubble=true;
};
this._preventDefault=function(){
dojo.event.browser.currentEvent.returnValue=false;
};
this.keys={KEY_BACKSPACE:8,KEY_TAB:9,KEY_CLEAR:12,KEY_ENTER:13,KEY_SHIFT:16,KEY_CTRL:17,KEY_ALT:18,KEY_PAUSE:19,KEY_CAPS_LOCK:20,KEY_ESCAPE:27,KEY_SPACE:32,KEY_PAGE_UP:33,KEY_PAGE_DOWN:34,KEY_END:35,KEY_HOME:36,KEY_LEFT_ARROW:37,KEY_UP_ARROW:38,KEY_RIGHT_ARROW:39,KEY_DOWN_ARROW:40,KEY_INSERT:45,KEY_DELETE:46,KEY_HELP:47,KEY_LEFT_WINDOW:91,KEY_RIGHT_WINDOW:92,KEY_SELECT:93,KEY_NUMPAD_0:96,KEY_NUMPAD_1:97,KEY_NUMPAD_2:98,KEY_NUMPAD_3:99,KEY_NUMPAD_4:100,KEY_NUMPAD_5:101,KEY_NUMPAD_6:102,KEY_NUMPAD_7:103,KEY_NUMPAD_8:104,KEY_NUMPAD_9:105,KEY_NUMPAD_MULTIPLY:106,KEY_NUMPAD_PLUS:107,KEY_NUMPAD_ENTER:108,KEY_NUMPAD_MINUS:109,KEY_NUMPAD_PERIOD:110,KEY_NUMPAD_DIVIDE:111,KEY_F1:112,KEY_F2:113,KEY_F3:114,KEY_F4:115,KEY_F5:116,KEY_F6:117,KEY_F7:118,KEY_F8:119,KEY_F9:120,KEY_F10:121,KEY_F11:122,KEY_F12:123,KEY_F13:124,KEY_F14:125,KEY_F15:126,KEY_NUM_LOCK:144,KEY_SCROLL_LOCK:145};
this.revKeys=[];
for(var key in this.keys){
this.revKeys[this.keys[key]]=key;
}
this.fixEvent=function(evt,_529){
if(!evt){
if(window["event"]){
evt=window.event;
}
}
if((evt["type"])&&(evt["type"].indexOf("key")==0)){
evt.keys=this.revKeys;
for(var key in this.keys){
evt[key]=this.keys[key];
}
if(evt["type"]=="keydown"&&dojo.render.html.ie){
switch(evt.keyCode){
case evt.KEY_SHIFT:
case evt.KEY_CTRL:
case evt.KEY_ALT:
case evt.KEY_CAPS_LOCK:
case evt.KEY_LEFT_WINDOW:
case evt.KEY_RIGHT_WINDOW:
case evt.KEY_SELECT:
case evt.KEY_NUM_LOCK:
case evt.KEY_SCROLL_LOCK:
case evt.KEY_NUMPAD_0:
case evt.KEY_NUMPAD_1:
case evt.KEY_NUMPAD_2:
case evt.KEY_NUMPAD_3:
case evt.KEY_NUMPAD_4:
case evt.KEY_NUMPAD_5:
case evt.KEY_NUMPAD_6:
case evt.KEY_NUMPAD_7:
case evt.KEY_NUMPAD_8:
case evt.KEY_NUMPAD_9:
case evt.KEY_NUMPAD_PERIOD:
break;
case evt.KEY_NUMPAD_MULTIPLY:
case evt.KEY_NUMPAD_PLUS:
case evt.KEY_NUMPAD_ENTER:
case evt.KEY_NUMPAD_MINUS:
case evt.KEY_NUMPAD_DIVIDE:
break;
case evt.KEY_PAUSE:
case evt.KEY_TAB:
case evt.KEY_BACKSPACE:
case evt.KEY_ENTER:
case evt.KEY_ESCAPE:
case evt.KEY_PAGE_UP:
case evt.KEY_PAGE_DOWN:
case evt.KEY_END:
case evt.KEY_HOME:
case evt.KEY_LEFT_ARROW:
case evt.KEY_UP_ARROW:
case evt.KEY_RIGHT_ARROW:
case evt.KEY_DOWN_ARROW:
case evt.KEY_INSERT:
case evt.KEY_DELETE:
case evt.KEY_F1:
case evt.KEY_F2:
case evt.KEY_F3:
case evt.KEY_F4:
case evt.KEY_F5:
case evt.KEY_F6:
case evt.KEY_F7:
case evt.KEY_F8:
case evt.KEY_F9:
case evt.KEY_F10:
case evt.KEY_F11:
case evt.KEY_F12:
case evt.KEY_F12:
case evt.KEY_F13:
case evt.KEY_F14:
case evt.KEY_F15:
case evt.KEY_CLEAR:
case evt.KEY_HELP:
evt.key=evt.keyCode;
break;
default:
if(evt.ctrlKey||evt.altKey){
var _52b=evt.keyCode;
if(_52b>=65&&_52b<=90&&evt.shiftKey==false){
_52b+=32;
}
if(_52b>=1&&_52b<=26&&evt.ctrlKey){
_52b+=96;
}
evt.key=String.fromCharCode(_52b);
}
}
}else{
if(evt["type"]=="keypress"){
if(dojo.render.html.opera){
if(evt.which==0){
evt.key=evt.keyCode;
}else{
if(evt.which>0){
switch(evt.which){
case evt.KEY_SHIFT:
case evt.KEY_CTRL:
case evt.KEY_ALT:
case evt.KEY_CAPS_LOCK:
case evt.KEY_NUM_LOCK:
case evt.KEY_SCROLL_LOCK:
break;
case evt.KEY_PAUSE:
case evt.KEY_TAB:
case evt.KEY_BACKSPACE:
case evt.KEY_ENTER:
case evt.KEY_ESCAPE:
evt.key=evt.which;
break;
default:
var _52b=evt.which;
if((evt.ctrlKey||evt.altKey||evt.metaKey)&&(evt.which>=65&&evt.which<=90&&evt.shiftKey==false)){
_52b+=32;
}
evt.key=String.fromCharCode(_52b);
}
}
}
}else{
if(dojo.render.html.ie){
if(!evt.ctrlKey&&!evt.altKey&&evt.keyCode>=evt.KEY_SPACE){
evt.key=String.fromCharCode(evt.keyCode);
}
}else{
if(dojo.render.html.safari){
switch(evt.keyCode){
case 25:
evt.key=evt.KEY_TAB;
evt.shift=true;
break;
case 63232:
evt.key=evt.KEY_UP_ARROW;
break;
case 63233:
evt.key=evt.KEY_DOWN_ARROW;
break;
case 63234:
evt.key=evt.KEY_LEFT_ARROW;
break;
case 63235:
evt.key=evt.KEY_RIGHT_ARROW;
break;
case 63236:
evt.key=evt.KEY_F1;
break;
case 63237:
evt.key=evt.KEY_F2;
break;
case 63238:
evt.key=evt.KEY_F3;
break;
case 63239:
evt.key=evt.KEY_F4;
break;
case 63240:
evt.key=evt.KEY_F5;
break;
case 63241:
evt.key=evt.KEY_F6;
break;
case 63242:
evt.key=evt.KEY_F7;
break;
case 63243:
evt.key=evt.KEY_F8;
break;
case 63244:
evt.key=evt.KEY_F9;
break;
case 63245:
evt.key=evt.KEY_F10;
break;
case 63246:
evt.key=evt.KEY_F11;
break;
case 63247:
evt.key=evt.KEY_F12;
break;
case 63250:
evt.key=evt.KEY_PAUSE;
break;
case 63272:
evt.key=evt.KEY_DELETE;
break;
case 63273:
evt.key=evt.KEY_HOME;
break;
case 63275:
evt.key=evt.KEY_END;
break;
case 63276:
evt.key=evt.KEY_PAGE_UP;
break;
case 63277:
evt.key=evt.KEY_PAGE_DOWN;
break;
case 63302:
evt.key=evt.KEY_INSERT;
break;
case 63248:
case 63249:
case 63289:
break;
default:
evt.key=evt.charCode>=evt.KEY_SPACE?String.fromCharCode(evt.charCode):evt.keyCode;
}
}else{
evt.key=evt.charCode>0?String.fromCharCode(evt.charCode):evt.keyCode;
}
}
}
}
}
}
if(dojo.render.html.ie){
if(!evt.target){
evt.target=evt.srcElement;
}
if(!evt.currentTarget){
evt.currentTarget=(_529?_529:evt.srcElement);
}
if(!evt.layerX){
evt.layerX=evt.offsetX;
}
if(!evt.layerY){
evt.layerY=evt.offsetY;
}
var doc=(evt.srcElement&&evt.srcElement.ownerDocument)?evt.srcElement.ownerDocument:document;
var _52d=((dojo.render.html.ie55)||(doc["compatMode"]=="BackCompat"))?doc.body:doc.documentElement;
if(!evt.pageX){
evt.pageX=evt.clientX+(_52d.scrollLeft||0);
}
if(!evt.pageY){
evt.pageY=evt.clientY+(_52d.scrollTop||0);
}
if(evt.type=="mouseover"){
evt.relatedTarget=evt.fromElement;
}
if(evt.type=="mouseout"){
evt.relatedTarget=evt.toElement;
}
this.currentEvent=evt;
evt.callListener=this.callListener;
evt.stopPropagation=this._stopPropagation;
evt.preventDefault=this._preventDefault;
}
return evt;
};
this.stopEvent=function(evt){
if(window.event){
evt.cancelBubble=true;
evt.returnValue=false;
}else{
evt.preventDefault();
evt.stopPropagation();
}
};
};
dojo.provide("dojo.event.*");
dojo.provide("dojo.lang.declare");
dojo.lang.declare=function(_52f,_530,init,_532){
if((dojo.lang.isFunction(_532))||((!_532)&&(!dojo.lang.isFunction(init)))){
var temp=_532;
_532=init;
init=temp;
}
var _534=[];
if(dojo.lang.isArray(_530)){
_534=_530;
_530=_534.shift();
}
if(!init){
init=dojo.evalObjPath(_52f,false);
if((init)&&(!dojo.lang.isFunction(init))){
init=null;
}
}
var ctor=dojo.lang.declare._makeConstructor();
var scp=(_530?_530.prototype:null);
if(scp){
scp.prototyping=true;
ctor.prototype=new _530();
scp.prototyping=false;
}
ctor.superclass=scp;
ctor.mixins=_534;
for(var i=0,l=_534.length;i<l;i++){
dojo.lang.extend(ctor,_534[i].prototype);
}
ctor.prototype.initializer=null;
ctor.prototype.declaredClass=_52f;
if(dojo.lang.isArray(_532)){
dojo.lang.extend.apply(dojo.lang,[ctor].concat(_532));
}else{
dojo.lang.extend(ctor,(_532)||{});
}
dojo.lang.extend(ctor,dojo.lang.declare._common);
ctor.prototype.constructor=ctor;
ctor.prototype.initializer=(ctor.prototype.initializer)||(init)||(function(){
});
var _539=dojo.parseObjPath(_52f,null,true);
_539.obj[_539.prop]=ctor;
return ctor;
};
dojo.lang.declare._makeConstructor=function(){
return function(){
var self=this._getPropContext();
var s=self.constructor.superclass;
if((s)&&(s.constructor)){
if(s.constructor==arguments.callee){
this._inherited("constructor",arguments);
}else{
this._contextMethod(s,"constructor",arguments);
}
}
var ms=(self.constructor.mixins)||([]);
for(var i=0,m;(m=ms[i]);i++){
(((m.prototype)&&(m.prototype.initializer))||(m)).apply(this,arguments);
}
if((!this.prototyping)&&(self.initializer)){
self.initializer.apply(this,arguments);
}
};
};
dojo.lang.declare._common={_getPropContext:function(){
return (this.___proto||this);
},_contextMethod:function(_53f,_540,args){
var _542,_543=this.___proto;
this.___proto=_53f;
try{
_542=_53f[_540].apply(this,(args||[]));
}
catch(e){
throw e;
}
finally{
this.___proto=_543;
}
return _542;
},_inherited:function(prop,args){
var p=this._getPropContext();
do{
if((!p.constructor)||(!p.constructor.superclass)){
return;
}
p=p.constructor.superclass;
}while(!(prop in p));
return (dojo.lang.isFunction(p[prop])?this._contextMethod(p,prop,args):p[prop]);
},inherited:function(prop,args){
dojo.deprecated("'inherited' method is dangerous, do not up-call! 'inherited' is slated for removal in 0.5; name your super class (or use superclass property) instead.","0.5");
this._inherited(prop,args);
}};
dojo.declare=dojo.lang.declare;
dojo.provide("dojo.logging.Logger");
dojo.provide("dojo.logging.LogFilter");
dojo.provide("dojo.logging.Record");
dojo.provide("dojo.log");
dojo.logging.Record=function(_549,_54a){
this.level=_549;
this.message="";
this.msgArgs=[];
this.time=new Date();
if(dojo.lang.isArray(_54a)){
if(_54a.length>0&&dojo.lang.isString(_54a[0])){
this.message=_54a.shift();
}
this.msgArgs=_54a;
}else{
this.message=_54a;
}
};
dojo.logging.LogFilter=function(_54b){
this.passChain=_54b||"";
this.filter=function(_54c){
return true;
};
};
dojo.logging.Logger=function(){
this.cutOffLevel=0;
this.propagate=true;
this.parent=null;
this.data=[];
this.filters=[];
this.handlers=[];
};
dojo.extend(dojo.logging.Logger,{_argsToArr:function(args){
var ret=[];
for(var x=0;x<args.length;x++){
ret.push(args[x]);
}
return ret;
},setLevel:function(lvl){
this.cutOffLevel=parseInt(lvl);
},isEnabledFor:function(lvl){
return parseInt(lvl)>=this.cutOffLevel;
},getEffectiveLevel:function(){
if((this.cutOffLevel==0)&&(this.parent)){
return this.parent.getEffectiveLevel();
}
return this.cutOffLevel;
},addFilter:function(flt){
this.filters.push(flt);
return this.filters.length-1;
},removeFilterByIndex:function(_553){
if(this.filters[_553]){
delete this.filters[_553];
return true;
}
return false;
},removeFilter:function(_554){
for(var x=0;x<this.filters.length;x++){
if(this.filters[x]===_554){
delete this.filters[x];
return true;
}
}
return false;
},removeAllFilters:function(){
this.filters=[];
},filter:function(rec){
for(var x=0;x<this.filters.length;x++){
if((this.filters[x]["filter"])&&(!this.filters[x].filter(rec))||(rec.level<this.cutOffLevel)){
return false;
}
}
return true;
},addHandler:function(hdlr){
this.handlers.push(hdlr);
return this.handlers.length-1;
},handle:function(rec){
if((!this.filter(rec))||(rec.level<this.cutOffLevel)){
return false;
}
for(var x=0;x<this.handlers.length;x++){
if(this.handlers[x]["handle"]){
this.handlers[x].handle(rec);
}
}
return true;
},log:function(lvl,msg){
if((this.propagate)&&(this.parent)&&(this.parent.rec.level>=this.cutOffLevel)){
this.parent.log(lvl,msg);
return false;
}
this.handle(new dojo.logging.Record(lvl,msg));
return true;
},debug:function(msg){
return this.logType("DEBUG",this._argsToArr(arguments));
},info:function(msg){
return this.logType("INFO",this._argsToArr(arguments));
},warning:function(msg){
return this.logType("WARNING",this._argsToArr(arguments));
},error:function(msg){
return this.logType("ERROR",this._argsToArr(arguments));
},critical:function(msg){
return this.logType("CRITICAL",this._argsToArr(arguments));
},exception:function(msg,e,_564){
if(e){
var _565=[e.name,(e.description||e.message)];
if(e.fileName){
_565.push(e.fileName);
_565.push("line "+e.lineNumber);
}
msg+=" "+_565.join(" : ");
}
this.logType("ERROR",msg);
if(!_564){
throw e;
}
},logType:function(type,args){
return this.log.apply(this,[dojo.logging.log.getLevel(type),args]);
},warn:function(){
this.warning.apply(this,arguments);
},err:function(){
this.error.apply(this,arguments);
},crit:function(){
this.critical.apply(this,arguments);
}});
dojo.logging.LogHandler=function(_568){
this.cutOffLevel=(_568)?_568:0;
this.formatter=null;
this.data=[];
this.filters=[];
};
dojo.lang.extend(dojo.logging.LogHandler,{setFormatter:function(_569){
dojo.unimplemented("setFormatter");
},flush:function(){
},close:function(){
},handleError:function(){
dojo.deprecated("dojo.logging.LogHandler.handleError","use handle()","0.6");
},handle:function(_56a){
if((this.filter(_56a))&&(_56a.level>=this.cutOffLevel)){
this.emit(_56a);
}
},emit:function(_56b){
dojo.unimplemented("emit");
}});
void (function(){
var _56c=["setLevel","addFilter","removeFilterByIndex","removeFilter","removeAllFilters","filter"];
var tgt=dojo.logging.LogHandler.prototype;
var src=dojo.logging.Logger.prototype;
for(var x=0;x<_56c.length;x++){
tgt[_56c[x]]=src[_56c[x]];
}
})();
dojo.logging.log=new dojo.logging.Logger();
dojo.logging.log.levels=[{"name":"DEBUG","level":1},{"name":"INFO","level":2},{"name":"WARNING","level":3},{"name":"ERROR","level":4},{"name":"CRITICAL","level":5}];
dojo.logging.log.loggers={};
dojo.logging.log.getLogger=function(name){
if(!this.loggers[name]){
this.loggers[name]=new dojo.logging.Logger();
this.loggers[name].parent=this;
}
return this.loggers[name];
};
dojo.logging.log.getLevelName=function(lvl){
for(var x=0;x<this.levels.length;x++){
if(this.levels[x].level==lvl){
return this.levels[x].name;
}
}
return null;
};
dojo.logging.log.getLevel=function(name){
for(var x=0;x<this.levels.length;x++){
if(this.levels[x].name.toUpperCase()==name.toUpperCase()){
return this.levels[x].level;
}
}
return null;
};
dojo.declare("dojo.logging.MemoryLogHandler",dojo.logging.LogHandler,{initializer:function(_575,_576,_577,_578){
dojo.logging.LogHandler.call(this,_575);
this.numRecords=(typeof djConfig["loggingNumRecords"]!="undefined")?djConfig["loggingNumRecords"]:((_576)?_576:-1);
this.postType=(typeof djConfig["loggingPostType"]!="undefined")?djConfig["loggingPostType"]:(_577||-1);
this.postInterval=(typeof djConfig["loggingPostInterval"]!="undefined")?djConfig["loggingPostInterval"]:(_577||-1);
},emit:function(_579){
if(!djConfig.isDebug){
return;
}
var _57a=String(dojo.log.getLevelName(_579.level)+": "+_579.time.toLocaleTimeString())+": "+_579.message;
if(!dj_undef("println",dojo.hostenv)){
dojo.hostenv.println(_57a,_579.msgArgs);
}
this.data.push(_579);
if(this.numRecords!=-1){
while(this.data.length>this.numRecords){
this.data.shift();
}
}
}});
dojo.logging.logQueueHandler=new dojo.logging.MemoryLogHandler(0,50,0,10000);
dojo.logging.log.addHandler(dojo.logging.logQueueHandler);
dojo.log=dojo.logging.log;
dojo.provide("dojo.logging.*");
dojo.provide("dojo.string.common");
dojo.string.trim=function(str,wh){
if(!str.replace){
return str;
}
if(!str.length){
return str;
}
var re=(wh>0)?(/^\s+/):(wh<0)?(/\s+$/):(/^\s+|\s+$/g);
return str.replace(re,"");
};
dojo.string.trimStart=function(str){
return dojo.string.trim(str,1);
};
dojo.string.trimEnd=function(str){
return dojo.string.trim(str,-1);
};
dojo.string.repeat=function(str,_581,_582){
var out="";
for(var i=0;i<_581;i++){
out+=str;
if(_582&&i<_581-1){
out+=_582;
}
}
return out;
};
dojo.string.pad=function(str,len,c,dir){
var out=String(str);
if(!c){
c="0";
}
if(!dir){
dir=1;
}
while(out.length<len){
if(dir>0){
out=c+out;
}else{
out+=c;
}
}
return out;
};
dojo.string.padLeft=function(str,len,c){
return dojo.string.pad(str,len,c,1);
};
dojo.string.padRight=function(str,len,c){
return dojo.string.pad(str,len,c,-1);
};
dojo.provide("dojo.string");
dojo.provide("dojo.io.common");
dojo.io.transports=[];
dojo.io.hdlrFuncNames=["load","error","timeout"];
dojo.io.Request=function(url,_591,_592,_593){
if((arguments.length==1)&&(arguments[0].constructor==Object)){
this.fromKwArgs(arguments[0]);
}else{
this.url=url;
if(_591){
this.mimetype=_591;
}
if(_592){
this.transport=_592;
}
if(arguments.length>=4){
this.changeUrl=_593;
}
}
};
dojo.lang.extend(dojo.io.Request,{url:"",mimetype:"text/plain",method:"GET",content:undefined,transport:undefined,changeUrl:undefined,formNode:undefined,sync:false,bindSuccess:false,useCache:false,preventCache:false,load:function(type,data,_596,_597){
},error:function(type,_599,_59a,_59b){
},timeout:function(type,_59d,_59e,_59f){
},handle:function(type,data,_5a2,_5a3){
},timeoutSeconds:0,abort:function(){
},fromKwArgs:function(_5a4){
if(_5a4["url"]){
_5a4.url=_5a4.url.toString();
}
if(_5a4["formNode"]){
_5a4.formNode=dojo.byId(_5a4.formNode);
}
if(!_5a4["method"]&&_5a4["formNode"]&&_5a4["formNode"].method){
_5a4.method=_5a4["formNode"].method;
}
if(!_5a4["handle"]&&_5a4["handler"]){
_5a4.handle=_5a4.handler;
}
if(!_5a4["load"]&&_5a4["loaded"]){
_5a4.load=_5a4.loaded;
}
if(!_5a4["changeUrl"]&&_5a4["changeURL"]){
_5a4.changeUrl=_5a4.changeURL;
}
_5a4.encoding=dojo.lang.firstValued(_5a4["encoding"],djConfig["bindEncoding"],"");
_5a4.sendTransport=dojo.lang.firstValued(_5a4["sendTransport"],djConfig["ioSendTransport"],false);
var _5a5=dojo.lang.isFunction;
for(var x=0;x<dojo.io.hdlrFuncNames.length;x++){
var fn=dojo.io.hdlrFuncNames[x];
if(_5a4[fn]&&_5a5(_5a4[fn])){
continue;
}
if(_5a4["handle"]&&_5a5(_5a4["handle"])){
_5a4[fn]=_5a4.handle;
}
}
dojo.lang.mixin(this,_5a4);
}});
dojo.io.Error=function(msg,type,num){
this.message=msg;
this.type=type||"unknown";
this.number=num||0;
};
dojo.io.transports.addTransport=function(name){
this.push(name);
this[name]=dojo.io[name];
};
dojo.io.bind=function(_5ac){
if(!(_5ac instanceof dojo.io.Request)){
try{
_5ac=new dojo.io.Request(_5ac);
}
catch(e){
dojo.debug(e);
}
}
var _5ad="";
if(_5ac["transport"]){
_5ad=_5ac["transport"];
if(!this[_5ad]){
dojo.io.sendBindError(_5ac,"No dojo.io.bind() transport with name '"+_5ac["transport"]+"'.");
return _5ac;
}
if(!this[_5ad].canHandle(_5ac)){
dojo.io.sendBindError(_5ac,"dojo.io.bind() transport with name '"+_5ac["transport"]+"' cannot handle this type of request.");
return _5ac;
}
}else{
for(var x=0;x<dojo.io.transports.length;x++){
var tmp=dojo.io.transports[x];
if((this[tmp])&&(this[tmp].canHandle(_5ac))){
_5ad=tmp;
break;
}
}
if(_5ad==""){
dojo.io.sendBindError(_5ac,"None of the loaded transports for dojo.io.bind()"+" can handle the request.");
return _5ac;
}
}
this[_5ad].bind(_5ac);
_5ac.bindSuccess=true;
return _5ac;
};
dojo.io.sendBindError=function(_5b0,_5b1){
if((typeof _5b0.error=="function"||typeof _5b0.handle=="function")&&(typeof setTimeout=="function"||typeof setTimeout=="object")){
var _5b2=new dojo.io.Error(_5b1);
setTimeout(function(){
_5b0[(typeof _5b0.error=="function")?"error":"handle"]("error",_5b2,null,_5b0);
},50);
}else{
dojo.raise(_5b1);
}
};
dojo.io.queueBind=function(_5b3){
if(!(_5b3 instanceof dojo.io.Request)){
try{
_5b3=new dojo.io.Request(_5b3);
}
catch(e){
dojo.debug(e);
}
}
var _5b4=_5b3.load;
_5b3.load=function(){
dojo.io._queueBindInFlight=false;
var ret=_5b4.apply(this,arguments);
dojo.io._dispatchNextQueueBind();
return ret;
};
var _5b6=_5b3.error;
_5b3.error=function(){
dojo.io._queueBindInFlight=false;
var ret=_5b6.apply(this,arguments);
dojo.io._dispatchNextQueueBind();
return ret;
};
dojo.io._bindQueue.push(_5b3);
dojo.io._dispatchNextQueueBind();
return _5b3;
};
dojo.io._dispatchNextQueueBind=function(){
if(!dojo.io._queueBindInFlight){
dojo.io._queueBindInFlight=true;
if(dojo.io._bindQueue.length>0){
dojo.io.bind(dojo.io._bindQueue.shift());
}else{
dojo.io._queueBindInFlight=false;
}
}
};
dojo.io._bindQueue=[];
dojo.io._queueBindInFlight=false;
dojo.io.argsFromMap=function(map,_5b9,last){
var enc=/utf/i.test(_5b9||"")?encodeURIComponent:dojo.string.encodeAscii;
var _5bc=[];
var _5bd=new Object();
for(var name in map){
var _5bf=function(elt){
var val=enc(name)+"="+enc(elt);
_5bc[(last==name)?"push":"unshift"](val);
};
if(!_5bd[name]){
var _5c2=map[name];
if(dojo.lang.isArray(_5c2)){
dojo.lang.forEach(_5c2,_5bf);
}else{
_5bf(_5c2);
}
}
}
return _5bc.join("&");
};
dojo.io.setIFrameSrc=function(_5c3,src,_5c5){
try{
var r=dojo.render.html;
if(!_5c5){
if(r.safari){
_5c3.location=src;
}else{
frames[_5c3.name].location=src;
}
}else{
var idoc;
if(r.ie){
idoc=_5c3.contentWindow.document;
}else{
if(r.safari){
idoc=_5c3.document;
}else{
idoc=_5c3.contentWindow;
}
}
if(!idoc){
_5c3.location=src;
return;
}else{
idoc.location.replace(src);
}
}
}
catch(e){
dojo.debug(e);
dojo.debug("setIFrameSrc: "+e);
}
};
dojo.provide("dojo.string.extras");
dojo.string.substituteParams=function(_5c8,hash){
var map=(typeof hash=="object")?hash:dojo.lang.toArray(arguments,1);
return _5c8.replace(/\%\{(\w+)\}/g,function(_5cb,key){
if(typeof (map[key])!="undefined"&&map[key]!=null){
return map[key];
}
dojo.raise("Substitution not found: "+key);
});
};
dojo.string.capitalize=function(str){
if(!dojo.lang.isString(str)){
return "";
}
if(arguments.length==0){
str=this;
}
var _5ce=str.split(" ");
for(var i=0;i<_5ce.length;i++){
_5ce[i]=_5ce[i].charAt(0).toUpperCase()+_5ce[i].substring(1);
}
return _5ce.join(" ");
};
dojo.string.isBlank=function(str){
if(!dojo.lang.isString(str)){
return true;
}
return (dojo.string.trim(str).length==0);
};
dojo.string.encodeAscii=function(str){
if(!dojo.lang.isString(str)){
return str;
}
var ret="";
var _5d3=escape(str);
var _5d4,re=/%u([0-9A-F]{4})/i;
while((_5d4=_5d3.match(re))){
var num=Number("0x"+_5d4[1]);
var _5d7=escape("&#"+num+";");
ret+=_5d3.substring(0,_5d4.index)+_5d7;
_5d3=_5d3.substring(_5d4.index+_5d4[0].length);
}
ret+=_5d3.replace(/\+/g,"%2B");
return ret;
};
dojo.string.escape=function(type,str){
var args=dojo.lang.toArray(arguments,1);
switch(type.toLowerCase()){
case "xml":
case "html":
case "xhtml":
return dojo.string.escapeXml.apply(this,args);
case "sql":
return dojo.string.escapeSql.apply(this,args);
case "regexp":
case "regex":
return dojo.string.escapeRegExp.apply(this,args);
case "javascript":
case "jscript":
case "js":
return dojo.string.escapeJavaScript.apply(this,args);
case "ascii":
return dojo.string.encodeAscii.apply(this,args);
default:
return str;
}
};
dojo.string.escapeXml=function(str,_5dc){
str=str.replace(/&/gm,"&amp;").replace(/</gm,"&lt;").replace(/>/gm,"&gt;").replace(/"/gm,"&quot;");
if(!_5dc){
str=str.replace(/'/gm,"&#39;");
}
return str;
};
dojo.string.escapeSql=function(str){
return str.replace(/'/gm,"''");
};
dojo.string.escapeRegExp=function(str){
return str.replace(/\\/gm,"\\\\").replace(/([\f\b\n\t\r[\^$|?*+(){}])/gm,"\\$1");
};
dojo.string.escapeJavaScript=function(str){
return str.replace(/(["'\f\b\n\t\r])/gm,"\\$1");
};
dojo.string.escapeString=function(str){
return ("\""+str.replace(/(["\\])/g,"\\$1")+"\"").replace(/[\f]/g,"\\f").replace(/[\b]/g,"\\b").replace(/[\n]/g,"\\n").replace(/[\t]/g,"\\t").replace(/[\r]/g,"\\r");
};
dojo.string.summary=function(str,len){
if(!len||str.length<=len){
return str;
}
return str.substring(0,len).replace(/\.+$/,"")+"...";
};
dojo.string.endsWith=function(str,end,_5e5){
if(_5e5){
str=str.toLowerCase();
end=end.toLowerCase();
}
if((str.length-end.length)<0){
return false;
}
return str.lastIndexOf(end)==str.length-end.length;
};
dojo.string.endsWithAny=function(str){
for(var i=1;i<arguments.length;i++){
if(dojo.string.endsWith(str,arguments[i])){
return true;
}
}
return false;
};
dojo.string.startsWith=function(str,_5e9,_5ea){
if(_5ea){
str=str.toLowerCase();
_5e9=_5e9.toLowerCase();
}
return str.indexOf(_5e9)==0;
};
dojo.string.startsWithAny=function(str){
for(var i=1;i<arguments.length;i++){
if(dojo.string.startsWith(str,arguments[i])){
return true;
}
}
return false;
};
dojo.string.has=function(str){
for(var i=1;i<arguments.length;i++){
if(str.indexOf(arguments[i])>-1){
return true;
}
}
return false;
};
dojo.string.normalizeNewlines=function(text,_5f0){
if(_5f0=="\n"){
text=text.replace(/\r\n/g,"\n");
text=text.replace(/\r/g,"\n");
}else{
if(_5f0=="\r"){
text=text.replace(/\r\n/g,"\r");
text=text.replace(/\n/g,"\r");
}else{
text=text.replace(/([^\r])\n/g,"$1\r\n").replace(/\r([^\n])/g,"\r\n$1");
}
}
return text;
};
dojo.string.splitEscaped=function(str,_5f2){
var _5f3=[];
for(var i=0,_5f5=0;i<str.length;i++){
if(str.charAt(i)=="\\"){
i++;
continue;
}
if(str.charAt(i)==_5f2){
_5f3.push(str.substring(_5f5,i));
_5f5=i+1;
}
}
_5f3.push(str.substr(_5f5));
return _5f3;
};
dojo.provide("dojo.undo.browser");
try{
if((!djConfig["preventBackButtonFix"])&&(!dojo.hostenv.post_load_)){
document.write("<iframe style='border: 0px; width: 1px; height: 1px; position: absolute; bottom: 0px; right: 0px; visibility: visible;' name='djhistory' id='djhistory' src='"+(dojo.hostenv.getBaseScriptUri()+"iframe_history.html")+"'></iframe>");
}
}
catch(e){
}
if(dojo.render.html.opera){
dojo.debug("Opera is not supported with dojo.undo.browser, so back/forward detection will not work.");
}
dojo.undo.browser={initialHref:(!dj_undef("window"))?window.location.href:"",initialHash:(!dj_undef("window"))?window.location.hash:"",moveForward:false,historyStack:[],forwardStack:[],historyIframe:null,bookmarkAnchor:null,locationTimer:null,setInitialState:function(args){
this.initialState=this._createState(this.initialHref,args,this.initialHash);
},addToHistory:function(args){
this.forwardStack=[];
var hash=null;
var url=null;
if(!this.historyIframe){
this.historyIframe=window.frames["djhistory"];
}
if(!this.bookmarkAnchor){
this.bookmarkAnchor=document.createElement("a");
dojo.body().appendChild(this.bookmarkAnchor);
this.bookmarkAnchor.style.display="none";
}
if(args["changeUrl"]){
hash="#"+((args["changeUrl"]!==true)?args["changeUrl"]:(new Date()).getTime());
if(this.historyStack.length==0&&this.initialState.urlHash==hash){
this.initialState=this._createState(url,args,hash);
return;
}else{
if(this.historyStack.length>0&&this.historyStack[this.historyStack.length-1].urlHash==hash){
this.historyStack[this.historyStack.length-1]=this._createState(url,args,hash);
return;
}
}
this.changingUrl=true;
setTimeout("window.location.href = '"+hash+"'; dojo.undo.browser.changingUrl = false;",1);
this.bookmarkAnchor.href=hash;
if(dojo.render.html.ie){
url=this._loadIframeHistory();
var _5fa=args["back"]||args["backButton"]||args["handle"];
var tcb=function(_5fc){
if(window.location.hash!=""){
setTimeout("window.location.href = '"+hash+"';",1);
}
_5fa.apply(this,[_5fc]);
};
if(args["back"]){
args.back=tcb;
}else{
if(args["backButton"]){
args.backButton=tcb;
}else{
if(args["handle"]){
args.handle=tcb;
}
}
}
var _5fd=args["forward"]||args["forwardButton"]||args["handle"];
var tfw=function(_5ff){
if(window.location.hash!=""){
window.location.href=hash;
}
if(_5fd){
_5fd.apply(this,[_5ff]);
}
};
if(args["forward"]){
args.forward=tfw;
}else{
if(args["forwardButton"]){
args.forwardButton=tfw;
}else{
if(args["handle"]){
args.handle=tfw;
}
}
}
}else{
if(dojo.render.html.moz){
if(!this.locationTimer){
this.locationTimer=setInterval("dojo.undo.browser.checkLocation();",200);
}
}
}
}else{
url=this._loadIframeHistory();
}
this.historyStack.push(this._createState(url,args,hash));
},checkLocation:function(){
if(!this.changingUrl){
var hsl=this.historyStack.length;
if((window.location.hash==this.initialHash||window.location.href==this.initialHref)&&(hsl==1)){
this.handleBackButton();
return;
}
if(this.forwardStack.length>0){
if(this.forwardStack[this.forwardStack.length-1].urlHash==window.location.hash){
this.handleForwardButton();
return;
}
}
if((hsl>=2)&&(this.historyStack[hsl-2])){
if(this.historyStack[hsl-2].urlHash==window.location.hash){
this.handleBackButton();
return;
}
}
}
},iframeLoaded:function(evt,_602){
if(!dojo.render.html.opera){
var _603=this._getUrlQuery(_602.href);
if(_603==null){
if(this.historyStack.length==1){
this.handleBackButton();
}
return;
}
if(this.moveForward){
this.moveForward=false;
return;
}
if(this.historyStack.length>=2&&_603==this._getUrlQuery(this.historyStack[this.historyStack.length-2].url)){
this.handleBackButton();
}else{
if(this.forwardStack.length>0&&_603==this._getUrlQuery(this.forwardStack[this.forwardStack.length-1].url)){
this.handleForwardButton();
}
}
}
},handleBackButton:function(){
var _604=this.historyStack.pop();
if(!_604){
return;
}
var last=this.historyStack[this.historyStack.length-1];
if(!last&&this.historyStack.length==0){
last=this.initialState;
}
if(last){
if(last.kwArgs["back"]){
last.kwArgs["back"]();
}else{
if(last.kwArgs["backButton"]){
last.kwArgs["backButton"]();
}else{
if(last.kwArgs["handle"]){
last.kwArgs.handle("back");
}
}
}
}
this.forwardStack.push(_604);
},handleForwardButton:function(){
var last=this.forwardStack.pop();
if(!last){
return;
}
if(last.kwArgs["forward"]){
last.kwArgs.forward();
}else{
if(last.kwArgs["forwardButton"]){
last.kwArgs.forwardButton();
}else{
if(last.kwArgs["handle"]){
last.kwArgs.handle("forward");
}
}
}
this.historyStack.push(last);
},_createState:function(url,args,hash){
return {"url":url,"kwArgs":args,"urlHash":hash};
},_getUrlQuery:function(url){
var _60b=url.split("?");
if(_60b.length<2){
return null;
}else{
return _60b[1];
}
},_loadIframeHistory:function(){
var url=dojo.hostenv.getBaseScriptUri()+"iframe_history.html?"+(new Date()).getTime();
this.moveForward=true;
dojo.io.setIFrameSrc(this.historyIframe,url,false);
return url;
}};
dojo.provide("dojo.io.BrowserIO");
if(!dj_undef("window")){
dojo.io.checkChildrenForFile=function(node){
var _60e=false;
var _60f=node.getElementsByTagName("input");
dojo.lang.forEach(_60f,function(_610){
if(_60e){
return;
}
if(_610.getAttribute("type")=="file"){
_60e=true;
}
});
return _60e;
};
dojo.io.formHasFile=function(_611){
return dojo.io.checkChildrenForFile(_611);
};
dojo.io.updateNode=function(node,_613){
node=dojo.byId(node);
var args=_613;
if(dojo.lang.isString(_613)){
args={url:_613};
}
args.mimetype="text/html";
args.load=function(t,d,e){
while(node.firstChild){
dojo.dom.destroyNode(node.firstChild);
}
node.innerHTML=d;
};
dojo.io.bind(args);
};
dojo.io.formFilter=function(node){
var type=(node.type||"").toLowerCase();
return !node.disabled&&node.name&&!dojo.lang.inArray(["file","submit","image","reset","button"],type);
};
dojo.io.encodeForm=function(_61a,_61b,_61c){
if((!_61a)||(!_61a.tagName)||(!_61a.tagName.toLowerCase()=="form")){
dojo.raise("Attempted to encode a non-form element.");
}
if(!_61c){
_61c=dojo.io.formFilter;
}
var enc=/utf/i.test(_61b||"")?encodeURIComponent:dojo.string.encodeAscii;
var _61e=[];
for(var i=0;i<_61a.elements.length;i++){
var elm=_61a.elements[i];
if(!elm||elm.tagName.toLowerCase()=="fieldset"||!_61c(elm)){
continue;
}
var name=enc(elm.name);
var type=elm.type.toLowerCase();
if(type=="select-multiple"){
for(var j=0;j<elm.options.length;j++){
if(elm.options[j].selected){
_61e.push(name+"="+enc(elm.options[j].value));
}
}
}else{
if(dojo.lang.inArray(["radio","checkbox"],type)){
if(elm.checked){
_61e.push(name+"="+enc(elm.value));
}
}else{
_61e.push(name+"="+enc(elm.value));
}
}
}
var _624=_61a.getElementsByTagName("input");
for(var i=0;i<_624.length;i++){
var _625=_624[i];
if(_625.type.toLowerCase()=="image"&&_625.form==_61a&&_61c(_625)){
var name=enc(_625.name);
_61e.push(name+"="+enc(_625.value));
_61e.push(name+".x=0");
_61e.push(name+".y=0");
}
}
return _61e.join("&")+"&";
};
dojo.io.FormBind=function(args){
this.bindArgs={};
if(args&&args.formNode){
this.init(args);
}else{
if(args){
this.init({formNode:args});
}
}
};
dojo.lang.extend(dojo.io.FormBind,{form:null,bindArgs:null,clickedButton:null,init:function(args){
var form=dojo.byId(args.formNode);
if(!form||!form.tagName||form.tagName.toLowerCase()!="form"){
throw new Error("FormBind: Couldn't apply, invalid form");
}else{
if(this.form==form){
return;
}else{
if(this.form){
throw new Error("FormBind: Already applied to a form");
}
}
}
dojo.lang.mixin(this.bindArgs,args);
this.form=form;
this.connect(form,"onsubmit","submit");
for(var i=0;i<form.elements.length;i++){
var node=form.elements[i];
if(node&&node.type&&dojo.lang.inArray(["submit","button"],node.type.toLowerCase())){
this.connect(node,"onclick","click");
}
}
var _62b=form.getElementsByTagName("input");
for(var i=0;i<_62b.length;i++){
var _62c=_62b[i];
if(_62c.type.toLowerCase()=="image"&&_62c.form==form){
this.connect(_62c,"onclick","click");
}
}
},onSubmit:function(form){
return true;
},submit:function(e){
e.preventDefault();
if(this.onSubmit(this.form)){
dojo.io.bind(dojo.lang.mixin(this.bindArgs,{formFilter:dojo.lang.hitch(this,"formFilter")}));
}
},click:function(e){
var node=e.currentTarget;
if(node.disabled){
return;
}
this.clickedButton=node;
},formFilter:function(node){
var type=(node.type||"").toLowerCase();
var _633=false;
if(node.disabled||!node.name){
_633=false;
}else{
if(dojo.lang.inArray(["submit","button","image"],type)){
if(!this.clickedButton){
this.clickedButton=node;
}
_633=node==this.clickedButton;
}else{
_633=!dojo.lang.inArray(["file","submit","reset","button"],type);
}
}
return _633;
},connect:function(_634,_635,_636){
if(dojo.evalObjPath("dojo.event.connect")){
dojo.event.connect(_634,_635,this,_636);
}else{
var fcn=dojo.lang.hitch(this,_636);
_634[_635]=function(e){
if(!e){
e=window.event;
}
if(!e.currentTarget){
e.currentTarget=e.srcElement;
}
if(!e.preventDefault){
e.preventDefault=function(){
window.event.returnValue=false;
};
}
fcn(e);
};
}
}});
dojo.io.XMLHTTPTransport=new function(){
var _639=this;
var _63a={};
this.useCache=false;
this.preventCache=false;
function getCacheKey(url,_63c,_63d){
return url+"|"+_63c+"|"+_63d.toLowerCase();
}
function addToCache(url,_63f,_640,http){
_63a[getCacheKey(url,_63f,_640)]=http;
}
function getFromCache(url,_643,_644){
return _63a[getCacheKey(url,_643,_644)];
}
this.clearCache=function(){
_63a={};
};
function doLoad(_645,http,url,_648,_649){
if(((http.status>=200)&&(http.status<300))||(http.status==304)||(location.protocol=="file:"&&(http.status==0||http.status==undefined))||(location.protocol=="chrome:"&&(http.status==0||http.status==undefined))){
var ret;
if(_645.method.toLowerCase()=="head"){
var _64b=http.getAllResponseHeaders();
ret={};
ret.toString=function(){
return _64b;
};
var _64c=_64b.split(/[\r\n]+/g);
for(var i=0;i<_64c.length;i++){
var pair=_64c[i].match(/^([^:]+)\s*:\s*(.+)$/i);
if(pair){
ret[pair[1]]=pair[2];
}
}
}else{
if(_645.mimetype=="text/javascript"){
try{
ret=dj_eval(http.responseText);
}
catch(e){
dojo.debug(e);
dojo.debug(http.responseText);
ret=null;
}
}else{
if(_645.mimetype=="text/json"||_645.mimetype=="application/json"){
try{
ret=dj_eval("("+http.responseText+")");
}
catch(e){
dojo.debug(e);
dojo.debug(http.responseText);
ret=false;
}
}else{
if((_645.mimetype=="application/xml")||(_645.mimetype=="text/xml")){
ret=http.responseXML;
if(!ret||typeof ret=="string"||!http.getResponseHeader("Content-Type")){
ret=dojo.dom.createDocumentFromText(http.responseText);
}
}else{
ret=http.responseText;
}
}
}
}
if(_649){
addToCache(url,_648,_645.method,http);
}
_645[(typeof _645.load=="function")?"load":"handle"]("load",ret,http,_645);
}else{
var _64f=new dojo.io.Error("XMLHttpTransport Error: "+http.status+" "+http.statusText);
_645[(typeof _645.error=="function")?"error":"handle"]("error",_64f,http,_645);
}
}
function setHeaders(http,_651){
if(_651["headers"]){
for(var _652 in _651["headers"]){
if(_652.toLowerCase()=="content-type"&&!_651["contentType"]){
_651["contentType"]=_651["headers"][_652];
}else{
http.setRequestHeader(_652,_651["headers"][_652]);
}
}
}
}
this.inFlight=[];
this.inFlightTimer=null;
this.startWatchingInFlight=function(){
if(!this.inFlightTimer){
this.inFlightTimer=setTimeout("dojo.io.XMLHTTPTransport.watchInFlight();",10);
}
};
this.watchInFlight=function(){
var now=null;
if(!dojo.hostenv._blockAsync&&!_639._blockAsync){
for(var x=this.inFlight.length-1;x>=0;x--){
try{
var tif=this.inFlight[x];
if(!tif||tif.http._aborted||!tif.http.readyState){
this.inFlight.splice(x,1);
continue;
}
if(4==tif.http.readyState){
this.inFlight.splice(x,1);
doLoad(tif.req,tif.http,tif.url,tif.query,tif.useCache);
}else{
if(tif.startTime){
if(!now){
now=(new Date()).getTime();
}
if(tif.startTime+(tif.req.timeoutSeconds*1000)<now){
if(typeof tif.http.abort=="function"){
tif.http.abort();
}
this.inFlight.splice(x,1);
tif.req[(typeof tif.req.timeout=="function")?"timeout":"handle"]("timeout",null,tif.http,tif.req);
}
}
}
}
catch(e){
try{
var _656=new dojo.io.Error("XMLHttpTransport.watchInFlight Error: "+e);
tif.req[(typeof tif.req.error=="function")?"error":"handle"]("error",_656,tif.http,tif.req);
}
catch(e2){
dojo.debug("XMLHttpTransport error callback failed: "+e2);
}
}
}
}
clearTimeout(this.inFlightTimer);
if(this.inFlight.length==0){
this.inFlightTimer=null;
return;
}
this.inFlightTimer=setTimeout("dojo.io.XMLHTTPTransport.watchInFlight();",10);
};
var _657=dojo.hostenv.getXmlhttpObject()?true:false;
this.canHandle=function(_658){
return _657&&dojo.lang.inArray(["text/plain","text/html","application/xml","text/xml","text/javascript","text/json","application/json"],(_658["mimetype"].toLowerCase()||""))&&!(_658["formNode"]&&dojo.io.formHasFile(_658["formNode"]));
};
this.multipartBoundary="45309FFF-BD65-4d50-99C9-36986896A96F";
this.bind=function(_659){
if(!_659["url"]){
if(!_659["formNode"]&&(_659["backButton"]||_659["back"]||_659["changeUrl"]||_659["watchForURL"])&&(!djConfig.preventBackButtonFix)){
dojo.deprecated("Using dojo.io.XMLHTTPTransport.bind() to add to browser history without doing an IO request","Use dojo.undo.browser.addToHistory() instead.","0.4");
dojo.undo.browser.addToHistory(_659);
return true;
}
}
var url=_659.url;
var _65b="";
if(_659["formNode"]){
var ta=_659.formNode.getAttribute("action");
if((ta)&&(!_659["url"])){
url=ta;
}
var tp=_659.formNode.getAttribute("method");
if((tp)&&(!_659["method"])){
_659.method=tp;
}
_65b+=dojo.io.encodeForm(_659.formNode,_659.encoding,_659["formFilter"]);
}
if(url.indexOf("#")>-1){
dojo.debug("Warning: dojo.io.bind: stripping hash values from url:",url);
url=url.split("#")[0];
}
if(_659["file"]){
_659.method="post";
}
if(!_659["method"]){
_659.method="get";
}
if(_659.method.toLowerCase()=="get"){
_659.multipart=false;
}else{
if(_659["file"]){
_659.multipart=true;
}else{
if(!_659["multipart"]){
_659.multipart=false;
}
}
}
if(_659["backButton"]||_659["back"]||_659["changeUrl"]){
dojo.undo.browser.addToHistory(_659);
}
var _65e=_659["content"]||{};
if(_659.sendTransport){
_65e["dojo.transport"]="xmlhttp";
}
do{
if(_659.postContent){
_65b=_659.postContent;
break;
}
if(_65e){
_65b+=dojo.io.argsFromMap(_65e,_659.encoding);
}
if(_659.method.toLowerCase()=="get"||!_659.multipart){
break;
}
var t=[];
if(_65b.length){
var q=_65b.split("&");
for(var i=0;i<q.length;++i){
if(q[i].length){
var p=q[i].split("=");
t.push("--"+this.multipartBoundary,"Content-Disposition: form-data; name=\""+p[0]+"\"","",p[1]);
}
}
}
if(_659.file){
if(dojo.lang.isArray(_659.file)){
for(var i=0;i<_659.file.length;++i){
var o=_659.file[i];
t.push("--"+this.multipartBoundary,"Content-Disposition: form-data; name=\""+o.name+"\"; filename=\""+("fileName" in o?o.fileName:o.name)+"\"","Content-Type: "+("contentType" in o?o.contentType:"application/octet-stream"),"",o.content);
}
}else{
var o=_659.file;
t.push("--"+this.multipartBoundary,"Content-Disposition: form-data; name=\""+o.name+"\"; filename=\""+("fileName" in o?o.fileName:o.name)+"\"","Content-Type: "+("contentType" in o?o.contentType:"application/octet-stream"),"",o.content);
}
}
if(t.length){
t.push("--"+this.multipartBoundary+"--","");
_65b=t.join("\r\n");
}
}while(false);
var _664=_659["sync"]?false:true;
var _665=_659["preventCache"]||(this.preventCache==true&&_659["preventCache"]!=false);
var _666=_659["useCache"]==true||(this.useCache==true&&_659["useCache"]!=false);
if(!_665&&_666){
var _667=getFromCache(url,_65b,_659.method);
if(_667){
doLoad(_659,_667,url,_65b,false);
return;
}
}
var http=dojo.hostenv.getXmlhttpObject(_659);
var _669=false;
if(_664){
var _66a=this.inFlight.push({"req":_659,"http":http,"url":url,"query":_65b,"useCache":_666,"startTime":_659.timeoutSeconds?(new Date()).getTime():0});
this.startWatchingInFlight();
}else{
_639._blockAsync=true;
}
if(_659.method.toLowerCase()=="post"){
if(!_659.user){
http.open("POST",url,_664);
}else{
http.open("POST",url,_664,_659.user,_659.password);
}
setHeaders(http,_659);
http.setRequestHeader("Content-Type",_659.multipart?("multipart/form-data; boundary="+this.multipartBoundary):(_659.contentType||"application/x-www-form-urlencoded"));
try{
http.send(_65b);
}
catch(e){
if(typeof http.abort=="function"){
http.abort();
}
doLoad(_659,{status:404},url,_65b,_666);
}
}else{
var _66b=url;
if(_65b!=""){
_66b+=(_66b.indexOf("?")>-1?"&":"?")+_65b;
}
if(_665){
_66b+=(dojo.string.endsWithAny(_66b,"?","&")?"":(_66b.indexOf("?")>-1?"&":"?"))+"dojo.preventCache="+new Date().valueOf();
}
if(!_659.user){
http.open(_659.method.toUpperCase(),_66b,_664);
}else{
http.open(_659.method.toUpperCase(),_66b,_664,_659.user,_659.password);
}
setHeaders(http,_659);
try{
http.send(null);
}
catch(e){
if(typeof http.abort=="function"){
http.abort();
}
doLoad(_659,{status:404},url,_65b,_666);
}
}
if(!_664){
doLoad(_659,http,url,_65b,_666);
_639._blockAsync=false;
}
_659.abort=function(){
try{
http._aborted=true;
}
catch(e){
}
return http.abort();
};
return;
};
dojo.io.transports.addTransport("XMLHTTPTransport");
};
}
dojo.provide("dojo.io.cookie");
dojo.io.cookie.setCookie=function(name,_66d,days,path,_670,_671){
var _672=-1;
if((typeof days=="number")&&(days>=0)){
var d=new Date();
d.setTime(d.getTime()+(days*24*60*60*1000));
_672=d.toGMTString();
}
_66d=escape(_66d);
document.cookie=name+"="+_66d+";"+(_672!=-1?" expires="+_672+";":"")+(path?"path="+path:"")+(_670?"; domain="+_670:"")+(_671?"; secure":"");
};
dojo.io.cookie.set=dojo.io.cookie.setCookie;
dojo.io.cookie.getCookie=function(name){
var idx=document.cookie.lastIndexOf(name+"=");
if(idx==-1){
return null;
}
var _676=document.cookie.substring(idx+name.length+1);
var end=_676.indexOf(";");
if(end==-1){
end=_676.length;
}
_676=_676.substring(0,end);
_676=unescape(_676);
return _676;
};
dojo.io.cookie.get=dojo.io.cookie.getCookie;
dojo.io.cookie.deleteCookie=function(name){
dojo.io.cookie.setCookie(name,"-",0);
};
dojo.io.cookie.setObjectCookie=function(name,obj,days,path,_67d,_67e,_67f){
if(arguments.length==5){
_67f=_67d;
_67d=null;
_67e=null;
}
var _680=[],_681,_682="";
if(!_67f){
_681=dojo.io.cookie.getObjectCookie(name);
}
if(days>=0){
if(!_681){
_681={};
}
for(var prop in obj){
if(obj[prop]==null){
delete _681[prop];
}else{
if((typeof obj[prop]=="string")||(typeof obj[prop]=="number")){
_681[prop]=obj[prop];
}
}
}
prop=null;
for(var prop in _681){
_680.push(escape(prop)+"="+escape(_681[prop]));
}
_682=_680.join("&");
}
dojo.io.cookie.setCookie(name,_682,days,path,_67d,_67e);
};
dojo.io.cookie.getObjectCookie=function(name){
var _685=null,_686=dojo.io.cookie.getCookie(name);
if(_686){
_685={};
var _687=_686.split("&");
for(var i=0;i<_687.length;i++){
var pair=_687[i].split("=");
var _68a=pair[1];
if(isNaN(_68a)){
_68a=unescape(pair[1]);
}
_685[unescape(pair[0])]=_68a;
}
}
return _685;
};
dojo.io.cookie.isSupported=function(){
if(typeof navigator.cookieEnabled!="boolean"){
dojo.io.cookie.setCookie("__TestingYourBrowserForCookieSupport__","CookiesAllowed",90,null);
var _68b=dojo.io.cookie.getCookie("__TestingYourBrowserForCookieSupport__");
navigator.cookieEnabled=(_68b=="CookiesAllowed");
if(navigator.cookieEnabled){
this.deleteCookie("__TestingYourBrowserForCookieSupport__");
}
}
return navigator.cookieEnabled;
};
if(!dojo.io.cookies){
dojo.io.cookies=dojo.io.cookie;
}
dojo.provide("dojo.io.*");
dojo.provide("dojo.uri.*");
dojo.provide("dojo.io.IframeIO");
dojo.io.createIFrame=function(_68c,_68d,uri){
if(window[_68c]){
return window[_68c];
}
if(window.frames[_68c]){
return window.frames[_68c];
}
var r=dojo.render.html;
var _690=null;
var turi=uri||dojo.uri.dojoUri("iframe_history.html?noInit=true");
var _692=((r.ie)&&(dojo.render.os.win))?"<iframe name=\""+_68c+"\" src=\""+turi+"\" onload=\""+_68d+"\">":"iframe";
_690=document.createElement(_692);
with(_690){
name=_68c;
setAttribute("name",_68c);
id=_68c;
}
dojo.body().appendChild(_690);
window[_68c]=_690;
with(_690.style){
if(!r.safari){
position="absolute";
}
left=top="0px";
height=width="1px";
visibility="hidden";
}
if(!r.ie){
dojo.io.setIFrameSrc(_690,turi,true);
_690.onload=new Function(_68d);
}
return _690;
};
dojo.io.IframeTransport=new function(){
var _693=this;
this.currentRequest=null;
this.requestQueue=[];
this.iframeName="dojoIoIframe";
this.fireNextRequest=function(){
try{
if((this.currentRequest)||(this.requestQueue.length==0)){
return;
}
var cr=this.currentRequest=this.requestQueue.shift();
cr._contentToClean=[];
var fn=cr["formNode"];
var _696=cr["content"]||{};
if(cr.sendTransport){
_696["dojo.transport"]="iframe";
}
if(fn){
if(_696){
for(var x in _696){
if(!fn[x]){
var tn;
if(dojo.render.html.ie){
tn=document.createElement("<input type='hidden' name='"+x+"' value='"+_696[x]+"'>");
fn.appendChild(tn);
}else{
tn=document.createElement("input");
fn.appendChild(tn);
tn.type="hidden";
tn.name=x;
tn.value=_696[x];
}
cr._contentToClean.push(x);
}else{
fn[x].value=_696[x];
}
}
}
if(cr["url"]){
cr._originalAction=fn.getAttribute("action");
fn.setAttribute("action",cr.url);
}
if(!fn.getAttribute("method")){
fn.setAttribute("method",(cr["method"])?cr["method"]:"post");
}
cr._originalTarget=fn.getAttribute("target");
fn.setAttribute("target",this.iframeName);
fn.target=this.iframeName;
fn.submit();
}else{
var _699=dojo.io.argsFromMap(this.currentRequest.content);
var _69a=cr.url+(cr.url.indexOf("?")>-1?"&":"?")+_699;
dojo.io.setIFrameSrc(this.iframe,_69a,true);
}
}
catch(e){
this.iframeOnload(e);
}
};
this.canHandle=function(_69b){
return ((dojo.lang.inArray(["text/plain","text/html","text/javascript","text/json","application/json"],_69b["mimetype"]))&&(dojo.lang.inArray(["post","get"],_69b["method"].toLowerCase()))&&(!((_69b["sync"])&&(_69b["sync"]==true))));
};
this.bind=function(_69c){
if(!this["iframe"]){
this.setUpIframe();
}
this.requestQueue.push(_69c);
this.fireNextRequest();
return;
};
this.setUpIframe=function(){
this.iframe=dojo.io.createIFrame(this.iframeName,"dojo.io.IframeTransport.iframeOnload();");
};
this.iframeOnload=function(_69d){
if(!_693.currentRequest){
_693.fireNextRequest();
return;
}
var req=_693.currentRequest;
if(req.formNode){
var _69f=req._contentToClean;
for(var i=0;i<_69f.length;i++){
var key=_69f[i];
if(dojo.render.html.safari){
var _6a2=req.formNode;
for(var j=0;j<_6a2.childNodes.length;j++){
var _6a4=_6a2.childNodes[j];
if(_6a4.name==key){
var _6a5=_6a4.parentNode;
_6a5.removeChild(_6a4);
break;
}
}
}else{
var _6a6=req.formNode[key];
req.formNode.removeChild(_6a6);
req.formNode[key]=null;
}
}
if(req["_originalAction"]){
req.formNode.setAttribute("action",req._originalAction);
}
if(req["_originalTarget"]){
req.formNode.setAttribute("target",req._originalTarget);
req.formNode.target=req._originalTarget;
}
}
var _6a7=function(_6a8){
var doc=_6a8.contentDocument||((_6a8.contentWindow)&&(_6a8.contentWindow.document))||((_6a8.name)&&(document.frames[_6a8.name])&&(document.frames[_6a8.name].document))||null;
return doc;
};
var _6aa;
var _6ab=false;
if(_69d){
this._callError(req,"IframeTransport Request Error: "+_69d);
}else{
var ifd=_6a7(_693.iframe);
try{
var cmt=req.mimetype;
if((cmt=="text/javascript")||(cmt=="text/json")||(cmt=="application/json")){
var js=ifd.getElementsByTagName("textarea")[0].value;
if(cmt=="text/json"||cmt=="application/json"){
js="("+js+")";
}
_6aa=dj_eval(js);
}else{
if(cmt=="text/html"){
_6aa=ifd;
}else{
_6aa=ifd.getElementsByTagName("textarea")[0].value;
}
}
_6ab=true;
}
catch(e){
this._callError(req,"IframeTransport Error: "+e);
}
}
try{
if(_6ab&&dojo.lang.isFunction(req["load"])){
req.load("load",_6aa,req);
}
}
catch(e){
throw e;
}
finally{
_693.currentRequest=null;
_693.fireNextRequest();
}
};
this._callError=function(req,_6b0){
var _6b1=new dojo.io.Error(_6b0);
if(dojo.lang.isFunction(req["error"])){
req.error("error",_6b1,req);
}
};
dojo.io.transports.addTransport("IframeTransport");
};
dojo.provide("dojo.date");
dojo.deprecated("dojo.date","use one of the modules in dojo.date.* instead","0.5");
dojo.provide("dojo.string.Builder");
dojo.string.Builder=function(str){
this.arrConcat=(dojo.render.html.capable&&dojo.render.html["ie"]);
var a=[];
var b="";
var _6b5=this.length=b.length;
if(this.arrConcat){
if(b.length>0){
a.push(b);
}
b="";
}
this.toString=this.valueOf=function(){
return (this.arrConcat)?a.join(""):b;
};
this.append=function(){
for(var x=0;x<arguments.length;x++){
var s=arguments[x];
if(dojo.lang.isArrayLike(s)){
this.append.apply(this,s);
}else{
if(this.arrConcat){
a.push(s);
}else{
b+=s;
}
_6b5+=s.length;
this.length=_6b5;
}
}
return this;
};
this.clear=function(){
a=[];
b="";
_6b5=this.length=0;
return this;
};
this.remove=function(f,l){
var s="";
if(this.arrConcat){
b=a.join("");
}
a=[];
if(f>0){
s=b.substring(0,(f-1));
}
b=s+b.substring(f+l);
_6b5=this.length=b.length;
if(this.arrConcat){
a.push(b);
b="";
}
return this;
};
this.replace=function(o,n){
if(this.arrConcat){
b=a.join("");
}
a=[];
b=b.replace(o,n);
_6b5=this.length=b.length;
if(this.arrConcat){
a.push(b);
b="";
}
return this;
};
this.insert=function(idx,s){
if(this.arrConcat){
b=a.join("");
}
a=[];
if(idx==0){
b=s+b;
}else{
var t=b.split("");
t.splice(idx,0,s);
b=t.join("");
}
_6b5=this.length=b.length;
if(this.arrConcat){
a.push(b);
b="";
}
return this;
};
this.append.apply(this,arguments);
};
dojo.provide("dojo.string.*");
if(!this["dojo"]){
alert("\"dojo/__package__.js\" is now located at \"dojo/dojo.js\". Please update your includes accordingly");
}
dojo.provide("dojo.AdapterRegistry");
dojo.AdapterRegistry=function(_6c0){
this.pairs=[];
this.returnWrappers=_6c0||false;
};
dojo.lang.extend(dojo.AdapterRegistry,{register:function(name,_6c2,wrap,_6c4,_6c5){
var type=(_6c5)?"unshift":"push";
this.pairs[type]([name,_6c2,wrap,_6c4]);
},match:function(){
for(var i=0;i<this.pairs.length;i++){
var pair=this.pairs[i];
if(pair[1].apply(this,arguments)){
if((pair[3])||(this.returnWrappers)){
return pair[2];
}else{
return pair[2].apply(this,arguments);
}
}
}
throw new Error("No match found");
},unregister:function(name){
for(var i=0;i<this.pairs.length;i++){
var pair=this.pairs[i];
if(pair[0]==name){
this.pairs.splice(i,1);
return true;
}
}
return false;
}});
dojo.provide("dojo.json");
dojo.json={jsonRegistry:new dojo.AdapterRegistry(),register:function(name,_6cd,wrap,_6cf){
dojo.json.jsonRegistry.register(name,_6cd,wrap,_6cf);
},evalJson:function(json){
try{
return eval("("+json+")");
}
catch(e){
dojo.debug(e);
return json;
}
},serialize:function(o){
var _6d2=typeof (o);
if(_6d2=="undefined"){
return "undefined";
}else{
if((_6d2=="number")||(_6d2=="boolean")){
return o+"";
}else{
if(o===null){
return "null";
}
}
}
if(_6d2=="string"){
return dojo.string.escapeString(o);
}
var me=arguments.callee;
var _6d4;
if(typeof (o.__json__)=="function"){
_6d4=o.__json__();
if(o!==_6d4){
return me(_6d4);
}
}
if(typeof (o.json)=="function"){
_6d4=o.json();
if(o!==_6d4){
return me(_6d4);
}
}
if(_6d2!="function"&&typeof (o.length)=="number"){
var res=[];
for(var i=0;i<o.length;i++){
var val=me(o[i]);
if(typeof (val)!="string"){
val="undefined";
}
res.push(val);
}
return "["+res.join(",")+"]";
}
try{
window.o=o;
_6d4=dojo.json.jsonRegistry.match(o);
return me(_6d4);
}
catch(e){
}
if(_6d2=="function"){
return null;
}
res=[];
for(var k in o){
var _6d9;
if(typeof (k)=="number"){
_6d9="\""+k+"\"";
}else{
if(typeof (k)=="string"){
_6d9=dojo.string.escapeString(k);
}else{
continue;
}
}
val=me(o[k]);
if(typeof (val)!="string"){
continue;
}
res.push(_6d9+":"+val);
}
return "{"+res.join(",")+"}";
}};
dojo.provide("dojo.Deferred");
dojo.Deferred=function(_6da){
this.chain=[];
this.id=this._nextId();
this.fired=-1;
this.paused=0;
this.results=[null,null];
this.canceller=_6da;
this.silentlyCancelled=false;
};
dojo.lang.extend(dojo.Deferred,{getFunctionFromArgs:function(){
var a=arguments;
if((a[0])&&(!a[1])){
if(dojo.lang.isFunction(a[0])){
return a[0];
}else{
if(dojo.lang.isString(a[0])){
return dj_global[a[0]];
}
}
}else{
if((a[0])&&(a[1])){
return dojo.lang.hitch(a[0],a[1]);
}
}
return null;
},makeCalled:function(){
var _6dc=new dojo.Deferred();
_6dc.callback();
return _6dc;
},repr:function(){
var _6dd;
if(this.fired==-1){
_6dd="unfired";
}else{
if(this.fired==0){
_6dd="success";
}else{
_6dd="error";
}
}
return "Deferred("+this.id+", "+_6dd+")";
},toString:dojo.lang.forward("repr"),_nextId:(function(){
var n=1;
return function(){
return n++;
};
})(),cancel:function(){
if(this.fired==-1){
if(this.canceller){
this.canceller(this);
}else{
this.silentlyCancelled=true;
}
if(this.fired==-1){
this.errback(new Error(this.repr()));
}
}else{
if((this.fired==0)&&(this.results[0] instanceof dojo.Deferred)){
this.results[0].cancel();
}
}
},_pause:function(){
this.paused++;
},_unpause:function(){
this.paused--;
if((this.paused==0)&&(this.fired>=0)){
this._fire();
}
},_continue:function(res){
this._resback(res);
this._unpause();
},_resback:function(res){
this.fired=((res instanceof Error)?1:0);
this.results[this.fired]=res;
this._fire();
},_check:function(){
if(this.fired!=-1){
if(!this.silentlyCancelled){
dojo.raise("already called!");
}
this.silentlyCancelled=false;
return;
}
},callback:function(res){
this._check();
this._resback(res);
},errback:function(res){
this._check();
if(!(res instanceof Error)){
res=new Error(res);
}
this._resback(res);
},addBoth:function(cb,cbfn){
var _6e5=this.getFunctionFromArgs(cb,cbfn);
if(arguments.length>2){
_6e5=dojo.lang.curryArguments(null,_6e5,arguments,2);
}
return this.addCallbacks(_6e5,_6e5);
},addCallback:function(cb,cbfn){
var _6e8=this.getFunctionFromArgs(cb,cbfn);
if(arguments.length>2){
_6e8=dojo.lang.curryArguments(null,_6e8,arguments,2);
}
return this.addCallbacks(_6e8,null);
},addErrback:function(cb,cbfn){
var _6eb=this.getFunctionFromArgs(cb,cbfn);
if(arguments.length>2){
_6eb=dojo.lang.curryArguments(null,_6eb,arguments,2);
}
return this.addCallbacks(null,_6eb);
return this.addCallbacks(null,cbfn);
},addCallbacks:function(cb,eb){
this.chain.push([cb,eb]);
if(this.fired>=0){
this._fire();
}
return this;
},_fire:function(){
var _6ee=this.chain;
var _6ef=this.fired;
var res=this.results[_6ef];
var self=this;
var cb=null;
while(_6ee.length>0&&this.paused==0){
var pair=_6ee.shift();
var f=pair[_6ef];
if(f==null){
continue;
}
try{
res=f(res);
_6ef=((res instanceof Error)?1:0);
if(res instanceof dojo.Deferred){
cb=function(res){
self._continue(res);
};
this._pause();
}
}
catch(err){
_6ef=1;
res=err;
}
}
this.fired=_6ef;
this.results[_6ef]=res;
if((cb)&&(this.paused)){
res.addBoth(cb);
}
}});
dojo.provide("dojo.rpc.RpcService");
dojo.rpc.RpcService=function(url){
if(url){
this.connect(url);
}
};
dojo.lang.extend(dojo.rpc.RpcService,{strictArgChecks:true,serviceUrl:"",parseResults:function(obj){
return obj;
},errorCallback:function(_6f8){
return function(type,e){
_6f8.errback(new Error(e.message));
};
},resultCallback:function(_6fb){
var tf=dojo.lang.hitch(this,function(type,obj,e){
if(obj["error"]!=null){
var err=new Error(obj.error);
err.id=obj.id;
_6fb.errback(err);
}else{
var _701=this.parseResults(obj);
_6fb.callback(_701);
}
});
return tf;
},generateMethod:function(_702,_703,url){
return dojo.lang.hitch(this,function(){
var _705=new dojo.Deferred();
if((this.strictArgChecks)&&(_703!=null)&&(arguments.length!=_703.length)){
dojo.raise("Invalid number of parameters for remote method.");
}else{
this.bind(_702,arguments,_705,url);
}
return _705;
});
},processSmd:function(_706){
dojo.debug("RpcService: Processing returned SMD.");
if(_706.methods){
dojo.lang.forEach(_706.methods,function(m){
if(m&&m["name"]){
dojo.debug("RpcService: Creating Method: this.",m.name,"()");
this[m.name]=this.generateMethod(m.name,m.parameters,m["url"]||m["serviceUrl"]||m["serviceURL"]);
if(dojo.lang.isFunction(this[m.name])){
dojo.debug("RpcService: Successfully created",m.name,"()");
}else{
dojo.debug("RpcService: Failed to create",m.name,"()");
}
}
},this);
}
this.serviceUrl=_706.serviceUrl||_706.serviceURL;
dojo.debug("RpcService: Dojo RpcService is ready for use.");
},connect:function(_708){
dojo.debug("RpcService: Attempting to load SMD document from:",_708);
dojo.io.bind({url:_708,mimetype:"text/json",load:dojo.lang.hitch(this,function(type,_70a,e){
return this.processSmd(_70a);
}),sync:true});
}});
dojo.provide("dojo.rpc.JsonService");
dojo.rpc.JsonService=function(args){
if(args){
if(dojo.lang.isString(args)){
this.connect(args);
}else{
if(args["smdUrl"]){
this.connect(args.smdUrl);
}
if(args["smdStr"]){
this.processSmd(dj_eval("("+args.smdStr+")"));
}
if(args["smdObj"]){
this.processSmd(args.smdObj);
}
if(args["serviceUrl"]){
this.serviceUrl=args.serviceUrl;
}
if(typeof args["strictArgChecks"]!="undefined"){
this.strictArgChecks=args.strictArgChecks;
}
}
}
};
dojo.inherits(dojo.rpc.JsonService,dojo.rpc.RpcService);
dojo.extend(dojo.rpc.JsonService,{bustCache:false,contentType:"application/json-rpc",lastSubmissionId:0,callRemote:function(_70d,_70e){
var _70f=new dojo.Deferred();
this.bind(_70d,_70e,_70f);
return _70f;
},bind:function(_710,_711,_712,url){
dojo.io.bind({url:url||this.serviceUrl,postContent:this.createRequest(_710,_711),method:"POST",contentType:this.contentType,mimetype:"text/json",load:this.resultCallback(_712),error:this.errorCallback(_712),preventCache:this.bustCache});
},createRequest:function(_714,_715){
var req={"params":_715,"method":_714,"id":++this.lastSubmissionId};
var data=dojo.json.serialize(req);
dojo.debug("JsonService: JSON-RPC Request: "+data);
return data;
},parseResults:function(obj){
if(!obj){
return;
}
if(obj["Result"]!=null){
return obj["Result"];
}else{
if(obj["result"]!=null){
return obj["result"];
}else{
if(obj["ResultSet"]){
return obj["ResultSet"];
}else{
return obj;
}
}
}
}});
dojo.provide("dojo.rpc.*");
dojo.provide("dojo.xml.Parse");
dojo.xml.Parse=function(){
var isIE=((dojo.render.html.capable)&&(dojo.render.html.ie));
function getTagName(node){
try{
return node.tagName.toLowerCase();
}
catch(e){
return "";
}
}
function getDojoTagName(node){
var _71c=getTagName(node);
if(!_71c){
return "";
}
if((dojo.widget)&&(dojo.widget.tags[_71c])){
return _71c;
}
var p=_71c.indexOf(":");
if(p>=0){
return _71c;
}
if(_71c.substr(0,5)=="dojo:"){
return _71c;
}
if(dojo.render.html.capable&&dojo.render.html.ie&&node.scopeName!="HTML"){
return node.scopeName.toLowerCase()+":"+_71c;
}
if(_71c.substr(0,4)=="dojo"){
return "dojo:"+_71c.substring(4);
}
var djt=node.getAttribute("dojoType")||node.getAttribute("dojotype");
if(djt){
if(djt.indexOf(":")<0){
djt="dojo:"+djt;
}
return djt.toLowerCase();
}
djt=node.getAttributeNS&&node.getAttributeNS(dojo.dom.dojoml,"type");
if(djt){
return "dojo:"+djt.toLowerCase();
}
try{
djt=node.getAttribute("dojo:type");
}
catch(e){
}
if(djt){
return "dojo:"+djt.toLowerCase();
}
if((dj_global["djConfig"])&&(!djConfig["ignoreClassNames"])){
var _71f=node.className||node.getAttribute("class");
if((_71f)&&(_71f.indexOf)&&(_71f.indexOf("dojo-")!=-1)){
var _720=_71f.split(" ");
for(var x=0,c=_720.length;x<c;x++){
if(_720[x].slice(0,5)=="dojo-"){
return "dojo:"+_720[x].substr(5).toLowerCase();
}
}
}
}
return "";
}
this.parseElement=function(node,_724,_725,_726){
var _727=getTagName(node);
if(isIE&&_727.indexOf("/")==0){
return null;
}
try{
var attr=node.getAttribute("parseWidgets");
if(attr&&attr.toLowerCase()=="false"){
return {};
}
}
catch(e){
}
var _729=true;
if(_725){
var _72a=getDojoTagName(node);
_727=_72a||_727;
_729=Boolean(_72a);
}
var _72b={};
_72b[_727]=[];
var pos=_727.indexOf(":");
if(pos>0){
var ns=_727.substring(0,pos);
_72b["ns"]=ns;
if((dojo.ns)&&(!dojo.ns.allow(ns))){
_729=false;
}
}
if(_729){
var _72e=this.parseAttributes(node);
for(var attr in _72e){
if((!_72b[_727][attr])||(typeof _72b[_727][attr]!="array")){
_72b[_727][attr]=[];
}
_72b[_727][attr].push(_72e[attr]);
}
_72b[_727].nodeRef=node;
_72b.tagName=_727;
_72b.index=_726||0;
}
var _72f=0;
for(var i=0;i<node.childNodes.length;i++){
var tcn=node.childNodes.item(i);
switch(tcn.nodeType){
case dojo.dom.ELEMENT_NODE:
var ctn=getDojoTagName(tcn)||getTagName(tcn);
if(!_72b[ctn]){
_72b[ctn]=[];
}
_72b[ctn].push(this.parseElement(tcn,true,_725,_72f));
if((tcn.childNodes.length==1)&&(tcn.childNodes.item(0).nodeType==dojo.dom.TEXT_NODE)){
_72b[ctn][_72b[ctn].length-1].value=tcn.childNodes.item(0).nodeValue;
}
_72f++;
break;
case dojo.dom.TEXT_NODE:
if(node.childNodes.length==1){
_72b[_727].push({value:node.childNodes.item(0).nodeValue});
}
break;
default:
break;
}
}
return _72b;
};
this.parseAttributes=function(node){
var _734={};
var atts=node.attributes;
var _736,i=0;
while((_736=atts[i++])){
if(isIE){
if(!_736){
continue;
}
if((typeof _736=="object")&&(typeof _736.nodeValue=="undefined")||(_736.nodeValue==null)||(_736.nodeValue=="")){
continue;
}
}
var nn=_736.nodeName.split(":");
nn=(nn.length==2)?nn[1]:_736.nodeName;
_734[nn]={value:_736.nodeValue};
}
return _734;
};
};
dojo.provide("dojo.xml.*");
dojo.provide("dojo.undo.Manager");
dojo.undo.Manager=function(_739){
this.clear();
this._parent=_739;
};
dojo.extend(dojo.undo.Manager,{_parent:null,_undoStack:null,_redoStack:null,_currentManager:null,canUndo:false,canRedo:false,isUndoing:false,isRedoing:false,onUndo:function(_73a,item){
},onRedo:function(_73c,item){
},onUndoAny:function(_73e,item){
},onRedoAny:function(_740,item){
},_updateStatus:function(){
this.canUndo=this._undoStack.length>0;
this.canRedo=this._redoStack.length>0;
},clear:function(){
this._undoStack=[];
this._redoStack=[];
this._currentManager=this;
this.isUndoing=false;
this.isRedoing=false;
this._updateStatus();
},undo:function(){
if(!this.canUndo){
return false;
}
this.endAllTransactions();
this.isUndoing=true;
var top=this._undoStack.pop();
if(top instanceof dojo.undo.Manager){
top.undoAll();
}else{
top.undo();
}
if(top.redo){
this._redoStack.push(top);
}
this.isUndoing=false;
this._updateStatus();
this.onUndo(this,top);
if(!(top instanceof dojo.undo.Manager)){
this.getTop().onUndoAny(this,top);
}
return true;
},redo:function(){
if(!this.canRedo){
return false;
}
this.isRedoing=true;
var top=this._redoStack.pop();
if(top instanceof dojo.undo.Manager){
top.redoAll();
}else{
top.redo();
}
this._undoStack.push(top);
this.isRedoing=false;
this._updateStatus();
this.onRedo(this,top);
if(!(top instanceof dojo.undo.Manager)){
this.getTop().onRedoAny(this,top);
}
return true;
},undoAll:function(){
while(this._undoStack.length>0){
this.undo();
}
},redoAll:function(){
while(this._redoStack.length>0){
this.redo();
}
},push:function(undo,redo,_746){
if(!undo){
return;
}
if(this._currentManager==this){
this._undoStack.push({undo:undo,redo:redo,description:_746});
}else{
this._currentManager.push.apply(this._currentManager,arguments);
}
this._redoStack=[];
this._updateStatus();
},concat:function(_747){
if(!_747){
return;
}
if(this._currentManager==this){
for(var x=0;x<_747._undoStack.length;x++){
this._undoStack.push(_747._undoStack[x]);
}
if(_747._undoStack.length>0){
this._redoStack=[];
}
this._updateStatus();
}else{
this._currentManager.concat.apply(this._currentManager,arguments);
}
},beginTransaction:function(_749){
if(this._currentManager==this){
var mgr=new dojo.undo.Manager(this);
mgr.description=_749?_749:"";
this._undoStack.push(mgr);
this._currentManager=mgr;
return mgr;
}else{
this._currentManager=this._currentManager.beginTransaction.apply(this._currentManager,arguments);
}
},endTransaction:function(_74b){
if(this._currentManager==this){
if(this._parent){
this._parent._currentManager=this._parent;
if(this._undoStack.length==0||_74b){
var idx=dojo.lang.find(this._parent._undoStack,this);
if(idx>=0){
this._parent._undoStack.splice(idx,1);
if(_74b){
for(var x=0;x<this._undoStack.length;x++){
this._parent._undoStack.splice(idx++,0,this._undoStack[x]);
}
this._updateStatus();
}
}
}
return this._parent;
}
}else{
this._currentManager=this._currentManager.endTransaction.apply(this._currentManager,arguments);
}
},endAllTransactions:function(){
while(this._currentManager!=this){
this.endTransaction();
}
},getTop:function(){
if(this._parent){
return this._parent.getTop();
}else{
return this;
}
}});
dojo.provide("dojo.undo.*");
dojo.provide("dojo.crypto");
dojo.crypto.cipherModes={ECB:0,CBC:1,PCBC:2,CFB:3,OFB:4,CTR:5};
dojo.crypto.outputTypes={Base64:0,Hex:1,String:2,Raw:3};
dojo.provide("dojo.crypto.MD5");
dojo.crypto.MD5=new function(){
var _74e=8;
var mask=(1<<_74e)-1;
function toWord(s){
var wa=[];
for(var i=0;i<s.length*_74e;i+=_74e){
wa[i>>5]|=(s.charCodeAt(i/_74e)&mask)<<(i%32);
}
return wa;
}
function toString(wa){
var s=[];
for(var i=0;i<wa.length*32;i+=_74e){
s.push(String.fromCharCode((wa[i>>5]>>>(i%32))&mask));
}
return s.join("");
}
function toHex(wa){
var h="0123456789abcdef";
var s=[];
for(var i=0;i<wa.length*4;i++){
s.push(h.charAt((wa[i>>2]>>((i%4)*8+4))&15)+h.charAt((wa[i>>2]>>((i%4)*8))&15));
}
return s.join("");
}
function toBase64(wa){
var p="=";
var tab="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
var s=[];
for(var i=0;i<wa.length*4;i+=3){
var t=(((wa[i>>2]>>8*(i%4))&255)<<16)|(((wa[i+1>>2]>>8*((i+1)%4))&255)<<8)|((wa[i+2>>2]>>8*((i+2)%4))&255);
for(var j=0;j<4;j++){
if(i*8+j*6>wa.length*32){
s.push(p);
}else{
s.push(tab.charAt((t>>6*(3-j))&63));
}
}
}
return s.join("");
}
function add(x,y){
var l=(x&65535)+(y&65535);
var m=(x>>16)+(y>>16)+(l>>16);
return (m<<16)|(l&65535);
}
function R(n,c){
return (n<<c)|(n>>>(32-c));
}
function C(q,a,b,x,s,t){
return add(R(add(add(a,q),add(x,t)),s),b);
}
function FF(a,b,c,d,x,s,t){
return C((b&c)|((~b)&d),a,b,x,s,t);
}
function GG(a,b,c,d,x,s,t){
return C((b&d)|(c&(~d)),a,b,x,s,t);
}
function HH(a,b,c,d,x,s,t){
return C(b^c^d,a,b,x,s,t);
}
function II(a,b,c,d,x,s,t){
return C(c^(b|(~d)),a,b,x,s,t);
}
function core(x,len){
x[len>>5]|=128<<((len)%32);
x[(((len+64)>>>9)<<4)+14]=len;
var a=1732584193;
var b=-271733879;
var c=-1732584194;
var d=271733878;
for(var i=0;i<x.length;i+=16){
var olda=a;
var oldb=b;
var oldc=c;
var oldd=d;
a=FF(a,b,c,d,x[i+0],7,-680876936);
d=FF(d,a,b,c,x[i+1],12,-389564586);
c=FF(c,d,a,b,x[i+2],17,606105819);
b=FF(b,c,d,a,x[i+3],22,-1044525330);
a=FF(a,b,c,d,x[i+4],7,-176418897);
d=FF(d,a,b,c,x[i+5],12,1200080426);
c=FF(c,d,a,b,x[i+6],17,-1473231341);
b=FF(b,c,d,a,x[i+7],22,-45705983);
a=FF(a,b,c,d,x[i+8],7,1770035416);
d=FF(d,a,b,c,x[i+9],12,-1958414417);
c=FF(c,d,a,b,x[i+10],17,-42063);
b=FF(b,c,d,a,x[i+11],22,-1990404162);
a=FF(a,b,c,d,x[i+12],7,1804603682);
d=FF(d,a,b,c,x[i+13],12,-40341101);
c=FF(c,d,a,b,x[i+14],17,-1502002290);
b=FF(b,c,d,a,x[i+15],22,1236535329);
a=GG(a,b,c,d,x[i+1],5,-165796510);
d=GG(d,a,b,c,x[i+6],9,-1069501632);
c=GG(c,d,a,b,x[i+11],14,643717713);
b=GG(b,c,d,a,x[i+0],20,-373897302);
a=GG(a,b,c,d,x[i+5],5,-701558691);
d=GG(d,a,b,c,x[i+10],9,38016083);
c=GG(c,d,a,b,x[i+15],14,-660478335);
b=GG(b,c,d,a,x[i+4],20,-405537848);
a=GG(a,b,c,d,x[i+9],5,568446438);
d=GG(d,a,b,c,x[i+14],9,-1019803690);
c=GG(c,d,a,b,x[i+3],14,-187363961);
b=GG(b,c,d,a,x[i+8],20,1163531501);
a=GG(a,b,c,d,x[i+13],5,-1444681467);
d=GG(d,a,b,c,x[i+2],9,-51403784);
c=GG(c,d,a,b,x[i+7],14,1735328473);
b=GG(b,c,d,a,x[i+12],20,-1926607734);
a=HH(a,b,c,d,x[i+5],4,-378558);
d=HH(d,a,b,c,x[i+8],11,-2022574463);
c=HH(c,d,a,b,x[i+11],16,1839030562);
b=HH(b,c,d,a,x[i+14],23,-35309556);
a=HH(a,b,c,d,x[i+1],4,-1530992060);
d=HH(d,a,b,c,x[i+4],11,1272893353);
c=HH(c,d,a,b,x[i+7],16,-155497632);
b=HH(b,c,d,a,x[i+10],23,-1094730640);
a=HH(a,b,c,d,x[i+13],4,681279174);
d=HH(d,a,b,c,x[i+0],11,-358537222);
c=HH(c,d,a,b,x[i+3],16,-722521979);
b=HH(b,c,d,a,x[i+6],23,76029189);
a=HH(a,b,c,d,x[i+9],4,-640364487);
d=HH(d,a,b,c,x[i+12],11,-421815835);
c=HH(c,d,a,b,x[i+15],16,530742520);
b=HH(b,c,d,a,x[i+2],23,-995338651);
a=II(a,b,c,d,x[i+0],6,-198630844);
d=II(d,a,b,c,x[i+7],10,1126891415);
c=II(c,d,a,b,x[i+14],15,-1416354905);
b=II(b,c,d,a,x[i+5],21,-57434055);
a=II(a,b,c,d,x[i+12],6,1700485571);
d=II(d,a,b,c,x[i+3],10,-1894986606);
c=II(c,d,a,b,x[i+10],15,-1051523);
b=II(b,c,d,a,x[i+1],21,-2054922799);
a=II(a,b,c,d,x[i+8],6,1873313359);
d=II(d,a,b,c,x[i+15],10,-30611744);
c=II(c,d,a,b,x[i+6],15,-1560198380);
b=II(b,c,d,a,x[i+13],21,1309151649);
a=II(a,b,c,d,x[i+4],6,-145523070);
d=II(d,a,b,c,x[i+11],10,-1120210379);
c=II(c,d,a,b,x[i+2],15,718787259);
b=II(b,c,d,a,x[i+9],21,-343485551);
a=add(a,olda);
b=add(b,oldb);
c=add(c,oldc);
d=add(d,oldd);
}
return [a,b,c,d];
}
function hmac(data,key){
var wa=toWord(key);
if(wa.length>16){
wa=core(wa,key.length*_74e);
}
var l=[],r=[];
for(var i=0;i<16;i++){
l[i]=wa[i]^909522486;
r[i]=wa[i]^1549556828;
}
var h=core(l.concat(toWord(data)),512+data.length*_74e);
return core(r.concat(h),640);
}
this.compute=function(data,_79c){
var out=_79c||dojo.crypto.outputTypes.Base64;
switch(out){
case dojo.crypto.outputTypes.Hex:
return toHex(core(toWord(data),data.length*_74e));
case dojo.crypto.outputTypes.String:
return toString(core(toWord(data),data.length*_74e));
default:
return toBase64(core(toWord(data),data.length*_74e));
}
};
this.getHMAC=function(data,key,_7a0){
var out=_7a0||dojo.crypto.outputTypes.Base64;
switch(out){
case dojo.crypto.outputTypes.Hex:
return toHex(hmac(data,key));
case dojo.crypto.outputTypes.String:
return toString(hmac(data,key));
default:
return toBase64(hmac(data,key));
}
};
}();
dojo.provide("dojo.crypto.*");
dojo.provide("dojo.collections.Collections");
dojo.collections.DictionaryEntry=function(k,v){
this.key=k;
this.value=v;
this.valueOf=function(){
return this.value;
};
this.toString=function(){
return String(this.value);
};
};
dojo.collections.Iterator=function(arr){
var a=arr;
var _7a6=0;
this.element=a[_7a6]||null;
this.atEnd=function(){
return (_7a6>=a.length);
};
this.get=function(){
if(this.atEnd()){
return null;
}
this.element=a[_7a6++];
return this.element;
};
this.map=function(fn,_7a8){
var s=_7a8||dj_global;
if(Array.map){
return Array.map(a,fn,s);
}else{
var arr=[];
for(var i=0;i<a.length;i++){
arr.push(fn.call(s,a[i]));
}
return arr;
}
};
this.reset=function(){
_7a6=0;
this.element=a[_7a6];
};
};
dojo.collections.DictionaryIterator=function(obj){
var a=[];
var _7ae={};
for(var p in obj){
if(!_7ae[p]){
a.push(obj[p]);
}
}
var _7b0=0;
this.element=a[_7b0]||null;
this.atEnd=function(){
return (_7b0>=a.length);
};
this.get=function(){
if(this.atEnd()){
return null;
}
this.element=a[_7b0++];
return this.element;
};
this.map=function(fn,_7b2){
var s=_7b2||dj_global;
if(Array.map){
return Array.map(a,fn,s);
}else{
var arr=[];
for(var i=0;i<a.length;i++){
arr.push(fn.call(s,a[i]));
}
return arr;
}
};
this.reset=function(){
_7b0=0;
this.element=a[_7b0];
};
};
dojo.provide("dojo.collections.ArrayList");
dojo.collections.ArrayList=function(arr){
var _7b7=[];
if(arr){
_7b7=_7b7.concat(arr);
}
this.count=_7b7.length;
this.add=function(obj){
_7b7.push(obj);
this.count=_7b7.length;
};
this.addRange=function(a){
if(a.getIterator){
var e=a.getIterator();
while(!e.atEnd()){
this.add(e.get());
}
this.count=_7b7.length;
}else{
for(var i=0;i<a.length;i++){
_7b7.push(a[i]);
}
this.count=_7b7.length;
}
};
this.clear=function(){
_7b7.splice(0,_7b7.length);
this.count=0;
};
this.clone=function(){
return new dojo.collections.ArrayList(_7b7);
};
this.contains=function(obj){
for(var i=0;i<_7b7.length;i++){
if(_7b7[i]==obj){
return true;
}
}
return false;
};
this.forEach=function(fn,_7bf){
var s=_7bf||dj_global;
if(Array.forEach){
Array.forEach(_7b7,fn,s);
}else{
for(var i=0;i<_7b7.length;i++){
fn.call(s,_7b7[i],i,_7b7);
}
}
};
this.getIterator=function(){
return new dojo.collections.Iterator(_7b7);
};
this.indexOf=function(obj){
for(var i=0;i<_7b7.length;i++){
if(_7b7[i]==obj){
return i;
}
}
return -1;
};
this.insert=function(i,obj){
_7b7.splice(i,0,obj);
this.count=_7b7.length;
};
this.item=function(i){
return _7b7[i];
};
this.remove=function(obj){
var i=this.indexOf(obj);
if(i>=0){
_7b7.splice(i,1);
}
this.count=_7b7.length;
};
this.removeAt=function(i){
_7b7.splice(i,1);
this.count=_7b7.length;
};
this.reverse=function(){
_7b7.reverse();
};
this.sort=function(fn){
if(fn){
_7b7.sort(fn);
}else{
_7b7.sort();
}
};
this.setByIndex=function(i,obj){
_7b7[i]=obj;
this.count=_7b7.length;
};
this.toArray=function(){
return [].concat(_7b7);
};
this.toString=function(_7cd){
return _7b7.join((_7cd||","));
};
};
dojo.provide("dojo.collections.Queue");
dojo.collections.Queue=function(arr){
var q=[];
if(arr){
q=q.concat(arr);
}
this.count=q.length;
this.clear=function(){
q=[];
this.count=q.length;
};
this.clone=function(){
return new dojo.collections.Queue(q);
};
this.contains=function(o){
for(var i=0;i<q.length;i++){
if(q[i]==o){
return true;
}
}
return false;
};
this.copyTo=function(arr,i){
arr.splice(i,0,q);
};
this.dequeue=function(){
var r=q.shift();
this.count=q.length;
return r;
};
this.enqueue=function(o){
this.count=q.push(o);
};
this.forEach=function(fn,_7d7){
var s=_7d7||dj_global;
if(Array.forEach){
Array.forEach(q,fn,s);
}else{
for(var i=0;i<q.length;i++){
fn.call(s,q[i],i,q);
}
}
};
this.getIterator=function(){
return new dojo.collections.Iterator(q);
};
this.peek=function(){
return q[0];
};
this.toArray=function(){
return [].concat(q);
};
};
dojo.provide("dojo.collections.Stack");
dojo.collections.Stack=function(arr){
var q=[];
if(arr){
q=q.concat(arr);
}
this.count=q.length;
this.clear=function(){
q=[];
this.count=q.length;
};
this.clone=function(){
return new dojo.collections.Stack(q);
};
this.contains=function(o){
for(var i=0;i<q.length;i++){
if(q[i]==o){
return true;
}
}
return false;
};
this.copyTo=function(arr,i){
arr.splice(i,0,q);
};
this.forEach=function(fn,_7e1){
var s=_7e1||dj_global;
if(Array.forEach){
Array.forEach(q,fn,s);
}else{
for(var i=0;i<q.length;i++){
fn.call(s,q[i],i,q);
}
}
};
this.getIterator=function(){
return new dojo.collections.Iterator(q);
};
this.peek=function(){
return q[(q.length-1)];
};
this.pop=function(){
var r=q.pop();
this.count=q.length;
return r;
};
this.push=function(o){
this.count=q.push(o);
};
this.toArray=function(){
return [].concat(q);
};
};
dojo.provide("dojo.dnd.DragAndDrop");
dojo.declare("dojo.dnd.DragSource",null,{type:"",onDragEnd:function(evt){
},onDragStart:function(evt){
},onSelected:function(evt){
},unregister:function(){
dojo.dnd.dragManager.unregisterDragSource(this);
},reregister:function(){
dojo.dnd.dragManager.registerDragSource(this);
}});
dojo.declare("dojo.dnd.DragObject",null,{type:"",register:function(){
var dm=dojo.dnd.dragManager;
if(dm["registerDragObject"]){
dm.registerDragObject(this);
}
},onDragStart:function(evt){
},onDragMove:function(evt){
},onDragOver:function(evt){
},onDragOut:function(evt){
},onDragEnd:function(evt){
},onDragLeave:dojo.lang.forward("onDragOut"),onDragEnter:dojo.lang.forward("onDragOver"),ondragout:dojo.lang.forward("onDragOut"),ondragover:dojo.lang.forward("onDragOver")});
dojo.declare("dojo.dnd.DropTarget",null,{acceptsType:function(type){
if(!dojo.lang.inArray(this.acceptedTypes,"*")){
if(!dojo.lang.inArray(this.acceptedTypes,type)){
return false;
}
}
return true;
},accepts:function(_7f0){
if(!dojo.lang.inArray(this.acceptedTypes,"*")){
for(var i=0;i<_7f0.length;i++){
if(!dojo.lang.inArray(this.acceptedTypes,_7f0[i].type)){
return false;
}
}
}
return true;
},unregister:function(){
dojo.dnd.dragManager.unregisterDropTarget(this);
},onDragOver:function(evt){
},onDragOut:function(evt){
},onDragMove:function(evt){
},onDropStart:function(evt){
},onDrop:function(evt){
},onDropEnd:function(){
}},function(){
this.acceptedTypes=[];
});
dojo.dnd.DragEvent=function(){
this.dragSource=null;
this.dragObject=null;
this.target=null;
this.eventStatus="success";
};
dojo.declare("dojo.dnd.DragManager",null,{selectedSources:[],dragObjects:[],dragSources:[],registerDragSource:function(_7f7){
},dropTargets:[],registerDropTarget:function(_7f8){
},lastDragTarget:null,currentDragTarget:null,onKeyDown:function(){
},onMouseOut:function(){
},onMouseMove:function(){
},onMouseUp:function(){
}});
dojo.provide("dojo.dnd.HtmlDragManager");
dojo.declare("dojo.dnd.HtmlDragManager",dojo.dnd.DragManager,{disabled:false,nestedTargets:false,mouseDownTimer:null,dsCounter:0,dsPrefix:"dojoDragSource",dropTargetDimensions:[],currentDropTarget:null,previousDropTarget:null,_dragTriggered:false,selectedSources:[],dragObjects:[],dragSources:[],currentX:null,currentY:null,lastX:null,lastY:null,mouseDownX:null,mouseDownY:null,threshold:7,dropAcceptable:false,cancelEvent:function(e){
e.stopPropagation();
e.preventDefault();
},registerDragSource:function(ds){
if(ds["domNode"]){
var dp=this.dsPrefix;
var _7fc=dp+"Idx_"+(this.dsCounter++);
ds.dragSourceId=_7fc;
this.dragSources[_7fc]=ds;
ds.domNode.setAttribute(dp,_7fc);
if(dojo.render.html.ie){
dojo.event.browser.addListener(ds.domNode,"ondragstart",this.cancelEvent);
}
}
},unregisterDragSource:function(ds){
if(ds["domNode"]){
var dp=this.dsPrefix;
var _7ff=ds.dragSourceId;
delete ds.dragSourceId;
delete this.dragSources[_7ff];
ds.domNode.setAttribute(dp,null);
if(dojo.render.html.ie){
dojo.event.browser.removeListener(ds.domNode,"ondragstart",this.cancelEvent);
}
}
},registerDropTarget:function(dt){
this.dropTargets.push(dt);
},unregisterDropTarget:function(dt){
var _802=dojo.lang.find(this.dropTargets,dt,true);
if(_802>=0){
this.dropTargets.splice(_802,1);
}
},getDragSource:function(e){
var tn=e.target;
if(tn===dojo.body()){
return;
}
var ta=dojo.html.getAttribute(tn,this.dsPrefix);
while((!ta)&&(tn)){
tn=tn.parentNode;
if((!tn)||(tn===dojo.body())){
return;
}
ta=dojo.html.getAttribute(tn,this.dsPrefix);
}
return this.dragSources[ta];
},onKeyDown:function(e){
},onMouseDown:function(e){
if(this.disabled){
return;
}
if(dojo.render.html.ie){
if(e.button!=1){
return;
}
}else{
if(e.which!=1){
return;
}
}
var _808=e.target.nodeType==dojo.html.TEXT_NODE?e.target.parentNode:e.target;
if(dojo.html.isTag(_808,"button","textarea","input","select","option")){
return;
}
var ds=this.getDragSource(e);
if(!ds){
return;
}
if(!dojo.lang.inArray(this.selectedSources,ds)){
this.selectedSources.push(ds);
ds.onSelected();
}
this.mouseDownX=e.pageX;
this.mouseDownY=e.pageY;
e.preventDefault();
dojo.event.connect(document,"onmousemove",this,"onMouseMove");
},onMouseUp:function(e,_80b){
if(this.selectedSources.length==0){
return;
}
this.mouseDownX=null;
this.mouseDownY=null;
this._dragTriggered=false;
e.dragSource=this.dragSource;
if((!e.shiftKey)&&(!e.ctrlKey)){
if(this.currentDropTarget){
this.currentDropTarget.onDropStart();
}
dojo.lang.forEach(this.dragObjects,function(_80c){
var ret=null;
if(!_80c){
return;
}
if(this.currentDropTarget){
e.dragObject=_80c;
var ce=this.currentDropTarget.domNode.childNodes;
if(ce.length>0){
e.dropTarget=ce[0];
while(e.dropTarget==_80c.domNode){
e.dropTarget=e.dropTarget.nextSibling;
}
}else{
e.dropTarget=this.currentDropTarget.domNode;
}
if(this.dropAcceptable){
ret=this.currentDropTarget.onDrop(e);
}else{
this.currentDropTarget.onDragOut(e);
}
}
e.dragStatus=this.dropAcceptable&&ret?"dropSuccess":"dropFailure";
dojo.lang.delayThese([function(){
try{
_80c.dragSource.onDragEnd(e);
}
catch(err){
var _80f={};
for(var i in e){
if(i=="type"){
_80f.type="mouseup";
continue;
}
_80f[i]=e[i];
}
_80c.dragSource.onDragEnd(_80f);
}
},function(){
_80c.onDragEnd(e);
}]);
},this);
this.selectedSources=[];
this.dragObjects=[];
this.dragSource=null;
if(this.currentDropTarget){
this.currentDropTarget.onDropEnd();
}
}else{
}
dojo.event.disconnect(document,"onmousemove",this,"onMouseMove");
this.currentDropTarget=null;
},onScroll:function(){
for(var i=0;i<this.dragObjects.length;i++){
if(this.dragObjects[i].updateDragOffset){
this.dragObjects[i].updateDragOffset();
}
}
if(this.dragObjects.length){
this.cacheTargetLocations();
}
},_dragStartDistance:function(x,y){
if((!this.mouseDownX)||(!this.mouseDownX)){
return;
}
var dx=Math.abs(x-this.mouseDownX);
var dx2=dx*dx;
var dy=Math.abs(y-this.mouseDownY);
var dy2=dy*dy;
return parseInt(Math.sqrt(dx2+dy2),10);
},cacheTargetLocations:function(){
dojo.profile.start("cacheTargetLocations");
this.dropTargetDimensions=[];
dojo.lang.forEach(this.dropTargets,function(_818){
var tn=_818.domNode;
if(!tn||!_818.accepts([this.dragSource])){
return;
}
var abs=dojo.html.getAbsolutePosition(tn,true);
var bb=dojo.html.getBorderBox(tn);
this.dropTargetDimensions.push([[abs.x,abs.y],[abs.x+bb.width,abs.y+bb.height],_818]);
},this);
dojo.profile.end("cacheTargetLocations");
},onMouseMove:function(e){
if((dojo.render.html.ie)&&(e.button!=1)){
this.currentDropTarget=null;
this.onMouseUp(e,true);
return;
}
if((this.selectedSources.length)&&(!this.dragObjects.length)){
var dx;
var dy;
if(!this._dragTriggered){
this._dragTriggered=(this._dragStartDistance(e.pageX,e.pageY)>this.threshold);
if(!this._dragTriggered){
return;
}
dx=e.pageX-this.mouseDownX;
dy=e.pageY-this.mouseDownY;
}
this.dragSource=this.selectedSources[0];
dojo.lang.forEach(this.selectedSources,function(_81f){
if(!_81f){
return;
}
var tdo=_81f.onDragStart(e);
if(tdo){
tdo.onDragStart(e);
tdo.dragOffset.y+=dy;
tdo.dragOffset.x+=dx;
tdo.dragSource=_81f;
this.dragObjects.push(tdo);
}
},this);
this.previousDropTarget=null;
this.cacheTargetLocations();
}
dojo.lang.forEach(this.dragObjects,function(_821){
if(_821){
_821.onDragMove(e);
}
});
if(this.currentDropTarget){
var c=dojo.html.toCoordinateObject(this.currentDropTarget.domNode,true);
var dtp=[[c.x,c.y],[c.x+c.width,c.y+c.height]];
}
if((!this.nestedTargets)&&(dtp)&&(this.isInsideBox(e,dtp))){
if(this.dropAcceptable){
this.currentDropTarget.onDragMove(e,this.dragObjects);
}
}else{
var _824=this.findBestTarget(e);
if(_824.target===null){
if(this.currentDropTarget){
this.currentDropTarget.onDragOut(e);
this.previousDropTarget=this.currentDropTarget;
this.currentDropTarget=null;
}
this.dropAcceptable=false;
return;
}
if(this.currentDropTarget!==_824.target){
if(this.currentDropTarget){
this.previousDropTarget=this.currentDropTarget;
this.currentDropTarget.onDragOut(e);
}
this.currentDropTarget=_824.target;
e.dragObjects=this.dragObjects;
this.dropAcceptable=this.currentDropTarget.onDragOver(e);
}else{
if(this.dropAcceptable){
this.currentDropTarget.onDragMove(e,this.dragObjects);
}
}
}
},findBestTarget:function(e){
var _826=this;
var _827=new Object();
_827.target=null;
_827.points=null;
dojo.lang.every(this.dropTargetDimensions,function(_828){
if(!_826.isInsideBox(e,_828)){
return true;
}
_827.target=_828[2];
_827.points=_828;
return Boolean(_826.nestedTargets);
});
return _827;
},isInsideBox:function(e,_82a){
if((e.pageX>_82a[0][0])&&(e.pageX<_82a[1][0])&&(e.pageY>_82a[0][1])&&(e.pageY<_82a[1][1])){
return true;
}
return false;
},onMouseOver:function(e){
},onMouseOut:function(e){
}});
dojo.dnd.dragManager=new dojo.dnd.HtmlDragManager();
(function(){
var d=document;
var dm=dojo.dnd.dragManager;
dojo.event.connect(d,"onkeydown",dm,"onKeyDown");
dojo.event.connect(d,"onmouseover",dm,"onMouseOver");
dojo.event.connect(d,"onmouseout",dm,"onMouseOut");
dojo.event.connect(d,"onmousedown",dm,"onMouseDown");
dojo.event.connect(d,"onmouseup",dm,"onMouseUp");
dojo.event.connect(window,"onscroll",dm,"onScroll");
})();
dojo.provide("dojo.html.selection");
dojo.html.selectionType={NONE:0,TEXT:1,CONTROL:2};
dojo.html.clearSelection=function(){
var _82f=dojo.global();
var _830=dojo.doc();
try{
if(_82f["getSelection"]){
if(dojo.render.html.safari){
_82f.getSelection().collapse();
}else{
_82f.getSelection().removeAllRanges();
}
}else{
if(_830.selection){
if(_830.selection.empty){
_830.selection.empty();
}else{
if(_830.selection.clear){
_830.selection.clear();
}
}
}
}
return true;
}
catch(e){
dojo.debug(e);
return false;
}
};
dojo.html.disableSelection=function(_831){
_831=dojo.byId(_831)||dojo.body();
var h=dojo.render.html;
if(h.mozilla){
_831.style.MozUserSelect="none";
}else{
if(h.safari){
_831.style.KhtmlUserSelect="none";
}else{
if(h.ie){
_831.unselectable="on";
}else{
return false;
}
}
}
return true;
};
dojo.html.enableSelection=function(_833){
_833=dojo.byId(_833)||dojo.body();
var h=dojo.render.html;
if(h.mozilla){
_833.style.MozUserSelect="";
}else{
if(h.safari){
_833.style.KhtmlUserSelect="";
}else{
if(h.ie){
_833.unselectable="off";
}else{
return false;
}
}
}
return true;
};
dojo.html.selectElement=function(_835){
dojo.deprecated("dojo.html.selectElement","replaced by dojo.html.selection.selectElementChildren",0.5);
};
dojo.html.selectInputText=function(_836){
var _837=dojo.global();
var _838=dojo.doc();
_836=dojo.byId(_836);
if(_838["selection"]&&dojo.body()["createTextRange"]){
var _839=_836.createTextRange();
_839.moveStart("character",0);
_839.moveEnd("character",_836.value.length);
_839.select();
}else{
if(_837["getSelection"]){
var _83a=_837.getSelection();
_836.setSelectionRange(0,_836.value.length);
}
}
_836.focus();
};
dojo.html.isSelectionCollapsed=function(){
dojo.deprecated("dojo.html.isSelectionCollapsed","replaced by dojo.html.selection.isCollapsed",0.5);
return dojo.html.selection.isCollapsed();
};
dojo.lang.mixin(dojo.html.selection,{getType:function(){
if(dojo.doc()["selection"]){
return dojo.html.selectionType[dojo.doc().selection.type.toUpperCase()];
}else{
var _83b=dojo.html.selectionType.TEXT;
var oSel;
try{
oSel=dojo.global().getSelection();
}
catch(e){
}
if(oSel&&oSel.rangeCount==1){
var _83d=oSel.getRangeAt(0);
if(_83d.startContainer==_83d.endContainer&&(_83d.endOffset-_83d.startOffset)==1&&_83d.startContainer.nodeType!=dojo.dom.TEXT_NODE){
_83b=dojo.html.selectionType.CONTROL;
}
}
return _83b;
}
},isCollapsed:function(){
var _83e=dojo.global();
var _83f=dojo.doc();
if(_83f["selection"]){
return _83f.selection.createRange().text=="";
}else{
if(_83e["getSelection"]){
var _840=_83e.getSelection();
if(dojo.lang.isString(_840)){
return _840=="";
}else{
return _840.isCollapsed||_840.toString()=="";
}
}
}
},getSelectedElement:function(){
if(dojo.html.selection.getType()==dojo.html.selectionType.CONTROL){
if(dojo.doc()["selection"]){
var _841=dojo.doc().selection.createRange();
if(_841&&_841.item){
return dojo.doc().selection.createRange().item(0);
}
}else{
var _842=dojo.global().getSelection();
return _842.anchorNode.childNodes[_842.anchorOffset];
}
}
},getParentElement:function(){
if(dojo.html.selection.getType()==dojo.html.selectionType.CONTROL){
var p=dojo.html.selection.getSelectedElement();
if(p){
return p.parentNode;
}
}else{
if(dojo.doc()["selection"]){
return dojo.doc().selection.createRange().parentElement();
}else{
var _844=dojo.global().getSelection();
if(_844){
var node=_844.anchorNode;
while(node&&node.nodeType!=dojo.dom.ELEMENT_NODE){
node=node.parentNode;
}
return node;
}
}
}
},getSelectedText:function(){
if(dojo.doc()["selection"]){
if(dojo.html.selection.getType()==dojo.html.selectionType.CONTROL){
return null;
}
return dojo.doc().selection.createRange().text;
}else{
var _846=dojo.global().getSelection();
if(_846){
return _846.toString();
}
}
},getSelectedHtml:function(){
if(dojo.doc()["selection"]){
if(dojo.html.selection.getType()==dojo.html.selectionType.CONTROL){
return null;
}
return dojo.doc().selection.createRange().htmlText;
}else{
var _847=dojo.global().getSelection();
if(_847&&_847.rangeCount){
var frag=_847.getRangeAt(0).cloneContents();
var div=document.createElement("div");
div.appendChild(frag);
return div.innerHTML;
}
return null;
}
},hasAncestorElement:function(_84a){
return (dojo.html.selection.getAncestorElement.apply(this,arguments)!=null);
},getAncestorElement:function(_84b){
var node=dojo.html.selection.getSelectedElement()||dojo.html.selection.getParentElement();
while(node){
if(dojo.html.selection.isTag(node,arguments).length>0){
return node;
}
node=node.parentNode;
}
return null;
},isTag:function(node,tags){
if(node&&node.tagName){
for(var i=0;i<tags.length;i++){
if(node.tagName.toLowerCase()==String(tags[i]).toLowerCase()){
return String(tags[i]).toLowerCase();
}
}
}
return "";
},selectElement:function(_850){
var _851=dojo.global();
var _852=dojo.doc();
_850=dojo.byId(_850);
if(_852.selection&&dojo.body().createTextRange){
try{
var _853=dojo.body().createControlRange();
_853.addElement(_850);
_853.select();
}
catch(e){
dojo.html.selection.selectElementChildren(_850);
}
}else{
if(_851["getSelection"]){
var _854=_851.getSelection();
if(_854["removeAllRanges"]){
var _853=_852.createRange();
_853.selectNode(_850);
_854.removeAllRanges();
_854.addRange(_853);
}
}
}
},selectElementChildren:function(_855){
var _856=dojo.global();
var _857=dojo.doc();
_855=dojo.byId(_855);
if(_857.selection&&dojo.body().createTextRange){
var _858=dojo.body().createTextRange();
_858.moveToElementText(_855);
_858.select();
}else{
if(_856["getSelection"]){
var _859=_856.getSelection();
if(_859["setBaseAndExtent"]){
_859.setBaseAndExtent(_855,0,_855,_855.innerText.length-1);
}else{
if(_859["selectAllChildren"]){
_859.selectAllChildren(_855);
}
}
}
}
},getBookmark:function(){
var _85a;
var _85b=dojo.doc();
if(_85b["selection"]){
var _85c=_85b.selection.createRange();
_85a=_85c.getBookmark();
}else{
var _85d;
try{
_85d=dojo.global().getSelection();
}
catch(e){
}
if(_85d){
var _85c=_85d.getRangeAt(0);
_85a=_85c.cloneRange();
}else{
dojo.debug("No idea how to store the current selection for this browser!");
}
}
return _85a;
},moveToBookmark:function(_85e){
var _85f=dojo.doc();
if(_85f["selection"]){
var _860=_85f.selection.createRange();
_860.moveToBookmark(_85e);
_860.select();
}else{
var _861;
try{
_861=dojo.global().getSelection();
}
catch(e){
}
if(_861&&_861["removeAllRanges"]){
_861.removeAllRanges();
_861.addRange(_85e);
}else{
dojo.debug("No idea how to restore selection for this browser!");
}
}
},collapse:function(_862){
if(dojo.global()["getSelection"]){
var _863=dojo.global().getSelection();
if(_863.removeAllRanges){
if(_862){
_863.collapseToStart();
}else{
_863.collapseToEnd();
}
}else{
dojo.global().getSelection().collapse(_862);
}
}else{
if(dojo.doc().selection){
var _864=dojo.doc().selection.createRange();
_864.collapse(_862);
_864.select();
}
}
},remove:function(){
if(dojo.doc().selection){
var _865=dojo.doc().selection;
if(_865.type.toUpperCase()!="NONE"){
_865.clear();
}
return _865;
}else{
var _865=dojo.global().getSelection();
for(var i=0;i<_865.rangeCount;i++){
_865.getRangeAt(i).deleteContents();
}
return _865;
}
}});
dojo.provide("dojo.html.iframe");
dojo.html.iframeContentWindow=function(_867){
var win=dojo.html.getDocumentWindow(dojo.html.iframeContentDocument(_867))||dojo.html.iframeContentDocument(_867).__parent__||(_867.name&&document.frames[_867.name])||null;
return win;
};
dojo.html.iframeContentDocument=function(_869){
var doc=_869.contentDocument||((_869.contentWindow)&&(_869.contentWindow.document))||((_869.name)&&(document.frames[_869.name])&&(document.frames[_869.name].document))||null;
return doc;
};
dojo.html.BackgroundIframe=function(node){
if(dojo.render.html.ie55||dojo.render.html.ie60){
var html="<iframe src='javascript:false'"+" style='position: absolute; left: 0px; top: 0px; width: 100%; height: 100%;"+"z-index: -1; filter:Alpha(Opacity=\"0\");' "+">";
this.iframe=dojo.doc().createElement(html);
this.iframe.tabIndex=-1;
if(node){
node.appendChild(this.iframe);
this.domNode=node;
}else{
dojo.body().appendChild(this.iframe);
this.iframe.style.display="none";
}
}
};
dojo.lang.extend(dojo.html.BackgroundIframe,{iframe:null,onResized:function(){
if(this.iframe&&this.domNode&&this.domNode.parentNode){
var _86d=dojo.html.getMarginBox(this.domNode);
if(_86d.width==0||_86d.height==0){
dojo.lang.setTimeout(this,this.onResized,100);
return;
}
this.iframe.style.width=_86d.width+"px";
this.iframe.style.height=_86d.height+"px";
}
},size:function(node){
if(!this.iframe){
return;
}
var _86f=dojo.html.toCoordinateObject(node,true,dojo.html.boxSizing.BORDER_BOX);
with(this.iframe.style){
width=_86f.width+"px";
height=_86f.height+"px";
left=_86f.left+"px";
top=_86f.top+"px";
}
},setZIndex:function(node){
if(!this.iframe){
return;
}
if(dojo.dom.isNode(node)){
this.iframe.style.zIndex=dojo.html.getStyle(node,"z-index")-1;
}else{
if(!isNaN(node)){
this.iframe.style.zIndex=node;
}
}
},show:function(){
if(this.iframe){
this.iframe.style.display="block";
}
},hide:function(){
if(this.iframe){
this.iframe.style.display="none";
}
},remove:function(){
if(this.iframe){
dojo.html.removeNode(this.iframe,true);
delete this.iframe;
this.iframe=null;
}
}});
dojo.provide("dojo.dnd.HtmlDragAndDrop");
dojo.declare("dojo.dnd.HtmlDragSource",dojo.dnd.DragSource,{dragClass:"",onDragStart:function(){
var _871=new dojo.dnd.HtmlDragObject(this.dragObject,this.type);
if(this.dragClass){
_871.dragClass=this.dragClass;
}
if(this.constrainToContainer){
_871.constrainTo(this.constrainingContainer||this.domNode.parentNode);
}
return _871;
},setDragHandle:function(node){
node=dojo.byId(node);
dojo.dnd.dragManager.unregisterDragSource(this);
this.domNode=node;
dojo.dnd.dragManager.registerDragSource(this);
},setDragTarget:function(node){
this.dragObject=node;
},constrainTo:function(_874){
this.constrainToContainer=true;
if(_874){
this.constrainingContainer=_874;
}
},onSelected:function(){
for(var i=0;i<this.dragObjects.length;i++){
dojo.dnd.dragManager.selectedSources.push(new dojo.dnd.HtmlDragSource(this.dragObjects[i]));
}
},addDragObjects:function(el){
for(var i=0;i<arguments.length;i++){
this.dragObjects.push(dojo.byId(arguments[i]));
}
}},function(node,type){
node=dojo.byId(node);
this.dragObjects=[];
this.constrainToContainer=false;
if(node){
this.domNode=node;
this.dragObject=node;
this.type=(type)||(this.domNode.nodeName.toLowerCase());
dojo.dnd.DragSource.prototype.reregister.call(this);
}
});
dojo.declare("dojo.dnd.HtmlDragObject",dojo.dnd.DragObject,{dragClass:"",opacity:0.5,createIframe:true,disableX:false,disableY:false,createDragNode:function(){
var node=this.domNode.cloneNode(true);
if(this.dragClass){
dojo.html.addClass(node,this.dragClass);
}
if(this.opacity<1){
dojo.html.setOpacity(node,this.opacity);
}
var ltn=node.tagName.toLowerCase();
var isTr=(ltn=="tr");
if((isTr)||(ltn=="tbody")){
var doc=this.domNode.ownerDocument;
var _87e=doc.createElement("table");
if(isTr){
var _87f=doc.createElement("tbody");
_87e.appendChild(_87f);
_87f.appendChild(node);
}else{
_87e.appendChild(node);
}
var _880=((isTr)?this.domNode:this.domNode.firstChild);
var _881=((isTr)?node:node.firstChild);
var _882=tdp.childNodes;
var _883=_881.childNodes;
for(var i=0;i<_882.length;i++){
if((_883[i])&&(_883[i].style)){
_883[i].style.width=dojo.html.getContentBox(_882[i]).width+"px";
}
}
node=_87e;
}
if((dojo.render.html.ie55||dojo.render.html.ie60)&&this.createIframe){
with(node.style){
top="0px";
left="0px";
}
var _885=document.createElement("div");
_885.appendChild(node);
this.bgIframe=new dojo.html.BackgroundIframe(_885);
_885.appendChild(this.bgIframe.iframe);
node=_885;
}
node.style.zIndex=999;
return node;
},onDragStart:function(e){
dojo.html.clearSelection();
this.scrollOffset=dojo.html.getScroll().offset;
this.dragStartPosition=dojo.html.getAbsolutePosition(this.domNode,true);
this.dragOffset={y:this.dragStartPosition.y-e.pageY,x:this.dragStartPosition.x-e.pageX};
this.dragClone=this.createDragNode();
this.containingBlockPosition=this.domNode.offsetParent?dojo.html.getAbsolutePosition(this.domNode.offsetParent,true):{x:0,y:0};
if(this.constrainToContainer){
this.constraints=this.getConstraints();
}
with(this.dragClone.style){
position="absolute";
top=this.dragOffset.y+e.pageY+"px";
left=this.dragOffset.x+e.pageX+"px";
}
dojo.body().appendChild(this.dragClone);
dojo.event.topic.publish("dragStart",{source:this});
},getConstraints:function(){
if(this.constrainingContainer.nodeName.toLowerCase()=="body"){
var _887=dojo.html.getViewport();
var _888=_887.width;
var _889=_887.height;
var _88a=dojo.html.getScroll().offset;
var x=_88a.x;
var y=_88a.y;
}else{
var _88d=dojo.html.getContentBox(this.constrainingContainer);
_888=_88d.width;
_889=_88d.height;
x=this.containingBlockPosition.x+dojo.html.getPixelValue(this.constrainingContainer,"padding-left",true)+dojo.html.getBorderExtent(this.constrainingContainer,"left");
y=this.containingBlockPosition.y+dojo.html.getPixelValue(this.constrainingContainer,"padding-top",true)+dojo.html.getBorderExtent(this.constrainingContainer,"top");
}
var mb=dojo.html.getMarginBox(this.domNode);
return {minX:x,minY:y,maxX:x+_888-mb.width,maxY:y+_889-mb.height};
},updateDragOffset:function(){
var _88f=dojo.html.getScroll().offset;
if(_88f.y!=this.scrollOffset.y){
var diff=_88f.y-this.scrollOffset.y;
this.dragOffset.y+=diff;
this.scrollOffset.y=_88f.y;
}
if(_88f.x!=this.scrollOffset.x){
var diff=_88f.x-this.scrollOffset.x;
this.dragOffset.x+=diff;
this.scrollOffset.x=_88f.x;
}
},onDragMove:function(e){
this.updateDragOffset();
var x=this.dragOffset.x+e.pageX;
var y=this.dragOffset.y+e.pageY;
if(this.constrainToContainer){
if(x<this.constraints.minX){
x=this.constraints.minX;
}
if(y<this.constraints.minY){
y=this.constraints.minY;
}
if(x>this.constraints.maxX){
x=this.constraints.maxX;
}
if(y>this.constraints.maxY){
y=this.constraints.maxY;
}
}
this.setAbsolutePosition(x,y);
dojo.event.topic.publish("dragMove",{source:this});
},setAbsolutePosition:function(x,y){
if(!this.disableY){
this.dragClone.style.top=y+"px";
}
if(!this.disableX){
this.dragClone.style.left=x+"px";
}
},onDragEnd:function(e){
switch(e.dragStatus){
case "dropSuccess":
dojo.html.removeNode(this.dragClone);
this.dragClone=null;
break;
case "dropFailure":
var _897=dojo.html.getAbsolutePosition(this.dragClone,true);
var _898={left:this.dragStartPosition.x+1,top:this.dragStartPosition.y+1};
var anim=dojo.lfx.slideTo(this.dragClone,_898,300);
var _89a=this;
dojo.event.connect(anim,"onEnd",function(e){
dojo.html.removeNode(_89a.dragClone);
_89a.dragClone=null;
});
anim.play();
break;
}
dojo.event.topic.publish("dragEnd",{source:this});
},constrainTo:function(_89c){
this.constrainToContainer=true;
if(_89c){
this.constrainingContainer=_89c;
}else{
this.constrainingContainer=this.domNode.parentNode;
}
}},function(node,type){
this.domNode=dojo.byId(node);
this.type=type;
this.constrainToContainer=false;
this.dragSource=null;
dojo.dnd.DragObject.prototype.register.call(this);
});
dojo.declare("dojo.dnd.HtmlDropTarget",dojo.dnd.DropTarget,{vertical:false,onDragOver:function(e){
if(!this.accepts(e.dragObjects)){
return false;
}
this.childBoxes=[];
for(var i=0,_8a1;i<this.domNode.childNodes.length;i++){
_8a1=this.domNode.childNodes[i];
if(_8a1.nodeType!=dojo.html.ELEMENT_NODE){
continue;
}
var pos=dojo.html.getAbsolutePosition(_8a1,true);
var _8a3=dojo.html.getBorderBox(_8a1);
this.childBoxes.push({top:pos.y,bottom:pos.y+_8a3.height,left:pos.x,right:pos.x+_8a3.width,height:_8a3.height,width:_8a3.width,node:_8a1});
}
return true;
},_getNodeUnderMouse:function(e){
for(var i=0,_8a6;i<this.childBoxes.length;i++){
with(this.childBoxes[i]){
if(e.pageX>=left&&e.pageX<=right&&e.pageY>=top&&e.pageY<=bottom){
return i;
}
}
}
return -1;
},createDropIndicator:function(){
this.dropIndicator=document.createElement("div");
with(this.dropIndicator.style){
position="absolute";
zIndex=999;
if(this.vertical){
borderLeftWidth="1px";
borderLeftColor="black";
borderLeftStyle="solid";
height=dojo.html.getBorderBox(this.domNode).height+"px";
top=dojo.html.getAbsolutePosition(this.domNode,true).y+"px";
}else{
borderTopWidth="1px";
borderTopColor="black";
borderTopStyle="solid";
width=dojo.html.getBorderBox(this.domNode).width+"px";
left=dojo.html.getAbsolutePosition(this.domNode,true).x+"px";
}
}
},onDragMove:function(e,_8a8){
var i=this._getNodeUnderMouse(e);
if(!this.dropIndicator){
this.createDropIndicator();
}
var _8aa=this.vertical?dojo.html.gravity.WEST:dojo.html.gravity.NORTH;
var hide=false;
if(i<0){
if(this.childBoxes.length){
var _8ac=(dojo.html.gravity(this.childBoxes[0].node,e)&_8aa);
if(_8ac){
hide=true;
}
}else{
var _8ac=true;
}
}else{
var _8ad=this.childBoxes[i];
var _8ac=(dojo.html.gravity(_8ad.node,e)&_8aa);
if(_8ad.node===_8a8[0].dragSource.domNode){
hide=true;
}else{
var _8ae=_8ac?(i>0?this.childBoxes[i-1]:_8ad):(i<this.childBoxes.length-1?this.childBoxes[i+1]:_8ad);
if(_8ae.node===_8a8[0].dragSource.domNode){
hide=true;
}
}
}
if(hide){
this.dropIndicator.style.display="none";
return;
}else{
this.dropIndicator.style.display="";
}
this.placeIndicator(e,_8a8,i,_8ac);
if(!dojo.html.hasParent(this.dropIndicator)){
dojo.body().appendChild(this.dropIndicator);
}
},placeIndicator:function(e,_8b0,_8b1,_8b2){
var _8b3=this.vertical?"left":"top";
var _8b4;
if(_8b1<0){
if(this.childBoxes.length){
_8b4=_8b2?this.childBoxes[0]:this.childBoxes[this.childBoxes.length-1];
}else{
this.dropIndicator.style[_8b3]=dojo.html.getAbsolutePosition(this.domNode,true)[this.vertical?"x":"y"]+"px";
}
}else{
_8b4=this.childBoxes[_8b1];
}
if(_8b4){
this.dropIndicator.style[_8b3]=(_8b2?_8b4[_8b3]:_8b4[this.vertical?"right":"bottom"])+"px";
if(this.vertical){
this.dropIndicator.style.height=_8b4.height+"px";
this.dropIndicator.style.top=_8b4.top+"px";
}else{
this.dropIndicator.style.width=_8b4.width+"px";
this.dropIndicator.style.left=_8b4.left+"px";
}
}
},onDragOut:function(e){
if(this.dropIndicator){
dojo.html.removeNode(this.dropIndicator);
delete this.dropIndicator;
}
},onDrop:function(e){
this.onDragOut(e);
var i=this._getNodeUnderMouse(e);
var _8b8=this.vertical?dojo.html.gravity.WEST:dojo.html.gravity.NORTH;
if(i<0){
if(this.childBoxes.length){
if(dojo.html.gravity(this.childBoxes[0].node,e)&_8b8){
return this.insert(e,this.childBoxes[0].node,"before");
}else{
return this.insert(e,this.childBoxes[this.childBoxes.length-1].node,"after");
}
}
return this.insert(e,this.domNode,"append");
}
var _8b9=this.childBoxes[i];
if(dojo.html.gravity(_8b9.node,e)&_8b8){
return this.insert(e,_8b9.node,"before");
}else{
return this.insert(e,_8b9.node,"after");
}
},insert:function(e,_8bb,_8bc){
var node=e.dragObject.domNode;
if(_8bc=="before"){
return dojo.html.insertBefore(node,_8bb);
}else{
if(_8bc=="after"){
return dojo.html.insertAfter(node,_8bb);
}else{
if(_8bc=="append"){
_8bb.appendChild(node);
return true;
}
}
}
return false;
}},function(node,_8bf){
if(arguments.length==0){
return;
}
this.domNode=dojo.byId(node);
dojo.dnd.DropTarget.call(this);
if(_8bf&&dojo.lang.isString(_8bf)){
_8bf=[_8bf];
}
this.acceptedTypes=_8bf||[];
dojo.dnd.dragManager.registerDropTarget(this);
});
dojo.provide("dojo.dnd.*");
dojo.provide("dojo.ns");
dojo.ns={namespaces:{},failed:{},loading:{},loaded:{},register:function(name,_8c1,_8c2,_8c3){
if(!_8c3||!this.namespaces[name]){
this.namespaces[name]=new dojo.ns.Ns(name,_8c1,_8c2);
}
},allow:function(name){
if(this.failed[name]){
return false;
}
if((djConfig.excludeNamespace)&&(dojo.lang.inArray(djConfig.excludeNamespace,name))){
return false;
}
return ((name==this.dojo)||(!djConfig.includeNamespace)||(dojo.lang.inArray(djConfig.includeNamespace,name)));
},get:function(name){
return this.namespaces[name];
},require:function(name){
var ns=this.namespaces[name];
if((ns)&&(this.loaded[name])){
return ns;
}
if(!this.allow(name)){
return false;
}
if(this.loading[name]){
dojo.debug("dojo.namespace.require: re-entrant request to load namespace \""+name+"\" must fail.");
return false;
}
var req=dojo.require;
this.loading[name]=true;
try{
if(name=="dojo"){
req("dojo.namespaces.dojo");
}else{
if(!dojo.hostenv.moduleHasPrefix(name)){
dojo.registerModulePath(name,"../"+name);
}
req([name,"manifest"].join("."),false,true);
}
if(!this.namespaces[name]){
this.failed[name]=true;
}
}
finally{
this.loading[name]=false;
}
return this.namespaces[name];
}};
dojo.ns.Ns=function(name,_8ca,_8cb){
this.name=name;
this.module=_8ca;
this.resolver=_8cb;
this._loaded=[];
this._failed=[];
};
dojo.ns.Ns.prototype.resolve=function(name,_8cd,_8ce){
if(!this.resolver||djConfig["skipAutoRequire"]){
return false;
}
var _8cf=this.resolver(name,_8cd);
if((_8cf)&&(!this._loaded[_8cf])&&(!this._failed[_8cf])){
var req=dojo.require;
req(_8cf,false,true);
if(dojo.hostenv.findModule(_8cf,false)){
this._loaded[_8cf]=true;
}else{
if(!_8ce){
dojo.raise("dojo.ns.Ns.resolve: module '"+_8cf+"' not found after loading via namespace '"+this.name+"'");
}
this._failed[_8cf]=true;
}
}
return Boolean(this._loaded[_8cf]);
};
dojo.registerNamespace=function(name,_8d2,_8d3){
dojo.ns.register.apply(dojo.ns,arguments);
};
dojo.registerNamespaceResolver=function(name,_8d5){
var n=dojo.ns.namespaces[name];
if(n){
n.resolver=_8d5;
}
};
dojo.registerNamespaceManifest=function(_8d7,path,name,_8da,_8db){
dojo.registerModulePath(name,path);
dojo.registerNamespace(name,_8da,_8db);
};
dojo.registerNamespace("dojo","dojo.widget");
dojo.provide("dojo.widget.Manager");
dojo.widget.manager=new function(){
this.widgets=[];
this.widgetIds=[];
this.topWidgets={};
var _8dc={};
var _8dd=[];
this.getUniqueId=function(_8de){
var _8df;
do{
_8df=_8de+"_"+(_8dc[_8de]!=undefined?++_8dc[_8de]:_8dc[_8de]=0);
}while(this.getWidgetById(_8df));
return _8df;
};
this.add=function(_8e0){
this.widgets.push(_8e0);
if(!_8e0.extraArgs["id"]){
_8e0.extraArgs["id"]=_8e0.extraArgs["ID"];
}
if(_8e0.widgetId==""){
if(_8e0["id"]){
_8e0.widgetId=_8e0["id"];
}else{
if(_8e0.extraArgs["id"]){
_8e0.widgetId=_8e0.extraArgs["id"];
}else{
_8e0.widgetId=this.getUniqueId(_8e0.ns+"_"+_8e0.widgetType);
}
}
}
if(this.widgetIds[_8e0.widgetId]){
dojo.debug("widget ID collision on ID: "+_8e0.widgetId);
}
this.widgetIds[_8e0.widgetId]=_8e0;
};
this.destroyAll=function(){
for(var x=this.widgets.length-1;x>=0;x--){
try{
this.widgets[x].destroy(true);
delete this.widgets[x];
}
catch(e){
}
}
};
this.remove=function(_8e2){
if(dojo.lang.isNumber(_8e2)){
var tw=this.widgets[_8e2].widgetId;
delete this.widgetIds[tw];
this.widgets.splice(_8e2,1);
}else{
this.removeById(_8e2);
}
};
this.removeById=function(id){
if(!dojo.lang.isString(id)){
id=id["widgetId"];
if(!id){
dojo.debug("invalid widget or id passed to removeById");
return;
}
}
for(var i=0;i<this.widgets.length;i++){
if(this.widgets[i].widgetId==id){
this.remove(i);
break;
}
}
};
this.getWidgetById=function(id){
if(dojo.lang.isString(id)){
return this.widgetIds[id];
}
return id;
};
this.getWidgetsByType=function(type){
var lt=type.toLowerCase();
var _8e9=(type.indexOf(":")<0?function(x){
return x.widgetType.toLowerCase();
}:function(x){
return x.getNamespacedType();
});
var ret=[];
dojo.lang.forEach(this.widgets,function(x){
if(_8e9(x)==lt){
ret.push(x);
}
});
return ret;
};
this.getWidgetsByFilter=function(_8ee,_8ef){
var ret=[];
dojo.lang.every(this.widgets,function(x){
if(_8ee(x)){
ret.push(x);
if(_8ef){
return false;
}
}
return true;
});
return (_8ef?ret[0]:ret);
};
this.getAllWidgets=function(){
return this.widgets.concat();
};
this.getWidgetByNode=function(node){
var w=this.getAllWidgets();
node=dojo.byId(node);
for(var i=0;i<w.length;i++){
if(w[i].domNode==node){
return w[i];
}
}
return null;
};
this.byId=this.getWidgetById;
this.byType=this.getWidgetsByType;
this.byFilter=this.getWidgetsByFilter;
this.byNode=this.getWidgetByNode;
var _8f5={};
var _8f6=["dojo.widget"];
for(var i=0;i<_8f6.length;i++){
_8f6[_8f6[i]]=true;
}
this.registerWidgetPackage=function(_8f8){
if(!_8f6[_8f8]){
_8f6[_8f8]=true;
_8f6.push(_8f8);
}
};
this.getWidgetPackageList=function(){
return dojo.lang.map(_8f6,function(elt){
return (elt!==true?elt:undefined);
});
};
this.getImplementation=function(_8fa,_8fb,_8fc,ns){
var impl=this.getImplementationName(_8fa,ns);
if(impl){
var ret=_8fb?new impl(_8fb):new impl();
return ret;
}
};
function buildPrefixCache(){
for(var _900 in dojo.render){
if(dojo.render[_900]["capable"]===true){
var _901=dojo.render[_900].prefixes;
for(var i=0;i<_901.length;i++){
_8dd.push(_901[i].toLowerCase());
}
}
}
}
var _903=function(_904,_905){
if(!_905){
return null;
}
for(var i=0,l=_8dd.length,_908;i<=l;i++){
_908=(i<l?_905[_8dd[i]]:_905);
if(!_908){
continue;
}
for(var name in _908){
if(name.toLowerCase()==_904){
return _908[name];
}
}
}
return null;
};
var _90a=function(_90b,_90c){
var _90d=dojo.evalObjPath(_90c,false);
return (_90d?_903(_90b,_90d):null);
};
this.getImplementationName=function(_90e,ns){
var _910=_90e.toLowerCase();
ns=ns||"dojo";
var imps=_8f5[ns]||(_8f5[ns]={});
var impl=imps[_910];
if(impl){
return impl;
}
if(!_8dd.length){
buildPrefixCache();
}
var _913=dojo.ns.get(ns);
if(!_913){
dojo.ns.register(ns,ns+".widget");
_913=dojo.ns.get(ns);
}
if(_913){
_913.resolve(_90e);
}
impl=_90a(_910,_913.module);
if(impl){
return (imps[_910]=impl);
}
_913=dojo.ns.require(ns);
if((_913)&&(_913.resolver)){
_913.resolve(_90e);
impl=_90a(_910,_913.module);
if(impl){
return (imps[_910]=impl);
}
}
dojo.deprecated("dojo.widget.Manager.getImplementationName","Could not locate widget implementation for \""+_90e+"\" in \""+_913.module+"\" registered to namespace \""+_913.name+"\". "+"Developers must specify correct namespaces for all non-Dojo widgets","0.5");
for(var i=0;i<_8f6.length;i++){
impl=_90a(_910,_8f6[i]);
if(impl){
return (imps[_910]=impl);
}
}
throw new Error("Could not locate widget implementation for \""+_90e+"\" in \""+_913.module+"\" registered to namespace \""+_913.name+"\"");
};
this.resizing=false;
this.onWindowResized=function(){
if(this.resizing){
return;
}
try{
this.resizing=true;
for(var id in this.topWidgets){
var _916=this.topWidgets[id];
if(_916.checkSize){
_916.checkSize();
}
}
}
catch(e){
}
finally{
this.resizing=false;
}
};
if(typeof window!="undefined"){
dojo.addOnLoad(this,"onWindowResized");
dojo.event.connect(window,"onresize",this,"onWindowResized");
}
};
(function(){
var dw=dojo.widget;
var dwm=dw.manager;
var h=dojo.lang.curry(dojo.lang,"hitch",dwm);
var g=function(_91b,_91c){
dw[(_91c||_91b)]=h(_91b);
};
g("add","addWidget");
g("destroyAll","destroyAllWidgets");
g("remove","removeWidget");
g("removeById","removeWidgetById");
g("getWidgetById");
g("getWidgetById","byId");
g("getWidgetsByType");
g("getWidgetsByFilter");
g("getWidgetsByType","byType");
g("getWidgetsByFilter","byFilter");
g("getWidgetByNode","byNode");
dw.all=function(n){
var _91e=dwm.getAllWidgets.apply(dwm,arguments);
if(arguments.length>0){
return _91e[n];
}
return _91e;
};
g("registerWidgetPackage");
g("getImplementation","getWidgetImplementation");
g("getImplementationName","getWidgetImplementationName");
dw.widgets=dwm.widgets;
dw.widgetIds=dwm.widgetIds;
dw.root=dwm.root;
})();
dojo.provide("dojo.a11y");
dojo.a11y={imgPath:dojo.uri.dojoUri("src/widget/templates/images"),doAccessibleCheck:true,accessible:null,checkAccessible:function(){
if(this.accessible===null){
this.accessible=false;
if(this.doAccessibleCheck==true){
this.accessible=this.testAccessible();
}
}
return this.accessible;
},testAccessible:function(){
this.accessible=false;
if(dojo.render.html.ie||dojo.render.html.mozilla){
var div=document.createElement("div");
div.style.backgroundImage="url(\""+this.imgPath+"/tab_close.gif\")";
dojo.body().appendChild(div);
var _920=null;
if(window.getComputedStyle){
var _921=getComputedStyle(div,"");
_920=_921.getPropertyValue("background-image");
}else{
_920=div.currentStyle.backgroundImage;
}
var _922=false;
if(_920!=null&&(_920=="none"||_920=="url(invalid-url:)")){
this.accessible=true;
}
dojo.body().removeChild(div);
}
return this.accessible;
},setCheckAccessible:function(_923){
this.doAccessibleCheck=_923;
},setAccessibleMode:function(){
if(this.accessible===null){
if(this.checkAccessible()){
dojo.render.html.prefixes.unshift("a11y");
}
}
return this.accessible;
}};
dojo.provide("dojo.widget.Widget");
dojo.declare("dojo.widget.Widget",null,function(){
this.children=[];
this.extraArgs={};
},{parent:null,isTopLevel:false,disabled:false,isContainer:false,widgetId:"",widgetType:"Widget",ns:"dojo",getNamespacedType:function(){
return (this.ns?this.ns+":"+this.widgetType:this.widgetType).toLowerCase();
},toString:function(){
return "[Widget "+this.getNamespacedType()+", "+(this.widgetId||"NO ID")+"]";
},repr:function(){
return this.toString();
},enable:function(){
this.disabled=false;
},disable:function(){
this.disabled=true;
},onResized:function(){
this.notifyChildrenOfResize();
},notifyChildrenOfResize:function(){
for(var i=0;i<this.children.length;i++){
var _925=this.children[i];
if(_925.onResized){
_925.onResized();
}
}
},create:function(args,_927,_928,ns){
if(ns){
this.ns=ns;
}
this.satisfyPropertySets(args,_927,_928);
this.mixInProperties(args,_927,_928);
this.postMixInProperties(args,_927,_928);
dojo.widget.manager.add(this);
this.buildRendering(args,_927,_928);
this.initialize(args,_927,_928);
this.postInitialize(args,_927,_928);
this.postCreate(args,_927,_928);
return this;
},destroy:function(_92a){
if(this.parent){
this.parent.removeChild(this);
}
this.destroyChildren();
this.uninitialize();
this.destroyRendering(_92a);
dojo.widget.manager.removeById(this.widgetId);
},destroyChildren:function(){
var _92b;
var i=0;
while(this.children.length>i){
_92b=this.children[i];
if(_92b instanceof dojo.widget.Widget){
this.removeChild(_92b);
_92b.destroy();
continue;
}
i++;
}
},getChildrenOfType:function(type,_92e){
var ret=[];
var _930=dojo.lang.isFunction(type);
if(!_930){
type=type.toLowerCase();
}
for(var x=0;x<this.children.length;x++){
if(_930){
if(this.children[x] instanceof type){
ret.push(this.children[x]);
}
}else{
if(this.children[x].widgetType.toLowerCase()==type){
ret.push(this.children[x]);
}
}
if(_92e){
ret=ret.concat(this.children[x].getChildrenOfType(type,_92e));
}
}
return ret;
},getDescendants:function(){
var _932=[];
var _933=[this];
var elem;
while((elem=_933.pop())){
_932.push(elem);
if(elem.children){
dojo.lang.forEach(elem.children,function(elem){
_933.push(elem);
});
}
}
return _932;
},isFirstChild:function(){
return this===this.parent.children[0];
},isLastChild:function(){
return this===this.parent.children[this.parent.children.length-1];
},satisfyPropertySets:function(args){
return args;
},mixInProperties:function(args,frag){
if((args["fastMixIn"])||(frag["fastMixIn"])){
for(var x in args){
this[x]=args[x];
}
return;
}
var _93a;
var _93b=dojo.widget.lcArgsCache[this.widgetType];
if(_93b==null){
_93b={};
for(var y in this){
_93b[((new String(y)).toLowerCase())]=y;
}
dojo.widget.lcArgsCache[this.widgetType]=_93b;
}
var _93d={};
for(var x in args){
if(!this[x]){
var y=_93b[(new String(x)).toLowerCase()];
if(y){
args[y]=args[x];
x=y;
}
}
if(_93d[x]){
continue;
}
_93d[x]=true;
if((typeof this[x])!=(typeof _93a)){
if(typeof args[x]!="string"){
this[x]=args[x];
}else{
if(dojo.lang.isString(this[x])){
this[x]=args[x];
}else{
if(dojo.lang.isNumber(this[x])){
this[x]=new Number(args[x]);
}else{
if(dojo.lang.isBoolean(this[x])){
this[x]=(args[x].toLowerCase()=="false")?false:true;
}else{
if(dojo.lang.isFunction(this[x])){
if(args[x].search(/[^\w\.]+/i)==-1){
this[x]=dojo.evalObjPath(args[x],false);
}else{
var tn=dojo.lang.nameAnonFunc(new Function(args[x]),this);
dojo.event.kwConnect({srcObj:this,srcFunc:x,adviceObj:this,adviceFunc:tn});
}
}else{
if(dojo.lang.isArray(this[x])){
this[x]=args[x].split(";");
}else{
if(this[x] instanceof Date){
this[x]=new Date(Number(args[x]));
}else{
if(typeof this[x]=="object"){
if(this[x] instanceof dojo.uri.Uri){
this[x]=dojo.uri.dojoUri(args[x]);
}else{
var _93f=args[x].split(";");
for(var y=0;y<_93f.length;y++){
var si=_93f[y].indexOf(":");
if((si!=-1)&&(_93f[y].length>si)){
this[x][_93f[y].substr(0,si).replace(/^\s+|\s+$/g,"")]=_93f[y].substr(si+1);
}
}
}
}else{
this[x]=args[x];
}
}
}
}
}
}
}
}
}else{
this.extraArgs[x.toLowerCase()]=args[x];
}
}
},postMixInProperties:function(args,frag,_943){
},initialize:function(args,frag,_946){
return false;
},postInitialize:function(args,frag,_949){
return false;
},postCreate:function(args,frag,_94c){
return false;
},uninitialize:function(){
return false;
},buildRendering:function(args,frag,_94f){
dojo.unimplemented("dojo.widget.Widget.buildRendering, on "+this.toString()+", ");
return false;
},destroyRendering:function(){
dojo.unimplemented("dojo.widget.Widget.destroyRendering");
return false;
},addedTo:function(_950){
},addChild:function(_951){
dojo.unimplemented("dojo.widget.Widget.addChild");
return false;
},removeChild:function(_952){
for(var x=0;x<this.children.length;x++){
if(this.children[x]===_952){
this.children.splice(x,1);
_952.parent=null;
break;
}
}
return _952;
},getPreviousSibling:function(){
var idx=this.getParentIndex();
if(idx<=0){
return null;
}
return this.parent.children[idx-1];
},getSiblings:function(){
return this.parent.children;
},getParentIndex:function(){
return dojo.lang.indexOf(this.parent.children,this,true);
},getNextSibling:function(){
var idx=this.getParentIndex();
if(idx==this.parent.children.length-1){
return null;
}
if(idx<0){
return null;
}
return this.parent.children[idx+1];
}});
dojo.widget.lcArgsCache={};
dojo.widget.tags={};
dojo.widget.tags.addParseTreeHandler=function(type){
dojo.deprecated("addParseTreeHandler",". ParseTreeHandlers are now reserved for components. Any unfiltered DojoML tag without a ParseTreeHandler is assumed to be a widget","0.5");
};
dojo.widget.tags["dojo:propertyset"]=function(_957,_958,_959){
var _95a=_958.parseProperties(_957["dojo:propertyset"]);
};
dojo.widget.tags["dojo:connect"]=function(_95b,_95c,_95d){
var _95e=_95c.parseProperties(_95b["dojo:connect"]);
};
dojo.widget.buildWidgetFromParseTree=function(type,frag,_961,_962,_963,_964){
dojo.a11y.setAccessibleMode();
var _965=type.split(":");
_965=(_965.length==2)?_965[1]:type;
var _966=_964||_961.parseProperties(frag[frag["ns"]+":"+_965]);
var _967=dojo.widget.manager.getImplementation(_965,null,null,frag["ns"]);
if(!_967){
throw new Error("cannot find \""+type+"\" widget");
}else{
if(!_967.create){
throw new Error("\""+type+"\" widget object has no \"create\" method and does not appear to implement *Widget");
}
}
_966["dojoinsertionindex"]=_963;
var ret=_967.create(_966,frag,_962,frag["ns"]);
return ret;
};
dojo.widget.defineWidget=function(_969,_96a,_96b,init,_96d){
if(dojo.lang.isString(arguments[3])){
dojo.widget._defineWidget(arguments[0],arguments[3],arguments[1],arguments[4],arguments[2]);
}else{
var args=[arguments[0]],p=3;
if(dojo.lang.isString(arguments[1])){
args.push(arguments[1],arguments[2]);
}else{
args.push("",arguments[1]);
p=2;
}
if(dojo.lang.isFunction(arguments[p])){
args.push(arguments[p],arguments[p+1]);
}else{
args.push(null,arguments[p]);
}
dojo.widget._defineWidget.apply(this,args);
}
};
dojo.widget.defineWidget.renderers="html|svg|vml";
dojo.widget._defineWidget=function(_970,_971,_972,init,_974){
var _975=_970.split(".");
var type=_975.pop();
var regx="\\.("+(_971?_971+"|":"")+dojo.widget.defineWidget.renderers+")\\.";
var r=_970.search(new RegExp(regx));
_975=(r<0?_975.join("."):_970.substr(0,r));
dojo.widget.manager.registerWidgetPackage(_975);
var pos=_975.indexOf(".");
var _97a=(pos>-1)?_975.substring(0,pos):_975;
_974=(_974)||{};
_974.widgetType=type;
if((!init)&&(_974["classConstructor"])){
init=_974.classConstructor;
delete _974.classConstructor;
}
dojo.declare(_970,_972,init,_974);
};
dojo.provide("dojo.widget.Parse");
dojo.widget.Parse=function(_97b){
this.propertySetsList=[];
this.fragment=_97b;
this.createComponents=function(frag,_97d){
var _97e=[];
var _97f=false;
try{
if(frag&&frag.tagName&&(frag!=frag.nodeRef)){
var _980=dojo.widget.tags;
var tna=String(frag.tagName).split(";");
for(var x=0;x<tna.length;x++){
var ltn=tna[x].replace(/^\s+|\s+$/g,"").toLowerCase();
frag.tagName=ltn;
var ret;
if(_980[ltn]){
_97f=true;
ret=_980[ltn](frag,this,_97d,frag.index);
_97e.push(ret);
}else{
if(ltn.indexOf(":")==-1){
ltn="dojo:"+ltn;
}
ret=dojo.widget.buildWidgetFromParseTree(ltn,frag,this,_97d,frag.index);
if(ret){
_97f=true;
_97e.push(ret);
}
}
}
}
}
catch(e){
dojo.debug("dojo.widget.Parse: error:",e);
}
if(!_97f){
_97e=_97e.concat(this.createSubComponents(frag,_97d));
}
return _97e;
};
this.createSubComponents=function(_985,_986){
var frag,_988=[];
for(var item in _985){
frag=_985[item];
if(frag&&typeof frag=="object"&&(frag!=_985.nodeRef)&&(frag!=_985.tagName)&&(!dojo.dom.isNode(frag))){
_988=_988.concat(this.createComponents(frag,_986));
}
}
return _988;
};
this.parsePropertySets=function(_98a){
return [];
};
this.parseProperties=function(_98b){
var _98c={};
for(var item in _98b){
if((_98b[item]==_98b.tagName)||(_98b[item]==_98b.nodeRef)){
}else{
var frag=_98b[item];
if(frag.tagName&&dojo.widget.tags[frag.tagName.toLowerCase()]){
}else{
if(frag[0]&&frag[0].value!=""&&frag[0].value!=null){
try{
if(item.toLowerCase()=="dataprovider"){
var _98f=this;
this.getDataProvider(_98f,frag[0].value);
_98c.dataProvider=this.dataProvider;
}
_98c[item]=frag[0].value;
var _990=this.parseProperties(frag);
for(var _991 in _990){
_98c[_991]=_990[_991];
}
}
catch(e){
dojo.debug(e);
}
}
}
switch(item.toLowerCase()){
case "checked":
case "disabled":
if(typeof _98c[item]!="boolean"){
_98c[item]=true;
}
break;
}
}
}
return _98c;
};
this.getDataProvider=function(_992,_993){
dojo.io.bind({url:_993,load:function(type,_995){
if(type=="load"){
_992.dataProvider=_995;
}
},mimetype:"text/javascript",sync:true});
};
this.getPropertySetById=function(_996){
for(var x=0;x<this.propertySetsList.length;x++){
if(_996==this.propertySetsList[x]["id"][0].value){
return this.propertySetsList[x];
}
}
return "";
};
this.getPropertySetsByType=function(_998){
var _999=[];
for(var x=0;x<this.propertySetsList.length;x++){
var cpl=this.propertySetsList[x];
var cpcc=cpl.componentClass||cpl.componentType||null;
var _99d=this.propertySetsList[x]["id"][0].value;
if(cpcc&&(_99d==cpcc[0].value)){
_999.push(cpl);
}
}
return _999;
};
this.getPropertySets=function(_99e){
var ppl="dojo:propertyproviderlist";
var _9a0=[];
var _9a1=_99e.tagName;
if(_99e[ppl]){
var _9a2=_99e[ppl].value.split(" ");
for(var _9a3 in _9a2){
if((_9a3.indexOf("..")==-1)&&(_9a3.indexOf("://")==-1)){
var _9a4=this.getPropertySetById(_9a3);
if(_9a4!=""){
_9a0.push(_9a4);
}
}else{
}
}
}
return this.getPropertySetsByType(_9a1).concat(_9a0);
};
this.createComponentFromScript=function(_9a5,_9a6,_9a7,ns){
_9a7.fastMixIn=true;
var ltn=(ns||"dojo")+":"+_9a6.toLowerCase();
if(dojo.widget.tags[ltn]){
return [dojo.widget.tags[ltn](_9a7,this,null,null,_9a7)];
}
return [dojo.widget.buildWidgetFromParseTree(ltn,_9a7,this,null,null,_9a7)];
};
};
dojo.widget._parser_collection={"dojo":new dojo.widget.Parse()};
dojo.widget.getParser=function(name){
if(!name){
name="dojo";
}
if(!this._parser_collection[name]){
this._parser_collection[name]=new dojo.widget.Parse();
}
return this._parser_collection[name];
};
dojo.widget.createWidget=function(name,_9ac,_9ad,_9ae){
var _9af=false;
var _9b0=(typeof name=="string");
if(_9b0){
var pos=name.indexOf(":");
var ns=(pos>-1)?name.substring(0,pos):"dojo";
if(pos>-1){
name=name.substring(pos+1);
}
var _9b3=name.toLowerCase();
var _9b4=ns+":"+_9b3;
_9af=(dojo.byId(name)&&!dojo.widget.tags[_9b4]);
}
if((arguments.length==1)&&(_9af||!_9b0)){
var xp=new dojo.xml.Parse();
var tn=_9af?dojo.byId(name):name;
return dojo.widget.getParser().createComponents(xp.parseElement(tn,null,true))[0];
}
function fromScript(_9b7,name,_9b9,ns){
_9b9[_9b4]={dojotype:[{value:_9b3}],nodeRef:_9b7,fastMixIn:true};
_9b9.ns=ns;
return dojo.widget.getParser().createComponentFromScript(_9b7,name,_9b9,ns);
}
_9ac=_9ac||{};
var _9bb=false;
var tn=null;
var h=dojo.render.html.capable;
if(h){
tn=document.createElement("span");
}
if(!_9ad){
_9bb=true;
_9ad=tn;
if(h){
dojo.body().appendChild(_9ad);
}
}else{
if(_9ae){
dojo.dom.insertAtPosition(tn,_9ad,_9ae);
}else{
tn=_9ad;
}
}
var _9bd=fromScript(tn,name.toLowerCase(),_9ac,ns);
if((!_9bd)||(!_9bd[0])||(typeof _9bd[0].widgetType=="undefined")){
throw new Error("createWidget: Creation of \""+name+"\" widget failed.");
}
try{
if(_9bb&&_9bd[0].domNode.parentNode){
_9bd[0].domNode.parentNode.removeChild(_9bd[0].domNode);
}
}
catch(e){
dojo.debug(e);
}
return _9bd[0];
};
dojo.provide("dojo.widget.DomWidget");
dojo.widget._cssFiles={};
dojo.widget._cssStrings={};
dojo.widget._templateCache={};
dojo.widget.defaultStrings={dojoRoot:dojo.hostenv.getBaseScriptUri(),baseScriptUri:dojo.hostenv.getBaseScriptUri()};
dojo.widget.fillFromTemplateCache=function(obj,_9bf,_9c0,_9c1){
var _9c2=_9bf||obj.templatePath;
var _9c3=dojo.widget._templateCache;
if(!_9c2&&!obj["widgetType"]){
do{
var _9c4="__dummyTemplate__"+dojo.widget._templateCache.dummyCount++;
}while(_9c3[_9c4]);
obj.widgetType=_9c4;
}
var wt=_9c2?_9c2.toString():obj.widgetType;
var ts=_9c3[wt];
if(!ts){
_9c3[wt]={"string":null,"node":null};
if(_9c1){
ts={};
}else{
ts=_9c3[wt];
}
}
if((!obj.templateString)&&(!_9c1)){
obj.templateString=_9c0||ts["string"];
}
if((!obj.templateNode)&&(!_9c1)){
obj.templateNode=ts["node"];
}
if((!obj.templateNode)&&(!obj.templateString)&&(_9c2)){
var _9c7=dojo.hostenv.getText(_9c2);
if(_9c7){
_9c7=_9c7.replace(/^\s*<\?xml(\s)+version=[\'\"](\d)*.(\d)*[\'\"](\s)*\?>/im,"");
var _9c8=_9c7.match(/<body[^>]*>\s*([\s\S]+)\s*<\/body>/im);
if(_9c8){
_9c7=_9c8[1];
}
}else{
_9c7="";
}
obj.templateString=_9c7;
if(!_9c1){
_9c3[wt]["string"]=_9c7;
}
}
if((!ts["string"])&&(!_9c1)){
ts.string=obj.templateString;
}
};
dojo.widget._templateCache.dummyCount=0;
dojo.widget.attachProperties=["dojoAttachPoint","id"];
dojo.widget.eventAttachProperty="dojoAttachEvent";
dojo.widget.onBuildProperty="dojoOnBuild";
dojo.widget.waiNames=["waiRole","waiState"];
dojo.widget.wai={waiRole:{name:"waiRole","namespace":"http://www.w3.org/TR/xhtml2",alias:"x2",prefix:"wairole:"},waiState:{name:"waiState","namespace":"http://www.w3.org/2005/07/aaa",alias:"aaa",prefix:""},setAttr:function(node,ns,attr,_9cc){
if(dojo.render.html.ie){
node.setAttribute(this[ns].alias+":"+attr,this[ns].prefix+_9cc);
}else{
node.setAttributeNS(this[ns]["namespace"],attr,this[ns].prefix+_9cc);
}
},getAttr:function(node,ns,attr){
if(dojo.render.html.ie){
return node.getAttribute(this[ns].alias+":"+attr);
}else{
return node.getAttributeNS(this[ns]["namespace"],attr);
}
},removeAttr:function(node,ns,attr){
var _9d3=true;
if(dojo.render.html.ie){
_9d3=node.removeAttribute(this[ns].alias+":"+attr);
}else{
node.removeAttributeNS(this[ns]["namespace"],attr);
}
return _9d3;
}};
dojo.widget.attachTemplateNodes=function(_9d4,_9d5,_9d6){
var _9d7=dojo.dom.ELEMENT_NODE;
function trim(str){
return str.replace(/^\s+|\s+$/g,"");
}
if(!_9d4){
_9d4=_9d5.domNode;
}
if(_9d4.nodeType!=_9d7){
return;
}
var _9d9=_9d4.all||_9d4.getElementsByTagName("*");
var _9da=_9d5;
for(var x=-1;x<_9d9.length;x++){
var _9dc=(x==-1)?_9d4:_9d9[x];
var _9dd=[];
if(!_9d5.widgetsInTemplate||!_9dc.getAttribute("dojoType")){
for(var y=0;y<this.attachProperties.length;y++){
var _9df=_9dc.getAttribute(this.attachProperties[y]);
if(_9df){
_9dd=_9df.split(";");
for(var z=0;z<_9dd.length;z++){
if(dojo.lang.isArray(_9d5[_9dd[z]])){
_9d5[_9dd[z]].push(_9dc);
}else{
_9d5[_9dd[z]]=_9dc;
}
}
break;
}
}
var _9e1=_9dc.getAttribute(this.eventAttachProperty);
if(_9e1){
var evts=_9e1.split(";");
for(var y=0;y<evts.length;y++){
if((!evts[y])||(!evts[y].length)){
continue;
}
var _9e3=null;
var tevt=trim(evts[y]);
if(evts[y].indexOf(":")>=0){
var _9e5=tevt.split(":");
tevt=trim(_9e5[0]);
_9e3=trim(_9e5[1]);
}
if(!_9e3){
_9e3=tevt;
}
var tf=function(){
var ntf=new String(_9e3);
return function(evt){
if(_9da[ntf]){
_9da[ntf](dojo.event.browser.fixEvent(evt,this));
}
};
}();
dojo.event.browser.addListener(_9dc,tevt,tf,false,true);
}
}
for(var y=0;y<_9d6.length;y++){
var _9e9=_9dc.getAttribute(_9d6[y]);
if((_9e9)&&(_9e9.length)){
var _9e3=null;
var _9ea=_9d6[y].substr(4);
_9e3=trim(_9e9);
var _9eb=[_9e3];
if(_9e3.indexOf(";")>=0){
_9eb=dojo.lang.map(_9e3.split(";"),trim);
}
for(var z=0;z<_9eb.length;z++){
if(!_9eb[z].length){
continue;
}
var tf=function(){
var ntf=new String(_9eb[z]);
return function(evt){
if(_9da[ntf]){
_9da[ntf](dojo.event.browser.fixEvent(evt,this));
}
};
}();
dojo.event.browser.addListener(_9dc,_9ea,tf,false,true);
}
}
}
}
var _9ee=_9dc.getAttribute(this.templateProperty);
if(_9ee){
_9d5[_9ee]=_9dc;
}
dojo.lang.forEach(dojo.widget.waiNames,function(name){
var wai=dojo.widget.wai[name];
var val=_9dc.getAttribute(wai.name);
if(val){
if(val.indexOf("-")==-1){
dojo.widget.wai.setAttr(_9dc,wai.name,"role",val);
}else{
var _9f2=val.split("-");
dojo.widget.wai.setAttr(_9dc,wai.name,_9f2[0],_9f2[1]);
}
}
},this);
var _9f3=_9dc.getAttribute(this.onBuildProperty);
if(_9f3){
eval("var node = baseNode; var widget = targetObj; "+_9f3);
}
}
};
dojo.widget.getDojoEventsFromStr=function(str){
var re=/(dojoOn([a-z]+)(\s?))=/gi;
var evts=str?str.match(re)||[]:[];
var ret=[];
var lem={};
for(var x=0;x<evts.length;x++){
if(evts[x].length<1){
continue;
}
var cm=evts[x].replace(/\s/,"");
cm=(cm.slice(0,cm.length-1));
if(!lem[cm]){
lem[cm]=true;
ret.push(cm);
}
}
return ret;
};
dojo.declare("dojo.widget.DomWidget",dojo.widget.Widget,function(){
if((arguments.length>0)&&(typeof arguments[0]=="object")){
this.create(arguments[0]);
}
},{templateNode:null,templateString:null,templateCssString:null,preventClobber:false,domNode:null,containerNode:null,widgetsInTemplate:false,addChild:function(_9fb,_9fc,pos,ref,_9ff){
if(!this.isContainer){
dojo.debug("dojo.widget.DomWidget.addChild() attempted on non-container widget");
return null;
}else{
if(_9ff==undefined){
_9ff=this.children.length;
}
this.addWidgetAsDirectChild(_9fb,_9fc,pos,ref,_9ff);
this.registerChild(_9fb,_9ff);
}
return _9fb;
},addWidgetAsDirectChild:function(_a00,_a01,pos,ref,_a04){
if((!this.containerNode)&&(!_a01)){
this.containerNode=this.domNode;
}
var cn=(_a01)?_a01:this.containerNode;
if(!pos){
pos="after";
}
if(!ref){
if(!cn){
cn=dojo.body();
}
ref=cn.lastChild;
}
if(!_a04){
_a04=0;
}
_a00.domNode.setAttribute("dojoinsertionindex",_a04);
if(!ref){
cn.appendChild(_a00.domNode);
}else{
if(pos=="insertAtIndex"){
dojo.dom.insertAtIndex(_a00.domNode,ref.parentNode,_a04);
}else{
if((pos=="after")&&(ref===cn.lastChild)){
cn.appendChild(_a00.domNode);
}else{
dojo.dom.insertAtPosition(_a00.domNode,cn,pos);
}
}
}
},registerChild:function(_a06,_a07){
_a06.dojoInsertionIndex=_a07;
var idx=-1;
for(var i=0;i<this.children.length;i++){
if(this.children[i].dojoInsertionIndex<=_a07){
idx=i;
}
}
this.children.splice(idx+1,0,_a06);
_a06.parent=this;
_a06.addedTo(this,idx+1);
delete dojo.widget.manager.topWidgets[_a06.widgetId];
},removeChild:function(_a0a){
dojo.dom.removeNode(_a0a.domNode);
return dojo.widget.DomWidget.superclass.removeChild.call(this,_a0a);
},getFragNodeRef:function(frag){
if(!frag){
return null;
}
if(!frag[this.getNamespacedType()]){
dojo.raise("Error: no frag for widget type "+this.getNamespacedType()+", id "+this.widgetId+" (maybe a widget has set it's type incorrectly)");
}
return frag[this.getNamespacedType()]["nodeRef"];
},postInitialize:function(args,frag,_a0e){
var _a0f=this.getFragNodeRef(frag);
if(_a0e&&(_a0e.snarfChildDomOutput||!_a0f)){
_a0e.addWidgetAsDirectChild(this,"","insertAtIndex","",args["dojoinsertionindex"],_a0f);
}else{
if(_a0f){
if(this.domNode&&(this.domNode!==_a0f)){
this._sourceNodeRef=dojo.dom.replaceNode(_a0f,this.domNode);
}
}
}
if(_a0e){
_a0e.registerChild(this,args.dojoinsertionindex);
}else{
dojo.widget.manager.topWidgets[this.widgetId]=this;
}
if(this.widgetsInTemplate){
var _a10=new dojo.xml.Parse();
var _a11;
var _a12=this.domNode.getElementsByTagName("*");
for(var i=0;i<_a12.length;i++){
if(_a12[i].getAttribute("dojoAttachPoint")=="subContainerWidget"){
_a11=_a12[i];
}
if(_a12[i].getAttribute("dojoType")){
_a12[i].setAttribute("isSubWidget",true);
}
}
if(this.isContainer&&!this.containerNode){
if(_a11){
var src=this.getFragNodeRef(frag);
if(src){
dojo.dom.moveChildren(src,_a11);
frag["dojoDontFollow"]=true;
}
}else{
dojo.debug("No subContainerWidget node can be found in template file for widget "+this);
}
}
var _a15=_a10.parseElement(this.domNode,null,true);
dojo.widget.getParser().createSubComponents(_a15,this);
var _a16=[];
var _a17=[this];
var w;
while((w=_a17.pop())){
for(var i=0;i<w.children.length;i++){
var _a19=w.children[i];
if(_a19._processedSubWidgets||!_a19.extraArgs["issubwidget"]){
continue;
}
_a16.push(_a19);
if(_a19.isContainer){
_a17.push(_a19);
}
}
}
for(var i=0;i<_a16.length;i++){
var _a1a=_a16[i];
if(_a1a._processedSubWidgets){
dojo.debug("This should not happen: widget._processedSubWidgets is already true!");
return;
}
_a1a._processedSubWidgets=true;
if(_a1a.extraArgs["dojoattachevent"]){
var evts=_a1a.extraArgs["dojoattachevent"].split(";");
for(var j=0;j<evts.length;j++){
var _a1d=null;
var tevt=dojo.string.trim(evts[j]);
if(tevt.indexOf(":")>=0){
var _a1f=tevt.split(":");
tevt=dojo.string.trim(_a1f[0]);
_a1d=dojo.string.trim(_a1f[1]);
}
if(!_a1d){
_a1d=tevt;
}
if(dojo.lang.isFunction(_a1a[tevt])){
dojo.event.kwConnect({srcObj:_a1a,srcFunc:tevt,targetObj:this,targetFunc:_a1d});
}else{
alert(tevt+" is not a function in widget "+_a1a);
}
}
}
if(_a1a.extraArgs["dojoattachpoint"]){
this[_a1a.extraArgs["dojoattachpoint"]]=_a1a;
}
}
}
if(this.isContainer&&!frag["dojoDontFollow"]){
dojo.widget.getParser().createSubComponents(frag,this);
}
},buildRendering:function(args,frag){
var ts=dojo.widget._templateCache[this.widgetType];
if(args["templatecsspath"]){
args["templateCssPath"]=args["templatecsspath"];
}
var _a23=args["templateCssPath"]||this.templateCssPath;
if(_a23&&!dojo.widget._cssFiles[_a23.toString()]){
if((!this.templateCssString)&&(_a23)){
this.templateCssString=dojo.hostenv.getText(_a23);
this.templateCssPath=null;
}
dojo.widget._cssFiles[_a23.toString()]=true;
}
if((this["templateCssString"])&&(!dojo.widget._cssStrings[this.templateCssString])){
dojo.html.insertCssText(this.templateCssString,null,_a23);
dojo.widget._cssStrings[this.templateCssString]=true;
}
if((!this.preventClobber)&&((this.templatePath)||(this.templateNode)||((this["templateString"])&&(this.templateString.length))||((typeof ts!="undefined")&&((ts["string"])||(ts["node"]))))){
this.buildFromTemplate(args,frag);
}else{
this.domNode=this.getFragNodeRef(frag);
}
this.fillInTemplate(args,frag);
},buildFromTemplate:function(args,frag){
var _a26=false;
if(args["templatepath"]){
args["templatePath"]=args["templatepath"];
}
dojo.widget.fillFromTemplateCache(this,args["templatePath"],null,_a26);
var ts=dojo.widget._templateCache[this.templatePath?this.templatePath.toString():this.widgetType];
if((ts)&&(!_a26)){
if(!this.templateString.length){
this.templateString=ts["string"];
}
if(!this.templateNode){
this.templateNode=ts["node"];
}
}
var _a28=false;
var node=null;
var tstr=this.templateString;
if((!this.templateNode)&&(this.templateString)){
_a28=this.templateString.match(/\$\{([^\}]+)\}/g);
if(_a28){
var hash=this.strings||{};
for(var key in dojo.widget.defaultStrings){
if(dojo.lang.isUndefined(hash[key])){
hash[key]=dojo.widget.defaultStrings[key];
}
}
for(var i=0;i<_a28.length;i++){
var key=_a28[i];
key=key.substring(2,key.length-1);
var kval=(key.substring(0,5)=="this.")?dojo.lang.getObjPathValue(key.substring(5),this):hash[key];
var _a2f;
if((kval)||(dojo.lang.isString(kval))){
_a2f=new String((dojo.lang.isFunction(kval))?kval.call(this,key,this.templateString):kval);
while(_a2f.indexOf("\"")>-1){
_a2f=_a2f.replace("\"","&quot;");
}
tstr=tstr.replace(_a28[i],_a2f);
}
}
}else{
this.templateNode=this.createNodesFromText(this.templateString,true)[0];
if(!_a26){
ts.node=this.templateNode;
}
}
}
if((!this.templateNode)&&(!_a28)){
dojo.debug("DomWidget.buildFromTemplate: could not create template");
return false;
}else{
if(!_a28){
node=this.templateNode.cloneNode(true);
if(!node){
return false;
}
}else{
node=this.createNodesFromText(tstr,true)[0];
}
}
this.domNode=node;
this.attachTemplateNodes();
if(this.isContainer&&this.containerNode){
var src=this.getFragNodeRef(frag);
if(src){
dojo.dom.moveChildren(src,this.containerNode);
}
}
},attachTemplateNodes:function(_a31,_a32){
if(!_a31){
_a31=this.domNode;
}
if(!_a32){
_a32=this;
}
return dojo.widget.attachTemplateNodes(_a31,_a32,dojo.widget.getDojoEventsFromStr(this.templateString));
},fillInTemplate:function(){
},destroyRendering:function(){
try{
dojo.dom.destroyNode(this.domNode);
delete this.domNode;
}
catch(e){
}
if(this._sourceNodeRef){
try{
dojo.dom.destroyNode(this._sourceNodeRef);
}
catch(e){
}
}
},createNodesFromText:function(){
dojo.unimplemented("dojo.widget.DomWidget.createNodesFromText");
}});
dojo.provide("dojo.lfx.toggle");
dojo.lfx.toggle.plain={show:function(node,_a34,_a35,_a36){
dojo.html.show(node);
if(dojo.lang.isFunction(_a36)){
_a36();
}
},hide:function(node,_a38,_a39,_a3a){
dojo.html.hide(node);
if(dojo.lang.isFunction(_a3a)){
_a3a();
}
}};
dojo.lfx.toggle.fade={show:function(node,_a3c,_a3d,_a3e){
dojo.lfx.fadeShow(node,_a3c,_a3d,_a3e).play();
},hide:function(node,_a40,_a41,_a42){
dojo.lfx.fadeHide(node,_a40,_a41,_a42).play();
}};
dojo.lfx.toggle.wipe={show:function(node,_a44,_a45,_a46){
dojo.lfx.wipeIn(node,_a44,_a45,_a46).play();
},hide:function(node,_a48,_a49,_a4a){
dojo.lfx.wipeOut(node,_a48,_a49,_a4a).play();
}};
dojo.lfx.toggle.explode={show:function(node,_a4c,_a4d,_a4e,_a4f){
dojo.lfx.explode(_a4f||{x:0,y:0,width:0,height:0},node,_a4c,_a4d,_a4e).play();
},hide:function(node,_a51,_a52,_a53,_a54){
dojo.lfx.implode(node,_a54||{x:0,y:0,width:0,height:0},_a51,_a52,_a53).play();
}};
dojo.provide("dojo.widget.HtmlWidget");
dojo.declare("dojo.widget.HtmlWidget",dojo.widget.DomWidget,{templateCssPath:null,templatePath:null,lang:"",toggle:"plain",toggleDuration:150,initialize:function(args,frag){
},postMixInProperties:function(args,frag){
if(this.lang===""){
this.lang=null;
}
this.toggleObj=dojo.lfx.toggle[this.toggle.toLowerCase()]||dojo.lfx.toggle.plain;
},createNodesFromText:function(txt,wrap){
return dojo.html.createNodesFromText(txt,wrap);
},destroyRendering:function(_a5b){
try{
if(this.bgIframe){
this.bgIframe.remove();
delete this.bgIframe;
}
if(!_a5b&&this.domNode){
dojo.event.browser.clean(this.domNode);
}
dojo.widget.HtmlWidget.superclass.destroyRendering.call(this);
}
catch(e){
}
},isShowing:function(){
return dojo.html.isShowing(this.domNode);
},toggleShowing:function(){
if(this.isShowing()){
this.hide();
}else{
this.show();
}
},show:function(){
if(this.isShowing()){
return;
}
this.animationInProgress=true;
this.toggleObj.show(this.domNode,this.toggleDuration,null,dojo.lang.hitch(this,this.onShow),this.explodeSrc);
},onShow:function(){
this.animationInProgress=false;
this.checkSize();
},hide:function(){
if(!this.isShowing()){
return;
}
this.animationInProgress=true;
this.toggleObj.hide(this.domNode,this.toggleDuration,null,dojo.lang.hitch(this,this.onHide),this.explodeSrc);
},onHide:function(){
this.animationInProgress=false;
},_isResized:function(w,h){
if(!this.isShowing()){
return false;
}
var wh=dojo.html.getMarginBox(this.domNode);
var _a5f=w||wh.width;
var _a60=h||wh.height;
if(this.width==_a5f&&this.height==_a60){
return false;
}
this.width=_a5f;
this.height=_a60;
return true;
},checkSize:function(){
if(!this._isResized()){
return;
}
this.onResized();
},resizeTo:function(w,h){
dojo.html.setMarginBox(this.domNode,{width:w,height:h});
if(this.isShowing()){
this.onResized();
}
},resizeSoon:function(){
if(this.isShowing()){
dojo.lang.setTimeout(this,this.onResized,0);
}
},onResized:function(){
dojo.lang.forEach(this.children,function(_a63){
if(_a63.checkSize){
_a63.checkSize();
}
});
}});
dojo.provide("dojo.widget.*");
dojo.provide("dojo.math");
dojo.math.degToRad=function(x){
return (x*Math.PI)/180;
};
dojo.math.radToDeg=function(x){
return (x*180)/Math.PI;
};
dojo.math.factorial=function(n){
if(n<1){
return 0;
}
var _a67=1;
for(var i=1;i<=n;i++){
_a67*=i;
}
return _a67;
};
dojo.math.permutations=function(n,k){
if(n==0||k==0){
return 1;
}
return (dojo.math.factorial(n)/dojo.math.factorial(n-k));
};
dojo.math.combinations=function(n,r){
if(n==0||r==0){
return 1;
}
return (dojo.math.factorial(n)/(dojo.math.factorial(n-r)*dojo.math.factorial(r)));
};
dojo.math.bernstein=function(t,n,i){
return (dojo.math.combinations(n,i)*Math.pow(t,i)*Math.pow(1-t,n-i));
};
dojo.math.gaussianRandom=function(){
var k=2;
do{
var i=2*Math.random()-1;
var j=2*Math.random()-1;
k=i*i+j*j;
}while(k>=1);
k=Math.sqrt((-2*Math.log(k))/k);
return i*k;
};
dojo.math.mean=function(){
var _a73=dojo.lang.isArray(arguments[0])?arguments[0]:arguments;
var mean=0;
for(var i=0;i<_a73.length;i++){
mean+=_a73[i];
}
return mean/_a73.length;
};
dojo.math.round=function(_a76,_a77){
if(!_a77){
var _a78=1;
}else{
var _a78=Math.pow(10,_a77);
}
return Math.round(_a76*_a78)/_a78;
};
dojo.math.sd=dojo.math.standardDeviation=function(){
var _a79=dojo.lang.isArray(arguments[0])?arguments[0]:arguments;
return Math.sqrt(dojo.math.variance(_a79));
};
dojo.math.variance=function(){
var _a7a=dojo.lang.isArray(arguments[0])?arguments[0]:arguments;
var mean=0,_a7c=0;
for(var i=0;i<_a7a.length;i++){
mean+=_a7a[i];
_a7c+=Math.pow(_a7a[i],2);
}
return (_a7c/_a7a.length)-Math.pow(mean/_a7a.length,2);
};
dojo.math.range=function(a,b,step){
if(arguments.length<2){
b=a;
a=0;
}
if(arguments.length<3){
step=1;
}
var _a81=[];
if(step>0){
for(var i=a;i<b;i+=step){
_a81.push(i);
}
}else{
if(step<0){
for(var i=a;i>b;i+=step){
_a81.push(i);
}
}else{
throw new Error("dojo.math.range: step must be non-zero");
}
}
return _a81;
};
dojo.provide("dojo.math.curves");
dojo.math.curves={Line:function(_a83,end){
this.start=_a83;
this.end=end;
this.dimensions=_a83.length;
for(var i=0;i<_a83.length;i++){
_a83[i]=Number(_a83[i]);
}
for(var i=0;i<end.length;i++){
end[i]=Number(end[i]);
}
this.getValue=function(n){
var _a87=new Array(this.dimensions);
for(var i=0;i<this.dimensions;i++){
_a87[i]=((this.end[i]-this.start[i])*n)+this.start[i];
}
return _a87;
};
return this;
},Bezier:function(pnts){
this.getValue=function(step){
if(step>=1){
return this.p[this.p.length-1];
}
if(step<=0){
return this.p[0];
}
var _a8b=new Array(this.p[0].length);
for(var k=0;j<this.p[0].length;k++){
_a8b[k]=0;
}
for(var j=0;j<this.p[0].length;j++){
var C=0;
var D=0;
for(var i=0;i<this.p.length;i++){
C+=this.p[i][j]*this.p[this.p.length-1][0]*dojo.math.bernstein(step,this.p.length,i);
}
for(var l=0;l<this.p.length;l++){
D+=this.p[this.p.length-1][0]*dojo.math.bernstein(step,this.p.length,l);
}
_a8b[j]=C/D;
}
return _a8b;
};
this.p=pnts;
return this;
},CatmullRom:function(pnts,c){
this.getValue=function(step){
var _a95=step*(this.p.length-1);
var node=Math.floor(_a95);
var _a97=_a95-node;
var i0=node-1;
if(i0<0){
i0=0;
}
var i=node;
var i1=node+1;
if(i1>=this.p.length){
i1=this.p.length-1;
}
var i2=node+2;
if(i2>=this.p.length){
i2=this.p.length-1;
}
var u=_a97;
var u2=_a97*_a97;
var u3=_a97*_a97*_a97;
var _a9f=new Array(this.p[0].length);
for(var k=0;k<this.p[0].length;k++){
var x1=(-this.c*this.p[i0][k])+((2-this.c)*this.p[i][k])+((this.c-2)*this.p[i1][k])+(this.c*this.p[i2][k]);
var x2=(2*this.c*this.p[i0][k])+((this.c-3)*this.p[i][k])+((3-2*this.c)*this.p[i1][k])+(-this.c*this.p[i2][k]);
var x3=(-this.c*this.p[i0][k])+(this.c*this.p[i1][k]);
var x4=this.p[i][k];
_a9f[k]=x1*u3+x2*u2+x3*u+x4;
}
return _a9f;
};
if(!c){
this.c=0.7;
}else{
this.c=c;
}
this.p=pnts;
return this;
},Arc:function(_aa5,end,ccw){
var _aa8=dojo.math.points.midpoint(_aa5,end);
var _aa9=dojo.math.points.translate(dojo.math.points.invert(_aa8),_aa5);
var rad=Math.sqrt(Math.pow(_aa9[0],2)+Math.pow(_aa9[1],2));
var _aab=dojo.math.radToDeg(Math.atan(_aa9[1]/_aa9[0]));
if(_aa9[0]<0){
_aab-=90;
}else{
_aab+=90;
}
dojo.math.curves.CenteredArc.call(this,_aa8,rad,_aab,_aab+(ccw?-180:180));
},CenteredArc:function(_aac,_aad,_aae,end){
this.center=_aac;
this.radius=_aad;
this.start=_aae||0;
this.end=end;
this.getValue=function(n){
var _ab1=new Array(2);
var _ab2=dojo.math.degToRad(this.start+((this.end-this.start)*n));
_ab1[0]=this.center[0]+this.radius*Math.sin(_ab2);
_ab1[1]=this.center[1]-this.radius*Math.cos(_ab2);
return _ab1;
};
return this;
},Circle:function(_ab3,_ab4){
dojo.math.curves.CenteredArc.call(this,_ab3,_ab4,0,360);
return this;
},Path:function(){
var _ab5=[];
var _ab6=[];
var _ab7=[];
var _ab8=0;
this.add=function(_ab9,_aba){
if(_aba<0){
dojo.raise("dojo.math.curves.Path.add: weight cannot be less than 0");
}
_ab5.push(_ab9);
_ab6.push(_aba);
_ab8+=_aba;
computeRanges();
};
this.remove=function(_abb){
for(var i=0;i<_ab5.length;i++){
if(_ab5[i]==_abb){
_ab5.splice(i,1);
_ab8-=_ab6.splice(i,1)[0];
break;
}
}
computeRanges();
};
this.removeAll=function(){
_ab5=[];
_ab6=[];
_ab8=0;
};
this.getValue=function(n){
var _abe=false,_abf=0;
for(var i=0;i<_ab7.length;i++){
var r=_ab7[i];
if(n>=r[0]&&n<r[1]){
var subN=(n-r[0])/r[2];
_abf=_ab5[i].getValue(subN);
_abe=true;
break;
}
}
if(!_abe){
_abf=_ab5[_ab5.length-1].getValue(1);
}
for(var j=0;j<i;j++){
_abf=dojo.math.points.translate(_abf,_ab5[j].getValue(1));
}
return _abf;
};
function computeRanges(){
var _ac4=0;
for(var i=0;i<_ab6.length;i++){
var end=_ac4+_ab6[i]/_ab8;
var len=end-_ac4;
_ab7[i]=[_ac4,end,len];
_ac4=end;
}
}
return this;
}};
dojo.provide("dojo.math.points");
dojo.math.points={translate:function(a,b){
if(a.length!=b.length){
dojo.raise("dojo.math.translate: points not same size (a:["+a+"], b:["+b+"])");
}
var c=new Array(a.length);
for(var i=0;i<a.length;i++){
c[i]=a[i]+b[i];
}
return c;
},midpoint:function(a,b){
if(a.length!=b.length){
dojo.raise("dojo.math.midpoint: points not same size (a:["+a+"], b:["+b+"])");
}
var c=new Array(a.length);
for(var i=0;i<a.length;i++){
c[i]=(a[i]+b[i])/2;
}
return c;
},invert:function(a){
var b=new Array(a.length);
for(var i=0;i<a.length;i++){
b[i]=-a[i];
}
return b;
},distance:function(a,b){
return Math.sqrt(Math.pow(b[0]-a[0],2)+Math.pow(b[1]-a[1],2));
}};
dojo.provide("dojo.math.*");


__CPAN_EDITION__ kitchen_sink build.txt

Files baked into this package:

dojoGuardStart.js,
../src/bootstrap1.js,
../src/loader.js,
dojoGuardEnd.js,
../src/hostenv_browser.js,
../src/bootstrap2.js,
../src/lang/common.js,
../src/lang.js,
../src/dom.js,
../src/html/common.js,
../src/uri/Uri.js,
../src/html/style.js,
../src/html/__package__.js,
../src/html/display.js,
../src/html/layout.js,
../src/html/util.js,
../src/lang/array.js,
../src/gfx/color.js,
../src/lang/func.js,
../src/lfx/Animation.js,
../src/html/color.js,
../src/lfx/html.js,
../src/lfx/__package__.js,
../src/lang/extras.js,
../src/event/common.js,
../src/event/topic.js,
../src/event/browser.js,
../src/event/__package__.js,
../src/lang/declare.js,
../src/logging/Logger.js,
../src/logging/__package__.js,
../src/string/common.js,
../src/string.js,
../src/io/common.js,
../src/string/extras.js,
../src/undo/browser.js,
../src/io/BrowserIO.js,
../src/io/cookie.js,
../src/io/__package__.js,
../src/uri/__package__.js,
../src/io/IframeIO.js,
../src/date.js,
../src/string/Builder.js,
../src/string/__package__.js,
../__package__.js,
../src/AdapterRegistry.js,
../src/json.js,
../src/Deferred.js,
../src/rpc/RpcService.js,
../src/rpc/JsonService.js,
../src/rpc/__package__.js,
../src/xml/Parse.js,
../src/xml/__package__.js,
../src/undo/Manager.js,
../src/undo/__package__.js,
../src/crypto.js,
../src/crypto/MD5.js,
../src/crypto/__package__.js,
../src/collections/Collections.js,
../src/collections/ArrayList.js,
../src/collections/Queue.js,
../src/collections/Stack.js,
../src/dnd/DragAndDrop.js,
../src/dnd/HtmlDragManager.js,
../src/html/selection.js,
../src/html/iframe.js,
../src/dnd/HtmlDragAndDrop.js,
../src/dnd/__package__.js,
../src/ns.js,
../src/widget/Manager.js,
../src/a11y.js,
../src/widget/Widget.js,
../src/widget/Parse.js,
../src/widget/DomWidget.js,
../src/lfx/toggle.js,
../src/widget/HtmlWidget.js,
../src/widget/__package__.js,
../src/math.js,
../src/math/curves.js,
../src/math/points.js,
../src/math/__package__.js

		
__CPAN_EDITION__ lfx dojo.js
/*
	Copyright (c) 2004-2006, The Dojo Foundation
	All Rights Reserved.

	Licensed under the Academic Free License version 2.1 or above OR the
	modified BSD license. For more information on Dojo licensing, see:

		http://dojotoolkit.org/community/licensing.shtml
*/

/*
	This is a compiled version of Dojo, built for deployment and not for
	development. To get an editable version, please visit:

		http://dojotoolkit.org

	for documentation and information on getting the source.
*/

if(typeof dojo=="undefined"){
var dj_global=this;
var dj_currentContext=this;
function dj_undef(_1,_2){
return (typeof (_2||dj_currentContext)[_1]=="undefined");
}
if(dj_undef("djConfig",this)){
var djConfig={};
}
if(dj_undef("dojo",this)){
var dojo={};
}
dojo.global=function(){
return dj_currentContext;
};
dojo.locale=djConfig.locale;
dojo.version={major:0,minor:4,patch:1,flag:"",revision:Number("$Rev: 6824 $".match(/[0-9]+/)[0]),toString:function(){
with(dojo.version){
return major+"."+minor+"."+patch+flag+" ("+revision+")";
}
}};
dojo.evalProp=function(_3,_4,_5){
if((!_4)||(!_3)){
return undefined;
}
if(!dj_undef(_3,_4)){
return _4[_3];
}
return (_5?(_4[_3]={}):undefined);
};
dojo.parseObjPath=function(_6,_7,_8){
var _9=(_7||dojo.global());
var _a=_6.split(".");
var _b=_a.pop();
for(var i=0,l=_a.length;i<l&&_9;i++){
_9=dojo.evalProp(_a[i],_9,_8);
}
return {obj:_9,prop:_b};
};
dojo.evalObjPath=function(_e,_f){
if(typeof _e!="string"){
return dojo.global();
}
if(_e.indexOf(".")==-1){
return dojo.evalProp(_e,dojo.global(),_f);
}
var ref=dojo.parseObjPath(_e,dojo.global(),_f);
if(ref){
return dojo.evalProp(ref.prop,ref.obj,_f);
}
return null;
};
dojo.errorToString=function(_11){
if(!dj_undef("message",_11)){
return _11.message;
}else{
if(!dj_undef("description",_11)){
return _11.description;
}else{
return _11;
}
}
};
dojo.raise=function(_12,_13){
if(_13){
_12=_12+": "+dojo.errorToString(_13);
}else{
_12=dojo.errorToString(_12);
}
try{
if(djConfig.isDebug){
dojo.hostenv.println("FATAL exception raised: "+_12);
}
}
catch(e){
}
throw _13||Error(_12);
};
dojo.debug=function(){
};
dojo.debugShallow=function(obj){
};
dojo.profile={start:function(){
},end:function(){
},stop:function(){
},dump:function(){
}};
function dj_eval(_15){
return dj_global.eval?dj_global.eval(_15):eval(_15);
}
dojo.unimplemented=function(_16,_17){
var _18="'"+_16+"' not implemented";
if(_17!=null){
_18+=" "+_17;
}
dojo.raise(_18);
};
dojo.deprecated=function(_19,_1a,_1b){
var _1c="DEPRECATED: "+_19;
if(_1a){
_1c+=" "+_1a;
}
if(_1b){
_1c+=" -- will be removed in version: "+_1b;
}
dojo.debug(_1c);
};
dojo.render=(function(){
function vscaffold(_1d,_1e){
var tmp={capable:false,support:{builtin:false,plugin:false},prefixes:_1d};
for(var i=0;i<_1e.length;i++){
tmp[_1e[i]]=false;
}
return tmp;
}
return {name:"",ver:dojo.version,os:{win:false,linux:false,osx:false},html:vscaffold(["html"],["ie","opera","khtml","safari","moz"]),svg:vscaffold(["svg"],["corel","adobe","batik"]),vml:vscaffold(["vml"],["ie"]),swf:vscaffold(["Swf","Flash","Mm"],["mm"]),swt:vscaffold(["Swt"],["ibm"])};
})();
dojo.hostenv=(function(){
var _21={isDebug:false,allowQueryConfig:false,baseScriptUri:"",baseRelativePath:"",libraryScriptUri:"",iePreventClobber:false,ieClobberMinimal:true,preventBackButtonFix:true,delayMozLoadingFix:false,searchIds:[],parseWidgets:true};
if(typeof djConfig=="undefined"){
djConfig=_21;
}else{
for(var _22 in _21){
if(typeof djConfig[_22]=="undefined"){
djConfig[_22]=_21[_22];
}
}
}
return {name_:"(unset)",version_:"(unset)",getName:function(){
return this.name_;
},getVersion:function(){
return this.version_;
},getText:function(uri){
dojo.unimplemented("getText","uri="+uri);
}};
})();
dojo.hostenv.getBaseScriptUri=function(){
if(djConfig.baseScriptUri.length){
return djConfig.baseScriptUri;
}
var uri=new String(djConfig.libraryScriptUri||djConfig.baseRelativePath);
if(!uri){
dojo.raise("Nothing returned by getLibraryScriptUri(): "+uri);
}
var _25=uri.lastIndexOf("/");
djConfig.baseScriptUri=djConfig.baseRelativePath;
return djConfig.baseScriptUri;
};
(function(){
var _26={pkgFileName:"__package__",loading_modules_:{},loaded_modules_:{},addedToLoadingCount:[],removedFromLoadingCount:[],inFlightCount:0,modulePrefixes_:{dojo:{name:"dojo",value:"src"}},setModulePrefix:function(_27,_28){
this.modulePrefixes_[_27]={name:_27,value:_28};
},moduleHasPrefix:function(_29){
var mp=this.modulePrefixes_;
return Boolean(mp[_29]&&mp[_29].value);
},getModulePrefix:function(_2b){
if(this.moduleHasPrefix(_2b)){
return this.modulePrefixes_[_2b].value;
}
return _2b;
},getTextStack:[],loadUriStack:[],loadedUris:[],post_load_:false,modulesLoadedListeners:[],unloadListeners:[],loadNotifying:false};
for(var _2c in _26){
dojo.hostenv[_2c]=_26[_2c];
}
})();
dojo.hostenv.loadPath=function(_2d,_2e,cb){
var uri;
if(_2d.charAt(0)=="/"||_2d.match(/^\w+:/)){
uri=_2d;
}else{
uri=this.getBaseScriptUri()+_2d;
}
if(djConfig.cacheBust&&dojo.render.html.capable){
uri+="?"+String(djConfig.cacheBust).replace(/\W+/g,"");
}
try{
return !_2e?this.loadUri(uri,cb):this.loadUriAndCheck(uri,_2e,cb);
}
catch(e){
dojo.debug(e);
return false;
}
};
dojo.hostenv.loadUri=function(uri,cb){
if(this.loadedUris[uri]){
return true;
}
var _33=this.getText(uri,null,true);
if(!_33){
return false;
}
this.loadedUris[uri]=true;
if(cb){
_33="("+_33+")";
}
var _34=dj_eval(_33);
if(cb){
cb(_34);
}
return true;
};
dojo.hostenv.loadUriAndCheck=function(uri,_36,cb){
var ok=true;
try{
ok=this.loadUri(uri,cb);
}
catch(e){
dojo.debug("failed loading ",uri," with error: ",e);
}
return Boolean(ok&&this.findModule(_36,false));
};
dojo.loaded=function(){
};
dojo.unloaded=function(){
};
dojo.hostenv.loaded=function(){
this.loadNotifying=true;
this.post_load_=true;
var mll=this.modulesLoadedListeners;
for(var x=0;x<mll.length;x++){
mll[x]();
}
this.modulesLoadedListeners=[];
this.loadNotifying=false;
dojo.loaded();
};
dojo.hostenv.unloaded=function(){
var mll=this.unloadListeners;
while(mll.length){
(mll.pop())();
}
dojo.unloaded();
};
dojo.addOnLoad=function(obj,_3d){
var dh=dojo.hostenv;
if(arguments.length==1){
dh.modulesLoadedListeners.push(obj);
}else{
if(arguments.length>1){
dh.modulesLoadedListeners.push(function(){
obj[_3d]();
});
}
}
if(dh.post_load_&&dh.inFlightCount==0&&!dh.loadNotifying){
dh.callLoaded();
}
};
dojo.addOnUnload=function(obj,_40){
var dh=dojo.hostenv;
if(arguments.length==1){
dh.unloadListeners.push(obj);
}else{
if(arguments.length>1){
dh.unloadListeners.push(function(){
obj[_40]();
});
}
}
};
dojo.hostenv.modulesLoaded=function(){
if(this.post_load_){
return;
}
if(this.loadUriStack.length==0&&this.getTextStack.length==0){
if(this.inFlightCount>0){
dojo.debug("files still in flight!");
return;
}
dojo.hostenv.callLoaded();
}
};
dojo.hostenv.callLoaded=function(){
if(typeof setTimeout=="object"){
setTimeout("dojo.hostenv.loaded();",0);
}else{
dojo.hostenv.loaded();
}
};
dojo.hostenv.getModuleSymbols=function(_42){
var _43=_42.split(".");
for(var i=_43.length;i>0;i--){
var _45=_43.slice(0,i).join(".");
if((i==1)&&!this.moduleHasPrefix(_45)){
_43[0]="../"+_43[0];
}else{
var _46=this.getModulePrefix(_45);
if(_46!=_45){
_43.splice(0,i,_46);
break;
}
}
}
return _43;
};
dojo.hostenv._global_omit_module_check=false;
dojo.hostenv.loadModule=function(_47,_48,_49){
if(!_47){
return;
}
_49=this._global_omit_module_check||_49;
var _4a=this.findModule(_47,false);
if(_4a){
return _4a;
}
if(dj_undef(_47,this.loading_modules_)){
this.addedToLoadingCount.push(_47);
}
this.loading_modules_[_47]=1;
var _4b=_47.replace(/\./g,"/")+".js";
var _4c=_47.split(".");
var _4d=this.getModuleSymbols(_47);
var _4e=((_4d[0].charAt(0)!="/")&&!_4d[0].match(/^\w+:/));
var _4f=_4d[_4d.length-1];
var ok;
if(_4f=="*"){
_47=_4c.slice(0,-1).join(".");
while(_4d.length){
_4d.pop();
_4d.push(this.pkgFileName);
_4b=_4d.join("/")+".js";
if(_4e&&_4b.charAt(0)=="/"){
_4b=_4b.slice(1);
}
ok=this.loadPath(_4b,!_49?_47:null);
if(ok){
break;
}
_4d.pop();
}
}else{
_4b=_4d.join("/")+".js";
_47=_4c.join(".");
var _51=!_49?_47:null;
ok=this.loadPath(_4b,_51);
if(!ok&&!_48){
_4d.pop();
while(_4d.length){
_4b=_4d.join("/")+".js";
ok=this.loadPath(_4b,_51);
if(ok){
break;
}
_4d.pop();
_4b=_4d.join("/")+"/"+this.pkgFileName+".js";
if(_4e&&_4b.charAt(0)=="/"){
_4b=_4b.slice(1);
}
ok=this.loadPath(_4b,_51);
if(ok){
break;
}
}
}
if(!ok&&!_49){
dojo.raise("Could not load '"+_47+"'; last tried '"+_4b+"'");
}
}
if(!_49&&!this["isXDomain"]){
_4a=this.findModule(_47,false);
if(!_4a){
dojo.raise("symbol '"+_47+"' is not defined after loading '"+_4b+"'");
}
}
return _4a;
};
dojo.hostenv.startPackage=function(_52){
var _53=String(_52);
var _54=_53;
var _55=_52.split(/\./);
if(_55[_55.length-1]=="*"){
_55.pop();
_54=_55.join(".");
}
var _56=dojo.evalObjPath(_54,true);
this.loaded_modules_[_53]=_56;
this.loaded_modules_[_54]=_56;
return _56;
};
dojo.hostenv.findModule=function(_57,_58){
var lmn=String(_57);
if(this.loaded_modules_[lmn]){
return this.loaded_modules_[lmn];
}
if(_58){
dojo.raise("no loaded module named '"+_57+"'");
}
return null;
};
dojo.kwCompoundRequire=function(_5a){
var _5b=_5a["common"]||[];
var _5c=_5a[dojo.hostenv.name_]?_5b.concat(_5a[dojo.hostenv.name_]||[]):_5b.concat(_5a["default"]||[]);
for(var x=0;x<_5c.length;x++){
var _5e=_5c[x];
if(_5e.constructor==Array){
dojo.hostenv.loadModule.apply(dojo.hostenv,_5e);
}else{
dojo.hostenv.loadModule(_5e);
}
}
};
dojo.require=function(_5f){
dojo.hostenv.loadModule.apply(dojo.hostenv,arguments);
};
dojo.requireIf=function(_60,_61){
var _62=arguments[0];
if((_62===true)||(_62=="common")||(_62&&dojo.render[_62].capable)){
var _63=[];
for(var i=1;i<arguments.length;i++){
_63.push(arguments[i]);
}
dojo.require.apply(dojo,_63);
}
};
dojo.requireAfterIf=dojo.requireIf;
dojo.provide=function(_65){
return dojo.hostenv.startPackage.apply(dojo.hostenv,arguments);
};
dojo.registerModulePath=function(_66,_67){
return dojo.hostenv.setModulePrefix(_66,_67);
};
dojo.setModulePrefix=function(_68,_69){
dojo.deprecated("dojo.setModulePrefix(\""+_68+"\", \""+_69+"\")","replaced by dojo.registerModulePath","0.5");
return dojo.registerModulePath(_68,_69);
};
dojo.exists=function(obj,_6b){
var p=_6b.split(".");
for(var i=0;i<p.length;i++){
if(!obj[p[i]]){
return false;
}
obj=obj[p[i]];
}
return true;
};
dojo.hostenv.normalizeLocale=function(_6e){
var _6f=_6e?_6e.toLowerCase():dojo.locale;
if(_6f=="root"){
_6f="ROOT";
}
return _6f;
};
dojo.hostenv.searchLocalePath=function(_70,_71,_72){
_70=dojo.hostenv.normalizeLocale(_70);
var _73=_70.split("-");
var _74=[];
for(var i=_73.length;i>0;i--){
_74.push(_73.slice(0,i).join("-"));
}
_74.push(false);
if(_71){
_74.reverse();
}
for(var j=_74.length-1;j>=0;j--){
var loc=_74[j]||"ROOT";
var _78=_72(loc);
if(_78){
break;
}
}
};
dojo.hostenv.localesGenerated;
dojo.hostenv.registerNlsPrefix=function(){
dojo.registerModulePath("nls","nls");
};
dojo.hostenv.preloadLocalizations=function(){
if(dojo.hostenv.localesGenerated){
dojo.hostenv.registerNlsPrefix();
function preload(_79){
_79=dojo.hostenv.normalizeLocale(_79);
dojo.hostenv.searchLocalePath(_79,true,function(loc){
for(var i=0;i<dojo.hostenv.localesGenerated.length;i++){
if(dojo.hostenv.localesGenerated[i]==loc){
dojo["require"]("nls.dojo_"+loc);
return true;
}
}
return false;
});
}
preload();
var _7c=djConfig.extraLocale||[];
for(var i=0;i<_7c.length;i++){
preload(_7c[i]);
}
}
dojo.hostenv.preloadLocalizations=function(){
};
};
dojo.requireLocalization=function(_7e,_7f,_80,_81){
dojo.hostenv.preloadLocalizations();
var _82=dojo.hostenv.normalizeLocale(_80);
var _83=[_7e,"nls",_7f].join(".");
var _84="";
if(_81){
var _85=_81.split(",");
for(var i=0;i<_85.length;i++){
if(_82.indexOf(_85[i])==0){
if(_85[i].length>_84.length){
_84=_85[i];
}
}
}
if(!_84){
_84="ROOT";
}
}
var _87=_81?_84:_82;
var _88=dojo.hostenv.findModule(_83);
var _89=null;
if(_88){
if(djConfig.localizationComplete&&_88._built){
return;
}
var _8a=_87.replace("-","_");
var _8b=_83+"."+_8a;
_89=dojo.hostenv.findModule(_8b);
}
if(!_89){
_88=dojo.hostenv.startPackage(_83);
var _8c=dojo.hostenv.getModuleSymbols(_7e);
var _8d=_8c.concat("nls").join("/");
var _8e;
dojo.hostenv.searchLocalePath(_87,_81,function(loc){
var _90=loc.replace("-","_");
var _91=_83+"."+_90;
var _92=false;
if(!dojo.hostenv.findModule(_91)){
dojo.hostenv.startPackage(_91);
var _93=[_8d];
if(loc!="ROOT"){
_93.push(loc);
}
_93.push(_7f);
var _94=_93.join("/")+".js";
_92=dojo.hostenv.loadPath(_94,null,function(_95){
var _96=function(){
};
_96.prototype=_8e;
_88[_90]=new _96();
for(var j in _95){
_88[_90][j]=_95[j];
}
});
}else{
_92=true;
}
if(_92&&_88[_90]){
_8e=_88[_90];
}else{
_88[_90]=_8e;
}
if(_81){
return true;
}
});
}
if(_81&&_82!=_84){
_88[_82.replace("-","_")]=_88[_84.replace("-","_")];
}
};
(function(){
var _98=djConfig.extraLocale;
if(_98){
if(!_98 instanceof Array){
_98=[_98];
}
var req=dojo.requireLocalization;
dojo.requireLocalization=function(m,b,_9c,_9d){
req(m,b,_9c,_9d);
if(_9c){
return;
}
for(var i=0;i<_98.length;i++){
req(m,b,_98[i],_9d);
}
};
}
})();
}
if(typeof window!="undefined"){
(function(){
if(djConfig.allowQueryConfig){
var _9f=document.location.toString();
var _a0=_9f.split("?",2);
if(_a0.length>1){
var _a1=_a0[1];
var _a2=_a1.split("&");
for(var x in _a2){
var sp=_a2[x].split("=");
if((sp[0].length>9)&&(sp[0].substr(0,9)=="djConfig.")){
var opt=sp[0].substr(9);
try{
djConfig[opt]=eval(sp[1]);
}
catch(e){
djConfig[opt]=sp[1];
}
}
}
}
}
if(((djConfig["baseScriptUri"]=="")||(djConfig["baseRelativePath"]==""))&&(document&&document.getElementsByTagName)){
var _a6=document.getElementsByTagName("script");
var _a7=/(__package__|dojo|bootstrap1)\.js([\?\.]|$)/i;
for(var i=0;i<_a6.length;i++){
var src=_a6[i].getAttribute("src");
if(!src){
continue;
}
var m=src.match(_a7);
if(m){
var _ab=src.substring(0,m.index);
if(src.indexOf("bootstrap1")>-1){
_ab+="../";
}
if(!this["djConfig"]){
djConfig={};
}
if(djConfig["baseScriptUri"]==""){
djConfig["baseScriptUri"]=_ab;
}
if(djConfig["baseRelativePath"]==""){
djConfig["baseRelativePath"]=_ab;
}
break;
}
}
}
var dr=dojo.render;
var drh=dojo.render.html;
var drs=dojo.render.svg;
var dua=(drh.UA=navigator.userAgent);
var dav=(drh.AV=navigator.appVersion);
var t=true;
var f=false;
drh.capable=t;
drh.support.builtin=t;
dr.ver=parseFloat(drh.AV);
dr.os.mac=dav.indexOf("Macintosh")>=0;
dr.os.win=dav.indexOf("Windows")>=0;
dr.os.linux=dav.indexOf("X11")>=0;
drh.opera=dua.indexOf("Opera")>=0;
drh.khtml=(dav.indexOf("Konqueror")>=0)||(dav.indexOf("Safari")>=0);
drh.safari=dav.indexOf("Safari")>=0;
var _b3=dua.indexOf("Gecko");
drh.mozilla=drh.moz=(_b3>=0)&&(!drh.khtml);
if(drh.mozilla){
drh.geckoVersion=dua.substring(_b3+6,_b3+14);
}
drh.ie=(document.all)&&(!drh.opera);
drh.ie50=drh.ie&&dav.indexOf("MSIE 5.0")>=0;
drh.ie55=drh.ie&&dav.indexOf("MSIE 5.5")>=0;
drh.ie60=drh.ie&&dav.indexOf("MSIE 6.0")>=0;
drh.ie70=drh.ie&&dav.indexOf("MSIE 7.0")>=0;
var cm=document["compatMode"];
drh.quirks=(cm=="BackCompat")||(cm=="QuirksMode")||drh.ie55||drh.ie50;
dojo.locale=dojo.locale||(drh.ie?navigator.userLanguage:navigator.language).toLowerCase();
dr.vml.capable=drh.ie;
drs.capable=f;
drs.support.plugin=f;
drs.support.builtin=f;
var _b5=window["document"];
var tdi=_b5["implementation"];
if((tdi)&&(tdi["hasFeature"])&&(tdi.hasFeature("org.w3c.dom.svg","1.0"))){
drs.capable=t;
drs.support.builtin=t;
drs.support.plugin=f;
}
if(drh.safari){
var tmp=dua.split("AppleWebKit/")[1];
var ver=parseFloat(tmp.split(" ")[0]);
if(ver>=420){
drs.capable=t;
drs.support.builtin=t;
drs.support.plugin=f;
}
}else{
}
})();
dojo.hostenv.startPackage("dojo.hostenv");
dojo.render.name=dojo.hostenv.name_="browser";
dojo.hostenv.searchIds=[];
dojo.hostenv._XMLHTTP_PROGIDS=["Msxml2.XMLHTTP","Microsoft.XMLHTTP","Msxml2.XMLHTTP.4.0"];
dojo.hostenv.getXmlhttpObject=function(){
var _b9=null;
var _ba=null;
try{
_b9=new XMLHttpRequest();
}
catch(e){
}
if(!_b9){
for(var i=0;i<3;++i){
var _bc=dojo.hostenv._XMLHTTP_PROGIDS[i];
try{
_b9=new ActiveXObject(_bc);
}
catch(e){
_ba=e;
}
if(_b9){
dojo.hostenv._XMLHTTP_PROGIDS=[_bc];
break;
}
}
}
if(!_b9){
return dojo.raise("XMLHTTP not available",_ba);
}
return _b9;
};
dojo.hostenv._blockAsync=false;
dojo.hostenv.getText=function(uri,_be,_bf){
if(!_be){
this._blockAsync=true;
}
var _c0=this.getXmlhttpObject();
function isDocumentOk(_c1){
var _c2=_c1["status"];
return Boolean((!_c2)||((200<=_c2)&&(300>_c2))||(_c2==304));
}
if(_be){
var _c3=this,_c4=null,gbl=dojo.global();
var xhr=dojo.evalObjPath("dojo.io.XMLHTTPTransport");
_c0.onreadystatechange=function(){
if(_c4){
gbl.clearTimeout(_c4);
_c4=null;
}
if(_c3._blockAsync||(xhr&&xhr._blockAsync)){
_c4=gbl.setTimeout(function(){
_c0.onreadystatechange.apply(this);
},10);
}else{
if(4==_c0.readyState){
if(isDocumentOk(_c0)){
_be(_c0.responseText);
}
}
}
};
}
_c0.open("GET",uri,_be?true:false);
try{
_c0.send(null);
if(_be){
return null;
}
if(!isDocumentOk(_c0)){
var err=Error("Unable to load "+uri+" status:"+_c0.status);
err.status=_c0.status;
err.responseText=_c0.responseText;
throw err;
}
}
catch(e){
this._blockAsync=false;
if((_bf)&&(!_be)){
return null;
}else{
throw e;
}
}
this._blockAsync=false;
return _c0.responseText;
};
dojo.hostenv.defaultDebugContainerId="dojoDebug";
dojo.hostenv._println_buffer=[];
dojo.hostenv._println_safe=false;
dojo.hostenv.println=function(_c8){
if(!dojo.hostenv._println_safe){
dojo.hostenv._println_buffer.push(_c8);
}else{
try{
var _c9=document.getElementById(djConfig.debugContainerId?djConfig.debugContainerId:dojo.hostenv.defaultDebugContainerId);
if(!_c9){
_c9=dojo.body();
}
var div=document.createElement("div");
div.appendChild(document.createTextNode(_c8));
_c9.appendChild(div);
}
catch(e){
try{
document.write("<div>"+_c8+"</div>");
}
catch(e2){
window.status=_c8;
}
}
}
};
dojo.addOnLoad(function(){
dojo.hostenv._println_safe=true;
while(dojo.hostenv._println_buffer.length>0){
dojo.hostenv.println(dojo.hostenv._println_buffer.shift());
}
});
function dj_addNodeEvtHdlr(_cb,_cc,fp){
var _ce=_cb["on"+_cc]||function(){
};
_cb["on"+_cc]=function(){
fp.apply(_cb,arguments);
_ce.apply(_cb,arguments);
};
return true;
}
function dj_load_init(e){
var _d0=(e&&e.type)?e.type.toLowerCase():"load";
if(arguments.callee.initialized||(_d0!="domcontentloaded"&&_d0!="load")){
return;
}
arguments.callee.initialized=true;
if(typeof (_timer)!="undefined"){
clearInterval(_timer);
delete _timer;
}
var _d1=function(){
if(dojo.render.html.ie){
dojo.hostenv.makeWidgets();
}
};
if(dojo.hostenv.inFlightCount==0){
_d1();
dojo.hostenv.modulesLoaded();
}else{
dojo.hostenv.modulesLoadedListeners.unshift(_d1);
}
}
if(document.addEventListener){
if(dojo.render.html.opera||(dojo.render.html.moz&&!djConfig.delayMozLoadingFix)){
document.addEventListener("DOMContentLoaded",dj_load_init,null);
}
window.addEventListener("load",dj_load_init,null);
}
if(dojo.render.html.ie&&dojo.render.os.win){
document.attachEvent("onreadystatechange",function(e){
if(document.readyState=="complete"){
dj_load_init();
}
});
}
if(/(WebKit|khtml)/i.test(navigator.userAgent)){
var _timer=setInterval(function(){
if(/loaded|complete/.test(document.readyState)){
dj_load_init();
}
},10);
}
if(dojo.render.html.ie){
dj_addNodeEvtHdlr(window,"beforeunload",function(){
dojo.hostenv._unloading=true;
window.setTimeout(function(){
dojo.hostenv._unloading=false;
},0);
});
}
dj_addNodeEvtHdlr(window,"unload",function(){
dojo.hostenv.unloaded();
if((!dojo.render.html.ie)||(dojo.render.html.ie&&dojo.hostenv._unloading)){
dojo.hostenv.unloaded();
}
});
dojo.hostenv.makeWidgets=function(){
var _d3=[];
if(djConfig.searchIds&&djConfig.searchIds.length>0){
_d3=_d3.concat(djConfig.searchIds);
}
if(dojo.hostenv.searchIds&&dojo.hostenv.searchIds.length>0){
_d3=_d3.concat(dojo.hostenv.searchIds);
}
if((djConfig.parseWidgets)||(_d3.length>0)){
if(dojo.evalObjPath("dojo.widget.Parse")){
var _d4=new dojo.xml.Parse();
if(_d3.length>0){
for(var x=0;x<_d3.length;x++){
var _d6=document.getElementById(_d3[x]);
if(!_d6){
continue;
}
var _d7=_d4.parseElement(_d6,null,true);
dojo.widget.getParser().createComponents(_d7);
}
}else{
if(djConfig.parseWidgets){
var _d7=_d4.parseElement(dojo.body(),null,true);
dojo.widget.getParser().createComponents(_d7);
}
}
}
}
};
dojo.addOnLoad(function(){
if(!dojo.render.html.ie){
dojo.hostenv.makeWidgets();
}
});
try{
if(dojo.render.html.ie){
document.namespaces.add("v","urn:schemas-microsoft-com:vml");
document.createStyleSheet().addRule("v\\:*","behavior:url(#default#VML)");
}
}
catch(e){
}
dojo.hostenv.writeIncludes=function(){
};
if(!dj_undef("document",this)){
dj_currentDocument=this.document;
}
dojo.doc=function(){
return dj_currentDocument;
};
dojo.body=function(){
return dojo.doc().body||dojo.doc().getElementsByTagName("body")[0];
};
dojo.byId=function(id,doc){
if((id)&&((typeof id=="string")||(id instanceof String))){
if(!doc){
doc=dj_currentDocument;
}
var ele=doc.getElementById(id);
if(ele&&(ele.id!=id)&&doc.all){
ele=null;
eles=doc.all[id];
if(eles){
if(eles.length){
for(var i=0;i<eles.length;i++){
if(eles[i].id==id){
ele=eles[i];
break;
}
}
}else{
ele=eles;
}
}
}
return ele;
}
return id;
};
dojo.setContext=function(_dc,_dd){
dj_currentContext=_dc;
dj_currentDocument=_dd;
};
dojo._fireCallback=function(_de,_df,_e0){
if((_df)&&((typeof _de=="string")||(_de instanceof String))){
_de=_df[_de];
}
return (_df?_de.apply(_df,_e0||[]):_de());
};
dojo.withGlobal=function(_e1,_e2,_e3,_e4){
var _e5;
var _e6=dj_currentContext;
var _e7=dj_currentDocument;
try{
dojo.setContext(_e1,_e1.document);
_e5=dojo._fireCallback(_e2,_e3,_e4);
}
finally{
dojo.setContext(_e6,_e7);
}
return _e5;
};
dojo.withDoc=function(_e8,_e9,_ea,_eb){
var _ec;
var _ed=dj_currentDocument;
try{
dj_currentDocument=_e8;
_ec=dojo._fireCallback(_e9,_ea,_eb);
}
finally{
dj_currentDocument=_ed;
}
return _ec;
};
}
(function(){
if(typeof dj_usingBootstrap!="undefined"){
return;
}
var _ee=false;
var _ef=false;
var _f0=false;
if((typeof this["load"]=="function")&&((typeof this["Packages"]=="function")||(typeof this["Packages"]=="object"))){
_ee=true;
}else{
if(typeof this["load"]=="function"){
_ef=true;
}else{
if(window.widget){
_f0=true;
}
}
}
var _f1=[];
if((this["djConfig"])&&((djConfig["isDebug"])||(djConfig["debugAtAllCosts"]))){
_f1.push("debug.js");
}
if((this["djConfig"])&&(djConfig["debugAtAllCosts"])&&(!_ee)&&(!_f0)){
_f1.push("browser_debug.js");
}
var _f2=djConfig["baseScriptUri"];
if((this["djConfig"])&&(djConfig["baseLoaderUri"])){
_f2=djConfig["baseLoaderUri"];
}
for(var x=0;x<_f1.length;x++){
var _f4=_f2+"src/"+_f1[x];
if(_ee||_ef){
load(_f4);
}else{
try{
document.write("<scr"+"ipt type='text/javascript' src='"+_f4+"'></scr"+"ipt>");
}
catch(e){
var _f5=document.createElement("script");
_f5.src=_f4;
document.getElementsByTagName("head")[0].appendChild(_f5);
}
}
}
})();
dojo.provide("dojo.lang.common");
dojo.lang.inherits=function(_f6,_f7){
if(!dojo.lang.isFunction(_f7)){
dojo.raise("dojo.inherits: superclass argument ["+_f7+"] must be a function (subclass: ["+_f6+"']");
}
_f6.prototype=new _f7();
_f6.prototype.constructor=_f6;
_f6.superclass=_f7.prototype;
_f6["super"]=_f7.prototype;
};
dojo.lang._mixin=function(obj,_f9){
var _fa={};
for(var x in _f9){
if((typeof _fa[x]=="undefined")||(_fa[x]!=_f9[x])){
obj[x]=_f9[x];
}
}
if(dojo.render.html.ie&&(typeof (_f9["toString"])=="function")&&(_f9["toString"]!=obj["toString"])&&(_f9["toString"]!=_fa["toString"])){
obj.toString=_f9.toString;
}
return obj;
};
dojo.lang.mixin=function(obj,_fd){
for(var i=1,l=arguments.length;i<l;i++){
dojo.lang._mixin(obj,arguments[i]);
}
return obj;
};
dojo.lang.extend=function(_100,_101){
for(var i=1,l=arguments.length;i<l;i++){
dojo.lang._mixin(_100.prototype,arguments[i]);
}
return _100;
};
dojo.inherits=dojo.lang.inherits;
dojo.mixin=dojo.lang.mixin;
dojo.extend=dojo.lang.extend;
dojo.lang.find=function(_104,_105,_106,_107){
if(!dojo.lang.isArrayLike(_104)&&dojo.lang.isArrayLike(_105)){
dojo.deprecated("dojo.lang.find(value, array)","use dojo.lang.find(array, value) instead","0.5");
var temp=_104;
_104=_105;
_105=temp;
}
var _109=dojo.lang.isString(_104);
if(_109){
_104=_104.split("");
}
if(_107){
var step=-1;
var i=_104.length-1;
var end=-1;
}else{
var step=1;
var i=0;
var end=_104.length;
}
if(_106){
while(i!=end){
if(_104[i]===_105){
return i;
}
i+=step;
}
}else{
while(i!=end){
if(_104[i]==_105){
return i;
}
i+=step;
}
}
return -1;
};
dojo.lang.indexOf=dojo.lang.find;
dojo.lang.findLast=function(_10d,_10e,_10f){
return dojo.lang.find(_10d,_10e,_10f,true);
};
dojo.lang.lastIndexOf=dojo.lang.findLast;
dojo.lang.inArray=function(_110,_111){
return dojo.lang.find(_110,_111)>-1;
};
dojo.lang.isObject=function(it){
if(typeof it=="undefined"){
return false;
}
return (typeof it=="object"||it===null||dojo.lang.isArray(it)||dojo.lang.isFunction(it));
};
dojo.lang.isArray=function(it){
return (it&&it instanceof Array||typeof it=="array");
};
dojo.lang.isArrayLike=function(it){
if((!it)||(dojo.lang.isUndefined(it))){
return false;
}
if(dojo.lang.isString(it)){
return false;
}
if(dojo.lang.isFunction(it)){
return false;
}
if(dojo.lang.isArray(it)){
return true;
}
if((it.tagName)&&(it.tagName.toLowerCase()=="form")){
return false;
}
if(dojo.lang.isNumber(it.length)&&isFinite(it.length)){
return true;
}
return false;
};
dojo.lang.isFunction=function(it){
return (it instanceof Function||typeof it=="function");
};
(function(){
if((dojo.render.html.capable)&&(dojo.render.html["safari"])){
dojo.lang.isFunction=function(it){
if((typeof (it)=="function")&&(it=="[object NodeList]")){
return false;
}
return (it instanceof Function||typeof it=="function");
};
}
})();
dojo.lang.isString=function(it){
return (typeof it=="string"||it instanceof String);
};
dojo.lang.isAlien=function(it){
if(!it){
return false;
}
return !dojo.lang.isFunction(it)&&/\{\s*\[native code\]\s*\}/.test(String(it));
};
dojo.lang.isBoolean=function(it){
return (it instanceof Boolean||typeof it=="boolean");
};
dojo.lang.isNumber=function(it){
return (it instanceof Number||typeof it=="number");
};
dojo.lang.isUndefined=function(it){
return ((typeof (it)=="undefined")&&(it==undefined));
};
dojo.provide("dojo.lang.array");
dojo.lang.mixin(dojo.lang,{has:function(obj,name){
try{
return typeof obj[name]!="undefined";
}
catch(e){
return false;
}
},isEmpty:function(obj){
if(dojo.lang.isObject(obj)){
var tmp={};
var _120=0;
for(var x in obj){
if(obj[x]&&(!tmp[x])){
_120++;
break;
}
}
return _120==0;
}else{
if(dojo.lang.isArrayLike(obj)||dojo.lang.isString(obj)){
return obj.length==0;
}
}
},map:function(arr,obj,_124){
var _125=dojo.lang.isString(arr);
if(_125){
arr=arr.split("");
}
if(dojo.lang.isFunction(obj)&&(!_124)){
_124=obj;
obj=dj_global;
}else{
if(dojo.lang.isFunction(obj)&&_124){
var _126=obj;
obj=_124;
_124=_126;
}
}
if(Array.map){
var _127=Array.map(arr,_124,obj);
}else{
var _127=[];
for(var i=0;i<arr.length;++i){
_127.push(_124.call(obj,arr[i]));
}
}
if(_125){
return _127.join("");
}else{
return _127;
}
},reduce:function(arr,_12a,obj,_12c){
var _12d=_12a;
if(arguments.length==1){
dojo.debug("dojo.lang.reduce called with too few arguments!");
return false;
}else{
if(arguments.length==2){
_12c=_12a;
_12d=arr.shift();
}else{
if(arguments.lenght==3){
if(dojo.lang.isFunction(obj)){
_12c=obj;
obj=null;
}
}else{
if(dojo.lang.isFunction(obj)){
var tmp=_12c;
_12c=obj;
obj=tmp;
}
}
}
}
var ob=obj?obj:dj_global;
dojo.lang.map(arr,function(val){
_12d=_12c.call(ob,_12d,val);
});
return _12d;
},forEach:function(_131,_132,_133){
if(dojo.lang.isString(_131)){
_131=_131.split("");
}
if(Array.forEach){
Array.forEach(_131,_132,_133);
}else{
if(!_133){
_133=dj_global;
}
for(var i=0,l=_131.length;i<l;i++){
_132.call(_133,_131[i],i,_131);
}
}
},_everyOrSome:function(_136,arr,_138,_139){
if(dojo.lang.isString(arr)){
arr=arr.split("");
}
if(Array.every){
return Array[_136?"every":"some"](arr,_138,_139);
}else{
if(!_139){
_139=dj_global;
}
for(var i=0,l=arr.length;i<l;i++){
var _13c=_138.call(_139,arr[i],i,arr);
if(_136&&!_13c){
return false;
}else{
if((!_136)&&(_13c)){
return true;
}
}
}
return Boolean(_136);
}
},every:function(arr,_13e,_13f){
return this._everyOrSome(true,arr,_13e,_13f);
},some:function(arr,_141,_142){
return this._everyOrSome(false,arr,_141,_142);
},filter:function(arr,_144,_145){
var _146=dojo.lang.isString(arr);
if(_146){
arr=arr.split("");
}
var _147;
if(Array.filter){
_147=Array.filter(arr,_144,_145);
}else{
if(!_145){
if(arguments.length>=3){
dojo.raise("thisObject doesn't exist!");
}
_145=dj_global;
}
_147=[];
for(var i=0;i<arr.length;i++){
if(_144.call(_145,arr[i],i,arr)){
_147.push(arr[i]);
}
}
}
if(_146){
return _147.join("");
}else{
return _147;
}
},unnest:function(){
var out=[];
for(var i=0;i<arguments.length;i++){
if(dojo.lang.isArrayLike(arguments[i])){
var add=dojo.lang.unnest.apply(this,arguments[i]);
out=out.concat(add);
}else{
out.push(arguments[i]);
}
}
return out;
},toArray:function(_14c,_14d){
var _14e=[];
for(var i=_14d||0;i<_14c.length;i++){
_14e.push(_14c[i]);
}
return _14e;
}});
dojo.provide("dojo.gfx.color");
dojo.gfx.color.Color=function(r,g,b,a){
if(dojo.lang.isArray(r)){
this.r=r[0];
this.g=r[1];
this.b=r[2];
this.a=r[3]||1;
}else{
if(dojo.lang.isString(r)){
var rgb=dojo.gfx.color.extractRGB(r);
this.r=rgb[0];
this.g=rgb[1];
this.b=rgb[2];
this.a=g||1;
}else{
if(r instanceof dojo.gfx.color.Color){
this.r=r.r;
this.b=r.b;
this.g=r.g;
this.a=r.a;
}else{
this.r=r;
this.g=g;
this.b=b;
this.a=a;
}
}
}
};
dojo.gfx.color.Color.fromArray=function(arr){
return new dojo.gfx.color.Color(arr[0],arr[1],arr[2],arr[3]);
};
dojo.extend(dojo.gfx.color.Color,{toRgb:function(_156){
if(_156){
return this.toRgba();
}else{
return [this.r,this.g,this.b];
}
},toRgba:function(){
return [this.r,this.g,this.b,this.a];
},toHex:function(){
return dojo.gfx.color.rgb2hex(this.toRgb());
},toCss:function(){
return "rgb("+this.toRgb().join()+")";
},toString:function(){
return this.toHex();
},blend:function(_157,_158){
var rgb=null;
if(dojo.lang.isArray(_157)){
rgb=_157;
}else{
if(_157 instanceof dojo.gfx.color.Color){
rgb=_157.toRgb();
}else{
rgb=new dojo.gfx.color.Color(_157).toRgb();
}
}
return dojo.gfx.color.blend(this.toRgb(),rgb,_158);
}});
dojo.gfx.color.named={white:[255,255,255],black:[0,0,0],red:[255,0,0],green:[0,255,0],lime:[0,255,0],blue:[0,0,255],navy:[0,0,128],gray:[128,128,128],silver:[192,192,192]};
dojo.gfx.color.blend=function(a,b,_15c){
if(typeof a=="string"){
return dojo.gfx.color.blendHex(a,b,_15c);
}
if(!_15c){
_15c=0;
}
_15c=Math.min(Math.max(-1,_15c),1);
_15c=((_15c+1)/2);
var c=[];
for(var x=0;x<3;x++){
c[x]=parseInt(b[x]+((a[x]-b[x])*_15c));
}
return c;
};
dojo.gfx.color.blendHex=function(a,b,_161){
return dojo.gfx.color.rgb2hex(dojo.gfx.color.blend(dojo.gfx.color.hex2rgb(a),dojo.gfx.color.hex2rgb(b),_161));
};
dojo.gfx.color.extractRGB=function(_162){
var hex="0123456789abcdef";
_162=_162.toLowerCase();
if(_162.indexOf("rgb")==0){
var _164=_162.match(/rgba*\((\d+), *(\d+), *(\d+)/i);
var ret=_164.splice(1,3);
return ret;
}else{
var _166=dojo.gfx.color.hex2rgb(_162);
if(_166){
return _166;
}else{
return dojo.gfx.color.named[_162]||[255,255,255];
}
}
};
dojo.gfx.color.hex2rgb=function(hex){
var _168="0123456789ABCDEF";
var rgb=new Array(3);
if(hex.indexOf("#")==0){
hex=hex.substring(1);
}
hex=hex.toUpperCase();
if(hex.replace(new RegExp("["+_168+"]","g"),"")!=""){
return null;
}
if(hex.length==3){
rgb[0]=hex.charAt(0)+hex.charAt(0);
rgb[1]=hex.charAt(1)+hex.charAt(1);
rgb[2]=hex.charAt(2)+hex.charAt(2);
}else{
rgb[0]=hex.substring(0,2);
rgb[1]=hex.substring(2,4);
rgb[2]=hex.substring(4);
}
for(var i=0;i<rgb.length;i++){
rgb[i]=_168.indexOf(rgb[i].charAt(0))*16+_168.indexOf(rgb[i].charAt(1));
}
return rgb;
};
dojo.gfx.color.rgb2hex=function(r,g,b){
if(dojo.lang.isArray(r)){
g=r[1]||0;
b=r[2]||0;
r=r[0]||0;
}
var ret=dojo.lang.map([r,g,b],function(x){
x=new Number(x);
var s=x.toString(16);
while(s.length<2){
s="0"+s;
}
return s;
});
ret.unshift("#");
return ret.join("");
};
dojo.provide("dojo.lang.func");
dojo.lang.hitch=function(_171,_172){
var fcn=(dojo.lang.isString(_172)?_171[_172]:_172)||function(){
};
return function(){
return fcn.apply(_171,arguments);
};
};
dojo.lang.anonCtr=0;
dojo.lang.anon={};
dojo.lang.nameAnonFunc=function(_174,_175,_176){
var nso=(_175||dojo.lang.anon);
if((_176)||((dj_global["djConfig"])&&(djConfig["slowAnonFuncLookups"]==true))){
for(var x in nso){
try{
if(nso[x]===_174){
return x;
}
}
catch(e){
}
}
}
var ret="__"+dojo.lang.anonCtr++;
while(typeof nso[ret]!="undefined"){
ret="__"+dojo.lang.anonCtr++;
}
nso[ret]=_174;
return ret;
};
dojo.lang.forward=function(_17a){
return function(){
return this[_17a].apply(this,arguments);
};
};
dojo.lang.curry=function(_17b,func){
var _17d=[];
_17b=_17b||dj_global;
if(dojo.lang.isString(func)){
func=_17b[func];
}
for(var x=2;x<arguments.length;x++){
_17d.push(arguments[x]);
}
var _17f=(func["__preJoinArity"]||func.length)-_17d.length;
function gather(_180,_181,_182){
var _183=_182;
var _184=_181.slice(0);
for(var x=0;x<_180.length;x++){
_184.push(_180[x]);
}
_182=_182-_180.length;
if(_182<=0){
var res=func.apply(_17b,_184);
_182=_183;
return res;
}else{
return function(){
return gather(arguments,_184,_182);
};
}
}
return gather([],_17d,_17f);
};
dojo.lang.curryArguments=function(_187,func,args,_18a){
var _18b=[];
var x=_18a||0;
for(x=_18a;x<args.length;x++){
_18b.push(args[x]);
}
return dojo.lang.curry.apply(dojo.lang,[_187,func].concat(_18b));
};
dojo.lang.tryThese=function(){
for(var x=0;x<arguments.length;x++){
try{
if(typeof arguments[x]=="function"){
var ret=(arguments[x]());
if(ret){
return ret;
}
}
}
catch(e){
dojo.debug(e);
}
}
};
dojo.lang.delayThese=function(farr,cb,_191,_192){
if(!farr.length){
if(typeof _192=="function"){
_192();
}
return;
}
if((typeof _191=="undefined")&&(typeof cb=="number")){
_191=cb;
cb=function(){
};
}else{
if(!cb){
cb=function(){
};
if(!_191){
_191=0;
}
}
}
setTimeout(function(){
(farr.shift())();
cb();
dojo.lang.delayThese(farr,cb,_191,_192);
},_191);
};
dojo.provide("dojo.lfx.Animation");
dojo.lfx.Line=function(_193,end){
this.start=_193;
this.end=end;
if(dojo.lang.isArray(_193)){
var diff=[];
dojo.lang.forEach(this.start,function(s,i){
diff[i]=this.end[i]-s;
},this);
this.getValue=function(n){
var res=[];
dojo.lang.forEach(this.start,function(s,i){
res[i]=(diff[i]*n)+s;
},this);
return res;
};
}else{
var diff=end-_193;
this.getValue=function(n){
return (diff*n)+this.start;
};
}
};
dojo.lfx.easeDefault=function(n){
if(dojo.render.html.khtml){
return (parseFloat("0.5")+((Math.sin((n+parseFloat("1.5"))*Math.PI))/2));
}else{
return (0.5+((Math.sin((n+1.5)*Math.PI))/2));
}
};
dojo.lfx.easeIn=function(n){
return Math.pow(n,3);
};
dojo.lfx.easeOut=function(n){
return (1-Math.pow(1-n,3));
};
dojo.lfx.easeInOut=function(n){
return ((3*Math.pow(n,2))-(2*Math.pow(n,3)));
};
dojo.lfx.IAnimation=function(){
};
dojo.lang.extend(dojo.lfx.IAnimation,{curve:null,duration:1000,easing:null,repeatCount:0,rate:25,handler:null,beforeBegin:null,onBegin:null,onAnimate:null,onEnd:null,onPlay:null,onPause:null,onStop:null,play:null,pause:null,stop:null,connect:function(evt,_1a2,_1a3){
if(!_1a3){
_1a3=_1a2;
_1a2=this;
}
_1a3=dojo.lang.hitch(_1a2,_1a3);
var _1a4=this[evt]||function(){
};
this[evt]=function(){
var ret=_1a4.apply(this,arguments);
_1a3.apply(this,arguments);
return ret;
};
return this;
},fire:function(evt,args){
if(this[evt]){
this[evt].apply(this,(args||[]));
}
return this;
},repeat:function(_1a8){
this.repeatCount=_1a8;
return this;
},_active:false,_paused:false});
dojo.lfx.Animation=function(_1a9,_1aa,_1ab,_1ac,_1ad,rate){
dojo.lfx.IAnimation.call(this);
if(dojo.lang.isNumber(_1a9)||(!_1a9&&_1aa.getValue)){
rate=_1ad;
_1ad=_1ac;
_1ac=_1ab;
_1ab=_1aa;
_1aa=_1a9;
_1a9=null;
}else{
if(_1a9.getValue||dojo.lang.isArray(_1a9)){
rate=_1ac;
_1ad=_1ab;
_1ac=_1aa;
_1ab=_1a9;
_1aa=null;
_1a9=null;
}
}
if(dojo.lang.isArray(_1ab)){
this.curve=new dojo.lfx.Line(_1ab[0],_1ab[1]);
}else{
this.curve=_1ab;
}
if(_1aa!=null&&_1aa>0){
this.duration=_1aa;
}
if(_1ad){
this.repeatCount=_1ad;
}
if(rate){
this.rate=rate;
}
if(_1a9){
dojo.lang.forEach(["handler","beforeBegin","onBegin","onEnd","onPlay","onStop","onAnimate"],function(item){
if(_1a9[item]){
this.connect(item,_1a9[item]);
}
},this);
}
if(_1ac&&dojo.lang.isFunction(_1ac)){
this.easing=_1ac;
}
};
dojo.inherits(dojo.lfx.Animation,dojo.lfx.IAnimation);
dojo.lang.extend(dojo.lfx.Animation,{_startTime:null,_endTime:null,_timer:null,_percent:0,_startRepeatCount:0,play:function(_1b0,_1b1){
if(_1b1){
clearTimeout(this._timer);
this._active=false;
this._paused=false;
this._percent=0;
}else{
if(this._active&&!this._paused){
return this;
}
}
this.fire("handler",["beforeBegin"]);
this.fire("beforeBegin");
if(_1b0>0){
setTimeout(dojo.lang.hitch(this,function(){
this.play(null,_1b1);
}),_1b0);
return this;
}
this._startTime=new Date().valueOf();
if(this._paused){
this._startTime-=(this.duration*this._percent/100);
}
this._endTime=this._startTime+this.duration;
this._active=true;
this._paused=false;
var step=this._percent/100;
var _1b3=this.curve.getValue(step);
if(this._percent==0){
if(!this._startRepeatCount){
this._startRepeatCount=this.repeatCount;
}
this.fire("handler",["begin",_1b3]);
this.fire("onBegin",[_1b3]);
}
this.fire("handler",["play",_1b3]);
this.fire("onPlay",[_1b3]);
this._cycle();
return this;
},pause:function(){
clearTimeout(this._timer);
if(!this._active){
return this;
}
this._paused=true;
var _1b4=this.curve.getValue(this._percent/100);
this.fire("handler",["pause",_1b4]);
this.fire("onPause",[_1b4]);
return this;
},gotoPercent:function(pct,_1b6){
clearTimeout(this._timer);
this._active=true;
this._paused=true;
this._percent=pct;
if(_1b6){
this.play();
}
return this;
},stop:function(_1b7){
clearTimeout(this._timer);
var step=this._percent/100;
if(_1b7){
step=1;
}
var _1b9=this.curve.getValue(step);
this.fire("handler",["stop",_1b9]);
this.fire("onStop",[_1b9]);
this._active=false;
this._paused=false;
return this;
},status:function(){
if(this._active){
return this._paused?"paused":"playing";
}else{
return "stopped";
}
return this;
},_cycle:function(){
clearTimeout(this._timer);
if(this._active){
var curr=new Date().valueOf();
var step=(curr-this._startTime)/(this._endTime-this._startTime);
if(step>=1){
step=1;
this._percent=100;
}else{
this._percent=step*100;
}
if((this.easing)&&(dojo.lang.isFunction(this.easing))){
step=this.easing(step);
}
var _1bc=this.curve.getValue(step);
this.fire("handler",["animate",_1bc]);
this.fire("onAnimate",[_1bc]);
if(step<1){
this._timer=setTimeout(dojo.lang.hitch(this,"_cycle"),this.rate);
}else{
this._active=false;
this.fire("handler",["end"]);
this.fire("onEnd");
if(this.repeatCount>0){
this.repeatCount--;
this.play(null,true);
}else{
if(this.repeatCount==-1){
this.play(null,true);
}else{
if(this._startRepeatCount){
this.repeatCount=this._startRepeatCount;
this._startRepeatCount=0;
}
}
}
}
}
return this;
}});
dojo.lfx.Combine=function(_1bd){
dojo.lfx.IAnimation.call(this);
this._anims=[];
this._animsEnded=0;
var _1be=arguments;
if(_1be.length==1&&(dojo.lang.isArray(_1be[0])||dojo.lang.isArrayLike(_1be[0]))){
_1be=_1be[0];
}
dojo.lang.forEach(_1be,function(anim){
this._anims.push(anim);
anim.connect("onEnd",dojo.lang.hitch(this,"_onAnimsEnded"));
},this);
};
dojo.inherits(dojo.lfx.Combine,dojo.lfx.IAnimation);
dojo.lang.extend(dojo.lfx.Combine,{_animsEnded:0,play:function(_1c0,_1c1){
if(!this._anims.length){
return this;
}
this.fire("beforeBegin");
if(_1c0>0){
setTimeout(dojo.lang.hitch(this,function(){
this.play(null,_1c1);
}),_1c0);
return this;
}
if(_1c1||this._anims[0].percent==0){
this.fire("onBegin");
}
this.fire("onPlay");
this._animsCall("play",null,_1c1);
return this;
},pause:function(){
this.fire("onPause");
this._animsCall("pause");
return this;
},stop:function(_1c2){
this.fire("onStop");
this._animsCall("stop",_1c2);
return this;
},_onAnimsEnded:function(){
this._animsEnded++;
if(this._animsEnded>=this._anims.length){
this.fire("onEnd");
}
return this;
},_animsCall:function(_1c3){
var args=[];
if(arguments.length>1){
for(var i=1;i<arguments.length;i++){
args.push(arguments[i]);
}
}
var _1c6=this;
dojo.lang.forEach(this._anims,function(anim){
anim[_1c3](args);
},_1c6);
return this;
}});
dojo.lfx.Chain=function(_1c8){
dojo.lfx.IAnimation.call(this);
this._anims=[];
this._currAnim=-1;
var _1c9=arguments;
if(_1c9.length==1&&(dojo.lang.isArray(_1c9[0])||dojo.lang.isArrayLike(_1c9[0]))){
_1c9=_1c9[0];
}
var _1ca=this;
dojo.lang.forEach(_1c9,function(anim,i,_1cd){
this._anims.push(anim);
if(i<_1cd.length-1){
anim.connect("onEnd",dojo.lang.hitch(this,"_playNext"));
}else{
anim.connect("onEnd",dojo.lang.hitch(this,function(){
this.fire("onEnd");
}));
}
},this);
};
dojo.inherits(dojo.lfx.Chain,dojo.lfx.IAnimation);
dojo.lang.extend(dojo.lfx.Chain,{_currAnim:-1,play:function(_1ce,_1cf){
if(!this._anims.length){
return this;
}
if(_1cf||!this._anims[this._currAnim]){
this._currAnim=0;
}
var _1d0=this._anims[this._currAnim];
this.fire("beforeBegin");
if(_1ce>0){
setTimeout(dojo.lang.hitch(this,function(){
this.play(null,_1cf);
}),_1ce);
return this;
}
if(_1d0){
if(this._currAnim==0){
this.fire("handler",["begin",this._currAnim]);
this.fire("onBegin",[this._currAnim]);
}
this.fire("onPlay",[this._currAnim]);
_1d0.play(null,_1cf);
}
return this;
},pause:function(){
if(this._anims[this._currAnim]){
this._anims[this._currAnim].pause();
this.fire("onPause",[this._currAnim]);
}
return this;
},playPause:function(){
if(this._anims.length==0){
return this;
}
if(this._currAnim==-1){
this._currAnim=0;
}
var _1d1=this._anims[this._currAnim];
if(_1d1){
if(!_1d1._active||_1d1._paused){
this.play();
}else{
this.pause();
}
}
return this;
},stop:function(){
var _1d2=this._anims[this._currAnim];
if(_1d2){
_1d2.stop();
this.fire("onStop",[this._currAnim]);
}
return _1d2;
},_playNext:function(){
if(this._currAnim==-1||this._anims.length==0){
return this;
}
this._currAnim++;
if(this._anims[this._currAnim]){
this._anims[this._currAnim].play(null,true);
}
return this;
}});
dojo.lfx.combine=function(_1d3){
var _1d4=arguments;
if(dojo.lang.isArray(arguments[0])){
_1d4=arguments[0];
}
if(_1d4.length==1){
return _1d4[0];
}
return new dojo.lfx.Combine(_1d4);
};
dojo.lfx.chain=function(_1d5){
var _1d6=arguments;
if(dojo.lang.isArray(arguments[0])){
_1d6=arguments[0];
}
if(_1d6.length==1){
return _1d6[0];
}
return new dojo.lfx.Chain(_1d6);
};
dojo.provide("dojo.dom");
dojo.dom.ELEMENT_NODE=1;
dojo.dom.ATTRIBUTE_NODE=2;
dojo.dom.TEXT_NODE=3;
dojo.dom.CDATA_SECTION_NODE=4;
dojo.dom.ENTITY_REFERENCE_NODE=5;
dojo.dom.ENTITY_NODE=6;
dojo.dom.PROCESSING_INSTRUCTION_NODE=7;
dojo.dom.COMMENT_NODE=8;
dojo.dom.DOCUMENT_NODE=9;
dojo.dom.DOCUMENT_TYPE_NODE=10;
dojo.dom.DOCUMENT_FRAGMENT_NODE=11;
dojo.dom.NOTATION_NODE=12;
dojo.dom.dojoml="http://www.dojotoolkit.org/2004/dojoml";
dojo.dom.xmlns={svg:"http://www.w3.org/2000/svg",smil:"http://www.w3.org/2001/SMIL20/",mml:"http://www.w3.org/1998/Math/MathML",cml:"http://www.xml-cml.org",xlink:"http://www.w3.org/1999/xlink",xhtml:"http://www.w3.org/1999/xhtml",xul:"http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul",xbl:"http://www.mozilla.org/xbl",fo:"http://www.w3.org/1999/XSL/Format",xsl:"http://www.w3.org/1999/XSL/Transform",xslt:"http://www.w3.org/1999/XSL/Transform",xi:"http://www.w3.org/2001/XInclude",xforms:"http://www.w3.org/2002/01/xforms",saxon:"http://icl.com/saxon",xalan:"http://xml.apache.org/xslt",xsd:"http://www.w3.org/2001/XMLSchema",dt:"http://www.w3.org/2001/XMLSchema-datatypes",xsi:"http://www.w3.org/2001/XMLSchema-instance",rdf:"http://www.w3.org/1999/02/22-rdf-syntax-ns#",rdfs:"http://www.w3.org/2000/01/rdf-schema#",dc:"http://purl.org/dc/elements/1.1/",dcq:"http://purl.org/dc/qualifiers/1.0","soap-env":"http://schemas.xmlsoap.org/soap/envelope/",wsdl:"http://schemas.xmlsoap.org/wsdl/",AdobeExtensions:"http://ns.adobe.com/AdobeSVGViewerExtensions/3.0/"};
dojo.dom.isNode=function(wh){
if(typeof Element=="function"){
try{
return wh instanceof Element;
}
catch(e){
}
}else{
return wh&&!isNaN(wh.nodeType);
}
};
dojo.dom.getUniqueId=function(){
var _1d8=dojo.doc();
do{
var id="dj_unique_"+(++arguments.callee._idIncrement);
}while(_1d8.getElementById(id));
return id;
};
dojo.dom.getUniqueId._idIncrement=0;
dojo.dom.firstElement=dojo.dom.getFirstChildElement=function(_1da,_1db){
var node=_1da.firstChild;
while(node&&node.nodeType!=dojo.dom.ELEMENT_NODE){
node=node.nextSibling;
}
if(_1db&&node&&node.tagName&&node.tagName.toLowerCase()!=_1db.toLowerCase()){
node=dojo.dom.nextElement(node,_1db);
}
return node;
};
dojo.dom.lastElement=dojo.dom.getLastChildElement=function(_1dd,_1de){
var node=_1dd.lastChild;
while(node&&node.nodeType!=dojo.dom.ELEMENT_NODE){
node=node.previousSibling;
}
if(_1de&&node&&node.tagName&&node.tagName.toLowerCase()!=_1de.toLowerCase()){
node=dojo.dom.prevElement(node,_1de);
}
return node;
};
dojo.dom.nextElement=dojo.dom.getNextSiblingElement=function(node,_1e1){
if(!node){
return null;
}
do{
node=node.nextSibling;
}while(node&&node.nodeType!=dojo.dom.ELEMENT_NODE);
if(node&&_1e1&&_1e1.toLowerCase()!=node.tagName.toLowerCase()){
return dojo.dom.nextElement(node,_1e1);
}
return node;
};
dojo.dom.prevElement=dojo.dom.getPreviousSiblingElement=function(node,_1e3){
if(!node){
return null;
}
if(_1e3){
_1e3=_1e3.toLowerCase();
}
do{
node=node.previousSibling;
}while(node&&node.nodeType!=dojo.dom.ELEMENT_NODE);
if(node&&_1e3&&_1e3.toLowerCase()!=node.tagName.toLowerCase()){
return dojo.dom.prevElement(node,_1e3);
}
return node;
};
dojo.dom.moveChildren=function(_1e4,_1e5,trim){
var _1e7=0;
if(trim){
while(_1e4.hasChildNodes()&&_1e4.firstChild.nodeType==dojo.dom.TEXT_NODE){
_1e4.removeChild(_1e4.firstChild);
}
while(_1e4.hasChildNodes()&&_1e4.lastChild.nodeType==dojo.dom.TEXT_NODE){
_1e4.removeChild(_1e4.lastChild);
}
}
while(_1e4.hasChildNodes()){
_1e5.appendChild(_1e4.firstChild);
_1e7++;
}
return _1e7;
};
dojo.dom.copyChildren=function(_1e8,_1e9,trim){
var _1eb=_1e8.cloneNode(true);
return this.moveChildren(_1eb,_1e9,trim);
};
dojo.dom.replaceChildren=function(node,_1ed){
var _1ee=[];
if(dojo.render.html.ie){
for(var i=0;i<node.childNodes.length;i++){
_1ee.push(node.childNodes[i]);
}
}
dojo.dom.removeChildren(node);
node.appendChild(_1ed);
for(var i=0;i<_1ee.length;i++){
dojo.dom.destroyNode(_1ee[i]);
}
};
dojo.dom.removeChildren=function(node){
var _1f1=node.childNodes.length;
while(node.hasChildNodes()){
dojo.dom.removeNode(node.firstChild);
}
return _1f1;
};
dojo.dom.replaceNode=function(node,_1f3){
return node.parentNode.replaceChild(_1f3,node);
};
dojo.dom.destroyNode=function(node){
if(node.parentNode){
node=dojo.dom.removeNode(node);
}
if(node.nodeType!=3){
if(dojo.evalObjPath("dojo.event.browser.clean",false)){
dojo.event.browser.clean(node);
}
if(dojo.render.html.ie){
node.outerHTML="";
}
}
};
dojo.dom.removeNode=function(node){
if(node&&node.parentNode){
return node.parentNode.removeChild(node);
}
};
dojo.dom.getAncestors=function(node,_1f7,_1f8){
var _1f9=[];
var _1fa=(_1f7&&(_1f7 instanceof Function||typeof _1f7=="function"));
while(node){
if(!_1fa||_1f7(node)){
_1f9.push(node);
}
if(_1f8&&_1f9.length>0){
return _1f9[0];
}
node=node.parentNode;
}
if(_1f8){
return null;
}
return _1f9;
};
dojo.dom.getAncestorsByTag=function(node,tag,_1fd){
tag=tag.toLowerCase();
return dojo.dom.getAncestors(node,function(el){
return ((el.tagName)&&(el.tagName.toLowerCase()==tag));
},_1fd);
};
dojo.dom.getFirstAncestorByTag=function(node,tag){
return dojo.dom.getAncestorsByTag(node,tag,true);
};
dojo.dom.isDescendantOf=function(node,_202,_203){
if(_203&&node){
node=node.parentNode;
}
while(node){
if(node==_202){
return true;
}
node=node.parentNode;
}
return false;
};
dojo.dom.innerXML=function(node){
if(node.innerXML){
return node.innerXML;
}else{
if(node.xml){
return node.xml;
}else{
if(typeof XMLSerializer!="undefined"){
return (new XMLSerializer()).serializeToString(node);
}
}
}
};
dojo.dom.createDocument=function(){
var doc=null;
var _206=dojo.doc();
if(!dj_undef("ActiveXObject")){
var _207=["MSXML2","Microsoft","MSXML","MSXML3"];
for(var i=0;i<_207.length;i++){
try{
doc=new ActiveXObject(_207[i]+".XMLDOM");
}
catch(e){
}
if(doc){
break;
}
}
}else{
if((_206.implementation)&&(_206.implementation.createDocument)){
doc=_206.implementation.createDocument("","",null);
}
}
return doc;
};
dojo.dom.createDocumentFromText=function(str,_20a){
if(!_20a){
_20a="text/xml";
}
if(!dj_undef("DOMParser")){
var _20b=new DOMParser();
return _20b.parseFromString(str,_20a);
}else{
if(!dj_undef("ActiveXObject")){
var _20c=dojo.dom.createDocument();
if(_20c){
_20c.async=false;
_20c.loadXML(str);
return _20c;
}else{
dojo.debug("toXml didn't work?");
}
}else{
var _20d=dojo.doc();
if(_20d.createElement){
var tmp=_20d.createElement("xml");
tmp.innerHTML=str;
if(_20d.implementation&&_20d.implementation.createDocument){
var _20f=_20d.implementation.createDocument("foo","",null);
for(var i=0;i<tmp.childNodes.length;i++){
_20f.importNode(tmp.childNodes.item(i),true);
}
return _20f;
}
return ((tmp.document)&&(tmp.document.firstChild?tmp.document.firstChild:tmp));
}
}
}
return null;
};
dojo.dom.prependChild=function(node,_212){
if(_212.firstChild){
_212.insertBefore(node,_212.firstChild);
}else{
_212.appendChild(node);
}
return true;
};
dojo.dom.insertBefore=function(node,ref,_215){
if((_215!=true)&&(node===ref||node.nextSibling===ref)){
return false;
}
var _216=ref.parentNode;
_216.insertBefore(node,ref);
return true;
};
dojo.dom.insertAfter=function(node,ref,_219){
var pn=ref.parentNode;
if(ref==pn.lastChild){
if((_219!=true)&&(node===ref)){
return false;
}
pn.appendChild(node);
}else{
return this.insertBefore(node,ref.nextSibling,_219);
}
return true;
};
dojo.dom.insertAtPosition=function(node,ref,_21d){
if((!node)||(!ref)||(!_21d)){
return false;
}
switch(_21d.toLowerCase()){
case "before":
return dojo.dom.insertBefore(node,ref);
case "after":
return dojo.dom.insertAfter(node,ref);
case "first":
if(ref.firstChild){
return dojo.dom.insertBefore(node,ref.firstChild);
}else{
ref.appendChild(node);
return true;
}
break;
default:
ref.appendChild(node);
return true;
}
};
dojo.dom.insertAtIndex=function(node,_21f,_220){
var _221=_21f.childNodes;
if(!_221.length||_221.length==_220){
_21f.appendChild(node);
return true;
}
if(_220==0){
return dojo.dom.prependChild(node,_21f);
}
return dojo.dom.insertAfter(node,_221[_220-1]);
};
dojo.dom.textContent=function(node,text){
if(arguments.length>1){
var _224=dojo.doc();
dojo.dom.replaceChildren(node,_224.createTextNode(text));
return text;
}else{
if(node.textContent!=undefined){
return node.textContent;
}
var _225="";
if(node==null){
return _225;
}
for(var i=0;i<node.childNodes.length;i++){
switch(node.childNodes[i].nodeType){
case 1:
case 5:
_225+=dojo.dom.textContent(node.childNodes[i]);
break;
case 3:
case 2:
case 4:
_225+=node.childNodes[i].nodeValue;
break;
default:
break;
}
}
return _225;
}
};
dojo.dom.hasParent=function(node){
return Boolean(node&&node.parentNode&&dojo.dom.isNode(node.parentNode));
};
dojo.dom.isTag=function(node){
if(node&&node.tagName){
for(var i=1;i<arguments.length;i++){
if(node.tagName==String(arguments[i])){
return String(arguments[i]);
}
}
}
return "";
};
dojo.dom.setAttributeNS=function(elem,_22b,_22c,_22d){
if(elem==null||((elem==undefined)&&(typeof elem=="undefined"))){
dojo.raise("No element given to dojo.dom.setAttributeNS");
}
if(!((elem.setAttributeNS==undefined)&&(typeof elem.setAttributeNS=="undefined"))){
elem.setAttributeNS(_22b,_22c,_22d);
}else{
var _22e=elem.ownerDocument;
var _22f=_22e.createNode(2,_22c,_22b);
_22f.nodeValue=_22d;
elem.setAttributeNode(_22f);
}
};
dojo.provide("dojo.html.common");
dojo.lang.mixin(dojo.html,dojo.dom);
dojo.html.body=function(){
dojo.deprecated("dojo.html.body() moved to dojo.body()","0.5");
return dojo.body();
};
dojo.html.getEventTarget=function(evt){
if(!evt){
evt=dojo.global().event||{};
}
var t=(evt.srcElement?evt.srcElement:(evt.target?evt.target:null));
while((t)&&(t.nodeType!=1)){
t=t.parentNode;
}
return t;
};
dojo.html.getViewport=function(){
var _232=dojo.global();
var _233=dojo.doc();
var w=0;
var h=0;
if(dojo.render.html.mozilla){
w=_233.documentElement.clientWidth;
h=_232.innerHeight;
}else{
if(!dojo.render.html.opera&&_232.innerWidth){
w=_232.innerWidth;
h=_232.innerHeight;
}else{
if(!dojo.render.html.opera&&dojo.exists(_233,"documentElement.clientWidth")){
var w2=_233.documentElement.clientWidth;
if(!w||w2&&w2<w){
w=w2;
}
h=_233.documentElement.clientHeight;
}else{
if(dojo.body().clientWidth){
w=dojo.body().clientWidth;
h=dojo.body().clientHeight;
}
}
}
}
return {width:w,height:h};
};
dojo.html.getScroll=function(){
var _237=dojo.global();
var _238=dojo.doc();
var top=_237.pageYOffset||_238.documentElement.scrollTop||dojo.body().scrollTop||0;
var left=_237.pageXOffset||_238.documentElement.scrollLeft||dojo.body().scrollLeft||0;
return {top:top,left:left,offset:{x:left,y:top}};
};
dojo.html.getParentByType=function(node,type){
var _23d=dojo.doc();
var _23e=dojo.byId(node);
type=type.toLowerCase();
while((_23e)&&(_23e.nodeName.toLowerCase()!=type)){
if(_23e==(_23d["body"]||_23d["documentElement"])){
return null;
}
_23e=_23e.parentNode;
}
return _23e;
};
dojo.html.getAttribute=function(node,attr){
node=dojo.byId(node);
if((!node)||(!node.getAttribute)){
return null;
}
var ta=typeof attr=="string"?attr:new String(attr);
var v=node.getAttribute(ta.toUpperCase());
if((v)&&(typeof v=="string")&&(v!="")){
return v;
}
if(v&&v.value){
return v.value;
}
if((node.getAttributeNode)&&(node.getAttributeNode(ta))){
return (node.getAttributeNode(ta)).value;
}else{
if(node.getAttribute(ta)){
return node.getAttribute(ta);
}else{
if(node.getAttribute(ta.toLowerCase())){
return node.getAttribute(ta.toLowerCase());
}
}
}
return null;
};
dojo.html.hasAttribute=function(node,attr){
return dojo.html.getAttribute(dojo.byId(node),attr)?true:false;
};
dojo.html.getCursorPosition=function(e){
e=e||dojo.global().event;
var _246={x:0,y:0};
if(e.pageX||e.pageY){
_246.x=e.pageX;
_246.y=e.pageY;
}else{
var de=dojo.doc().documentElement;
var db=dojo.body();
_246.x=e.clientX+((de||db)["scrollLeft"])-((de||db)["clientLeft"]);
_246.y=e.clientY+((de||db)["scrollTop"])-((de||db)["clientTop"]);
}
return _246;
};
dojo.html.isTag=function(node){
node=dojo.byId(node);
if(node&&node.tagName){
for(var i=1;i<arguments.length;i++){
if(node.tagName.toLowerCase()==String(arguments[i]).toLowerCase()){
return String(arguments[i]).toLowerCase();
}
}
}
return "";
};
if(dojo.render.html.ie&&!dojo.render.html.ie70){
if(window.location.href.substr(0,6).toLowerCase()!="https:"){
(function(){
var _24b=dojo.doc().createElement("script");
_24b.src="javascript:'dojo.html.createExternalElement=function(doc, tag){ return doc.createElement(tag); }'";
dojo.doc().getElementsByTagName("head")[0].appendChild(_24b);
})();
}
}else{
dojo.html.createExternalElement=function(doc,tag){
return doc.createElement(tag);
};
}
dojo.html._callDeprecated=function(_24e,_24f,args,_251,_252){
dojo.deprecated("dojo.html."+_24e,"replaced by dojo.html."+_24f+"("+(_251?"node, {"+_251+": "+_251+"}":"")+")"+(_252?"."+_252:""),"0.5");
var _253=[];
if(_251){
var _254={};
_254[_251]=args[1];
_253.push(args[0]);
_253.push(_254);
}else{
_253=args;
}
var ret=dojo.html[_24f].apply(dojo.html,args);
if(_252){
return ret[_252];
}else{
return ret;
}
};
dojo.html.getViewportWidth=function(){
return dojo.html._callDeprecated("getViewportWidth","getViewport",arguments,null,"width");
};
dojo.html.getViewportHeight=function(){
return dojo.html._callDeprecated("getViewportHeight","getViewport",arguments,null,"height");
};
dojo.html.getViewportSize=function(){
return dojo.html._callDeprecated("getViewportSize","getViewport",arguments);
};
dojo.html.getScrollTop=function(){
return dojo.html._callDeprecated("getScrollTop","getScroll",arguments,null,"top");
};
dojo.html.getScrollLeft=function(){
return dojo.html._callDeprecated("getScrollLeft","getScroll",arguments,null,"left");
};
dojo.html.getScrollOffset=function(){
return dojo.html._callDeprecated("getScrollOffset","getScroll",arguments,null,"offset");
};
dojo.provide("dojo.uri.Uri");
dojo.uri=new function(){
this.dojoUri=function(uri){
return new dojo.uri.Uri(dojo.hostenv.getBaseScriptUri(),uri);
};
this.moduleUri=function(_257,uri){
var loc=dojo.hostenv.getModuleSymbols(_257).join("/");
if(!loc){
return null;
}
if(loc.lastIndexOf("/")!=loc.length-1){
loc+="/";
}
return new dojo.uri.Uri(dojo.hostenv.getBaseScriptUri()+loc,uri);
};
this.Uri=function(){
var uri=arguments[0];
for(var i=1;i<arguments.length;i++){
if(!arguments[i]){
continue;
}
var _25c=new dojo.uri.Uri(arguments[i].toString());
var _25d=new dojo.uri.Uri(uri.toString());
if((_25c.path=="")&&(_25c.scheme==null)&&(_25c.authority==null)&&(_25c.query==null)){
if(_25c.fragment!=null){
_25d.fragment=_25c.fragment;
}
_25c=_25d;
}else{
if(_25c.scheme==null){
_25c.scheme=_25d.scheme;
if(_25c.authority==null){
_25c.authority=_25d.authority;
if(_25c.path.charAt(0)!="/"){
var path=_25d.path.substring(0,_25d.path.lastIndexOf("/")+1)+_25c.path;
var segs=path.split("/");
for(var j=0;j<segs.length;j++){
if(segs[j]=="."){
if(j==segs.length-1){
segs[j]="";
}else{
segs.splice(j,1);
j--;
}
}else{
if(j>0&&!(j==1&&segs[0]=="")&&segs[j]==".."&&segs[j-1]!=".."){
if(j==segs.length-1){
segs.splice(j,1);
segs[j-1]="";
}else{
segs.splice(j-1,2);
j-=2;
}
}
}
}
_25c.path=segs.join("/");
}
}
}
}
uri="";
if(_25c.scheme!=null){
uri+=_25c.scheme+":";
}
if(_25c.authority!=null){
uri+="//"+_25c.authority;
}
uri+=_25c.path;
if(_25c.query!=null){
uri+="?"+_25c.query;
}
if(_25c.fragment!=null){
uri+="#"+_25c.fragment;
}
}
this.uri=uri.toString();
var _261="^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$";
var r=this.uri.match(new RegExp(_261));
this.scheme=r[2]||(r[1]?"":null);
this.authority=r[4]||(r[3]?"":null);
this.path=r[5];
this.query=r[7]||(r[6]?"":null);
this.fragment=r[9]||(r[8]?"":null);
if(this.authority!=null){
_261="^((([^:]+:)?([^@]+))@)?([^:]*)(:([0-9]+))?$";
r=this.authority.match(new RegExp(_261));
this.user=r[3]||null;
this.password=r[4]||null;
this.host=r[5];
this.port=r[7]||null;
}
this.toString=function(){
return this.uri;
};
};
};
dojo.provide("dojo.html.style");
dojo.html.getClass=function(node){
node=dojo.byId(node);
if(!node){
return "";
}
var cs="";
if(node.className){
cs=node.className;
}else{
if(dojo.html.hasAttribute(node,"class")){
cs=dojo.html.getAttribute(node,"class");
}
}
return cs.replace(/^\s+|\s+$/g,"");
};
dojo.html.getClasses=function(node){
var c=dojo.html.getClass(node);
return (c=="")?[]:c.split(/\s+/g);
};
dojo.html.hasClass=function(node,_268){
return (new RegExp("(^|\\s+)"+_268+"(\\s+|$)")).test(dojo.html.getClass(node));
};
dojo.html.prependClass=function(node,_26a){
_26a+=" "+dojo.html.getClass(node);
return dojo.html.setClass(node,_26a);
};
dojo.html.addClass=function(node,_26c){
if(dojo.html.hasClass(node,_26c)){
return false;
}
_26c=(dojo.html.getClass(node)+" "+_26c).replace(/^\s+|\s+$/g,"");
return dojo.html.setClass(node,_26c);
};
dojo.html.setClass=function(node,_26e){
node=dojo.byId(node);
var cs=new String(_26e);
try{
if(typeof node.className=="string"){
node.className=cs;
}else{
if(node.setAttribute){
node.setAttribute("class",_26e);
node.className=cs;
}else{
return false;
}
}
}
catch(e){
dojo.debug("dojo.html.setClass() failed",e);
}
return true;
};
dojo.html.removeClass=function(node,_271,_272){
try{
if(!_272){
var _273=dojo.html.getClass(node).replace(new RegExp("(^|\\s+)"+_271+"(\\s+|$)"),"$1$2");
}else{
var _273=dojo.html.getClass(node).replace(_271,"");
}
dojo.html.setClass(node,_273);
}
catch(e){
dojo.debug("dojo.html.removeClass() failed",e);
}
return true;
};
dojo.html.replaceClass=function(node,_275,_276){
dojo.html.removeClass(node,_276);
dojo.html.addClass(node,_275);
};
dojo.html.classMatchType={ContainsAll:0,ContainsAny:1,IsOnly:2};
dojo.html.getElementsByClass=function(_277,_278,_279,_27a,_27b){
_27b=false;
var _27c=dojo.doc();
_278=dojo.byId(_278)||_27c;
var _27d=_277.split(/\s+/g);
var _27e=[];
if(_27a!=1&&_27a!=2){
_27a=0;
}
var _27f=new RegExp("(\\s|^)(("+_27d.join(")|(")+"))(\\s|$)");
var _280=_27d.join(" ").length;
var _281=[];
if(!_27b&&_27c.evaluate){
var _282=".//"+(_279||"*")+"[contains(";
if(_27a!=dojo.html.classMatchType.ContainsAny){
_282+="concat(' ',@class,' '), ' "+_27d.join(" ') and contains(concat(' ',@class,' '), ' ")+" ')";
if(_27a==2){
_282+=" and string-length(@class)="+_280+"]";
}else{
_282+="]";
}
}else{
_282+="concat(' ',@class,' '), ' "+_27d.join(" ') or contains(concat(' ',@class,' '), ' ")+" ')]";
}
var _283=_27c.evaluate(_282,_278,null,XPathResult.ANY_TYPE,null);
var _284=_283.iterateNext();
while(_284){
try{
_281.push(_284);
_284=_283.iterateNext();
}
catch(e){
break;
}
}
return _281;
}else{
if(!_279){
_279="*";
}
_281=_278.getElementsByTagName(_279);
var node,i=0;
outer:
while(node=_281[i++]){
var _287=dojo.html.getClasses(node);
if(_287.length==0){
continue outer;
}
var _288=0;
for(var j=0;j<_287.length;j++){
if(_27f.test(_287[j])){
if(_27a==dojo.html.classMatchType.ContainsAny){
_27e.push(node);
continue outer;
}else{
_288++;
}
}else{
if(_27a==dojo.html.classMatchType.IsOnly){
continue outer;
}
}
}
if(_288==_27d.length){
if((_27a==dojo.html.classMatchType.IsOnly)&&(_288==_287.length)){
_27e.push(node);
}else{
if(_27a==dojo.html.classMatchType.ContainsAll){
_27e.push(node);
}
}
}
}
return _27e;
}
};
dojo.html.getElementsByClassName=dojo.html.getElementsByClass;
dojo.html.toCamelCase=function(_28a){
var arr=_28a.split("-"),cc=arr[0];
for(var i=1;i<arr.length;i++){
cc+=arr[i].charAt(0).toUpperCase()+arr[i].substring(1);
}
return cc;
};
dojo.html.toSelectorCase=function(_28e){
return _28e.replace(/([A-Z])/g,"-$1").toLowerCase();
};
dojo.html.getComputedStyle=function(node,_290,_291){
node=dojo.byId(node);
var _290=dojo.html.toSelectorCase(_290);
var _292=dojo.html.toCamelCase(_290);
if(!node||!node.style){
return _291;
}else{
if(document.defaultView&&dojo.html.isDescendantOf(node,node.ownerDocument)){
try{
var cs=document.defaultView.getComputedStyle(node,"");
if(cs){
return cs.getPropertyValue(_290);
}
}
catch(e){
if(node.style.getPropertyValue){
return node.style.getPropertyValue(_290);
}else{
return _291;
}
}
}else{
if(node.currentStyle){
return node.currentStyle[_292];
}
}
}
if(node.style.getPropertyValue){
return node.style.getPropertyValue(_290);
}else{
return _291;
}
};
dojo.html.getStyleProperty=function(node,_295){
node=dojo.byId(node);
return (node&&node.style?node.style[dojo.html.toCamelCase(_295)]:undefined);
};
dojo.html.getStyle=function(node,_297){
var _298=dojo.html.getStyleProperty(node,_297);
return (_298?_298:dojo.html.getComputedStyle(node,_297));
};
dojo.html.setStyle=function(node,_29a,_29b){
node=dojo.byId(node);
if(node&&node.style){
var _29c=dojo.html.toCamelCase(_29a);
node.style[_29c]=_29b;
}
};
dojo.html.setStyleText=function(_29d,text){
try{
_29d.style.cssText=text;
}
catch(e){
_29d.setAttribute("style",text);
}
};
dojo.html.copyStyle=function(_29f,_2a0){
if(!_2a0.style.cssText){
_29f.setAttribute("style",_2a0.getAttribute("style"));
}else{
_29f.style.cssText=_2a0.style.cssText;
}
dojo.html.addClass(_29f,dojo.html.getClass(_2a0));
};
dojo.html.getUnitValue=function(node,_2a2,_2a3){
var s=dojo.html.getComputedStyle(node,_2a2);
if((!s)||((s=="auto")&&(_2a3))){
return {value:0,units:"px"};
}
var _2a5=s.match(/(\-?[\d.]+)([a-z%]*)/i);
if(!_2a5){
return dojo.html.getUnitValue.bad;
}
return {value:Number(_2a5[1]),units:_2a5[2].toLowerCase()};
};
dojo.html.getUnitValue.bad={value:NaN,units:""};
dojo.html.getPixelValue=function(node,_2a7,_2a8){
var _2a9=dojo.html.getUnitValue(node,_2a7,_2a8);
if(isNaN(_2a9.value)){
return 0;
}
if((_2a9.value)&&(_2a9.units!="px")){
return NaN;
}
return _2a9.value;
};
dojo.html.setPositivePixelValue=function(node,_2ab,_2ac){
if(isNaN(_2ac)){
return false;
}
node.style[_2ab]=Math.max(0,_2ac)+"px";
return true;
};
dojo.html.styleSheet=null;
dojo.html.insertCssRule=function(_2ad,_2ae,_2af){
if(!dojo.html.styleSheet){
if(document.createStyleSheet){
dojo.html.styleSheet=document.createStyleSheet();
}else{
if(document.styleSheets[0]){
dojo.html.styleSheet=document.styleSheets[0];
}else{
return null;
}
}
}
if(arguments.length<3){
if(dojo.html.styleSheet.cssRules){
_2af=dojo.html.styleSheet.cssRules.length;
}else{
if(dojo.html.styleSheet.rules){
_2af=dojo.html.styleSheet.rules.length;
}else{
return null;
}
}
}
if(dojo.html.styleSheet.insertRule){
var rule=_2ad+" { "+_2ae+" }";
return dojo.html.styleSheet.insertRule(rule,_2af);
}else{
if(dojo.html.styleSheet.addRule){
return dojo.html.styleSheet.addRule(_2ad,_2ae,_2af);
}else{
return null;
}
}
};
dojo.html.removeCssRule=function(_2b1){
if(!dojo.html.styleSheet){
dojo.debug("no stylesheet defined for removing rules");
return false;
}
if(dojo.render.html.ie){
if(!_2b1){
_2b1=dojo.html.styleSheet.rules.length;
dojo.html.styleSheet.removeRule(_2b1);
}
}else{
if(document.styleSheets[0]){
if(!_2b1){
_2b1=dojo.html.styleSheet.cssRules.length;
}
dojo.html.styleSheet.deleteRule(_2b1);
}
}
return true;
};
dojo.html._insertedCssFiles=[];
dojo.html.insertCssFile=function(URI,doc,_2b4,_2b5){
if(!URI){
return;
}
if(!doc){
doc=document;
}
var _2b6=dojo.hostenv.getText(URI,false,_2b5);
if(_2b6===null){
return;
}
_2b6=dojo.html.fixPathsInCssText(_2b6,URI);
if(_2b4){
var idx=-1,node,ent=dojo.html._insertedCssFiles;
for(var i=0;i<ent.length;i++){
if((ent[i].doc==doc)&&(ent[i].cssText==_2b6)){
idx=i;
node=ent[i].nodeRef;
break;
}
}
if(node){
var _2bb=doc.getElementsByTagName("style");
for(var i=0;i<_2bb.length;i++){
if(_2bb[i]==node){
return;
}
}
dojo.html._insertedCssFiles.shift(idx,1);
}
}
var _2bc=dojo.html.insertCssText(_2b6,doc);
dojo.html._insertedCssFiles.push({"doc":doc,"cssText":_2b6,"nodeRef":_2bc});
if(_2bc&&djConfig.isDebug){
_2bc.setAttribute("dbgHref",URI);
}
return _2bc;
};
dojo.html.insertCssText=function(_2bd,doc,URI){
if(!_2bd){
return;
}
if(!doc){
doc=document;
}
if(URI){
_2bd=dojo.html.fixPathsInCssText(_2bd,URI);
}
var _2c0=doc.createElement("style");
_2c0.setAttribute("type","text/css");
var head=doc.getElementsByTagName("head")[0];
if(!head){
dojo.debug("No head tag in document, aborting styles");
return;
}else{
head.appendChild(_2c0);
}
if(_2c0.styleSheet){
var _2c2=function(){
try{
_2c0.styleSheet.cssText=_2bd;
}
catch(e){
dojo.debug(e);
}
};
if(_2c0.styleSheet.disabled){
setTimeout(_2c2,10);
}else{
_2c2();
}
}else{
var _2c3=doc.createTextNode(_2bd);
_2c0.appendChild(_2c3);
}
return _2c0;
};
dojo.html.fixPathsInCssText=function(_2c4,URI){
if(!_2c4||!URI){
return;
}
var _2c6,str="",url="",_2c9="[\\t\\s\\w\\(\\)\\/\\.\\\\'\"-:#=&?~]+";
var _2ca=new RegExp("url\\(\\s*("+_2c9+")\\s*\\)");
var _2cb=/(file|https?|ftps?):\/\//;
regexTrim=new RegExp("^[\\s]*(['\"]?)("+_2c9+")\\1[\\s]*?$");
if(dojo.render.html.ie55||dojo.render.html.ie60){
var _2cc=new RegExp("AlphaImageLoader\\((.*)src=['\"]("+_2c9+")['\"]");
while(_2c6=_2cc.exec(_2c4)){
url=_2c6[2].replace(regexTrim,"$2");
if(!_2cb.exec(url)){
url=(new dojo.uri.Uri(URI,url).toString());
}
str+=_2c4.substring(0,_2c6.index)+"AlphaImageLoader("+_2c6[1]+"src='"+url+"'";
_2c4=_2c4.substr(_2c6.index+_2c6[0].length);
}
_2c4=str+_2c4;
str="";
}
while(_2c6=_2ca.exec(_2c4)){
url=_2c6[1].replace(regexTrim,"$2");
if(!_2cb.exec(url)){
url=(new dojo.uri.Uri(URI,url).toString());
}
str+=_2c4.substring(0,_2c6.index)+"url("+url+")";
_2c4=_2c4.substr(_2c6.index+_2c6[0].length);
}
return str+_2c4;
};
dojo.html.setActiveStyleSheet=function(_2cd){
var i=0,a,els=dojo.doc().getElementsByTagName("link");
while(a=els[i++]){
if(a.getAttribute("rel").indexOf("style")!=-1&&a.getAttribute("title")){
a.disabled=true;
if(a.getAttribute("title")==_2cd){
a.disabled=false;
}
}
}
};
dojo.html.getActiveStyleSheet=function(){
var i=0,a,els=dojo.doc().getElementsByTagName("link");
while(a=els[i++]){
if(a.getAttribute("rel").indexOf("style")!=-1&&a.getAttribute("title")&&!a.disabled){
return a.getAttribute("title");
}
}
return null;
};
dojo.html.getPreferredStyleSheet=function(){
var i=0,a,els=dojo.doc().getElementsByTagName("link");
while(a=els[i++]){
if(a.getAttribute("rel").indexOf("style")!=-1&&a.getAttribute("rel").indexOf("alt")==-1&&a.getAttribute("title")){
return a.getAttribute("title");
}
}
return null;
};
dojo.html.applyBrowserClass=function(node){
var drh=dojo.render.html;
var _2d9={dj_ie:drh.ie,dj_ie55:drh.ie55,dj_ie6:drh.ie60,dj_ie7:drh.ie70,dj_iequirks:drh.ie&&drh.quirks,dj_opera:drh.opera,dj_opera8:drh.opera&&(Math.floor(dojo.render.version)==8),dj_opera9:drh.opera&&(Math.floor(dojo.render.version)==9),dj_khtml:drh.khtml,dj_safari:drh.safari,dj_gecko:drh.mozilla};
for(var p in _2d9){
if(_2d9[p]){
dojo.html.addClass(node,p);
}
}
};
dojo.provide("dojo.html.display");
dojo.html._toggle=function(node,_2dc,_2dd){
node=dojo.byId(node);
_2dd(node,!_2dc(node));
return _2dc(node);
};
dojo.html.show=function(node){
node=dojo.byId(node);
if(dojo.html.getStyleProperty(node,"display")=="none"){
dojo.html.setStyle(node,"display",(node.dojoDisplayCache||""));
node.dojoDisplayCache=undefined;
}
};
dojo.html.hide=function(node){
node=dojo.byId(node);
if(typeof node["dojoDisplayCache"]=="undefined"){
var d=dojo.html.getStyleProperty(node,"display");
if(d!="none"){
node.dojoDisplayCache=d;
}
}
dojo.html.setStyle(node,"display","none");
};
dojo.html.setShowing=function(node,_2e2){
dojo.html[(_2e2?"show":"hide")](node);
};
dojo.html.isShowing=function(node){
return (dojo.html.getStyleProperty(node,"display")!="none");
};
dojo.html.toggleShowing=function(node){
return dojo.html._toggle(node,dojo.html.isShowing,dojo.html.setShowing);
};
dojo.html.displayMap={tr:"",td:"",th:"",img:"inline",span:"inline",input:"inline",button:"inline"};
dojo.html.suggestDisplayByTagName=function(node){
node=dojo.byId(node);
if(node&&node.tagName){
var tag=node.tagName.toLowerCase();
return (tag in dojo.html.displayMap?dojo.html.displayMap[tag]:"block");
}
};
dojo.html.setDisplay=function(node,_2e8){
dojo.html.setStyle(node,"display",((_2e8 instanceof String||typeof _2e8=="string")?_2e8:(_2e8?dojo.html.suggestDisplayByTagName(node):"none")));
};
dojo.html.isDisplayed=function(node){
return (dojo.html.getComputedStyle(node,"display")!="none");
};
dojo.html.toggleDisplay=function(node){
return dojo.html._toggle(node,dojo.html.isDisplayed,dojo.html.setDisplay);
};
dojo.html.setVisibility=function(node,_2ec){
dojo.html.setStyle(node,"visibility",((_2ec instanceof String||typeof _2ec=="string")?_2ec:(_2ec?"visible":"hidden")));
};
dojo.html.isVisible=function(node){
return (dojo.html.getComputedStyle(node,"visibility")!="hidden");
};
dojo.html.toggleVisibility=function(node){
return dojo.html._toggle(node,dojo.html.isVisible,dojo.html.setVisibility);
};
dojo.html.setOpacity=function(node,_2f0,_2f1){
node=dojo.byId(node);
var h=dojo.render.html;
if(!_2f1){
if(_2f0>=1){
if(h.ie){
dojo.html.clearOpacity(node);
return;
}else{
_2f0=0.999999;
}
}else{
if(_2f0<0){
_2f0=0;
}
}
}
if(h.ie){
if(node.nodeName.toLowerCase()=="tr"){
var tds=node.getElementsByTagName("td");
for(var x=0;x<tds.length;x++){
tds[x].style.filter="Alpha(Opacity="+_2f0*100+")";
}
}
node.style.filter="Alpha(Opacity="+_2f0*100+")";
}else{
if(h.moz){
node.style.opacity=_2f0;
node.style.MozOpacity=_2f0;
}else{
if(h.safari){
node.style.opacity=_2f0;
node.style.KhtmlOpacity=_2f0;
}else{
node.style.opacity=_2f0;
}
}
}
};
dojo.html.clearOpacity=function(node){
node=dojo.byId(node);
var ns=node.style;
var h=dojo.render.html;
if(h.ie){
try{
if(node.filters&&node.filters.alpha){
ns.filter="";
}
}
catch(e){
}
}else{
if(h.moz){
ns.opacity=1;
ns.MozOpacity=1;
}else{
if(h.safari){
ns.opacity=1;
ns.KhtmlOpacity=1;
}else{
ns.opacity=1;
}
}
}
};
dojo.html.getOpacity=function(node){
node=dojo.byId(node);
var h=dojo.render.html;
if(h.ie){
var opac=(node.filters&&node.filters.alpha&&typeof node.filters.alpha.opacity=="number"?node.filters.alpha.opacity:100)/100;
}else{
var opac=node.style.opacity||node.style.MozOpacity||node.style.KhtmlOpacity||1;
}
return opac>=0.999999?1:Number(opac);
};
dojo.provide("dojo.html.color");
dojo.html.getBackgroundColor=function(node){
node=dojo.byId(node);
var _2fc;
do{
_2fc=dojo.html.getStyle(node,"background-color");
if(_2fc.toLowerCase()=="rgba(0, 0, 0, 0)"){
_2fc="transparent";
}
if(node==document.getElementsByTagName("body")[0]){
node=null;
break;
}
node=node.parentNode;
}while(node&&dojo.lang.inArray(["transparent",""],_2fc));
if(_2fc=="transparent"){
_2fc=[255,255,255,0];
}else{
_2fc=dojo.gfx.color.extractRGB(_2fc);
}
return _2fc;
};
dojo.provide("dojo.html.layout");
dojo.html.sumAncestorProperties=function(node,prop){
node=dojo.byId(node);
if(!node){
return 0;
}
var _2ff=0;
while(node){
if(dojo.html.getComputedStyle(node,"position")=="fixed"){
return 0;
}
var val=node[prop];
if(val){
_2ff+=val-0;
if(node==dojo.body()){
break;
}
}
node=node.parentNode;
}
return _2ff;
};
dojo.html.setStyleAttributes=function(node,_302){
node=dojo.byId(node);
var _303=_302.replace(/(;)?\s*$/,"").split(";");
for(var i=0;i<_303.length;i++){
var _305=_303[i].split(":");
var name=_305[0].replace(/\s*$/,"").replace(/^\s*/,"").toLowerCase();
var _307=_305[1].replace(/\s*$/,"").replace(/^\s*/,"");
switch(name){
case "opacity":
dojo.html.setOpacity(node,_307);
break;
case "content-height":
dojo.html.setContentBox(node,{height:_307});
break;
case "content-width":
dojo.html.setContentBox(node,{width:_307});
break;
case "outer-height":
dojo.html.setMarginBox(node,{height:_307});
break;
case "outer-width":
dojo.html.setMarginBox(node,{width:_307});
break;
default:
node.style[dojo.html.toCamelCase(name)]=_307;
}
}
};
dojo.html.boxSizing={MARGIN_BOX:"margin-box",BORDER_BOX:"border-box",PADDING_BOX:"padding-box",CONTENT_BOX:"content-box"};
dojo.html.getAbsolutePosition=dojo.html.abs=function(node,_309,_30a){
node=dojo.byId(node,node.ownerDocument);
var ret={x:0,y:0};
var bs=dojo.html.boxSizing;
if(!_30a){
_30a=bs.CONTENT_BOX;
}
var _30d=2;
var _30e;
switch(_30a){
case bs.MARGIN_BOX:
_30e=3;
break;
case bs.BORDER_BOX:
_30e=2;
break;
case bs.PADDING_BOX:
default:
_30e=1;
break;
case bs.CONTENT_BOX:
_30e=0;
break;
}
var h=dojo.render.html;
var db=document["body"]||document["documentElement"];
if(h.ie){
with(node.getBoundingClientRect()){
ret.x=left-2;
ret.y=top-2;
}
}else{
if(document.getBoxObjectFor){
_30d=1;
try{
var bo=document.getBoxObjectFor(node);
ret.x=bo.x-dojo.html.sumAncestorProperties(node,"scrollLeft");
ret.y=bo.y-dojo.html.sumAncestorProperties(node,"scrollTop");
}
catch(e){
}
}else{
if(node["offsetParent"]){
var _312;
if((h.safari)&&(node.style.getPropertyValue("position")=="absolute")&&(node.parentNode==db)){
_312=db;
}else{
_312=db.parentNode;
}
if(node.parentNode!=db){
var nd=node;
if(dojo.render.html.opera){
nd=db;
}
ret.x-=dojo.html.sumAncestorProperties(nd,"scrollLeft");
ret.y-=dojo.html.sumAncestorProperties(nd,"scrollTop");
}
var _314=node;
do{
var n=_314["offsetLeft"];
if(!h.opera||n>0){
ret.x+=isNaN(n)?0:n;
}
var m=_314["offsetTop"];
ret.y+=isNaN(m)?0:m;
_314=_314.offsetParent;
}while((_314!=_312)&&(_314!=null));
}else{
if(node["x"]&&node["y"]){
ret.x+=isNaN(node.x)?0:node.x;
ret.y+=isNaN(node.y)?0:node.y;
}
}
}
}
if(_309){
var _317=dojo.html.getScroll();
ret.y+=_317.top;
ret.x+=_317.left;
}
var _318=[dojo.html.getPaddingExtent,dojo.html.getBorderExtent,dojo.html.getMarginExtent];
if(_30d>_30e){
for(var i=_30e;i<_30d;++i){
ret.y+=_318[i](node,"top");
ret.x+=_318[i](node,"left");
}
}else{
if(_30d<_30e){
for(var i=_30e;i>_30d;--i){
ret.y-=_318[i-1](node,"top");
ret.x-=_318[i-1](node,"left");
}
}
}
ret.top=ret.y;
ret.left=ret.x;
return ret;
};
dojo.html.isPositionAbsolute=function(node){
return (dojo.html.getComputedStyle(node,"position")=="absolute");
};
dojo.html._sumPixelValues=function(node,_31c,_31d){
var _31e=0;
for(var x=0;x<_31c.length;x++){
_31e+=dojo.html.getPixelValue(node,_31c[x],_31d);
}
return _31e;
};
dojo.html.getMargin=function(node){
return {width:dojo.html._sumPixelValues(node,["margin-left","margin-right"],(dojo.html.getComputedStyle(node,"position")=="absolute")),height:dojo.html._sumPixelValues(node,["margin-top","margin-bottom"],(dojo.html.getComputedStyle(node,"position")=="absolute"))};
};
dojo.html.getBorder=function(node){
return {width:dojo.html.getBorderExtent(node,"left")+dojo.html.getBorderExtent(node,"right"),height:dojo.html.getBorderExtent(node,"top")+dojo.html.getBorderExtent(node,"bottom")};
};
dojo.html.getBorderExtent=function(node,side){
return (dojo.html.getStyle(node,"border-"+side+"-style")=="none"?0:dojo.html.getPixelValue(node,"border-"+side+"-width"));
};
dojo.html.getMarginExtent=function(node,side){
return dojo.html._sumPixelValues(node,["margin-"+side],dojo.html.isPositionAbsolute(node));
};
dojo.html.getPaddingExtent=function(node,side){
return dojo.html._sumPixelValues(node,["padding-"+side],true);
};
dojo.html.getPadding=function(node){
return {width:dojo.html._sumPixelValues(node,["padding-left","padding-right"],true),height:dojo.html._sumPixelValues(node,["padding-top","padding-bottom"],true)};
};
dojo.html.getPadBorder=function(node){
var pad=dojo.html.getPadding(node);
var _32b=dojo.html.getBorder(node);
return {width:pad.width+_32b.width,height:pad.height+_32b.height};
};
dojo.html.getBoxSizing=function(node){
var h=dojo.render.html;
var bs=dojo.html.boxSizing;
if(((h.ie)||(h.opera))&&node.nodeName!="IMG"){
var cm=document["compatMode"];
if((cm=="BackCompat")||(cm=="QuirksMode")){
return bs.BORDER_BOX;
}else{
return bs.CONTENT_BOX;
}
}else{
if(arguments.length==0){
node=document.documentElement;
}
var _330=dojo.html.getStyle(node,"-moz-box-sizing");
if(!_330){
_330=dojo.html.getStyle(node,"box-sizing");
}
return (_330?_330:bs.CONTENT_BOX);
}
};
dojo.html.isBorderBox=function(node){
return (dojo.html.getBoxSizing(node)==dojo.html.boxSizing.BORDER_BOX);
};
dojo.html.getBorderBox=function(node){
node=dojo.byId(node);
return {width:node.offsetWidth,height:node.offsetHeight};
};
dojo.html.getPaddingBox=function(node){
var box=dojo.html.getBorderBox(node);
var _335=dojo.html.getBorder(node);
return {width:box.width-_335.width,height:box.height-_335.height};
};
dojo.html.getContentBox=function(node){
node=dojo.byId(node);
var _337=dojo.html.getPadBorder(node);
return {width:node.offsetWidth-_337.width,height:node.offsetHeight-_337.height};
};
dojo.html.setContentBox=function(node,args){
node=dojo.byId(node);
var _33a=0;
var _33b=0;
var isbb=dojo.html.isBorderBox(node);
var _33d=(isbb?dojo.html.getPadBorder(node):{width:0,height:0});
var ret={};
if(typeof args.width!="undefined"){
_33a=args.width+_33d.width;
ret.width=dojo.html.setPositivePixelValue(node,"width",_33a);
}
if(typeof args.height!="undefined"){
_33b=args.height+_33d.height;
ret.height=dojo.html.setPositivePixelValue(node,"height",_33b);
}
return ret;
};
dojo.html.getMarginBox=function(node){
var _340=dojo.html.getBorderBox(node);
var _341=dojo.html.getMargin(node);
return {width:_340.width+_341.width,height:_340.height+_341.height};
};
dojo.html.setMarginBox=function(node,args){
node=dojo.byId(node);
var _344=0;
var _345=0;
var isbb=dojo.html.isBorderBox(node);
var _347=(!isbb?dojo.html.getPadBorder(node):{width:0,height:0});
var _348=dojo.html.getMargin(node);
var ret={};
if(typeof args.width!="undefined"){
_344=args.width-_347.width;
_344-=_348.width;
ret.width=dojo.html.setPositivePixelValue(node,"width",_344);
}
if(typeof args.height!="undefined"){
_345=args.height-_347.height;
_345-=_348.height;
ret.height=dojo.html.setPositivePixelValue(node,"height",_345);
}
return ret;
};
dojo.html.getElementBox=function(node,type){
var bs=dojo.html.boxSizing;
switch(type){
case bs.MARGIN_BOX:
return dojo.html.getMarginBox(node);
case bs.BORDER_BOX:
return dojo.html.getBorderBox(node);
case bs.PADDING_BOX:
return dojo.html.getPaddingBox(node);
case bs.CONTENT_BOX:
default:
return dojo.html.getContentBox(node);
}
};
dojo.html.toCoordinateObject=dojo.html.toCoordinateArray=function(_34d,_34e,_34f){
if(_34d instanceof Array||typeof _34d=="array"){
dojo.deprecated("dojo.html.toCoordinateArray","use dojo.html.toCoordinateObject({left: , top: , width: , height: }) instead","0.5");
while(_34d.length<4){
_34d.push(0);
}
while(_34d.length>4){
_34d.pop();
}
var ret={left:_34d[0],top:_34d[1],width:_34d[2],height:_34d[3]};
}else{
if(!_34d.nodeType&&!(_34d instanceof String||typeof _34d=="string")&&("width" in _34d||"height" in _34d||"left" in _34d||"x" in _34d||"top" in _34d||"y" in _34d)){
var ret={left:_34d.left||_34d.x||0,top:_34d.top||_34d.y||0,width:_34d.width||0,height:_34d.height||0};
}else{
var node=dojo.byId(_34d);
var pos=dojo.html.abs(node,_34e,_34f);
var _353=dojo.html.getMarginBox(node);
var ret={left:pos.left,top:pos.top,width:_353.width,height:_353.height};
}
}
ret.x=ret.left;
ret.y=ret.top;
return ret;
};
dojo.html.setMarginBoxWidth=dojo.html.setOuterWidth=function(node,_355){
return dojo.html._callDeprecated("setMarginBoxWidth","setMarginBox",arguments,"width");
};
dojo.html.setMarginBoxHeight=dojo.html.setOuterHeight=function(){
return dojo.html._callDeprecated("setMarginBoxHeight","setMarginBox",arguments,"height");
};
dojo.html.getMarginBoxWidth=dojo.html.getOuterWidth=function(){
return dojo.html._callDeprecated("getMarginBoxWidth","getMarginBox",arguments,null,"width");
};
dojo.html.getMarginBoxHeight=dojo.html.getOuterHeight=function(){
return dojo.html._callDeprecated("getMarginBoxHeight","getMarginBox",arguments,null,"height");
};
dojo.html.getTotalOffset=function(node,type,_358){
return dojo.html._callDeprecated("getTotalOffset","getAbsolutePosition",arguments,null,type);
};
dojo.html.getAbsoluteX=function(node,_35a){
return dojo.html._callDeprecated("getAbsoluteX","getAbsolutePosition",arguments,null,"x");
};
dojo.html.getAbsoluteY=function(node,_35c){
return dojo.html._callDeprecated("getAbsoluteY","getAbsolutePosition",arguments,null,"y");
};
dojo.html.totalOffsetLeft=function(node,_35e){
return dojo.html._callDeprecated("totalOffsetLeft","getAbsolutePosition",arguments,null,"left");
};
dojo.html.totalOffsetTop=function(node,_360){
return dojo.html._callDeprecated("totalOffsetTop","getAbsolutePosition",arguments,null,"top");
};
dojo.html.getMarginWidth=function(node){
return dojo.html._callDeprecated("getMarginWidth","getMargin",arguments,null,"width");
};
dojo.html.getMarginHeight=function(node){
return dojo.html._callDeprecated("getMarginHeight","getMargin",arguments,null,"height");
};
dojo.html.getBorderWidth=function(node){
return dojo.html._callDeprecated("getBorderWidth","getBorder",arguments,null,"width");
};
dojo.html.getBorderHeight=function(node){
return dojo.html._callDeprecated("getBorderHeight","getBorder",arguments,null,"height");
};
dojo.html.getPaddingWidth=function(node){
return dojo.html._callDeprecated("getPaddingWidth","getPadding",arguments,null,"width");
};
dojo.html.getPaddingHeight=function(node){
return dojo.html._callDeprecated("getPaddingHeight","getPadding",arguments,null,"height");
};
dojo.html.getPadBorderWidth=function(node){
return dojo.html._callDeprecated("getPadBorderWidth","getPadBorder",arguments,null,"width");
};
dojo.html.getPadBorderHeight=function(node){
return dojo.html._callDeprecated("getPadBorderHeight","getPadBorder",arguments,null,"height");
};
dojo.html.getBorderBoxWidth=dojo.html.getInnerWidth=function(){
return dojo.html._callDeprecated("getBorderBoxWidth","getBorderBox",arguments,null,"width");
};
dojo.html.getBorderBoxHeight=dojo.html.getInnerHeight=function(){
return dojo.html._callDeprecated("getBorderBoxHeight","getBorderBox",arguments,null,"height");
};
dojo.html.getContentBoxWidth=dojo.html.getContentWidth=function(){
return dojo.html._callDeprecated("getContentBoxWidth","getContentBox",arguments,null,"width");
};
dojo.html.getContentBoxHeight=dojo.html.getContentHeight=function(){
return dojo.html._callDeprecated("getContentBoxHeight","getContentBox",arguments,null,"height");
};
dojo.html.setContentBoxWidth=dojo.html.setContentWidth=function(node,_36a){
return dojo.html._callDeprecated("setContentBoxWidth","setContentBox",arguments,"width");
};
dojo.html.setContentBoxHeight=dojo.html.setContentHeight=function(node,_36c){
return dojo.html._callDeprecated("setContentBoxHeight","setContentBox",arguments,"height");
};
dojo.provide("dojo.lfx.html");
dojo.lfx.html._byId=function(_36d){
if(!_36d){
return [];
}
if(dojo.lang.isArrayLike(_36d)){
if(!_36d.alreadyChecked){
var n=[];
dojo.lang.forEach(_36d,function(node){
n.push(dojo.byId(node));
});
n.alreadyChecked=true;
return n;
}else{
return _36d;
}
}else{
var n=[];
n.push(dojo.byId(_36d));
n.alreadyChecked=true;
return n;
}
};
dojo.lfx.html.propertyAnimation=function(_370,_371,_372,_373,_374){
_370=dojo.lfx.html._byId(_370);
var _375={"propertyMap":_371,"nodes":_370,"duration":_372,"easing":_373||dojo.lfx.easeDefault};
var _376=function(args){
if(args.nodes.length==1){
var pm=args.propertyMap;
if(!dojo.lang.isArray(args.propertyMap)){
var parr=[];
for(var _37a in pm){
pm[_37a].property=_37a;
parr.push(pm[_37a]);
}
pm=args.propertyMap=parr;
}
dojo.lang.forEach(pm,function(prop){
if(dj_undef("start",prop)){
if(prop.property!="opacity"){
prop.start=parseInt(dojo.html.getComputedStyle(args.nodes[0],prop.property));
}else{
prop.start=dojo.html.getOpacity(args.nodes[0]);
}
}
});
}
};
var _37c=function(_37d){
var _37e=[];
dojo.lang.forEach(_37d,function(c){
_37e.push(Math.round(c));
});
return _37e;
};
var _380=function(n,_382){
n=dojo.byId(n);
if(!n||!n.style){
return;
}
for(var s in _382){
try{
if(s=="opacity"){
dojo.html.setOpacity(n,_382[s]);
}else{
n.style[s]=_382[s];
}
}
catch(e){
dojo.debug(e);
}
}
};
var _384=function(_385){
this._properties=_385;
this.diffs=new Array(_385.length);
dojo.lang.forEach(_385,function(prop,i){
if(dojo.lang.isFunction(prop.start)){
prop.start=prop.start(prop,i);
}
if(dojo.lang.isFunction(prop.end)){
prop.end=prop.end(prop,i);
}
if(dojo.lang.isArray(prop.start)){
this.diffs[i]=null;
}else{
if(prop.start instanceof dojo.gfx.color.Color){
prop.startRgb=prop.start.toRgb();
prop.endRgb=prop.end.toRgb();
}else{
this.diffs[i]=prop.end-prop.start;
}
}
},this);
this.getValue=function(n){
var ret={};
dojo.lang.forEach(this._properties,function(prop,i){
var _38c=null;
if(dojo.lang.isArray(prop.start)){
}else{
if(prop.start instanceof dojo.gfx.color.Color){
_38c=(prop.units||"rgb")+"(";
for(var j=0;j<prop.startRgb.length;j++){
_38c+=Math.round(((prop.endRgb[j]-prop.startRgb[j])*n)+prop.startRgb[j])+(j<prop.startRgb.length-1?",":"");
}
_38c+=")";
}else{
_38c=((this.diffs[i])*n)+prop.start+(prop.property!="opacity"?prop.units||"px":"");
}
}
ret[dojo.html.toCamelCase(prop.property)]=_38c;
},this);
return ret;
};
};
var anim=new dojo.lfx.Animation({beforeBegin:function(){
_376(_375);
anim.curve=new _384(_375.propertyMap);
},onAnimate:function(_38f){
dojo.lang.forEach(_375.nodes,function(node){
_380(node,_38f);
});
}},_375.duration,null,_375.easing);
if(_374){
for(var x in _374){
if(dojo.lang.isFunction(_374[x])){
anim.connect(x,anim,_374[x]);
}
}
}
return anim;
};
dojo.lfx.html._makeFadeable=function(_392){
var _393=function(node){
if(dojo.render.html.ie){
if((node.style.zoom.length==0)&&(dojo.html.getStyle(node,"zoom")=="normal")){
node.style.zoom="1";
}
if((node.style.width.length==0)&&(dojo.html.getStyle(node,"width")=="auto")){
node.style.width="auto";
}
}
};
if(dojo.lang.isArrayLike(_392)){
dojo.lang.forEach(_392,_393);
}else{
_393(_392);
}
};
dojo.lfx.html.fade=function(_395,_396,_397,_398,_399){
_395=dojo.lfx.html._byId(_395);
var _39a={property:"opacity"};
if(!dj_undef("start",_396)){
_39a.start=_396.start;
}else{
_39a.start=function(){
return dojo.html.getOpacity(_395[0]);
};
}
if(!dj_undef("end",_396)){
_39a.end=_396.end;
}else{
dojo.raise("dojo.lfx.html.fade needs an end value");
}
var anim=dojo.lfx.propertyAnimation(_395,[_39a],_397,_398);
anim.connect("beforeBegin",function(){
dojo.lfx.html._makeFadeable(_395);
});
if(_399){
anim.connect("onEnd",function(){
_399(_395,anim);
});
}
return anim;
};
dojo.lfx.html.fadeIn=function(_39c,_39d,_39e,_39f){
return dojo.lfx.html.fade(_39c,{end:1},_39d,_39e,_39f);
};
dojo.lfx.html.fadeOut=function(_3a0,_3a1,_3a2,_3a3){
return dojo.lfx.html.fade(_3a0,{end:0},_3a1,_3a2,_3a3);
};
dojo.lfx.html.fadeShow=function(_3a4,_3a5,_3a6,_3a7){
_3a4=dojo.lfx.html._byId(_3a4);
dojo.lang.forEach(_3a4,function(node){
dojo.html.setOpacity(node,0);
});
var anim=dojo.lfx.html.fadeIn(_3a4,_3a5,_3a6,_3a7);
anim.connect("beforeBegin",function(){
if(dojo.lang.isArrayLike(_3a4)){
dojo.lang.forEach(_3a4,dojo.html.show);
}else{
dojo.html.show(_3a4);
}
});
return anim;
};
dojo.lfx.html.fadeHide=function(_3aa,_3ab,_3ac,_3ad){
var anim=dojo.lfx.html.fadeOut(_3aa,_3ab,_3ac,function(){
if(dojo.lang.isArrayLike(_3aa)){
dojo.lang.forEach(_3aa,dojo.html.hide);
}else{
dojo.html.hide(_3aa);
}
if(_3ad){
_3ad(_3aa,anim);
}
});
return anim;
};
dojo.lfx.html.wipeIn=function(_3af,_3b0,_3b1,_3b2){
_3af=dojo.lfx.html._byId(_3af);
var _3b3=[];
dojo.lang.forEach(_3af,function(node){
var _3b5={};
var _3b6,_3b7,_3b8;
with(node.style){
_3b6=top;
_3b7=left;
_3b8=position;
top="-9999px";
left="-9999px";
position="absolute";
display="";
}
var _3b9=dojo.html.getBorderBox(node).height;
with(node.style){
top=_3b6;
left=_3b7;
position=_3b8;
display="none";
}
var anim=dojo.lfx.propertyAnimation(node,{"height":{start:1,end:function(){
return _3b9;
}}},_3b0,_3b1);
anim.connect("beforeBegin",function(){
_3b5.overflow=node.style.overflow;
_3b5.height=node.style.height;
with(node.style){
overflow="hidden";
_3b9="1px";
}
dojo.html.show(node);
});
anim.connect("onEnd",function(){
with(node.style){
overflow=_3b5.overflow;
_3b9=_3b5.height;
}
if(_3b2){
_3b2(node,anim);
}
});
_3b3.push(anim);
});
return dojo.lfx.combine(_3b3);
};
dojo.lfx.html.wipeOut=function(_3bb,_3bc,_3bd,_3be){
_3bb=dojo.lfx.html._byId(_3bb);
var _3bf=[];
dojo.lang.forEach(_3bb,function(node){
var _3c1={};
var anim=dojo.lfx.propertyAnimation(node,{"height":{start:function(){
return dojo.html.getContentBox(node).height;
},end:1}},_3bc,_3bd,{"beforeBegin":function(){
_3c1.overflow=node.style.overflow;
_3c1.height=node.style.height;
with(node.style){
overflow="hidden";
}
dojo.html.show(node);
},"onEnd":function(){
dojo.html.hide(node);
with(node.style){
overflow=_3c1.overflow;
height=_3c1.height;
}
if(_3be){
_3be(node,anim);
}
}});
_3bf.push(anim);
});
return dojo.lfx.combine(_3bf);
};
dojo.lfx.html.slideTo=function(_3c3,_3c4,_3c5,_3c6,_3c7){
_3c3=dojo.lfx.html._byId(_3c3);
var _3c8=[];
var _3c9=dojo.html.getComputedStyle;
if(dojo.lang.isArray(_3c4)){
dojo.deprecated("dojo.lfx.html.slideTo(node, array)","use dojo.lfx.html.slideTo(node, {top: value, left: value});","0.5");
_3c4={top:_3c4[0],left:_3c4[1]};
}
dojo.lang.forEach(_3c3,function(node){
var top=null;
var left=null;
var init=(function(){
var _3ce=node;
return function(){
var pos=_3c9(_3ce,"position");
top=(pos=="absolute"?node.offsetTop:parseInt(_3c9(node,"top"))||0);
left=(pos=="absolute"?node.offsetLeft:parseInt(_3c9(node,"left"))||0);
if(!dojo.lang.inArray(["absolute","relative"],pos)){
var ret=dojo.html.abs(_3ce,true);
dojo.html.setStyleAttributes(_3ce,"position:absolute;top:"+ret.y+"px;left:"+ret.x+"px;");
top=ret.y;
left=ret.x;
}
};
})();
init();
var anim=dojo.lfx.propertyAnimation(node,{"top":{start:top,end:(_3c4.top||0)},"left":{start:left,end:(_3c4.left||0)}},_3c5,_3c6,{"beforeBegin":init});
if(_3c7){
anim.connect("onEnd",function(){
_3c7(_3c3,anim);
});
}
_3c8.push(anim);
});
return dojo.lfx.combine(_3c8);
};
dojo.lfx.html.slideBy=function(_3d2,_3d3,_3d4,_3d5,_3d6){
_3d2=dojo.lfx.html._byId(_3d2);
var _3d7=[];
var _3d8=dojo.html.getComputedStyle;
if(dojo.lang.isArray(_3d3)){
dojo.deprecated("dojo.lfx.html.slideBy(node, array)","use dojo.lfx.html.slideBy(node, {top: value, left: value});","0.5");
_3d3={top:_3d3[0],left:_3d3[1]};
}
dojo.lang.forEach(_3d2,function(node){
var top=null;
var left=null;
var init=(function(){
var _3dd=node;
return function(){
var pos=_3d8(_3dd,"position");
top=(pos=="absolute"?node.offsetTop:parseInt(_3d8(node,"top"))||0);
left=(pos=="absolute"?node.offsetLeft:parseInt(_3d8(node,"left"))||0);
if(!dojo.lang.inArray(["absolute","relative"],pos)){
var ret=dojo.html.abs(_3dd,true);
dojo.html.setStyleAttributes(_3dd,"position:absolute;top:"+ret.y+"px;left:"+ret.x+"px;");
top=ret.y;
left=ret.x;
}
};
})();
init();
var anim=dojo.lfx.propertyAnimation(node,{"top":{start:top,end:top+(_3d3.top||0)},"left":{start:left,end:left+(_3d3.left||0)}},_3d4,_3d5).connect("beforeBegin",init);
if(_3d6){
anim.connect("onEnd",function(){
_3d6(_3d2,anim);
});
}
_3d7.push(anim);
});
return dojo.lfx.combine(_3d7);
};
dojo.lfx.html.explode=function(_3e1,_3e2,_3e3,_3e4,_3e5){
var h=dojo.html;
_3e1=dojo.byId(_3e1);
_3e2=dojo.byId(_3e2);
var _3e7=h.toCoordinateObject(_3e1,true);
var _3e8=document.createElement("div");
h.copyStyle(_3e8,_3e2);
if(_3e2.explodeClassName){
_3e8.className=_3e2.explodeClassName;
}
with(_3e8.style){
position="absolute";
display="none";
var _3e9=h.getStyle(_3e1,"background-color");
backgroundColor=_3e9?_3e9.toLowerCase():"transparent";
backgroundColor=(backgroundColor=="transparent")?"rgb(221, 221, 221)":backgroundColor;
}
dojo.body().appendChild(_3e8);
with(_3e2.style){
visibility="hidden";
display="block";
}
var _3ea=h.toCoordinateObject(_3e2,true);
with(_3e2.style){
display="none";
visibility="visible";
}
var _3eb={opacity:{start:0.5,end:1}};
dojo.lang.forEach(["height","width","top","left"],function(type){
_3eb[type]={start:_3e7[type],end:_3ea[type]};
});
var anim=new dojo.lfx.propertyAnimation(_3e8,_3eb,_3e3,_3e4,{"beforeBegin":function(){
h.setDisplay(_3e8,"block");
},"onEnd":function(){
h.setDisplay(_3e2,"block");
_3e8.parentNode.removeChild(_3e8);
}});
if(_3e5){
anim.connect("onEnd",function(){
_3e5(_3e2,anim);
});
}
return anim;
};
dojo.lfx.html.implode=function(_3ee,end,_3f0,_3f1,_3f2){
var h=dojo.html;
_3ee=dojo.byId(_3ee);
end=dojo.byId(end);
var _3f4=dojo.html.toCoordinateObject(_3ee,true);
var _3f5=dojo.html.toCoordinateObject(end,true);
var _3f6=document.createElement("div");
dojo.html.copyStyle(_3f6,_3ee);
if(_3ee.explodeClassName){
_3f6.className=_3ee.explodeClassName;
}
dojo.html.setOpacity(_3f6,0.3);
with(_3f6.style){
position="absolute";
display="none";
backgroundColor=h.getStyle(_3ee,"background-color").toLowerCase();
}
dojo.body().appendChild(_3f6);
var _3f7={opacity:{start:1,end:0.5}};
dojo.lang.forEach(["height","width","top","left"],function(type){
_3f7[type]={start:_3f4[type],end:_3f5[type]};
});
var anim=new dojo.lfx.propertyAnimation(_3f6,_3f7,_3f0,_3f1,{"beforeBegin":function(){
dojo.html.hide(_3ee);
dojo.html.show(_3f6);
},"onEnd":function(){
_3f6.parentNode.removeChild(_3f6);
}});
if(_3f2){
anim.connect("onEnd",function(){
_3f2(_3ee,anim);
});
}
return anim;
};
dojo.lfx.html.highlight=function(_3fa,_3fb,_3fc,_3fd,_3fe){
_3fa=dojo.lfx.html._byId(_3fa);
var _3ff=[];
dojo.lang.forEach(_3fa,function(node){
var _401=dojo.html.getBackgroundColor(node);
var bg=dojo.html.getStyle(node,"background-color").toLowerCase();
var _403=dojo.html.getStyle(node,"background-image");
var _404=(bg=="transparent"||bg=="rgba(0, 0, 0, 0)");
while(_401.length>3){
_401.pop();
}
var rgb=new dojo.gfx.color.Color(_3fb);
var _406=new dojo.gfx.color.Color(_401);
var anim=dojo.lfx.propertyAnimation(node,{"background-color":{start:rgb,end:_406}},_3fc,_3fd,{"beforeBegin":function(){
if(_403){
node.style.backgroundImage="none";
}
node.style.backgroundColor="rgb("+rgb.toRgb().join(",")+")";
},"onEnd":function(){
if(_403){
node.style.backgroundImage=_403;
}
if(_404){
node.style.backgroundColor="transparent";
}
if(_3fe){
_3fe(node,anim);
}
}});
_3ff.push(anim);
});
return dojo.lfx.combine(_3ff);
};
dojo.lfx.html.unhighlight=function(_408,_409,_40a,_40b,_40c){
_408=dojo.lfx.html._byId(_408);
var _40d=[];
dojo.lang.forEach(_408,function(node){
var _40f=new dojo.gfx.color.Color(dojo.html.getBackgroundColor(node));
var rgb=new dojo.gfx.color.Color(_409);
var _411=dojo.html.getStyle(node,"background-image");
var anim=dojo.lfx.propertyAnimation(node,{"background-color":{start:_40f,end:rgb}},_40a,_40b,{"beforeBegin":function(){
if(_411){
node.style.backgroundImage="none";
}
node.style.backgroundColor="rgb("+_40f.toRgb().join(",")+")";
},"onEnd":function(){
if(_40c){
_40c(node,anim);
}
}});
_40d.push(anim);
});
return dojo.lfx.combine(_40d);
};
dojo.lang.mixin(dojo.lfx,dojo.lfx.html);


__CPAN_EDITION__ lfx build.txt

Files baked into this package:

dojoGuardStart.js,
../src/bootstrap1.js,
../src/loader.js,
dojoGuardEnd.js,
../src/hostenv_browser.js,
../src/bootstrap2.js,
../src/lang/common.js,
../src/lang/array.js,
../src/gfx/color.js,
../src/lang/func.js,
../src/lfx/Animation.js,
../src/dom.js,
../src/html/common.js,
../src/uri/Uri.js,
../src/html/style.js,
../src/html/display.js,
../src/html/color.js,
../src/html/layout.js,
../src/lfx/html.js

		
__CPAN_EDITION__ minimal dojo.js
/*
	Copyright (c) 2004-2006, The Dojo Foundation
	All Rights Reserved.

	Licensed under the Academic Free License version 2.1 or above OR the
	modified BSD license. For more information on Dojo licensing, see:

		http://dojotoolkit.org/community/licensing.shtml
*/

/*
	This is a compiled version of Dojo, built for deployment and not for
	development. To get an editable version, please visit:

		http://dojotoolkit.org

	for documentation and information on getting the source.
*/

if(typeof dojo=="undefined"){
var dj_global=this;
var dj_currentContext=this;
function dj_undef(_1,_2){
return (typeof (_2||dj_currentContext)[_1]=="undefined");
}
if(dj_undef("djConfig",this)){
var djConfig={};
}
if(dj_undef("dojo",this)){
var dojo={};
}
dojo.global=function(){
return dj_currentContext;
};
dojo.locale=djConfig.locale;
dojo.version={major:0,minor:4,patch:1,flag:"",revision:Number("$Rev: 6824 $".match(/[0-9]+/)[0]),toString:function(){
with(dojo.version){
return major+"."+minor+"."+patch+flag+" ("+revision+")";
}
}};
dojo.evalProp=function(_3,_4,_5){
if((!_4)||(!_3)){
return undefined;
}
if(!dj_undef(_3,_4)){
return _4[_3];
}
return (_5?(_4[_3]={}):undefined);
};
dojo.parseObjPath=function(_6,_7,_8){
var _9=(_7||dojo.global());
var _a=_6.split(".");
var _b=_a.pop();
for(var i=0,l=_a.length;i<l&&_9;i++){
_9=dojo.evalProp(_a[i],_9,_8);
}
return {obj:_9,prop:_b};
};
dojo.evalObjPath=function(_e,_f){
if(typeof _e!="string"){
return dojo.global();
}
if(_e.indexOf(".")==-1){
return dojo.evalProp(_e,dojo.global(),_f);
}
var ref=dojo.parseObjPath(_e,dojo.global(),_f);
if(ref){
return dojo.evalProp(ref.prop,ref.obj,_f);
}
return null;
};
dojo.errorToString=function(_11){
if(!dj_undef("message",_11)){
return _11.message;
}else{
if(!dj_undef("description",_11)){
return _11.description;
}else{
return _11;
}
}
};
dojo.raise=function(_12,_13){
if(_13){
_12=_12+": "+dojo.errorToString(_13);
}else{
_12=dojo.errorToString(_12);
}
try{
if(djConfig.isDebug){
dojo.hostenv.println("FATAL exception raised: "+_12);
}
}
catch(e){
}
throw _13||Error(_12);
};
dojo.debug=function(){
};
dojo.debugShallow=function(obj){
};
dojo.profile={start:function(){
},end:function(){
},stop:function(){
},dump:function(){
}};
function dj_eval(_15){
return dj_global.eval?dj_global.eval(_15):eval(_15);
}
dojo.unimplemented=function(_16,_17){
var _18="'"+_16+"' not implemented";
if(_17!=null){
_18+=" "+_17;
}
dojo.raise(_18);
};
dojo.deprecated=function(_19,_1a,_1b){
var _1c="DEPRECATED: "+_19;
if(_1a){
_1c+=" "+_1a;
}
if(_1b){
_1c+=" -- will be removed in version: "+_1b;
}
dojo.debug(_1c);
};
dojo.render=(function(){
function vscaffold(_1d,_1e){
var tmp={capable:false,support:{builtin:false,plugin:false},prefixes:_1d};
for(var i=0;i<_1e.length;i++){
tmp[_1e[i]]=false;
}
return tmp;
}
return {name:"",ver:dojo.version,os:{win:false,linux:false,osx:false},html:vscaffold(["html"],["ie","opera","khtml","safari","moz"]),svg:vscaffold(["svg"],["corel","adobe","batik"]),vml:vscaffold(["vml"],["ie"]),swf:vscaffold(["Swf","Flash","Mm"],["mm"]),swt:vscaffold(["Swt"],["ibm"])};
})();
dojo.hostenv=(function(){
var _21={isDebug:false,allowQueryConfig:false,baseScriptUri:"",baseRelativePath:"",libraryScriptUri:"",iePreventClobber:false,ieClobberMinimal:true,preventBackButtonFix:true,delayMozLoadingFix:false,searchIds:[],parseWidgets:true};
if(typeof djConfig=="undefined"){
djConfig=_21;
}else{
for(var _22 in _21){
if(typeof djConfig[_22]=="undefined"){
djConfig[_22]=_21[_22];
}
}
}
return {name_:"(unset)",version_:"(unset)",getName:function(){
return this.name_;
},getVersion:function(){
return this.version_;
},getText:function(uri){
dojo.unimplemented("getText","uri="+uri);
}};
})();
dojo.hostenv.getBaseScriptUri=function(){
if(djConfig.baseScriptUri.length){
return djConfig.baseScriptUri;
}
var uri=new String(djConfig.libraryScriptUri||djConfig.baseRelativePath);
if(!uri){
dojo.raise("Nothing returned by getLibraryScriptUri(): "+uri);
}
var _25=uri.lastIndexOf("/");
djConfig.baseScriptUri=djConfig.baseRelativePath;
return djConfig.baseScriptUri;
};
(function(){
var _26={pkgFileName:"__package__",loading_modules_:{},loaded_modules_:{},addedToLoadingCount:[],removedFromLoadingCount:[],inFlightCount:0,modulePrefixes_:{dojo:{name:"dojo",value:"src"}},setModulePrefix:function(_27,_28){
this.modulePrefixes_[_27]={name:_27,value:_28};
},moduleHasPrefix:function(_29){
var mp=this.modulePrefixes_;
return Boolean(mp[_29]&&mp[_29].value);
},getModulePrefix:function(_2b){
if(this.moduleHasPrefix(_2b)){
return this.modulePrefixes_[_2b].value;
}
return _2b;
},getTextStack:[],loadUriStack:[],loadedUris:[],post_load_:false,modulesLoadedListeners:[],unloadListeners:[],loadNotifying:false};
for(var _2c in _26){
dojo.hostenv[_2c]=_26[_2c];
}
})();
dojo.hostenv.loadPath=function(_2d,_2e,cb){
var uri;
if(_2d.charAt(0)=="/"||_2d.match(/^\w+:/)){
uri=_2d;
}else{
uri=this.getBaseScriptUri()+_2d;
}
if(djConfig.cacheBust&&dojo.render.html.capable){
uri+="?"+String(djConfig.cacheBust).replace(/\W+/g,"");
}
try{
return !_2e?this.loadUri(uri,cb):this.loadUriAndCheck(uri,_2e,cb);
}
catch(e){
dojo.debug(e);
return false;
}
};
dojo.hostenv.loadUri=function(uri,cb){
if(this.loadedUris[uri]){
return true;
}
var _33=this.getText(uri,null,true);
if(!_33){
return false;
}
this.loadedUris[uri]=true;
if(cb){
_33="("+_33+")";
}
var _34=dj_eval(_33);
if(cb){
cb(_34);
}
return true;
};
dojo.hostenv.loadUriAndCheck=function(uri,_36,cb){
var ok=true;
try{
ok=this.loadUri(uri,cb);
}
catch(e){
dojo.debug("failed loading ",uri," with error: ",e);
}
return Boolean(ok&&this.findModule(_36,false));
};
dojo.loaded=function(){
};
dojo.unloaded=function(){
};
dojo.hostenv.loaded=function(){
this.loadNotifying=true;
this.post_load_=true;
var mll=this.modulesLoadedListeners;
for(var x=0;x<mll.length;x++){
mll[x]();
}
this.modulesLoadedListeners=[];
this.loadNotifying=false;
dojo.loaded();
};
dojo.hostenv.unloaded=function(){
var mll=this.unloadListeners;
while(mll.length){
(mll.pop())();
}
dojo.unloaded();
};
dojo.addOnLoad=function(obj,_3d){
var dh=dojo.hostenv;
if(arguments.length==1){
dh.modulesLoadedListeners.push(obj);
}else{
if(arguments.length>1){
dh.modulesLoadedListeners.push(function(){
obj[_3d]();
});
}
}
if(dh.post_load_&&dh.inFlightCount==0&&!dh.loadNotifying){
dh.callLoaded();
}
};
dojo.addOnUnload=function(obj,_40){
var dh=dojo.hostenv;
if(arguments.length==1){
dh.unloadListeners.push(obj);
}else{
if(arguments.length>1){
dh.unloadListeners.push(function(){
obj[_40]();
});
}
}
};
dojo.hostenv.modulesLoaded=function(){
if(this.post_load_){
return;
}
if(this.loadUriStack.length==0&&this.getTextStack.length==0){
if(this.inFlightCount>0){
dojo.debug("files still in flight!");
return;
}
dojo.hostenv.callLoaded();
}
};
dojo.hostenv.callLoaded=function(){
if(typeof setTimeout=="object"){
setTimeout("dojo.hostenv.loaded();",0);
}else{
dojo.hostenv.loaded();
}
};
dojo.hostenv.getModuleSymbols=function(_42){
var _43=_42.split(".");
for(var i=_43.length;i>0;i--){
var _45=_43.slice(0,i).join(".");
if((i==1)&&!this.moduleHasPrefix(_45)){
_43[0]="../"+_43[0];
}else{
var _46=this.getModulePrefix(_45);
if(_46!=_45){
_43.splice(0,i,_46);
break;
}
}
}
return _43;
};
dojo.hostenv._global_omit_module_check=false;
dojo.hostenv.loadModule=function(_47,_48,_49){
if(!_47){
return;
}
_49=this._global_omit_module_check||_49;
var _4a=this.findModule(_47,false);
if(_4a){
return _4a;
}
if(dj_undef(_47,this.loading_modules_)){
this.addedToLoadingCount.push(_47);
}
this.loading_modules_[_47]=1;
var _4b=_47.replace(/\./g,"/")+".js";
var _4c=_47.split(".");
var _4d=this.getModuleSymbols(_47);
var _4e=((_4d[0].charAt(0)!="/")&&!_4d[0].match(/^\w+:/));
var _4f=_4d[_4d.length-1];
var ok;
if(_4f=="*"){
_47=_4c.slice(0,-1).join(".");
while(_4d.length){
_4d.pop();
_4d.push(this.pkgFileName);
_4b=_4d.join("/")+".js";
if(_4e&&_4b.charAt(0)=="/"){
_4b=_4b.slice(1);
}
ok=this.loadPath(_4b,!_49?_47:null);
if(ok){
break;
}
_4d.pop();
}
}else{
_4b=_4d.join("/")+".js";
_47=_4c.join(".");
var _51=!_49?_47:null;
ok=this.loadPath(_4b,_51);
if(!ok&&!_48){
_4d.pop();
while(_4d.length){
_4b=_4d.join("/")+".js";
ok=this.loadPath(_4b,_51);
if(ok){
break;
}
_4d.pop();
_4b=_4d.join("/")+"/"+this.pkgFileName+".js";
if(_4e&&_4b.charAt(0)=="/"){
_4b=_4b.slice(1);
}
ok=this.loadPath(_4b,_51);
if(ok){
break;
}
}
}
if(!ok&&!_49){
dojo.raise("Could not load '"+_47+"'; last tried '"+_4b+"'");
}
}
if(!_49&&!this["isXDomain"]){
_4a=this.findModule(_47,false);
if(!_4a){
dojo.raise("symbol '"+_47+"' is not defined after loading '"+_4b+"'");
}
}
return _4a;
};
dojo.hostenv.startPackage=function(_52){
var _53=String(_52);
var _54=_53;
var _55=_52.split(/\./);
if(_55[_55.length-1]=="*"){
_55.pop();
_54=_55.join(".");
}
var _56=dojo.evalObjPath(_54,true);
this.loaded_modules_[_53]=_56;
this.loaded_modules_[_54]=_56;
return _56;
};
dojo.hostenv.findModule=function(_57,_58){
var lmn=String(_57);
if(this.loaded_modules_[lmn]){
return this.loaded_modules_[lmn];
}
if(_58){
dojo.raise("no loaded module named '"+_57+"'");
}
return null;
};
dojo.kwCompoundRequire=function(_5a){
var _5b=_5a["common"]||[];
var _5c=_5a[dojo.hostenv.name_]?_5b.concat(_5a[dojo.hostenv.name_]||[]):_5b.concat(_5a["default"]||[]);
for(var x=0;x<_5c.length;x++){
var _5e=_5c[x];
if(_5e.constructor==Array){
dojo.hostenv.loadModule.apply(dojo.hostenv,_5e);
}else{
dojo.hostenv.loadModule(_5e);
}
}
};
dojo.require=function(_5f){
dojo.hostenv.loadModule.apply(dojo.hostenv,arguments);
};
dojo.requireIf=function(_60,_61){
var _62=arguments[0];
if((_62===true)||(_62=="common")||(_62&&dojo.render[_62].capable)){
var _63=[];
for(var i=1;i<arguments.length;i++){
_63.push(arguments[i]);
}
dojo.require.apply(dojo,_63);
}
};
dojo.requireAfterIf=dojo.requireIf;
dojo.provide=function(_65){
return dojo.hostenv.startPackage.apply(dojo.hostenv,arguments);
};
dojo.registerModulePath=function(_66,_67){
return dojo.hostenv.setModulePrefix(_66,_67);
};
dojo.setModulePrefix=function(_68,_69){
dojo.deprecated("dojo.setModulePrefix(\""+_68+"\", \""+_69+"\")","replaced by dojo.registerModulePath","0.5");
return dojo.registerModulePath(_68,_69);
};
dojo.exists=function(obj,_6b){
var p=_6b.split(".");
for(var i=0;i<p.length;i++){
if(!obj[p[i]]){
return false;
}
obj=obj[p[i]];
}
return true;
};
dojo.hostenv.normalizeLocale=function(_6e){
var _6f=_6e?_6e.toLowerCase():dojo.locale;
if(_6f=="root"){
_6f="ROOT";
}
return _6f;
};
dojo.hostenv.searchLocalePath=function(_70,_71,_72){
_70=dojo.hostenv.normalizeLocale(_70);
var _73=_70.split("-");
var _74=[];
for(var i=_73.length;i>0;i--){
_74.push(_73.slice(0,i).join("-"));
}
_74.push(false);
if(_71){
_74.reverse();
}
for(var j=_74.length-1;j>=0;j--){
var loc=_74[j]||"ROOT";
var _78=_72(loc);
if(_78){
break;
}
}
};
dojo.hostenv.localesGenerated;
dojo.hostenv.registerNlsPrefix=function(){
dojo.registerModulePath("nls","nls");
};
dojo.hostenv.preloadLocalizations=function(){
if(dojo.hostenv.localesGenerated){
dojo.hostenv.registerNlsPrefix();
function preload(_79){
_79=dojo.hostenv.normalizeLocale(_79);
dojo.hostenv.searchLocalePath(_79,true,function(loc){
for(var i=0;i<dojo.hostenv.localesGenerated.length;i++){
if(dojo.hostenv.localesGenerated[i]==loc){
dojo["require"]("nls.dojo_"+loc);
return true;
}
}
return false;
});
}
preload();
var _7c=djConfig.extraLocale||[];
for(var i=0;i<_7c.length;i++){
preload(_7c[i]);
}
}
dojo.hostenv.preloadLocalizations=function(){
};
};
dojo.requireLocalization=function(_7e,_7f,_80,_81){
dojo.hostenv.preloadLocalizations();
var _82=dojo.hostenv.normalizeLocale(_80);
var _83=[_7e,"nls",_7f].join(".");
var _84="";
if(_81){
var _85=_81.split(",");
for(var i=0;i<_85.length;i++){
if(_82.indexOf(_85[i])==0){
if(_85[i].length>_84.length){
_84=_85[i];
}
}
}
if(!_84){
_84="ROOT";
}
}
var _87=_81?_84:_82;
var _88=dojo.hostenv.findModule(_83);
var _89=null;
if(_88){
if(djConfig.localizationComplete&&_88._built){
return;
}
var _8a=_87.replace("-","_");
var _8b=_83+"."+_8a;
_89=dojo.hostenv.findModule(_8b);
}
if(!_89){
_88=dojo.hostenv.startPackage(_83);
var _8c=dojo.hostenv.getModuleSymbols(_7e);
var _8d=_8c.concat("nls").join("/");
var _8e;
dojo.hostenv.searchLocalePath(_87,_81,function(loc){
var _90=loc.replace("-","_");
var _91=_83+"."+_90;
var _92=false;
if(!dojo.hostenv.findModule(_91)){
dojo.hostenv.startPackage(_91);
var _93=[_8d];
if(loc!="ROOT"){
_93.push(loc);
}
_93.push(_7f);
var _94=_93.join("/")+".js";
_92=dojo.hostenv.loadPath(_94,null,function(_95){
var _96=function(){
};
_96.prototype=_8e;
_88[_90]=new _96();
for(var j in _95){
_88[_90][j]=_95[j];
}
});
}else{
_92=true;
}
if(_92&&_88[_90]){
_8e=_88[_90];
}else{
_88[_90]=_8e;
}
if(_81){
return true;
}
});
}
if(_81&&_82!=_84){
_88[_82.replace("-","_")]=_88[_84.replace("-","_")];
}
};
(function(){
var _98=djConfig.extraLocale;
if(_98){
if(!_98 instanceof Array){
_98=[_98];
}
var req=dojo.requireLocalization;
dojo.requireLocalization=function(m,b,_9c,_9d){
req(m,b,_9c,_9d);
if(_9c){
return;
}
for(var i=0;i<_98.length;i++){
req(m,b,_98[i],_9d);
}
};
}
})();
}
if(typeof window!="undefined"){
(function(){
if(djConfig.allowQueryConfig){
var _9f=document.location.toString();
var _a0=_9f.split("?",2);
if(_a0.length>1){
var _a1=_a0[1];
var _a2=_a1.split("&");
for(var x in _a2){
var sp=_a2[x].split("=");
if((sp[0].length>9)&&(sp[0].substr(0,9)=="djConfig.")){
var opt=sp[0].substr(9);
try{
djConfig[opt]=eval(sp[1]);
}
catch(e){
djConfig[opt]=sp[1];
}
}
}
}
}
if(((djConfig["baseScriptUri"]=="")||(djConfig["baseRelativePath"]==""))&&(document&&document.getElementsByTagName)){
var _a6=document.getElementsByTagName("script");
var _a7=/(__package__|dojo|bootstrap1)\.js([\?\.]|$)/i;
for(var i=0;i<_a6.length;i++){
var src=_a6[i].getAttribute("src");
if(!src){
continue;
}
var m=src.match(_a7);
if(m){
var _ab=src.substring(0,m.index);
if(src.indexOf("bootstrap1")>-1){
_ab+="../";
}
if(!this["djConfig"]){
djConfig={};
}
if(djConfig["baseScriptUri"]==""){
djConfig["baseScriptUri"]=_ab;
}
if(djConfig["baseRelativePath"]==""){
djConfig["baseRelativePath"]=_ab;
}
break;
}
}
}
var dr=dojo.render;
var drh=dojo.render.html;
var drs=dojo.render.svg;
var dua=(drh.UA=navigator.userAgent);
var dav=(drh.AV=navigator.appVersion);
var t=true;
var f=false;
drh.capable=t;
drh.support.builtin=t;
dr.ver=parseFloat(drh.AV);
dr.os.mac=dav.indexOf("Macintosh")>=0;
dr.os.win=dav.indexOf("Windows")>=0;
dr.os.linux=dav.indexOf("X11")>=0;
drh.opera=dua.indexOf("Opera")>=0;
drh.khtml=(dav.indexOf("Konqueror")>=0)||(dav.indexOf("Safari")>=0);
drh.safari=dav.indexOf("Safari")>=0;
var _b3=dua.indexOf("Gecko");
drh.mozilla=drh.moz=(_b3>=0)&&(!drh.khtml);
if(drh.mozilla){
drh.geckoVersion=dua.substring(_b3+6,_b3+14);
}
drh.ie=(document.all)&&(!drh.opera);
drh.ie50=drh.ie&&dav.indexOf("MSIE 5.0")>=0;
drh.ie55=drh.ie&&dav.indexOf("MSIE 5.5")>=0;
drh.ie60=drh.ie&&dav.indexOf("MSIE 6.0")>=0;
drh.ie70=drh.ie&&dav.indexOf("MSIE 7.0")>=0;
var cm=document["compatMode"];
drh.quirks=(cm=="BackCompat")||(cm=="QuirksMode")||drh.ie55||drh.ie50;
dojo.locale=dojo.locale||(drh.ie?navigator.userLanguage:navigator.language).toLowerCase();
dr.vml.capable=drh.ie;
drs.capable=f;
drs.support.plugin=f;
drs.support.builtin=f;
var _b5=window["document"];
var tdi=_b5["implementation"];
if((tdi)&&(tdi["hasFeature"])&&(tdi.hasFeature("org.w3c.dom.svg","1.0"))){
drs.capable=t;
drs.support.builtin=t;
drs.support.plugin=f;
}
if(drh.safari){
var tmp=dua.split("AppleWebKit/")[1];
var ver=parseFloat(tmp.split(" ")[0]);
if(ver>=420){
drs.capable=t;
drs.support.builtin=t;
drs.support.plugin=f;
}
}else{
}
})();
dojo.hostenv.startPackage("dojo.hostenv");
dojo.render.name=dojo.hostenv.name_="browser";
dojo.hostenv.searchIds=[];
dojo.hostenv._XMLHTTP_PROGIDS=["Msxml2.XMLHTTP","Microsoft.XMLHTTP","Msxml2.XMLHTTP.4.0"];
dojo.hostenv.getXmlhttpObject=function(){
var _b9=null;
var _ba=null;
try{
_b9=new XMLHttpRequest();
}
catch(e){
}
if(!_b9){
for(var i=0;i<3;++i){
var _bc=dojo.hostenv._XMLHTTP_PROGIDS[i];
try{
_b9=new ActiveXObject(_bc);
}
catch(e){
_ba=e;
}
if(_b9){
dojo.hostenv._XMLHTTP_PROGIDS=[_bc];
break;
}
}
}
if(!_b9){
return dojo.raise("XMLHTTP not available",_ba);
}
return _b9;
};
dojo.hostenv._blockAsync=false;
dojo.hostenv.getText=function(uri,_be,_bf){
if(!_be){
this._blockAsync=true;
}
var _c0=this.getXmlhttpObject();
function isDocumentOk(_c1){
var _c2=_c1["status"];
return Boolean((!_c2)||((200<=_c2)&&(300>_c2))||(_c2==304));
}
if(_be){
var _c3=this,_c4=null,gbl=dojo.global();
var xhr=dojo.evalObjPath("dojo.io.XMLHTTPTransport");
_c0.onreadystatechange=function(){
if(_c4){
gbl.clearTimeout(_c4);
_c4=null;
}
if(_c3._blockAsync||(xhr&&xhr._blockAsync)){
_c4=gbl.setTimeout(function(){
_c0.onreadystatechange.apply(this);
},10);
}else{
if(4==_c0.readyState){
if(isDocumentOk(_c0)){
_be(_c0.responseText);
}
}
}
};
}
_c0.open("GET",uri,_be?true:false);
try{
_c0.send(null);
if(_be){
return null;
}
if(!isDocumentOk(_c0)){
var err=Error("Unable to load "+uri+" status:"+_c0.status);
err.status=_c0.status;
err.responseText=_c0.responseText;
throw err;
}
}
catch(e){
this._blockAsync=false;
if((_bf)&&(!_be)){
return null;
}else{
throw e;
}
}
this._blockAsync=false;
return _c0.responseText;
};
dojo.hostenv.defaultDebugContainerId="dojoDebug";
dojo.hostenv._println_buffer=[];
dojo.hostenv._println_safe=false;
dojo.hostenv.println=function(_c8){
if(!dojo.hostenv._println_safe){
dojo.hostenv._println_buffer.push(_c8);
}else{
try{
var _c9=document.getElementById(djConfig.debugContainerId?djConfig.debugContainerId:dojo.hostenv.defaultDebugContainerId);
if(!_c9){
_c9=dojo.body();
}
var div=document.createElement("div");
div.appendChild(document.createTextNode(_c8));
_c9.appendChild(div);
}
catch(e){
try{
document.write("<div>"+_c8+"</div>");
}
catch(e2){
window.status=_c8;
}
}
}
};
dojo.addOnLoad(function(){
dojo.hostenv._println_safe=true;
while(dojo.hostenv._println_buffer.length>0){
dojo.hostenv.println(dojo.hostenv._println_buffer.shift());
}
});
function dj_addNodeEvtHdlr(_cb,_cc,fp){
var _ce=_cb["on"+_cc]||function(){
};
_cb["on"+_cc]=function(){
fp.apply(_cb,arguments);
_ce.apply(_cb,arguments);
};
return true;
}
function dj_load_init(e){
var _d0=(e&&e.type)?e.type.toLowerCase():"load";
if(arguments.callee.initialized||(_d0!="domcontentloaded"&&_d0!="load")){
return;
}
arguments.callee.initialized=true;
if(typeof (_timer)!="undefined"){
clearInterval(_timer);
delete _timer;
}
var _d1=function(){
if(dojo.render.html.ie){
dojo.hostenv.makeWidgets();
}
};
if(dojo.hostenv.inFlightCount==0){
_d1();
dojo.hostenv.modulesLoaded();
}else{
dojo.hostenv.modulesLoadedListeners.unshift(_d1);
}
}
if(document.addEventListener){
if(dojo.render.html.opera||(dojo.render.html.moz&&!djConfig.delayMozLoadingFix)){
document.addEventListener("DOMContentLoaded",dj_load_init,null);
}
window.addEventListener("load",dj_load_init,null);
}
if(dojo.render.html.ie&&dojo.render.os.win){
document.attachEvent("onreadystatechange",function(e){
if(document.readyState=="complete"){
dj_load_init();
}
});
}
if(/(WebKit|khtml)/i.test(navigator.userAgent)){
var _timer=setInterval(function(){
if(/loaded|complete/.test(document.readyState)){
dj_load_init();
}
},10);
}
if(dojo.render.html.ie){
dj_addNodeEvtHdlr(window,"beforeunload",function(){
dojo.hostenv._unloading=true;
window.setTimeout(function(){
dojo.hostenv._unloading=false;
},0);
});
}
dj_addNodeEvtHdlr(window,"unload",function(){
dojo.hostenv.unloaded();
if((!dojo.render.html.ie)||(dojo.render.html.ie&&dojo.hostenv._unloading)){
dojo.hostenv.unloaded();
}
});
dojo.hostenv.makeWidgets=function(){
var _d3=[];
if(djConfig.searchIds&&djConfig.searchIds.length>0){
_d3=_d3.concat(djConfig.searchIds);
}
if(dojo.hostenv.searchIds&&dojo.hostenv.searchIds.length>0){
_d3=_d3.concat(dojo.hostenv.searchIds);
}
if((djConfig.parseWidgets)||(_d3.length>0)){
if(dojo.evalObjPath("dojo.widget.Parse")){
var _d4=new dojo.xml.Parse();
if(_d3.length>0){
for(var x=0;x<_d3.length;x++){
var _d6=document.getElementById(_d3[x]);
if(!_d6){
continue;
}
var _d7=_d4.parseElement(_d6,null,true);
dojo.widget.getParser().createComponents(_d7);
}
}else{
if(djConfig.parseWidgets){
var _d7=_d4.parseElement(dojo.body(),null,true);
dojo.widget.getParser().createComponents(_d7);
}
}
}
}
};
dojo.addOnLoad(function(){
if(!dojo.render.html.ie){
dojo.hostenv.makeWidgets();
}
});
try{
if(dojo.render.html.ie){
document.namespaces.add("v","urn:schemas-microsoft-com:vml");
document.createStyleSheet().addRule("v\\:*","behavior:url(#default#VML)");
}
}
catch(e){
}
dojo.hostenv.writeIncludes=function(){
};
if(!dj_undef("document",this)){
dj_currentDocument=this.document;
}
dojo.doc=function(){
return dj_currentDocument;
};
dojo.body=function(){
return dojo.doc().body||dojo.doc().getElementsByTagName("body")[0];
};
dojo.byId=function(id,doc){
if((id)&&((typeof id=="string")||(id instanceof String))){
if(!doc){
doc=dj_currentDocument;
}
var ele=doc.getElementById(id);
if(ele&&(ele.id!=id)&&doc.all){
ele=null;
eles=doc.all[id];
if(eles){
if(eles.length){
for(var i=0;i<eles.length;i++){
if(eles[i].id==id){
ele=eles[i];
break;
}
}
}else{
ele=eles;
}
}
}
return ele;
}
return id;
};
dojo.setContext=function(_dc,_dd){
dj_currentContext=_dc;
dj_currentDocument=_dd;
};
dojo._fireCallback=function(_de,_df,_e0){
if((_df)&&((typeof _de=="string")||(_de instanceof String))){
_de=_df[_de];
}
return (_df?_de.apply(_df,_e0||[]):_de());
};
dojo.withGlobal=function(_e1,_e2,_e3,_e4){
var _e5;
var _e6=dj_currentContext;
var _e7=dj_currentDocument;
try{
dojo.setContext(_e1,_e1.document);
_e5=dojo._fireCallback(_e2,_e3,_e4);
}
finally{
dojo.setContext(_e6,_e7);
}
return _e5;
};
dojo.withDoc=function(_e8,_e9,_ea,_eb){
var _ec;
var _ed=dj_currentDocument;
try{
dj_currentDocument=_e8;
_ec=dojo._fireCallback(_e9,_ea,_eb);
}
finally{
dj_currentDocument=_ed;
}
return _ec;
};
}
(function(){
if(typeof dj_usingBootstrap!="undefined"){
return;
}
var _ee=false;
var _ef=false;
var _f0=false;
if((typeof this["load"]=="function")&&((typeof this["Packages"]=="function")||(typeof this["Packages"]=="object"))){
_ee=true;
}else{
if(typeof this["load"]=="function"){
_ef=true;
}else{
if(window.widget){
_f0=true;
}
}
}
var _f1=[];
if((this["djConfig"])&&((djConfig["isDebug"])||(djConfig["debugAtAllCosts"]))){
_f1.push("debug.js");
}
if((this["djConfig"])&&(djConfig["debugAtAllCosts"])&&(!_ee)&&(!_f0)){
_f1.push("browser_debug.js");
}
var _f2=djConfig["baseScriptUri"];
if((this["djConfig"])&&(djConfig["baseLoaderUri"])){
_f2=djConfig["baseLoaderUri"];
}
for(var x=0;x<_f1.length;x++){
var _f4=_f2+"src/"+_f1[x];
if(_ee||_ef){
load(_f4);
}else{
try{
document.write("<scr"+"ipt type='text/javascript' src='"+_f4+"'></scr"+"ipt>");
}
catch(e){
var _f5=document.createElement("script");
_f5.src=_f4;
document.getElementsByTagName("head")[0].appendChild(_f5);
}
}
}
})();


__CPAN_EDITION__ minimal build.txt

Files baked into this package:

dojoGuardStart.js,
../src/bootstrap1.js,
../src/loader.js,
dojoGuardEnd.js,
../src/hostenv_browser.js,
../src/bootstrap2.js

		
__CPAN_EDITION__ moxie dojo.js
/*
	Copyright (c) 2004-2006, The Dojo Foundation
	All Rights Reserved.

	Licensed under the Academic Free License version 2.1 or above OR the
	modified BSD license. For more information on Dojo licensing, see:

		http://dojotoolkit.org/community/licensing.shtml
*/

/*
	This is a compiled version of Dojo, built for deployment and not for
	development. To get an editable version, please visit:

		http://dojotoolkit.org

	for documentation and information on getting the source.
*/

if(typeof dojo=="undefined"){
var dj_global=this;
var dj_currentContext=this;
function dj_undef(_1,_2){
return (typeof (_2||dj_currentContext)[_1]=="undefined");
}
if(dj_undef("djConfig",this)){
var djConfig={};
}
if(dj_undef("dojo",this)){
var dojo={};
}
dojo.global=function(){
return dj_currentContext;
};
dojo.locale=djConfig.locale;
dojo.version={major:0,minor:4,patch:1,flag:"",revision:Number("$Rev: 6824 $".match(/[0-9]+/)[0]),toString:function(){
with(dojo.version){
return major+"."+minor+"."+patch+flag+" ("+revision+")";
}
}};
dojo.evalProp=function(_3,_4,_5){
if((!_4)||(!_3)){
return undefined;
}
if(!dj_undef(_3,_4)){
return _4[_3];
}
return (_5?(_4[_3]={}):undefined);
};
dojo.parseObjPath=function(_6,_7,_8){
var _9=(_7||dojo.global());
var _a=_6.split(".");
var _b=_a.pop();
for(var i=0,l=_a.length;i<l&&_9;i++){
_9=dojo.evalProp(_a[i],_9,_8);
}
return {obj:_9,prop:_b};
};
dojo.evalObjPath=function(_e,_f){
if(typeof _e!="string"){
return dojo.global();
}
if(_e.indexOf(".")==-1){
return dojo.evalProp(_e,dojo.global(),_f);
}
var ref=dojo.parseObjPath(_e,dojo.global(),_f);
if(ref){
return dojo.evalProp(ref.prop,ref.obj,_f);
}
return null;
};
dojo.errorToString=function(_11){
if(!dj_undef("message",_11)){
return _11.message;
}else{
if(!dj_undef("description",_11)){
return _11.description;
}else{
return _11;
}
}
};
dojo.raise=function(_12,_13){
if(_13){
_12=_12+": "+dojo.errorToString(_13);
}else{
_12=dojo.errorToString(_12);
}
try{
if(djConfig.isDebug){
dojo.hostenv.println("FATAL exception raised: "+_12);
}
}
catch(e){
}
throw _13||Error(_12);
};
dojo.debug=function(){
};
dojo.debugShallow=function(obj){
};
dojo.profile={start:function(){
},end:function(){
},stop:function(){
},dump:function(){
}};
function dj_eval(_15){
return dj_global.eval?dj_global.eval(_15):eval(_15);
}
dojo.unimplemented=function(_16,_17){
var _18="'"+_16+"' not implemented";
if(_17!=null){
_18+=" "+_17;
}
dojo.raise(_18);
};
dojo.deprecated=function(_19,_1a,_1b){
var _1c="DEPRECATED: "+_19;
if(_1a){
_1c+=" "+_1a;
}
if(_1b){
_1c+=" -- will be removed in version: "+_1b;
}
dojo.debug(_1c);
};
dojo.render=(function(){
function vscaffold(_1d,_1e){
var tmp={capable:false,support:{builtin:false,plugin:false},prefixes:_1d};
for(var i=0;i<_1e.length;i++){
tmp[_1e[i]]=false;
}
return tmp;
}
return {name:"",ver:dojo.version,os:{win:false,linux:false,osx:false},html:vscaffold(["html"],["ie","opera","khtml","safari","moz"]),svg:vscaffold(["svg"],["corel","adobe","batik"]),vml:vscaffold(["vml"],["ie"]),swf:vscaffold(["Swf","Flash","Mm"],["mm"]),swt:vscaffold(["Swt"],["ibm"])};
})();
dojo.hostenv=(function(){
var _21={isDebug:false,allowQueryConfig:false,baseScriptUri:"",baseRelativePath:"",libraryScriptUri:"",iePreventClobber:false,ieClobberMinimal:true,preventBackButtonFix:true,delayMozLoadingFix:false,searchIds:[],parseWidgets:true};
if(typeof djConfig=="undefined"){
djConfig=_21;
}else{
for(var _22 in _21){
if(typeof djConfig[_22]=="undefined"){
djConfig[_22]=_21[_22];
}
}
}
return {name_:"(unset)",version_:"(unset)",getName:function(){
return this.name_;
},getVersion:function(){
return this.version_;
},getText:function(uri){
dojo.unimplemented("getText","uri="+uri);
}};
})();
dojo.hostenv.getBaseScriptUri=function(){
if(djConfig.baseScriptUri.length){
return djConfig.baseScriptUri;
}
var uri=new String(djConfig.libraryScriptUri||djConfig.baseRelativePath);
if(!uri){
dojo.raise("Nothing returned by getLibraryScriptUri(): "+uri);
}
var _25=uri.lastIndexOf("/");
djConfig.baseScriptUri=djConfig.baseRelativePath;
return djConfig.baseScriptUri;
};
(function(){
var _26={pkgFileName:"__package__",loading_modules_:{},loaded_modules_:{},addedToLoadingCount:[],removedFromLoadingCount:[],inFlightCount:0,modulePrefixes_:{dojo:{name:"dojo",value:"src"}},setModulePrefix:function(_27,_28){
this.modulePrefixes_[_27]={name:_27,value:_28};
},moduleHasPrefix:function(_29){
var mp=this.modulePrefixes_;
return Boolean(mp[_29]&&mp[_29].value);
},getModulePrefix:function(_2b){
if(this.moduleHasPrefix(_2b)){
return this.modulePrefixes_[_2b].value;
}
return _2b;
},getTextStack:[],loadUriStack:[],loadedUris:[],post_load_:false,modulesLoadedListeners:[],unloadListeners:[],loadNotifying:false};
for(var _2c in _26){
dojo.hostenv[_2c]=_26[_2c];
}
})();
dojo.hostenv.loadPath=function(_2d,_2e,cb){
var uri;
if(_2d.charAt(0)=="/"||_2d.match(/^\w+:/)){
uri=_2d;
}else{
uri=this.getBaseScriptUri()+_2d;
}
if(djConfig.cacheBust&&dojo.render.html.capable){
uri+="?"+String(djConfig.cacheBust).replace(/\W+/g,"");
}
try{
return !_2e?this.loadUri(uri,cb):this.loadUriAndCheck(uri,_2e,cb);
}
catch(e){
dojo.debug(e);
return false;
}
};
dojo.hostenv.loadUri=function(uri,cb){
if(this.loadedUris[uri]){
return true;
}
var _33=this.getText(uri,null,true);
if(!_33){
return false;
}
this.loadedUris[uri]=true;
if(cb){
_33="("+_33+")";
}
var _34=dj_eval(_33);
if(cb){
cb(_34);
}
return true;
};
dojo.hostenv.loadUriAndCheck=function(uri,_36,cb){
var ok=true;
try{
ok=this.loadUri(uri,cb);
}
catch(e){
dojo.debug("failed loading ",uri," with error: ",e);
}
return Boolean(ok&&this.findModule(_36,false));
};
dojo.loaded=function(){
};
dojo.unloaded=function(){
};
dojo.hostenv.loaded=function(){
this.loadNotifying=true;
this.post_load_=true;
var mll=this.modulesLoadedListeners;
for(var x=0;x<mll.length;x++){
mll[x]();
}
this.modulesLoadedListeners=[];
this.loadNotifying=false;
dojo.loaded();
};
dojo.hostenv.unloaded=function(){
var mll=this.unloadListeners;
while(mll.length){
(mll.pop())();
}
dojo.unloaded();
};
dojo.addOnLoad=function(obj,_3d){
var dh=dojo.hostenv;
if(arguments.length==1){
dh.modulesLoadedListeners.push(obj);
}else{
if(arguments.length>1){
dh.modulesLoadedListeners.push(function(){
obj[_3d]();
});
}
}
if(dh.post_load_&&dh.inFlightCount==0&&!dh.loadNotifying){
dh.callLoaded();
}
};
dojo.addOnUnload=function(obj,_40){
var dh=dojo.hostenv;
if(arguments.length==1){
dh.unloadListeners.push(obj);
}else{
if(arguments.length>1){
dh.unloadListeners.push(function(){
obj[_40]();
});
}
}
};
dojo.hostenv.modulesLoaded=function(){
if(this.post_load_){
return;
}
if(this.loadUriStack.length==0&&this.getTextStack.length==0){
if(this.inFlightCount>0){
dojo.debug("files still in flight!");
return;
}
dojo.hostenv.callLoaded();
}
};
dojo.hostenv.callLoaded=function(){
if(typeof setTimeout=="object"){
setTimeout("dojo.hostenv.loaded();",0);
}else{
dojo.hostenv.loaded();
}
};
dojo.hostenv.getModuleSymbols=function(_42){
var _43=_42.split(".");
for(var i=_43.length;i>0;i--){
var _45=_43.slice(0,i).join(".");
if((i==1)&&!this.moduleHasPrefix(_45)){
_43[0]="../"+_43[0];
}else{
var _46=this.getModulePrefix(_45);
if(_46!=_45){
_43.splice(0,i,_46);
break;
}
}
}
return _43;
};
dojo.hostenv._global_omit_module_check=false;
dojo.hostenv.loadModule=function(_47,_48,_49){
if(!_47){
return;
}
_49=this._global_omit_module_check||_49;
var _4a=this.findModule(_47,false);
if(_4a){
return _4a;
}
if(dj_undef(_47,this.loading_modules_)){
this.addedToLoadingCount.push(_47);
}
this.loading_modules_[_47]=1;
var _4b=_47.replace(/\./g,"/")+".js";
var _4c=_47.split(".");
var _4d=this.getModuleSymbols(_47);
var _4e=((_4d[0].charAt(0)!="/")&&!_4d[0].match(/^\w+:/));
var _4f=_4d[_4d.length-1];
var ok;
if(_4f=="*"){
_47=_4c.slice(0,-1).join(".");
while(_4d.length){
_4d.pop();
_4d.push(this.pkgFileName);
_4b=_4d.join("/")+".js";
if(_4e&&_4b.charAt(0)=="/"){
_4b=_4b.slice(1);
}
ok=this.loadPath(_4b,!_49?_47:null);
if(ok){
break;
}
_4d.pop();
}
}else{
_4b=_4d.join("/")+".js";
_47=_4c.join(".");
var _51=!_49?_47:null;
ok=this.loadPath(_4b,_51);
if(!ok&&!_48){
_4d.pop();
while(_4d.length){
_4b=_4d.join("/")+".js";
ok=this.loadPath(_4b,_51);
if(ok){
break;
}
_4d.pop();
_4b=_4d.join("/")+"/"+this.pkgFileName+".js";
if(_4e&&_4b.charAt(0)=="/"){
_4b=_4b.slice(1);
}
ok=this.loadPath(_4b,_51);
if(ok){
break;
}
}
}
if(!ok&&!_49){
dojo.raise("Could not load '"+_47+"'; last tried '"+_4b+"'");
}
}
if(!_49&&!this["isXDomain"]){
_4a=this.findModule(_47,false);
if(!_4a){
dojo.raise("symbol '"+_47+"' is not defined after loading '"+_4b+"'");
}
}
return _4a;
};
dojo.hostenv.startPackage=function(_52){
var _53=String(_52);
var _54=_53;
var _55=_52.split(/\./);
if(_55[_55.length-1]=="*"){
_55.pop();
_54=_55.join(".");
}
var _56=dojo.evalObjPath(_54,true);
this.loaded_modules_[_53]=_56;
this.loaded_modules_[_54]=_56;
return _56;
};
dojo.hostenv.findModule=function(_57,_58){
var lmn=String(_57);
if(this.loaded_modules_[lmn]){
return this.loaded_modules_[lmn];
}
if(_58){
dojo.raise("no loaded module named '"+_57+"'");
}
return null;
};
dojo.kwCompoundRequire=function(_5a){
var _5b=_5a["common"]||[];
var _5c=_5a[dojo.hostenv.name_]?_5b.concat(_5a[dojo.hostenv.name_]||[]):_5b.concat(_5a["default"]||[]);
for(var x=0;x<_5c.length;x++){
var _5e=_5c[x];
if(_5e.constructor==Array){
dojo.hostenv.loadModule.apply(dojo.hostenv,_5e);
}else{
dojo.hostenv.loadModule(_5e);
}
}
};
dojo.require=function(_5f){
dojo.hostenv.loadModule.apply(dojo.hostenv,arguments);
};
dojo.requireIf=function(_60,_61){
var _62=arguments[0];
if((_62===true)||(_62=="common")||(_62&&dojo.render[_62].capable)){
var _63=[];
for(var i=1;i<arguments.length;i++){
_63.push(arguments[i]);
}
dojo.require.apply(dojo,_63);
}
};
dojo.requireAfterIf=dojo.requireIf;
dojo.provide=function(_65){
return dojo.hostenv.startPackage.apply(dojo.hostenv,arguments);
};
dojo.registerModulePath=function(_66,_67){
return dojo.hostenv.setModulePrefix(_66,_67);
};
dojo.setModulePrefix=function(_68,_69){
dojo.deprecated("dojo.setModulePrefix(\""+_68+"\", \""+_69+"\")","replaced by dojo.registerModulePath","0.5");
return dojo.registerModulePath(_68,_69);
};
dojo.exists=function(obj,_6b){
var p=_6b.split(".");
for(var i=0;i<p.length;i++){
if(!obj[p[i]]){
return false;
}
obj=obj[p[i]];
}
return true;
};
dojo.hostenv.normalizeLocale=function(_6e){
var _6f=_6e?_6e.toLowerCase():dojo.locale;
if(_6f=="root"){
_6f="ROOT";
}
return _6f;
};
dojo.hostenv.searchLocalePath=function(_70,_71,_72){
_70=dojo.hostenv.normalizeLocale(_70);
var _73=_70.split("-");
var _74=[];
for(var i=_73.length;i>0;i--){
_74.push(_73.slice(0,i).join("-"));
}
_74.push(false);
if(_71){
_74.reverse();
}
for(var j=_74.length-1;j>=0;j--){
var loc=_74[j]||"ROOT";
var _78=_72(loc);
if(_78){
break;
}
}
};
dojo.hostenv.localesGenerated;
dojo.hostenv.registerNlsPrefix=function(){
dojo.registerModulePath("nls","nls");
};
dojo.hostenv.preloadLocalizations=function(){
if(dojo.hostenv.localesGenerated){
dojo.hostenv.registerNlsPrefix();
function preload(_79){
_79=dojo.hostenv.normalizeLocale(_79);
dojo.hostenv.searchLocalePath(_79,true,function(loc){
for(var i=0;i<dojo.hostenv.localesGenerated.length;i++){
if(dojo.hostenv.localesGenerated[i]==loc){
dojo["require"]("nls.dojo_"+loc);
return true;
}
}
return false;
});
}
preload();
var _7c=djConfig.extraLocale||[];
for(var i=0;i<_7c.length;i++){
preload(_7c[i]);
}
}
dojo.hostenv.preloadLocalizations=function(){
};
};
dojo.requireLocalization=function(_7e,_7f,_80,_81){
dojo.hostenv.preloadLocalizations();
var _82=dojo.hostenv.normalizeLocale(_80);
var _83=[_7e,"nls",_7f].join(".");
var _84="";
if(_81){
var _85=_81.split(",");
for(var i=0;i<_85.length;i++){
if(_82.indexOf(_85[i])==0){
if(_85[i].length>_84.length){
_84=_85[i];
}
}
}
if(!_84){
_84="ROOT";
}
}
var _87=_81?_84:_82;
var _88=dojo.hostenv.findModule(_83);
var _89=null;
if(_88){
if(djConfig.localizationComplete&&_88._built){
return;
}
var _8a=_87.replace("-","_");
var _8b=_83+"."+_8a;
_89=dojo.hostenv.findModule(_8b);
}
if(!_89){
_88=dojo.hostenv.startPackage(_83);
var _8c=dojo.hostenv.getModuleSymbols(_7e);
var _8d=_8c.concat("nls").join("/");
var _8e;
dojo.hostenv.searchLocalePath(_87,_81,function(loc){
var _90=loc.replace("-","_");
var _91=_83+"."+_90;
var _92=false;
if(!dojo.hostenv.findModule(_91)){
dojo.hostenv.startPackage(_91);
var _93=[_8d];
if(loc!="ROOT"){
_93.push(loc);
}
_93.push(_7f);
var _94=_93.join("/")+".js";
_92=dojo.hostenv.loadPath(_94,null,function(_95){
var _96=function(){
};
_96.prototype=_8e;
_88[_90]=new _96();
for(var j in _95){
_88[_90][j]=_95[j];
}
});
}else{
_92=true;
}
if(_92&&_88[_90]){
_8e=_88[_90];
}else{
_88[_90]=_8e;
}
if(_81){
return true;
}
});
}
if(_81&&_82!=_84){
_88[_82.replace("-","_")]=_88[_84.replace("-","_")];
}
};
(function(){
var _98=djConfig.extraLocale;
if(_98){
if(!_98 instanceof Array){
_98=[_98];
}
var req=dojo.requireLocalization;
dojo.requireLocalization=function(m,b,_9c,_9d){
req(m,b,_9c,_9d);
if(_9c){
return;
}
for(var i=0;i<_98.length;i++){
req(m,b,_98[i],_9d);
}
};
}
})();
}
if(typeof window!="undefined"){
(function(){
if(djConfig.allowQueryConfig){
var _9f=document.location.toString();
var _a0=_9f.split("?",2);
if(_a0.length>1){
var _a1=_a0[1];
var _a2=_a1.split("&");
for(var x in _a2){
var sp=_a2[x].split("=");
if((sp[0].length>9)&&(sp[0].substr(0,9)=="djConfig.")){
var opt=sp[0].substr(9);
try{
djConfig[opt]=eval(sp[1]);
}
catch(e){
djConfig[opt]=sp[1];
}
}
}
}
}
if(((djConfig["baseScriptUri"]=="")||(djConfig["baseRelativePath"]==""))&&(document&&document.getElementsByTagName)){
var _a6=document.getElementsByTagName("script");
var _a7=/(__package__|dojo|bootstrap1)\.js([\?\.]|$)/i;
for(var i=0;i<_a6.length;i++){
var src=_a6[i].getAttribute("src");
if(!src){
continue;
}
var m=src.match(_a7);
if(m){
var _ab=src.substring(0,m.index);
if(src.indexOf("bootstrap1")>-1){
_ab+="../";
}
if(!this["djConfig"]){
djConfig={};
}
if(djConfig["baseScriptUri"]==""){
djConfig["baseScriptUri"]=_ab;
}
if(djConfig["baseRelativePath"]==""){
djConfig["baseRelativePath"]=_ab;
}
break;
}
}
}
var dr=dojo.render;
var drh=dojo.render.html;
var drs=dojo.render.svg;
var dua=(drh.UA=navigator.userAgent);
var dav=(drh.AV=navigator.appVersion);
var t=true;
var f=false;
drh.capable=t;
drh.support.builtin=t;
dr.ver=parseFloat(drh.AV);
dr.os.mac=dav.indexOf("Macintosh")>=0;
dr.os.win=dav.indexOf("Windows")>=0;
dr.os.linux=dav.indexOf("X11")>=0;
drh.opera=dua.indexOf("Opera")>=0;
drh.khtml=(dav.indexOf("Konqueror")>=0)||(dav.indexOf("Safari")>=0);
drh.safari=dav.indexOf("Safari")>=0;
var _b3=dua.indexOf("Gecko");
drh.mozilla=drh.moz=(_b3>=0)&&(!drh.khtml);
if(drh.mozilla){
drh.geckoVersion=dua.substring(_b3+6,_b3+14);
}
drh.ie=(document.all)&&(!drh.opera);
drh.ie50=drh.ie&&dav.indexOf("MSIE 5.0")>=0;
drh.ie55=drh.ie&&dav.indexOf("MSIE 5.5")>=0;
drh.ie60=drh.ie&&dav.indexOf("MSIE 6.0")>=0;
drh.ie70=drh.ie&&dav.indexOf("MSIE 7.0")>=0;
var cm=document["compatMode"];
drh.quirks=(cm=="BackCompat")||(cm=="QuirksMode")||drh.ie55||drh.ie50;
dojo.locale=dojo.locale||(drh.ie?navigator.userLanguage:navigator.language).toLowerCase();
dr.vml.capable=drh.ie;
drs.capable=f;
drs.support.plugin=f;
drs.support.builtin=f;
var _b5=window["document"];
var tdi=_b5["implementation"];
if((tdi)&&(tdi["hasFeature"])&&(tdi.hasFeature("org.w3c.dom.svg","1.0"))){
drs.capable=t;
drs.support.builtin=t;
drs.support.plugin=f;
}
if(drh.safari){
var tmp=dua.split("AppleWebKit/")[1];
var ver=parseFloat(tmp.split(" ")[0]);
if(ver>=420){
drs.capable=t;
drs.support.builtin=t;
drs.support.plugin=f;
}
}else{
}
})();
dojo.hostenv.startPackage("dojo.hostenv");
dojo.render.name=dojo.hostenv.name_="browser";
dojo.hostenv.searchIds=[];
dojo.hostenv._XMLHTTP_PROGIDS=["Msxml2.XMLHTTP","Microsoft.XMLHTTP","Msxml2.XMLHTTP.4.0"];
dojo.hostenv.getXmlhttpObject=function(){
var _b9=null;
var _ba=null;
try{
_b9=new XMLHttpRequest();
}
catch(e){
}
if(!_b9){
for(var i=0;i<3;++i){
var _bc=dojo.hostenv._XMLHTTP_PROGIDS[i];
try{
_b9=new ActiveXObject(_bc);
}
catch(e){
_ba=e;
}
if(_b9){
dojo.hostenv._XMLHTTP_PROGIDS=[_bc];
break;
}
}
}
if(!_b9){
return dojo.raise("XMLHTTP not available",_ba);
}
return _b9;
};
dojo.hostenv._blockAsync=false;
dojo.hostenv.getText=function(uri,_be,_bf){
if(!_be){
this._blockAsync=true;
}
var _c0=this.getXmlhttpObject();
function isDocumentOk(_c1){
var _c2=_c1["status"];
return Boolean((!_c2)||((200<=_c2)&&(300>_c2))||(_c2==304));
}
if(_be){
var _c3=this,_c4=null,gbl=dojo.global();
var xhr=dojo.evalObjPath("dojo.io.XMLHTTPTransport");
_c0.onreadystatechange=function(){
if(_c4){
gbl.clearTimeout(_c4);
_c4=null;
}
if(_c3._blockAsync||(xhr&&xhr._blockAsync)){
_c4=gbl.setTimeout(function(){
_c0.onreadystatechange.apply(this);
},10);
}else{
if(4==_c0.readyState){
if(isDocumentOk(_c0)){
_be(_c0.responseText);
}
}
}
};
}
_c0.open("GET",uri,_be?true:false);
try{
_c0.send(null);
if(_be){
return null;
}
if(!isDocumentOk(_c0)){
var err=Error("Unable to load "+uri+" status:"+_c0.status);
err.status=_c0.status;
err.responseText=_c0.responseText;
throw err;
}
}
catch(e){
this._blockAsync=false;
if((_bf)&&(!_be)){
return null;
}else{
throw e;
}
}
this._blockAsync=false;
return _c0.responseText;
};
dojo.hostenv.defaultDebugContainerId="dojoDebug";
dojo.hostenv._println_buffer=[];
dojo.hostenv._println_safe=false;
dojo.hostenv.println=function(_c8){
if(!dojo.hostenv._println_safe){
dojo.hostenv._println_buffer.push(_c8);
}else{
try{
var _c9=document.getElementById(djConfig.debugContainerId?djConfig.debugContainerId:dojo.hostenv.defaultDebugContainerId);
if(!_c9){
_c9=dojo.body();
}
var div=document.createElement("div");
div.appendChild(document.createTextNode(_c8));
_c9.appendChild(div);
}
catch(e){
try{
document.write("<div>"+_c8+"</div>");
}
catch(e2){
window.status=_c8;
}
}
}
};
dojo.addOnLoad(function(){
dojo.hostenv._println_safe=true;
while(dojo.hostenv._println_buffer.length>0){
dojo.hostenv.println(dojo.hostenv._println_buffer.shift());
}
});
function dj_addNodeEvtHdlr(_cb,_cc,fp){
var _ce=_cb["on"+_cc]||function(){
};
_cb["on"+_cc]=function(){
fp.apply(_cb,arguments);
_ce.apply(_cb,arguments);
};
return true;
}
function dj_load_init(e){
var _d0=(e&&e.type)?e.type.toLowerCase():"load";
if(arguments.callee.initialized||(_d0!="domcontentloaded"&&_d0!="load")){
return;
}
arguments.callee.initialized=true;
if(typeof (_timer)!="undefined"){
clearInterval(_timer);
delete _timer;
}
var _d1=function(){
if(dojo.render.html.ie){
dojo.hostenv.makeWidgets();
}
};
if(dojo.hostenv.inFlightCount==0){
_d1();
dojo.hostenv.modulesLoaded();
}else{
dojo.hostenv.modulesLoadedListeners.unshift(_d1);
}
}
if(document.addEventListener){
if(dojo.render.html.opera||(dojo.render.html.moz&&!djConfig.delayMozLoadingFix)){
document.addEventListener("DOMContentLoaded",dj_load_init,null);
}
window.addEventListener("load",dj_load_init,null);
}
if(dojo.render.html.ie&&dojo.render.os.win){
document.attachEvent("onreadystatechange",function(e){
if(document.readyState=="complete"){
dj_load_init();
}
});
}
if(/(WebKit|khtml)/i.test(navigator.userAgent)){
var _timer=setInterval(function(){
if(/loaded|complete/.test(document.readyState)){
dj_load_init();
}
},10);
}
if(dojo.render.html.ie){
dj_addNodeEvtHdlr(window,"beforeunload",function(){
dojo.hostenv._unloading=true;
window.setTimeout(function(){
dojo.hostenv._unloading=false;
},0);
});
}
dj_addNodeEvtHdlr(window,"unload",function(){
dojo.hostenv.unloaded();
if((!dojo.render.html.ie)||(dojo.render.html.ie&&dojo.hostenv._unloading)){
dojo.hostenv.unloaded();
}
});
dojo.hostenv.makeWidgets=function(){
var _d3=[];
if(djConfig.searchIds&&djConfig.searchIds.length>0){
_d3=_d3.concat(djConfig.searchIds);
}
if(dojo.hostenv.searchIds&&dojo.hostenv.searchIds.length>0){
_d3=_d3.concat(dojo.hostenv.searchIds);
}
if((djConfig.parseWidgets)||(_d3.length>0)){
if(dojo.evalObjPath("dojo.widget.Parse")){
var _d4=new dojo.xml.Parse();
if(_d3.length>0){
for(var x=0;x<_d3.length;x++){
var _d6=document.getElementById(_d3[x]);
if(!_d6){
continue;
}
var _d7=_d4.parseElement(_d6,null,true);
dojo.widget.getParser().createComponents(_d7);
}
}else{
if(djConfig.parseWidgets){
var _d7=_d4.parseElement(dojo.body(),null,true);
dojo.widget.getParser().createComponents(_d7);
}
}
}
}
};
dojo.addOnLoad(function(){
if(!dojo.render.html.ie){
dojo.hostenv.makeWidgets();
}
});
try{
if(dojo.render.html.ie){
document.namespaces.add("v","urn:schemas-microsoft-com:vml");
document.createStyleSheet().addRule("v\\:*","behavior:url(#default#VML)");
}
}
catch(e){
}
dojo.hostenv.writeIncludes=function(){
};
if(!dj_undef("document",this)){
dj_currentDocument=this.document;
}
dojo.doc=function(){
return dj_currentDocument;
};
dojo.body=function(){
return dojo.doc().body||dojo.doc().getElementsByTagName("body")[0];
};
dojo.byId=function(id,doc){
if((id)&&((typeof id=="string")||(id instanceof String))){
if(!doc){
doc=dj_currentDocument;
}
var ele=doc.getElementById(id);
if(ele&&(ele.id!=id)&&doc.all){
ele=null;
eles=doc.all[id];
if(eles){
if(eles.length){
for(var i=0;i<eles.length;i++){
if(eles[i].id==id){
ele=eles[i];
break;
}
}
}else{
ele=eles;
}
}
}
return ele;
}
return id;
};
dojo.setContext=function(_dc,_dd){
dj_currentContext=_dc;
dj_currentDocument=_dd;
};
dojo._fireCallback=function(_de,_df,_e0){
if((_df)&&((typeof _de=="string")||(_de instanceof String))){
_de=_df[_de];
}
return (_df?_de.apply(_df,_e0||[]):_de());
};
dojo.withGlobal=function(_e1,_e2,_e3,_e4){
var _e5;
var _e6=dj_currentContext;
var _e7=dj_currentDocument;
try{
dojo.setContext(_e1,_e1.document);
_e5=dojo._fireCallback(_e2,_e3,_e4);
}
finally{
dojo.setContext(_e6,_e7);
}
return _e5;
};
dojo.withDoc=function(_e8,_e9,_ea,_eb){
var _ec;
var _ed=dj_currentDocument;
try{
dj_currentDocument=_e8;
_ec=dojo._fireCallback(_e9,_ea,_eb);
}
finally{
dj_currentDocument=_ed;
}
return _ec;
};
}
(function(){
if(typeof dj_usingBootstrap!="undefined"){
return;
}
var _ee=false;
var _ef=false;
var _f0=false;
if((typeof this["load"]=="function")&&((typeof this["Packages"]=="function")||(typeof this["Packages"]=="object"))){
_ee=true;
}else{
if(typeof this["load"]=="function"){
_ef=true;
}else{
if(window.widget){
_f0=true;
}
}
}
var _f1=[];
if((this["djConfig"])&&((djConfig["isDebug"])||(djConfig["debugAtAllCosts"]))){
_f1.push("debug.js");
}
if((this["djConfig"])&&(djConfig["debugAtAllCosts"])&&(!_ee)&&(!_f0)){
_f1.push("browser_debug.js");
}
var _f2=djConfig["baseScriptUri"];
if((this["djConfig"])&&(djConfig["baseLoaderUri"])){
_f2=djConfig["baseLoaderUri"];
}
for(var x=0;x<_f1.length;x++){
var _f4=_f2+"src/"+_f1[x];
if(_ee||_ef){
load(_f4);
}else{
try{
document.write("<scr"+"ipt type='text/javascript' src='"+_f4+"'></scr"+"ipt>");
}
catch(e){
var _f5=document.createElement("script");
_f5.src=_f4;
document.getElementsByTagName("head")[0].appendChild(_f5);
}
}
}
})();
dojo.provide("dojo.lang.common");
dojo.lang.inherits=function(_f6,_f7){
if(!dojo.lang.isFunction(_f7)){
dojo.raise("dojo.inherits: superclass argument ["+_f7+"] must be a function (subclass: ["+_f6+"']");
}
_f6.prototype=new _f7();
_f6.prototype.constructor=_f6;
_f6.superclass=_f7.prototype;
_f6["super"]=_f7.prototype;
};
dojo.lang._mixin=function(obj,_f9){
var _fa={};
for(var x in _f9){
if((typeof _fa[x]=="undefined")||(_fa[x]!=_f9[x])){
obj[x]=_f9[x];
}
}
if(dojo.render.html.ie&&(typeof (_f9["toString"])=="function")&&(_f9["toString"]!=obj["toString"])&&(_f9["toString"]!=_fa["toString"])){
obj.toString=_f9.toString;
}
return obj;
};
dojo.lang.mixin=function(obj,_fd){
for(var i=1,l=arguments.length;i<l;i++){
dojo.lang._mixin(obj,arguments[i]);
}
return obj;
};
dojo.lang.extend=function(_100,_101){
for(var i=1,l=arguments.length;i<l;i++){
dojo.lang._mixin(_100.prototype,arguments[i]);
}
return _100;
};
dojo.inherits=dojo.lang.inherits;
dojo.mixin=dojo.lang.mixin;
dojo.extend=dojo.lang.extend;
dojo.lang.find=function(_104,_105,_106,_107){
if(!dojo.lang.isArrayLike(_104)&&dojo.lang.isArrayLike(_105)){
dojo.deprecated("dojo.lang.find(value, array)","use dojo.lang.find(array, value) instead","0.5");
var temp=_104;
_104=_105;
_105=temp;
}
var _109=dojo.lang.isString(_104);
if(_109){
_104=_104.split("");
}
if(_107){
var step=-1;
var i=_104.length-1;
var end=-1;
}else{
var step=1;
var i=0;
var end=_104.length;
}
if(_106){
while(i!=end){
if(_104[i]===_105){
return i;
}
i+=step;
}
}else{
while(i!=end){
if(_104[i]==_105){
return i;
}
i+=step;
}
}
return -1;
};
dojo.lang.indexOf=dojo.lang.find;
dojo.lang.findLast=function(_10d,_10e,_10f){
return dojo.lang.find(_10d,_10e,_10f,true);
};
dojo.lang.lastIndexOf=dojo.lang.findLast;
dojo.lang.inArray=function(_110,_111){
return dojo.lang.find(_110,_111)>-1;
};
dojo.lang.isObject=function(it){
if(typeof it=="undefined"){
return false;
}
return (typeof it=="object"||it===null||dojo.lang.isArray(it)||dojo.lang.isFunction(it));
};
dojo.lang.isArray=function(it){
return (it&&it instanceof Array||typeof it=="array");
};
dojo.lang.isArrayLike=function(it){
if((!it)||(dojo.lang.isUndefined(it))){
return false;
}
if(dojo.lang.isString(it)){
return false;
}
if(dojo.lang.isFunction(it)){
return false;
}
if(dojo.lang.isArray(it)){
return true;
}
if((it.tagName)&&(it.tagName.toLowerCase()=="form")){
return false;
}
if(dojo.lang.isNumber(it.length)&&isFinite(it.length)){
return true;
}
return false;
};
dojo.lang.isFunction=function(it){
return (it instanceof Function||typeof it=="function");
};
(function(){
if((dojo.render.html.capable)&&(dojo.render.html["safari"])){
dojo.lang.isFunction=function(it){
if((typeof (it)=="function")&&(it=="[object NodeList]")){
return false;
}
return (it instanceof Function||typeof it=="function");
};
}
})();
dojo.lang.isString=function(it){
return (typeof it=="string"||it instanceof String);
};
dojo.lang.isAlien=function(it){
if(!it){
return false;
}
return !dojo.lang.isFunction(it)&&/\{\s*\[native code\]\s*\}/.test(String(it));
};
dojo.lang.isBoolean=function(it){
return (it instanceof Boolean||typeof it=="boolean");
};
dojo.lang.isNumber=function(it){
return (it instanceof Number||typeof it=="number");
};
dojo.lang.isUndefined=function(it){
return ((typeof (it)=="undefined")&&(it==undefined));
};
dojo.provide("dojo.dom");
dojo.dom.ELEMENT_NODE=1;
dojo.dom.ATTRIBUTE_NODE=2;
dojo.dom.TEXT_NODE=3;
dojo.dom.CDATA_SECTION_NODE=4;
dojo.dom.ENTITY_REFERENCE_NODE=5;
dojo.dom.ENTITY_NODE=6;
dojo.dom.PROCESSING_INSTRUCTION_NODE=7;
dojo.dom.COMMENT_NODE=8;
dojo.dom.DOCUMENT_NODE=9;
dojo.dom.DOCUMENT_TYPE_NODE=10;
dojo.dom.DOCUMENT_FRAGMENT_NODE=11;
dojo.dom.NOTATION_NODE=12;
dojo.dom.dojoml="http://www.dojotoolkit.org/2004/dojoml";
dojo.dom.xmlns={svg:"http://www.w3.org/2000/svg",smil:"http://www.w3.org/2001/SMIL20/",mml:"http://www.w3.org/1998/Math/MathML",cml:"http://www.xml-cml.org",xlink:"http://www.w3.org/1999/xlink",xhtml:"http://www.w3.org/1999/xhtml",xul:"http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul",xbl:"http://www.mozilla.org/xbl",fo:"http://www.w3.org/1999/XSL/Format",xsl:"http://www.w3.org/1999/XSL/Transform",xslt:"http://www.w3.org/1999/XSL/Transform",xi:"http://www.w3.org/2001/XInclude",xforms:"http://www.w3.org/2002/01/xforms",saxon:"http://icl.com/saxon",xalan:"http://xml.apache.org/xslt",xsd:"http://www.w3.org/2001/XMLSchema",dt:"http://www.w3.org/2001/XMLSchema-datatypes",xsi:"http://www.w3.org/2001/XMLSchema-instance",rdf:"http://www.w3.org/1999/02/22-rdf-syntax-ns#",rdfs:"http://www.w3.org/2000/01/rdf-schema#",dc:"http://purl.org/dc/elements/1.1/",dcq:"http://purl.org/dc/qualifiers/1.0","soap-env":"http://schemas.xmlsoap.org/soap/envelope/",wsdl:"http://schemas.xmlsoap.org/wsdl/",AdobeExtensions:"http://ns.adobe.com/AdobeSVGViewerExtensions/3.0/"};
dojo.dom.isNode=function(wh){
if(typeof Element=="function"){
try{
return wh instanceof Element;
}
catch(e){
}
}else{
return wh&&!isNaN(wh.nodeType);
}
};
dojo.dom.getUniqueId=function(){
var _11d=dojo.doc();
do{
var id="dj_unique_"+(++arguments.callee._idIncrement);
}while(_11d.getElementById(id));
return id;
};
dojo.dom.getUniqueId._idIncrement=0;
dojo.dom.firstElement=dojo.dom.getFirstChildElement=function(_11f,_120){
var node=_11f.firstChild;
while(node&&node.nodeType!=dojo.dom.ELEMENT_NODE){
node=node.nextSibling;
}
if(_120&&node&&node.tagName&&node.tagName.toLowerCase()!=_120.toLowerCase()){
node=dojo.dom.nextElement(node,_120);
}
return node;
};
dojo.dom.lastElement=dojo.dom.getLastChildElement=function(_122,_123){
var node=_122.lastChild;
while(node&&node.nodeType!=dojo.dom.ELEMENT_NODE){
node=node.previousSibling;
}
if(_123&&node&&node.tagName&&node.tagName.toLowerCase()!=_123.toLowerCase()){
node=dojo.dom.prevElement(node,_123);
}
return node;
};
dojo.dom.nextElement=dojo.dom.getNextSiblingElement=function(node,_126){
if(!node){
return null;
}
do{
node=node.nextSibling;
}while(node&&node.nodeType!=dojo.dom.ELEMENT_NODE);
if(node&&_126&&_126.toLowerCase()!=node.tagName.toLowerCase()){
return dojo.dom.nextElement(node,_126);
}
return node;
};
dojo.dom.prevElement=dojo.dom.getPreviousSiblingElement=function(node,_128){
if(!node){
return null;
}
if(_128){
_128=_128.toLowerCase();
}
do{
node=node.previousSibling;
}while(node&&node.nodeType!=dojo.dom.ELEMENT_NODE);
if(node&&_128&&_128.toLowerCase()!=node.tagName.toLowerCase()){
return dojo.dom.prevElement(node,_128);
}
return node;
};
dojo.dom.moveChildren=function(_129,_12a,trim){
var _12c=0;
if(trim){
while(_129.hasChildNodes()&&_129.firstChild.nodeType==dojo.dom.TEXT_NODE){
_129.removeChild(_129.firstChild);
}
while(_129.hasChildNodes()&&_129.lastChild.nodeType==dojo.dom.TEXT_NODE){
_129.removeChild(_129.lastChild);
}
}
while(_129.hasChildNodes()){
_12a.appendChild(_129.firstChild);
_12c++;
}
return _12c;
};
dojo.dom.copyChildren=function(_12d,_12e,trim){
var _130=_12d.cloneNode(true);
return this.moveChildren(_130,_12e,trim);
};
dojo.dom.replaceChildren=function(node,_132){
var _133=[];
if(dojo.render.html.ie){
for(var i=0;i<node.childNodes.length;i++){
_133.push(node.childNodes[i]);
}
}
dojo.dom.removeChildren(node);
node.appendChild(_132);
for(var i=0;i<_133.length;i++){
dojo.dom.destroyNode(_133[i]);
}
};
dojo.dom.removeChildren=function(node){
var _136=node.childNodes.length;
while(node.hasChildNodes()){
dojo.dom.removeNode(node.firstChild);
}
return _136;
};
dojo.dom.replaceNode=function(node,_138){
return node.parentNode.replaceChild(_138,node);
};
dojo.dom.destroyNode=function(node){
if(node.parentNode){
node=dojo.dom.removeNode(node);
}
if(node.nodeType!=3){
if(dojo.evalObjPath("dojo.event.browser.clean",false)){
dojo.event.browser.clean(node);
}
if(dojo.render.html.ie){
node.outerHTML="";
}
}
};
dojo.dom.removeNode=function(node){
if(node&&node.parentNode){
return node.parentNode.removeChild(node);
}
};
dojo.dom.getAncestors=function(node,_13c,_13d){
var _13e=[];
var _13f=(_13c&&(_13c instanceof Function||typeof _13c=="function"));
while(node){
if(!_13f||_13c(node)){
_13e.push(node);
}
if(_13d&&_13e.length>0){
return _13e[0];
}
node=node.parentNode;
}
if(_13d){
return null;
}
return _13e;
};
dojo.dom.getAncestorsByTag=function(node,tag,_142){
tag=tag.toLowerCase();
return dojo.dom.getAncestors(node,function(el){
return ((el.tagName)&&(el.tagName.toLowerCase()==tag));
},_142);
};
dojo.dom.getFirstAncestorByTag=function(node,tag){
return dojo.dom.getAncestorsByTag(node,tag,true);
};
dojo.dom.isDescendantOf=function(node,_147,_148){
if(_148&&node){
node=node.parentNode;
}
while(node){
if(node==_147){
return true;
}
node=node.parentNode;
}
return false;
};
dojo.dom.innerXML=function(node){
if(node.innerXML){
return node.innerXML;
}else{
if(node.xml){
return node.xml;
}else{
if(typeof XMLSerializer!="undefined"){
return (new XMLSerializer()).serializeToString(node);
}
}
}
};
dojo.dom.createDocument=function(){
var doc=null;
var _14b=dojo.doc();
if(!dj_undef("ActiveXObject")){
var _14c=["MSXML2","Microsoft","MSXML","MSXML3"];
for(var i=0;i<_14c.length;i++){
try{
doc=new ActiveXObject(_14c[i]+".XMLDOM");
}
catch(e){
}
if(doc){
break;
}
}
}else{
if((_14b.implementation)&&(_14b.implementation.createDocument)){
doc=_14b.implementation.createDocument("","",null);
}
}
return doc;
};
dojo.dom.createDocumentFromText=function(str,_14f){
if(!_14f){
_14f="text/xml";
}
if(!dj_undef("DOMParser")){
var _150=new DOMParser();
return _150.parseFromString(str,_14f);
}else{
if(!dj_undef("ActiveXObject")){
var _151=dojo.dom.createDocument();
if(_151){
_151.async=false;
_151.loadXML(str);
return _151;
}else{
dojo.debug("toXml didn't work?");
}
}else{
var _152=dojo.doc();
if(_152.createElement){
var tmp=_152.createElement("xml");
tmp.innerHTML=str;
if(_152.implementation&&_152.implementation.createDocument){
var _154=_152.implementation.createDocument("foo","",null);
for(var i=0;i<tmp.childNodes.length;i++){
_154.importNode(tmp.childNodes.item(i),true);
}
return _154;
}
return ((tmp.document)&&(tmp.document.firstChild?tmp.document.firstChild:tmp));
}
}
}
return null;
};
dojo.dom.prependChild=function(node,_157){
if(_157.firstChild){
_157.insertBefore(node,_157.firstChild);
}else{
_157.appendChild(node);
}
return true;
};
dojo.dom.insertBefore=function(node,ref,_15a){
if((_15a!=true)&&(node===ref||node.nextSibling===ref)){
return false;
}
var _15b=ref.parentNode;
_15b.insertBefore(node,ref);
return true;
};
dojo.dom.insertAfter=function(node,ref,_15e){
var pn=ref.parentNode;
if(ref==pn.lastChild){
if((_15e!=true)&&(node===ref)){
return false;
}
pn.appendChild(node);
}else{
return this.insertBefore(node,ref.nextSibling,_15e);
}
return true;
};
dojo.dom.insertAtPosition=function(node,ref,_162){
if((!node)||(!ref)||(!_162)){
return false;
}
switch(_162.toLowerCase()){
case "before":
return dojo.dom.insertBefore(node,ref);
case "after":
return dojo.dom.insertAfter(node,ref);
case "first":
if(ref.firstChild){
return dojo.dom.insertBefore(node,ref.firstChild);
}else{
ref.appendChild(node);
return true;
}
break;
default:
ref.appendChild(node);
return true;
}
};
dojo.dom.insertAtIndex=function(node,_164,_165){
var _166=_164.childNodes;
if(!_166.length||_166.length==_165){
_164.appendChild(node);
return true;
}
if(_165==0){
return dojo.dom.prependChild(node,_164);
}
return dojo.dom.insertAfter(node,_166[_165-1]);
};
dojo.dom.textContent=function(node,text){
if(arguments.length>1){
var _169=dojo.doc();
dojo.dom.replaceChildren(node,_169.createTextNode(text));
return text;
}else{
if(node.textContent!=undefined){
return node.textContent;
}
var _16a="";
if(node==null){
return _16a;
}
for(var i=0;i<node.childNodes.length;i++){
switch(node.childNodes[i].nodeType){
case 1:
case 5:
_16a+=dojo.dom.textContent(node.childNodes[i]);
break;
case 3:
case 2:
case 4:
_16a+=node.childNodes[i].nodeValue;
break;
default:
break;
}
}
return _16a;
}
};
dojo.dom.hasParent=function(node){
return Boolean(node&&node.parentNode&&dojo.dom.isNode(node.parentNode));
};
dojo.dom.isTag=function(node){
if(node&&node.tagName){
for(var i=1;i<arguments.length;i++){
if(node.tagName==String(arguments[i])){
return String(arguments[i]);
}
}
}
return "";
};
dojo.dom.setAttributeNS=function(elem,_170,_171,_172){
if(elem==null||((elem==undefined)&&(typeof elem=="undefined"))){
dojo.raise("No element given to dojo.dom.setAttributeNS");
}
if(!((elem.setAttributeNS==undefined)&&(typeof elem.setAttributeNS=="undefined"))){
elem.setAttributeNS(_170,_171,_172);
}else{
var _173=elem.ownerDocument;
var _174=_173.createNode(2,_171,_170);
_174.nodeValue=_172;
elem.setAttributeNode(_174);
}
};
dojo.provide("dojo.html.common");
dojo.lang.mixin(dojo.html,dojo.dom);
dojo.html.body=function(){
dojo.deprecated("dojo.html.body() moved to dojo.body()","0.5");
return dojo.body();
};
dojo.html.getEventTarget=function(evt){
if(!evt){
evt=dojo.global().event||{};
}
var t=(evt.srcElement?evt.srcElement:(evt.target?evt.target:null));
while((t)&&(t.nodeType!=1)){
t=t.parentNode;
}
return t;
};
dojo.html.getViewport=function(){
var _177=dojo.global();
var _178=dojo.doc();
var w=0;
var h=0;
if(dojo.render.html.mozilla){
w=_178.documentElement.clientWidth;
h=_177.innerHeight;
}else{
if(!dojo.render.html.opera&&_177.innerWidth){
w=_177.innerWidth;
h=_177.innerHeight;
}else{
if(!dojo.render.html.opera&&dojo.exists(_178,"documentElement.clientWidth")){
var w2=_178.documentElement.clientWidth;
if(!w||w2&&w2<w){
w=w2;
}
h=_178.documentElement.clientHeight;
}else{
if(dojo.body().clientWidth){
w=dojo.body().clientWidth;
h=dojo.body().clientHeight;
}
}
}
}
return {width:w,height:h};
};
dojo.html.getScroll=function(){
var _17c=dojo.global();
var _17d=dojo.doc();
var top=_17c.pageYOffset||_17d.documentElement.scrollTop||dojo.body().scrollTop||0;
var left=_17c.pageXOffset||_17d.documentElement.scrollLeft||dojo.body().scrollLeft||0;
return {top:top,left:left,offset:{x:left,y:top}};
};
dojo.html.getParentByType=function(node,type){
var _182=dojo.doc();
var _183=dojo.byId(node);
type=type.toLowerCase();
while((_183)&&(_183.nodeName.toLowerCase()!=type)){
if(_183==(_182["body"]||_182["documentElement"])){
return null;
}
_183=_183.parentNode;
}
return _183;
};
dojo.html.getAttribute=function(node,attr){
node=dojo.byId(node);
if((!node)||(!node.getAttribute)){
return null;
}
var ta=typeof attr=="string"?attr:new String(attr);
var v=node.getAttribute(ta.toUpperCase());
if((v)&&(typeof v=="string")&&(v!="")){
return v;
}
if(v&&v.value){
return v.value;
}
if((node.getAttributeNode)&&(node.getAttributeNode(ta))){
return (node.getAttributeNode(ta)).value;
}else{
if(node.getAttribute(ta)){
return node.getAttribute(ta);
}else{
if(node.getAttribute(ta.toLowerCase())){
return node.getAttribute(ta.toLowerCase());
}
}
}
return null;
};
dojo.html.hasAttribute=function(node,attr){
return dojo.html.getAttribute(dojo.byId(node),attr)?true:false;
};
dojo.html.getCursorPosition=function(e){
e=e||dojo.global().event;
var _18b={x:0,y:0};
if(e.pageX||e.pageY){
_18b.x=e.pageX;
_18b.y=e.pageY;
}else{
var de=dojo.doc().documentElement;
var db=dojo.body();
_18b.x=e.clientX+((de||db)["scrollLeft"])-((de||db)["clientLeft"]);
_18b.y=e.clientY+((de||db)["scrollTop"])-((de||db)["clientTop"]);
}
return _18b;
};
dojo.html.isTag=function(node){
node=dojo.byId(node);
if(node&&node.tagName){
for(var i=1;i<arguments.length;i++){
if(node.tagName.toLowerCase()==String(arguments[i]).toLowerCase()){
return String(arguments[i]).toLowerCase();
}
}
}
return "";
};
if(dojo.render.html.ie&&!dojo.render.html.ie70){
if(window.location.href.substr(0,6).toLowerCase()!="https:"){
(function(){
var _190=dojo.doc().createElement("script");
_190.src="javascript:'dojo.html.createExternalElement=function(doc, tag){ return doc.createElement(tag); }'";
dojo.doc().getElementsByTagName("head")[0].appendChild(_190);
})();
}
}else{
dojo.html.createExternalElement=function(doc,tag){
return doc.createElement(tag);
};
}
dojo.html._callDeprecated=function(_193,_194,args,_196,_197){
dojo.deprecated("dojo.html."+_193,"replaced by dojo.html."+_194+"("+(_196?"node, {"+_196+": "+_196+"}":"")+")"+(_197?"."+_197:""),"0.5");
var _198=[];
if(_196){
var _199={};
_199[_196]=args[1];
_198.push(args[0]);
_198.push(_199);
}else{
_198=args;
}
var ret=dojo.html[_194].apply(dojo.html,args);
if(_197){
return ret[_197];
}else{
return ret;
}
};
dojo.html.getViewportWidth=function(){
return dojo.html._callDeprecated("getViewportWidth","getViewport",arguments,null,"width");
};
dojo.html.getViewportHeight=function(){
return dojo.html._callDeprecated("getViewportHeight","getViewport",arguments,null,"height");
};
dojo.html.getViewportSize=function(){
return dojo.html._callDeprecated("getViewportSize","getViewport",arguments);
};
dojo.html.getScrollTop=function(){
return dojo.html._callDeprecated("getScrollTop","getScroll",arguments,null,"top");
};
dojo.html.getScrollLeft=function(){
return dojo.html._callDeprecated("getScrollLeft","getScroll",arguments,null,"left");
};
dojo.html.getScrollOffset=function(){
return dojo.html._callDeprecated("getScrollOffset","getScroll",arguments,null,"offset");
};
dojo.provide("dojo.uri.Uri");
dojo.uri=new function(){
this.dojoUri=function(uri){
return new dojo.uri.Uri(dojo.hostenv.getBaseScriptUri(),uri);
};
this.moduleUri=function(_19c,uri){
var loc=dojo.hostenv.getModuleSymbols(_19c).join("/");
if(!loc){
return null;
}
if(loc.lastIndexOf("/")!=loc.length-1){
loc+="/";
}
return new dojo.uri.Uri(dojo.hostenv.getBaseScriptUri()+loc,uri);
};
this.Uri=function(){
var uri=arguments[0];
for(var i=1;i<arguments.length;i++){
if(!arguments[i]){
continue;
}
var _1a1=new dojo.uri.Uri(arguments[i].toString());
var _1a2=new dojo.uri.Uri(uri.toString());
if((_1a1.path=="")&&(_1a1.scheme==null)&&(_1a1.authority==null)&&(_1a1.query==null)){
if(_1a1.fragment!=null){
_1a2.fragment=_1a1.fragment;
}
_1a1=_1a2;
}else{
if(_1a1.scheme==null){
_1a1.scheme=_1a2.scheme;
if(_1a1.authority==null){
_1a1.authority=_1a2.authority;
if(_1a1.path.charAt(0)!="/"){
var path=_1a2.path.substring(0,_1a2.path.lastIndexOf("/")+1)+_1a1.path;
var segs=path.split("/");
for(var j=0;j<segs.length;j++){
if(segs[j]=="."){
if(j==segs.length-1){
segs[j]="";
}else{
segs.splice(j,1);
j--;
}
}else{
if(j>0&&!(j==1&&segs[0]=="")&&segs[j]==".."&&segs[j-1]!=".."){
if(j==segs.length-1){
segs.splice(j,1);
segs[j-1]="";
}else{
segs.splice(j-1,2);
j-=2;
}
}
}
}
_1a1.path=segs.join("/");
}
}
}
}
uri="";
if(_1a1.scheme!=null){
uri+=_1a1.scheme+":";
}
if(_1a1.authority!=null){
uri+="//"+_1a1.authority;
}
uri+=_1a1.path;
if(_1a1.query!=null){
uri+="?"+_1a1.query;
}
if(_1a1.fragment!=null){
uri+="#"+_1a1.fragment;
}
}
this.uri=uri.toString();
var _1a6="^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$";
var r=this.uri.match(new RegExp(_1a6));
this.scheme=r[2]||(r[1]?"":null);
this.authority=r[4]||(r[3]?"":null);
this.path=r[5];
this.query=r[7]||(r[6]?"":null);
this.fragment=r[9]||(r[8]?"":null);
if(this.authority!=null){
_1a6="^((([^:]+:)?([^@]+))@)?([^:]*)(:([0-9]+))?$";
r=this.authority.match(new RegExp(_1a6));
this.user=r[3]||null;
this.password=r[4]||null;
this.host=r[5];
this.port=r[7]||null;
}
this.toString=function(){
return this.uri;
};
};
};
dojo.provide("dojo.html.style");
dojo.html.getClass=function(node){
node=dojo.byId(node);
if(!node){
return "";
}
var cs="";
if(node.className){
cs=node.className;
}else{
if(dojo.html.hasAttribute(node,"class")){
cs=dojo.html.getAttribute(node,"class");
}
}
return cs.replace(/^\s+|\s+$/g,"");
};
dojo.html.getClasses=function(node){
var c=dojo.html.getClass(node);
return (c=="")?[]:c.split(/\s+/g);
};
dojo.html.hasClass=function(node,_1ad){
return (new RegExp("(^|\\s+)"+_1ad+"(\\s+|$)")).test(dojo.html.getClass(node));
};
dojo.html.prependClass=function(node,_1af){
_1af+=" "+dojo.html.getClass(node);
return dojo.html.setClass(node,_1af);
};
dojo.html.addClass=function(node,_1b1){
if(dojo.html.hasClass(node,_1b1)){
return false;
}
_1b1=(dojo.html.getClass(node)+" "+_1b1).replace(/^\s+|\s+$/g,"");
return dojo.html.setClass(node,_1b1);
};
dojo.html.setClass=function(node,_1b3){
node=dojo.byId(node);
var cs=new String(_1b3);
try{
if(typeof node.className=="string"){
node.className=cs;
}else{
if(node.setAttribute){
node.setAttribute("class",_1b3);
node.className=cs;
}else{
return false;
}
}
}
catch(e){
dojo.debug("dojo.html.setClass() failed",e);
}
return true;
};
dojo.html.removeClass=function(node,_1b6,_1b7){
try{
if(!_1b7){
var _1b8=dojo.html.getClass(node).replace(new RegExp("(^|\\s+)"+_1b6+"(\\s+|$)"),"$1$2");
}else{
var _1b8=dojo.html.getClass(node).replace(_1b6,"");
}
dojo.html.setClass(node,_1b8);
}
catch(e){
dojo.debug("dojo.html.removeClass() failed",e);
}
return true;
};
dojo.html.replaceClass=function(node,_1ba,_1bb){
dojo.html.removeClass(node,_1bb);
dojo.html.addClass(node,_1ba);
};
dojo.html.classMatchType={ContainsAll:0,ContainsAny:1,IsOnly:2};
dojo.html.getElementsByClass=function(_1bc,_1bd,_1be,_1bf,_1c0){
_1c0=false;
var _1c1=dojo.doc();
_1bd=dojo.byId(_1bd)||_1c1;
var _1c2=_1bc.split(/\s+/g);
var _1c3=[];
if(_1bf!=1&&_1bf!=2){
_1bf=0;
}
var _1c4=new RegExp("(\\s|^)(("+_1c2.join(")|(")+"))(\\s|$)");
var _1c5=_1c2.join(" ").length;
var _1c6=[];
if(!_1c0&&_1c1.evaluate){
var _1c7=".//"+(_1be||"*")+"[contains(";
if(_1bf!=dojo.html.classMatchType.ContainsAny){
_1c7+="concat(' ',@class,' '), ' "+_1c2.join(" ') and contains(concat(' ',@class,' '), ' ")+" ')";
if(_1bf==2){
_1c7+=" and string-length(@class)="+_1c5+"]";
}else{
_1c7+="]";
}
}else{
_1c7+="concat(' ',@class,' '), ' "+_1c2.join(" ') or contains(concat(' ',@class,' '), ' ")+" ')]";
}
var _1c8=_1c1.evaluate(_1c7,_1bd,null,XPathResult.ANY_TYPE,null);
var _1c9=_1c8.iterateNext();
while(_1c9){
try{
_1c6.push(_1c9);
_1c9=_1c8.iterateNext();
}
catch(e){
break;
}
}
return _1c6;
}else{
if(!_1be){
_1be="*";
}
_1c6=_1bd.getElementsByTagName(_1be);
var node,i=0;
outer:
while(node=_1c6[i++]){
var _1cc=dojo.html.getClasses(node);
if(_1cc.length==0){
continue outer;
}
var _1cd=0;
for(var j=0;j<_1cc.length;j++){
if(_1c4.test(_1cc[j])){
if(_1bf==dojo.html.classMatchType.ContainsAny){
_1c3.push(node);
continue outer;
}else{
_1cd++;
}
}else{
if(_1bf==dojo.html.classMatchType.IsOnly){
continue outer;
}
}
}
if(_1cd==_1c2.length){
if((_1bf==dojo.html.classMatchType.IsOnly)&&(_1cd==_1cc.length)){
_1c3.push(node);
}else{
if(_1bf==dojo.html.classMatchType.ContainsAll){
_1c3.push(node);
}
}
}
}
return _1c3;
}
};
dojo.html.getElementsByClassName=dojo.html.getElementsByClass;
dojo.html.toCamelCase=function(_1cf){
var arr=_1cf.split("-"),cc=arr[0];
for(var i=1;i<arr.length;i++){
cc+=arr[i].charAt(0).toUpperCase()+arr[i].substring(1);
}
return cc;
};
dojo.html.toSelectorCase=function(_1d3){
return _1d3.replace(/([A-Z])/g,"-$1").toLowerCase();
};
dojo.html.getComputedStyle=function(node,_1d5,_1d6){
node=dojo.byId(node);
var _1d5=dojo.html.toSelectorCase(_1d5);
var _1d7=dojo.html.toCamelCase(_1d5);
if(!node||!node.style){
return _1d6;
}else{
if(document.defaultView&&dojo.html.isDescendantOf(node,node.ownerDocument)){
try{
var cs=document.defaultView.getComputedStyle(node,"");
if(cs){
return cs.getPropertyValue(_1d5);
}
}
catch(e){
if(node.style.getPropertyValue){
return node.style.getPropertyValue(_1d5);
}else{
return _1d6;
}
}
}else{
if(node.currentStyle){
return node.currentStyle[_1d7];
}
}
}
if(node.style.getPropertyValue){
return node.style.getPropertyValue(_1d5);
}else{
return _1d6;
}
};
dojo.html.getStyleProperty=function(node,_1da){
node=dojo.byId(node);
return (node&&node.style?node.style[dojo.html.toCamelCase(_1da)]:undefined);
};
dojo.html.getStyle=function(node,_1dc){
var _1dd=dojo.html.getStyleProperty(node,_1dc);
return (_1dd?_1dd:dojo.html.getComputedStyle(node,_1dc));
};
dojo.html.setStyle=function(node,_1df,_1e0){
node=dojo.byId(node);
if(node&&node.style){
var _1e1=dojo.html.toCamelCase(_1df);
node.style[_1e1]=_1e0;
}
};
dojo.html.setStyleText=function(_1e2,text){
try{
_1e2.style.cssText=text;
}
catch(e){
_1e2.setAttribute("style",text);
}
};
dojo.html.copyStyle=function(_1e4,_1e5){
if(!_1e5.style.cssText){
_1e4.setAttribute("style",_1e5.getAttribute("style"));
}else{
_1e4.style.cssText=_1e5.style.cssText;
}
dojo.html.addClass(_1e4,dojo.html.getClass(_1e5));
};
dojo.html.getUnitValue=function(node,_1e7,_1e8){
var s=dojo.html.getComputedStyle(node,_1e7);
if((!s)||((s=="auto")&&(_1e8))){
return {value:0,units:"px"};
}
var _1ea=s.match(/(\-?[\d.]+)([a-z%]*)/i);
if(!_1ea){
return dojo.html.getUnitValue.bad;
}
return {value:Number(_1ea[1]),units:_1ea[2].toLowerCase()};
};
dojo.html.getUnitValue.bad={value:NaN,units:""};
dojo.html.getPixelValue=function(node,_1ec,_1ed){
var _1ee=dojo.html.getUnitValue(node,_1ec,_1ed);
if(isNaN(_1ee.value)){
return 0;
}
if((_1ee.value)&&(_1ee.units!="px")){
return NaN;
}
return _1ee.value;
};
dojo.html.setPositivePixelValue=function(node,_1f0,_1f1){
if(isNaN(_1f1)){
return false;
}
node.style[_1f0]=Math.max(0,_1f1)+"px";
return true;
};
dojo.html.styleSheet=null;
dojo.html.insertCssRule=function(_1f2,_1f3,_1f4){
if(!dojo.html.styleSheet){
if(document.createStyleSheet){
dojo.html.styleSheet=document.createStyleSheet();
}else{
if(document.styleSheets[0]){
dojo.html.styleSheet=document.styleSheets[0];
}else{
return null;
}
}
}
if(arguments.length<3){
if(dojo.html.styleSheet.cssRules){
_1f4=dojo.html.styleSheet.cssRules.length;
}else{
if(dojo.html.styleSheet.rules){
_1f4=dojo.html.styleSheet.rules.length;
}else{
return null;
}
}
}
if(dojo.html.styleSheet.insertRule){
var rule=_1f2+" { "+_1f3+" }";
return dojo.html.styleSheet.insertRule(rule,_1f4);
}else{
if(dojo.html.styleSheet.addRule){
return dojo.html.styleSheet.addRule(_1f2,_1f3,_1f4);
}else{
return null;
}
}
};
dojo.html.removeCssRule=function(_1f6){
if(!dojo.html.styleSheet){
dojo.debug("no stylesheet defined for removing rules");
return false;
}
if(dojo.render.html.ie){
if(!_1f6){
_1f6=dojo.html.styleSheet.rules.length;
dojo.html.styleSheet.removeRule(_1f6);
}
}else{
if(document.styleSheets[0]){
if(!_1f6){
_1f6=dojo.html.styleSheet.cssRules.length;
}
dojo.html.styleSheet.deleteRule(_1f6);
}
}
return true;
};
dojo.html._insertedCssFiles=[];
dojo.html.insertCssFile=function(URI,doc,_1f9,_1fa){
if(!URI){
return;
}
if(!doc){
doc=document;
}
var _1fb=dojo.hostenv.getText(URI,false,_1fa);
if(_1fb===null){
return;
}
_1fb=dojo.html.fixPathsInCssText(_1fb,URI);
if(_1f9){
var idx=-1,node,ent=dojo.html._insertedCssFiles;
for(var i=0;i<ent.length;i++){
if((ent[i].doc==doc)&&(ent[i].cssText==_1fb)){
idx=i;
node=ent[i].nodeRef;
break;
}
}
if(node){
var _200=doc.getElementsByTagName("style");
for(var i=0;i<_200.length;i++){
if(_200[i]==node){
return;
}
}
dojo.html._insertedCssFiles.shift(idx,1);
}
}
var _201=dojo.html.insertCssText(_1fb,doc);
dojo.html._insertedCssFiles.push({"doc":doc,"cssText":_1fb,"nodeRef":_201});
if(_201&&djConfig.isDebug){
_201.setAttribute("dbgHref",URI);
}
return _201;
};
dojo.html.insertCssText=function(_202,doc,URI){
if(!_202){
return;
}
if(!doc){
doc=document;
}
if(URI){
_202=dojo.html.fixPathsInCssText(_202,URI);
}
var _205=doc.createElement("style");
_205.setAttribute("type","text/css");
var head=doc.getElementsByTagName("head")[0];
if(!head){
dojo.debug("No head tag in document, aborting styles");
return;
}else{
head.appendChild(_205);
}
if(_205.styleSheet){
var _207=function(){
try{
_205.styleSheet.cssText=_202;
}
catch(e){
dojo.debug(e);
}
};
if(_205.styleSheet.disabled){
setTimeout(_207,10);
}else{
_207();
}
}else{
var _208=doc.createTextNode(_202);
_205.appendChild(_208);
}
return _205;
};
dojo.html.fixPathsInCssText=function(_209,URI){
if(!_209||!URI){
return;
}
var _20b,str="",url="",_20e="[\\t\\s\\w\\(\\)\\/\\.\\\\'\"-:#=&?~]+";
var _20f=new RegExp("url\\(\\s*("+_20e+")\\s*\\)");
var _210=/(file|https?|ftps?):\/\//;
regexTrim=new RegExp("^[\\s]*(['\"]?)("+_20e+")\\1[\\s]*?$");
if(dojo.render.html.ie55||dojo.render.html.ie60){
var _211=new RegExp("AlphaImageLoader\\((.*)src=['\"]("+_20e+")['\"]");
while(_20b=_211.exec(_209)){
url=_20b[2].replace(regexTrim,"$2");
if(!_210.exec(url)){
url=(new dojo.uri.Uri(URI,url).toString());
}
str+=_209.substring(0,_20b.index)+"AlphaImageLoader("+_20b[1]+"src='"+url+"'";
_209=_209.substr(_20b.index+_20b[0].length);
}
_209=str+_209;
str="";
}
while(_20b=_20f.exec(_209)){
url=_20b[1].replace(regexTrim,"$2");
if(!_210.exec(url)){
url=(new dojo.uri.Uri(URI,url).toString());
}
str+=_209.substring(0,_20b.index)+"url("+url+")";
_209=_209.substr(_20b.index+_20b[0].length);
}
return str+_209;
};
dojo.html.setActiveStyleSheet=function(_212){
var i=0,a,els=dojo.doc().getElementsByTagName("link");
while(a=els[i++]){
if(a.getAttribute("rel").indexOf("style")!=-1&&a.getAttribute("title")){
a.disabled=true;
if(a.getAttribute("title")==_212){
a.disabled=false;
}
}
}
};
dojo.html.getActiveStyleSheet=function(){
var i=0,a,els=dojo.doc().getElementsByTagName("link");
while(a=els[i++]){
if(a.getAttribute("rel").indexOf("style")!=-1&&a.getAttribute("title")&&!a.disabled){
return a.getAttribute("title");
}
}
return null;
};
dojo.html.getPreferredStyleSheet=function(){
var i=0,a,els=dojo.doc().getElementsByTagName("link");
while(a=els[i++]){
if(a.getAttribute("rel").indexOf("style")!=-1&&a.getAttribute("rel").indexOf("alt")==-1&&a.getAttribute("title")){
return a.getAttribute("title");
}
}
return null;
};
dojo.html.applyBrowserClass=function(node){
var drh=dojo.render.html;
var _21e={dj_ie:drh.ie,dj_ie55:drh.ie55,dj_ie6:drh.ie60,dj_ie7:drh.ie70,dj_iequirks:drh.ie&&drh.quirks,dj_opera:drh.opera,dj_opera8:drh.opera&&(Math.floor(dojo.render.version)==8),dj_opera9:drh.opera&&(Math.floor(dojo.render.version)==9),dj_khtml:drh.khtml,dj_safari:drh.safari,dj_gecko:drh.mozilla};
for(var p in _21e){
if(_21e[p]){
dojo.html.addClass(node,p);
}
}
};
dojo.provide("dojo.html.*");
dojo.provide("dojo.html.display");
dojo.html._toggle=function(node,_221,_222){
node=dojo.byId(node);
_222(node,!_221(node));
return _221(node);
};
dojo.html.show=function(node){
node=dojo.byId(node);
if(dojo.html.getStyleProperty(node,"display")=="none"){
dojo.html.setStyle(node,"display",(node.dojoDisplayCache||""));
node.dojoDisplayCache=undefined;
}
};
dojo.html.hide=function(node){
node=dojo.byId(node);
if(typeof node["dojoDisplayCache"]=="undefined"){
var d=dojo.html.getStyleProperty(node,"display");
if(d!="none"){
node.dojoDisplayCache=d;
}
}
dojo.html.setStyle(node,"display","none");
};
dojo.html.setShowing=function(node,_227){
dojo.html[(_227?"show":"hide")](node);
};
dojo.html.isShowing=function(node){
return (dojo.html.getStyleProperty(node,"display")!="none");
};
dojo.html.toggleShowing=function(node){
return dojo.html._toggle(node,dojo.html.isShowing,dojo.html.setShowing);
};
dojo.html.displayMap={tr:"",td:"",th:"",img:"inline",span:"inline",input:"inline",button:"inline"};
dojo.html.suggestDisplayByTagName=function(node){
node=dojo.byId(node);
if(node&&node.tagName){
var tag=node.tagName.toLowerCase();
return (tag in dojo.html.displayMap?dojo.html.displayMap[tag]:"block");
}
};
dojo.html.setDisplay=function(node,_22d){
dojo.html.setStyle(node,"display",((_22d instanceof String||typeof _22d=="string")?_22d:(_22d?dojo.html.suggestDisplayByTagName(node):"none")));
};
dojo.html.isDisplayed=function(node){
return (dojo.html.getComputedStyle(node,"display")!="none");
};
dojo.html.toggleDisplay=function(node){
return dojo.html._toggle(node,dojo.html.isDisplayed,dojo.html.setDisplay);
};
dojo.html.setVisibility=function(node,_231){
dojo.html.setStyle(node,"visibility",((_231 instanceof String||typeof _231=="string")?_231:(_231?"visible":"hidden")));
};
dojo.html.isVisible=function(node){
return (dojo.html.getComputedStyle(node,"visibility")!="hidden");
};
dojo.html.toggleVisibility=function(node){
return dojo.html._toggle(node,dojo.html.isVisible,dojo.html.setVisibility);
};
dojo.html.setOpacity=function(node,_235,_236){
node=dojo.byId(node);
var h=dojo.render.html;
if(!_236){
if(_235>=1){
if(h.ie){
dojo.html.clearOpacity(node);
return;
}else{
_235=0.999999;
}
}else{
if(_235<0){
_235=0;
}
}
}
if(h.ie){
if(node.nodeName.toLowerCase()=="tr"){
var tds=node.getElementsByTagName("td");
for(var x=0;x<tds.length;x++){
tds[x].style.filter="Alpha(Opacity="+_235*100+")";
}
}
node.style.filter="Alpha(Opacity="+_235*100+")";
}else{
if(h.moz){
node.style.opacity=_235;
node.style.MozOpacity=_235;
}else{
if(h.safari){
node.style.opacity=_235;
node.style.KhtmlOpacity=_235;
}else{
node.style.opacity=_235;
}
}
}
};
dojo.html.clearOpacity=function(node){
node=dojo.byId(node);
var ns=node.style;
var h=dojo.render.html;
if(h.ie){
try{
if(node.filters&&node.filters.alpha){
ns.filter="";
}
}
catch(e){
}
}else{
if(h.moz){
ns.opacity=1;
ns.MozOpacity=1;
}else{
if(h.safari){
ns.opacity=1;
ns.KhtmlOpacity=1;
}else{
ns.opacity=1;
}
}
}
};
dojo.html.getOpacity=function(node){
node=dojo.byId(node);
var h=dojo.render.html;
if(h.ie){
var opac=(node.filters&&node.filters.alpha&&typeof node.filters.alpha.opacity=="number"?node.filters.alpha.opacity:100)/100;
}else{
var opac=node.style.opacity||node.style.MozOpacity||node.style.KhtmlOpacity||1;
}
return opac>=0.999999?1:Number(opac);
};
dojo.provide("dojo.html.layout");
dojo.html.sumAncestorProperties=function(node,prop){
node=dojo.byId(node);
if(!node){
return 0;
}
var _242=0;
while(node){
if(dojo.html.getComputedStyle(node,"position")=="fixed"){
return 0;
}
var val=node[prop];
if(val){
_242+=val-0;
if(node==dojo.body()){
break;
}
}
node=node.parentNode;
}
return _242;
};
dojo.html.setStyleAttributes=function(node,_245){
node=dojo.byId(node);
var _246=_245.replace(/(;)?\s*$/,"").split(";");
for(var i=0;i<_246.length;i++){
var _248=_246[i].split(":");
var name=_248[0].replace(/\s*$/,"").replace(/^\s*/,"").toLowerCase();
var _24a=_248[1].replace(/\s*$/,"").replace(/^\s*/,"");
switch(name){
case "opacity":
dojo.html.setOpacity(node,_24a);
break;
case "content-height":
dojo.html.setContentBox(node,{height:_24a});
break;
case "content-width":
dojo.html.setContentBox(node,{width:_24a});
break;
case "outer-height":
dojo.html.setMarginBox(node,{height:_24a});
break;
case "outer-width":
dojo.html.setMarginBox(node,{width:_24a});
break;
default:
node.style[dojo.html.toCamelCase(name)]=_24a;
}
}
};
dojo.html.boxSizing={MARGIN_BOX:"margin-box",BORDER_BOX:"border-box",PADDING_BOX:"padding-box",CONTENT_BOX:"content-box"};
dojo.html.getAbsolutePosition=dojo.html.abs=function(node,_24c,_24d){
node=dojo.byId(node,node.ownerDocument);
var ret={x:0,y:0};
var bs=dojo.html.boxSizing;
if(!_24d){
_24d=bs.CONTENT_BOX;
}
var _250=2;
var _251;
switch(_24d){
case bs.MARGIN_BOX:
_251=3;
break;
case bs.BORDER_BOX:
_251=2;
break;
case bs.PADDING_BOX:
default:
_251=1;
break;
case bs.CONTENT_BOX:
_251=0;
break;
}
var h=dojo.render.html;
var db=document["body"]||document["documentElement"];
if(h.ie){
with(node.getBoundingClientRect()){
ret.x=left-2;
ret.y=top-2;
}
}else{
if(document.getBoxObjectFor){
_250=1;
try{
var bo=document.getBoxObjectFor(node);
ret.x=bo.x-dojo.html.sumAncestorProperties(node,"scrollLeft");
ret.y=bo.y-dojo.html.sumAncestorProperties(node,"scrollTop");
}
catch(e){
}
}else{
if(node["offsetParent"]){
var _255;
if((h.safari)&&(node.style.getPropertyValue("position")=="absolute")&&(node.parentNode==db)){
_255=db;
}else{
_255=db.parentNode;
}
if(node.parentNode!=db){
var nd=node;
if(dojo.render.html.opera){
nd=db;
}
ret.x-=dojo.html.sumAncestorProperties(nd,"scrollLeft");
ret.y-=dojo.html.sumAncestorProperties(nd,"scrollTop");
}
var _257=node;
do{
var n=_257["offsetLeft"];
if(!h.opera||n>0){
ret.x+=isNaN(n)?0:n;
}
var m=_257["offsetTop"];
ret.y+=isNaN(m)?0:m;
_257=_257.offsetParent;
}while((_257!=_255)&&(_257!=null));
}else{
if(node["x"]&&node["y"]){
ret.x+=isNaN(node.x)?0:node.x;
ret.y+=isNaN(node.y)?0:node.y;
}
}
}
}
if(_24c){
var _25a=dojo.html.getScroll();
ret.y+=_25a.top;
ret.x+=_25a.left;
}
var _25b=[dojo.html.getPaddingExtent,dojo.html.getBorderExtent,dojo.html.getMarginExtent];
if(_250>_251){
for(var i=_251;i<_250;++i){
ret.y+=_25b[i](node,"top");
ret.x+=_25b[i](node,"left");
}
}else{
if(_250<_251){
for(var i=_251;i>_250;--i){
ret.y-=_25b[i-1](node,"top");
ret.x-=_25b[i-1](node,"left");
}
}
}
ret.top=ret.y;
ret.left=ret.x;
return ret;
};
dojo.html.isPositionAbsolute=function(node){
return (dojo.html.getComputedStyle(node,"position")=="absolute");
};
dojo.html._sumPixelValues=function(node,_25f,_260){
var _261=0;
for(var x=0;x<_25f.length;x++){
_261+=dojo.html.getPixelValue(node,_25f[x],_260);
}
return _261;
};
dojo.html.getMargin=function(node){
return {width:dojo.html._sumPixelValues(node,["margin-left","margin-right"],(dojo.html.getComputedStyle(node,"position")=="absolute")),height:dojo.html._sumPixelValues(node,["margin-top","margin-bottom"],(dojo.html.getComputedStyle(node,"position")=="absolute"))};
};
dojo.html.getBorder=function(node){
return {width:dojo.html.getBorderExtent(node,"left")+dojo.html.getBorderExtent(node,"right"),height:dojo.html.getBorderExtent(node,"top")+dojo.html.getBorderExtent(node,"bottom")};
};
dojo.html.getBorderExtent=function(node,side){
return (dojo.html.getStyle(node,"border-"+side+"-style")=="none"?0:dojo.html.getPixelValue(node,"border-"+side+"-width"));
};
dojo.html.getMarginExtent=function(node,side){
return dojo.html._sumPixelValues(node,["margin-"+side],dojo.html.isPositionAbsolute(node));
};
dojo.html.getPaddingExtent=function(node,side){
return dojo.html._sumPixelValues(node,["padding-"+side],true);
};
dojo.html.getPadding=function(node){
return {width:dojo.html._sumPixelValues(node,["padding-left","padding-right"],true),height:dojo.html._sumPixelValues(node,["padding-top","padding-bottom"],true)};
};
dojo.html.getPadBorder=function(node){
var pad=dojo.html.getPadding(node);
var _26e=dojo.html.getBorder(node);
return {width:pad.width+_26e.width,height:pad.height+_26e.height};
};
dojo.html.getBoxSizing=function(node){
var h=dojo.render.html;
var bs=dojo.html.boxSizing;
if(((h.ie)||(h.opera))&&node.nodeName!="IMG"){
var cm=document["compatMode"];
if((cm=="BackCompat")||(cm=="QuirksMode")){
return bs.BORDER_BOX;
}else{
return bs.CONTENT_BOX;
}
}else{
if(arguments.length==0){
node=document.documentElement;
}
var _273=dojo.html.getStyle(node,"-moz-box-sizing");
if(!_273){
_273=dojo.html.getStyle(node,"box-sizing");
}
return (_273?_273:bs.CONTENT_BOX);
}
};
dojo.html.isBorderBox=function(node){
return (dojo.html.getBoxSizing(node)==dojo.html.boxSizing.BORDER_BOX);
};
dojo.html.getBorderBox=function(node){
node=dojo.byId(node);
return {width:node.offsetWidth,height:node.offsetHeight};
};
dojo.html.getPaddingBox=function(node){
var box=dojo.html.getBorderBox(node);
var _278=dojo.html.getBorder(node);
return {width:box.width-_278.width,height:box.height-_278.height};
};
dojo.html.getContentBox=function(node){
node=dojo.byId(node);
var _27a=dojo.html.getPadBorder(node);
return {width:node.offsetWidth-_27a.width,height:node.offsetHeight-_27a.height};
};
dojo.html.setContentBox=function(node,args){
node=dojo.byId(node);
var _27d=0;
var _27e=0;
var isbb=dojo.html.isBorderBox(node);
var _280=(isbb?dojo.html.getPadBorder(node):{width:0,height:0});
var ret={};
if(typeof args.width!="undefined"){
_27d=args.width+_280.width;
ret.width=dojo.html.setPositivePixelValue(node,"width",_27d);
}
if(typeof args.height!="undefined"){
_27e=args.height+_280.height;
ret.height=dojo.html.setPositivePixelValue(node,"height",_27e);
}
return ret;
};
dojo.html.getMarginBox=function(node){
var _283=dojo.html.getBorderBox(node);
var _284=dojo.html.getMargin(node);
return {width:_283.width+_284.width,height:_283.height+_284.height};
};
dojo.html.setMarginBox=function(node,args){
node=dojo.byId(node);
var _287=0;
var _288=0;
var isbb=dojo.html.isBorderBox(node);
var _28a=(!isbb?dojo.html.getPadBorder(node):{width:0,height:0});
var _28b=dojo.html.getMargin(node);
var ret={};
if(typeof args.width!="undefined"){
_287=args.width-_28a.width;
_287-=_28b.width;
ret.width=dojo.html.setPositivePixelValue(node,"width",_287);
}
if(typeof args.height!="undefined"){
_288=args.height-_28a.height;
_288-=_28b.height;
ret.height=dojo.html.setPositivePixelValue(node,"height",_288);
}
return ret;
};
dojo.html.getElementBox=function(node,type){
var bs=dojo.html.boxSizing;
switch(type){
case bs.MARGIN_BOX:
return dojo.html.getMarginBox(node);
case bs.BORDER_BOX:
return dojo.html.getBorderBox(node);
case bs.PADDING_BOX:
return dojo.html.getPaddingBox(node);
case bs.CONTENT_BOX:
default:
return dojo.html.getContentBox(node);
}
};
dojo.html.toCoordinateObject=dojo.html.toCoordinateArray=function(_290,_291,_292){
if(_290 instanceof Array||typeof _290=="array"){
dojo.deprecated("dojo.html.toCoordinateArray","use dojo.html.toCoordinateObject({left: , top: , width: , height: }) instead","0.5");
while(_290.length<4){
_290.push(0);
}
while(_290.length>4){
_290.pop();
}
var ret={left:_290[0],top:_290[1],width:_290[2],height:_290[3]};
}else{
if(!_290.nodeType&&!(_290 instanceof String||typeof _290=="string")&&("width" in _290||"height" in _290||"left" in _290||"x" in _290||"top" in _290||"y" in _290)){
var ret={left:_290.left||_290.x||0,top:_290.top||_290.y||0,width:_290.width||0,height:_290.height||0};
}else{
var node=dojo.byId(_290);
var pos=dojo.html.abs(node,_291,_292);
var _296=dojo.html.getMarginBox(node);
var ret={left:pos.left,top:pos.top,width:_296.width,height:_296.height};
}
}
ret.x=ret.left;
ret.y=ret.top;
return ret;
};
dojo.html.setMarginBoxWidth=dojo.html.setOuterWidth=function(node,_298){
return dojo.html._callDeprecated("setMarginBoxWidth","setMarginBox",arguments,"width");
};
dojo.html.setMarginBoxHeight=dojo.html.setOuterHeight=function(){
return dojo.html._callDeprecated("setMarginBoxHeight","setMarginBox",arguments,"height");
};
dojo.html.getMarginBoxWidth=dojo.html.getOuterWidth=function(){
return dojo.html._callDeprecated("getMarginBoxWidth","getMarginBox",arguments,null,"width");
};
dojo.html.getMarginBoxHeight=dojo.html.getOuterHeight=function(){
return dojo.html._callDeprecated("getMarginBoxHeight","getMarginBox",arguments,null,"height");
};
dojo.html.getTotalOffset=function(node,type,_29b){
return dojo.html._callDeprecated("getTotalOffset","getAbsolutePosition",arguments,null,type);
};
dojo.html.getAbsoluteX=function(node,_29d){
return dojo.html._callDeprecated("getAbsoluteX","getAbsolutePosition",arguments,null,"x");
};
dojo.html.getAbsoluteY=function(node,_29f){
return dojo.html._callDeprecated("getAbsoluteY","getAbsolutePosition",arguments,null,"y");
};
dojo.html.totalOffsetLeft=function(node,_2a1){
return dojo.html._callDeprecated("totalOffsetLeft","getAbsolutePosition",arguments,null,"left");
};
dojo.html.totalOffsetTop=function(node,_2a3){
return dojo.html._callDeprecated("totalOffsetTop","getAbsolutePosition",arguments,null,"top");
};
dojo.html.getMarginWidth=function(node){
return dojo.html._callDeprecated("getMarginWidth","getMargin",arguments,null,"width");
};
dojo.html.getMarginHeight=function(node){
return dojo.html._callDeprecated("getMarginHeight","getMargin",arguments,null,"height");
};
dojo.html.getBorderWidth=function(node){
return dojo.html._callDeprecated("getBorderWidth","getBorder",arguments,null,"width");
};
dojo.html.getBorderHeight=function(node){
return dojo.html._callDeprecated("getBorderHeight","getBorder",arguments,null,"height");
};
dojo.html.getPaddingWidth=function(node){
return dojo.html._callDeprecated("getPaddingWidth","getPadding",arguments,null,"width");
};
dojo.html.getPaddingHeight=function(node){
return dojo.html._callDeprecated("getPaddingHeight","getPadding",arguments,null,"height");
};
dojo.html.getPadBorderWidth=function(node){
return dojo.html._callDeprecated("getPadBorderWidth","getPadBorder",arguments,null,"width");
};
dojo.html.getPadBorderHeight=function(node){
return dojo.html._callDeprecated("getPadBorderHeight","getPadBorder",arguments,null,"height");
};
dojo.html.getBorderBoxWidth=dojo.html.getInnerWidth=function(){
return dojo.html._callDeprecated("getBorderBoxWidth","getBorderBox",arguments,null,"width");
};
dojo.html.getBorderBoxHeight=dojo.html.getInnerHeight=function(){
return dojo.html._callDeprecated("getBorderBoxHeight","getBorderBox",arguments,null,"height");
};
dojo.html.getContentBoxWidth=dojo.html.getContentWidth=function(){
return dojo.html._callDeprecated("getContentBoxWidth","getContentBox",arguments,null,"width");
};
dojo.html.getContentBoxHeight=dojo.html.getContentHeight=function(){
return dojo.html._callDeprecated("getContentBoxHeight","getContentBox",arguments,null,"height");
};
dojo.html.setContentBoxWidth=dojo.html.setContentWidth=function(node,_2ad){
return dojo.html._callDeprecated("setContentBoxWidth","setContentBox",arguments,"width");
};
dojo.html.setContentBoxHeight=dojo.html.setContentHeight=function(node,_2af){
return dojo.html._callDeprecated("setContentBoxHeight","setContentBox",arguments,"height");
};
dojo.provide("dojo.html.util");
dojo.html.getElementWindow=function(_2b0){
return dojo.html.getDocumentWindow(_2b0.ownerDocument);
};
dojo.html.getDocumentWindow=function(doc){
if(dojo.render.html.safari&&!doc._parentWindow){
var fix=function(win){
win.document._parentWindow=win;
for(var i=0;i<win.frames.length;i++){
fix(win.frames[i]);
}
};
fix(window.top);
}
if(dojo.render.html.ie&&window!==document.parentWindow&&!doc._parentWindow){
doc.parentWindow.execScript("document._parentWindow = window;","Javascript");
var win=doc._parentWindow;
doc._parentWindow=null;
return win;
}
return doc._parentWindow||doc.parentWindow||doc.defaultView;
};
dojo.html.gravity=function(node,e){
node=dojo.byId(node);
var _2b8=dojo.html.getCursorPosition(e);
with(dojo.html){
var _2b9=getAbsolutePosition(node,true);
var bb=getBorderBox(node);
var _2bb=_2b9.x+(bb.width/2);
var _2bc=_2b9.y+(bb.height/2);
}
with(dojo.html.gravity){
return ((_2b8.x<_2bb?WEST:EAST)|(_2b8.y<_2bc?NORTH:SOUTH));
}
};
dojo.html.gravity.NORTH=1;
dojo.html.gravity.SOUTH=1<<1;
dojo.html.gravity.EAST=1<<2;
dojo.html.gravity.WEST=1<<3;
dojo.html.overElement=function(_2bd,e){
_2bd=dojo.byId(_2bd);
var _2bf=dojo.html.getCursorPosition(e);
var bb=dojo.html.getBorderBox(_2bd);
var _2c1=dojo.html.getAbsolutePosition(_2bd,true,dojo.html.boxSizing.BORDER_BOX);
var top=_2c1.y;
var _2c3=top+bb.height;
var left=_2c1.x;
var _2c5=left+bb.width;
return (_2bf.x>=left&&_2bf.x<=_2c5&&_2bf.y>=top&&_2bf.y<=_2c3);
};
dojo.html.renderedTextContent=function(node){
node=dojo.byId(node);
var _2c7="";
if(node==null){
return _2c7;
}
for(var i=0;i<node.childNodes.length;i++){
switch(node.childNodes[i].nodeType){
case 1:
case 5:
var _2c9="unknown";
try{
_2c9=dojo.html.getStyle(node.childNodes[i],"display");
}
catch(E){
}
switch(_2c9){
case "block":
case "list-item":
case "run-in":
case "table":
case "table-row-group":
case "table-header-group":
case "table-footer-group":
case "table-row":
case "table-column-group":
case "table-column":
case "table-cell":
case "table-caption":
_2c7+="\n";
_2c7+=dojo.html.renderedTextContent(node.childNodes[i]);
_2c7+="\n";
break;
case "none":
break;
default:
if(node.childNodes[i].tagName&&node.childNodes[i].tagName.toLowerCase()=="br"){
_2c7+="\n";
}else{
_2c7+=dojo.html.renderedTextContent(node.childNodes[i]);
}
break;
}
break;
case 3:
case 2:
case 4:
var text=node.childNodes[i].nodeValue;
var _2cb="unknown";
try{
_2cb=dojo.html.getStyle(node,"text-transform");
}
catch(E){
}
switch(_2cb){
case "capitalize":
var _2cc=text.split(" ");
for(var i=0;i<_2cc.length;i++){
_2cc[i]=_2cc[i].charAt(0).toUpperCase()+_2cc[i].substring(1);
}
text=_2cc.join(" ");
break;
case "uppercase":
text=text.toUpperCase();
break;
case "lowercase":
text=text.toLowerCase();
break;
default:
break;
}
switch(_2cb){
case "nowrap":
break;
case "pre-wrap":
break;
case "pre-line":
break;
case "pre":
break;
default:
text=text.replace(/\s+/," ");
if(/\s$/.test(_2c7)){
text.replace(/^\s/,"");
}
break;
}
_2c7+=text;
break;
default:
break;
}
}
return _2c7;
};
dojo.html.createNodesFromText=function(txt,trim){
if(trim){
txt=txt.replace(/^\s+|\s+$/g,"");
}
var tn=dojo.doc().createElement("div");
tn.style.visibility="hidden";
dojo.body().appendChild(tn);
var _2d0="none";
if((/^<t[dh][\s\r\n>]/i).test(txt.replace(/^\s+/))){
txt="<table><tbody><tr>"+txt+"</tr></tbody></table>";
_2d0="cell";
}else{
if((/^<tr[\s\r\n>]/i).test(txt.replace(/^\s+/))){
txt="<table><tbody>"+txt+"</tbody></table>";
_2d0="row";
}else{
if((/^<(thead|tbody|tfoot)[\s\r\n>]/i).test(txt.replace(/^\s+/))){
txt="<table>"+txt+"</table>";
_2d0="section";
}
}
}
tn.innerHTML=txt;
if(tn["normalize"]){
tn.normalize();
}
var _2d1=null;
switch(_2d0){
case "cell":
_2d1=tn.getElementsByTagName("tr")[0];
break;
case "row":
_2d1=tn.getElementsByTagName("tbody")[0];
break;
case "section":
_2d1=tn.getElementsByTagName("table")[0];
break;
default:
_2d1=tn;
break;
}
var _2d2=[];
for(var x=0;x<_2d1.childNodes.length;x++){
_2d2.push(_2d1.childNodes[x].cloneNode(true));
}
tn.style.display="none";
dojo.html.destroyNode(tn);
return _2d2;
};
dojo.html.placeOnScreen=function(node,_2d5,_2d6,_2d7,_2d8,_2d9,_2da){
if(_2d5 instanceof Array||typeof _2d5=="array"){
_2da=_2d9;
_2d9=_2d8;
_2d8=_2d7;
_2d7=_2d6;
_2d6=_2d5[1];
_2d5=_2d5[0];
}
if(_2d9 instanceof String||typeof _2d9=="string"){
_2d9=_2d9.split(",");
}
if(!isNaN(_2d7)){
_2d7=[Number(_2d7),Number(_2d7)];
}else{
if(!(_2d7 instanceof Array||typeof _2d7=="array")){
_2d7=[0,0];
}
}
var _2db=dojo.html.getScroll().offset;
var view=dojo.html.getViewport();
node=dojo.byId(node);
var _2dd=node.style.display;
node.style.display="";
var bb=dojo.html.getBorderBox(node);
var w=bb.width;
var h=bb.height;
node.style.display=_2dd;
if(!(_2d9 instanceof Array||typeof _2d9=="array")){
_2d9=["TL"];
}
var _2e1,_2e2,_2e3=Infinity,_2e4;
for(var _2e5=0;_2e5<_2d9.length;++_2e5){
var _2e6=_2d9[_2e5];
var _2e7=true;
var tryX=_2d5-(_2e6.charAt(1)=="L"?0:w)+_2d7[0]*(_2e6.charAt(1)=="L"?1:-1);
var tryY=_2d6-(_2e6.charAt(0)=="T"?0:h)+_2d7[1]*(_2e6.charAt(0)=="T"?1:-1);
if(_2d8){
tryX-=_2db.x;
tryY-=_2db.y;
}
if(tryX<0){
tryX=0;
_2e7=false;
}
if(tryY<0){
tryY=0;
_2e7=false;
}
var x=tryX+w;
if(x>view.width){
x=view.width-w;
_2e7=false;
}else{
x=tryX;
}
x=Math.max(_2d7[0],x)+_2db.x;
var y=tryY+h;
if(y>view.height){
y=view.height-h;
_2e7=false;
}else{
y=tryY;
}
y=Math.max(_2d7[1],y)+_2db.y;
if(_2e7){
_2e1=x;
_2e2=y;
_2e3=0;
_2e4=_2e6;
break;
}else{
var dist=Math.pow(x-tryX-_2db.x,2)+Math.pow(y-tryY-_2db.y,2);
if(_2e3>dist){
_2e3=dist;
_2e1=x;
_2e2=y;
_2e4=_2e6;
}
}
}
if(!_2da){
node.style.left=_2e1+"px";
node.style.top=_2e2+"px";
}
return {left:_2e1,top:_2e2,x:_2e1,y:_2e2,dist:_2e3,corner:_2e4};
};
dojo.html.placeOnScreenPoint=function(node,_2ee,_2ef,_2f0,_2f1){
dojo.deprecated("dojo.html.placeOnScreenPoint","use dojo.html.placeOnScreen() instead","0.5");
return dojo.html.placeOnScreen(node,_2ee,_2ef,_2f0,_2f1,["TL","TR","BL","BR"]);
};
dojo.html.placeOnScreenAroundElement=function(node,_2f3,_2f4,_2f5,_2f6,_2f7){
var best,_2f9=Infinity;
_2f3=dojo.byId(_2f3);
var _2fa=_2f3.style.display;
_2f3.style.display="";
var mb=dojo.html.getElementBox(_2f3,_2f5);
var _2fc=mb.width;
var _2fd=mb.height;
var _2fe=dojo.html.getAbsolutePosition(_2f3,true,_2f5);
_2f3.style.display=_2fa;
for(var _2ff in _2f6){
var pos,_301,_302;
var _303=_2f6[_2ff];
_301=_2fe.x+(_2ff.charAt(1)=="L"?0:_2fc);
_302=_2fe.y+(_2ff.charAt(0)=="T"?0:_2fd);
pos=dojo.html.placeOnScreen(node,_301,_302,_2f4,true,_303,true);
if(pos.dist==0){
best=pos;
break;
}else{
if(_2f9>pos.dist){
_2f9=pos.dist;
best=pos;
}
}
}
if(!_2f7){
node.style.left=best.left+"px";
node.style.top=best.top+"px";
}
return best;
};
dojo.html.scrollIntoView=function(node){
if(!node){
return;
}
if(dojo.render.html.ie){
if(dojo.html.getBorderBox(node.parentNode).height<=node.parentNode.scrollHeight){
node.scrollIntoView(false);
}
}else{
if(dojo.render.html.mozilla){
node.scrollIntoView(false);
}else{
var _305=node.parentNode;
var _306=_305.scrollTop+dojo.html.getBorderBox(_305).height;
var _307=node.offsetTop+dojo.html.getMarginBox(node).height;
if(_306<_307){
_305.scrollTop+=(_307-_306);
}else{
if(_305.scrollTop>node.offsetTop){
_305.scrollTop-=(_305.scrollTop-node.offsetTop);
}
}
}
}
};
dojo.provide("dojo.xml.Parse");
dojo.xml.Parse=function(){
var isIE=((dojo.render.html.capable)&&(dojo.render.html.ie));
function getTagName(node){
try{
return node.tagName.toLowerCase();
}
catch(e){
return "";
}
}
function getDojoTagName(node){
var _30b=getTagName(node);
if(!_30b){
return "";
}
if((dojo.widget)&&(dojo.widget.tags[_30b])){
return _30b;
}
var p=_30b.indexOf(":");
if(p>=0){
return _30b;
}
if(_30b.substr(0,5)=="dojo:"){
return _30b;
}
if(dojo.render.html.capable&&dojo.render.html.ie&&node.scopeName!="HTML"){
return node.scopeName.toLowerCase()+":"+_30b;
}
if(_30b.substr(0,4)=="dojo"){
return "dojo:"+_30b.substring(4);
}
var djt=node.getAttribute("dojoType")||node.getAttribute("dojotype");
if(djt){
if(djt.indexOf(":")<0){
djt="dojo:"+djt;
}
return djt.toLowerCase();
}
djt=node.getAttributeNS&&node.getAttributeNS(dojo.dom.dojoml,"type");
if(djt){
return "dojo:"+djt.toLowerCase();
}
try{
djt=node.getAttribute("dojo:type");
}
catch(e){
}
if(djt){
return "dojo:"+djt.toLowerCase();
}
if((dj_global["djConfig"])&&(!djConfig["ignoreClassNames"])){
var _30e=node.className||node.getAttribute("class");
if((_30e)&&(_30e.indexOf)&&(_30e.indexOf("dojo-")!=-1)){
var _30f=_30e.split(" ");
for(var x=0,c=_30f.length;x<c;x++){
if(_30f[x].slice(0,5)=="dojo-"){
return "dojo:"+_30f[x].substr(5).toLowerCase();
}
}
}
}
return "";
}
this.parseElement=function(node,_313,_314,_315){
var _316=getTagName(node);
if(isIE&&_316.indexOf("/")==0){
return null;
}
try{
var attr=node.getAttribute("parseWidgets");
if(attr&&attr.toLowerCase()=="false"){
return {};
}
}
catch(e){
}
var _318=true;
if(_314){
var _319=getDojoTagName(node);
_316=_319||_316;
_318=Boolean(_319);
}
var _31a={};
_31a[_316]=[];
var pos=_316.indexOf(":");
if(pos>0){
var ns=_316.substring(0,pos);
_31a["ns"]=ns;
if((dojo.ns)&&(!dojo.ns.allow(ns))){
_318=false;
}
}
if(_318){
var _31d=this.parseAttributes(node);
for(var attr in _31d){
if((!_31a[_316][attr])||(typeof _31a[_316][attr]!="array")){
_31a[_316][attr]=[];
}
_31a[_316][attr].push(_31d[attr]);
}
_31a[_316].nodeRef=node;
_31a.tagName=_316;
_31a.index=_315||0;
}
var _31e=0;
for(var i=0;i<node.childNodes.length;i++){
var tcn=node.childNodes.item(i);
switch(tcn.nodeType){
case dojo.dom.ELEMENT_NODE:
var ctn=getDojoTagName(tcn)||getTagName(tcn);
if(!_31a[ctn]){
_31a[ctn]=[];
}
_31a[ctn].push(this.parseElement(tcn,true,_314,_31e));
if((tcn.childNodes.length==1)&&(tcn.childNodes.item(0).nodeType==dojo.dom.TEXT_NODE)){
_31a[ctn][_31a[ctn].length-1].value=tcn.childNodes.item(0).nodeValue;
}
_31e++;
break;
case dojo.dom.TEXT_NODE:
if(node.childNodes.length==1){
_31a[_316].push({value:node.childNodes.item(0).nodeValue});
}
break;
default:
break;
}
}
return _31a;
};
this.parseAttributes=function(node){
var _323={};
var atts=node.attributes;
var _325,i=0;
while((_325=atts[i++])){
if(isIE){
if(!_325){
continue;
}
if((typeof _325=="object")&&(typeof _325.nodeValue=="undefined")||(_325.nodeValue==null)||(_325.nodeValue=="")){
continue;
}
}
var nn=_325.nodeName.split(":");
nn=(nn.length==2)?nn[1]:_325.nodeName;
_323[nn]={value:_325.nodeValue};
}
return _323;
};
};
dojo.provide("dojo.lang.func");
dojo.lang.hitch=function(_328,_329){
var fcn=(dojo.lang.isString(_329)?_328[_329]:_329)||function(){
};
return function(){
return fcn.apply(_328,arguments);
};
};
dojo.lang.anonCtr=0;
dojo.lang.anon={};
dojo.lang.nameAnonFunc=function(_32b,_32c,_32d){
var nso=(_32c||dojo.lang.anon);
if((_32d)||((dj_global["djConfig"])&&(djConfig["slowAnonFuncLookups"]==true))){
for(var x in nso){
try{
if(nso[x]===_32b){
return x;
}
}
catch(e){
}
}
}
var ret="__"+dojo.lang.anonCtr++;
while(typeof nso[ret]!="undefined"){
ret="__"+dojo.lang.anonCtr++;
}
nso[ret]=_32b;
return ret;
};
dojo.lang.forward=function(_331){
return function(){
return this[_331].apply(this,arguments);
};
};
dojo.lang.curry=function(_332,func){
var _334=[];
_332=_332||dj_global;
if(dojo.lang.isString(func)){
func=_332[func];
}
for(var x=2;x<arguments.length;x++){
_334.push(arguments[x]);
}
var _336=(func["__preJoinArity"]||func.length)-_334.length;
function gather(_337,_338,_339){
var _33a=_339;
var _33b=_338.slice(0);
for(var x=0;x<_337.length;x++){
_33b.push(_337[x]);
}
_339=_339-_337.length;
if(_339<=0){
var res=func.apply(_332,_33b);
_339=_33a;
return res;
}else{
return function(){
return gather(arguments,_33b,_339);
};
}
}
return gather([],_334,_336);
};
dojo.lang.curryArguments=function(_33e,func,args,_341){
var _342=[];
var x=_341||0;
for(x=_341;x<args.length;x++){
_342.push(args[x]);
}
return dojo.lang.curry.apply(dojo.lang,[_33e,func].concat(_342));
};
dojo.lang.tryThese=function(){
for(var x=0;x<arguments.length;x++){
try{
if(typeof arguments[x]=="function"){
var ret=(arguments[x]());
if(ret){
return ret;
}
}
}
catch(e){
dojo.debug(e);
}
}
};
dojo.lang.delayThese=function(farr,cb,_348,_349){
if(!farr.length){
if(typeof _349=="function"){
_349();
}
return;
}
if((typeof _348=="undefined")&&(typeof cb=="number")){
_348=cb;
cb=function(){
};
}else{
if(!cb){
cb=function(){
};
if(!_348){
_348=0;
}
}
}
setTimeout(function(){
(farr.shift())();
cb();
dojo.lang.delayThese(farr,cb,_348,_349);
},_348);
};
dojo.provide("dojo.lang.array");
dojo.lang.mixin(dojo.lang,{has:function(obj,name){
try{
return typeof obj[name]!="undefined";
}
catch(e){
return false;
}
},isEmpty:function(obj){
if(dojo.lang.isObject(obj)){
var tmp={};
var _34e=0;
for(var x in obj){
if(obj[x]&&(!tmp[x])){
_34e++;
break;
}
}
return _34e==0;
}else{
if(dojo.lang.isArrayLike(obj)||dojo.lang.isString(obj)){
return obj.length==0;
}
}
},map:function(arr,obj,_352){
var _353=dojo.lang.isString(arr);
if(_353){
arr=arr.split("");
}
if(dojo.lang.isFunction(obj)&&(!_352)){
_352=obj;
obj=dj_global;
}else{
if(dojo.lang.isFunction(obj)&&_352){
var _354=obj;
obj=_352;
_352=_354;
}
}
if(Array.map){
var _355=Array.map(arr,_352,obj);
}else{
var _355=[];
for(var i=0;i<arr.length;++i){
_355.push(_352.call(obj,arr[i]));
}
}
if(_353){
return _355.join("");
}else{
return _355;
}
},reduce:function(arr,_358,obj,_35a){
var _35b=_358;
if(arguments.length==1){
dojo.debug("dojo.lang.reduce called with too few arguments!");
return false;
}else{
if(arguments.length==2){
_35a=_358;
_35b=arr.shift();
}else{
if(arguments.lenght==3){
if(dojo.lang.isFunction(obj)){
_35a=obj;
obj=null;
}
}else{
if(dojo.lang.isFunction(obj)){
var tmp=_35a;
_35a=obj;
obj=tmp;
}
}
}
}
var ob=obj?obj:dj_global;
dojo.lang.map(arr,function(val){
_35b=_35a.call(ob,_35b,val);
});
return _35b;
},forEach:function(_35f,_360,_361){
if(dojo.lang.isString(_35f)){
_35f=_35f.split("");
}
if(Array.forEach){
Array.forEach(_35f,_360,_361);
}else{
if(!_361){
_361=dj_global;
}
for(var i=0,l=_35f.length;i<l;i++){
_360.call(_361,_35f[i],i,_35f);
}
}
},_everyOrSome:function(_364,arr,_366,_367){
if(dojo.lang.isString(arr)){
arr=arr.split("");
}
if(Array.every){
return Array[_364?"every":"some"](arr,_366,_367);
}else{
if(!_367){
_367=dj_global;
}
for(var i=0,l=arr.length;i<l;i++){
var _36a=_366.call(_367,arr[i],i,arr);
if(_364&&!_36a){
return false;
}else{
if((!_364)&&(_36a)){
return true;
}
}
}
return Boolean(_364);
}
},every:function(arr,_36c,_36d){
return this._everyOrSome(true,arr,_36c,_36d);
},some:function(arr,_36f,_370){
return this._everyOrSome(false,arr,_36f,_370);
},filter:function(arr,_372,_373){
var _374=dojo.lang.isString(arr);
if(_374){
arr=arr.split("");
}
var _375;
if(Array.filter){
_375=Array.filter(arr,_372,_373);
}else{
if(!_373){
if(arguments.length>=3){
dojo.raise("thisObject doesn't exist!");
}
_373=dj_global;
}
_375=[];
for(var i=0;i<arr.length;i++){
if(_372.call(_373,arr[i],i,arr)){
_375.push(arr[i]);
}
}
}
if(_374){
return _375.join("");
}else{
return _375;
}
},unnest:function(){
var out=[];
for(var i=0;i<arguments.length;i++){
if(dojo.lang.isArrayLike(arguments[i])){
var add=dojo.lang.unnest.apply(this,arguments[i]);
out=out.concat(add);
}else{
out.push(arguments[i]);
}
}
return out;
},toArray:function(_37a,_37b){
var _37c=[];
for(var i=_37b||0;i<_37a.length;i++){
_37c.push(_37a[i]);
}
return _37c;
}});
dojo.provide("dojo.lang.extras");
dojo.lang.setTimeout=function(func,_37f){
var _380=window,_381=2;
if(!dojo.lang.isFunction(func)){
_380=func;
func=_37f;
_37f=arguments[2];
_381++;
}
if(dojo.lang.isString(func)){
func=_380[func];
}
var args=[];
for(var i=_381;i<arguments.length;i++){
args.push(arguments[i]);
}
return dojo.global().setTimeout(function(){
func.apply(_380,args);
},_37f);
};
dojo.lang.clearTimeout=function(_384){
dojo.global().clearTimeout(_384);
};
dojo.lang.getNameInObj=function(ns,item){
if(!ns){
ns=dj_global;
}
for(var x in ns){
if(ns[x]===item){
return new String(x);
}
}
return null;
};
dojo.lang.shallowCopy=function(obj,deep){
var i,ret;
if(obj===null){
return null;
}
if(dojo.lang.isObject(obj)){
ret=new obj.constructor();
for(i in obj){
if(dojo.lang.isUndefined(ret[i])){
ret[i]=deep?dojo.lang.shallowCopy(obj[i],deep):obj[i];
}
}
}else{
if(dojo.lang.isArray(obj)){
ret=[];
for(i=0;i<obj.length;i++){
ret[i]=deep?dojo.lang.shallowCopy(obj[i],deep):obj[i];
}
}else{
ret=obj;
}
}
return ret;
};
dojo.lang.firstValued=function(){
for(var i=0;i<arguments.length;i++){
if(typeof arguments[i]!="undefined"){
return arguments[i];
}
}
return undefined;
};
dojo.lang.getObjPathValue=function(_38d,_38e,_38f){
with(dojo.parseObjPath(_38d,_38e,_38f)){
return dojo.evalProp(prop,obj,_38f);
}
};
dojo.lang.setObjPathValue=function(_390,_391,_392,_393){
dojo.deprecated("dojo.lang.setObjPathValue","use dojo.parseObjPath and the '=' operator","0.6");
if(arguments.length<4){
_393=true;
}
with(dojo.parseObjPath(_390,_392,_393)){
if(obj&&(_393||(prop in obj))){
obj[prop]=_391;
}
}
};
dojo.provide("dojo.lang.declare");
dojo.lang.declare=function(_394,_395,init,_397){
if((dojo.lang.isFunction(_397))||((!_397)&&(!dojo.lang.isFunction(init)))){
var temp=_397;
_397=init;
init=temp;
}
var _399=[];
if(dojo.lang.isArray(_395)){
_399=_395;
_395=_399.shift();
}
if(!init){
init=dojo.evalObjPath(_394,false);
if((init)&&(!dojo.lang.isFunction(init))){
init=null;
}
}
var ctor=dojo.lang.declare._makeConstructor();
var scp=(_395?_395.prototype:null);
if(scp){
scp.prototyping=true;
ctor.prototype=new _395();
scp.prototyping=false;
}
ctor.superclass=scp;
ctor.mixins=_399;
for(var i=0,l=_399.length;i<l;i++){
dojo.lang.extend(ctor,_399[i].prototype);
}
ctor.prototype.initializer=null;
ctor.prototype.declaredClass=_394;
if(dojo.lang.isArray(_397)){
dojo.lang.extend.apply(dojo.lang,[ctor].concat(_397));
}else{
dojo.lang.extend(ctor,(_397)||{});
}
dojo.lang.extend(ctor,dojo.lang.declare._common);
ctor.prototype.constructor=ctor;
ctor.prototype.initializer=(ctor.prototype.initializer)||(init)||(function(){
});
var _39e=dojo.parseObjPath(_394,null,true);
_39e.obj[_39e.prop]=ctor;
return ctor;
};
dojo.lang.declare._makeConstructor=function(){
return function(){
var self=this._getPropContext();
var s=self.constructor.superclass;
if((s)&&(s.constructor)){
if(s.constructor==arguments.callee){
this._inherited("constructor",arguments);
}else{
this._contextMethod(s,"constructor",arguments);
}
}
var ms=(self.constructor.mixins)||([]);
for(var i=0,m;(m=ms[i]);i++){
(((m.prototype)&&(m.prototype.initializer))||(m)).apply(this,arguments);
}
if((!this.prototyping)&&(self.initializer)){
self.initializer.apply(this,arguments);
}
};
};
dojo.lang.declare._common={_getPropContext:function(){
return (this.___proto||this);
},_contextMethod:function(_3a4,_3a5,args){
var _3a7,_3a8=this.___proto;
this.___proto=_3a4;
try{
_3a7=_3a4[_3a5].apply(this,(args||[]));
}
catch(e){
throw e;
}
finally{
this.___proto=_3a8;
}
return _3a7;
},_inherited:function(prop,args){
var p=this._getPropContext();
do{
if((!p.constructor)||(!p.constructor.superclass)){
return;
}
p=p.constructor.superclass;
}while(!(prop in p));
return (dojo.lang.isFunction(p[prop])?this._contextMethod(p,prop,args):p[prop]);
},inherited:function(prop,args){
dojo.deprecated("'inherited' method is dangerous, do not up-call! 'inherited' is slated for removal in 0.5; name your super class (or use superclass property) instead.","0.5");
this._inherited(prop,args);
}};
dojo.declare=dojo.lang.declare;
dojo.provide("dojo.ns");
dojo.ns={namespaces:{},failed:{},loading:{},loaded:{},register:function(name,_3af,_3b0,_3b1){
if(!_3b1||!this.namespaces[name]){
this.namespaces[name]=new dojo.ns.Ns(name,_3af,_3b0);
}
},allow:function(name){
if(this.failed[name]){
return false;
}
if((djConfig.excludeNamespace)&&(dojo.lang.inArray(djConfig.excludeNamespace,name))){
return false;
}
return ((name==this.dojo)||(!djConfig.includeNamespace)||(dojo.lang.inArray(djConfig.includeNamespace,name)));
},get:function(name){
return this.namespaces[name];
},require:function(name){
var ns=this.namespaces[name];
if((ns)&&(this.loaded[name])){
return ns;
}
if(!this.allow(name)){
return false;
}
if(this.loading[name]){
dojo.debug("dojo.namespace.require: re-entrant request to load namespace \""+name+"\" must fail.");
return false;
}
var req=dojo.require;
this.loading[name]=true;
try{
if(name=="dojo"){
req("dojo.namespaces.dojo");
}else{
if(!dojo.hostenv.moduleHasPrefix(name)){
dojo.registerModulePath(name,"../"+name);
}
req([name,"manifest"].join("."),false,true);
}
if(!this.namespaces[name]){
this.failed[name]=true;
}
}
finally{
this.loading[name]=false;
}
return this.namespaces[name];
}};
dojo.ns.Ns=function(name,_3b8,_3b9){
this.name=name;
this.module=_3b8;
this.resolver=_3b9;
this._loaded=[];
this._failed=[];
};
dojo.ns.Ns.prototype.resolve=function(name,_3bb,_3bc){
if(!this.resolver||djConfig["skipAutoRequire"]){
return false;
}
var _3bd=this.resolver(name,_3bb);
if((_3bd)&&(!this._loaded[_3bd])&&(!this._failed[_3bd])){
var req=dojo.require;
req(_3bd,false,true);
if(dojo.hostenv.findModule(_3bd,false)){
this._loaded[_3bd]=true;
}else{
if(!_3bc){
dojo.raise("dojo.ns.Ns.resolve: module '"+_3bd+"' not found after loading via namespace '"+this.name+"'");
}
this._failed[_3bd]=true;
}
}
return Boolean(this._loaded[_3bd]);
};
dojo.registerNamespace=function(name,_3c0,_3c1){
dojo.ns.register.apply(dojo.ns,arguments);
};
dojo.registerNamespaceResolver=function(name,_3c3){
var n=dojo.ns.namespaces[name];
if(n){
n.resolver=_3c3;
}
};
dojo.registerNamespaceManifest=function(_3c5,path,name,_3c8,_3c9){
dojo.registerModulePath(name,path);
dojo.registerNamespace(name,_3c8,_3c9);
};
dojo.registerNamespace("dojo","dojo.widget");
dojo.provide("dojo.event.common");
dojo.event=new function(){
this._canTimeout=dojo.lang.isFunction(dj_global["setTimeout"])||dojo.lang.isAlien(dj_global["setTimeout"]);
function interpolateArgs(args,_3cb){
var dl=dojo.lang;
var ao={srcObj:dj_global,srcFunc:null,adviceObj:dj_global,adviceFunc:null,aroundObj:null,aroundFunc:null,adviceType:(args.length>2)?args[0]:"after",precedence:"last",once:false,delay:null,rate:0,adviceMsg:false};
switch(args.length){
case 0:
return;
case 1:
return;
case 2:
ao.srcFunc=args[0];
ao.adviceFunc=args[1];
break;
case 3:
if((dl.isObject(args[0]))&&(dl.isString(args[1]))&&(dl.isString(args[2]))){
ao.adviceType="after";
ao.srcObj=args[0];
ao.srcFunc=args[1];
ao.adviceFunc=args[2];
}else{
if((dl.isString(args[1]))&&(dl.isString(args[2]))){
ao.srcFunc=args[1];
ao.adviceFunc=args[2];
}else{
if((dl.isObject(args[0]))&&(dl.isString(args[1]))&&(dl.isFunction(args[2]))){
ao.adviceType="after";
ao.srcObj=args[0];
ao.srcFunc=args[1];
var _3ce=dl.nameAnonFunc(args[2],ao.adviceObj,_3cb);
ao.adviceFunc=_3ce;
}else{
if((dl.isFunction(args[0]))&&(dl.isObject(args[1]))&&(dl.isString(args[2]))){
ao.adviceType="after";
ao.srcObj=dj_global;
var _3ce=dl.nameAnonFunc(args[0],ao.srcObj,_3cb);
ao.srcFunc=_3ce;
ao.adviceObj=args[1];
ao.adviceFunc=args[2];
}
}
}
}
break;
case 4:
if((dl.isObject(args[0]))&&(dl.isObject(args[2]))){
ao.adviceType="after";
ao.srcObj=args[0];
ao.srcFunc=args[1];
ao.adviceObj=args[2];
ao.adviceFunc=args[3];
}else{
if((dl.isString(args[0]))&&(dl.isString(args[1]))&&(dl.isObject(args[2]))){
ao.adviceType=args[0];
ao.srcObj=dj_global;
ao.srcFunc=args[1];
ao.adviceObj=args[2];
ao.adviceFunc=args[3];
}else{
if((dl.isString(args[0]))&&(dl.isFunction(args[1]))&&(dl.isObject(args[2]))){
ao.adviceType=args[0];
ao.srcObj=dj_global;
var _3ce=dl.nameAnonFunc(args[1],dj_global,_3cb);
ao.srcFunc=_3ce;
ao.adviceObj=args[2];
ao.adviceFunc=args[3];
}else{
if((dl.isString(args[0]))&&(dl.isObject(args[1]))&&(dl.isString(args[2]))&&(dl.isFunction(args[3]))){
ao.srcObj=args[1];
ao.srcFunc=args[2];
var _3ce=dl.nameAnonFunc(args[3],dj_global,_3cb);
ao.adviceObj=dj_global;
ao.adviceFunc=_3ce;
}else{
if(dl.isObject(args[1])){
ao.srcObj=args[1];
ao.srcFunc=args[2];
ao.adviceObj=dj_global;
ao.adviceFunc=args[3];
}else{
if(dl.isObject(args[2])){
ao.srcObj=dj_global;
ao.srcFunc=args[1];
ao.adviceObj=args[2];
ao.adviceFunc=args[3];
}else{
ao.srcObj=ao.adviceObj=ao.aroundObj=dj_global;
ao.srcFunc=args[1];
ao.adviceFunc=args[2];
ao.aroundFunc=args[3];
}
}
}
}
}
}
break;
case 6:
ao.srcObj=args[1];
ao.srcFunc=args[2];
ao.adviceObj=args[3];
ao.adviceFunc=args[4];
ao.aroundFunc=args[5];
ao.aroundObj=dj_global;
break;
default:
ao.srcObj=args[1];
ao.srcFunc=args[2];
ao.adviceObj=args[3];
ao.adviceFunc=args[4];
ao.aroundObj=args[5];
ao.aroundFunc=args[6];
ao.once=args[7];
ao.delay=args[8];
ao.rate=args[9];
ao.adviceMsg=args[10];
break;
}
if(dl.isFunction(ao.aroundFunc)){
var _3ce=dl.nameAnonFunc(ao.aroundFunc,ao.aroundObj,_3cb);
ao.aroundFunc=_3ce;
}
if(dl.isFunction(ao.srcFunc)){
ao.srcFunc=dl.getNameInObj(ao.srcObj,ao.srcFunc);
}
if(dl.isFunction(ao.adviceFunc)){
ao.adviceFunc=dl.getNameInObj(ao.adviceObj,ao.adviceFunc);
}
if((ao.aroundObj)&&(dl.isFunction(ao.aroundFunc))){
ao.aroundFunc=dl.getNameInObj(ao.aroundObj,ao.aroundFunc);
}
if(!ao.srcObj){
dojo.raise("bad srcObj for srcFunc: "+ao.srcFunc);
}
if(!ao.adviceObj){
dojo.raise("bad adviceObj for adviceFunc: "+ao.adviceFunc);
}
if(!ao.adviceFunc){
dojo.debug("bad adviceFunc for srcFunc: "+ao.srcFunc);
dojo.debugShallow(ao);
}
return ao;
}
this.connect=function(){
if(arguments.length==1){
var ao=arguments[0];
}else{
var ao=interpolateArgs(arguments,true);
}
if(dojo.lang.isString(ao.srcFunc)&&(ao.srcFunc.toLowerCase()=="onkey")){
if(dojo.render.html.ie){
ao.srcFunc="onkeydown";
this.connect(ao);
}
ao.srcFunc="onkeypress";
}
if(dojo.lang.isArray(ao.srcObj)&&ao.srcObj!=""){
var _3d0={};
for(var x in ao){
_3d0[x]=ao[x];
}
var mjps=[];
dojo.lang.forEach(ao.srcObj,function(src){
if((dojo.render.html.capable)&&(dojo.lang.isString(src))){
src=dojo.byId(src);
}
_3d0.srcObj=src;
mjps.push(dojo.event.connect.call(dojo.event,_3d0));
});
return mjps;
}
var mjp=dojo.event.MethodJoinPoint.getForMethod(ao.srcObj,ao.srcFunc);
if(ao.adviceFunc){
var mjp2=dojo.event.MethodJoinPoint.getForMethod(ao.adviceObj,ao.adviceFunc);
}
mjp.kwAddAdvice(ao);
return mjp;
};
this.log=function(a1,a2){
var _3d8;
if((arguments.length==1)&&(typeof a1=="object")){
_3d8=a1;
}else{
_3d8={srcObj:a1,srcFunc:a2};
}
_3d8.adviceFunc=function(){
var _3d9=[];
for(var x=0;x<arguments.length;x++){
_3d9.push(arguments[x]);
}
dojo.debug("("+_3d8.srcObj+")."+_3d8.srcFunc,":",_3d9.join(", "));
};
this.kwConnect(_3d8);
};
this.connectBefore=function(){
var args=["before"];
for(var i=0;i<arguments.length;i++){
args.push(arguments[i]);
}
return this.connect.apply(this,args);
};
this.connectAround=function(){
var args=["around"];
for(var i=0;i<arguments.length;i++){
args.push(arguments[i]);
}
return this.connect.apply(this,args);
};
this.connectOnce=function(){
var ao=interpolateArgs(arguments,true);
ao.once=true;
return this.connect(ao);
};
this._kwConnectImpl=function(_3e0,_3e1){
var fn=(_3e1)?"disconnect":"connect";
if(typeof _3e0["srcFunc"]=="function"){
_3e0.srcObj=_3e0["srcObj"]||dj_global;
var _3e3=dojo.lang.nameAnonFunc(_3e0.srcFunc,_3e0.srcObj,true);
_3e0.srcFunc=_3e3;
}
if(typeof _3e0["adviceFunc"]=="function"){
_3e0.adviceObj=_3e0["adviceObj"]||dj_global;
var _3e3=dojo.lang.nameAnonFunc(_3e0.adviceFunc,_3e0.adviceObj,true);
_3e0.adviceFunc=_3e3;
}
_3e0.srcObj=_3e0["srcObj"]||dj_global;
_3e0.adviceObj=_3e0["adviceObj"]||_3e0["targetObj"]||dj_global;
_3e0.adviceFunc=_3e0["adviceFunc"]||_3e0["targetFunc"];
return dojo.event[fn](_3e0);
};
this.kwConnect=function(_3e4){
return this._kwConnectImpl(_3e4,false);
};
this.disconnect=function(){
if(arguments.length==1){
var ao=arguments[0];
}else{
var ao=interpolateArgs(arguments,true);
}
if(!ao.adviceFunc){
return;
}
if(dojo.lang.isString(ao.srcFunc)&&(ao.srcFunc.toLowerCase()=="onkey")){
if(dojo.render.html.ie){
ao.srcFunc="onkeydown";
this.disconnect(ao);
}
ao.srcFunc="onkeypress";
}
if(!ao.srcObj[ao.srcFunc]){
return null;
}
var mjp=dojo.event.MethodJoinPoint.getForMethod(ao.srcObj,ao.srcFunc,true);
mjp.removeAdvice(ao.adviceObj,ao.adviceFunc,ao.adviceType,ao.once);
return mjp;
};
this.kwDisconnect=function(_3e7){
return this._kwConnectImpl(_3e7,true);
};
};
dojo.event.MethodInvocation=function(_3e8,obj,args){
this.jp_=_3e8;
this.object=obj;
this.args=[];
for(var x=0;x<args.length;x++){
this.args[x]=args[x];
}
this.around_index=-1;
};
dojo.event.MethodInvocation.prototype.proceed=function(){
this.around_index++;
if(this.around_index>=this.jp_.around.length){
return this.jp_.object[this.jp_.methodname].apply(this.jp_.object,this.args);
}else{
var ti=this.jp_.around[this.around_index];
var mobj=ti[0]||dj_global;
var meth=ti[1];
return mobj[meth].call(mobj,this);
}
};
dojo.event.MethodJoinPoint=function(obj,_3f0){
this.object=obj||dj_global;
this.methodname=_3f0;
this.methodfunc=this.object[_3f0];
this.squelch=false;
};
dojo.event.MethodJoinPoint.getForMethod=function(obj,_3f2){
if(!obj){
obj=dj_global;
}
if(!obj[_3f2]){
obj[_3f2]=function(){
};
if(!obj[_3f2]){
dojo.raise("Cannot set do-nothing method on that object "+_3f2);
}
}else{
if((!dojo.lang.isFunction(obj[_3f2]))&&(!dojo.lang.isAlien(obj[_3f2]))){
return null;
}
}
var _3f3=_3f2+"$joinpoint";
var _3f4=_3f2+"$joinpoint$method";
var _3f5=obj[_3f3];
if(!_3f5){
var _3f6=false;
if(dojo.event["browser"]){
if((obj["attachEvent"])||(obj["nodeType"])||(obj["addEventListener"])){
_3f6=true;
dojo.event.browser.addClobberNodeAttrs(obj,[_3f3,_3f4,_3f2]);
}
}
var _3f7=obj[_3f2].length;
obj[_3f4]=obj[_3f2];
_3f5=obj[_3f3]=new dojo.event.MethodJoinPoint(obj,_3f4);
obj[_3f2]=function(){
var args=[];
if((_3f6)&&(!arguments.length)){
var evt=null;
try{
if(obj.ownerDocument){
evt=obj.ownerDocument.parentWindow.event;
}else{
if(obj.documentElement){
evt=obj.documentElement.ownerDocument.parentWindow.event;
}else{
if(obj.event){
evt=obj.event;
}else{
evt=window.event;
}
}
}
}
catch(e){
evt=window.event;
}
if(evt){
args.push(dojo.event.browser.fixEvent(evt,this));
}
}else{
for(var x=0;x<arguments.length;x++){
if((x==0)&&(_3f6)&&(dojo.event.browser.isEvent(arguments[x]))){
args.push(dojo.event.browser.fixEvent(arguments[x],this));
}else{
args.push(arguments[x]);
}
}
}
return _3f5.run.apply(_3f5,args);
};
obj[_3f2].__preJoinArity=_3f7;
}
return _3f5;
};
dojo.lang.extend(dojo.event.MethodJoinPoint,{unintercept:function(){
this.object[this.methodname]=this.methodfunc;
this.before=[];
this.after=[];
this.around=[];
},disconnect:dojo.lang.forward("unintercept"),run:function(){
var obj=this.object||dj_global;
var args=arguments;
var _3fd=[];
for(var x=0;x<args.length;x++){
_3fd[x]=args[x];
}
var _3ff=function(marr){
if(!marr){
dojo.debug("Null argument to unrollAdvice()");
return;
}
var _401=marr[0]||dj_global;
var _402=marr[1];
if(!_401[_402]){
dojo.raise("function \""+_402+"\" does not exist on \""+_401+"\"");
}
var _403=marr[2]||dj_global;
var _404=marr[3];
var msg=marr[6];
var _406;
var to={args:[],jp_:this,object:obj,proceed:function(){
return _401[_402].apply(_401,to.args);
}};
to.args=_3fd;
var _408=parseInt(marr[4]);
var _409=((!isNaN(_408))&&(marr[4]!==null)&&(typeof marr[4]!="undefined"));
if(marr[5]){
var rate=parseInt(marr[5]);
var cur=new Date();
var _40c=false;
if((marr["last"])&&((cur-marr.last)<=rate)){
if(dojo.event._canTimeout){
if(marr["delayTimer"]){
clearTimeout(marr.delayTimer);
}
var tod=parseInt(rate*2);
var mcpy=dojo.lang.shallowCopy(marr);
marr.delayTimer=setTimeout(function(){
mcpy[5]=0;
_3ff(mcpy);
},tod);
}
return;
}else{
marr.last=cur;
}
}
if(_404){
_403[_404].call(_403,to);
}else{
if((_409)&&((dojo.render.html)||(dojo.render.svg))){
dj_global["setTimeout"](function(){
if(msg){
_401[_402].call(_401,to);
}else{
_401[_402].apply(_401,args);
}
},_408);
}else{
if(msg){
_401[_402].call(_401,to);
}else{
_401[_402].apply(_401,args);
}
}
}
};
var _40f=function(){
if(this.squelch){
try{
return _3ff.apply(this,arguments);
}
catch(e){
dojo.debug(e);
}
}else{
return _3ff.apply(this,arguments);
}
};
if((this["before"])&&(this.before.length>0)){
dojo.lang.forEach(this.before.concat(new Array()),_40f);
}
var _410;
try{
if((this["around"])&&(this.around.length>0)){
var mi=new dojo.event.MethodInvocation(this,obj,args);
_410=mi.proceed();
}else{
if(this.methodfunc){
_410=this.object[this.methodname].apply(this.object,args);
}
}
}
catch(e){
if(!this.squelch){
dojo.debug(e,"when calling",this.methodname,"on",this.object,"with arguments",args);
dojo.raise(e);
}
}
if((this["after"])&&(this.after.length>0)){
dojo.lang.forEach(this.after.concat(new Array()),_40f);
}
return (this.methodfunc)?_410:null;
},getArr:function(kind){
var type="after";
if((typeof kind=="string")&&(kind.indexOf("before")!=-1)){
type="before";
}else{
if(kind=="around"){
type="around";
}
}
if(!this[type]){
this[type]=[];
}
return this[type];
},kwAddAdvice:function(args){
this.addAdvice(args["adviceObj"],args["adviceFunc"],args["aroundObj"],args["aroundFunc"],args["adviceType"],args["precedence"],args["once"],args["delay"],args["rate"],args["adviceMsg"]);
},addAdvice:function(_415,_416,_417,_418,_419,_41a,once,_41c,rate,_41e){
var arr=this.getArr(_419);
if(!arr){
dojo.raise("bad this: "+this);
}
var ao=[_415,_416,_417,_418,_41c,rate,_41e];
if(once){
if(this.hasAdvice(_415,_416,_419,arr)>=0){
return;
}
}
if(_41a=="first"){
arr.unshift(ao);
}else{
arr.push(ao);
}
},hasAdvice:function(_421,_422,_423,arr){
if(!arr){
arr=this.getArr(_423);
}
var ind=-1;
for(var x=0;x<arr.length;x++){
var aao=(typeof _422=="object")?(new String(_422)).toString():_422;
var a1o=(typeof arr[x][1]=="object")?(new String(arr[x][1])).toString():arr[x][1];
if((arr[x][0]==_421)&&(a1o==aao)){
ind=x;
}
}
return ind;
},removeAdvice:function(_429,_42a,_42b,once){
var arr=this.getArr(_42b);
var ind=this.hasAdvice(_429,_42a,_42b,arr);
if(ind==-1){
return false;
}
while(ind!=-1){
arr.splice(ind,1);
if(once){
break;
}
ind=this.hasAdvice(_429,_42a,_42b,arr);
}
return true;
}});
dojo.provide("dojo.event.topic");
dojo.event.topic=new function(){
this.topics={};
this.getTopic=function(_42f){
if(!this.topics[_42f]){
this.topics[_42f]=new this.TopicImpl(_42f);
}
return this.topics[_42f];
};
this.registerPublisher=function(_430,obj,_432){
var _430=this.getTopic(_430);
_430.registerPublisher(obj,_432);
};
this.subscribe=function(_433,obj,_435){
var _433=this.getTopic(_433);
_433.subscribe(obj,_435);
};
this.unsubscribe=function(_436,obj,_438){
var _436=this.getTopic(_436);
_436.unsubscribe(obj,_438);
};
this.destroy=function(_439){
this.getTopic(_439).destroy();
delete this.topics[_439];
};
this.publishApply=function(_43a,args){
var _43a=this.getTopic(_43a);
_43a.sendMessage.apply(_43a,args);
};
this.publish=function(_43c,_43d){
var _43c=this.getTopic(_43c);
var args=[];
for(var x=1;x<arguments.length;x++){
args.push(arguments[x]);
}
_43c.sendMessage.apply(_43c,args);
};
};
dojo.event.topic.TopicImpl=function(_440){
this.topicName=_440;
this.subscribe=function(_441,_442){
var tf=_442||_441;
var to=(!_442)?dj_global:_441;
return dojo.event.kwConnect({srcObj:this,srcFunc:"sendMessage",adviceObj:to,adviceFunc:tf});
};
this.unsubscribe=function(_445,_446){
var tf=(!_446)?_445:_446;
var to=(!_446)?null:_445;
return dojo.event.kwDisconnect({srcObj:this,srcFunc:"sendMessage",adviceObj:to,adviceFunc:tf});
};
this._getJoinPoint=function(){
return dojo.event.MethodJoinPoint.getForMethod(this,"sendMessage");
};
this.setSquelch=function(_449){
this._getJoinPoint().squelch=_449;
};
this.destroy=function(){
this._getJoinPoint().disconnect();
};
this.registerPublisher=function(_44a,_44b){
dojo.event.connect(_44a,_44b,this,"sendMessage");
};
this.sendMessage=function(_44c){
};
};
dojo.provide("dojo.event.browser");
dojo._ie_clobber=new function(){
this.clobberNodes=[];
function nukeProp(node,prop){
try{
node[prop]=null;
}
catch(e){
}
try{
delete node[prop];
}
catch(e){
}
try{
node.removeAttribute(prop);
}
catch(e){
}
}
this.clobber=function(_44f){
var na;
var tna;
if(_44f){
tna=_44f.all||_44f.getElementsByTagName("*");
na=[_44f];
for(var x=0;x<tna.length;x++){
if(tna[x]["__doClobber__"]){
na.push(tna[x]);
}
}
}else{
try{
window.onload=null;
}
catch(e){
}
na=(this.clobberNodes.length)?this.clobberNodes:document.all;
}
tna=null;
var _453={};
for(var i=na.length-1;i>=0;i=i-1){
var el=na[i];
try{
if(el&&el["__clobberAttrs__"]){
for(var j=0;j<el.__clobberAttrs__.length;j++){
nukeProp(el,el.__clobberAttrs__[j]);
}
nukeProp(el,"__clobberAttrs__");
nukeProp(el,"__doClobber__");
}
}
catch(e){
}
}
na=null;
};
};
if(dojo.render.html.ie){
dojo.addOnUnload(function(){
dojo._ie_clobber.clobber();
try{
if((dojo["widget"])&&(dojo.widget["manager"])){
dojo.widget.manager.destroyAll();
}
}
catch(e){
}
if(dojo.widget){
for(var name in dojo.widget._templateCache){
if(dojo.widget._templateCache[name].node){
dojo.dom.destroyNode(dojo.widget._templateCache[name].node);
dojo.widget._templateCache[name].node=null;
delete dojo.widget._templateCache[name].node;
}
}
}
try{
window.onload=null;
}
catch(e){
}
try{
window.onunload=null;
}
catch(e){
}
dojo._ie_clobber.clobberNodes=[];
});
}
dojo.event.browser=new function(){
var _458=0;
this.normalizedEventName=function(_459){
switch(_459){
case "CheckboxStateChange":
case "DOMAttrModified":
case "DOMMenuItemActive":
case "DOMMenuItemInactive":
case "DOMMouseScroll":
case "DOMNodeInserted":
case "DOMNodeRemoved":
case "RadioStateChange":
return _459;
break;
default:
return _459.toLowerCase();
break;
}
};
this.clean=function(node){
if(dojo.render.html.ie){
dojo._ie_clobber.clobber(node);
}
};
this.addClobberNode=function(node){
if(!dojo.render.html.ie){
return;
}
if(!node["__doClobber__"]){
node.__doClobber__=true;
dojo._ie_clobber.clobberNodes.push(node);
node.__clobberAttrs__=[];
}
};
this.addClobberNodeAttrs=function(node,_45d){
if(!dojo.render.html.ie){
return;
}
this.addClobberNode(node);
for(var x=0;x<_45d.length;x++){
node.__clobberAttrs__.push(_45d[x]);
}
};
this.removeListener=function(node,_460,fp,_462){
if(!_462){
var _462=false;
}
_460=dojo.event.browser.normalizedEventName(_460);
if((_460=="onkey")||(_460=="key")){
if(dojo.render.html.ie){
this.removeListener(node,"onkeydown",fp,_462);
}
_460="onkeypress";
}
if(_460.substr(0,2)=="on"){
_460=_460.substr(2);
}
if(node.removeEventListener){
node.removeEventListener(_460,fp,_462);
}
};
this.addListener=function(node,_464,fp,_466,_467){
if(!node){
return;
}
if(!_466){
var _466=false;
}
_464=dojo.event.browser.normalizedEventName(_464);
if((_464=="onkey")||(_464=="key")){
if(dojo.render.html.ie){
this.addListener(node,"onkeydown",fp,_466,_467);
}
_464="onkeypress";
}
if(_464.substr(0,2)!="on"){
_464="on"+_464;
}
if(!_467){
var _468=function(evt){
if(!evt){
evt=window.event;
}
var ret=fp(dojo.event.browser.fixEvent(evt,this));
if(_466){
dojo.event.browser.stopEvent(evt);
}
return ret;
};
}else{
_468=fp;
}
if(node.addEventListener){
node.addEventListener(_464.substr(2),_468,_466);
return _468;
}else{
if(typeof node[_464]=="function"){
var _46b=node[_464];
node[_464]=function(e){
_46b(e);
return _468(e);
};
}else{
node[_464]=_468;
}
if(dojo.render.html.ie){
this.addClobberNodeAttrs(node,[_464]);
}
return _468;
}
};
this.isEvent=function(obj){
return (typeof obj!="undefined")&&(obj)&&(typeof Event!="undefined")&&(obj.eventPhase);
};
this.currentEvent=null;
this.callListener=function(_46e,_46f){
if(typeof _46e!="function"){
dojo.raise("listener not a function: "+_46e);
}
dojo.event.browser.currentEvent.currentTarget=_46f;
return _46e.call(_46f,dojo.event.browser.currentEvent);
};
this._stopPropagation=function(){
dojo.event.browser.currentEvent.cancelBubble=true;
};
this._preventDefault=function(){
dojo.event.browser.currentEvent.returnValue=false;
};
this.keys={KEY_BACKSPACE:8,KEY_TAB:9,KEY_CLEAR:12,KEY_ENTER:13,KEY_SHIFT:16,KEY_CTRL:17,KEY_ALT:18,KEY_PAUSE:19,KEY_CAPS_LOCK:20,KEY_ESCAPE:27,KEY_SPACE:32,KEY_PAGE_UP:33,KEY_PAGE_DOWN:34,KEY_END:35,KEY_HOME:36,KEY_LEFT_ARROW:37,KEY_UP_ARROW:38,KEY_RIGHT_ARROW:39,KEY_DOWN_ARROW:40,KEY_INSERT:45,KEY_DELETE:46,KEY_HELP:47,KEY_LEFT_WINDOW:91,KEY_RIGHT_WINDOW:92,KEY_SELECT:93,KEY_NUMPAD_0:96,KEY_NUMPAD_1:97,KEY_NUMPAD_2:98,KEY_NUMPAD_3:99,KEY_NUMPAD_4:100,KEY_NUMPAD_5:101,KEY_NUMPAD_6:102,KEY_NUMPAD_7:103,KEY_NUMPAD_8:104,KEY_NUMPAD_9:105,KEY_NUMPAD_MULTIPLY:106,KEY_NUMPAD_PLUS:107,KEY_NUMPAD_ENTER:108,KEY_NUMPAD_MINUS:109,KEY_NUMPAD_PERIOD:110,KEY_NUMPAD_DIVIDE:111,KEY_F1:112,KEY_F2:113,KEY_F3:114,KEY_F4:115,KEY_F5:116,KEY_F6:117,KEY_F7:118,KEY_F8:119,KEY_F9:120,KEY_F10:121,KEY_F11:122,KEY_F12:123,KEY_F13:124,KEY_F14:125,KEY_F15:126,KEY_NUM_LOCK:144,KEY_SCROLL_LOCK:145};
this.revKeys=[];
for(var key in this.keys){
this.revKeys[this.keys[key]]=key;
}
this.fixEvent=function(evt,_472){
if(!evt){
if(window["event"]){
evt=window.event;
}
}
if((evt["type"])&&(evt["type"].indexOf("key")==0)){
evt.keys=this.revKeys;
for(var key in this.keys){
evt[key]=this.keys[key];
}
if(evt["type"]=="keydown"&&dojo.render.html.ie){
switch(evt.keyCode){
case evt.KEY_SHIFT:
case evt.KEY_CTRL:
case evt.KEY_ALT:
case evt.KEY_CAPS_LOCK:
case evt.KEY_LEFT_WINDOW:
case evt.KEY_RIGHT_WINDOW:
case evt.KEY_SELECT:
case evt.KEY_NUM_LOCK:
case evt.KEY_SCROLL_LOCK:
case evt.KEY_NUMPAD_0:
case evt.KEY_NUMPAD_1:
case evt.KEY_NUMPAD_2:
case evt.KEY_NUMPAD_3:
case evt.KEY_NUMPAD_4:
case evt.KEY_NUMPAD_5:
case evt.KEY_NUMPAD_6:
case evt.KEY_NUMPAD_7:
case evt.KEY_NUMPAD_8:
case evt.KEY_NUMPAD_9:
case evt.KEY_NUMPAD_PERIOD:
break;
case evt.KEY_NUMPAD_MULTIPLY:
case evt.KEY_NUMPAD_PLUS:
case evt.KEY_NUMPAD_ENTER:
case evt.KEY_NUMPAD_MINUS:
case evt.KEY_NUMPAD_DIVIDE:
break;
case evt.KEY_PAUSE:
case evt.KEY_TAB:
case evt.KEY_BACKSPACE:
case evt.KEY_ENTER:
case evt.KEY_ESCAPE:
case evt.KEY_PAGE_UP:
case evt.KEY_PAGE_DOWN:
case evt.KEY_END:
case evt.KEY_HOME:
case evt.KEY_LEFT_ARROW:
case evt.KEY_UP_ARROW:
case evt.KEY_RIGHT_ARROW:
case evt.KEY_DOWN_ARROW:
case evt.KEY_INSERT:
case evt.KEY_DELETE:
case evt.KEY_F1:
case evt.KEY_F2:
case evt.KEY_F3:
case evt.KEY_F4:
case evt.KEY_F5:
case evt.KEY_F6:
case evt.KEY_F7:
case evt.KEY_F8:
case evt.KEY_F9:
case evt.KEY_F10:
case evt.KEY_F11:
case evt.KEY_F12:
case evt.KEY_F12:
case evt.KEY_F13:
case evt.KEY_F14:
case evt.KEY_F15:
case evt.KEY_CLEAR:
case evt.KEY_HELP:
evt.key=evt.keyCode;
break;
default:
if(evt.ctrlKey||evt.altKey){
var _474=evt.keyCode;
if(_474>=65&&_474<=90&&evt.shiftKey==false){
_474+=32;
}
if(_474>=1&&_474<=26&&evt.ctrlKey){
_474+=96;
}
evt.key=String.fromCharCode(_474);
}
}
}else{
if(evt["type"]=="keypress"){
if(dojo.render.html.opera){
if(evt.which==0){
evt.key=evt.keyCode;
}else{
if(evt.which>0){
switch(evt.which){
case evt.KEY_SHIFT:
case evt.KEY_CTRL:
case evt.KEY_ALT:
case evt.KEY_CAPS_LOCK:
case evt.KEY_NUM_LOCK:
case evt.KEY_SCROLL_LOCK:
break;
case evt.KEY_PAUSE:
case evt.KEY_TAB:
case evt.KEY_BACKSPACE:
case evt.KEY_ENTER:
case evt.KEY_ESCAPE:
evt.key=evt.which;
break;
default:
var _474=evt.which;
if((evt.ctrlKey||evt.altKey||evt.metaKey)&&(evt.which>=65&&evt.which<=90&&evt.shiftKey==false)){
_474+=32;
}
evt.key=String.fromCharCode(_474);
}
}
}
}else{
if(dojo.render.html.ie){
if(!evt.ctrlKey&&!evt.altKey&&evt.keyCode>=evt.KEY_SPACE){
evt.key=String.fromCharCode(evt.keyCode);
}
}else{
if(dojo.render.html.safari){
switch(evt.keyCode){
case 25:
evt.key=evt.KEY_TAB;
evt.shift=true;
break;
case 63232:
evt.key=evt.KEY_UP_ARROW;
break;
case 63233:
evt.key=evt.KEY_DOWN_ARROW;
break;
case 63234:
evt.key=evt.KEY_LEFT_ARROW;
break;
case 63235:
evt.key=evt.KEY_RIGHT_ARROW;
break;
case 63236:
evt.key=evt.KEY_F1;
break;
case 63237:
evt.key=evt.KEY_F2;
break;
case 63238:
evt.key=evt.KEY_F3;
break;
case 63239:
evt.key=evt.KEY_F4;
break;
case 63240:
evt.key=evt.KEY_F5;
break;
case 63241:
evt.key=evt.KEY_F6;
break;
case 63242:
evt.key=evt.KEY_F7;
break;
case 63243:
evt.key=evt.KEY_F8;
break;
case 63244:
evt.key=evt.KEY_F9;
break;
case 63245:
evt.key=evt.KEY_F10;
break;
case 63246:
evt.key=evt.KEY_F11;
break;
case 63247:
evt.key=evt.KEY_F12;
break;
case 63250:
evt.key=evt.KEY_PAUSE;
break;
case 63272:
evt.key=evt.KEY_DELETE;
break;
case 63273:
evt.key=evt.KEY_HOME;
break;
case 63275:
evt.key=evt.KEY_END;
break;
case 63276:
evt.key=evt.KEY_PAGE_UP;
break;
case 63277:
evt.key=evt.KEY_PAGE_DOWN;
break;
case 63302:
evt.key=evt.KEY_INSERT;
break;
case 63248:
case 63249:
case 63289:
break;
default:
evt.key=evt.charCode>=evt.KEY_SPACE?String.fromCharCode(evt.charCode):evt.keyCode;
}
}else{
evt.key=evt.charCode>0?String.fromCharCode(evt.charCode):evt.keyCode;
}
}
}
}
}
}
if(dojo.render.html.ie){
if(!evt.target){
evt.target=evt.srcElement;
}
if(!evt.currentTarget){
evt.currentTarget=(_472?_472:evt.srcElement);
}
if(!evt.layerX){
evt.layerX=evt.offsetX;
}
if(!evt.layerY){
evt.layerY=evt.offsetY;
}
var doc=(evt.srcElement&&evt.srcElement.ownerDocument)?evt.srcElement.ownerDocument:document;
var _476=((dojo.render.html.ie55)||(doc["compatMode"]=="BackCompat"))?doc.body:doc.documentElement;
if(!evt.pageX){
evt.pageX=evt.clientX+(_476.scrollLeft||0);
}
if(!evt.pageY){
evt.pageY=evt.clientY+(_476.scrollTop||0);
}
if(evt.type=="mouseover"){
evt.relatedTarget=evt.fromElement;
}
if(evt.type=="mouseout"){
evt.relatedTarget=evt.toElement;
}
this.currentEvent=evt;
evt.callListener=this.callListener;
evt.stopPropagation=this._stopPropagation;
evt.preventDefault=this._preventDefault;
}
return evt;
};
this.stopEvent=function(evt){
if(window.event){
evt.cancelBubble=true;
evt.returnValue=false;
}else{
evt.preventDefault();
evt.stopPropagation();
}
};
};
dojo.provide("dojo.event.*");
dojo.provide("dojo.widget.Manager");
dojo.widget.manager=new function(){
this.widgets=[];
this.widgetIds=[];
this.topWidgets={};
var _478={};
var _479=[];
this.getUniqueId=function(_47a){
var _47b;
do{
_47b=_47a+"_"+(_478[_47a]!=undefined?++_478[_47a]:_478[_47a]=0);
}while(this.getWidgetById(_47b));
return _47b;
};
this.add=function(_47c){
this.widgets.push(_47c);
if(!_47c.extraArgs["id"]){
_47c.extraArgs["id"]=_47c.extraArgs["ID"];
}
if(_47c.widgetId==""){
if(_47c["id"]){
_47c.widgetId=_47c["id"];
}else{
if(_47c.extraArgs["id"]){
_47c.widgetId=_47c.extraArgs["id"];
}else{
_47c.widgetId=this.getUniqueId(_47c.ns+"_"+_47c.widgetType);
}
}
}
if(this.widgetIds[_47c.widgetId]){
dojo.debug("widget ID collision on ID: "+_47c.widgetId);
}
this.widgetIds[_47c.widgetId]=_47c;
};
this.destroyAll=function(){
for(var x=this.widgets.length-1;x>=0;x--){
try{
this.widgets[x].destroy(true);
delete this.widgets[x];
}
catch(e){
}
}
};
this.remove=function(_47e){
if(dojo.lang.isNumber(_47e)){
var tw=this.widgets[_47e].widgetId;
delete this.widgetIds[tw];
this.widgets.splice(_47e,1);
}else{
this.removeById(_47e);
}
};
this.removeById=function(id){
if(!dojo.lang.isString(id)){
id=id["widgetId"];
if(!id){
dojo.debug("invalid widget or id passed to removeById");
return;
}
}
for(var i=0;i<this.widgets.length;i++){
if(this.widgets[i].widgetId==id){
this.remove(i);
break;
}
}
};
this.getWidgetById=function(id){
if(dojo.lang.isString(id)){
return this.widgetIds[id];
}
return id;
};
this.getWidgetsByType=function(type){
var lt=type.toLowerCase();
var _485=(type.indexOf(":")<0?function(x){
return x.widgetType.toLowerCase();
}:function(x){
return x.getNamespacedType();
});
var ret=[];
dojo.lang.forEach(this.widgets,function(x){
if(_485(x)==lt){
ret.push(x);
}
});
return ret;
};
this.getWidgetsByFilter=function(_48a,_48b){
var ret=[];
dojo.lang.every(this.widgets,function(x){
if(_48a(x)){
ret.push(x);
if(_48b){
return false;
}
}
return true;
});
return (_48b?ret[0]:ret);
};
this.getAllWidgets=function(){
return this.widgets.concat();
};
this.getWidgetByNode=function(node){
var w=this.getAllWidgets();
node=dojo.byId(node);
for(var i=0;i<w.length;i++){
if(w[i].domNode==node){
return w[i];
}
}
return null;
};
this.byId=this.getWidgetById;
this.byType=this.getWidgetsByType;
this.byFilter=this.getWidgetsByFilter;
this.byNode=this.getWidgetByNode;
var _491={};
var _492=["dojo.widget"];
for(var i=0;i<_492.length;i++){
_492[_492[i]]=true;
}
this.registerWidgetPackage=function(_494){
if(!_492[_494]){
_492[_494]=true;
_492.push(_494);
}
};
this.getWidgetPackageList=function(){
return dojo.lang.map(_492,function(elt){
return (elt!==true?elt:undefined);
});
};
this.getImplementation=function(_496,_497,_498,ns){
var impl=this.getImplementationName(_496,ns);
if(impl){
var ret=_497?new impl(_497):new impl();
return ret;
}
};
function buildPrefixCache(){
for(var _49c in dojo.render){
if(dojo.render[_49c]["capable"]===true){
var _49d=dojo.render[_49c].prefixes;
for(var i=0;i<_49d.length;i++){
_479.push(_49d[i].toLowerCase());
}
}
}
}
var _49f=function(_4a0,_4a1){
if(!_4a1){
return null;
}
for(var i=0,l=_479.length,_4a4;i<=l;i++){
_4a4=(i<l?_4a1[_479[i]]:_4a1);
if(!_4a4){
continue;
}
for(var name in _4a4){
if(name.toLowerCase()==_4a0){
return _4a4[name];
}
}
}
return null;
};
var _4a6=function(_4a7,_4a8){
var _4a9=dojo.evalObjPath(_4a8,false);
return (_4a9?_49f(_4a7,_4a9):null);
};
this.getImplementationName=function(_4aa,ns){
var _4ac=_4aa.toLowerCase();
ns=ns||"dojo";
var imps=_491[ns]||(_491[ns]={});
var impl=imps[_4ac];
if(impl){
return impl;
}
if(!_479.length){
buildPrefixCache();
}
var _4af=dojo.ns.get(ns);
if(!_4af){
dojo.ns.register(ns,ns+".widget");
_4af=dojo.ns.get(ns);
}
if(_4af){
_4af.resolve(_4aa);
}
impl=_4a6(_4ac,_4af.module);
if(impl){
return (imps[_4ac]=impl);
}
_4af=dojo.ns.require(ns);
if((_4af)&&(_4af.resolver)){
_4af.resolve(_4aa);
impl=_4a6(_4ac,_4af.module);
if(impl){
return (imps[_4ac]=impl);
}
}
dojo.deprecated("dojo.widget.Manager.getImplementationName","Could not locate widget implementation for \""+_4aa+"\" in \""+_4af.module+"\" registered to namespace \""+_4af.name+"\". "+"Developers must specify correct namespaces for all non-Dojo widgets","0.5");
for(var i=0;i<_492.length;i++){
impl=_4a6(_4ac,_492[i]);
if(impl){
return (imps[_4ac]=impl);
}
}
throw new Error("Could not locate widget implementation for \""+_4aa+"\" in \""+_4af.module+"\" registered to namespace \""+_4af.name+"\"");
};
this.resizing=false;
this.onWindowResized=function(){
if(this.resizing){
return;
}
try{
this.resizing=true;
for(var id in this.topWidgets){
var _4b2=this.topWidgets[id];
if(_4b2.checkSize){
_4b2.checkSize();
}
}
}
catch(e){
}
finally{
this.resizing=false;
}
};
if(typeof window!="undefined"){
dojo.addOnLoad(this,"onWindowResized");
dojo.event.connect(window,"onresize",this,"onWindowResized");
}
};
(function(){
var dw=dojo.widget;
var dwm=dw.manager;
var h=dojo.lang.curry(dojo.lang,"hitch",dwm);
var g=function(_4b7,_4b8){
dw[(_4b8||_4b7)]=h(_4b7);
};
g("add","addWidget");
g("destroyAll","destroyAllWidgets");
g("remove","removeWidget");
g("removeById","removeWidgetById");
g("getWidgetById");
g("getWidgetById","byId");
g("getWidgetsByType");
g("getWidgetsByFilter");
g("getWidgetsByType","byType");
g("getWidgetsByFilter","byFilter");
g("getWidgetByNode","byNode");
dw.all=function(n){
var _4ba=dwm.getAllWidgets.apply(dwm,arguments);
if(arguments.length>0){
return _4ba[n];
}
return _4ba;
};
g("registerWidgetPackage");
g("getImplementation","getWidgetImplementation");
g("getImplementationName","getWidgetImplementationName");
dw.widgets=dwm.widgets;
dw.widgetIds=dwm.widgetIds;
dw.root=dwm.root;
})();
dojo.provide("dojo.uri.*");
dojo.provide("dojo.a11y");
dojo.a11y={imgPath:dojo.uri.dojoUri("src/widget/templates/images"),doAccessibleCheck:true,accessible:null,checkAccessible:function(){
if(this.accessible===null){
this.accessible=false;
if(this.doAccessibleCheck==true){
this.accessible=this.testAccessible();
}
}
return this.accessible;
},testAccessible:function(){
this.accessible=false;
if(dojo.render.html.ie||dojo.render.html.mozilla){
var div=document.createElement("div");
div.style.backgroundImage="url(\""+this.imgPath+"/tab_close.gif\")";
dojo.body().appendChild(div);
var _4bc=null;
if(window.getComputedStyle){
var _4bd=getComputedStyle(div,"");
_4bc=_4bd.getPropertyValue("background-image");
}else{
_4bc=div.currentStyle.backgroundImage;
}
var _4be=false;
if(_4bc!=null&&(_4bc=="none"||_4bc=="url(invalid-url:)")){
this.accessible=true;
}
dojo.body().removeChild(div);
}
return this.accessible;
},setCheckAccessible:function(_4bf){
this.doAccessibleCheck=_4bf;
},setAccessibleMode:function(){
if(this.accessible===null){
if(this.checkAccessible()){
dojo.render.html.prefixes.unshift("a11y");
}
}
return this.accessible;
}};
dojo.provide("dojo.widget.Widget");
dojo.declare("dojo.widget.Widget",null,function(){
this.children=[];
this.extraArgs={};
},{parent:null,isTopLevel:false,disabled:false,isContainer:false,widgetId:"",widgetType:"Widget",ns:"dojo",getNamespacedType:function(){
return (this.ns?this.ns+":"+this.widgetType:this.widgetType).toLowerCase();
},toString:function(){
return "[Widget "+this.getNamespacedType()+", "+(this.widgetId||"NO ID")+"]";
},repr:function(){
return this.toString();
},enable:function(){
this.disabled=false;
},disable:function(){
this.disabled=true;
},onResized:function(){
this.notifyChildrenOfResize();
},notifyChildrenOfResize:function(){
for(var i=0;i<this.children.length;i++){
var _4c1=this.children[i];
if(_4c1.onResized){
_4c1.onResized();
}
}
},create:function(args,_4c3,_4c4,ns){
if(ns){
this.ns=ns;
}
this.satisfyPropertySets(args,_4c3,_4c4);
this.mixInProperties(args,_4c3,_4c4);
this.postMixInProperties(args,_4c3,_4c4);
dojo.widget.manager.add(this);
this.buildRendering(args,_4c3,_4c4);
this.initialize(args,_4c3,_4c4);
this.postInitialize(args,_4c3,_4c4);
this.postCreate(args,_4c3,_4c4);
return this;
},destroy:function(_4c6){
if(this.parent){
this.parent.removeChild(this);
}
this.destroyChildren();
this.uninitialize();
this.destroyRendering(_4c6);
dojo.widget.manager.removeById(this.widgetId);
},destroyChildren:function(){
var _4c7;
var i=0;
while(this.children.length>i){
_4c7=this.children[i];
if(_4c7 instanceof dojo.widget.Widget){
this.removeChild(_4c7);
_4c7.destroy();
continue;
}
i++;
}
},getChildrenOfType:function(type,_4ca){
var ret=[];
var _4cc=dojo.lang.isFunction(type);
if(!_4cc){
type=type.toLowerCase();
}
for(var x=0;x<this.children.length;x++){
if(_4cc){
if(this.children[x] instanceof type){
ret.push(this.children[x]);
}
}else{
if(this.children[x].widgetType.toLowerCase()==type){
ret.push(this.children[x]);
}
}
if(_4ca){
ret=ret.concat(this.children[x].getChildrenOfType(type,_4ca));
}
}
return ret;
},getDescendants:function(){
var _4ce=[];
var _4cf=[this];
var elem;
while((elem=_4cf.pop())){
_4ce.push(elem);
if(elem.children){
dojo.lang.forEach(elem.children,function(elem){
_4cf.push(elem);
});
}
}
return _4ce;
},isFirstChild:function(){
return this===this.parent.children[0];
},isLastChild:function(){
return this===this.parent.children[this.parent.children.length-1];
},satisfyPropertySets:function(args){
return args;
},mixInProperties:function(args,frag){
if((args["fastMixIn"])||(frag["fastMixIn"])){
for(var x in args){
this[x]=args[x];
}
return;
}
var _4d6;
var _4d7=dojo.widget.lcArgsCache[this.widgetType];
if(_4d7==null){
_4d7={};
for(var y in this){
_4d7[((new String(y)).toLowerCase())]=y;
}
dojo.widget.lcArgsCache[this.widgetType]=_4d7;
}
var _4d9={};
for(var x in args){
if(!this[x]){
var y=_4d7[(new String(x)).toLowerCase()];
if(y){
args[y]=args[x];
x=y;
}
}
if(_4d9[x]){
continue;
}
_4d9[x]=true;
if((typeof this[x])!=(typeof _4d6)){
if(typeof args[x]!="string"){
this[x]=args[x];
}else{
if(dojo.lang.isString(this[x])){
this[x]=args[x];
}else{
if(dojo.lang.isNumber(this[x])){
this[x]=new Number(args[x]);
}else{
if(dojo.lang.isBoolean(this[x])){
this[x]=(args[x].toLowerCase()=="false")?false:true;
}else{
if(dojo.lang.isFunction(this[x])){
if(args[x].search(/[^\w\.]+/i)==-1){
this[x]=dojo.evalObjPath(args[x],false);
}else{
var tn=dojo.lang.nameAnonFunc(new Function(args[x]),this);
dojo.event.kwConnect({srcObj:this,srcFunc:x,adviceObj:this,adviceFunc:tn});
}
}else{
if(dojo.lang.isArray(this[x])){
this[x]=args[x].split(";");
}else{
if(this[x] instanceof Date){
this[x]=new Date(Number(args[x]));
}else{
if(typeof this[x]=="object"){
if(this[x] instanceof dojo.uri.Uri){
this[x]=dojo.uri.dojoUri(args[x]);
}else{
var _4db=args[x].split(";");
for(var y=0;y<_4db.length;y++){
var si=_4db[y].indexOf(":");
if((si!=-1)&&(_4db[y].length>si)){
this[x][_4db[y].substr(0,si).replace(/^\s+|\s+$/g,"")]=_4db[y].substr(si+1);
}
}
}
}else{
this[x]=args[x];
}
}
}
}
}
}
}
}
}else{
this.extraArgs[x.toLowerCase()]=args[x];
}
}
},postMixInProperties:function(args,frag,_4df){
},initialize:function(args,frag,_4e2){
return false;
},postInitialize:function(args,frag,_4e5){
return false;
},postCreate:function(args,frag,_4e8){
return false;
},uninitialize:function(){
return false;
},buildRendering:function(args,frag,_4eb){
dojo.unimplemented("dojo.widget.Widget.buildRendering, on "+this.toString()+", ");
return false;
},destroyRendering:function(){
dojo.unimplemented("dojo.widget.Widget.destroyRendering");
return false;
},addedTo:function(_4ec){
},addChild:function(_4ed){
dojo.unimplemented("dojo.widget.Widget.addChild");
return false;
},removeChild:function(_4ee){
for(var x=0;x<this.children.length;x++){
if(this.children[x]===_4ee){
this.children.splice(x,1);
_4ee.parent=null;
break;
}
}
return _4ee;
},getPreviousSibling:function(){
var idx=this.getParentIndex();
if(idx<=0){
return null;
}
return this.parent.children[idx-1];
},getSiblings:function(){
return this.parent.children;
},getParentIndex:function(){
return dojo.lang.indexOf(this.parent.children,this,true);
},getNextSibling:function(){
var idx=this.getParentIndex();
if(idx==this.parent.children.length-1){
return null;
}
if(idx<0){
return null;
}
return this.parent.children[idx+1];
}});
dojo.widget.lcArgsCache={};
dojo.widget.tags={};
dojo.widget.tags.addParseTreeHandler=function(type){
dojo.deprecated("addParseTreeHandler",". ParseTreeHandlers are now reserved for components. Any unfiltered DojoML tag without a ParseTreeHandler is assumed to be a widget","0.5");
};
dojo.widget.tags["dojo:propertyset"]=function(_4f3,_4f4,_4f5){
var _4f6=_4f4.parseProperties(_4f3["dojo:propertyset"]);
};
dojo.widget.tags["dojo:connect"]=function(_4f7,_4f8,_4f9){
var _4fa=_4f8.parseProperties(_4f7["dojo:connect"]);
};
dojo.widget.buildWidgetFromParseTree=function(type,frag,_4fd,_4fe,_4ff,_500){
dojo.a11y.setAccessibleMode();
var _501=type.split(":");
_501=(_501.length==2)?_501[1]:type;
var _502=_500||_4fd.parseProperties(frag[frag["ns"]+":"+_501]);
var _503=dojo.widget.manager.getImplementation(_501,null,null,frag["ns"]);
if(!_503){
throw new Error("cannot find \""+type+"\" widget");
}else{
if(!_503.create){
throw new Error("\""+type+"\" widget object has no \"create\" method and does not appear to implement *Widget");
}
}
_502["dojoinsertionindex"]=_4ff;
var ret=_503.create(_502,frag,_4fe,frag["ns"]);
return ret;
};
dojo.widget.defineWidget=function(_505,_506,_507,init,_509){
if(dojo.lang.isString(arguments[3])){
dojo.widget._defineWidget(arguments[0],arguments[3],arguments[1],arguments[4],arguments[2]);
}else{
var args=[arguments[0]],p=3;
if(dojo.lang.isString(arguments[1])){
args.push(arguments[1],arguments[2]);
}else{
args.push("",arguments[1]);
p=2;
}
if(dojo.lang.isFunction(arguments[p])){
args.push(arguments[p],arguments[p+1]);
}else{
args.push(null,arguments[p]);
}
dojo.widget._defineWidget.apply(this,args);
}
};
dojo.widget.defineWidget.renderers="html|svg|vml";
dojo.widget._defineWidget=function(_50c,_50d,_50e,init,_510){
var _511=_50c.split(".");
var type=_511.pop();
var regx="\\.("+(_50d?_50d+"|":"")+dojo.widget.defineWidget.renderers+")\\.";
var r=_50c.search(new RegExp(regx));
_511=(r<0?_511.join("."):_50c.substr(0,r));
dojo.widget.manager.registerWidgetPackage(_511);
var pos=_511.indexOf(".");
var _516=(pos>-1)?_511.substring(0,pos):_511;
_510=(_510)||{};
_510.widgetType=type;
if((!init)&&(_510["classConstructor"])){
init=_510.classConstructor;
delete _510.classConstructor;
}
dojo.declare(_50c,_50e,init,_510);
};
dojo.provide("dojo.widget.Parse");
dojo.widget.Parse=function(_517){
this.propertySetsList=[];
this.fragment=_517;
this.createComponents=function(frag,_519){
var _51a=[];
var _51b=false;
try{
if(frag&&frag.tagName&&(frag!=frag.nodeRef)){
var _51c=dojo.widget.tags;
var tna=String(frag.tagName).split(";");
for(var x=0;x<tna.length;x++){
var ltn=tna[x].replace(/^\s+|\s+$/g,"").toLowerCase();
frag.tagName=ltn;
var ret;
if(_51c[ltn]){
_51b=true;
ret=_51c[ltn](frag,this,_519,frag.index);
_51a.push(ret);
}else{
if(ltn.indexOf(":")==-1){
ltn="dojo:"+ltn;
}
ret=dojo.widget.buildWidgetFromParseTree(ltn,frag,this,_519,frag.index);
if(ret){
_51b=true;
_51a.push(ret);
}
}
}
}
}
catch(e){
dojo.debug("dojo.widget.Parse: error:",e);
}
if(!_51b){
_51a=_51a.concat(this.createSubComponents(frag,_519));
}
return _51a;
};
this.createSubComponents=function(_521,_522){
var frag,_524=[];
for(var item in _521){
frag=_521[item];
if(frag&&typeof frag=="object"&&(frag!=_521.nodeRef)&&(frag!=_521.tagName)&&(!dojo.dom.isNode(frag))){
_524=_524.concat(this.createComponents(frag,_522));
}
}
return _524;
};
this.parsePropertySets=function(_526){
return [];
};
this.parseProperties=function(_527){
var _528={};
for(var item in _527){
if((_527[item]==_527.tagName)||(_527[item]==_527.nodeRef)){
}else{
var frag=_527[item];
if(frag.tagName&&dojo.widget.tags[frag.tagName.toLowerCase()]){
}else{
if(frag[0]&&frag[0].value!=""&&frag[0].value!=null){
try{
if(item.toLowerCase()=="dataprovider"){
var _52b=this;
this.getDataProvider(_52b,frag[0].value);
_528.dataProvider=this.dataProvider;
}
_528[item]=frag[0].value;
var _52c=this.parseProperties(frag);
for(var _52d in _52c){
_528[_52d]=_52c[_52d];
}
}
catch(e){
dojo.debug(e);
}
}
}
switch(item.toLowerCase()){
case "checked":
case "disabled":
if(typeof _528[item]!="boolean"){
_528[item]=true;
}
break;
}
}
}
return _528;
};
this.getDataProvider=function(_52e,_52f){
dojo.io.bind({url:_52f,load:function(type,_531){
if(type=="load"){
_52e.dataProvider=_531;
}
},mimetype:"text/javascript",sync:true});
};
this.getPropertySetById=function(_532){
for(var x=0;x<this.propertySetsList.length;x++){
if(_532==this.propertySetsList[x]["id"][0].value){
return this.propertySetsList[x];
}
}
return "";
};
this.getPropertySetsByType=function(_534){
var _535=[];
for(var x=0;x<this.propertySetsList.length;x++){
var cpl=this.propertySetsList[x];
var cpcc=cpl.componentClass||cpl.componentType||null;
var _539=this.propertySetsList[x]["id"][0].value;
if(cpcc&&(_539==cpcc[0].value)){
_535.push(cpl);
}
}
return _535;
};
this.getPropertySets=function(_53a){
var ppl="dojo:propertyproviderlist";
var _53c=[];
var _53d=_53a.tagName;
if(_53a[ppl]){
var _53e=_53a[ppl].value.split(" ");
for(var _53f in _53e){
if((_53f.indexOf("..")==-1)&&(_53f.indexOf("://")==-1)){
var _540=this.getPropertySetById(_53f);
if(_540!=""){
_53c.push(_540);
}
}else{
}
}
}
return this.getPropertySetsByType(_53d).concat(_53c);
};
this.createComponentFromScript=function(_541,_542,_543,ns){
_543.fastMixIn=true;
var ltn=(ns||"dojo")+":"+_542.toLowerCase();
if(dojo.widget.tags[ltn]){
return [dojo.widget.tags[ltn](_543,this,null,null,_543)];
}
return [dojo.widget.buildWidgetFromParseTree(ltn,_543,this,null,null,_543)];
};
};
dojo.widget._parser_collection={"dojo":new dojo.widget.Parse()};
dojo.widget.getParser=function(name){
if(!name){
name="dojo";
}
if(!this._parser_collection[name]){
this._parser_collection[name]=new dojo.widget.Parse();
}
return this._parser_collection[name];
};
dojo.widget.createWidget=function(name,_548,_549,_54a){
var _54b=false;
var _54c=(typeof name=="string");
if(_54c){
var pos=name.indexOf(":");
var ns=(pos>-1)?name.substring(0,pos):"dojo";
if(pos>-1){
name=name.substring(pos+1);
}
var _54f=name.toLowerCase();
var _550=ns+":"+_54f;
_54b=(dojo.byId(name)&&!dojo.widget.tags[_550]);
}
if((arguments.length==1)&&(_54b||!_54c)){
var xp=new dojo.xml.Parse();
var tn=_54b?dojo.byId(name):name;
return dojo.widget.getParser().createComponents(xp.parseElement(tn,null,true))[0];
}
function fromScript(_553,name,_555,ns){
_555[_550]={dojotype:[{value:_54f}],nodeRef:_553,fastMixIn:true};
_555.ns=ns;
return dojo.widget.getParser().createComponentFromScript(_553,name,_555,ns);
}
_548=_548||{};
var _557=false;
var tn=null;
var h=dojo.render.html.capable;
if(h){
tn=document.createElement("span");
}
if(!_549){
_557=true;
_549=tn;
if(h){
dojo.body().appendChild(_549);
}
}else{
if(_54a){
dojo.dom.insertAtPosition(tn,_549,_54a);
}else{
tn=_549;
}
}
var _559=fromScript(tn,name.toLowerCase(),_548,ns);
if((!_559)||(!_559[0])||(typeof _559[0].widgetType=="undefined")){
throw new Error("createWidget: Creation of \""+name+"\" widget failed.");
}
try{
if(_557&&_559[0].domNode.parentNode){
_559[0].domNode.parentNode.removeChild(_559[0].domNode);
}
}
catch(e){
dojo.debug(e);
}
return _559[0];
};
dojo.provide("dojo.widget.DomWidget");
dojo.widget._cssFiles={};
dojo.widget._cssStrings={};
dojo.widget._templateCache={};
dojo.widget.defaultStrings={dojoRoot:dojo.hostenv.getBaseScriptUri(),baseScriptUri:dojo.hostenv.getBaseScriptUri()};
dojo.widget.fillFromTemplateCache=function(obj,_55b,_55c,_55d){
var _55e=_55b||obj.templatePath;
var _55f=dojo.widget._templateCache;
if(!_55e&&!obj["widgetType"]){
do{
var _560="__dummyTemplate__"+dojo.widget._templateCache.dummyCount++;
}while(_55f[_560]);
obj.widgetType=_560;
}
var wt=_55e?_55e.toString():obj.widgetType;
var ts=_55f[wt];
if(!ts){
_55f[wt]={"string":null,"node":null};
if(_55d){
ts={};
}else{
ts=_55f[wt];
}
}
if((!obj.templateString)&&(!_55d)){
obj.templateString=_55c||ts["string"];
}
if((!obj.templateNode)&&(!_55d)){
obj.templateNode=ts["node"];
}
if((!obj.templateNode)&&(!obj.templateString)&&(_55e)){
var _563=dojo.hostenv.getText(_55e);
if(_563){
_563=_563.replace(/^\s*<\?xml(\s)+version=[\'\"](\d)*.(\d)*[\'\"](\s)*\?>/im,"");
var _564=_563.match(/<body[^>]*>\s*([\s\S]+)\s*<\/body>/im);
if(_564){
_563=_564[1];
}
}else{
_563="";
}
obj.templateString=_563;
if(!_55d){
_55f[wt]["string"]=_563;
}
}
if((!ts["string"])&&(!_55d)){
ts.string=obj.templateString;
}
};
dojo.widget._templateCache.dummyCount=0;
dojo.widget.attachProperties=["dojoAttachPoint","id"];
dojo.widget.eventAttachProperty="dojoAttachEvent";
dojo.widget.onBuildProperty="dojoOnBuild";
dojo.widget.waiNames=["waiRole","waiState"];
dojo.widget.wai={waiRole:{name:"waiRole","namespace":"http://www.w3.org/TR/xhtml2",alias:"x2",prefix:"wairole:"},waiState:{name:"waiState","namespace":"http://www.w3.org/2005/07/aaa",alias:"aaa",prefix:""},setAttr:function(node,ns,attr,_568){
if(dojo.render.html.ie){
node.setAttribute(this[ns].alias+":"+attr,this[ns].prefix+_568);
}else{
node.setAttributeNS(this[ns]["namespace"],attr,this[ns].prefix+_568);
}
},getAttr:function(node,ns,attr){
if(dojo.render.html.ie){
return node.getAttribute(this[ns].alias+":"+attr);
}else{
return node.getAttributeNS(this[ns]["namespace"],attr);
}
},removeAttr:function(node,ns,attr){
var _56f=true;
if(dojo.render.html.ie){
_56f=node.removeAttribute(this[ns].alias+":"+attr);
}else{
node.removeAttributeNS(this[ns]["namespace"],attr);
}
return _56f;
}};
dojo.widget.attachTemplateNodes=function(_570,_571,_572){
var _573=dojo.dom.ELEMENT_NODE;
function trim(str){
return str.replace(/^\s+|\s+$/g,"");
}
if(!_570){
_570=_571.domNode;
}
if(_570.nodeType!=_573){
return;
}
var _575=_570.all||_570.getElementsByTagName("*");
var _576=_571;
for(var x=-1;x<_575.length;x++){
var _578=(x==-1)?_570:_575[x];
var _579=[];
if(!_571.widgetsInTemplate||!_578.getAttribute("dojoType")){
for(var y=0;y<this.attachProperties.length;y++){
var _57b=_578.getAttribute(this.attachProperties[y]);
if(_57b){
_579=_57b.split(";");
for(var z=0;z<_579.length;z++){
if(dojo.lang.isArray(_571[_579[z]])){
_571[_579[z]].push(_578);
}else{
_571[_579[z]]=_578;
}
}
break;
}
}
var _57d=_578.getAttribute(this.eventAttachProperty);
if(_57d){
var evts=_57d.split(";");
for(var y=0;y<evts.length;y++){
if((!evts[y])||(!evts[y].length)){
continue;
}
var _57f=null;
var tevt=trim(evts[y]);
if(evts[y].indexOf(":")>=0){
var _581=tevt.split(":");
tevt=trim(_581[0]);
_57f=trim(_581[1]);
}
if(!_57f){
_57f=tevt;
}
var tf=function(){
var ntf=new String(_57f);
return function(evt){
if(_576[ntf]){
_576[ntf](dojo.event.browser.fixEvent(evt,this));
}
};
}();
dojo.event.browser.addListener(_578,tevt,tf,false,true);
}
}
for(var y=0;y<_572.length;y++){
var _585=_578.getAttribute(_572[y]);
if((_585)&&(_585.length)){
var _57f=null;
var _586=_572[y].substr(4);
_57f=trim(_585);
var _587=[_57f];
if(_57f.indexOf(";")>=0){
_587=dojo.lang.map(_57f.split(";"),trim);
}
for(var z=0;z<_587.length;z++){
if(!_587[z].length){
continue;
}
var tf=function(){
var ntf=new String(_587[z]);
return function(evt){
if(_576[ntf]){
_576[ntf](dojo.event.browser.fixEvent(evt,this));
}
};
}();
dojo.event.browser.addListener(_578,_586,tf,false,true);
}
}
}
}
var _58a=_578.getAttribute(this.templateProperty);
if(_58a){
_571[_58a]=_578;
}
dojo.lang.forEach(dojo.widget.waiNames,function(name){
var wai=dojo.widget.wai[name];
var val=_578.getAttribute(wai.name);
if(val){
if(val.indexOf("-")==-1){
dojo.widget.wai.setAttr(_578,wai.name,"role",val);
}else{
var _58e=val.split("-");
dojo.widget.wai.setAttr(_578,wai.name,_58e[0],_58e[1]);
}
}
},this);
var _58f=_578.getAttribute(this.onBuildProperty);
if(_58f){
eval("var node = baseNode; var widget = targetObj; "+_58f);
}
}
};
dojo.widget.getDojoEventsFromStr=function(str){
var re=/(dojoOn([a-z]+)(\s?))=/gi;
var evts=str?str.match(re)||[]:[];
var ret=[];
var lem={};
for(var x=0;x<evts.length;x++){
if(evts[x].length<1){
continue;
}
var cm=evts[x].replace(/\s/,"");
cm=(cm.slice(0,cm.length-1));
if(!lem[cm]){
lem[cm]=true;
ret.push(cm);
}
}
return ret;
};
dojo.declare("dojo.widget.DomWidget",dojo.widget.Widget,function(){
if((arguments.length>0)&&(typeof arguments[0]=="object")){
this.create(arguments[0]);
}
},{templateNode:null,templateString:null,templateCssString:null,preventClobber:false,domNode:null,containerNode:null,widgetsInTemplate:false,addChild:function(_597,_598,pos,ref,_59b){
if(!this.isContainer){
dojo.debug("dojo.widget.DomWidget.addChild() attempted on non-container widget");
return null;
}else{
if(_59b==undefined){
_59b=this.children.length;
}
this.addWidgetAsDirectChild(_597,_598,pos,ref,_59b);
this.registerChild(_597,_59b);
}
return _597;
},addWidgetAsDirectChild:function(_59c,_59d,pos,ref,_5a0){
if((!this.containerNode)&&(!_59d)){
this.containerNode=this.domNode;
}
var cn=(_59d)?_59d:this.containerNode;
if(!pos){
pos="after";
}
if(!ref){
if(!cn){
cn=dojo.body();
}
ref=cn.lastChild;
}
if(!_5a0){
_5a0=0;
}
_59c.domNode.setAttribute("dojoinsertionindex",_5a0);
if(!ref){
cn.appendChild(_59c.domNode);
}else{
if(pos=="insertAtIndex"){
dojo.dom.insertAtIndex(_59c.domNode,ref.parentNode,_5a0);
}else{
if((pos=="after")&&(ref===cn.lastChild)){
cn.appendChild(_59c.domNode);
}else{
dojo.dom.insertAtPosition(_59c.domNode,cn,pos);
}
}
}
},registerChild:function(_5a2,_5a3){
_5a2.dojoInsertionIndex=_5a3;
var idx=-1;
for(var i=0;i<this.children.length;i++){
if(this.children[i].dojoInsertionIndex<=_5a3){
idx=i;
}
}
this.children.splice(idx+1,0,_5a2);
_5a2.parent=this;
_5a2.addedTo(this,idx+1);
delete dojo.widget.manager.topWidgets[_5a2.widgetId];
},removeChild:function(_5a6){
dojo.dom.removeNode(_5a6.domNode);
return dojo.widget.DomWidget.superclass.removeChild.call(this,_5a6);
},getFragNodeRef:function(frag){
if(!frag){
return null;
}
if(!frag[this.getNamespacedType()]){
dojo.raise("Error: no frag for widget type "+this.getNamespacedType()+", id "+this.widgetId+" (maybe a widget has set it's type incorrectly)");
}
return frag[this.getNamespacedType()]["nodeRef"];
},postInitialize:function(args,frag,_5aa){
var _5ab=this.getFragNodeRef(frag);
if(_5aa&&(_5aa.snarfChildDomOutput||!_5ab)){
_5aa.addWidgetAsDirectChild(this,"","insertAtIndex","",args["dojoinsertionindex"],_5ab);
}else{
if(_5ab){
if(this.domNode&&(this.domNode!==_5ab)){
this._sourceNodeRef=dojo.dom.replaceNode(_5ab,this.domNode);
}
}
}
if(_5aa){
_5aa.registerChild(this,args.dojoinsertionindex);
}else{
dojo.widget.manager.topWidgets[this.widgetId]=this;
}
if(this.widgetsInTemplate){
var _5ac=new dojo.xml.Parse();
var _5ad;
var _5ae=this.domNode.getElementsByTagName("*");
for(var i=0;i<_5ae.length;i++){
if(_5ae[i].getAttribute("dojoAttachPoint")=="subContainerWidget"){
_5ad=_5ae[i];
}
if(_5ae[i].getAttribute("dojoType")){
_5ae[i].setAttribute("isSubWidget",true);
}
}
if(this.isContainer&&!this.containerNode){
if(_5ad){
var src=this.getFragNodeRef(frag);
if(src){
dojo.dom.moveChildren(src,_5ad);
frag["dojoDontFollow"]=true;
}
}else{
dojo.debug("No subContainerWidget node can be found in template file for widget "+this);
}
}
var _5b1=_5ac.parseElement(this.domNode,null,true);
dojo.widget.getParser().createSubComponents(_5b1,this);
var _5b2=[];
var _5b3=[this];
var w;
while((w=_5b3.pop())){
for(var i=0;i<w.children.length;i++){
var _5b5=w.children[i];
if(_5b5._processedSubWidgets||!_5b5.extraArgs["issubwidget"]){
continue;
}
_5b2.push(_5b5);
if(_5b5.isContainer){
_5b3.push(_5b5);
}
}
}
for(var i=0;i<_5b2.length;i++){
var _5b6=_5b2[i];
if(_5b6._processedSubWidgets){
dojo.debug("This should not happen: widget._processedSubWidgets is already true!");
return;
}
_5b6._processedSubWidgets=true;
if(_5b6.extraArgs["dojoattachevent"]){
var evts=_5b6.extraArgs["dojoattachevent"].split(";");
for(var j=0;j<evts.length;j++){
var _5b9=null;
var tevt=dojo.string.trim(evts[j]);
if(tevt.indexOf(":")>=0){
var _5bb=tevt.split(":");
tevt=dojo.string.trim(_5bb[0]);
_5b9=dojo.string.trim(_5bb[1]);
}
if(!_5b9){
_5b9=tevt;
}
if(dojo.lang.isFunction(_5b6[tevt])){
dojo.event.kwConnect({srcObj:_5b6,srcFunc:tevt,targetObj:this,targetFunc:_5b9});
}else{
alert(tevt+" is not a function in widget "+_5b6);
}
}
}
if(_5b6.extraArgs["dojoattachpoint"]){
this[_5b6.extraArgs["dojoattachpoint"]]=_5b6;
}
}
}
if(this.isContainer&&!frag["dojoDontFollow"]){
dojo.widget.getParser().createSubComponents(frag,this);
}
},buildRendering:function(args,frag){
var ts=dojo.widget._templateCache[this.widgetType];
if(args["templatecsspath"]){
args["templateCssPath"]=args["templatecsspath"];
}
var _5bf=args["templateCssPath"]||this.templateCssPath;
if(_5bf&&!dojo.widget._cssFiles[_5bf.toString()]){
if((!this.templateCssString)&&(_5bf)){
this.templateCssString=dojo.hostenv.getText(_5bf);
this.templateCssPath=null;
}
dojo.widget._cssFiles[_5bf.toString()]=true;
}
if((this["templateCssString"])&&(!dojo.widget._cssStrings[this.templateCssString])){
dojo.html.insertCssText(this.templateCssString,null,_5bf);
dojo.widget._cssStrings[this.templateCssString]=true;
}
if((!this.preventClobber)&&((this.templatePath)||(this.templateNode)||((this["templateString"])&&(this.templateString.length))||((typeof ts!="undefined")&&((ts["string"])||(ts["node"]))))){
this.buildFromTemplate(args,frag);
}else{
this.domNode=this.getFragNodeRef(frag);
}
this.fillInTemplate(args,frag);
},buildFromTemplate:function(args,frag){
var _5c2=false;
if(args["templatepath"]){
args["templatePath"]=args["templatepath"];
}
dojo.widget.fillFromTemplateCache(this,args["templatePath"],null,_5c2);
var ts=dojo.widget._templateCache[this.templatePath?this.templatePath.toString():this.widgetType];
if((ts)&&(!_5c2)){
if(!this.templateString.length){
this.templateString=ts["string"];
}
if(!this.templateNode){
this.templateNode=ts["node"];
}
}
var _5c4=false;
var node=null;
var tstr=this.templateString;
if((!this.templateNode)&&(this.templateString)){
_5c4=this.templateString.match(/\$\{([^\}]+)\}/g);
if(_5c4){
var hash=this.strings||{};
for(var key in dojo.widget.defaultStrings){
if(dojo.lang.isUndefined(hash[key])){
hash[key]=dojo.widget.defaultStrings[key];
}
}
for(var i=0;i<_5c4.length;i++){
var key=_5c4[i];
key=key.substring(2,key.length-1);
var kval=(key.substring(0,5)=="this.")?dojo.lang.getObjPathValue(key.substring(5),this):hash[key];
var _5cb;
if((kval)||(dojo.lang.isString(kval))){
_5cb=new String((dojo.lang.isFunction(kval))?kval.call(this,key,this.templateString):kval);
while(_5cb.indexOf("\"")>-1){
_5cb=_5cb.replace("\"","&quot;");
}
tstr=tstr.replace(_5c4[i],_5cb);
}
}
}else{
this.templateNode=this.createNodesFromText(this.templateString,true)[0];
if(!_5c2){
ts.node=this.templateNode;
}
}
}
if((!this.templateNode)&&(!_5c4)){
dojo.debug("DomWidget.buildFromTemplate: could not create template");
return false;
}else{
if(!_5c4){
node=this.templateNode.cloneNode(true);
if(!node){
return false;
}
}else{
node=this.createNodesFromText(tstr,true)[0];
}
}
this.domNode=node;
this.attachTemplateNodes();
if(this.isContainer&&this.containerNode){
var src=this.getFragNodeRef(frag);
if(src){
dojo.dom.moveChildren(src,this.containerNode);
}
}
},attachTemplateNodes:function(_5cd,_5ce){
if(!_5cd){
_5cd=this.domNode;
}
if(!_5ce){
_5ce=this;
}
return dojo.widget.attachTemplateNodes(_5cd,_5ce,dojo.widget.getDojoEventsFromStr(this.templateString));
},fillInTemplate:function(){
},destroyRendering:function(){
try{
dojo.dom.destroyNode(this.domNode);
delete this.domNode;
}
catch(e){
}
if(this._sourceNodeRef){
try{
dojo.dom.destroyNode(this._sourceNodeRef);
}
catch(e){
}
}
},createNodesFromText:function(){
dojo.unimplemented("dojo.widget.DomWidget.createNodesFromText");
}});
dojo.provide("dojo.gfx.color");
dojo.gfx.color.Color=function(r,g,b,a){
if(dojo.lang.isArray(r)){
this.r=r[0];
this.g=r[1];
this.b=r[2];
this.a=r[3]||1;
}else{
if(dojo.lang.isString(r)){
var rgb=dojo.gfx.color.extractRGB(r);
this.r=rgb[0];
this.g=rgb[1];
this.b=rgb[2];
this.a=g||1;
}else{
if(r instanceof dojo.gfx.color.Color){
this.r=r.r;
this.b=r.b;
this.g=r.g;
this.a=r.a;
}else{
this.r=r;
this.g=g;
this.b=b;
this.a=a;
}
}
}
};
dojo.gfx.color.Color.fromArray=function(arr){
return new dojo.gfx.color.Color(arr[0],arr[1],arr[2],arr[3]);
};
dojo.extend(dojo.gfx.color.Color,{toRgb:function(_5d5){
if(_5d5){
return this.toRgba();
}else{
return [this.r,this.g,this.b];
}
},toRgba:function(){
return [this.r,this.g,this.b,this.a];
},toHex:function(){
return dojo.gfx.color.rgb2hex(this.toRgb());
},toCss:function(){
return "rgb("+this.toRgb().join()+")";
},toString:function(){
return this.toHex();
},blend:function(_5d6,_5d7){
var rgb=null;
if(dojo.lang.isArray(_5d6)){
rgb=_5d6;
}else{
if(_5d6 instanceof dojo.gfx.color.Color){
rgb=_5d6.toRgb();
}else{
rgb=new dojo.gfx.color.Color(_5d6).toRgb();
}
}
return dojo.gfx.color.blend(this.toRgb(),rgb,_5d7);
}});
dojo.gfx.color.named={white:[255,255,255],black:[0,0,0],red:[255,0,0],green:[0,255,0],lime:[0,255,0],blue:[0,0,255],navy:[0,0,128],gray:[128,128,128],silver:[192,192,192]};
dojo.gfx.color.blend=function(a,b,_5db){
if(typeof a=="string"){
return dojo.gfx.color.blendHex(a,b,_5db);
}
if(!_5db){
_5db=0;
}
_5db=Math.min(Math.max(-1,_5db),1);
_5db=((_5db+1)/2);
var c=[];
for(var x=0;x<3;x++){
c[x]=parseInt(b[x]+((a[x]-b[x])*_5db));
}
return c;
};
dojo.gfx.color.blendHex=function(a,b,_5e0){
return dojo.gfx.color.rgb2hex(dojo.gfx.color.blend(dojo.gfx.color.hex2rgb(a),dojo.gfx.color.hex2rgb(b),_5e0));
};
dojo.gfx.color.extractRGB=function(_5e1){
var hex="0123456789abcdef";
_5e1=_5e1.toLowerCase();
if(_5e1.indexOf("rgb")==0){
var _5e3=_5e1.match(/rgba*\((\d+), *(\d+), *(\d+)/i);
var ret=_5e3.splice(1,3);
return ret;
}else{
var _5e5=dojo.gfx.color.hex2rgb(_5e1);
if(_5e5){
return _5e5;
}else{
return dojo.gfx.color.named[_5e1]||[255,255,255];
}
}
};
dojo.gfx.color.hex2rgb=function(hex){
var _5e7="0123456789ABCDEF";
var rgb=new Array(3);
if(hex.indexOf("#")==0){
hex=hex.substring(1);
}
hex=hex.toUpperCase();
if(hex.replace(new RegExp("["+_5e7+"]","g"),"")!=""){
return null;
}
if(hex.length==3){
rgb[0]=hex.charAt(0)+hex.charAt(0);
rgb[1]=hex.charAt(1)+hex.charAt(1);
rgb[2]=hex.charAt(2)+hex.charAt(2);
}else{
rgb[0]=hex.substring(0,2);
rgb[1]=hex.substring(2,4);
rgb[2]=hex.substring(4);
}
for(var i=0;i<rgb.length;i++){
rgb[i]=_5e7.indexOf(rgb[i].charAt(0))*16+_5e7.indexOf(rgb[i].charAt(1));
}
return rgb;
};
dojo.gfx.color.rgb2hex=function(r,g,b){
if(dojo.lang.isArray(r)){
g=r[1]||0;
b=r[2]||0;
r=r[0]||0;
}
var ret=dojo.lang.map([r,g,b],function(x){
x=new Number(x);
var s=x.toString(16);
while(s.length<2){
s="0"+s;
}
return s;
});
ret.unshift("#");
return ret.join("");
};
dojo.provide("dojo.lfx.Animation");
dojo.lfx.Line=function(_5f0,end){
this.start=_5f0;
this.end=end;
if(dojo.lang.isArray(_5f0)){
var diff=[];
dojo.lang.forEach(this.start,function(s,i){
diff[i]=this.end[i]-s;
},this);
this.getValue=function(n){
var res=[];
dojo.lang.forEach(this.start,function(s,i){
res[i]=(diff[i]*n)+s;
},this);
return res;
};
}else{
var diff=end-_5f0;
this.getValue=function(n){
return (diff*n)+this.start;
};
}
};
dojo.lfx.easeDefault=function(n){
if(dojo.render.html.khtml){
return (parseFloat("0.5")+((Math.sin((n+parseFloat("1.5"))*Math.PI))/2));
}else{
return (0.5+((Math.sin((n+1.5)*Math.PI))/2));
}
};
dojo.lfx.easeIn=function(n){
return Math.pow(n,3);
};
dojo.lfx.easeOut=function(n){
return (1-Math.pow(1-n,3));
};
dojo.lfx.easeInOut=function(n){
return ((3*Math.pow(n,2))-(2*Math.pow(n,3)));
};
dojo.lfx.IAnimation=function(){
};
dojo.lang.extend(dojo.lfx.IAnimation,{curve:null,duration:1000,easing:null,repeatCount:0,rate:25,handler:null,beforeBegin:null,onBegin:null,onAnimate:null,onEnd:null,onPlay:null,onPause:null,onStop:null,play:null,pause:null,stop:null,connect:function(evt,_5ff,_600){
if(!_600){
_600=_5ff;
_5ff=this;
}
_600=dojo.lang.hitch(_5ff,_600);
var _601=this[evt]||function(){
};
this[evt]=function(){
var ret=_601.apply(this,arguments);
_600.apply(this,arguments);
return ret;
};
return this;
},fire:function(evt,args){
if(this[evt]){
this[evt].apply(this,(args||[]));
}
return this;
},repeat:function(_605){
this.repeatCount=_605;
return this;
},_active:false,_paused:false});
dojo.lfx.Animation=function(_606,_607,_608,_609,_60a,rate){
dojo.lfx.IAnimation.call(this);
if(dojo.lang.isNumber(_606)||(!_606&&_607.getValue)){
rate=_60a;
_60a=_609;
_609=_608;
_608=_607;
_607=_606;
_606=null;
}else{
if(_606.getValue||dojo.lang.isArray(_606)){
rate=_609;
_60a=_608;
_609=_607;
_608=_606;
_607=null;
_606=null;
}
}
if(dojo.lang.isArray(_608)){
this.curve=new dojo.lfx.Line(_608[0],_608[1]);
}else{
this.curve=_608;
}
if(_607!=null&&_607>0){
this.duration=_607;
}
if(_60a){
this.repeatCount=_60a;
}
if(rate){
this.rate=rate;
}
if(_606){
dojo.lang.forEach(["handler","beforeBegin","onBegin","onEnd","onPlay","onStop","onAnimate"],function(item){
if(_606[item]){
this.connect(item,_606[item]);
}
},this);
}
if(_609&&dojo.lang.isFunction(_609)){
this.easing=_609;
}
};
dojo.inherits(dojo.lfx.Animation,dojo.lfx.IAnimation);
dojo.lang.extend(dojo.lfx.Animation,{_startTime:null,_endTime:null,_timer:null,_percent:0,_startRepeatCount:0,play:function(_60d,_60e){
if(_60e){
clearTimeout(this._timer);
this._active=false;
this._paused=false;
this._percent=0;
}else{
if(this._active&&!this._paused){
return this;
}
}
this.fire("handler",["beforeBegin"]);
this.fire("beforeBegin");
if(_60d>0){
setTimeout(dojo.lang.hitch(this,function(){
this.play(null,_60e);
}),_60d);
return this;
}
this._startTime=new Date().valueOf();
if(this._paused){
this._startTime-=(this.duration*this._percent/100);
}
this._endTime=this._startTime+this.duration;
this._active=true;
this._paused=false;
var step=this._percent/100;
var _610=this.curve.getValue(step);
if(this._percent==0){
if(!this._startRepeatCount){
this._startRepeatCount=this.repeatCount;
}
this.fire("handler",["begin",_610]);
this.fire("onBegin",[_610]);
}
this.fire("handler",["play",_610]);
this.fire("onPlay",[_610]);
this._cycle();
return this;
},pause:function(){
clearTimeout(this._timer);
if(!this._active){
return this;
}
this._paused=true;
var _611=this.curve.getValue(this._percent/100);
this.fire("handler",["pause",_611]);
this.fire("onPause",[_611]);
return this;
},gotoPercent:function(pct,_613){
clearTimeout(this._timer);
this._active=true;
this._paused=true;
this._percent=pct;
if(_613){
this.play();
}
return this;
},stop:function(_614){
clearTimeout(this._timer);
var step=this._percent/100;
if(_614){
step=1;
}
var _616=this.curve.getValue(step);
this.fire("handler",["stop",_616]);
this.fire("onStop",[_616]);
this._active=false;
this._paused=false;
return this;
},status:function(){
if(this._active){
return this._paused?"paused":"playing";
}else{
return "stopped";
}
return this;
},_cycle:function(){
clearTimeout(this._timer);
if(this._active){
var curr=new Date().valueOf();
var step=(curr-this._startTime)/(this._endTime-this._startTime);
if(step>=1){
step=1;
this._percent=100;
}else{
this._percent=step*100;
}
if((this.easing)&&(dojo.lang.isFunction(this.easing))){
step=this.easing(step);
}
var _619=this.curve.getValue(step);
this.fire("handler",["animate",_619]);
this.fire("onAnimate",[_619]);
if(step<1){
this._timer=setTimeout(dojo.lang.hitch(this,"_cycle"),this.rate);
}else{
this._active=false;
this.fire("handler",["end"]);
this.fire("onEnd");
if(this.repeatCount>0){
this.repeatCount--;
this.play(null,true);
}else{
if(this.repeatCount==-1){
this.play(null,true);
}else{
if(this._startRepeatCount){
this.repeatCount=this._startRepeatCount;
this._startRepeatCount=0;
}
}
}
}
}
return this;
}});
dojo.lfx.Combine=function(_61a){
dojo.lfx.IAnimation.call(this);
this._anims=[];
this._animsEnded=0;
var _61b=arguments;
if(_61b.length==1&&(dojo.lang.isArray(_61b[0])||dojo.lang.isArrayLike(_61b[0]))){
_61b=_61b[0];
}
dojo.lang.forEach(_61b,function(anim){
this._anims.push(anim);
anim.connect("onEnd",dojo.lang.hitch(this,"_onAnimsEnded"));
},this);
};
dojo.inherits(dojo.lfx.Combine,dojo.lfx.IAnimation);
dojo.lang.extend(dojo.lfx.Combine,{_animsEnded:0,play:function(_61d,_61e){
if(!this._anims.length){
return this;
}
this.fire("beforeBegin");
if(_61d>0){
setTimeout(dojo.lang.hitch(this,function(){
this.play(null,_61e);
}),_61d);
return this;
}
if(_61e||this._anims[0].percent==0){
this.fire("onBegin");
}
this.fire("onPlay");
this._animsCall("play",null,_61e);
return this;
},pause:function(){
this.fire("onPause");
this._animsCall("pause");
return this;
},stop:function(_61f){
this.fire("onStop");
this._animsCall("stop",_61f);
return this;
},_onAnimsEnded:function(){
this._animsEnded++;
if(this._animsEnded>=this._anims.length){
this.fire("onEnd");
}
return this;
},_animsCall:function(_620){
var args=[];
if(arguments.length>1){
for(var i=1;i<arguments.length;i++){
args.push(arguments[i]);
}
}
var _623=this;
dojo.lang.forEach(this._anims,function(anim){
anim[_620](args);
},_623);
return this;
}});
dojo.lfx.Chain=function(_625){
dojo.lfx.IAnimation.call(this);
this._anims=[];
this._currAnim=-1;
var _626=arguments;
if(_626.length==1&&(dojo.lang.isArray(_626[0])||dojo.lang.isArrayLike(_626[0]))){
_626=_626[0];
}
var _627=this;
dojo.lang.forEach(_626,function(anim,i,_62a){
this._anims.push(anim);
if(i<_62a.length-1){
anim.connect("onEnd",dojo.lang.hitch(this,"_playNext"));
}else{
anim.connect("onEnd",dojo.lang.hitch(this,function(){
this.fire("onEnd");
}));
}
},this);
};
dojo.inherits(dojo.lfx.Chain,dojo.lfx.IAnimation);
dojo.lang.extend(dojo.lfx.Chain,{_currAnim:-1,play:function(_62b,_62c){
if(!this._anims.length){
return this;
}
if(_62c||!this._anims[this._currAnim]){
this._currAnim=0;
}
var _62d=this._anims[this._currAnim];
this.fire("beforeBegin");
if(_62b>0){
setTimeout(dojo.lang.hitch(this,function(){
this.play(null,_62c);
}),_62b);
return this;
}
if(_62d){
if(this._currAnim==0){
this.fire("handler",["begin",this._currAnim]);
this.fire("onBegin",[this._currAnim]);
}
this.fire("onPlay",[this._currAnim]);
_62d.play(null,_62c);
}
return this;
},pause:function(){
if(this._anims[this._currAnim]){
this._anims[this._currAnim].pause();
this.fire("onPause",[this._currAnim]);
}
return this;
},playPause:function(){
if(this._anims.length==0){
return this;
}
if(this._currAnim==-1){
this._currAnim=0;
}
var _62e=this._anims[this._currAnim];
if(_62e){
if(!_62e._active||_62e._paused){
this.play();
}else{
this.pause();
}
}
return this;
},stop:function(){
var _62f=this._anims[this._currAnim];
if(_62f){
_62f.stop();
this.fire("onStop",[this._currAnim]);
}
return _62f;
},_playNext:function(){
if(this._currAnim==-1||this._anims.length==0){
return this;
}
this._currAnim++;
if(this._anims[this._currAnim]){
this._anims[this._currAnim].play(null,true);
}
return this;
}});
dojo.lfx.combine=function(_630){
var _631=arguments;
if(dojo.lang.isArray(arguments[0])){
_631=arguments[0];
}
if(_631.length==1){
return _631[0];
}
return new dojo.lfx.Combine(_631);
};
dojo.lfx.chain=function(_632){
var _633=arguments;
if(dojo.lang.isArray(arguments[0])){
_633=arguments[0];
}
if(_633.length==1){
return _633[0];
}
return new dojo.lfx.Chain(_633);
};
dojo.provide("dojo.html.color");
dojo.html.getBackgroundColor=function(node){
node=dojo.byId(node);
var _635;
do{
_635=dojo.html.getStyle(node,"background-color");
if(_635.toLowerCase()=="rgba(0, 0, 0, 0)"){
_635="transparent";
}
if(node==document.getElementsByTagName("body")[0]){
node=null;
break;
}
node=node.parentNode;
}while(node&&dojo.lang.inArray(["transparent",""],_635));
if(_635=="transparent"){
_635=[255,255,255,0];
}else{
_635=dojo.gfx.color.extractRGB(_635);
}
return _635;
};
dojo.provide("dojo.lfx.html");
dojo.lfx.html._byId=function(_636){
if(!_636){
return [];
}
if(dojo.lang.isArrayLike(_636)){
if(!_636.alreadyChecked){
var n=[];
dojo.lang.forEach(_636,function(node){
n.push(dojo.byId(node));
});
n.alreadyChecked=true;
return n;
}else{
return _636;
}
}else{
var n=[];
n.push(dojo.byId(_636));
n.alreadyChecked=true;
return n;
}
};
dojo.lfx.html.propertyAnimation=function(_639,_63a,_63b,_63c,_63d){
_639=dojo.lfx.html._byId(_639);
var _63e={"propertyMap":_63a,"nodes":_639,"duration":_63b,"easing":_63c||dojo.lfx.easeDefault};
var _63f=function(args){
if(args.nodes.length==1){
var pm=args.propertyMap;
if(!dojo.lang.isArray(args.propertyMap)){
var parr=[];
for(var _643 in pm){
pm[_643].property=_643;
parr.push(pm[_643]);
}
pm=args.propertyMap=parr;
}
dojo.lang.forEach(pm,function(prop){
if(dj_undef("start",prop)){
if(prop.property!="opacity"){
prop.start=parseInt(dojo.html.getComputedStyle(args.nodes[0],prop.property));
}else{
prop.start=dojo.html.getOpacity(args.nodes[0]);
}
}
});
}
};
var _645=function(_646){
var _647=[];
dojo.lang.forEach(_646,function(c){
_647.push(Math.round(c));
});
return _647;
};
var _649=function(n,_64b){
n=dojo.byId(n);
if(!n||!n.style){
return;
}
for(var s in _64b){
try{
if(s=="opacity"){
dojo.html.setOpacity(n,_64b[s]);
}else{
n.style[s]=_64b[s];
}
}
catch(e){
dojo.debug(e);
}
}
};
var _64d=function(_64e){
this._properties=_64e;
this.diffs=new Array(_64e.length);
dojo.lang.forEach(_64e,function(prop,i){
if(dojo.lang.isFunction(prop.start)){
prop.start=prop.start(prop,i);
}
if(dojo.lang.isFunction(prop.end)){
prop.end=prop.end(prop,i);
}
if(dojo.lang.isArray(prop.start)){
this.diffs[i]=null;
}else{
if(prop.start instanceof dojo.gfx.color.Color){
prop.startRgb=prop.start.toRgb();
prop.endRgb=prop.end.toRgb();
}else{
this.diffs[i]=prop.end-prop.start;
}
}
},this);
this.getValue=function(n){
var ret={};
dojo.lang.forEach(this._properties,function(prop,i){
var _655=null;
if(dojo.lang.isArray(prop.start)){
}else{
if(prop.start instanceof dojo.gfx.color.Color){
_655=(prop.units||"rgb")+"(";
for(var j=0;j<prop.startRgb.length;j++){
_655+=Math.round(((prop.endRgb[j]-prop.startRgb[j])*n)+prop.startRgb[j])+(j<prop.startRgb.length-1?",":"");
}
_655+=")";
}else{
_655=((this.diffs[i])*n)+prop.start+(prop.property!="opacity"?prop.units||"px":"");
}
}
ret[dojo.html.toCamelCase(prop.property)]=_655;
},this);
return ret;
};
};
var anim=new dojo.lfx.Animation({beforeBegin:function(){
_63f(_63e);
anim.curve=new _64d(_63e.propertyMap);
},onAnimate:function(_658){
dojo.lang.forEach(_63e.nodes,function(node){
_649(node,_658);
});
}},_63e.duration,null,_63e.easing);
if(_63d){
for(var x in _63d){
if(dojo.lang.isFunction(_63d[x])){
anim.connect(x,anim,_63d[x]);
}
}
}
return anim;
};
dojo.lfx.html._makeFadeable=function(_65b){
var _65c=function(node){
if(dojo.render.html.ie){
if((node.style.zoom.length==0)&&(dojo.html.getStyle(node,"zoom")=="normal")){
node.style.zoom="1";
}
if((node.style.width.length==0)&&(dojo.html.getStyle(node,"width")=="auto")){
node.style.width="auto";
}
}
};
if(dojo.lang.isArrayLike(_65b)){
dojo.lang.forEach(_65b,_65c);
}else{
_65c(_65b);
}
};
dojo.lfx.html.fade=function(_65e,_65f,_660,_661,_662){
_65e=dojo.lfx.html._byId(_65e);
var _663={property:"opacity"};
if(!dj_undef("start",_65f)){
_663.start=_65f.start;
}else{
_663.start=function(){
return dojo.html.getOpacity(_65e[0]);
};
}
if(!dj_undef("end",_65f)){
_663.end=_65f.end;
}else{
dojo.raise("dojo.lfx.html.fade needs an end value");
}
var anim=dojo.lfx.propertyAnimation(_65e,[_663],_660,_661);
anim.connect("beforeBegin",function(){
dojo.lfx.html._makeFadeable(_65e);
});
if(_662){
anim.connect("onEnd",function(){
_662(_65e,anim);
});
}
return anim;
};
dojo.lfx.html.fadeIn=function(_665,_666,_667,_668){
return dojo.lfx.html.fade(_665,{end:1},_666,_667,_668);
};
dojo.lfx.html.fadeOut=function(_669,_66a,_66b,_66c){
return dojo.lfx.html.fade(_669,{end:0},_66a,_66b,_66c);
};
dojo.lfx.html.fadeShow=function(_66d,_66e,_66f,_670){
_66d=dojo.lfx.html._byId(_66d);
dojo.lang.forEach(_66d,function(node){
dojo.html.setOpacity(node,0);
});
var anim=dojo.lfx.html.fadeIn(_66d,_66e,_66f,_670);
anim.connect("beforeBegin",function(){
if(dojo.lang.isArrayLike(_66d)){
dojo.lang.forEach(_66d,dojo.html.show);
}else{
dojo.html.show(_66d);
}
});
return anim;
};
dojo.lfx.html.fadeHide=function(_673,_674,_675,_676){
var anim=dojo.lfx.html.fadeOut(_673,_674,_675,function(){
if(dojo.lang.isArrayLike(_673)){
dojo.lang.forEach(_673,dojo.html.hide);
}else{
dojo.html.hide(_673);
}
if(_676){
_676(_673,anim);
}
});
return anim;
};
dojo.lfx.html.wipeIn=function(_678,_679,_67a,_67b){
_678=dojo.lfx.html._byId(_678);
var _67c=[];
dojo.lang.forEach(_678,function(node){
var _67e={};
var _67f,_680,_681;
with(node.style){
_67f=top;
_680=left;
_681=position;
top="-9999px";
left="-9999px";
position="absolute";
display="";
}
var _682=dojo.html.getBorderBox(node).height;
with(node.style){
top=_67f;
left=_680;
position=_681;
display="none";
}
var anim=dojo.lfx.propertyAnimation(node,{"height":{start:1,end:function(){
return _682;
}}},_679,_67a);
anim.connect("beforeBegin",function(){
_67e.overflow=node.style.overflow;
_67e.height=node.style.height;
with(node.style){
overflow="hidden";
_682="1px";
}
dojo.html.show(node);
});
anim.connect("onEnd",function(){
with(node.style){
overflow=_67e.overflow;
_682=_67e.height;
}
if(_67b){
_67b(node,anim);
}
});
_67c.push(anim);
});
return dojo.lfx.combine(_67c);
};
dojo.lfx.html.wipeOut=function(_684,_685,_686,_687){
_684=dojo.lfx.html._byId(_684);
var _688=[];
dojo.lang.forEach(_684,function(node){
var _68a={};
var anim=dojo.lfx.propertyAnimation(node,{"height":{start:function(){
return dojo.html.getContentBox(node).height;
},end:1}},_685,_686,{"beforeBegin":function(){
_68a.overflow=node.style.overflow;
_68a.height=node.style.height;
with(node.style){
overflow="hidden";
}
dojo.html.show(node);
},"onEnd":function(){
dojo.html.hide(node);
with(node.style){
overflow=_68a.overflow;
height=_68a.height;
}
if(_687){
_687(node,anim);
}
}});
_688.push(anim);
});
return dojo.lfx.combine(_688);
};
dojo.lfx.html.slideTo=function(_68c,_68d,_68e,_68f,_690){
_68c=dojo.lfx.html._byId(_68c);
var _691=[];
var _692=dojo.html.getComputedStyle;
if(dojo.lang.isArray(_68d)){
dojo.deprecated("dojo.lfx.html.slideTo(node, array)","use dojo.lfx.html.slideTo(node, {top: value, left: value});","0.5");
_68d={top:_68d[0],left:_68d[1]};
}
dojo.lang.forEach(_68c,function(node){
var top=null;
var left=null;
var init=(function(){
var _697=node;
return function(){
var pos=_692(_697,"position");
top=(pos=="absolute"?node.offsetTop:parseInt(_692(node,"top"))||0);
left=(pos=="absolute"?node.offsetLeft:parseInt(_692(node,"left"))||0);
if(!dojo.lang.inArray(["absolute","relative"],pos)){
var ret=dojo.html.abs(_697,true);
dojo.html.setStyleAttributes(_697,"position:absolute;top:"+ret.y+"px;left:"+ret.x+"px;");
top=ret.y;
left=ret.x;
}
};
})();
init();
var anim=dojo.lfx.propertyAnimation(node,{"top":{start:top,end:(_68d.top||0)},"left":{start:left,end:(_68d.left||0)}},_68e,_68f,{"beforeBegin":init});
if(_690){
anim.connect("onEnd",function(){
_690(_68c,anim);
});
}
_691.push(anim);
});
return dojo.lfx.combine(_691);
};
dojo.lfx.html.slideBy=function(_69b,_69c,_69d,_69e,_69f){
_69b=dojo.lfx.html._byId(_69b);
var _6a0=[];
var _6a1=dojo.html.getComputedStyle;
if(dojo.lang.isArray(_69c)){
dojo.deprecated("dojo.lfx.html.slideBy(node, array)","use dojo.lfx.html.slideBy(node, {top: value, left: value});","0.5");
_69c={top:_69c[0],left:_69c[1]};
}
dojo.lang.forEach(_69b,function(node){
var top=null;
var left=null;
var init=(function(){
var _6a6=node;
return function(){
var pos=_6a1(_6a6,"position");
top=(pos=="absolute"?node.offsetTop:parseInt(_6a1(node,"top"))||0);
left=(pos=="absolute"?node.offsetLeft:parseInt(_6a1(node,"left"))||0);
if(!dojo.lang.inArray(["absolute","relative"],pos)){
var ret=dojo.html.abs(_6a6,true);
dojo.html.setStyleAttributes(_6a6,"position:absolute;top:"+ret.y+"px;left:"+ret.x+"px;");
top=ret.y;
left=ret.x;
}
};
})();
init();
var anim=dojo.lfx.propertyAnimation(node,{"top":{start:top,end:top+(_69c.top||0)},"left":{start:left,end:left+(_69c.left||0)}},_69d,_69e).connect("beforeBegin",init);
if(_69f){
anim.connect("onEnd",function(){
_69f(_69b,anim);
});
}
_6a0.push(anim);
});
return dojo.lfx.combine(_6a0);
};
dojo.lfx.html.explode=function(_6aa,_6ab,_6ac,_6ad,_6ae){
var h=dojo.html;
_6aa=dojo.byId(_6aa);
_6ab=dojo.byId(_6ab);
var _6b0=h.toCoordinateObject(_6aa,true);
var _6b1=document.createElement("div");
h.copyStyle(_6b1,_6ab);
if(_6ab.explodeClassName){
_6b1.className=_6ab.explodeClassName;
}
with(_6b1.style){
position="absolute";
display="none";
var _6b2=h.getStyle(_6aa,"background-color");
backgroundColor=_6b2?_6b2.toLowerCase():"transparent";
backgroundColor=(backgroundColor=="transparent")?"rgb(221, 221, 221)":backgroundColor;
}
dojo.body().appendChild(_6b1);
with(_6ab.style){
visibility="hidden";
display="block";
}
var _6b3=h.toCoordinateObject(_6ab,true);
with(_6ab.style){
display="none";
visibility="visible";
}
var _6b4={opacity:{start:0.5,end:1}};
dojo.lang.forEach(["height","width","top","left"],function(type){
_6b4[type]={start:_6b0[type],end:_6b3[type]};
});
var anim=new dojo.lfx.propertyAnimation(_6b1,_6b4,_6ac,_6ad,{"beforeBegin":function(){
h.setDisplay(_6b1,"block");
},"onEnd":function(){
h.setDisplay(_6ab,"block");
_6b1.parentNode.removeChild(_6b1);
}});
if(_6ae){
anim.connect("onEnd",function(){
_6ae(_6ab,anim);
});
}
return anim;
};
dojo.lfx.html.implode=function(_6b7,end,_6b9,_6ba,_6bb){
var h=dojo.html;
_6b7=dojo.byId(_6b7);
end=dojo.byId(end);
var _6bd=dojo.html.toCoordinateObject(_6b7,true);
var _6be=dojo.html.toCoordinateObject(end,true);
var _6bf=document.createElement("div");
dojo.html.copyStyle(_6bf,_6b7);
if(_6b7.explodeClassName){
_6bf.className=_6b7.explodeClassName;
}
dojo.html.setOpacity(_6bf,0.3);
with(_6bf.style){
position="absolute";
display="none";
backgroundColor=h.getStyle(_6b7,"background-color").toLowerCase();
}
dojo.body().appendChild(_6bf);
var _6c0={opacity:{start:1,end:0.5}};
dojo.lang.forEach(["height","width","top","left"],function(type){
_6c0[type]={start:_6bd[type],end:_6be[type]};
});
var anim=new dojo.lfx.propertyAnimation(_6bf,_6c0,_6b9,_6ba,{"beforeBegin":function(){
dojo.html.hide(_6b7);
dojo.html.show(_6bf);
},"onEnd":function(){
_6bf.parentNode.removeChild(_6bf);
}});
if(_6bb){
anim.connect("onEnd",function(){
_6bb(_6b7,anim);
});
}
return anim;
};
dojo.lfx.html.highlight=function(_6c3,_6c4,_6c5,_6c6,_6c7){
_6c3=dojo.lfx.html._byId(_6c3);
var _6c8=[];
dojo.lang.forEach(_6c3,function(node){
var _6ca=dojo.html.getBackgroundColor(node);
var bg=dojo.html.getStyle(node,"background-color").toLowerCase();
var _6cc=dojo.html.getStyle(node,"background-image");
var _6cd=(bg=="transparent"||bg=="rgba(0, 0, 0, 0)");
while(_6ca.length>3){
_6ca.pop();
}
var rgb=new dojo.gfx.color.Color(_6c4);
var _6cf=new dojo.gfx.color.Color(_6ca);
var anim=dojo.lfx.propertyAnimation(node,{"background-color":{start:rgb,end:_6cf}},_6c5,_6c6,{"beforeBegin":function(){
if(_6cc){
node.style.backgroundImage="none";
}
node.style.backgroundColor="rgb("+rgb.toRgb().join(",")+")";
},"onEnd":function(){
if(_6cc){
node.style.backgroundImage=_6cc;
}
if(_6cd){
node.style.backgroundColor="transparent";
}
if(_6c7){
_6c7(node,anim);
}
}});
_6c8.push(anim);
});
return dojo.lfx.combine(_6c8);
};
dojo.lfx.html.unhighlight=function(_6d1,_6d2,_6d3,_6d4,_6d5){
_6d1=dojo.lfx.html._byId(_6d1);
var _6d6=[];
dojo.lang.forEach(_6d1,function(node){
var _6d8=new dojo.gfx.color.Color(dojo.html.getBackgroundColor(node));
var rgb=new dojo.gfx.color.Color(_6d2);
var _6da=dojo.html.getStyle(node,"background-image");
var anim=dojo.lfx.propertyAnimation(node,{"background-color":{start:_6d8,end:rgb}},_6d3,_6d4,{"beforeBegin":function(){
if(_6da){
node.style.backgroundImage="none";
}
node.style.backgroundColor="rgb("+_6d8.toRgb().join(",")+")";
},"onEnd":function(){
if(_6d5){
_6d5(node,anim);
}
}});
_6d6.push(anim);
});
return dojo.lfx.combine(_6d6);
};
dojo.lang.mixin(dojo.lfx,dojo.lfx.html);
dojo.provide("dojo.lfx.*");
dojo.provide("dojo.lfx.toggle");
dojo.lfx.toggle.plain={show:function(node,_6dd,_6de,_6df){
dojo.html.show(node);
if(dojo.lang.isFunction(_6df)){
_6df();
}
},hide:function(node,_6e1,_6e2,_6e3){
dojo.html.hide(node);
if(dojo.lang.isFunction(_6e3)){
_6e3();
}
}};
dojo.lfx.toggle.fade={show:function(node,_6e5,_6e6,_6e7){
dojo.lfx.fadeShow(node,_6e5,_6e6,_6e7).play();
},hide:function(node,_6e9,_6ea,_6eb){
dojo.lfx.fadeHide(node,_6e9,_6ea,_6eb).play();
}};
dojo.lfx.toggle.wipe={show:function(node,_6ed,_6ee,_6ef){
dojo.lfx.wipeIn(node,_6ed,_6ee,_6ef).play();
},hide:function(node,_6f1,_6f2,_6f3){
dojo.lfx.wipeOut(node,_6f1,_6f2,_6f3).play();
}};
dojo.lfx.toggle.explode={show:function(node,_6f5,_6f6,_6f7,_6f8){
dojo.lfx.explode(_6f8||{x:0,y:0,width:0,height:0},node,_6f5,_6f6,_6f7).play();
},hide:function(node,_6fa,_6fb,_6fc,_6fd){
dojo.lfx.implode(node,_6fd||{x:0,y:0,width:0,height:0},_6fa,_6fb,_6fc).play();
}};
dojo.provide("dojo.widget.HtmlWidget");
dojo.declare("dojo.widget.HtmlWidget",dojo.widget.DomWidget,{templateCssPath:null,templatePath:null,lang:"",toggle:"plain",toggleDuration:150,initialize:function(args,frag){
},postMixInProperties:function(args,frag){
if(this.lang===""){
this.lang=null;
}
this.toggleObj=dojo.lfx.toggle[this.toggle.toLowerCase()]||dojo.lfx.toggle.plain;
},createNodesFromText:function(txt,wrap){
return dojo.html.createNodesFromText(txt,wrap);
},destroyRendering:function(_704){
try{
if(this.bgIframe){
this.bgIframe.remove();
delete this.bgIframe;
}
if(!_704&&this.domNode){
dojo.event.browser.clean(this.domNode);
}
dojo.widget.HtmlWidget.superclass.destroyRendering.call(this);
}
catch(e){
}
},isShowing:function(){
return dojo.html.isShowing(this.domNode);
},toggleShowing:function(){
if(this.isShowing()){
this.hide();
}else{
this.show();
}
},show:function(){
if(this.isShowing()){
return;
}
this.animationInProgress=true;
this.toggleObj.show(this.domNode,this.toggleDuration,null,dojo.lang.hitch(this,this.onShow),this.explodeSrc);
},onShow:function(){
this.animationInProgress=false;
this.checkSize();
},hide:function(){
if(!this.isShowing()){
return;
}
this.animationInProgress=true;
this.toggleObj.hide(this.domNode,this.toggleDuration,null,dojo.lang.hitch(this,this.onHide),this.explodeSrc);
},onHide:function(){
this.animationInProgress=false;
},_isResized:function(w,h){
if(!this.isShowing()){
return false;
}
var wh=dojo.html.getMarginBox(this.domNode);
var _708=w||wh.width;
var _709=h||wh.height;
if(this.width==_708&&this.height==_709){
return false;
}
this.width=_708;
this.height=_709;
return true;
},checkSize:function(){
if(!this._isResized()){
return;
}
this.onResized();
},resizeTo:function(w,h){
dojo.html.setMarginBox(this.domNode,{width:w,height:h});
if(this.isShowing()){
this.onResized();
}
},resizeSoon:function(){
if(this.isShowing()){
dojo.lang.setTimeout(this,this.onResized,0);
}
},onResized:function(){
dojo.lang.forEach(this.children,function(_70c){
if(_70c.checkSize){
_70c.checkSize();
}
});
}});
dojo.provide("dojo.widget.*");
dojo.provide("dojo.string.common");
dojo.string.trim=function(str,wh){
if(!str.replace){
return str;
}
if(!str.length){
return str;
}
var re=(wh>0)?(/^\s+/):(wh<0)?(/\s+$/):(/^\s+|\s+$/g);
return str.replace(re,"");
};
dojo.string.trimStart=function(str){
return dojo.string.trim(str,1);
};
dojo.string.trimEnd=function(str){
return dojo.string.trim(str,-1);
};
dojo.string.repeat=function(str,_713,_714){
var out="";
for(var i=0;i<_713;i++){
out+=str;
if(_714&&i<_713-1){
out+=_714;
}
}
return out;
};
dojo.string.pad=function(str,len,c,dir){
var out=String(str);
if(!c){
c="0";
}
if(!dir){
dir=1;
}
while(out.length<len){
if(dir>0){
out=c+out;
}else{
out+=c;
}
}
return out;
};
dojo.string.padLeft=function(str,len,c){
return dojo.string.pad(str,len,c,1);
};
dojo.string.padRight=function(str,len,c){
return dojo.string.pad(str,len,c,-1);
};
dojo.provide("dojo.string");
dojo.provide("dojo.io.common");
dojo.io.transports=[];
dojo.io.hdlrFuncNames=["load","error","timeout"];
dojo.io.Request=function(url,_723,_724,_725){
if((arguments.length==1)&&(arguments[0].constructor==Object)){
this.fromKwArgs(arguments[0]);
}else{
this.url=url;
if(_723){
this.mimetype=_723;
}
if(_724){
this.transport=_724;
}
if(arguments.length>=4){
this.changeUrl=_725;
}
}
};
dojo.lang.extend(dojo.io.Request,{url:"",mimetype:"text/plain",method:"GET",content:undefined,transport:undefined,changeUrl:undefined,formNode:undefined,sync:false,bindSuccess:false,useCache:false,preventCache:false,load:function(type,data,_728,_729){
},error:function(type,_72b,_72c,_72d){
},timeout:function(type,_72f,_730,_731){
},handle:function(type,data,_734,_735){
},timeoutSeconds:0,abort:function(){
},fromKwArgs:function(_736){
if(_736["url"]){
_736.url=_736.url.toString();
}
if(_736["formNode"]){
_736.formNode=dojo.byId(_736.formNode);
}
if(!_736["method"]&&_736["formNode"]&&_736["formNode"].method){
_736.method=_736["formNode"].method;
}
if(!_736["handle"]&&_736["handler"]){
_736.handle=_736.handler;
}
if(!_736["load"]&&_736["loaded"]){
_736.load=_736.loaded;
}
if(!_736["changeUrl"]&&_736["changeURL"]){
_736.changeUrl=_736.changeURL;
}
_736.encoding=dojo.lang.firstValued(_736["encoding"],djConfig["bindEncoding"],"");
_736.sendTransport=dojo.lang.firstValued(_736["sendTransport"],djConfig["ioSendTransport"],false);
var _737=dojo.lang.isFunction;
for(var x=0;x<dojo.io.hdlrFuncNames.length;x++){
var fn=dojo.io.hdlrFuncNames[x];
if(_736[fn]&&_737(_736[fn])){
continue;
}
if(_736["handle"]&&_737(_736["handle"])){
_736[fn]=_736.handle;
}
}
dojo.lang.mixin(this,_736);
}});
dojo.io.Error=function(msg,type,num){
this.message=msg;
this.type=type||"unknown";
this.number=num||0;
};
dojo.io.transports.addTransport=function(name){
this.push(name);
this[name]=dojo.io[name];
};
dojo.io.bind=function(_73e){
if(!(_73e instanceof dojo.io.Request)){
try{
_73e=new dojo.io.Request(_73e);
}
catch(e){
dojo.debug(e);
}
}
var _73f="";
if(_73e["transport"]){
_73f=_73e["transport"];
if(!this[_73f]){
dojo.io.sendBindError(_73e,"No dojo.io.bind() transport with name '"+_73e["transport"]+"'.");
return _73e;
}
if(!this[_73f].canHandle(_73e)){
dojo.io.sendBindError(_73e,"dojo.io.bind() transport with name '"+_73e["transport"]+"' cannot handle this type of request.");
return _73e;
}
}else{
for(var x=0;x<dojo.io.transports.length;x++){
var tmp=dojo.io.transports[x];
if((this[tmp])&&(this[tmp].canHandle(_73e))){
_73f=tmp;
break;
}
}
if(_73f==""){
dojo.io.sendBindError(_73e,"None of the loaded transports for dojo.io.bind()"+" can handle the request.");
return _73e;
}
}
this[_73f].bind(_73e);
_73e.bindSuccess=true;
return _73e;
};
dojo.io.sendBindError=function(_742,_743){
if((typeof _742.error=="function"||typeof _742.handle=="function")&&(typeof setTimeout=="function"||typeof setTimeout=="object")){
var _744=new dojo.io.Error(_743);
setTimeout(function(){
_742[(typeof _742.error=="function")?"error":"handle"]("error",_744,null,_742);
},50);
}else{
dojo.raise(_743);
}
};
dojo.io.queueBind=function(_745){
if(!(_745 instanceof dojo.io.Request)){
try{
_745=new dojo.io.Request(_745);
}
catch(e){
dojo.debug(e);
}
}
var _746=_745.load;
_745.load=function(){
dojo.io._queueBindInFlight=false;
var ret=_746.apply(this,arguments);
dojo.io._dispatchNextQueueBind();
return ret;
};
var _748=_745.error;
_745.error=function(){
dojo.io._queueBindInFlight=false;
var ret=_748.apply(this,arguments);
dojo.io._dispatchNextQueueBind();
return ret;
};
dojo.io._bindQueue.push(_745);
dojo.io._dispatchNextQueueBind();
return _745;
};
dojo.io._dispatchNextQueueBind=function(){
if(!dojo.io._queueBindInFlight){
dojo.io._queueBindInFlight=true;
if(dojo.io._bindQueue.length>0){
dojo.io.bind(dojo.io._bindQueue.shift());
}else{
dojo.io._queueBindInFlight=false;
}
}
};
dojo.io._bindQueue=[];
dojo.io._queueBindInFlight=false;
dojo.io.argsFromMap=function(map,_74b,last){
var enc=/utf/i.test(_74b||"")?encodeURIComponent:dojo.string.encodeAscii;
var _74e=[];
var _74f=new Object();
for(var name in map){
var _751=function(elt){
var val=enc(name)+"="+enc(elt);
_74e[(last==name)?"push":"unshift"](val);
};
if(!_74f[name]){
var _754=map[name];
if(dojo.lang.isArray(_754)){
dojo.lang.forEach(_754,_751);
}else{
_751(_754);
}
}
}
return _74e.join("&");
};
dojo.io.setIFrameSrc=function(_755,src,_757){
try{
var r=dojo.render.html;
if(!_757){
if(r.safari){
_755.location=src;
}else{
frames[_755.name].location=src;
}
}else{
var idoc;
if(r.ie){
idoc=_755.contentWindow.document;
}else{
if(r.safari){
idoc=_755.document;
}else{
idoc=_755.contentWindow;
}
}
if(!idoc){
_755.location=src;
return;
}else{
idoc.location.replace(src);
}
}
}
catch(e){
dojo.debug(e);
dojo.debug("setIFrameSrc: "+e);
}
};
dojo.provide("dojo.string.extras");
dojo.string.substituteParams=function(_75a,hash){
var map=(typeof hash=="object")?hash:dojo.lang.toArray(arguments,1);
return _75a.replace(/\%\{(\w+)\}/g,function(_75d,key){
if(typeof (map[key])!="undefined"&&map[key]!=null){
return map[key];
}
dojo.raise("Substitution not found: "+key);
});
};
dojo.string.capitalize=function(str){
if(!dojo.lang.isString(str)){
return "";
}
if(arguments.length==0){
str=this;
}
var _760=str.split(" ");
for(var i=0;i<_760.length;i++){
_760[i]=_760[i].charAt(0).toUpperCase()+_760[i].substring(1);
}
return _760.join(" ");
};
dojo.string.isBlank=function(str){
if(!dojo.lang.isString(str)){
return true;
}
return (dojo.string.trim(str).length==0);
};
dojo.string.encodeAscii=function(str){
if(!dojo.lang.isString(str)){
return str;
}
var ret="";
var _765=escape(str);
var _766,re=/%u([0-9A-F]{4})/i;
while((_766=_765.match(re))){
var num=Number("0x"+_766[1]);
var _769=escape("&#"+num+";");
ret+=_765.substring(0,_766.index)+_769;
_765=_765.substring(_766.index+_766[0].length);
}
ret+=_765.replace(/\+/g,"%2B");
return ret;
};
dojo.string.escape=function(type,str){
var args=dojo.lang.toArray(arguments,1);
switch(type.toLowerCase()){
case "xml":
case "html":
case "xhtml":
return dojo.string.escapeXml.apply(this,args);
case "sql":
return dojo.string.escapeSql.apply(this,args);
case "regexp":
case "regex":
return dojo.string.escapeRegExp.apply(this,args);
case "javascript":
case "jscript":
case "js":
return dojo.string.escapeJavaScript.apply(this,args);
case "ascii":
return dojo.string.encodeAscii.apply(this,args);
default:
return str;
}
};
dojo.string.escapeXml=function(str,_76e){
str=str.replace(/&/gm,"&amp;").replace(/</gm,"&lt;").replace(/>/gm,"&gt;").replace(/"/gm,"&quot;");
if(!_76e){
str=str.replace(/'/gm,"&#39;");
}
return str;
};
dojo.string.escapeSql=function(str){
return str.replace(/'/gm,"''");
};
dojo.string.escapeRegExp=function(str){
return str.replace(/\\/gm,"\\\\").replace(/([\f\b\n\t\r[\^$|?*+(){}])/gm,"\\$1");
};
dojo.string.escapeJavaScript=function(str){
return str.replace(/(["'\f\b\n\t\r])/gm,"\\$1");
};
dojo.string.escapeString=function(str){
return ("\""+str.replace(/(["\\])/g,"\\$1")+"\"").replace(/[\f]/g,"\\f").replace(/[\b]/g,"\\b").replace(/[\n]/g,"\\n").replace(/[\t]/g,"\\t").replace(/[\r]/g,"\\r");
};
dojo.string.summary=function(str,len){
if(!len||str.length<=len){
return str;
}
return str.substring(0,len).replace(/\.+$/,"")+"...";
};
dojo.string.endsWith=function(str,end,_777){
if(_777){
str=str.toLowerCase();
end=end.toLowerCase();
}
if((str.length-end.length)<0){
return false;
}
return str.lastIndexOf(end)==str.length-end.length;
};
dojo.string.endsWithAny=function(str){
for(var i=1;i<arguments.length;i++){
if(dojo.string.endsWith(str,arguments[i])){
return true;
}
}
return false;
};
dojo.string.startsWith=function(str,_77b,_77c){
if(_77c){
str=str.toLowerCase();
_77b=_77b.toLowerCase();
}
return str.indexOf(_77b)==0;
};
dojo.string.startsWithAny=function(str){
for(var i=1;i<arguments.length;i++){
if(dojo.string.startsWith(str,arguments[i])){
return true;
}
}
return false;
};
dojo.string.has=function(str){
for(var i=1;i<arguments.length;i++){
if(str.indexOf(arguments[i])>-1){
return true;
}
}
return false;
};
dojo.string.normalizeNewlines=function(text,_782){
if(_782=="\n"){
text=text.replace(/\r\n/g,"\n");
text=text.replace(/\r/g,"\n");
}else{
if(_782=="\r"){
text=text.replace(/\r\n/g,"\r");
text=text.replace(/\n/g,"\r");
}else{
text=text.replace(/([^\r])\n/g,"$1\r\n").replace(/\r([^\n])/g,"\r\n$1");
}
}
return text;
};
dojo.string.splitEscaped=function(str,_784){
var _785=[];
for(var i=0,_787=0;i<str.length;i++){
if(str.charAt(i)=="\\"){
i++;
continue;
}
if(str.charAt(i)==_784){
_785.push(str.substring(_787,i));
_787=i+1;
}
}
_785.push(str.substr(_787));
return _785;
};
dojo.provide("dojo.undo.browser");
try{
if((!djConfig["preventBackButtonFix"])&&(!dojo.hostenv.post_load_)){
document.write("<iframe style='border: 0px; width: 1px; height: 1px; position: absolute; bottom: 0px; right: 0px; visibility: visible;' name='djhistory' id='djhistory' src='"+(dojo.hostenv.getBaseScriptUri()+"iframe_history.html")+"'></iframe>");
}
}
catch(e){
}
if(dojo.render.html.opera){
dojo.debug("Opera is not supported with dojo.undo.browser, so back/forward detection will not work.");
}
dojo.undo.browser={initialHref:(!dj_undef("window"))?window.location.href:"",initialHash:(!dj_undef("window"))?window.location.hash:"",moveForward:false,historyStack:[],forwardStack:[],historyIframe:null,bookmarkAnchor:null,locationTimer:null,setInitialState:function(args){
this.initialState=this._createState(this.initialHref,args,this.initialHash);
},addToHistory:function(args){
this.forwardStack=[];
var hash=null;
var url=null;
if(!this.historyIframe){
this.historyIframe=window.frames["djhistory"];
}
if(!this.bookmarkAnchor){
this.bookmarkAnchor=document.createElement("a");
dojo.body().appendChild(this.bookmarkAnchor);
this.bookmarkAnchor.style.display="none";
}
if(args["changeUrl"]){
hash="#"+((args["changeUrl"]!==true)?args["changeUrl"]:(new Date()).getTime());
if(this.historyStack.length==0&&this.initialState.urlHash==hash){
this.initialState=this._createState(url,args,hash);
return;
}else{
if(this.historyStack.length>0&&this.historyStack[this.historyStack.length-1].urlHash==hash){
this.historyStack[this.historyStack.length-1]=this._createState(url,args,hash);
return;
}
}
this.changingUrl=true;
setTimeout("window.location.href = '"+hash+"'; dojo.undo.browser.changingUrl = false;",1);
this.bookmarkAnchor.href=hash;
if(dojo.render.html.ie){
url=this._loadIframeHistory();
var _78c=args["back"]||args["backButton"]||args["handle"];
var tcb=function(_78e){
if(window.location.hash!=""){
setTimeout("window.location.href = '"+hash+"';",1);
}
_78c.apply(this,[_78e]);
};
if(args["back"]){
args.back=tcb;
}else{
if(args["backButton"]){
args.backButton=tcb;
}else{
if(args["handle"]){
args.handle=tcb;
}
}
}
var _78f=args["forward"]||args["forwardButton"]||args["handle"];
var tfw=function(_791){
if(window.location.hash!=""){
window.location.href=hash;
}
if(_78f){
_78f.apply(this,[_791]);
}
};
if(args["forward"]){
args.forward=tfw;
}else{
if(args["forwardButton"]){
args.forwardButton=tfw;
}else{
if(args["handle"]){
args.handle=tfw;
}
}
}
}else{
if(dojo.render.html.moz){
if(!this.locationTimer){
this.locationTimer=setInterval("dojo.undo.browser.checkLocation();",200);
}
}
}
}else{
url=this._loadIframeHistory();
}
this.historyStack.push(this._createState(url,args,hash));
},checkLocation:function(){
if(!this.changingUrl){
var hsl=this.historyStack.length;
if((window.location.hash==this.initialHash||window.location.href==this.initialHref)&&(hsl==1)){
this.handleBackButton();
return;
}
if(this.forwardStack.length>0){
if(this.forwardStack[this.forwardStack.length-1].urlHash==window.location.hash){
this.handleForwardButton();
return;
}
}
if((hsl>=2)&&(this.historyStack[hsl-2])){
if(this.historyStack[hsl-2].urlHash==window.location.hash){
this.handleBackButton();
return;
}
}
}
},iframeLoaded:function(evt,_794){
if(!dojo.render.html.opera){
var _795=this._getUrlQuery(_794.href);
if(_795==null){
if(this.historyStack.length==1){
this.handleBackButton();
}
return;
}
if(this.moveForward){
this.moveForward=false;
return;
}
if(this.historyStack.length>=2&&_795==this._getUrlQuery(this.historyStack[this.historyStack.length-2].url)){
this.handleBackButton();
}else{
if(this.forwardStack.length>0&&_795==this._getUrlQuery(this.forwardStack[this.forwardStack.length-1].url)){
this.handleForwardButton();
}
}
}
},handleBackButton:function(){
var _796=this.historyStack.pop();
if(!_796){
return;
}
var last=this.historyStack[this.historyStack.length-1];
if(!last&&this.historyStack.length==0){
last=this.initialState;
}
if(last){
if(last.kwArgs["back"]){
last.kwArgs["back"]();
}else{
if(last.kwArgs["backButton"]){
last.kwArgs["backButton"]();
}else{
if(last.kwArgs["handle"]){
last.kwArgs.handle("back");
}
}
}
}
this.forwardStack.push(_796);
},handleForwardButton:function(){
var last=this.forwardStack.pop();
if(!last){
return;
}
if(last.kwArgs["forward"]){
last.kwArgs.forward();
}else{
if(last.kwArgs["forwardButton"]){
last.kwArgs.forwardButton();
}else{
if(last.kwArgs["handle"]){
last.kwArgs.handle("forward");
}
}
}
this.historyStack.push(last);
},_createState:function(url,args,hash){
return {"url":url,"kwArgs":args,"urlHash":hash};
},_getUrlQuery:function(url){
var _79d=url.split("?");
if(_79d.length<2){
return null;
}else{
return _79d[1];
}
},_loadIframeHistory:function(){
var url=dojo.hostenv.getBaseScriptUri()+"iframe_history.html?"+(new Date()).getTime();
this.moveForward=true;
dojo.io.setIFrameSrc(this.historyIframe,url,false);
return url;
}};
dojo.provide("dojo.io.BrowserIO");
if(!dj_undef("window")){
dojo.io.checkChildrenForFile=function(node){
var _7a0=false;
var _7a1=node.getElementsByTagName("input");
dojo.lang.forEach(_7a1,function(_7a2){
if(_7a0){
return;
}
if(_7a2.getAttribute("type")=="file"){
_7a0=true;
}
});
return _7a0;
};
dojo.io.formHasFile=function(_7a3){
return dojo.io.checkChildrenForFile(_7a3);
};
dojo.io.updateNode=function(node,_7a5){
node=dojo.byId(node);
var args=_7a5;
if(dojo.lang.isString(_7a5)){
args={url:_7a5};
}
args.mimetype="text/html";
args.load=function(t,d,e){
while(node.firstChild){
dojo.dom.destroyNode(node.firstChild);
}
node.innerHTML=d;
};
dojo.io.bind(args);
};
dojo.io.formFilter=function(node){
var type=(node.type||"").toLowerCase();
return !node.disabled&&node.name&&!dojo.lang.inArray(["file","submit","image","reset","button"],type);
};
dojo.io.encodeForm=function(_7ac,_7ad,_7ae){
if((!_7ac)||(!_7ac.tagName)||(!_7ac.tagName.toLowerCase()=="form")){
dojo.raise("Attempted to encode a non-form element.");
}
if(!_7ae){
_7ae=dojo.io.formFilter;
}
var enc=/utf/i.test(_7ad||"")?encodeURIComponent:dojo.string.encodeAscii;
var _7b0=[];
for(var i=0;i<_7ac.elements.length;i++){
var elm=_7ac.elements[i];
if(!elm||elm.tagName.toLowerCase()=="fieldset"||!_7ae(elm)){
continue;
}
var name=enc(elm.name);
var type=elm.type.toLowerCase();
if(type=="select-multiple"){
for(var j=0;j<elm.options.length;j++){
if(elm.options[j].selected){
_7b0.push(name+"="+enc(elm.options[j].value));
}
}
}else{
if(dojo.lang.inArray(["radio","checkbox"],type)){
if(elm.checked){
_7b0.push(name+"="+enc(elm.value));
}
}else{
_7b0.push(name+"="+enc(elm.value));
}
}
}
var _7b6=_7ac.getElementsByTagName("input");
for(var i=0;i<_7b6.length;i++){
var _7b7=_7b6[i];
if(_7b7.type.toLowerCase()=="image"&&_7b7.form==_7ac&&_7ae(_7b7)){
var name=enc(_7b7.name);
_7b0.push(name+"="+enc(_7b7.value));
_7b0.push(name+".x=0");
_7b0.push(name+".y=0");
}
}
return _7b0.join("&")+"&";
};
dojo.io.FormBind=function(args){
this.bindArgs={};
if(args&&args.formNode){
this.init(args);
}else{
if(args){
this.init({formNode:args});
}
}
};
dojo.lang.extend(dojo.io.FormBind,{form:null,bindArgs:null,clickedButton:null,init:function(args){
var form=dojo.byId(args.formNode);
if(!form||!form.tagName||form.tagName.toLowerCase()!="form"){
throw new Error("FormBind: Couldn't apply, invalid form");
}else{
if(this.form==form){
return;
}else{
if(this.form){
throw new Error("FormBind: Already applied to a form");
}
}
}
dojo.lang.mixin(this.bindArgs,args);
this.form=form;
this.connect(form,"onsubmit","submit");
for(var i=0;i<form.elements.length;i++){
var node=form.elements[i];
if(node&&node.type&&dojo.lang.inArray(["submit","button"],node.type.toLowerCase())){
this.connect(node,"onclick","click");
}
}
var _7bd=form.getElementsByTagName("input");
for(var i=0;i<_7bd.length;i++){
var _7be=_7bd[i];
if(_7be.type.toLowerCase()=="image"&&_7be.form==form){
this.connect(_7be,"onclick","click");
}
}
},onSubmit:function(form){
return true;
},submit:function(e){
e.preventDefault();
if(this.onSubmit(this.form)){
dojo.io.bind(dojo.lang.mixin(this.bindArgs,{formFilter:dojo.lang.hitch(this,"formFilter")}));
}
},click:function(e){
var node=e.currentTarget;
if(node.disabled){
return;
}
this.clickedButton=node;
},formFilter:function(node){
var type=(node.type||"").toLowerCase();
var _7c5=false;
if(node.disabled||!node.name){
_7c5=false;
}else{
if(dojo.lang.inArray(["submit","button","image"],type)){
if(!this.clickedButton){
this.clickedButton=node;
}
_7c5=node==this.clickedButton;
}else{
_7c5=!dojo.lang.inArray(["file","submit","reset","button"],type);
}
}
return _7c5;
},connect:function(_7c6,_7c7,_7c8){
if(dojo.evalObjPath("dojo.event.connect")){
dojo.event.connect(_7c6,_7c7,this,_7c8);
}else{
var fcn=dojo.lang.hitch(this,_7c8);
_7c6[_7c7]=function(e){
if(!e){
e=window.event;
}
if(!e.currentTarget){
e.currentTarget=e.srcElement;
}
if(!e.preventDefault){
e.preventDefault=function(){
window.event.returnValue=false;
};
}
fcn(e);
};
}
}});
dojo.io.XMLHTTPTransport=new function(){
var _7cb=this;
var _7cc={};
this.useCache=false;
this.preventCache=false;
function getCacheKey(url,_7ce,_7cf){
return url+"|"+_7ce+"|"+_7cf.toLowerCase();
}
function addToCache(url,_7d1,_7d2,http){
_7cc[getCacheKey(url,_7d1,_7d2)]=http;
}
function getFromCache(url,_7d5,_7d6){
return _7cc[getCacheKey(url,_7d5,_7d6)];
}
this.clearCache=function(){
_7cc={};
};
function doLoad(_7d7,http,url,_7da,_7db){
if(((http.status>=200)&&(http.status<300))||(http.status==304)||(location.protocol=="file:"&&(http.status==0||http.status==undefined))||(location.protocol=="chrome:"&&(http.status==0||http.status==undefined))){
var ret;
if(_7d7.method.toLowerCase()=="head"){
var _7dd=http.getAllResponseHeaders();
ret={};
ret.toString=function(){
return _7dd;
};
var _7de=_7dd.split(/[\r\n]+/g);
for(var i=0;i<_7de.length;i++){
var pair=_7de[i].match(/^([^:]+)\s*:\s*(.+)$/i);
if(pair){
ret[pair[1]]=pair[2];
}
}
}else{
if(_7d7.mimetype=="text/javascript"){
try{
ret=dj_eval(http.responseText);
}
catch(e){
dojo.debug(e);
dojo.debug(http.responseText);
ret=null;
}
}else{
if(_7d7.mimetype=="text/json"||_7d7.mimetype=="application/json"){
try{
ret=dj_eval("("+http.responseText+")");
}
catch(e){
dojo.debug(e);
dojo.debug(http.responseText);
ret=false;
}
}else{
if((_7d7.mimetype=="application/xml")||(_7d7.mimetype=="text/xml")){
ret=http.responseXML;
if(!ret||typeof ret=="string"||!http.getResponseHeader("Content-Type")){
ret=dojo.dom.createDocumentFromText(http.responseText);
}
}else{
ret=http.responseText;
}
}
}
}
if(_7db){
addToCache(url,_7da,_7d7.method,http);
}
_7d7[(typeof _7d7.load=="function")?"load":"handle"]("load",ret,http,_7d7);
}else{
var _7e1=new dojo.io.Error("XMLHttpTransport Error: "+http.status+" "+http.statusText);
_7d7[(typeof _7d7.error=="function")?"error":"handle"]("error",_7e1,http,_7d7);
}
}
function setHeaders(http,_7e3){
if(_7e3["headers"]){
for(var _7e4 in _7e3["headers"]){
if(_7e4.toLowerCase()=="content-type"&&!_7e3["contentType"]){
_7e3["contentType"]=_7e3["headers"][_7e4];
}else{
http.setRequestHeader(_7e4,_7e3["headers"][_7e4]);
}
}
}
}
this.inFlight=[];
this.inFlightTimer=null;
this.startWatchingInFlight=function(){
if(!this.inFlightTimer){
this.inFlightTimer=setTimeout("dojo.io.XMLHTTPTransport.watchInFlight();",10);
}
};
this.watchInFlight=function(){
var now=null;
if(!dojo.hostenv._blockAsync&&!_7cb._blockAsync){
for(var x=this.inFlight.length-1;x>=0;x--){
try{
var tif=this.inFlight[x];
if(!tif||tif.http._aborted||!tif.http.readyState){
this.inFlight.splice(x,1);
continue;
}
if(4==tif.http.readyState){
this.inFlight.splice(x,1);
doLoad(tif.req,tif.http,tif.url,tif.query,tif.useCache);
}else{
if(tif.startTime){
if(!now){
now=(new Date()).getTime();
}
if(tif.startTime+(tif.req.timeoutSeconds*1000)<now){
if(typeof tif.http.abort=="function"){
tif.http.abort();
}
this.inFlight.splice(x,1);
tif.req[(typeof tif.req.timeout=="function")?"timeout":"handle"]("timeout",null,tif.http,tif.req);
}
}
}
}
catch(e){
try{
var _7e8=new dojo.io.Error("XMLHttpTransport.watchInFlight Error: "+e);
tif.req[(typeof tif.req.error=="function")?"error":"handle"]("error",_7e8,tif.http,tif.req);
}
catch(e2){
dojo.debug("XMLHttpTransport error callback failed: "+e2);
}
}
}
}
clearTimeout(this.inFlightTimer);
if(this.inFlight.length==0){
this.inFlightTimer=null;
return;
}
this.inFlightTimer=setTimeout("dojo.io.XMLHTTPTransport.watchInFlight();",10);
};
var _7e9=dojo.hostenv.getXmlhttpObject()?true:false;
this.canHandle=function(_7ea){
return _7e9&&dojo.lang.inArray(["text/plain","text/html","application/xml","text/xml","text/javascript","text/json","application/json"],(_7ea["mimetype"].toLowerCase()||""))&&!(_7ea["formNode"]&&dojo.io.formHasFile(_7ea["formNode"]));
};
this.multipartBoundary="45309FFF-BD65-4d50-99C9-36986896A96F";
this.bind=function(_7eb){
if(!_7eb["url"]){
if(!_7eb["formNode"]&&(_7eb["backButton"]||_7eb["back"]||_7eb["changeUrl"]||_7eb["watchForURL"])&&(!djConfig.preventBackButtonFix)){
dojo.deprecated("Using dojo.io.XMLHTTPTransport.bind() to add to browser history without doing an IO request","Use dojo.undo.browser.addToHistory() instead.","0.4");
dojo.undo.browser.addToHistory(_7eb);
return true;
}
}
var url=_7eb.url;
var _7ed="";
if(_7eb["formNode"]){
var ta=_7eb.formNode.getAttribute("action");
if((ta)&&(!_7eb["url"])){
url=ta;
}
var tp=_7eb.formNode.getAttribute("method");
if((tp)&&(!_7eb["method"])){
_7eb.method=tp;
}
_7ed+=dojo.io.encodeForm(_7eb.formNode,_7eb.encoding,_7eb["formFilter"]);
}
if(url.indexOf("#")>-1){
dojo.debug("Warning: dojo.io.bind: stripping hash values from url:",url);
url=url.split("#")[0];
}
if(_7eb["file"]){
_7eb.method="post";
}
if(!_7eb["method"]){
_7eb.method="get";
}
if(_7eb.method.toLowerCase()=="get"){
_7eb.multipart=false;
}else{
if(_7eb["file"]){
_7eb.multipart=true;
}else{
if(!_7eb["multipart"]){
_7eb.multipart=false;
}
}
}
if(_7eb["backButton"]||_7eb["back"]||_7eb["changeUrl"]){
dojo.undo.browser.addToHistory(_7eb);
}
var _7f0=_7eb["content"]||{};
if(_7eb.sendTransport){
_7f0["dojo.transport"]="xmlhttp";
}
do{
if(_7eb.postContent){
_7ed=_7eb.postContent;
break;
}
if(_7f0){
_7ed+=dojo.io.argsFromMap(_7f0,_7eb.encoding);
}
if(_7eb.method.toLowerCase()=="get"||!_7eb.multipart){
break;
}
var t=[];
if(_7ed.length){
var q=_7ed.split("&");
for(var i=0;i<q.length;++i){
if(q[i].length){
var p=q[i].split("=");
t.push("--"+this.multipartBoundary,"Content-Disposition: form-data; name=\""+p[0]+"\"","",p[1]);
}
}
}
if(_7eb.file){
if(dojo.lang.isArray(_7eb.file)){
for(var i=0;i<_7eb.file.length;++i){
var o=_7eb.file[i];
t.push("--"+this.multipartBoundary,"Content-Disposition: form-data; name=\""+o.name+"\"; filename=\""+("fileName" in o?o.fileName:o.name)+"\"","Content-Type: "+("contentType" in o?o.contentType:"application/octet-stream"),"",o.content);
}
}else{
var o=_7eb.file;
t.push("--"+this.multipartBoundary,"Content-Disposition: form-data; name=\""+o.name+"\"; filename=\""+("fileName" in o?o.fileName:o.name)+"\"","Content-Type: "+("contentType" in o?o.contentType:"application/octet-stream"),"",o.content);
}
}
if(t.length){
t.push("--"+this.multipartBoundary+"--","");
_7ed=t.join("\r\n");
}
}while(false);
var _7f6=_7eb["sync"]?false:true;
var _7f7=_7eb["preventCache"]||(this.preventCache==true&&_7eb["preventCache"]!=false);
var _7f8=_7eb["useCache"]==true||(this.useCache==true&&_7eb["useCache"]!=false);
if(!_7f7&&_7f8){
var _7f9=getFromCache(url,_7ed,_7eb.method);
if(_7f9){
doLoad(_7eb,_7f9,url,_7ed,false);
return;
}
}
var http=dojo.hostenv.getXmlhttpObject(_7eb);
var _7fb=false;
if(_7f6){
var _7fc=this.inFlight.push({"req":_7eb,"http":http,"url":url,"query":_7ed,"useCache":_7f8,"startTime":_7eb.timeoutSeconds?(new Date()).getTime():0});
this.startWatchingInFlight();
}else{
_7cb._blockAsync=true;
}
if(_7eb.method.toLowerCase()=="post"){
if(!_7eb.user){
http.open("POST",url,_7f6);
}else{
http.open("POST",url,_7f6,_7eb.user,_7eb.password);
}
setHeaders(http,_7eb);
http.setRequestHeader("Content-Type",_7eb.multipart?("multipart/form-data; boundary="+this.multipartBoundary):(_7eb.contentType||"application/x-www-form-urlencoded"));
try{
http.send(_7ed);
}
catch(e){
if(typeof http.abort=="function"){
http.abort();
}
doLoad(_7eb,{status:404},url,_7ed,_7f8);
}
}else{
var _7fd=url;
if(_7ed!=""){
_7fd+=(_7fd.indexOf("?")>-1?"&":"?")+_7ed;
}
if(_7f7){
_7fd+=(dojo.string.endsWithAny(_7fd,"?","&")?"":(_7fd.indexOf("?")>-1?"&":"?"))+"dojo.preventCache="+new Date().valueOf();
}
if(!_7eb.user){
http.open(_7eb.method.toUpperCase(),_7fd,_7f6);
}else{
http.open(_7eb.method.toUpperCase(),_7fd,_7f6,_7eb.user,_7eb.password);
}
setHeaders(http,_7eb);
try{
http.send(null);
}
catch(e){
if(typeof http.abort=="function"){
http.abort();
}
doLoad(_7eb,{status:404},url,_7ed,_7f8);
}
}
if(!_7f6){
doLoad(_7eb,http,url,_7ed,_7f8);
_7cb._blockAsync=false;
}
_7eb.abort=function(){
try{
http._aborted=true;
}
catch(e){
}
return http.abort();
};
return;
};
dojo.io.transports.addTransport("XMLHTTPTransport");
};
}
dojo.provide("dojo.io.cookie");
dojo.io.cookie.setCookie=function(name,_7ff,days,path,_802,_803){
var _804=-1;
if((typeof days=="number")&&(days>=0)){
var d=new Date();
d.setTime(d.getTime()+(days*24*60*60*1000));
_804=d.toGMTString();
}
_7ff=escape(_7ff);
document.cookie=name+"="+_7ff+";"+(_804!=-1?" expires="+_804+";":"")+(path?"path="+path:"")+(_802?"; domain="+_802:"")+(_803?"; secure":"");
};
dojo.io.cookie.set=dojo.io.cookie.setCookie;
dojo.io.cookie.getCookie=function(name){
var idx=document.cookie.lastIndexOf(name+"=");
if(idx==-1){
return null;
}
var _808=document.cookie.substring(idx+name.length+1);
var end=_808.indexOf(";");
if(end==-1){
end=_808.length;
}
_808=_808.substring(0,end);
_808=unescape(_808);
return _808;
};
dojo.io.cookie.get=dojo.io.cookie.getCookie;
dojo.io.cookie.deleteCookie=function(name){
dojo.io.cookie.setCookie(name,"-",0);
};
dojo.io.cookie.setObjectCookie=function(name,obj,days,path,_80f,_810,_811){
if(arguments.length==5){
_811=_80f;
_80f=null;
_810=null;
}
var _812=[],_813,_814="";
if(!_811){
_813=dojo.io.cookie.getObjectCookie(name);
}
if(days>=0){
if(!_813){
_813={};
}
for(var prop in obj){
if(obj[prop]==null){
delete _813[prop];
}else{
if((typeof obj[prop]=="string")||(typeof obj[prop]=="number")){
_813[prop]=obj[prop];
}
}
}
prop=null;
for(var prop in _813){
_812.push(escape(prop)+"="+escape(_813[prop]));
}
_814=_812.join("&");
}
dojo.io.cookie.setCookie(name,_814,days,path,_80f,_810);
};
dojo.io.cookie.getObjectCookie=function(name){
var _817=null,_818=dojo.io.cookie.getCookie(name);
if(_818){
_817={};
var _819=_818.split("&");
for(var i=0;i<_819.length;i++){
var pair=_819[i].split("=");
var _81c=pair[1];
if(isNaN(_81c)){
_81c=unescape(pair[1]);
}
_817[unescape(pair[0])]=_81c;
}
}
return _817;
};
dojo.io.cookie.isSupported=function(){
if(typeof navigator.cookieEnabled!="boolean"){
dojo.io.cookie.setCookie("__TestingYourBrowserForCookieSupport__","CookiesAllowed",90,null);
var _81d=dojo.io.cookie.getCookie("__TestingYourBrowserForCookieSupport__");
navigator.cookieEnabled=(_81d=="CookiesAllowed");
if(navigator.cookieEnabled){
this.deleteCookie("__TestingYourBrowserForCookieSupport__");
}
}
return navigator.cookieEnabled;
};
if(!dojo.io.cookies){
dojo.io.cookies=dojo.io.cookie;
}
dojo.provide("dojo.io.*");
dojo.provide("dojo.html.selection");
dojo.html.selectionType={NONE:0,TEXT:1,CONTROL:2};
dojo.html.clearSelection=function(){
var _81e=dojo.global();
var _81f=dojo.doc();
try{
if(_81e["getSelection"]){
if(dojo.render.html.safari){
_81e.getSelection().collapse();
}else{
_81e.getSelection().removeAllRanges();
}
}else{
if(_81f.selection){
if(_81f.selection.empty){
_81f.selection.empty();
}else{
if(_81f.selection.clear){
_81f.selection.clear();
}
}
}
}
return true;
}
catch(e){
dojo.debug(e);
return false;
}
};
dojo.html.disableSelection=function(_820){
_820=dojo.byId(_820)||dojo.body();
var h=dojo.render.html;
if(h.mozilla){
_820.style.MozUserSelect="none";
}else{
if(h.safari){
_820.style.KhtmlUserSelect="none";
}else{
if(h.ie){
_820.unselectable="on";
}else{
return false;
}
}
}
return true;
};
dojo.html.enableSelection=function(_822){
_822=dojo.byId(_822)||dojo.body();
var h=dojo.render.html;
if(h.mozilla){
_822.style.MozUserSelect="";
}else{
if(h.safari){
_822.style.KhtmlUserSelect="";
}else{
if(h.ie){
_822.unselectable="off";
}else{
return false;
}
}
}
return true;
};
dojo.html.selectElement=function(_824){
dojo.deprecated("dojo.html.selectElement","replaced by dojo.html.selection.selectElementChildren",0.5);
};
dojo.html.selectInputText=function(_825){
var _826=dojo.global();
var _827=dojo.doc();
_825=dojo.byId(_825);
if(_827["selection"]&&dojo.body()["createTextRange"]){
var _828=_825.createTextRange();
_828.moveStart("character",0);
_828.moveEnd("character",_825.value.length);
_828.select();
}else{
if(_826["getSelection"]){
var _829=_826.getSelection();
_825.setSelectionRange(0,_825.value.length);
}
}
_825.focus();
};
dojo.html.isSelectionCollapsed=function(){
dojo.deprecated("dojo.html.isSelectionCollapsed","replaced by dojo.html.selection.isCollapsed",0.5);
return dojo.html.selection.isCollapsed();
};
dojo.lang.mixin(dojo.html.selection,{getType:function(){
if(dojo.doc()["selection"]){
return dojo.html.selectionType[dojo.doc().selection.type.toUpperCase()];
}else{
var _82a=dojo.html.selectionType.TEXT;
var oSel;
try{
oSel=dojo.global().getSelection();
}
catch(e){
}
if(oSel&&oSel.rangeCount==1){
var _82c=oSel.getRangeAt(0);
if(_82c.startContainer==_82c.endContainer&&(_82c.endOffset-_82c.startOffset)==1&&_82c.startContainer.nodeType!=dojo.dom.TEXT_NODE){
_82a=dojo.html.selectionType.CONTROL;
}
}
return _82a;
}
},isCollapsed:function(){
var _82d=dojo.global();
var _82e=dojo.doc();
if(_82e["selection"]){
return _82e.selection.createRange().text=="";
}else{
if(_82d["getSelection"]){
var _82f=_82d.getSelection();
if(dojo.lang.isString(_82f)){
return _82f=="";
}else{
return _82f.isCollapsed||_82f.toString()=="";
}
}
}
},getSelectedElement:function(){
if(dojo.html.selection.getType()==dojo.html.selectionType.CONTROL){
if(dojo.doc()["selection"]){
var _830=dojo.doc().selection.createRange();
if(_830&&_830.item){
return dojo.doc().selection.createRange().item(0);
}
}else{
var _831=dojo.global().getSelection();
return _831.anchorNode.childNodes[_831.anchorOffset];
}
}
},getParentElement:function(){
if(dojo.html.selection.getType()==dojo.html.selectionType.CONTROL){
var p=dojo.html.selection.getSelectedElement();
if(p){
return p.parentNode;
}
}else{
if(dojo.doc()["selection"]){
return dojo.doc().selection.createRange().parentElement();
}else{
var _833=dojo.global().getSelection();
if(_833){
var node=_833.anchorNode;
while(node&&node.nodeType!=dojo.dom.ELEMENT_NODE){
node=node.parentNode;
}
return node;
}
}
}
},getSelectedText:function(){
if(dojo.doc()["selection"]){
if(dojo.html.selection.getType()==dojo.html.selectionType.CONTROL){
return null;
}
return dojo.doc().selection.createRange().text;
}else{
var _835=dojo.global().getSelection();
if(_835){
return _835.toString();
}
}
},getSelectedHtml:function(){
if(dojo.doc()["selection"]){
if(dojo.html.selection.getType()==dojo.html.selectionType.CONTROL){
return null;
}
return dojo.doc().selection.createRange().htmlText;
}else{
var _836=dojo.global().getSelection();
if(_836&&_836.rangeCount){
var frag=_836.getRangeAt(0).cloneContents();
var div=document.createElement("div");
div.appendChild(frag);
return div.innerHTML;
}
return null;
}
},hasAncestorElement:function(_839){
return (dojo.html.selection.getAncestorElement.apply(this,arguments)!=null);
},getAncestorElement:function(_83a){
var node=dojo.html.selection.getSelectedElement()||dojo.html.selection.getParentElement();
while(node){
if(dojo.html.selection.isTag(node,arguments).length>0){
return node;
}
node=node.parentNode;
}
return null;
},isTag:function(node,tags){
if(node&&node.tagName){
for(var i=0;i<tags.length;i++){
if(node.tagName.toLowerCase()==String(tags[i]).toLowerCase()){
return String(tags[i]).toLowerCase();
}
}
}
return "";
},selectElement:function(_83f){
var _840=dojo.global();
var _841=dojo.doc();
_83f=dojo.byId(_83f);
if(_841.selection&&dojo.body().createTextRange){
try{
var _842=dojo.body().createControlRange();
_842.addElement(_83f);
_842.select();
}
catch(e){
dojo.html.selection.selectElementChildren(_83f);
}
}else{
if(_840["getSelection"]){
var _843=_840.getSelection();
if(_843["removeAllRanges"]){
var _842=_841.createRange();
_842.selectNode(_83f);
_843.removeAllRanges();
_843.addRange(_842);
}
}
}
},selectElementChildren:function(_844){
var _845=dojo.global();
var _846=dojo.doc();
_844=dojo.byId(_844);
if(_846.selection&&dojo.body().createTextRange){
var _847=dojo.body().createTextRange();
_847.moveToElementText(_844);
_847.select();
}else{
if(_845["getSelection"]){
var _848=_845.getSelection();
if(_848["setBaseAndExtent"]){
_848.setBaseAndExtent(_844,0,_844,_844.innerText.length-1);
}else{
if(_848["selectAllChildren"]){
_848.selectAllChildren(_844);
}
}
}
}
},getBookmark:function(){
var _849;
var _84a=dojo.doc();
if(_84a["selection"]){
var _84b=_84a.selection.createRange();
_849=_84b.getBookmark();
}else{
var _84c;
try{
_84c=dojo.global().getSelection();
}
catch(e){
}
if(_84c){
var _84b=_84c.getRangeAt(0);
_849=_84b.cloneRange();
}else{
dojo.debug("No idea how to store the current selection for this browser!");
}
}
return _849;
},moveToBookmark:function(_84d){
var _84e=dojo.doc();
if(_84e["selection"]){
var _84f=_84e.selection.createRange();
_84f.moveToBookmark(_84d);
_84f.select();
}else{
var _850;
try{
_850=dojo.global().getSelection();
}
catch(e){
}
if(_850&&_850["removeAllRanges"]){
_850.removeAllRanges();
_850.addRange(_84d);
}else{
dojo.debug("No idea how to restore selection for this browser!");
}
}
},collapse:function(_851){
if(dojo.global()["getSelection"]){
var _852=dojo.global().getSelection();
if(_852.removeAllRanges){
if(_851){
_852.collapseToStart();
}else{
_852.collapseToEnd();
}
}else{
dojo.global().getSelection().collapse(_851);
}
}else{
if(dojo.doc().selection){
var _853=dojo.doc().selection.createRange();
_853.collapse(_851);
_853.select();
}
}
},remove:function(){
if(dojo.doc().selection){
var _854=dojo.doc().selection;
if(_854.type.toUpperCase()!="NONE"){
_854.clear();
}
return _854;
}else{
var _854=dojo.global().getSelection();
for(var i=0;i<_854.rangeCount;i++){
_854.getRangeAt(i).deleteContents();
}
return _854;
}
}});
dojo.provide("dojo.Deferred");
dojo.Deferred=function(_856){
this.chain=[];
this.id=this._nextId();
this.fired=-1;
this.paused=0;
this.results=[null,null];
this.canceller=_856;
this.silentlyCancelled=false;
};
dojo.lang.extend(dojo.Deferred,{getFunctionFromArgs:function(){
var a=arguments;
if((a[0])&&(!a[1])){
if(dojo.lang.isFunction(a[0])){
return a[0];
}else{
if(dojo.lang.isString(a[0])){
return dj_global[a[0]];
}
}
}else{
if((a[0])&&(a[1])){
return dojo.lang.hitch(a[0],a[1]);
}
}
return null;
},makeCalled:function(){
var _858=new dojo.Deferred();
_858.callback();
return _858;
},repr:function(){
var _859;
if(this.fired==-1){
_859="unfired";
}else{
if(this.fired==0){
_859="success";
}else{
_859="error";
}
}
return "Deferred("+this.id+", "+_859+")";
},toString:dojo.lang.forward("repr"),_nextId:(function(){
var n=1;
return function(){
return n++;
};
})(),cancel:function(){
if(this.fired==-1){
if(this.canceller){
this.canceller(this);
}else{
this.silentlyCancelled=true;
}
if(this.fired==-1){
this.errback(new Error(this.repr()));
}
}else{
if((this.fired==0)&&(this.results[0] instanceof dojo.Deferred)){
this.results[0].cancel();
}
}
},_pause:function(){
this.paused++;
},_unpause:function(){
this.paused--;
if((this.paused==0)&&(this.fired>=0)){
this._fire();
}
},_continue:function(res){
this._resback(res);
this._unpause();
},_resback:function(res){
this.fired=((res instanceof Error)?1:0);
this.results[this.fired]=res;
this._fire();
},_check:function(){
if(this.fired!=-1){
if(!this.silentlyCancelled){
dojo.raise("already called!");
}
this.silentlyCancelled=false;
return;
}
},callback:function(res){
this._check();
this._resback(res);
},errback:function(res){
this._check();
if(!(res instanceof Error)){
res=new Error(res);
}
this._resback(res);
},addBoth:function(cb,cbfn){
var _861=this.getFunctionFromArgs(cb,cbfn);
if(arguments.length>2){
_861=dojo.lang.curryArguments(null,_861,arguments,2);
}
return this.addCallbacks(_861,_861);
},addCallback:function(cb,cbfn){
var _864=this.getFunctionFromArgs(cb,cbfn);
if(arguments.length>2){
_864=dojo.lang.curryArguments(null,_864,arguments,2);
}
return this.addCallbacks(_864,null);
},addErrback:function(cb,cbfn){
var _867=this.getFunctionFromArgs(cb,cbfn);
if(arguments.length>2){
_867=dojo.lang.curryArguments(null,_867,arguments,2);
}
return this.addCallbacks(null,_867);
return this.addCallbacks(null,cbfn);
},addCallbacks:function(cb,eb){
this.chain.push([cb,eb]);
if(this.fired>=0){
this._fire();
}
return this;
},_fire:function(){
var _86a=this.chain;
var _86b=this.fired;
var res=this.results[_86b];
var self=this;
var cb=null;
while(_86a.length>0&&this.paused==0){
var pair=_86a.shift();
var f=pair[_86b];
if(f==null){
continue;
}
try{
res=f(res);
_86b=((res instanceof Error)?1:0);
if(res instanceof dojo.Deferred){
cb=function(res){
self._continue(res);
};
this._pause();
}
}
catch(err){
_86b=1;
res=err;
}
}
this.fired=_86b;
this.results[_86b]=res;
if((cb)&&(this.paused)){
res.addBoth(cb);
}
}});
dojo.provide("dojo.widget.RichText");
if(dojo.hostenv.post_load_){
(function(){
var _872=dojo.doc().createElement("textarea");
_872.id="dojo.widget.RichText.savedContent";
_872.style="display:none;position:absolute;top:-100px;left:-100px;height:3px;width:3px;overflow:hidden;";
dojo.body().appendChild(_872);
})();
}else{
try{
dojo.doc().write("<textarea id=\"dojo.widget.RichText.savedContent\" "+"style=\"display:none;position:absolute;top:-100px;left:-100px;height:3px;width:3px;overflow:hidden;\"></textarea>");
}
catch(e){
}
}
dojo.widget.defineWidget("dojo.widget.RichText",dojo.widget.HtmlWidget,function(){
this.contentPreFilters=[];
this.contentPostFilters=[];
this.contentDomPreFilters=[];
this.contentDomPostFilters=[];
this.editingAreaStyleSheets=[];
if(dojo.render.html.moz){
this.contentPreFilters.push(this._fixContentForMoz);
}
this._keyHandlers={};
if(dojo.Deferred){
this.onLoadDeferred=new dojo.Deferred();
}
},{inheritWidth:false,focusOnLoad:false,saveName:"",styleSheets:"",_content:"",height:"",minHeight:"1em",isClosed:true,isLoaded:false,useActiveX:false,relativeImageUrls:false,_SEPARATOR:"@@**%%__RICHTEXTBOUNDRY__%%**@@",onLoadDeferred:null,fillInTemplate:function(){
dojo.event.topic.publish("dojo.widget.RichText::init",this);
this.open();
dojo.event.connect(this,"onKeyPressed",this,"afterKeyPress");
dojo.event.connect(this,"onKeyPress",this,"keyPress");
dojo.event.connect(this,"onKeyDown",this,"keyDown");
dojo.event.connect(this,"onKeyUp",this,"keyUp");
this.setupDefaultShortcuts();
},setupDefaultShortcuts:function(){
var ctrl=this.KEY_CTRL;
var exec=function(cmd,arg){
return arguments.length==1?function(){
this.execCommand(cmd);
}:function(){
this.execCommand(cmd,arg);
};
};
this.addKeyHandler("b",ctrl,exec("bold"));
this.addKeyHandler("i",ctrl,exec("italic"));
this.addKeyHandler("u",ctrl,exec("underline"));
this.addKeyHandler("a",ctrl,exec("selectall"));
this.addKeyHandler("s",ctrl,function(){
this.save(true);
});
this.addKeyHandler("1",ctrl,exec("formatblock","h1"));
this.addKeyHandler("2",ctrl,exec("formatblock","h2"));
this.addKeyHandler("3",ctrl,exec("formatblock","h3"));
this.addKeyHandler("4",ctrl,exec("formatblock","h4"));
this.addKeyHandler("\\",ctrl,exec("insertunorderedlist"));
if(!dojo.render.html.ie){
this.addKeyHandler("Z",ctrl,exec("redo"));
}
},events:["onBlur","onFocus","onKeyPress","onKeyDown","onKeyUp","onClick"],open:function(_877){
if(this.onLoadDeferred.fired>=0){
this.onLoadDeferred=new dojo.Deferred();
}
var h=dojo.render.html;
if(!this.isClosed){
this.close();
}
dojo.event.topic.publish("dojo.widget.RichText::open",this);
this._content="";
if((arguments.length==1)&&(_877["nodeName"])){
this.domNode=_877;
}
if((this.domNode["nodeName"])&&(this.domNode.nodeName.toLowerCase()=="textarea")){
this.textarea=this.domNode;
var html=dojo.string.trim(this.textarea.value);
this.domNode=dojo.doc().createElement("div");
dojo.html.copyStyle(this.domNode,this.textarea);
var _87a=dojo.lang.hitch(this,function(){
with(this.textarea.style){
display="block";
position="absolute";
left=top="-1000px";
if(h.ie){
this.__overflow=overflow;
overflow="hidden";
}
}
});
if(h.ie){
setTimeout(_87a,10);
}else{
_87a();
}
if(!h.safari){
dojo.html.insertBefore(this.domNode,this.textarea);
}
if(this.textarea.form){
dojo.event.connect("before",this.textarea.form,"onsubmit",dojo.lang.hitch(this,function(){
this.textarea.value=this.getEditorContent();
}));
}
var _87b=this;
dojo.event.connect(this,"postCreate",function(){
dojo.html.insertAfter(_87b.textarea,_87b.domNode);
});
}else{
var html=this._preFilterContent(dojo.string.trim(this.domNode.innerHTML));
}
if(html==""){
html="&nbsp;";
}
var _87c=dojo.html.getContentBox(this.domNode);
this._oldHeight=_87c.height;
this._oldWidth=_87c.width;
this._firstChildContributingMargin=this._getContributingMargin(this.domNode,"top");
this._lastChildContributingMargin=this._getContributingMargin(this.domNode,"bottom");
this.savedContent=this.domNode.innerHTML;
this.domNode.innerHTML="";
this.editingArea=dojo.doc().createElement("div");
this.domNode.appendChild(this.editingArea);
if((this.domNode["nodeName"])&&(this.domNode.nodeName=="LI")){
this.domNode.innerHTML=" <br>";
}
if(this.saveName!=""){
var _87d=dojo.doc().getElementById("dojo.widget.RichText.savedContent");
if(_87d.value!=""){
var _87e=_87d.value.split(this._SEPARATOR);
for(var i=0;i<_87e.length;i++){
var data=_87e[i].split(":");
if(data[0]==this.saveName){
html=data[1];
_87e.splice(i,1);
break;
}
}
}
dojo.event.connect("before",window,"onunload",this,"_saveContent");
}
if(h.ie70&&this.useActiveX){
dojo.debug("activeX in ie70 is not currently supported, useActiveX is ignored for now.");
this.useActiveX=false;
}
if(this.useActiveX&&h.ie){
var self=this;
setTimeout(function(){
self._drawObject(html);
},0);
}else{
if(h.ie||this._safariIsLeopard()||h.opera){
this.iframe=dojo.doc().createElement("iframe");
this.iframe.src="javascript:void(0)";
this.editorObject=this.iframe;
with(this.iframe.style){
border="0";
width="100%";
}
this.iframe.frameBorder=0;
this.editingArea.appendChild(this.iframe);
this.window=this.iframe.contentWindow;
this.document=this.window.document;
this.document.open();
this.document.write("<html><head><style>body{margin:0;padding:0;border:0;overflow:hidden;}</style></head><body><div></div></body></html>");
this.document.close();
this.editNode=this.document.body.firstChild;
this.editNode.contentEditable=true;
with(this.iframe.style){
if(h.ie70){
if(this.height){
height=this.height;
}
if(this.minHeight){
minHeight=this.minHeight;
}
}else{
height=this.height?this.height:this.minHeight;
}
}
var _882=["p","pre","address","h1","h2","h3","h4","h5","h6","ol","div","ul"];
var _883="";
for(var i in _882){
if(_882[i].charAt(1)!="l"){
_883+="<"+_882[i]+"><span>content</span></"+_882[i]+">";
}else{
_883+="<"+_882[i]+"><li>content</li></"+_882[i]+">";
}
}
with(this.editNode.style){
position="absolute";
left="-2000px";
top="-2000px";
}
this.editNode.innerHTML=_883;
var node=this.editNode.firstChild;
while(node){
dojo.withGlobal(this.window,"selectElement",dojo.html.selection,[node.firstChild]);
var _885=node.tagName.toLowerCase();
this._local2NativeFormatNames[_885]=this.queryCommandValue("formatblock");
this._native2LocalFormatNames[this._local2NativeFormatNames[_885]]=_885;
node=node.nextSibling;
}
with(this.editNode.style){
position="";
left="";
top="";
}
this.editNode.innerHTML=html;
if(this.height){
this.document.body.style.overflowY="scroll";
}
dojo.lang.forEach(this.events,function(e){
dojo.event.connect(this.editNode,e.toLowerCase(),this,e);
},this);
this.onLoad();
}else{
this._drawIframe(html);
this.editorObject=this.iframe;
}
}
if(this.domNode.nodeName=="LI"){
this.domNode.lastChild.style.marginTop="-1.2em";
}
dojo.html.addClass(this.domNode,"RichTextEditable");
this.isClosed=false;
},_hasCollapseableMargin:function(_887,side){
if(dojo.html.getPixelValue(_887,"border-"+side+"-width",false)){
return false;
}else{
if(dojo.html.getPixelValue(_887,"padding-"+side,false)){
return false;
}else{
return true;
}
}
},_getContributingMargin:function(_889,_88a){
if(_88a=="top"){
var _88b="previousSibling";
var _88c="nextSibling";
var _88d="firstChild";
var _88e="margin-top";
var _88f="margin-bottom";
}else{
var _88b="nextSibling";
var _88c="previousSibling";
var _88d="lastChild";
var _88e="margin-bottom";
var _88f="margin-top";
}
var _890=dojo.html.getPixelValue(_889,_88e,false);
function isSignificantNode(_891){
return !(_891.nodeType==3&&dojo.string.isBlank(_891.data))&&dojo.html.getStyle(_891,"display")!="none"&&!dojo.html.isPositionAbsolute(_891);
}
var _892=0;
var _893=_889[_88d];
while(_893){
while((!isSignificantNode(_893))&&_893[_88c]){
_893=_893[_88c];
}
_892=Math.max(_892,dojo.html.getPixelValue(_893,_88e,false));
if(!this._hasCollapseableMargin(_893,_88a)){
break;
}
_893=_893[_88d];
}
if(!this._hasCollapseableMargin(_889,_88a)){
return parseInt(_892);
}
var _894=0;
var _895=_889[_88b];
while(_895){
if(isSignificantNode(_895)){
_894=dojo.html.getPixelValue(_895,_88f,false);
break;
}
_895=_895[_88b];
}
if(!_895){
_894=dojo.html.getPixelValue(_889.parentNode,_88e,false);
}
if(_892>_890){
return parseInt(Math.max((_892-_890)-_894,0));
}else{
return 0;
}
},_drawIframe:function(html){
var _897=Boolean(dojo.render.html.moz&&(typeof window.XML=="undefined"));
if(!this.iframe){
var _898=(new dojo.uri.Uri(dojo.doc().location)).host;
this.iframe=dojo.doc().createElement("iframe");
with(this.iframe){
style.border="none";
style.lineHeight="0";
style.verticalAlign="bottom";
scrolling=this.height?"auto":"no";
}
}
this.iframe.src=dojo.uri.dojoUri("src/widget/templates/richtextframe.html")+((dojo.doc().domain!=_898)?("#"+dojo.doc().domain):"");
this.iframe.width=this.inheritWidth?this._oldWidth:"100%";
if(this.height){
this.iframe.style.height=this.height;
}else{
var _899=this._oldHeight;
if(this._hasCollapseableMargin(this.domNode,"top")){
_899+=this._firstChildContributingMargin;
}
if(this._hasCollapseableMargin(this.domNode,"bottom")){
_899+=this._lastChildContributingMargin;
}
this.iframe.height=_899;
}
var _89a=dojo.doc().createElement("div");
_89a.innerHTML=html;
this.editingArea.appendChild(_89a);
if(this.relativeImageUrls){
var imgs=_89a.getElementsByTagName("img");
for(var i=0;i<imgs.length;i++){
imgs[i].src=(new dojo.uri.Uri(dojo.global().location,imgs[i].src)).toString();
}
html=_89a.innerHTML;
}
var _89d=dojo.html.firstElement(_89a);
var _89e=dojo.html.lastElement(_89a);
if(_89d){
_89d.style.marginTop=this._firstChildContributingMargin+"px";
}
if(_89e){
_89e.style.marginBottom=this._lastChildContributingMargin+"px";
}
this.editingArea.appendChild(this.iframe);
if(dojo.render.html.safari){
this.iframe.src=this.iframe.src;
}
var _89f=false;
var _8a0=dojo.lang.hitch(this,function(){
if(!_89f){
_89f=true;
}else{
return;
}
if(!this.editNode){
if(this.iframe.contentWindow){
this.window=this.iframe.contentWindow;
this.document=this.iframe.contentWindow.document;
}else{
if(this.iframe.contentDocument){
this.window=this.iframe.contentDocument.window;
this.document=this.iframe.contentDocument;
}
}
var _8a1=(function(_8a2){
return function(_8a3){
return dojo.html.getStyle(_8a2,_8a3);
};
})(this.domNode);
var font=_8a1("font-weight")+" "+_8a1("font-size")+" "+_8a1("font-family");
var _8a5="1.0";
var _8a6=dojo.html.getUnitValue(this.domNode,"line-height");
if(_8a6.value&&_8a6.units==""){
_8a5=_8a6.value;
}
dojo.html.insertCssText("body,html{background:transparent;padding:0;margin:0;}"+"body{top:0;left:0;right:0;"+(((this.height)||(dojo.render.html.opera))?"":"position:fixed;")+"font:"+font+";"+"min-height:"+this.minHeight+";"+"line-height:"+_8a5+"}"+"p{margin: 1em 0 !important;}"+"body > *:first-child{padding-top:0 !important;margin-top:"+this._firstChildContributingMargin+"px !important;}"+"body > *:last-child{padding-bottom:0 !important;margin-bottom:"+this._lastChildContributingMargin+"px !important;}"+"li > ul:-moz-first-node, li > ol:-moz-first-node{padding-top:1.2em;}\n"+"li{min-height:1.2em;}"+"",this.document);
dojo.html.removeNode(_89a);
this.document.body.innerHTML=html;
if(_897||dojo.render.html.safari){
this.document.designMode="on";
}
this.onLoad();
}else{
dojo.html.removeNode(_89a);
this.editNode.innerHTML=html;
this.onDisplayChanged();
}
});
if(this.editNode){
_8a0();
}else{
if(dojo.render.html.moz){
this.iframe.onload=function(){
setTimeout(_8a0,250);
};
}else{
this.iframe.onload=_8a0;
}
}
},_applyEditingAreaStyleSheets:function(){
var _8a7=[];
if(this.styleSheets){
_8a7=this.styleSheets.split(";");
this.styleSheets="";
}
_8a7=_8a7.concat(this.editingAreaStyleSheets);
this.editingAreaStyleSheets=[];
if(_8a7.length>0){
for(var i=0;i<_8a7.length;i++){
var url=_8a7[i];
if(url){
this.addStyleSheet(dojo.uri.dojoUri(url));
}
}
}
},addStyleSheet:function(uri){
var url=uri.toString();
if(dojo.lang.find(this.editingAreaStyleSheets,url)>-1){
dojo.debug("dojo.widget.RichText.addStyleSheet: Style sheet "+url+" is already applied to the editing area!");
return;
}
if(url.charAt(0)=="."||(url.charAt(0)!="/"&&!uri.host)){
url=(new dojo.uri.Uri(dojo.global().location,url)).toString();
}
this.editingAreaStyleSheets.push(url);
if(this.document.createStyleSheet){
this.document.createStyleSheet(url);
}else{
var head=this.document.getElementsByTagName("head")[0];
var _8ad=this.document.createElement("link");
with(_8ad){
rel="stylesheet";
type="text/css";
href=url;
}
head.appendChild(_8ad);
}
},removeStyleSheet:function(uri){
var url=uri.toString();
if(url.charAt(0)=="."||(url.charAt(0)!="/"&&!uri.host)){
url=(new dojo.uri.Uri(dojo.global().location,url)).toString();
}
var _8b0=dojo.lang.find(this.editingAreaStyleSheets,url);
if(_8b0==-1){
dojo.debug("dojo.widget.RichText.removeStyleSheet: Style sheet "+url+" is not applied to the editing area so it can not be removed!");
return;
}
delete this.editingAreaStyleSheets[_8b0];
var _8b1=this.document.getElementsByTagName("link");
for(var i=0;i<_8b1.length;i++){
if(_8b1[i].href==url){
if(dojo.render.html.ie){
_8b1[i].href="";
}
dojo.html.removeNode(_8b1[i]);
break;
}
}
},_drawObject:function(html){
this.object=dojo.html.createExternalElement(dojo.doc(),"object");
with(this.object){
classid="clsid:2D360201-FFF5-11D1-8D03-00A0C959BC0A";
width=this.inheritWidth?this._oldWidth:"100%";
style.height=this.height?this.height:(this._oldHeight+"px");
Scrollbars=this.height?true:false;
Appearance=this._activeX.appearance.flat;
}
this.editorObject=this.object;
this.editingArea.appendChild(this.object);
this.object.attachEvent("DocumentComplete",dojo.lang.hitch(this,"onLoad"));
dojo.lang.forEach(this.events,function(e){
this.object.attachEvent(e.toLowerCase(),dojo.lang.hitch(this,e));
},this);
this.object.DocumentHTML="<!doctype HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\">"+"<html><title></title>"+"<style type=\"text/css\">"+"    body,html { padding: 0; margin: 0; }"+(this.height?"":"    body,  { overflow: hidden; }")+"</style>"+"<body><div>"+html+"<div></body></html>";
this._cacheLocalBlockFormatNames();
},_local2NativeFormatNames:{},_native2LocalFormatNames:{},_cacheLocalBlockFormatNames:function(){
if(!this._native2LocalFormatNames["p"]){
var obj=this.object;
var _8b6=false;
if(!obj){
try{
obj=dojo.html.createExternalElement(dojo.doc(),"object");
obj.classid="clsid:2D360201-FFF5-11D1-8D03-00A0C959BC0A";
dojo.body().appendChild(obj);
obj.DocumentHTML="<html><head></head><body></body></html>";
}
catch(e){
_8b6=true;
}
}
try{
var _8b7=new ActiveXObject("DEGetBlockFmtNamesParam.DEGetBlockFmtNamesParam");
obj.ExecCommand(this._activeX.command["getblockformatnames"],0,_8b7);
var _8b8=new VBArray(_8b7.Names);
var _8b9=_8b8.toArray();
var _8ba=["p","pre","address","h1","h2","h3","h4","h5","h6","ol","ul","","","","","div"];
for(var i=0;i<_8ba.length;++i){
if(_8ba[i].length>0){
this._local2NativeFormatNames[_8b9[i]]=_8ba[i];
this._native2LocalFormatNames[_8ba[i]]=_8b9[i];
}
}
}
catch(e){
_8b6=true;
}
if(obj&&!this.object){
dojo.body().removeChild(obj);
}
}
return !_8b6;
},_isResized:function(){
return false;
},onLoad:function(e){
this.isLoaded=true;
if(this.object){
this.document=this.object.DOM;
this.window=this.document.parentWindow;
this.editNode=this.document.body.firstChild;
this.editingArea.style.height=this.height?this.height:this.minHeight;
if(!this.height){
this.connect(this,"onDisplayChanged","_updateHeight");
}
this.window._frameElement=this.object;
}else{
if(this.iframe&&!dojo.render.html.ie){
this.editNode=this.document.body;
if(!this.height){
this.connect(this,"onDisplayChanged","_updateHeight");
}
try{
this.document.execCommand("useCSS",false,true);
this.document.execCommand("styleWithCSS",false,false);
}
catch(e2){
}
if(dojo.render.html.safari){
this.connect(this.editNode,"onblur","onBlur");
this.connect(this.editNode,"onfocus","onFocus");
this.connect(this.editNode,"onclick","onFocus");
this.interval=setInterval(dojo.lang.hitch(this,"onDisplayChanged"),750);
}else{
if(dojo.render.html.mozilla||dojo.render.html.opera){
var doc=this.document;
var _8be=dojo.event.browser.addListener;
var self=this;
dojo.lang.forEach(this.events,function(e){
var l=_8be(self.document,e.substr(2).toLowerCase(),dojo.lang.hitch(self,e));
if(e=="onBlur"){
var _8c2={unBlur:function(e){
dojo.event.browser.removeListener(doc,"blur",l);
}};
dojo.event.connect("before",self,"close",_8c2,"unBlur");
}
});
}
}
}else{
if(dojo.render.html.ie){
if(!this.height){
this.connect(this,"onDisplayChanged","_updateHeight");
}
this.editNode.style.zoom=1;
}
}
}
this._applyEditingAreaStyleSheets();
if(this.focusOnLoad){
this.focus();
}
this.onDisplayChanged(e);
if(this.onLoadDeferred){
this.onLoadDeferred.callback(true);
}
},onKeyDown:function(e){
if((!e)&&(this.object)){
e=dojo.event.browser.fixEvent(this.window.event);
}
if((dojo.render.html.ie)&&(e.keyCode==e.KEY_TAB)){
e.preventDefault();
e.stopPropagation();
this.execCommand((e.shiftKey?"outdent":"indent"));
}else{
if(dojo.render.html.ie){
if((65<=e.keyCode)&&(e.keyCode<=90)){
e.charCode=e.keyCode;
this.onKeyPress(e);
}
}
}
},onKeyUp:function(e){
return;
},KEY_CTRL:1,onKeyPress:function(e){
if((!e)&&(this.object)){
e=dojo.event.browser.fixEvent(this.window.event);
}
var _8c7=e.ctrlKey?this.KEY_CTRL:0;
if(this._keyHandlers[e.key]){
var _8c8=this._keyHandlers[e.key],i=0,_8ca;
while(_8ca=_8c8[i++]){
if(_8c7==_8ca.modifiers){
e.preventDefault();
_8ca.handler.call(this);
break;
}
}
}
dojo.lang.setTimeout(this,this.onKeyPressed,1,e);
},addKeyHandler:function(key,_8cc,_8cd){
if(!(this._keyHandlers[key] instanceof Array)){
this._keyHandlers[key]=[];
}
this._keyHandlers[key].push({modifiers:_8cc||0,handler:_8cd});
},onKeyPressed:function(e){
this.onDisplayChanged();
},onClick:function(e){
this.onDisplayChanged(e);
},onBlur:function(e){
},_initialFocus:true,onFocus:function(e){
if((dojo.render.html.mozilla)&&(this._initialFocus)){
this._initialFocus=false;
if(dojo.string.trim(this.editNode.innerHTML)=="&nbsp;"){
this.placeCursorAtStart();
}
}
},blur:function(){
if(this.iframe){
this.window.blur();
}else{
if(this.object){
this.document.body.blur();
}else{
if(this.editNode){
this.editNode.blur();
}
}
}
},focus:function(){
if(this.iframe&&!dojo.render.html.ie){
this.window.focus();
}else{
if(this.object){
this.document.focus();
}else{
if(this.editNode&&this.editNode.focus){
this.editNode.focus();
}else{
dojo.debug("Have no idea how to focus into the editor!");
}
}
}
},onDisplayChanged:function(e){
},_activeX:{command:{bold:5000,italic:5023,underline:5048,justifycenter:5024,justifyleft:5025,justifyright:5026,cut:5003,copy:5002,paste:5032,"delete":5004,undo:5049,redo:5033,removeformat:5034,selectall:5035,unlink:5050,indent:5018,outdent:5031,insertorderedlist:5030,insertunorderedlist:5051,inserttable:5022,insertcell:5019,insertcol:5020,insertrow:5021,deletecells:5005,deletecols:5006,deleterows:5007,mergecells:5029,splitcell:5047,setblockformat:5043,getblockformat:5011,getblockformatnames:5012,setfontname:5044,getfontname:5013,setfontsize:5045,getfontsize:5014,setbackcolor:5042,getbackcolor:5010,setforecolor:5046,getforecolor:5015,findtext:5008,font:5009,hyperlink:5016,image:5017,lockelement:5027,makeabsolute:5028,sendbackward:5036,bringforward:5037,sendbelowtext:5038,bringabovetext:5039,sendtoback:5040,bringtofront:5041,properties:5052},ui:{"default":0,prompt:1,noprompt:2},status:{notsupported:0,disabled:1,enabled:3,latched:7,ninched:11},appearance:{flat:0,inset:1},state:{unchecked:0,checked:1,gray:2}},_normalizeCommand:function(cmd){
var drh=dojo.render.html;
var _8d5=cmd.toLowerCase();
if(_8d5=="formatblock"){
if(drh.safari){
_8d5="heading";
}
}else{
if(this.object){
switch(_8d5){
case "createlink":
_8d5="hyperlink";
break;
case "insertimage":
_8d5="image";
break;
}
}else{
if(_8d5=="hilitecolor"&&!drh.mozilla){
_8d5="backcolor";
}
}
}
return _8d5;
},_safariIsLeopard:function(){
var _8d6=false;
if(dojo.render.html.safari){
var tmp=dojo.render.html.UA.split("AppleWebKit/")[1];
var ver=parseFloat(tmp.split(" ")[0]);
if(ver>=420){
_8d6=true;
}
}
return _8d6;
},queryCommandAvailable:function(_8d9){
var ie=1;
var _8db=1<<1;
var _8dc=1<<2;
var _8dd=1<<3;
var _8de=1<<4;
var _8df=this._safariIsLeopard();
function isSupportedBy(_8e0){
return {ie:Boolean(_8e0&ie),mozilla:Boolean(_8e0&_8db),safari:Boolean(_8e0&_8dc),safari420:Boolean(_8e0&_8de),opera:Boolean(_8e0&_8dd)};
}
var _8e1=null;
switch(_8d9.toLowerCase()){
case "bold":
case "italic":
case "underline":
case "subscript":
case "superscript":
case "fontname":
case "fontsize":
case "forecolor":
case "hilitecolor":
case "justifycenter":
case "justifyfull":
case "justifyleft":
case "justifyright":
case "delete":
case "selectall":
_8e1=isSupportedBy(_8db|ie|_8dc|_8dd);
break;
case "createlink":
case "unlink":
case "removeformat":
case "inserthorizontalrule":
case "insertimage":
case "insertorderedlist":
case "insertunorderedlist":
case "indent":
case "outdent":
case "formatblock":
case "inserthtml":
case "undo":
case "redo":
case "strikethrough":
_8e1=isSupportedBy(_8db|ie|_8dd|_8de);
break;
case "blockdirltr":
case "blockdirrtl":
case "dirltr":
case "dirrtl":
case "inlinedirltr":
case "inlinedirrtl":
_8e1=isSupportedBy(ie);
break;
case "cut":
case "copy":
case "paste":
_8e1=isSupportedBy(ie|_8db|_8de);
break;
case "inserttable":
_8e1=isSupportedBy(_8db|(this.object?ie:0));
break;
case "insertcell":
case "insertcol":
case "insertrow":
case "deletecells":
case "deletecols":
case "deleterows":
case "mergecells":
case "splitcell":
_8e1=isSupportedBy(this.object?ie:0);
break;
default:
return false;
}
return (dojo.render.html.ie&&_8e1.ie)||(dojo.render.html.mozilla&&_8e1.mozilla)||(dojo.render.html.safari&&_8e1.safari)||(_8df&&_8e1.safari420)||(dojo.render.html.opera&&_8e1.opera);
},execCommand:function(_8e2,_8e3){
var _8e4;
this.focus();
_8e2=this._normalizeCommand(_8e2);
if(_8e3!=undefined){
if(_8e2=="heading"){
throw new Error("unimplemented");
}else{
if(_8e2=="formatblock"){
if(this.object){
_8e3=this._native2LocalFormatNames[_8e3];
}else{
if(dojo.render.html.ie){
_8e3="<"+_8e3+">";
}
}
}
}
}
if(this.object){
switch(_8e2){
case "hilitecolor":
_8e2="setbackcolor";
break;
case "forecolor":
case "backcolor":
case "fontsize":
case "fontname":
_8e2="set"+_8e2;
break;
case "formatblock":
_8e2="setblockformat";
}
if(_8e2=="strikethrough"){
_8e2="inserthtml";
var _8e5=this.document.selection.createRange();
if(!_8e5.htmlText){
return;
}
_8e3=_8e5.htmlText.strike();
}else{
if(_8e2=="inserthorizontalrule"){
_8e2="inserthtml";
_8e3="<hr>";
}
}
if(_8e2=="inserthtml"){
var _8e5=this.document.selection.createRange();
if(this.document.selection.type.toUpperCase()=="CONTROL"){
for(var i=0;i<_8e5.length;i++){
_8e5.item(i).outerHTML=_8e3;
}
}else{
_8e5.pasteHTML(_8e3);
_8e5.select();
}
_8e4=true;
}else{
if(arguments.length==1){
_8e4=this.object.ExecCommand(this._activeX.command[_8e2],this._activeX.ui.noprompt);
}else{
_8e4=this.object.ExecCommand(this._activeX.command[_8e2],this._activeX.ui.noprompt,_8e3);
}
}
}else{
if(_8e2=="inserthtml"){
if(dojo.render.html.ie){
var _8e7=this.document.selection.createRange();
_8e7.pasteHTML(_8e3);
_8e7.select();
return true;
}else{
return this.document.execCommand(_8e2,false,_8e3);
}
}else{
if((_8e2=="unlink")&&(this.queryCommandEnabled("unlink"))&&(dojo.render.html.mozilla)){
var _8e8=this.window.getSelection();
var _8e9=_8e8.getRangeAt(0);
var _8ea=_8e9.startContainer;
var _8eb=_8e9.startOffset;
var _8ec=_8e9.endContainer;
var _8ed=_8e9.endOffset;
var a=dojo.withGlobal(this.window,"getAncestorElement",dojo.html.selection,["a"]);
dojo.withGlobal(this.window,"selectElement",dojo.html.selection,[a]);
_8e4=this.document.execCommand("unlink",false,null);
var _8e9=this.document.createRange();
_8e9.setStart(_8ea,_8eb);
_8e9.setEnd(_8ec,_8ed);
_8e8.removeAllRanges();
_8e8.addRange(_8e9);
return _8e4;
}else{
if((_8e2=="hilitecolor")&&(dojo.render.html.mozilla)){
this.document.execCommand("useCSS",false,false);
_8e4=this.document.execCommand(_8e2,false,_8e3);
this.document.execCommand("useCSS",false,true);
}else{
if((dojo.render.html.ie)&&((_8e2=="backcolor")||(_8e2=="forecolor"))){
_8e3=arguments.length>1?_8e3:null;
_8e4=this.document.execCommand(_8e2,false,_8e3);
}else{
_8e3=arguments.length>1?_8e3:null;
if(_8e3||_8e2!="createlink"){
_8e4=this.document.execCommand(_8e2,false,_8e3);
}
}
}
}
}
}
this.onDisplayChanged();
return _8e4;
},queryCommandEnabled:function(_8ef){
_8ef=this._normalizeCommand(_8ef);
if(this.object){
switch(_8ef){
case "hilitecolor":
_8ef="setbackcolor";
break;
case "forecolor":
case "backcolor":
case "fontsize":
case "fontname":
_8ef="set"+_8ef;
break;
case "formatblock":
_8ef="setblockformat";
break;
case "strikethrough":
_8ef="bold";
break;
case "inserthorizontalrule":
return true;
}
if(typeof this._activeX.command[_8ef]=="undefined"){
return false;
}
var _8f0=this.object.QueryStatus(this._activeX.command[_8ef]);
return ((_8f0!=this._activeX.status.notsupported)&&(_8f0!=this._activeX.status.disabled));
}else{
if(dojo.render.html.mozilla){
if(_8ef=="unlink"){
return dojo.withGlobal(this.window,"hasAncestorElement",dojo.html.selection,["a"]);
}else{
if(_8ef=="inserttable"){
return true;
}
}
}
var elem=(dojo.render.html.ie)?this.document.selection.createRange():this.document;
return elem.queryCommandEnabled(_8ef);
}
},queryCommandState:function(_8f2){
_8f2=this._normalizeCommand(_8f2);
if(this.object){
if(_8f2=="forecolor"){
_8f2="setforecolor";
}else{
if(_8f2=="backcolor"){
_8f2="setbackcolor";
}else{
if(_8f2=="strikethrough"){
return dojo.withGlobal(this.window,"hasAncestorElement",dojo.html.selection,["strike"]);
}else{
if(_8f2=="inserthorizontalrule"){
return false;
}
}
}
}
if(typeof this._activeX.command[_8f2]=="undefined"){
return null;
}
var _8f3=this.object.QueryStatus(this._activeX.command[_8f2]);
return ((_8f3==this._activeX.status.latched)||(_8f3==this._activeX.status.ninched));
}else{
return this.document.queryCommandState(_8f2);
}
},queryCommandValue:function(_8f4){
_8f4=this._normalizeCommand(_8f4);
if(this.object){
switch(_8f4){
case "forecolor":
case "backcolor":
case "fontsize":
case "fontname":
_8f4="get"+_8f4;
return this.object.execCommand(this._activeX.command[_8f4],this._activeX.ui.noprompt);
case "formatblock":
var _8f5=this.object.execCommand(this._activeX.command["getblockformat"],this._activeX.ui.noprompt);
if(_8f5){
return this._local2NativeFormatNames[_8f5];
}
}
}else{
if(dojo.render.html.ie&&_8f4=="formatblock"){
return this._local2NativeFormatNames[this.document.queryCommandValue(_8f4)]||this.document.queryCommandValue(_8f4);
}
return this.document.queryCommandValue(_8f4);
}
},placeCursorAtStart:function(){
this.focus();
if(dojo.render.html.moz&&this.editNode.firstChild&&this.editNode.firstChild.nodeType!=dojo.dom.TEXT_NODE){
dojo.withGlobal(this.window,"selectElementChildren",dojo.html.selection,[this.editNode.firstChild]);
}else{
dojo.withGlobal(this.window,"selectElementChildren",dojo.html.selection,[this.editNode]);
}
dojo.withGlobal(this.window,"collapse",dojo.html.selection,[true]);
},placeCursorAtEnd:function(){
this.focus();
if(dojo.render.html.moz&&this.editNode.lastChild&&this.editNode.lastChild.nodeType!=dojo.dom.TEXT_NODE){
dojo.withGlobal(this.window,"selectElementChildren",dojo.html.selection,[this.editNode.lastChild]);
}else{
dojo.withGlobal(this.window,"selectElementChildren",dojo.html.selection,[this.editNode]);
}
dojo.withGlobal(this.window,"collapse",dojo.html.selection,[false]);
},replaceEditorContent:function(html){
html=this._preFilterContent(html);
if(this.isClosed){
this.domNode.innerHTML=html;
}else{
if(this.window&&this.window.getSelection&&!dojo.render.html.moz){
this.editNode.innerHTML=html;
}else{
if((this.window&&this.window.getSelection)||(this.document&&this.document.selection)){
this.execCommand("selectall");
if(dojo.render.html.moz&&!html){
html="&nbsp;";
}
this.execCommand("inserthtml",html);
}
}
}
},_preFilterContent:function(html){
var ec=html;
dojo.lang.forEach(this.contentPreFilters,function(ef){
ec=ef(ec);
});
if(this.contentDomPreFilters.length>0){
var dom=dojo.doc().createElement("div");
dom.style.display="none";
dojo.body().appendChild(dom);
dom.innerHTML=ec;
dojo.lang.forEach(this.contentDomPreFilters,function(ef){
dom=ef(dom);
});
ec=dom.innerHTML;
dojo.body().removeChild(dom);
}
return ec;
},_postFilterContent:function(html){
var ec=html;
if(this.contentDomPostFilters.length>0){
var dom=this.document.createElement("div");
dom.innerHTML=ec;
dojo.lang.forEach(this.contentDomPostFilters,function(ef){
dom=ef(dom);
});
ec=dom.innerHTML;
}
dojo.lang.forEach(this.contentPostFilters,function(ef){
ec=ef(ec);
});
return ec;
},_lastHeight:0,_updateHeight:function(){
if(!this.isLoaded){
return;
}
if(this.height){
return;
}
var _901=dojo.html.getBorderBox(this.editNode).height;
if(!_901){
_901=dojo.html.getBorderBox(this.document.body).height;
}
if(_901==0){
dojo.debug("Can not figure out the height of the editing area!");
return;
}
this._lastHeight=_901;
this.editorObject.style.height=this._lastHeight+"px";
this.window.scrollTo(0,0);
},_saveContent:function(e){
var _903=dojo.doc().getElementById("dojo.widget.RichText.savedContent");
_903.value+=this._SEPARATOR+this.saveName+":"+this.getEditorContent();
},getEditorContent:function(){
var ec="";
try{
ec=(this._content.length>0)?this._content:this.editNode.innerHTML;
if(dojo.string.trim(ec)=="&nbsp;"){
ec="";
}
}
catch(e){
}
if(dojo.render.html.ie&&!this.object){
var re=new RegExp("(?:<p>&nbsp;</p>[\n\r]*)+$","i");
ec=ec.replace(re,"");
}
ec=this._postFilterContent(ec);
if(this.relativeImageUrls){
var _906=dojo.global().location.protocol+"//"+dojo.global().location.host;
var _907=dojo.global().location.pathname;
if(_907.match(/\/$/)){
}else{
var _908=_907.split("/");
if(_908.length){
_908.pop();
}
_907=_908.join("/")+"/";
}
var _909=new RegExp("(<img[^>]* src=[\"'])("+_906+"("+_907+")?)","ig");
ec=ec.replace(_909,"$1");
}
return ec;
},close:function(save,_90b){
if(this.isClosed){
return false;
}
if(arguments.length==0){
save=true;
}
this._content=this._postFilterContent(this.editNode.innerHTML);
var _90c=(this.savedContent!=this._content);
if(this.interval){
clearInterval(this.interval);
}
if(dojo.render.html.ie&&!this.object){
dojo.event.browser.clean(this.editNode);
}
if(this.iframe){
delete this.iframe;
}
if(this.textarea){
with(this.textarea.style){
position="";
left=top="";
if(dojo.render.html.ie){
overflow=this.__overflow;
this.__overflow=null;
}
}
if(save){
this.textarea.value=this._content;
}else{
this.textarea.value=this.savedContent;
}
dojo.html.removeNode(this.domNode);
this.domNode=this.textarea;
}else{
if(save){
if(dojo.render.html.moz){
var nc=dojo.doc().createElement("span");
this.domNode.appendChild(nc);
nc.innerHTML=this.editNode.innerHTML;
}else{
this.domNode.innerHTML=this._content;
}
}else{
this.domNode.innerHTML=this.savedContent;
}
}
dojo.html.removeClass(this.domNode,"RichTextEditable");
this.isClosed=true;
this.isLoaded=false;
delete this.editNode;
if(this.window._frameElement){
this.window._frameElement=null;
}
this.window=null;
this.document=null;
this.object=null;
this.editingArea=null;
this.editorObject=null;
return _90c;
},destroyRendering:function(){
},destroy:function(){
this.destroyRendering();
if(!this.isClosed){
this.close(false);
}
dojo.widget.RichText.superclass.destroy.call(this);
},connect:function(_90e,_90f,_910){
dojo.event.connect(_90e,_90f,this,_910);
},disconnect:function(_911,_912,_913){
dojo.event.disconnect(_911,_912,this,_913);
},disconnectAllWithRoot:function(_914){
dojo.deprecated("disconnectAllWithRoot","is deprecated. No need to disconnect manually","0.5");
},_fixContentForMoz:function(html){
html=html.replace(/<strong([ \>])/gi,"<b$1");
html=html.replace(/<\/strong>/gi,"</b>");
html=html.replace(/<em([ \>])/gi,"<i$1");
html=html.replace(/<\/em>/gi,"</i>");
return html;
}});
dojo.provide("dojo.lang.type");
dojo.lang.whatAmI=function(_916){
dojo.deprecated("dojo.lang.whatAmI","use dojo.lang.getType instead","0.5");
return dojo.lang.getType(_916);
};
dojo.lang.whatAmI.custom={};
dojo.lang.getType=function(_917){
try{
if(dojo.lang.isArray(_917)){
return "array";
}
if(dojo.lang.isFunction(_917)){
return "function";
}
if(dojo.lang.isString(_917)){
return "string";
}
if(dojo.lang.isNumber(_917)){
return "number";
}
if(dojo.lang.isBoolean(_917)){
return "boolean";
}
if(dojo.lang.isAlien(_917)){
return "alien";
}
if(dojo.lang.isUndefined(_917)){
return "undefined";
}
for(var name in dojo.lang.whatAmI.custom){
if(dojo.lang.whatAmI.custom[name](_917)){
return name;
}
}
if(dojo.lang.isObject(_917)){
return "object";
}
}
catch(e){
}
return "unknown";
};
dojo.lang.isNumeric=function(_919){
return (!isNaN(_919)&&isFinite(_919)&&(_919!=null)&&!dojo.lang.isBoolean(_919)&&!dojo.lang.isArray(_919)&&!/^\s*$/.test(_919));
};
dojo.lang.isBuiltIn=function(_91a){
return (dojo.lang.isArray(_91a)||dojo.lang.isFunction(_91a)||dojo.lang.isString(_91a)||dojo.lang.isNumber(_91a)||dojo.lang.isBoolean(_91a)||(_91a==null)||(_91a instanceof Error)||(typeof _91a=="error"));
};
dojo.lang.isPureObject=function(_91b){
return ((_91b!=null)&&dojo.lang.isObject(_91b)&&_91b.constructor==Object);
};
dojo.lang.isOfType=function(_91c,type,_91e){
var _91f=false;
if(_91e){
_91f=_91e["optional"];
}
if(_91f&&((_91c===null)||dojo.lang.isUndefined(_91c))){
return true;
}
if(dojo.lang.isArray(type)){
var _920=type;
for(var i in _920){
var _922=_920[i];
if(dojo.lang.isOfType(_91c,_922)){
return true;
}
}
return false;
}else{
if(dojo.lang.isString(type)){
type=type.toLowerCase();
}
switch(type){
case Array:
case "array":
return dojo.lang.isArray(_91c);
case Function:
case "function":
return dojo.lang.isFunction(_91c);
case String:
case "string":
return dojo.lang.isString(_91c);
case Number:
case "number":
return dojo.lang.isNumber(_91c);
case "numeric":
return dojo.lang.isNumeric(_91c);
case Boolean:
case "boolean":
return dojo.lang.isBoolean(_91c);
case Object:
case "object":
return dojo.lang.isObject(_91c);
case "pureobject":
return dojo.lang.isPureObject(_91c);
case "builtin":
return dojo.lang.isBuiltIn(_91c);
case "alien":
return dojo.lang.isAlien(_91c);
case "undefined":
return dojo.lang.isUndefined(_91c);
case null:
case "null":
return (_91c===null);
case "optional":
dojo.deprecated("dojo.lang.isOfType(value, [type, \"optional\"])","use dojo.lang.isOfType(value, type, {optional: true} ) instead","0.5");
return ((_91c===null)||dojo.lang.isUndefined(_91c));
default:
if(dojo.lang.isFunction(type)){
return (_91c instanceof type);
}else{
dojo.raise("dojo.lang.isOfType() was passed an invalid type");
}
}
}
dojo.raise("If we get here, it means a bug was introduced above.");
};
dojo.lang.getObject=function(str){
var _924=str.split("."),i=0,obj=dj_global;
do{
obj=obj[_924[i++]];
}while(i<_924.length&&obj);
return (obj!=dj_global)?obj:null;
};
dojo.lang.doesObjectExist=function(str){
var _928=str.split("."),i=0,obj=dj_global;
do{
obj=obj[_928[i++]];
}while(i<_928.length&&obj);
return (obj&&obj!=dj_global);
};
dojo.provide("dojo.lang.assert");
dojo.lang.assert=function(_92b,_92c){
if(!_92b){
var _92d="An assert statement failed.\n"+"The method dojo.lang.assert() was called with a 'false' value.\n";
if(_92c){
_92d+="Here's the assert message:\n"+_92c+"\n";
}
throw new Error(_92d);
}
};
dojo.lang.assertType=function(_92e,type,_930){
if(dojo.lang.isString(_930)){
dojo.deprecated("dojo.lang.assertType(value, type, \"message\")","use dojo.lang.assertType(value, type) instead","0.5");
}
if(!dojo.lang.isOfType(_92e,type,_930)){
if(!dojo.lang.assertType._errorMessage){
dojo.lang.assertType._errorMessage="Type mismatch: dojo.lang.assertType() failed.";
}
dojo.lang.assert(false,dojo.lang.assertType._errorMessage);
}
};
dojo.lang.assertValidKeywords=function(_931,_932,_933){
var key;
if(!_933){
if(!dojo.lang.assertValidKeywords._errorMessage){
dojo.lang.assertValidKeywords._errorMessage="In dojo.lang.assertValidKeywords(), found invalid keyword:";
}
_933=dojo.lang.assertValidKeywords._errorMessage;
}
if(dojo.lang.isArray(_932)){
for(key in _931){
if(!dojo.lang.inArray(_932,key)){
dojo.lang.assert(false,_933+" "+key);
}
}
}else{
for(key in _931){
if(!(key in _932)){
dojo.lang.assert(false,_933+" "+key);
}
}
}
};
dojo.provide("dojo.AdapterRegistry");
dojo.AdapterRegistry=function(_935){
this.pairs=[];
this.returnWrappers=_935||false;
};
dojo.lang.extend(dojo.AdapterRegistry,{register:function(name,_937,wrap,_939,_93a){
var type=(_93a)?"unshift":"push";
this.pairs[type]([name,_937,wrap,_939]);
},match:function(){
for(var i=0;i<this.pairs.length;i++){
var pair=this.pairs[i];
if(pair[1].apply(this,arguments)){
if((pair[3])||(this.returnWrappers)){
return pair[2];
}else{
return pair[2].apply(this,arguments);
}
}
}
throw new Error("No match found");
},unregister:function(name){
for(var i=0;i<this.pairs.length;i++){
var pair=this.pairs[i];
if(pair[0]==name){
this.pairs.splice(i,1);
return true;
}
}
return false;
}});
dojo.provide("dojo.lang.repr");
dojo.lang.reprRegistry=new dojo.AdapterRegistry();
dojo.lang.registerRepr=function(name,_942,wrap,_944){
dojo.lang.reprRegistry.register(name,_942,wrap,_944);
};
dojo.lang.repr=function(obj){
if(typeof (obj)=="undefined"){
return "undefined";
}else{
if(obj===null){
return "null";
}
}
try{
if(typeof (obj["__repr__"])=="function"){
return obj["__repr__"]();
}else{
if((typeof (obj["repr"])=="function")&&(obj.repr!=arguments.callee)){
return obj["repr"]();
}
}
return dojo.lang.reprRegistry.match(obj);
}
catch(e){
if(typeof (obj.NAME)=="string"&&(obj.toString==Function.prototype.toString||obj.toString==Object.prototype.toString)){
return obj.NAME;
}
}
if(typeof (obj)=="function"){
obj=(obj+"").replace(/^\s+/,"");
var idx=obj.indexOf("{");
if(idx!=-1){
obj=obj.substr(0,idx)+"{...}";
}
}
return obj+"";
};
dojo.lang.reprArrayLike=function(arr){
try{
var na=dojo.lang.map(arr,dojo.lang.repr);
return "["+na.join(", ")+"]";
}
catch(e){
}
};
(function(){
var m=dojo.lang;
m.registerRepr("arrayLike",m.isArrayLike,m.reprArrayLike);
m.registerRepr("string",m.isString,m.reprString);
m.registerRepr("numbers",m.isNumber,m.reprNumber);
m.registerRepr("boolean",m.isBoolean,m.reprNumber);
})();
dojo.provide("dojo.lang.*");
dojo.provide("dojo.html.iframe");
dojo.html.iframeContentWindow=function(_94a){
var win=dojo.html.getDocumentWindow(dojo.html.iframeContentDocument(_94a))||dojo.html.iframeContentDocument(_94a).__parent__||(_94a.name&&document.frames[_94a.name])||null;
return win;
};
dojo.html.iframeContentDocument=function(_94c){
var doc=_94c.contentDocument||((_94c.contentWindow)&&(_94c.contentWindow.document))||((_94c.name)&&(document.frames[_94c.name])&&(document.frames[_94c.name].document))||null;
return doc;
};
dojo.html.BackgroundIframe=function(node){
if(dojo.render.html.ie55||dojo.render.html.ie60){
var html="<iframe src='javascript:false'"+" style='position: absolute; left: 0px; top: 0px; width: 100%; height: 100%;"+"z-index: -1; filter:Alpha(Opacity=\"0\");' "+">";
this.iframe=dojo.doc().createElement(html);
this.iframe.tabIndex=-1;
if(node){
node.appendChild(this.iframe);
this.domNode=node;
}else{
dojo.body().appendChild(this.iframe);
this.iframe.style.display="none";
}
}
};
dojo.lang.extend(dojo.html.BackgroundIframe,{iframe:null,onResized:function(){
if(this.iframe&&this.domNode&&this.domNode.parentNode){
var _950=dojo.html.getMarginBox(this.domNode);
if(_950.width==0||_950.height==0){
dojo.lang.setTimeout(this,this.onResized,100);
return;
}
this.iframe.style.width=_950.width+"px";
this.iframe.style.height=_950.height+"px";
}
},size:function(node){
if(!this.iframe){
return;
}
var _952=dojo.html.toCoordinateObject(node,true,dojo.html.boxSizing.BORDER_BOX);
with(this.iframe.style){
width=_952.width+"px";
height=_952.height+"px";
left=_952.left+"px";
top=_952.top+"px";
}
},setZIndex:function(node){
if(!this.iframe){
return;
}
if(dojo.dom.isNode(node)){
this.iframe.style.zIndex=dojo.html.getStyle(node,"z-index")-1;
}else{
if(!isNaN(node)){
this.iframe.style.zIndex=node;
}
}
},show:function(){
if(this.iframe){
this.iframe.style.display="block";
}
},hide:function(){
if(this.iframe){
this.iframe.style.display="none";
}
},remove:function(){
if(this.iframe){
dojo.html.removeNode(this.iframe,true);
delete this.iframe;
this.iframe=null;
}
}});
dojo.provide("dojo.widget.PopupContainer");
dojo.declare("dojo.widget.PopupContainerBase",null,function(){
this.queueOnAnimationFinish=[];
},{isContainer:true,templateString:"<div dojoAttachPoint=\"containerNode\" style=\"display:none;position:absolute;\" class=\"dojoPopupContainer\" ></div>",isShowingNow:false,currentSubpopup:null,beginZIndex:1000,parentPopup:null,parent:null,popupIndex:0,aroundBox:dojo.html.boxSizing.BORDER_BOX,openedForWindow:null,processKey:function(evt){
return false;
},applyPopupBasicStyle:function(){
with(this.domNode.style){
display="none";
position="absolute";
}
},aboutToShow:function(){
},open:function(x,y,_957,_958,_959,_95a){
if(this.isShowingNow){
return;
}
if(this.animationInProgress){
this.queueOnAnimationFinish.push(this.open,arguments);
return;
}
this.aboutToShow();
var _95b=false,node,_95d;
if(typeof x=="object"){
node=x;
_95d=_958;
_958=_957;
_957=y;
_95b=true;
}
this.parent=_957;
dojo.body().appendChild(this.domNode);
_958=_958||_957["domNode"]||[];
var _95e=null;
this.isTopLevel=true;
while(_957){
if(_957!==this&&(_957.setOpenedSubpopup!=undefined&&_957.applyPopupBasicStyle!=undefined)){
_95e=_957;
this.isTopLevel=false;
_95e.setOpenedSubpopup(this);
break;
}
_957=_957.parent;
}
this.parentPopup=_95e;
this.popupIndex=_95e?_95e.popupIndex+1:1;
if(this.isTopLevel){
var _95f=dojo.html.isNode(_958)?_958:null;
dojo.widget.PopupManager.opened(this,_95f);
}
if(this.isTopLevel&&!dojo.withGlobal(this.openedForWindow||dojo.global(),dojo.html.selection.isCollapsed)){
this._bookmark=dojo.withGlobal(this.openedForWindow||dojo.global(),dojo.html.selection.getBookmark);
}else{
this._bookmark=null;
}
if(_958 instanceof Array){
_958={left:_958[0],top:_958[1],width:0,height:0};
}
with(this.domNode.style){
display="";
zIndex=this.beginZIndex+this.popupIndex;
}
if(_95b){
this.move(node,_95a,_95d);
}else{
this.move(x,y,_95a,_959);
}
this.domNode.style.display="none";
this.explodeSrc=_958;
this.show();
this.isShowingNow=true;
},move:function(x,y,_962,_963){
var _964=(typeof x=="object");
if(_964){
var _965=_962;
var node=x;
_962=y;
if(!_965){
_965={"BL":"TL","TL":"BL"};
}
dojo.html.placeOnScreenAroundElement(this.domNode,node,_962,this.aroundBox,_965);
}else{
if(!_963){
_963="TL,TR,BL,BR";
}
dojo.html.placeOnScreen(this.domNode,x,y,_962,true,_963);
}
},close:function(_967){
if(_967){
this.domNode.style.display="none";
}
if(this.animationInProgress){
this.queueOnAnimationFinish.push(this.close,[]);
return;
}
this.closeSubpopup(_967);
this.hide();
if(this.bgIframe){
this.bgIframe.hide();
this.bgIframe.size({left:0,top:0,width:0,height:0});
}
if(this.isTopLevel){
dojo.widget.PopupManager.closed(this);
}
this.isShowingNow=false;
if(this.parent){
setTimeout(dojo.lang.hitch(this,function(){
try{
if(this.parent["focus"]){
this.parent.focus();
}else{
this.parent.domNode.focus();
}
}
catch(e){
dojo.debug("No idea how to focus to parent",e);
}
}),10);
}
if(this._bookmark&&dojo.withGlobal(this.openedForWindow||dojo.global(),dojo.html.selection.isCollapsed)){
if(this.openedForWindow){
this.openedForWindow.focus();
}
try{
dojo.withGlobal(this.openedForWindow||dojo.global(),"moveToBookmark",dojo.html.selection,[this._bookmark]);
}
catch(e){
}
}
this._bookmark=null;
},closeAll:function(_968){
if(this.parentPopup){
this.parentPopup.closeAll(_968);
}else{
this.close(_968);
}
},setOpenedSubpopup:function(_969){
this.currentSubpopup=_969;
},closeSubpopup:function(_96a){
if(this.currentSubpopup==null){
return;
}
this.currentSubpopup.close(_96a);
this.currentSubpopup=null;
},onShow:function(){
dojo.widget.PopupContainer.superclass.onShow.apply(this,arguments);
this.openedSize={w:this.domNode.style.width,h:this.domNode.style.height};
if(dojo.render.html.ie){
if(!this.bgIframe){
this.bgIframe=new dojo.html.BackgroundIframe();
this.bgIframe.setZIndex(this.domNode);
}
this.bgIframe.size(this.domNode);
this.bgIframe.show();
}
this.processQueue();
},processQueue:function(){
if(!this.queueOnAnimationFinish.length){
return;
}
var func=this.queueOnAnimationFinish.shift();
var args=this.queueOnAnimationFinish.shift();
func.apply(this,args);
},onHide:function(){
dojo.widget.HtmlWidget.prototype.onHide.call(this);
if(this.openedSize){
with(this.domNode.style){
width=this.openedSize.w;
height=this.openedSize.h;
}
}
this.processQueue();
}});
dojo.widget.defineWidget("dojo.widget.PopupContainer",[dojo.widget.HtmlWidget,dojo.widget.PopupContainerBase],{});
dojo.widget.PopupManager=new function(){
this.currentMenu=null;
this.currentButton=null;
this.currentFocusMenu=null;
this.focusNode=null;
this.registeredWindows=[];
this.registerWin=function(win){
if(!win.__PopupManagerRegistered){
dojo.event.connect(win.document,"onmousedown",this,"onClick");
dojo.event.connect(win,"onscroll",this,"onClick");
dojo.event.connect(win.document,"onkey",this,"onKey");
win.__PopupManagerRegistered=true;
this.registeredWindows.push(win);
}
};
this.registerAllWindows=function(_96e){
if(!_96e){
_96e=dojo.html.getDocumentWindow(window.top&&window.top.document||window.document);
}
this.registerWin(_96e);
for(var i=0;i<_96e.frames.length;i++){
try{
var win=dojo.html.getDocumentWindow(_96e.frames[i].document);
if(win){
this.registerAllWindows(win);
}
}
catch(e){
}
}
};
this.unRegisterWin=function(win){
if(win.__PopupManagerRegistered){
dojo.event.disconnect(win.document,"onmousedown",this,"onClick");
dojo.event.disconnect(win,"onscroll",this,"onClick");
dojo.event.disconnect(win.document,"onkey",this,"onKey");
win.__PopupManagerRegistered=false;
}
};
this.unRegisterAllWindows=function(){
for(var i=0;i<this.registeredWindows.length;++i){
this.unRegisterWin(this.registeredWindows[i]);
}
this.registeredWindows=[];
};
dojo.addOnLoad(this,"registerAllWindows");
dojo.addOnUnload(this,"unRegisterAllWindows");
this.closed=function(menu){
if(this.currentMenu==menu){
this.currentMenu=null;
this.currentButton=null;
this.currentFocusMenu=null;
}
};
this.opened=function(menu,_975){
if(menu==this.currentMenu){
return;
}
if(this.currentMenu){
this.currentMenu.close();
}
this.currentMenu=menu;
this.currentFocusMenu=menu;
this.currentButton=_975;
};
this.setFocusedMenu=function(menu){
this.currentFocusMenu=menu;
};
this.onKey=function(e){
if(!e.key){
return;
}
if(!this.currentMenu||!this.currentMenu.isShowingNow){
return;
}
var m=this.currentFocusMenu;
while(m){
if(m.processKey(e)){
e.preventDefault();
e.stopPropagation();
break;
}
m=m.parentPopup;
}
},this.onClick=function(e){
if(!this.currentMenu){
return;
}
var _97a=dojo.html.getScroll().offset;
var m=this.currentMenu;
while(m){
if(dojo.html.overElement(m.domNode,e)||dojo.html.isDescendantOf(e.target,m.domNode)){
return;
}
m=m.currentSubpopup;
}
if(this.currentButton&&dojo.html.overElement(this.currentButton,e)){
return;
}
this.currentMenu.close();
};
};
dojo.provide("dojo.widget.ColorPalette");
dojo.widget.defineWidget("dojo.widget.ColorPalette",dojo.widget.HtmlWidget,{palette:"7x10",_palettes:{"7x10":[["fff","fcc","fc9","ff9","ffc","9f9","9ff","cff","ccf","fcf"],["ccc","f66","f96","ff6","ff3","6f9","3ff","6ff","99f","f9f"],["c0c0c0","f00","f90","fc6","ff0","3f3","6cc","3cf","66c","c6c"],["999","c00","f60","fc3","fc0","3c0","0cc","36f","63f","c3c"],["666","900","c60","c93","990","090","399","33f","60c","939"],["333","600","930","963","660","060","366","009","339","636"],["000","300","630","633","330","030","033","006","309","303"]],"3x4":[["ffffff","00ff00","008000","0000ff"],["c0c0c0","ffff00","ff00ff","000080"],["808080","ff0000","800080","000000"]]},buildRendering:function(){
this.domNode=document.createElement("table");
dojo.html.disableSelection(this.domNode);
dojo.event.connect(this.domNode,"onmousedown",function(e){
e.preventDefault();
});
with(this.domNode){
cellPadding="0";
cellSpacing="1";
border="1";
style.backgroundColor="white";
}
var _97d=this._palettes[this.palette];
for(var i=0;i<_97d.length;i++){
var tr=this.domNode.insertRow(-1);
for(var j=0;j<_97d[i].length;j++){
if(_97d[i][j].length==3){
_97d[i][j]=_97d[i][j].replace(/(.)(.)(.)/,"$1$1$2$2$3$3");
}
var td=tr.insertCell(-1);
with(td.style){
backgroundColor="#"+_97d[i][j];
border="1px solid gray";
width=height="15px";
fontSize="1px";
}
td.color="#"+_97d[i][j];
td.onmouseover=function(e){
this.style.borderColor="white";
};
td.onmouseout=function(e){
this.style.borderColor="gray";
};
dojo.event.connect(td,"onmousedown",this,"onClick");
td.innerHTML="&nbsp;";
}
}
},onClick:function(e){
this.onColorSelect(e.currentTarget.color);
e.currentTarget.style.borderColor="gray";
},onColorSelect:function(_985){
}});
dojo.provide("dojo.widget.ContentPane");
dojo.widget.defineWidget("dojo.widget.ContentPane",dojo.widget.HtmlWidget,function(){
this._styleNodes=[];
this._onLoadStack=[];
this._onUnloadStack=[];
this._callOnUnload=false;
this._ioBindObj;
this.scriptScope;
this.bindArgs={};
},{isContainer:true,adjustPaths:true,href:"",extractContent:true,parseContent:true,cacheContent:true,preload:false,refreshOnShow:false,handler:"",executeScripts:false,scriptSeparation:true,loadingMessage:"Loading...",isLoaded:false,postCreate:function(args,frag,_988){
if(this.handler!==""){
this.setHandler(this.handler);
}
if(this.isShowing()||this.preload){
this.loadContents();
}
},show:function(){
if(this.refreshOnShow){
this.refresh();
}else{
this.loadContents();
}
dojo.widget.ContentPane.superclass.show.call(this);
},refresh:function(){
this.isLoaded=false;
this.loadContents();
},loadContents:function(){
if(this.isLoaded){
return;
}
if(dojo.lang.isFunction(this.handler)){
this._runHandler();
}else{
if(this.href!=""){
this._downloadExternalContent(this.href,this.cacheContent&&!this.refreshOnShow);
}
}
},setUrl:function(url){
this.href=url;
this.isLoaded=false;
if(this.preload||this.isShowing()){
this.loadContents();
}
},abort:function(){
var bind=this._ioBindObj;
if(!bind||!bind.abort){
return;
}
bind.abort();
delete this._ioBindObj;
},_downloadExternalContent:function(url,_98c){
this.abort();
this._handleDefaults(this.loadingMessage,"onDownloadStart");
var self=this;
this._ioBindObj=dojo.io.bind(this._cacheSetting({url:url,mimetype:"text/html",handler:function(type,data,xhr){
delete self._ioBindObj;
if(type=="load"){
self.onDownloadEnd.call(self,url,data);
}else{
var e={responseText:xhr.responseText,status:xhr.status,statusText:xhr.statusText,responseHeaders:xhr.getAllResponseHeaders(),text:"Error loading '"+url+"' ("+xhr.status+" "+xhr.statusText+")"};
self._handleDefaults.call(self,e,"onDownloadError");
self.onLoad();
}
}},_98c));
},_cacheSetting:function(_992,_993){
for(var x in this.bindArgs){
if(dojo.lang.isUndefined(_992[x])){
_992[x]=this.bindArgs[x];
}
}
if(dojo.lang.isUndefined(_992.useCache)){
_992.useCache=_993;
}
if(dojo.lang.isUndefined(_992.preventCache)){
_992.preventCache=!_993;
}
if(dojo.lang.isUndefined(_992.mimetype)){
_992.mimetype="text/html";
}
return _992;
},onLoad:function(e){
this._runStack("_onLoadStack");
this.isLoaded=true;
},onUnLoad:function(e){
dojo.deprecated(this.widgetType+".onUnLoad, use .onUnload (lowercased load)",0.5);
},onUnload:function(e){
this._runStack("_onUnloadStack");
delete this.scriptScope;
if(this.onUnLoad!==dojo.widget.ContentPane.prototype.onUnLoad){
this.onUnLoad.apply(this,arguments);
}
},_runStack:function(_998){
var st=this[_998];
var err="";
var _99b=this.scriptScope||window;
for(var i=0;i<st.length;i++){
try{
st[i].call(_99b);
}
catch(e){
err+="\n"+st[i]+" failed: "+e.description;
}
}
this[_998]=[];
if(err.length){
var name=(_998=="_onLoadStack")?"addOnLoad":"addOnUnLoad";
this._handleDefaults(name+" failure\n "+err,"onExecError","debug");
}
},addOnLoad:function(obj,func){
this._pushOnStack(this._onLoadStack,obj,func);
},addOnUnload:function(obj,func){
this._pushOnStack(this._onUnloadStack,obj,func);
},addOnUnLoad:function(){
dojo.deprecated(this.widgetType+".addOnUnLoad, use addOnUnload instead. (lowercased Load)",0.5);
this.addOnUnload.apply(this,arguments);
},_pushOnStack:function(_9a2,obj,func){
if(typeof func=="undefined"){
_9a2.push(obj);
}else{
_9a2.push(function(){
obj[func]();
});
}
},destroy:function(){
this.onUnload();
dojo.widget.ContentPane.superclass.destroy.call(this);
},onExecError:function(e){
},onContentError:function(e){
},onDownloadError:function(e){
},onDownloadStart:function(e){
},onDownloadEnd:function(url,data){
data=this.splitAndFixPaths(data,url);
this.setContent(data);
},_handleDefaults:function(e,_9ac,_9ad){
if(!_9ac){
_9ac="onContentError";
}
if(dojo.lang.isString(e)){
e={text:e};
}
if(!e.text){
e.text=e.toString();
}
e.toString=function(){
return this.text;
};
if(typeof e.returnValue!="boolean"){
e.returnValue=true;
}
if(typeof e.preventDefault!="function"){
e.preventDefault=function(){
this.returnValue=false;
};
}
this[_9ac](e);
if(e.returnValue){
switch(_9ad){
case true:
case "alert":
alert(e.toString());
break;
case "debug":
dojo.debug(e.toString());
break;
default:
if(this._callOnUnload){
this.onUnload();
}
this._callOnUnload=false;
if(arguments.callee._loopStop){
dojo.debug(e.toString());
}else{
arguments.callee._loopStop=true;
this._setContent(e.toString());
}
}
}
arguments.callee._loopStop=false;
},splitAndFixPaths:function(s,url){
var _9b0=[],_9b1=[],tmp=[];
var _9b3=[],_9b4=[],attr=[],_9b6=[];
var str="",path="",fix="",_9ba="",tag="",_9bc="";
if(!url){
url="./";
}
if(s){
var _9bd=/<title[^>]*>([\s\S]*?)<\/title>/i;
while(_9b3=_9bd.exec(s)){
_9b0.push(_9b3[1]);
s=s.substring(0,_9b3.index)+s.substr(_9b3.index+_9b3[0].length);
}
if(this.adjustPaths){
var _9be=/<[a-z][a-z0-9]*[^>]*\s(?:(?:src|href|style)=[^>])+[^>]*>/i;
var _9bf=/\s(src|href|style)=(['"]?)([\w()\[\]\/.,\\'"-:;#=&?\s@]+?)\2/i;
var _9c0=/^(?:[#]|(?:(?:https?|ftps?|file|javascript|mailto|news):))/;
while(tag=_9be.exec(s)){
str+=s.substring(0,tag.index);
s=s.substring((tag.index+tag[0].length),s.length);
tag=tag[0];
_9ba="";
while(attr=_9bf.exec(tag)){
path="";
_9bc=attr[3];
switch(attr[1].toLowerCase()){
case "src":
case "href":
if(_9c0.exec(_9bc)){
path=_9bc;
}else{
path=(new dojo.uri.Uri(url,_9bc).toString());
}
break;
case "style":
path=dojo.html.fixPathsInCssText(_9bc,url);
break;
default:
path=_9bc;
}
fix=" "+attr[1]+"="+attr[2]+path+attr[2];
_9ba+=tag.substring(0,attr.index)+fix;
tag=tag.substring((attr.index+attr[0].length),tag.length);
}
str+=_9ba+tag;
}
s=str+s;
}
_9bd=/(?:<(style)[^>]*>([\s\S]*?)<\/style>|<link ([^>]*rel=['"]?stylesheet['"]?[^>]*)>)/i;
while(_9b3=_9bd.exec(s)){
if(_9b3[1]&&_9b3[1].toLowerCase()=="style"){
_9b6.push(dojo.html.fixPathsInCssText(_9b3[2],url));
}else{
if(attr=_9b3[3].match(/href=(['"]?)([^'">]*)\1/i)){
_9b6.push({path:attr[2]});
}
}
s=s.substring(0,_9b3.index)+s.substr(_9b3.index+_9b3[0].length);
}
var _9bd=/<script([^>]*)>([\s\S]*?)<\/script>/i;
var _9c1=/src=(['"]?)([^"']*)\1/i;
var _9c2=/.*(\bdojo\b\.js(?:\.uncompressed\.js)?)$/;
var _9c3=/(?:var )?\bdjConfig\b(?:[\s]*=[\s]*\{[^}]+\}|\.[\w]*[\s]*=[\s]*[^;\n]*)?;?|dojo\.hostenv\.writeIncludes\(\s*\);?/g;
var _9c4=/dojo\.(?:(?:require(?:After)?(?:If)?)|(?:widget\.(?:manager\.)?registerWidgetPackage)|(?:(?:hostenv\.)?setModulePrefix|registerModulePath)|defineNamespace)\((['"]).*?\1\)\s*;?/;
while(_9b3=_9bd.exec(s)){
if(this.executeScripts&&_9b3[1]){
if(attr=_9c1.exec(_9b3[1])){
if(_9c2.exec(attr[2])){
dojo.debug("Security note! inhibit:"+attr[2]+" from  being loaded again.");
}else{
_9b1.push({path:attr[2]});
}
}
}
if(_9b3[2]){
var sc=_9b3[2].replace(_9c3,"");
if(!sc){
continue;
}
while(tmp=_9c4.exec(sc)){
_9b4.push(tmp[0]);
sc=sc.substring(0,tmp.index)+sc.substr(tmp.index+tmp[0].length);
}
if(this.executeScripts){
_9b1.push(sc);
}
}
s=s.substr(0,_9b3.index)+s.substr(_9b3.index+_9b3[0].length);
}
if(this.extractContent){
_9b3=s.match(/<body[^>]*>\s*([\s\S]+)\s*<\/body>/im);
if(_9b3){
s=_9b3[1];
}
}
if(this.executeScripts&&this.scriptSeparation){
var _9bd=/(<[a-zA-Z][a-zA-Z0-9]*\s[^>]*?\S=)((['"])[^>]*scriptScope[^>]*>)/;
var _9c6=/([\s'";:\(])scriptScope(.*)/;
str="";
while(tag=_9bd.exec(s)){
tmp=((tag[3]=="'")?"\"":"'");
fix="";
str+=s.substring(0,tag.index)+tag[1];
while(attr=_9c6.exec(tag[2])){
tag[2]=tag[2].substring(0,attr.index)+attr[1]+"dojo.widget.byId("+tmp+this.widgetId+tmp+").scriptScope"+attr[2];
}
str+=tag[2];
s=s.substr(tag.index+tag[0].length);
}
s=str+s;
}
}
return {"xml":s,"styles":_9b6,"titles":_9b0,"requires":_9b4,"scripts":_9b1,"url":url};
},_setContent:function(cont){
this.destroyChildren();
for(var i=0;i<this._styleNodes.length;i++){
if(this._styleNodes[i]&&this._styleNodes[i].parentNode){
this._styleNodes[i].parentNode.removeChild(this._styleNodes[i]);
}
}
this._styleNodes=[];
try{
var node=this.containerNode||this.domNode;
while(node.firstChild){
dojo.html.destroyNode(node.firstChild);
}
if(typeof cont!="string"){
node.appendChild(cont);
}else{
node.innerHTML=cont;
}
}
catch(e){
e.text="Couldn't load content:"+e.description;
this._handleDefaults(e,"onContentError");
}
},setContent:function(data){
this.abort();
if(this._callOnUnload){
this.onUnload();
}
this._callOnUnload=true;
if(!data||dojo.html.isNode(data)){
this._setContent(data);
this.onResized();
this.onLoad();
}else{
if(typeof data.xml!="string"){
this.href="";
data=this.splitAndFixPaths(data);
}
this._setContent(data.xml);
for(var i=0;i<data.styles.length;i++){
if(data.styles[i].path){
this._styleNodes.push(dojo.html.insertCssFile(data.styles[i].path,dojo.doc(),false,true));
}else{
this._styleNodes.push(dojo.html.insertCssText(data.styles[i]));
}
}
if(this.parseContent){
for(var i=0;i<data.requires.length;i++){
try{
eval(data.requires[i]);
}
catch(e){
e.text="ContentPane: error in package loading calls, "+(e.description||e);
this._handleDefaults(e,"onContentError","debug");
}
}
}
var _9cc=this;
function asyncParse(){
if(_9cc.executeScripts){
_9cc._executeScripts(data.scripts);
}
if(_9cc.parseContent){
var node=_9cc.containerNode||_9cc.domNode;
var _9ce=new dojo.xml.Parse();
var frag=_9ce.parseElement(node,null,true);
dojo.widget.getParser().createSubComponents(frag,_9cc);
}
_9cc.onResized();
_9cc.onLoad();
}
if(dojo.hostenv.isXDomain&&data.requires.length){
dojo.addOnLoad(asyncParse);
}else{
asyncParse();
}
}
},setHandler:function(_9d0){
var fcn=dojo.lang.isFunction(_9d0)?_9d0:window[_9d0];
if(!dojo.lang.isFunction(fcn)){
this._handleDefaults("Unable to set handler, '"+_9d0+"' not a function.","onExecError",true);
return;
}
this.handler=function(){
return fcn.apply(this,arguments);
};
},_runHandler:function(){
var ret=true;
if(dojo.lang.isFunction(this.handler)){
this.handler(this,this.domNode);
ret=false;
}
this.onLoad();
return ret;
},_executeScripts:function(_9d3){
var self=this;
var tmp="",code="";
for(var i=0;i<_9d3.length;i++){
if(_9d3[i].path){
dojo.io.bind(this._cacheSetting({"url":_9d3[i].path,"load":function(type,_9d9){
dojo.lang.hitch(self,tmp=";"+_9d9);
},"error":function(type,_9db){
_9db.text=type+" downloading remote script";
self._handleDefaults.call(self,_9db,"onExecError","debug");
},"mimetype":"text/plain","sync":true},this.cacheContent));
code+=tmp;
}else{
code+=_9d3[i];
}
}
try{
if(this.scriptSeparation){
delete this.scriptScope;
this.scriptScope=new (new Function("_container_",code+"; return this;"))(self);
}else{
var djg=dojo.global();
if(djg.execScript){
djg.execScript(code);
}else{
var djd=dojo.doc();
var sc=djd.createElement("script");
sc.appendChild(djd.createTextNode(code));
(this.containerNode||this.domNode).appendChild(sc);
}
}
}
catch(e){
e.text="Error running scripts from content:\n"+e.description;
this._handleDefaults(e,"onExecError","debug");
}
}});
dojo.provide("dojo.widget.Editor2Toolbar");
dojo.lang.declare("dojo.widget.HandlerManager",null,function(){
this._registeredHandlers=[];
},{registerHandler:function(obj,func){
if(arguments.length==2){
this._registeredHandlers.push(function(){
return obj[func].apply(obj,arguments);
});
}else{
this._registeredHandlers.push(obj);
}
},removeHandler:function(func){
for(var i=0;i<this._registeredHandlers.length;i++){
if(func===this._registeredHandlers[i]){
delete this._registeredHandlers[i];
return;
}
}
dojo.debug("HandlerManager handler "+func+" is not registered, can not remove.");
},destroy:function(){
for(var i=0;i<this._registeredHandlers.length;i++){
delete this._registeredHandlers[i];
}
}});
dojo.widget.Editor2ToolbarItemManager=new dojo.widget.HandlerManager;
dojo.lang.mixin(dojo.widget.Editor2ToolbarItemManager,{getToolbarItem:function(name){
var item;
name=name.toLowerCase();
for(var i=0;i<this._registeredHandlers.length;i++){
item=this._registeredHandlers[i](name);
if(item){
return item;
}
}
switch(name){
case "bold":
case "copy":
case "cut":
case "delete":
case "indent":
case "inserthorizontalrule":
case "insertorderedlist":
case "insertunorderedlist":
case "italic":
case "justifycenter":
case "justifyfull":
case "justifyleft":
case "justifyright":
case "outdent":
case "paste":
case "redo":
case "removeformat":
case "selectall":
case "strikethrough":
case "subscript":
case "superscript":
case "underline":
case "undo":
case "unlink":
case "createlink":
case "insertimage":
case "htmltoggle":
item=new dojo.widget.Editor2ToolbarButton(name);
break;
case "forecolor":
case "hilitecolor":
item=new dojo.widget.Editor2ToolbarColorPaletteButton(name);
break;
case "plainformatblock":
item=new dojo.widget.Editor2ToolbarFormatBlockPlainSelect("formatblock");
break;
case "formatblock":
item=new dojo.widget.Editor2ToolbarFormatBlockSelect("formatblock");
break;
case "fontsize":
item=new dojo.widget.Editor2ToolbarFontSizeSelect("fontsize");
break;
case "fontname":
item=new dojo.widget.Editor2ToolbarFontNameSelect("fontname");
break;
case "inserttable":
case "insertcell":
case "insertcol":
case "insertrow":
case "deletecells":
case "deletecols":
case "deleterows":
case "mergecells":
case "splitcell":
dojo.debug(name+" is implemented in dojo.widget.Editor2Plugin.TableOperation, please require it first.");
break;
case "inserthtml":
case "blockdirltr":
case "blockdirrtl":
case "dirltr":
case "dirrtl":
case "inlinedirltr":
case "inlinedirrtl":
dojo.debug("Not yet implemented toolbar item: "+name);
break;
default:
dojo.debug("dojo.widget.Editor2ToolbarItemManager.getToolbarItem: Unknown toolbar item: "+name);
}
return item;
}});
dojo.addOnUnload(dojo.widget.Editor2ToolbarItemManager,"destroy");
dojo.declare("dojo.widget.Editor2ToolbarButton",null,function(name){
this._name=name;
},{create:function(node,_9e9,_9ea){
this._domNode=node;
var cmd=_9e9.parent.getCommand(this._name);
if(cmd){
this._domNode.title=cmd.getText();
}
this.disableSelection(this._domNode);
this._parentToolbar=_9e9;
dojo.event.connect(this._domNode,"onclick",this,"onClick");
if(!_9ea){
dojo.event.connect(this._domNode,"onmouseover",this,"onMouseOver");
dojo.event.connect(this._domNode,"onmouseout",this,"onMouseOut");
}
},disableSelection:function(_9ec){
dojo.html.disableSelection(_9ec);
var _9ed=_9ec.all||_9ec.getElementsByTagName("*");
for(var x=0;x<_9ed.length;x++){
dojo.html.disableSelection(_9ed[x]);
}
},onMouseOver:function(){
var _9ef=dojo.widget.Editor2Manager.getCurrentInstance();
if(_9ef){
var _9f0=_9ef.getCommand(this._name);
if(_9f0&&_9f0.getState()!=dojo.widget.Editor2Manager.commandState.Disabled){
this.highlightToolbarItem();
}
}
},onMouseOut:function(){
this.unhighlightToolbarItem();
},destroy:function(){
this._domNode=null;
this._parentToolbar=null;
},onClick:function(e){
if(this._domNode&&!this._domNode.disabled&&this._parentToolbar.checkAvailability()){
e.preventDefault();
e.stopPropagation();
var _9f2=dojo.widget.Editor2Manager.getCurrentInstance();
if(_9f2){
var _9f3=_9f2.getCommand(this._name);
if(_9f3){
_9f3.execute();
}
}
}
},refreshState:function(){
var _9f4=dojo.widget.Editor2Manager.getCurrentInstance();
var em=dojo.widget.Editor2Manager;
if(_9f4){
var _9f6=_9f4.getCommand(this._name);
if(_9f6){
var _9f7=_9f6.getState();
if(_9f7!=this._lastState){
switch(_9f7){
case em.commandState.Latched:
this.latchToolbarItem();
break;
case em.commandState.Enabled:
this.enableToolbarItem();
break;
case em.commandState.Disabled:
default:
this.disableToolbarItem();
}
this._lastState=_9f7;
}
}
}
return em.commandState.Enabled;
},latchToolbarItem:function(){
this._domNode.disabled=false;
this.removeToolbarItemStyle(this._domNode);
dojo.html.addClass(this._domNode,this._parentToolbar.ToolbarLatchedItemStyle);
},enableToolbarItem:function(){
this._domNode.disabled=false;
this.removeToolbarItemStyle(this._domNode);
dojo.html.addClass(this._domNode,this._parentToolbar.ToolbarEnabledItemStyle);
},disableToolbarItem:function(){
this._domNode.disabled=true;
this.removeToolbarItemStyle(this._domNode);
dojo.html.addClass(this._domNode,this._parentToolbar.ToolbarDisabledItemStyle);
},highlightToolbarItem:function(){
dojo.html.addClass(this._domNode,this._parentToolbar.ToolbarHighlightedItemStyle);
},unhighlightToolbarItem:function(){
dojo.html.removeClass(this._domNode,this._parentToolbar.ToolbarHighlightedItemStyle);
},removeToolbarItemStyle:function(){
dojo.html.removeClass(this._domNode,this._parentToolbar.ToolbarEnabledItemStyle);
dojo.html.removeClass(this._domNode,this._parentToolbar.ToolbarLatchedItemStyle);
dojo.html.removeClass(this._domNode,this._parentToolbar.ToolbarDisabledItemStyle);
this.unhighlightToolbarItem();
}});
dojo.declare("dojo.widget.Editor2ToolbarDropDownButton",dojo.widget.Editor2ToolbarButton,{onClick:function(){
if(this._domNode&&!this._domNode.disabled&&this._parentToolbar.checkAvailability()){
if(!this._dropdown){
this._dropdown=dojo.widget.createWidget("PopupContainer",{});
this._domNode.appendChild(this._dropdown.domNode);
}
if(this._dropdown.isShowingNow){
this._dropdown.close();
}else{
this.onDropDownShown();
this._dropdown.open(this._domNode,null,this._domNode);
}
}
},destroy:function(){
this.onDropDownDestroy();
if(this._dropdown){
this._dropdown.destroy();
}
dojo.widget.Editor2ToolbarDropDownButton.superclass.destroy.call(this);
},onDropDownShown:function(){
},onDropDownDestroy:function(){
}});
dojo.declare("dojo.widget.Editor2ToolbarColorPaletteButton",dojo.widget.Editor2ToolbarDropDownButton,{onDropDownShown:function(){
if(!this._colorpalette){
this._colorpalette=dojo.widget.createWidget("ColorPalette",{});
this._dropdown.addChild(this._colorpalette);
this.disableSelection(this._dropdown.domNode);
this.disableSelection(this._colorpalette.domNode);
dojo.event.connect(this._colorpalette,"onColorSelect",this,"setColor");
dojo.event.connect(this._dropdown,"open",this,"latchToolbarItem");
dojo.event.connect(this._dropdown,"close",this,"enableToolbarItem");
}
},setColor:function(_9f8){
this._dropdown.close();
var _9f9=dojo.widget.Editor2Manager.getCurrentInstance();
if(_9f9){
var _9fa=_9f9.getCommand(this._name);
if(_9fa){
_9fa.execute(_9f8);
}
}
}});
dojo.declare("dojo.widget.Editor2ToolbarFormatBlockPlainSelect",dojo.widget.Editor2ToolbarButton,{create:function(node,_9fc){
this._domNode=node;
this._parentToolbar=_9fc;
this._domNode=node;
this.disableSelection(this._domNode);
dojo.event.connect(this._domNode,"onchange",this,"onChange");
},destroy:function(){
this._domNode=null;
},onChange:function(){
if(this._parentToolbar.checkAvailability()){
var sv=this._domNode.value.toLowerCase();
var _9fe=dojo.widget.Editor2Manager.getCurrentInstance();
if(_9fe){
var _9ff=_9fe.getCommand(this._name);
if(_9ff){
_9ff.execute(sv);
}
}
}
},refreshState:function(){
if(this._domNode){
dojo.widget.Editor2ToolbarFormatBlockPlainSelect.superclass.refreshState.call(this);
var _a00=dojo.widget.Editor2Manager.getCurrentInstance();
if(_a00){
var _a01=_a00.getCommand(this._name);
if(_a01){
var _a02=_a01.getValue();
if(!_a02){
_a02="";
}
dojo.lang.forEach(this._domNode.options,function(item){
if(item.value.toLowerCase()==_a02.toLowerCase()){
item.selected=true;
}
});
}
}
}
}});
dojo.declare("dojo.widget.Editor2ToolbarComboItem",dojo.widget.Editor2ToolbarDropDownButton,{href:null,create:function(node,_a05){
dojo.widget.Editor2ToolbarComboItem.superclass.create.apply(this,arguments);
if(!this._contentPane){
dojo.require("dojo.widget.ContentPane");
this._contentPane=dojo.widget.createWidget("ContentPane",{preload:"true"});
this._contentPane.addOnLoad(this,"setup");
this._contentPane.setUrl(this.href);
}
},onMouseOver:function(e){
if(this._lastState!=dojo.widget.Editor2Manager.commandState.Disabled){
dojo.html.addClass(e.currentTarget,this._parentToolbar.ToolbarHighlightedSelectStyle);
}
},onMouseOut:function(e){
dojo.html.removeClass(e.currentTarget,this._parentToolbar.ToolbarHighlightedSelectStyle);
},onDropDownShown:function(){
if(!this._dropdown.__addedContentPage){
this._dropdown.addChild(this._contentPane);
this._dropdown.__addedContentPage=true;
}
},setup:function(){
},onChange:function(e){
if(this._parentToolbar.checkAvailability()){
var name=e.currentTarget.getAttribute("dropDownItemName");
var _a0a=dojo.widget.Editor2Manager.getCurrentInstance();
if(_a0a){
var _a0b=_a0a.getCommand(this._name);
if(_a0b){
_a0b.execute(name);
}
}
}
this._dropdown.close();
},onMouseOverItem:function(e){
dojo.html.addClass(e.currentTarget,this._parentToolbar.ToolbarHighlightedSelectItemStyle);
},onMouseOutItem:function(e){
dojo.html.removeClass(e.currentTarget,this._parentToolbar.ToolbarHighlightedSelectItemStyle);
}});
dojo.declare("dojo.widget.Editor2ToolbarFormatBlockSelect",dojo.widget.Editor2ToolbarComboItem,{href:dojo.uri.dojoUri("src/widget/templates/Editor2/EditorToolbar_FormatBlock.html"),setup:function(){
dojo.widget.Editor2ToolbarFormatBlockSelect.superclass.setup.call(this);
var _a0e=this._contentPane.domNode.all||this._contentPane.domNode.getElementsByTagName("*");
this._blockNames={};
this._blockDisplayNames={};
for(var x=0;x<_a0e.length;x++){
var node=_a0e[x];
dojo.html.disableSelection(node);
var name=node.getAttribute("dropDownItemName");
if(name){
this._blockNames[name]=node;
var _a12=node.getElementsByTagName(name);
this._blockDisplayNames[name]=_a12[_a12.length-1].innerHTML;
}
}
for(var name in this._blockNames){
dojo.event.connect(this._blockNames[name],"onclick",this,"onChange");
dojo.event.connect(this._blockNames[name],"onmouseover",this,"onMouseOverItem");
dojo.event.connect(this._blockNames[name],"onmouseout",this,"onMouseOutItem");
}
},onDropDownDestroy:function(){
if(this._blockNames){
for(var name in this._blockNames){
delete this._blockNames[name];
delete this._blockDisplayNames[name];
}
}
},refreshState:function(){
dojo.widget.Editor2ToolbarFormatBlockSelect.superclass.refreshState.call(this);
if(this._lastState!=dojo.widget.Editor2Manager.commandState.Disabled){
var _a14=dojo.widget.Editor2Manager.getCurrentInstance();
if(_a14){
var _a15=_a14.getCommand(this._name);
if(_a15){
var _a16=_a15.getValue();
if(_a16==this._lastSelectedFormat&&this._blockDisplayNames){
return this._lastState;
}
this._lastSelectedFormat=_a16;
var _a17=this._domNode.getElementsByTagName("label")[0];
var _a18=false;
if(this._blockDisplayNames){
for(var name in this._blockDisplayNames){
if(name==_a16){
_a17.innerHTML=this._blockDisplayNames[name];
_a18=true;
break;
}
}
if(!_a18){
_a17.innerHTML="&nbsp;";
}
}
}
}
}
return this._lastState;
}});
dojo.declare("dojo.widget.Editor2ToolbarFontSizeSelect",dojo.widget.Editor2ToolbarComboItem,{href:dojo.uri.dojoUri("src/widget/templates/Editor2/EditorToolbar_FontSize.html"),setup:function(){
dojo.widget.Editor2ToolbarFormatBlockSelect.superclass.setup.call(this);
var _a1a=this._contentPane.domNode.all||this._contentPane.domNode.getElementsByTagName("*");
this._fontsizes={};
this._fontSizeDisplayNames={};
for(var x=0;x<_a1a.length;x++){
var node=_a1a[x];
dojo.html.disableSelection(node);
var name=node.getAttribute("dropDownItemName");
if(name){
this._fontsizes[name]=node;
this._fontSizeDisplayNames[name]=node.getElementsByTagName("font")[0].innerHTML;
}
}
for(var name in this._fontsizes){
dojo.event.connect(this._fontsizes[name],"onclick",this,"onChange");
dojo.event.connect(this._fontsizes[name],"onmouseover",this,"onMouseOverItem");
dojo.event.connect(this._fontsizes[name],"onmouseout",this,"onMouseOutItem");
}
},onDropDownDestroy:function(){
if(this._fontsizes){
for(var name in this._fontsizes){
delete this._fontsizes[name];
delete this._fontSizeDisplayNames[name];
}
}
},refreshState:function(){
dojo.widget.Editor2ToolbarFormatBlockSelect.superclass.refreshState.call(this);
if(this._lastState!=dojo.widget.Editor2Manager.commandState.Disabled){
var _a1f=dojo.widget.Editor2Manager.getCurrentInstance();
if(_a1f){
var _a20=_a1f.getCommand(this._name);
if(_a20){
var size=_a20.getValue();
if(size==this._lastSelectedSize&&this._fontSizeDisplayNames){
return this._lastState;
}
this._lastSelectedSize=size;
var _a22=this._domNode.getElementsByTagName("label")[0];
var _a23=false;
if(this._fontSizeDisplayNames){
for(var name in this._fontSizeDisplayNames){
if(name==size){
_a22.innerHTML=this._fontSizeDisplayNames[name];
_a23=true;
break;
}
}
if(!_a23){
_a22.innerHTML="&nbsp;";
}
}
}
}
}
return this._lastState;
}});
dojo.declare("dojo.widget.Editor2ToolbarFontNameSelect",dojo.widget.Editor2ToolbarFontSizeSelect,{href:dojo.uri.dojoUri("src/widget/templates/Editor2/EditorToolbar_FontName.html")});
dojo.widget.defineWidget("dojo.widget.Editor2Toolbar",dojo.widget.HtmlWidget,function(){
dojo.event.connect(this,"fillInTemplate",dojo.lang.hitch(this,function(){
if(dojo.render.html.ie){
this.domNode.style.zoom=1;
}
}));
},{templatePath:dojo.uri.dojoUri("src/widget/templates/EditorToolbar.html"),templateCssPath:dojo.uri.dojoUri("src/widget/templates/EditorToolbar.css"),ToolbarLatchedItemStyle:"ToolbarButtonLatched",ToolbarEnabledItemStyle:"ToolbarButtonEnabled",ToolbarDisabledItemStyle:"ToolbarButtonDisabled",ToolbarHighlightedItemStyle:"ToolbarButtonHighlighted",ToolbarHighlightedSelectStyle:"ToolbarSelectHighlighted",ToolbarHighlightedSelectItemStyle:"ToolbarSelectHighlightedItem",postCreate:function(){
var _a25=dojo.html.getElementsByClass("dojoEditorToolbarItem",this.domNode);
this.items={};
for(var x=0;x<_a25.length;x++){
var node=_a25[x];
var _a28=node.getAttribute("dojoETItemName");
if(_a28){
var item=dojo.widget.Editor2ToolbarItemManager.getToolbarItem(_a28);
if(item){
item.create(node,this);
this.items[_a28.toLowerCase()]=item;
}else{
node.style.display="none";
}
}
}
},update:function(){
for(var cmd in this.items){
this.items[cmd].refreshState();
}
},shareGroup:"",checkAvailability:function(){
if(!this.shareGroup){
this.parent.focus();
return true;
}
var _a2b=dojo.widget.Editor2Manager.getCurrentInstance();
if(this.shareGroup==_a2b.toolbarGroup){
return true;
}
return false;
},destroy:function(){
for(var it in this.items){
this.items[it].destroy();
delete this.items[it];
}
dojo.widget.Editor2Toolbar.superclass.destroy.call(this);
}});
dojo.provide("dojo.lfx.shadow");
dojo.lfx.shadow=function(node){
this.shadowPng=dojo.uri.dojoUri("src/html/images/shadow");
this.shadowThickness=8;
this.shadowOffset=15;
this.init(node);
};
dojo.extend(dojo.lfx.shadow,{init:function(node){
this.node=node;
this.pieces={};
var x1=-1*this.shadowThickness;
var y0=this.shadowOffset;
var y1=this.shadowOffset+this.shadowThickness;
this._makePiece("tl","top",y0,"left",x1);
this._makePiece("l","top",y1,"left",x1,"scale");
this._makePiece("tr","top",y0,"left",0);
this._makePiece("r","top",y1,"left",0,"scale");
this._makePiece("bl","top",0,"left",x1);
this._makePiece("b","top",0,"left",0,"crop");
this._makePiece("br","top",0,"left",0);
},_makePiece:function(name,_a33,_a34,_a35,_a36,_a37){
var img;
var url=this.shadowPng+name.toUpperCase()+".png";
if(dojo.render.html.ie55||dojo.render.html.ie60){
img=dojo.doc().createElement("div");
img.style.filter="progid:DXImageTransform.Microsoft.AlphaImageLoader(src='"+url+"'"+(_a37?", sizingMethod='"+_a37+"'":"")+")";
}else{
img=dojo.doc().createElement("img");
img.src=url;
}
img.style.position="absolute";
img.style[_a33]=_a34+"px";
img.style[_a35]=_a36+"px";
img.style.width=this.shadowThickness+"px";
img.style.height=this.shadowThickness+"px";
this.pieces[name]=img;
this.node.appendChild(img);
},size:function(_a3a,_a3b){
var _a3c=_a3b-(this.shadowOffset+this.shadowThickness+1);
if(_a3c<0){
_a3c=0;
}
if(_a3b<1){
_a3b=1;
}
if(_a3a<1){
_a3a=1;
}
with(this.pieces){
l.style.height=_a3c+"px";
r.style.height=_a3c+"px";
b.style.width=(_a3a-1)+"px";
bl.style.top=(_a3b-1)+"px";
b.style.top=(_a3b-1)+"px";
br.style.top=(_a3b-1)+"px";
tr.style.left=(_a3a-1)+"px";
r.style.left=(_a3a-1)+"px";
br.style.left=(_a3a-1)+"px";
}
}});
dojo.provide("dojo.widget.html.layout");
dojo.widget.html.layout=function(_a3d,_a3e,_a3f){
dojo.html.addClass(_a3d,"dojoLayoutContainer");
_a3e=dojo.lang.filter(_a3e,function(_a40,idx){
_a40.idx=idx;
return dojo.lang.inArray(["top","bottom","left","right","client","flood"],_a40.layoutAlign);
});
if(_a3f&&_a3f!="none"){
var rank=function(_a43){
switch(_a43.layoutAlign){
case "flood":
return 1;
case "left":
case "right":
return (_a3f=="left-right")?2:3;
case "top":
case "bottom":
return (_a3f=="left-right")?3:2;
default:
return 4;
}
};
_a3e.sort(function(a,b){
return (rank(a)-rank(b))||(a.idx-b.idx);
});
}
var f={top:dojo.html.getPixelValue(_a3d,"padding-top",true),left:dojo.html.getPixelValue(_a3d,"padding-left",true)};
dojo.lang.mixin(f,dojo.html.getContentBox(_a3d));
dojo.lang.forEach(_a3e,function(_a47){
var elm=_a47.domNode;
var pos=_a47.layoutAlign;
with(elm.style){
left=f.left+"px";
top=f.top+"px";
bottom="auto";
right="auto";
}
dojo.html.addClass(elm,"dojoAlign"+dojo.string.capitalize(pos));
if((pos=="top")||(pos=="bottom")){
dojo.html.setMarginBox(elm,{width:f.width});
var h=dojo.html.getMarginBox(elm).height;
f.height-=h;
if(pos=="top"){
f.top+=h;
}else{
elm.style.top=f.top+f.height+"px";
}
if(_a47.onResized){
_a47.onResized();
}
}else{
if(pos=="left"||pos=="right"){
var w=dojo.html.getMarginBox(elm).width;
if(_a47.resizeTo){
_a47.resizeTo(w,f.height);
}else{
dojo.html.setMarginBox(elm,{width:w,height:f.height});
}
f.width-=w;
if(pos=="left"){
f.left+=w;
}else{
elm.style.left=f.left+f.width+"px";
}
}else{
if(pos=="flood"||pos=="client"){
if(_a47.resizeTo){
_a47.resizeTo(f.width,f.height);
}else{
dojo.html.setMarginBox(elm,{width:f.width,height:f.height});
}
}
}
}
});
};
dojo.html.insertCssText(".dojoLayoutContainer{ position: relative; display: block; overflow: hidden; }\n"+"body .dojoAlignTop, body .dojoAlignBottom, body .dojoAlignLeft, body .dojoAlignRight { position: absolute; overflow: hidden; }\n"+"body .dojoAlignClient { position: absolute }\n"+".dojoAlignClient { overflow: auto; }\n");
dojo.provide("dojo.dnd.DragAndDrop");
dojo.declare("dojo.dnd.DragSource",null,{type:"",onDragEnd:function(evt){
},onDragStart:function(evt){
},onSelected:function(evt){
},unregister:function(){
dojo.dnd.dragManager.unregisterDragSource(this);
},reregister:function(){
dojo.dnd.dragManager.registerDragSource(this);
}});
dojo.declare("dojo.dnd.DragObject",null,{type:"",register:function(){
var dm=dojo.dnd.dragManager;
if(dm["registerDragObject"]){
dm.registerDragObject(this);
}
},onDragStart:function(evt){
},onDragMove:function(evt){
},onDragOver:function(evt){
},onDragOut:function(evt){
},onDragEnd:function(evt){
},onDragLeave:dojo.lang.forward("onDragOut"),onDragEnter:dojo.lang.forward("onDragOver"),ondragout:dojo.lang.forward("onDragOut"),ondragover:dojo.lang.forward("onDragOver")});
dojo.declare("dojo.dnd.DropTarget",null,{acceptsType:function(type){
if(!dojo.lang.inArray(this.acceptedTypes,"*")){
if(!dojo.lang.inArray(this.acceptedTypes,type)){
return false;
}
}
return true;
},accepts:function(_a56){
if(!dojo.lang.inArray(this.acceptedTypes,"*")){
for(var i=0;i<_a56.length;i++){
if(!dojo.lang.inArray(this.acceptedTypes,_a56[i].type)){
return false;
}
}
}
return true;
},unregister:function(){
dojo.dnd.dragManager.unregisterDropTarget(this);
},onDragOver:function(evt){
},onDragOut:function(evt){
},onDragMove:function(evt){
},onDropStart:function(evt){
},onDrop:function(evt){
},onDropEnd:function(){
}},function(){
this.acceptedTypes=[];
});
dojo.dnd.DragEvent=function(){
this.dragSource=null;
this.dragObject=null;
this.target=null;
this.eventStatus="success";
};
dojo.declare("dojo.dnd.DragManager",null,{selectedSources:[],dragObjects:[],dragSources:[],registerDragSource:function(_a5d){
},dropTargets:[],registerDropTarget:function(_a5e){
},lastDragTarget:null,currentDragTarget:null,onKeyDown:function(){
},onMouseOut:function(){
},onMouseMove:function(){
},onMouseUp:function(){
}});
dojo.provide("dojo.dnd.HtmlDragManager");
dojo.declare("dojo.dnd.HtmlDragManager",dojo.dnd.DragManager,{disabled:false,nestedTargets:false,mouseDownTimer:null,dsCounter:0,dsPrefix:"dojoDragSource",dropTargetDimensions:[],currentDropTarget:null,previousDropTarget:null,_dragTriggered:false,selectedSources:[],dragObjects:[],dragSources:[],currentX:null,currentY:null,lastX:null,lastY:null,mouseDownX:null,mouseDownY:null,threshold:7,dropAcceptable:false,cancelEvent:function(e){
e.stopPropagation();
e.preventDefault();
},registerDragSource:function(ds){
if(ds["domNode"]){
var dp=this.dsPrefix;
var _a62=dp+"Idx_"+(this.dsCounter++);
ds.dragSourceId=_a62;
this.dragSources[_a62]=ds;
ds.domNode.setAttribute(dp,_a62);
if(dojo.render.html.ie){
dojo.event.browser.addListener(ds.domNode,"ondragstart",this.cancelEvent);
}
}
},unregisterDragSource:function(ds){
if(ds["domNode"]){
var dp=this.dsPrefix;
var _a65=ds.dragSourceId;
delete ds.dragSourceId;
delete this.dragSources[_a65];
ds.domNode.setAttribute(dp,null);
if(dojo.render.html.ie){
dojo.event.browser.removeListener(ds.domNode,"ondragstart",this.cancelEvent);
}
}
},registerDropTarget:function(dt){
this.dropTargets.push(dt);
},unregisterDropTarget:function(dt){
var _a68=dojo.lang.find(this.dropTargets,dt,true);
if(_a68>=0){
this.dropTargets.splice(_a68,1);
}
},getDragSource:function(e){
var tn=e.target;
if(tn===dojo.body()){
return;
}
var ta=dojo.html.getAttribute(tn,this.dsPrefix);
while((!ta)&&(tn)){
tn=tn.parentNode;
if((!tn)||(tn===dojo.body())){
return;
}
ta=dojo.html.getAttribute(tn,this.dsPrefix);
}
return this.dragSources[ta];
},onKeyDown:function(e){
},onMouseDown:function(e){
if(this.disabled){
return;
}
if(dojo.render.html.ie){
if(e.button!=1){
return;
}
}else{
if(e.which!=1){
return;
}
}
var _a6e=e.target.nodeType==dojo.html.TEXT_NODE?e.target.parentNode:e.target;
if(dojo.html.isTag(_a6e,"button","textarea","input","select","option")){
return;
}
var ds=this.getDragSource(e);
if(!ds){
return;
}
if(!dojo.lang.inArray(this.selectedSources,ds)){
this.selectedSources.push(ds);
ds.onSelected();
}
this.mouseDownX=e.pageX;
this.mouseDownY=e.pageY;
e.preventDefault();
dojo.event.connect(document,"onmousemove",this,"onMouseMove");
},onMouseUp:function(e,_a71){
if(this.selectedSources.length==0){
return;
}
this.mouseDownX=null;
this.mouseDownY=null;
this._dragTriggered=false;
e.dragSource=this.dragSource;
if((!e.shiftKey)&&(!e.ctrlKey)){
if(this.currentDropTarget){
this.currentDropTarget.onDropStart();
}
dojo.lang.forEach(this.dragObjects,function(_a72){
var ret=null;
if(!_a72){
return;
}
if(this.currentDropTarget){
e.dragObject=_a72;
var ce=this.currentDropTarget.domNode.childNodes;
if(ce.length>0){
e.dropTarget=ce[0];
while(e.dropTarget==_a72.domNode){
e.dropTarget=e.dropTarget.nextSibling;
}
}else{
e.dropTarget=this.currentDropTarget.domNode;
}
if(this.dropAcceptable){
ret=this.currentDropTarget.onDrop(e);
}else{
this.currentDropTarget.onDragOut(e);
}
}
e.dragStatus=this.dropAcceptable&&ret?"dropSuccess":"dropFailure";
dojo.lang.delayThese([function(){
try{
_a72.dragSource.onDragEnd(e);
}
catch(err){
var _a75={};
for(var i in e){
if(i=="type"){
_a75.type="mouseup";
continue;
}
_a75[i]=e[i];
}
_a72.dragSource.onDragEnd(_a75);
}
},function(){
_a72.onDragEnd(e);
}]);
},this);
this.selectedSources=[];
this.dragObjects=[];
this.dragSource=null;
if(this.currentDropTarget){
this.currentDropTarget.onDropEnd();
}
}else{
}
dojo.event.disconnect(document,"onmousemove",this,"onMouseMove");
this.currentDropTarget=null;
},onScroll:function(){
for(var i=0;i<this.dragObjects.length;i++){
if(this.dragObjects[i].updateDragOffset){
this.dragObjects[i].updateDragOffset();
}
}
if(this.dragObjects.length){
this.cacheTargetLocations();
}
},_dragStartDistance:function(x,y){
if((!this.mouseDownX)||(!this.mouseDownX)){
return;
}
var dx=Math.abs(x-this.mouseDownX);
var dx2=dx*dx;
var dy=Math.abs(y-this.mouseDownY);
var dy2=dy*dy;
return parseInt(Math.sqrt(dx2+dy2),10);
},cacheTargetLocations:function(){
dojo.profile.start("cacheTargetLocations");
this.dropTargetDimensions=[];
dojo.lang.forEach(this.dropTargets,function(_a7e){
var tn=_a7e.domNode;
if(!tn||!_a7e.accepts([this.dragSource])){
return;
}
var abs=dojo.html.getAbsolutePosition(tn,true);
var bb=dojo.html.getBorderBox(tn);
this.dropTargetDimensions.push([[abs.x,abs.y],[abs.x+bb.width,abs.y+bb.height],_a7e]);
},this);
dojo.profile.end("cacheTargetLocations");
},onMouseMove:function(e){
if((dojo.render.html.ie)&&(e.button!=1)){
this.currentDropTarget=null;
this.onMouseUp(e,true);
return;
}
if((this.selectedSources.length)&&(!this.dragObjects.length)){
var dx;
var dy;
if(!this._dragTriggered){
this._dragTriggered=(this._dragStartDistance(e.pageX,e.pageY)>this.threshold);
if(!this._dragTriggered){
return;
}
dx=e.pageX-this.mouseDownX;
dy=e.pageY-this.mouseDownY;
}
this.dragSource=this.selectedSources[0];
dojo.lang.forEach(this.selectedSources,function(_a85){
if(!_a85){
return;
}
var tdo=_a85.onDragStart(e);
if(tdo){
tdo.onDragStart(e);
tdo.dragOffset.y+=dy;
tdo.dragOffset.x+=dx;
tdo.dragSource=_a85;
this.dragObjects.push(tdo);
}
},this);
this.previousDropTarget=null;
this.cacheTargetLocations();
}
dojo.lang.forEach(this.dragObjects,function(_a87){
if(_a87){
_a87.onDragMove(e);
}
});
if(this.currentDropTarget){
var c=dojo.html.toCoordinateObject(this.currentDropTarget.domNode,true);
var dtp=[[c.x,c.y],[c.x+c.width,c.y+c.height]];
}
if((!this.nestedTargets)&&(dtp)&&(this.isInsideBox(e,dtp))){
if(this.dropAcceptable){
this.currentDropTarget.onDragMove(e,this.dragObjects);
}
}else{
var _a8a=this.findBestTarget(e);
if(_a8a.target===null){
if(this.currentDropTarget){
this.currentDropTarget.onDragOut(e);
this.previousDropTarget=this.currentDropTarget;
this.currentDropTarget=null;
}
this.dropAcceptable=false;
return;
}
if(this.currentDropTarget!==_a8a.target){
if(this.currentDropTarget){
this.previousDropTarget=this.currentDropTarget;
this.currentDropTarget.onDragOut(e);
}
this.currentDropTarget=_a8a.target;
e.dragObjects=this.dragObjects;
this.dropAcceptable=this.currentDropTarget.onDragOver(e);
}else{
if(this.dropAcceptable){
this.currentDropTarget.onDragMove(e,this.dragObjects);
}
}
}
},findBestTarget:function(e){
var _a8c=this;
var _a8d=new Object();
_a8d.target=null;
_a8d.points=null;
dojo.lang.every(this.dropTargetDimensions,function(_a8e){
if(!_a8c.isInsideBox(e,_a8e)){
return true;
}
_a8d.target=_a8e[2];
_a8d.points=_a8e;
return Boolean(_a8c.nestedTargets);
});
return _a8d;
},isInsideBox:function(e,_a90){
if((e.pageX>_a90[0][0])&&(e.pageX<_a90[1][0])&&(e.pageY>_a90[0][1])&&(e.pageY<_a90[1][1])){
return true;
}
return false;
},onMouseOver:function(e){
},onMouseOut:function(e){
}});
dojo.dnd.dragManager=new dojo.dnd.HtmlDragManager();
(function(){
var d=document;
var dm=dojo.dnd.dragManager;
dojo.event.connect(d,"onkeydown",dm,"onKeyDown");
dojo.event.connect(d,"onmouseover",dm,"onMouseOver");
dojo.event.connect(d,"onmouseout",dm,"onMouseOut");
dojo.event.connect(d,"onmousedown",dm,"onMouseDown");
dojo.event.connect(d,"onmouseup",dm,"onMouseUp");
dojo.event.connect(window,"onscroll",dm,"onScroll");
})();
dojo.provide("dojo.dnd.HtmlDragAndDrop");
dojo.declare("dojo.dnd.HtmlDragSource",dojo.dnd.DragSource,{dragClass:"",onDragStart:function(){
var _a95=new dojo.dnd.HtmlDragObject(this.dragObject,this.type);
if(this.dragClass){
_a95.dragClass=this.dragClass;
}
if(this.constrainToContainer){
_a95.constrainTo(this.constrainingContainer||this.domNode.parentNode);
}
return _a95;
},setDragHandle:function(node){
node=dojo.byId(node);
dojo.dnd.dragManager.unregisterDragSource(this);
this.domNode=node;
dojo.dnd.dragManager.registerDragSource(this);
},setDragTarget:function(node){
this.dragObject=node;
},constrainTo:function(_a98){
this.constrainToContainer=true;
if(_a98){
this.constrainingContainer=_a98;
}
},onSelected:function(){
for(var i=0;i<this.dragObjects.length;i++){
dojo.dnd.dragManager.selectedSources.push(new dojo.dnd.HtmlDragSource(this.dragObjects[i]));
}
},addDragObjects:function(el){
for(var i=0;i<arguments.length;i++){
this.dragObjects.push(dojo.byId(arguments[i]));
}
}},function(node,type){
node=dojo.byId(node);
this.dragObjects=[];
this.constrainToContainer=false;
if(node){
this.domNode=node;
this.dragObject=node;
this.type=(type)||(this.domNode.nodeName.toLowerCase());
dojo.dnd.DragSource.prototype.reregister.call(this);
}
});
dojo.declare("dojo.dnd.HtmlDragObject",dojo.dnd.DragObject,{dragClass:"",opacity:0.5,createIframe:true,disableX:false,disableY:false,createDragNode:function(){
var node=this.domNode.cloneNode(true);
if(this.dragClass){
dojo.html.addClass(node,this.dragClass);
}
if(this.opacity<1){
dojo.html.setOpacity(node,this.opacity);
}
var ltn=node.tagName.toLowerCase();
var isTr=(ltn=="tr");
if((isTr)||(ltn=="tbody")){
var doc=this.domNode.ownerDocument;
var _aa2=doc.createElement("table");
if(isTr){
var _aa3=doc.createElement("tbody");
_aa2.appendChild(_aa3);
_aa3.appendChild(node);
}else{
_aa2.appendChild(node);
}
var _aa4=((isTr)?this.domNode:this.domNode.firstChild);
var _aa5=((isTr)?node:node.firstChild);
var _aa6=tdp.childNodes;
var _aa7=_aa5.childNodes;
for(var i=0;i<_aa6.length;i++){
if((_aa7[i])&&(_aa7[i].style)){
_aa7[i].style.width=dojo.html.getContentBox(_aa6[i]).width+"px";
}
}
node=_aa2;
}
if((dojo.render.html.ie55||dojo.render.html.ie60)&&this.createIframe){
with(node.style){
top="0px";
left="0px";
}
var _aa9=document.createElement("div");
_aa9.appendChild(node);
this.bgIframe=new dojo.html.BackgroundIframe(_aa9);
_aa9.appendChild(this.bgIframe.iframe);
node=_aa9;
}
node.style.zIndex=999;
return node;
},onDragStart:function(e){
dojo.html.clearSelection();
this.scrollOffset=dojo.html.getScroll().offset;
this.dragStartPosition=dojo.html.getAbsolutePosition(this.domNode,true);
this.dragOffset={y:this.dragStartPosition.y-e.pageY,x:this.dragStartPosition.x-e.pageX};
this.dragClone=this.createDragNode();
this.containingBlockPosition=this.domNode.offsetParent?dojo.html.getAbsolutePosition(this.domNode.offsetParent,true):{x:0,y:0};
if(this.constrainToContainer){
this.constraints=this.getConstraints();
}
with(this.dragClone.style){
position="absolute";
top=this.dragOffset.y+e.pageY+"px";
left=this.dragOffset.x+e.pageX+"px";
}
dojo.body().appendChild(this.dragClone);
dojo.event.topic.publish("dragStart",{source:this});
},getConstraints:function(){
if(this.constrainingContainer.nodeName.toLowerCase()=="body"){
var _aab=dojo.html.getViewport();
var _aac=_aab.width;
var _aad=_aab.height;
var _aae=dojo.html.getScroll().offset;
var x=_aae.x;
var y=_aae.y;
}else{
var _ab1=dojo.html.getContentBox(this.constrainingContainer);
_aac=_ab1.width;
_aad=_ab1.height;
x=this.containingBlockPosition.x+dojo.html.getPixelValue(this.constrainingContainer,"padding-left",true)+dojo.html.getBorderExtent(this.constrainingContainer,"left");
y=this.containingBlockPosition.y+dojo.html.getPixelValue(this.constrainingContainer,"padding-top",true)+dojo.html.getBorderExtent(this.constrainingContainer,"top");
}
var mb=dojo.html.getMarginBox(this.domNode);
return {minX:x,minY:y,maxX:x+_aac-mb.width,maxY:y+_aad-mb.height};
},updateDragOffset:function(){
var _ab3=dojo.html.getScroll().offset;
if(_ab3.y!=this.scrollOffset.y){
var diff=_ab3.y-this.scrollOffset.y;
this.dragOffset.y+=diff;
this.scrollOffset.y=_ab3.y;
}
if(_ab3.x!=this.scrollOffset.x){
var diff=_ab3.x-this.scrollOffset.x;
this.dragOffset.x+=diff;
this.scrollOffset.x=_ab3.x;
}
},onDragMove:function(e){
this.updateDragOffset();
var x=this.dragOffset.x+e.pageX;
var y=this.dragOffset.y+e.pageY;
if(this.constrainToContainer){
if(x<this.constraints.minX){
x=this.constraints.minX;
}
if(y<this.constraints.minY){
y=this.constraints.minY;
}
if(x>this.constraints.maxX){
x=this.constraints.maxX;
}
if(y>this.constraints.maxY){
y=this.constraints.maxY;
}
}
this.setAbsolutePosition(x,y);
dojo.event.topic.publish("dragMove",{source:this});
},setAbsolutePosition:function(x,y){
if(!this.disableY){
this.dragClone.style.top=y+"px";
}
if(!this.disableX){
this.dragClone.style.left=x+"px";
}
},onDragEnd:function(e){
switch(e.dragStatus){
case "dropSuccess":
dojo.html.removeNode(this.dragClone);
this.dragClone=null;
break;
case "dropFailure":
var _abb=dojo.html.getAbsolutePosition(this.dragClone,true);
var _abc={left:this.dragStartPosition.x+1,top:this.dragStartPosition.y+1};
var anim=dojo.lfx.slideTo(this.dragClone,_abc,300);
var _abe=this;
dojo.event.connect(anim,"onEnd",function(e){
dojo.html.removeNode(_abe.dragClone);
_abe.dragClone=null;
});
anim.play();
break;
}
dojo.event.topic.publish("dragEnd",{source:this});
},constrainTo:function(_ac0){
this.constrainToContainer=true;
if(_ac0){
this.constrainingContainer=_ac0;
}else{
this.constrainingContainer=this.domNode.parentNode;
}
}},function(node,type){
this.domNode=dojo.byId(node);
this.type=type;
this.constrainToContainer=false;
this.dragSource=null;
dojo.dnd.DragObject.prototype.register.call(this);
});
dojo.declare("dojo.dnd.HtmlDropTarget",dojo.dnd.DropTarget,{vertical:false,onDragOver:function(e){
if(!this.accepts(e.dragObjects)){
return false;
}
this.childBoxes=[];
for(var i=0,_ac5;i<this.domNode.childNodes.length;i++){
_ac5=this.domNode.childNodes[i];
if(_ac5.nodeType!=dojo.html.ELEMENT_NODE){
continue;
}
var pos=dojo.html.getAbsolutePosition(_ac5,true);
var _ac7=dojo.html.getBorderBox(_ac5);
this.childBoxes.push({top:pos.y,bottom:pos.y+_ac7.height,left:pos.x,right:pos.x+_ac7.width,height:_ac7.height,width:_ac7.width,node:_ac5});
}
return true;
},_getNodeUnderMouse:function(e){
for(var i=0,_aca;i<this.childBoxes.length;i++){
with(this.childBoxes[i]){
if(e.pageX>=left&&e.pageX<=right&&e.pageY>=top&&e.pageY<=bottom){
return i;
}
}
}
return -1;
},createDropIndicator:function(){
this.dropIndicator=document.createElement("div");
with(this.dropIndicator.style){
position="absolute";
zIndex=999;
if(this.vertical){
borderLeftWidth="1px";
borderLeftColor="black";
borderLeftStyle="solid";
height=dojo.html.getBorderBox(this.domNode).height+"px";
top=dojo.html.getAbsolutePosition(this.domNode,true).y+"px";
}else{
borderTopWidth="1px";
borderTopColor="black";
borderTopStyle="solid";
width=dojo.html.getBorderBox(this.domNode).width+"px";
left=dojo.html.getAbsolutePosition(this.domNode,true).x+"px";
}
}
},onDragMove:function(e,_acc){
var i=this._getNodeUnderMouse(e);
if(!this.dropIndicator){
this.createDropIndicator();
}
var _ace=this.vertical?dojo.html.gravity.WEST:dojo.html.gravity.NORTH;
var hide=false;
if(i<0){
if(this.childBoxes.length){
var _ad0=(dojo.html.gravity(this.childBoxes[0].node,e)&_ace);
if(_ad0){
hide=true;
}
}else{
var _ad0=true;
}
}else{
var _ad1=this.childBoxes[i];
var _ad0=(dojo.html.gravity(_ad1.node,e)&_ace);
if(_ad1.node===_acc[0].dragSource.domNode){
hide=true;
}else{
var _ad2=_ad0?(i>0?this.childBoxes[i-1]:_ad1):(i<this.childBoxes.length-1?this.childBoxes[i+1]:_ad1);
if(_ad2.node===_acc[0].dragSource.domNode){
hide=true;
}
}
}
if(hide){
this.dropIndicator.style.display="none";
return;
}else{
this.dropIndicator.style.display="";
}
this.placeIndicator(e,_acc,i,_ad0);
if(!dojo.html.hasParent(this.dropIndicator)){
dojo.body().appendChild(this.dropIndicator);
}
},placeIndicator:function(e,_ad4,_ad5,_ad6){
var _ad7=this.vertical?"left":"top";
var _ad8;
if(_ad5<0){
if(this.childBoxes.length){
_ad8=_ad6?this.childBoxes[0]:this.childBoxes[this.childBoxes.length-1];
}else{
this.dropIndicator.style[_ad7]=dojo.html.getAbsolutePosition(this.domNode,true)[this.vertical?"x":"y"]+"px";
}
}else{
_ad8=this.childBoxes[_ad5];
}
if(_ad8){
this.dropIndicator.style[_ad7]=(_ad6?_ad8[_ad7]:_ad8[this.vertical?"right":"bottom"])+"px";
if(this.vertical){
this.dropIndicator.style.height=_ad8.height+"px";
this.dropIndicator.style.top=_ad8.top+"px";
}else{
this.dropIndicator.style.width=_ad8.width+"px";
this.dropIndicator.style.left=_ad8.left+"px";
}
}
},onDragOut:function(e){
if(this.dropIndicator){
dojo.html.removeNode(this.dropIndicator);
delete this.dropIndicator;
}
},onDrop:function(e){
this.onDragOut(e);
var i=this._getNodeUnderMouse(e);
var _adc=this.vertical?dojo.html.gravity.WEST:dojo.html.gravity.NORTH;
if(i<0){
if(this.childBoxes.length){
if(dojo.html.gravity(this.childBoxes[0].node,e)&_adc){
return this.insert(e,this.childBoxes[0].node,"before");
}else{
return this.insert(e,this.childBoxes[this.childBoxes.length-1].node,"after");
}
}
return this.insert(e,this.domNode,"append");
}
var _add=this.childBoxes[i];
if(dojo.html.gravity(_add.node,e)&_adc){
return this.insert(e,_add.node,"before");
}else{
return this.insert(e,_add.node,"after");
}
},insert:function(e,_adf,_ae0){
var node=e.dragObject.domNode;
if(_ae0=="before"){
return dojo.html.insertBefore(node,_adf);
}else{
if(_ae0=="after"){
return dojo.html.insertAfter(node,_adf);
}else{
if(_ae0=="append"){
_adf.appendChild(node);
return true;
}
}
}
return false;
}},function(node,_ae3){
if(arguments.length==0){
return;
}
this.domNode=dojo.byId(node);
dojo.dnd.DropTarget.call(this);
if(_ae3&&dojo.lang.isString(_ae3)){
_ae3=[_ae3];
}
this.acceptedTypes=_ae3||[];
dojo.dnd.dragManager.registerDropTarget(this);
});
dojo.provide("dojo.dnd.*");
dojo.provide("dojo.dnd.HtmlDragMove");
dojo.declare("dojo.dnd.HtmlDragMoveSource",dojo.dnd.HtmlDragSource,{onDragStart:function(){
var _ae4=new dojo.dnd.HtmlDragMoveObject(this.dragObject,this.type);
if(this.constrainToContainer){
_ae4.constrainTo(this.constrainingContainer);
}
return _ae4;
},onSelected:function(){
for(var i=0;i<this.dragObjects.length;i++){
dojo.dnd.dragManager.selectedSources.push(new dojo.dnd.HtmlDragMoveSource(this.dragObjects[i]));
}
}});
dojo.declare("dojo.dnd.HtmlDragMoveObject",dojo.dnd.HtmlDragObject,{onDragStart:function(e){
dojo.html.clearSelection();
this.dragClone=this.domNode;
if(dojo.html.getComputedStyle(this.domNode,"position")!="absolute"){
this.domNode.style.position="relative";
}
var left=parseInt(dojo.html.getComputedStyle(this.domNode,"left"));
var top=parseInt(dojo.html.getComputedStyle(this.domNode,"top"));
this.dragStartPosition={x:isNaN(left)?0:left,y:isNaN(top)?0:top};
this.scrollOffset=dojo.html.getScroll().offset;
this.dragOffset={y:this.dragStartPosition.y-e.pageY,x:this.dragStartPosition.x-e.pageX};
this.containingBlockPosition={x:0,y:0};
if(this.constrainToContainer){
this.constraints=this.getConstraints();
}
dojo.event.connect(this.domNode,"onclick",this,"_squelchOnClick");
},onDragEnd:function(e){
},setAbsolutePosition:function(x,y){
if(!this.disableY){
this.domNode.style.top=y+"px";
}
if(!this.disableX){
this.domNode.style.left=x+"px";
}
},_squelchOnClick:function(e){
dojo.event.browser.stopEvent(e);
dojo.event.disconnect(this.domNode,"onclick",this,"_squelchOnClick");
}});
dojo.provide("dojo.widget.Dialog");
dojo.declare("dojo.widget.ModalDialogBase",null,{isContainer:true,focusElement:"",bgColor:"black",bgOpacity:0.4,followScroll:true,closeOnBackgroundClick:false,trapTabs:function(e){
if(e.target==this.tabStartOuter){
if(this._fromTrap){
this.tabStart.focus();
this._fromTrap=false;
}else{
this._fromTrap=true;
this.tabEnd.focus();
}
}else{
if(e.target==this.tabStart){
if(this._fromTrap){
this._fromTrap=false;
}else{
this._fromTrap=true;
this.tabEnd.focus();
}
}else{
if(e.target==this.tabEndOuter){
if(this._fromTrap){
this.tabEnd.focus();
this._fromTrap=false;
}else{
this._fromTrap=true;
this.tabStart.focus();
}
}else{
if(e.target==this.tabEnd){
if(this._fromTrap){
this._fromTrap=false;
}else{
this._fromTrap=true;
this.tabStart.focus();
}
}
}
}
}
},clearTrap:function(e){
var _aef=this;
setTimeout(function(){
_aef._fromTrap=false;
},100);
},postCreate:function(){
with(this.domNode.style){
position="absolute";
zIndex=999;
display="none";
overflow="visible";
}
var b=dojo.body();
b.appendChild(this.domNode);
this.bg=document.createElement("div");
this.bg.className="dialogUnderlay";
with(this.bg.style){
position="absolute";
left=top="0px";
zIndex=998;
display="none";
}
b.appendChild(this.bg);
this.setBackgroundColor(this.bgColor);
this.bgIframe=new dojo.html.BackgroundIframe();
if(this.bgIframe.iframe){
with(this.bgIframe.iframe.style){
position="absolute";
left=top="0px";
zIndex=90;
display="none";
}
}
if(this.closeOnBackgroundClick){
dojo.event.kwConnect({srcObj:this.bg,srcFunc:"onclick",adviceObj:this,adviceFunc:"onBackgroundClick",once:true});
}
},uninitialize:function(){
this.bgIframe.remove();
dojo.html.removeNode(this.bg,true);
},setBackgroundColor:function(_af1){
if(arguments.length>=3){
_af1=new dojo.gfx.color.Color(arguments[0],arguments[1],arguments[2]);
}else{
_af1=new dojo.gfx.color.Color(_af1);
}
this.bg.style.backgroundColor=_af1.toString();
return this.bgColor=_af1;
},setBackgroundOpacity:function(op){
if(arguments.length==0){
op=this.bgOpacity;
}
dojo.html.setOpacity(this.bg,op);
try{
this.bgOpacity=dojo.html.getOpacity(this.bg);
}
catch(e){
this.bgOpacity=op;
}
return this.bgOpacity;
},_sizeBackground:function(){
if(this.bgOpacity>0){
var _af3=dojo.html.getViewport();
var h=_af3.height;
var w=_af3.width;
with(this.bg.style){
width=w+"px";
height=h+"px";
}
var _af6=dojo.html.getScroll().offset;
this.bg.style.top=_af6.y+"px";
this.bg.style.left=_af6.x+"px";
var _af3=dojo.html.getViewport();
if(_af3.width!=w){
this.bg.style.width=_af3.width+"px";
}
if(_af3.height!=h){
this.bg.style.height=_af3.height+"px";
}
}
this.bgIframe.size(this.bg);
},_showBackground:function(){
if(this.bgOpacity>0){
this.bg.style.display="block";
}
if(this.bgIframe.iframe){
this.bgIframe.iframe.style.display="block";
}
},placeModalDialog:function(){
var _af7=dojo.html.getScroll().offset;
var _af8=dojo.html.getViewport();
var mb;
if(this.isShowing()){
mb=dojo.html.getMarginBox(this.domNode);
}else{
dojo.html.setVisibility(this.domNode,false);
dojo.html.show(this.domNode);
mb=dojo.html.getMarginBox(this.domNode);
dojo.html.hide(this.domNode);
dojo.html.setVisibility(this.domNode,true);
}
var x=_af7.x+(_af8.width-mb.width)/2;
var y=_af7.y+(_af8.height-mb.height)/2;
with(this.domNode.style){
left=x+"px";
top=y+"px";
}
},_onKey:function(evt){
if(evt.key){
var node=evt.target;
while(node!=null){
if(node==this.domNode){
return;
}
node=node.parentNode;
}
if(evt.key!=evt.KEY_TAB){
dojo.event.browser.stopEvent(evt);
}else{
if(!dojo.render.html.opera){
try{
this.tabStart.focus();
}
catch(e){
}
}
}
}
},showModalDialog:function(){
if(this.followScroll&&!this._scrollConnected){
this._scrollConnected=true;
dojo.event.connect(window,"onscroll",this,"_onScroll");
}
dojo.event.connect(document.documentElement,"onkey",this,"_onKey");
this.placeModalDialog();
this.setBackgroundOpacity();
this._sizeBackground();
this._showBackground();
this._fromTrap=true;
setTimeout(dojo.lang.hitch(this,function(){
try{
this.tabStart.focus();
}
catch(e){
}
}),50);
},hideModalDialog:function(){
if(this.focusElement){
dojo.byId(this.focusElement).focus();
dojo.byId(this.focusElement).blur();
}
this.bg.style.display="none";
this.bg.style.width=this.bg.style.height="1px";
if(this.bgIframe.iframe){
this.bgIframe.iframe.style.display="none";
}
dojo.event.disconnect(document.documentElement,"onkey",this,"_onKey");
if(this._scrollConnected){
this._scrollConnected=false;
dojo.event.disconnect(window,"onscroll",this,"_onScroll");
}
},_onScroll:function(){
var _afe=dojo.html.getScroll().offset;
this.bg.style.top=_afe.y+"px";
this.bg.style.left=_afe.x+"px";
this.placeModalDialog();
},checkSize:function(){
if(this.isShowing()){
this._sizeBackground();
this.placeModalDialog();
this.onResized();
}
},onBackgroundClick:function(){
if(this.lifetime-this.timeRemaining>=this.blockDuration){
return;
}
this.hide();
}});
dojo.widget.defineWidget("dojo.widget.Dialog",[dojo.widget.ContentPane,dojo.widget.ModalDialogBase],{templatePath:dojo.uri.dojoUri("src/widget/templates/Dialog.html"),blockDuration:0,lifetime:0,closeNode:"",postMixInProperties:function(){
dojo.widget.Dialog.superclass.postMixInProperties.apply(this,arguments);
if(this.closeNode){
this.setCloseControl(this.closeNode);
}
},postCreate:function(){
dojo.widget.Dialog.superclass.postCreate.apply(this,arguments);
dojo.widget.ModalDialogBase.prototype.postCreate.apply(this,arguments);
},show:function(){
if(this.lifetime){
this.timeRemaining=this.lifetime;
if(this.timerNode){
this.timerNode.innerHTML=Math.ceil(this.timeRemaining/1000);
}
if(this.blockDuration&&this.closeNode){
if(this.lifetime>this.blockDuration){
this.closeNode.style.visibility="hidden";
}else{
this.closeNode.style.display="none";
}
}
if(this.timer){
clearInterval(this.timer);
}
this.timer=setInterval(dojo.lang.hitch(this,"_onTick"),100);
}
this.showModalDialog();
dojo.widget.Dialog.superclass.show.call(this);
},onLoad:function(){
this.placeModalDialog();
dojo.widget.Dialog.superclass.onLoad.call(this);
},fillInTemplate:function(){
},hide:function(){
this.hideModalDialog();
dojo.widget.Dialog.superclass.hide.call(this);
if(this.timer){
clearInterval(this.timer);
}
},setTimerNode:function(node){
this.timerNode=node;
},setCloseControl:function(node){
this.closeNode=dojo.byId(node);
dojo.event.connect(this.closeNode,"onclick",this,"hide");
},setShowControl:function(node){
node=dojo.byId(node);
dojo.event.connect(node,"onclick",this,"show");
},_onTick:function(){
if(this.timer){
this.timeRemaining-=100;
if(this.lifetime-this.timeRemaining>=this.blockDuration){
if(this.closeNode){
this.closeNode.style.visibility="visible";
}
}
if(!this.timeRemaining){
clearInterval(this.timer);
this.hide();
}else{
if(this.timerNode){
this.timerNode.innerHTML=Math.ceil(this.timeRemaining/1000);
}
}
}
}});
dojo.provide("dojo.widget.ResizeHandle");
dojo.widget.defineWidget("dojo.widget.ResizeHandle",dojo.widget.HtmlWidget,{targetElmId:"",templateCssPath:dojo.uri.dojoUri("src/widget/templates/ResizeHandle.css"),templateString:"<div class=\"dojoHtmlResizeHandle\"><div></div></div>",postCreate:function(){
dojo.event.connect(this.domNode,"onmousedown",this,"_beginSizing");
},_beginSizing:function(e){
if(this._isSizing){
return false;
}
this.targetWidget=dojo.widget.byId(this.targetElmId);
this.targetDomNode=this.targetWidget?this.targetWidget.domNode:dojo.byId(this.targetElmId);
if(!this.targetDomNode){
return;
}
this._isSizing=true;
this.startPoint={"x":e.clientX,"y":e.clientY};
var mb=dojo.html.getMarginBox(this.targetDomNode);
this.startSize={"w":mb.width,"h":mb.height};
dojo.event.kwConnect({srcObj:dojo.body(),srcFunc:"onmousemove",targetObj:this,targetFunc:"_changeSizing",rate:25});
dojo.event.connect(dojo.body(),"onmouseup",this,"_endSizing");
e.preventDefault();
},_changeSizing:function(e){
try{
if(!e.clientX||!e.clientY){
return;
}
}
catch(e){
return;
}
var dx=this.startPoint.x-e.clientX;
var dy=this.startPoint.y-e.clientY;
var newW=this.startSize.w-dx;
var newH=this.startSize.h-dy;
if(this.minSize){
var mb=dojo.html.getMarginBox(this.targetDomNode);
if(newW<this.minSize.w){
newW=mb.width;
}
if(newH<this.minSize.h){
newH=mb.height;
}
}
if(this.targetWidget){
this.targetWidget.resizeTo(newW,newH);
}else{
dojo.html.setMarginBox(this.targetDomNode,{width:newW,height:newH});
}
e.preventDefault();
},_endSizing:function(e){
dojo.event.disconnect(dojo.body(),"onmousemove",this,"_changeSizing");
dojo.event.disconnect(dojo.body(),"onmouseup",this,"_endSizing");
this._isSizing=false;
}});
dojo.provide("dojo.widget.FloatingPane");
dojo.declare("dojo.widget.FloatingPaneBase",null,{title:"",iconSrc:"",hasShadow:false,constrainToContainer:false,taskBarId:"",resizable:true,titleBarDisplay:true,windowState:"normal",displayCloseAction:false,displayMinimizeAction:false,displayMaximizeAction:false,_max_taskBarConnectAttempts:5,_taskBarConnectAttempts:0,templatePath:dojo.uri.dojoUri("src/widget/templates/FloatingPane.html"),templateCssPath:dojo.uri.dojoUri("src/widget/templates/FloatingPane.css"),fillInFloatingPaneTemplate:function(args,frag){
var _b0d=this.getFragNodeRef(frag);
dojo.html.copyStyle(this.domNode,_b0d);
dojo.body().appendChild(this.domNode);
if(!this.isShowing()){
this.windowState="minimized";
}
if(this.iconSrc==""){
dojo.html.removeNode(this.titleBarIcon);
}else{
this.titleBarIcon.src=this.iconSrc.toString();
}
if(this.titleBarDisplay){
this.titleBar.style.display="";
dojo.html.disableSelection(this.titleBar);
this.titleBarIcon.style.display=(this.iconSrc==""?"none":"");
this.minimizeAction.style.display=(this.displayMinimizeAction?"":"none");
this.maximizeAction.style.display=(this.displayMaximizeAction&&this.windowState!="maximized"?"":"none");
this.restoreAction.style.display=(this.displayMaximizeAction&&this.windowState=="maximized"?"":"none");
this.closeAction.style.display=(this.displayCloseAction?"":"none");
this.drag=new dojo.dnd.HtmlDragMoveSource(this.domNode);
if(this.constrainToContainer){
this.drag.constrainTo();
}
this.drag.setDragHandle(this.titleBar);
var self=this;
dojo.event.topic.subscribe("dragMove",function(info){
if(info.source.domNode==self.domNode){
dojo.event.topic.publish("floatingPaneMove",{source:self});
}
});
}
if(this.resizable){
this.resizeBar.style.display="";
this.resizeHandle=dojo.widget.createWidget("ResizeHandle",{targetElmId:this.widgetId,id:this.widgetId+"_resize"});
this.resizeBar.appendChild(this.resizeHandle.domNode);
}
if(this.hasShadow){
this.shadow=new dojo.lfx.shadow(this.domNode);
}
this.bgIframe=new dojo.html.BackgroundIframe(this.domNode);
if(this.taskBarId){
this._taskBarSetup();
}
dojo.body().removeChild(this.domNode);
},postCreate:function(){
if(dojo.hostenv.post_load_){
this._setInitialWindowState();
}else{
dojo.addOnLoad(this,"_setInitialWindowState");
}
},maximizeWindow:function(evt){
var mb=dojo.html.getMarginBox(this.domNode);
this.previous={width:mb.width||this.width,height:mb.height||this.height,left:this.domNode.style.left,top:this.domNode.style.top,bottom:this.domNode.style.bottom,right:this.domNode.style.right};
if(this.domNode.parentNode.style.overflow.toLowerCase()!="hidden"){
this.parentPrevious={overflow:this.domNode.parentNode.style.overflow};
dojo.debug(this.domNode.parentNode.style.overflow);
this.domNode.parentNode.style.overflow="hidden";
}
this.domNode.style.left=dojo.html.getPixelValue(this.domNode.parentNode,"padding-left",true)+"px";
this.domNode.style.top=dojo.html.getPixelValue(this.domNode.parentNode,"padding-top",true)+"px";
if((this.domNode.parentNode.nodeName.toLowerCase()=="body")){
var _b12=dojo.html.getViewport();
var _b13=dojo.html.getPadding(dojo.body());
this.resizeTo(_b12.width-_b13.width,_b12.height-_b13.height);
}else{
var _b14=dojo.html.getContentBox(this.domNode.parentNode);
this.resizeTo(_b14.width,_b14.height);
}
this.maximizeAction.style.display="none";
this.restoreAction.style.display="";
if(this.resizeHandle){
this.resizeHandle.domNode.style.display="none";
}
this.drag.setDragHandle(null);
this.windowState="maximized";
},minimizeWindow:function(evt){
this.hide();
for(var attr in this.parentPrevious){
this.domNode.parentNode.style[attr]=this.parentPrevious[attr];
}
this.lastWindowState=this.windowState;
this.windowState="minimized";
},restoreWindow:function(evt){
if(this.windowState=="minimized"){
this.show();
if(this.lastWindowState=="maximized"){
this.domNode.parentNode.style.overflow="hidden";
this.windowState="maximized";
}else{
this.windowState="normal";
}
}else{
if(this.windowState=="maximized"){
for(var attr in this.previous){
this.domNode.style[attr]=this.previous[attr];
}
for(var attr in this.parentPrevious){
this.domNode.parentNode.style[attr]=this.parentPrevious[attr];
}
this.resizeTo(this.previous.width,this.previous.height);
this.previous=null;
this.parentPrevious=null;
this.restoreAction.style.display="none";
this.maximizeAction.style.display=this.displayMaximizeAction?"":"none";
if(this.resizeHandle){
this.resizeHandle.domNode.style.display="";
}
this.drag.setDragHandle(this.titleBar);
this.windowState="normal";
}else{
}
}
},toggleDisplay:function(){
if(this.windowState=="minimized"){
this.restoreWindow();
}else{
this.minimizeWindow();
}
},closeWindow:function(evt){
dojo.html.removeNode(this.domNode);
this.destroy();
},onMouseDown:function(evt){
this.bringToTop();
},bringToTop:function(){
var _b1b=dojo.widget.manager.getWidgetsByType(this.widgetType);
var _b1c=[];
for(var x=0;x<_b1b.length;x++){
if(this.widgetId!=_b1b[x].widgetId){
_b1c.push(_b1b[x]);
}
}
_b1c.sort(function(a,b){
return a.domNode.style.zIndex-b.domNode.style.zIndex;
});
_b1c.push(this);
var _b20=100;
for(x=0;x<_b1c.length;x++){
_b1c[x].domNode.style.zIndex=_b20+x*2;
}
},_setInitialWindowState:function(){
if(this.isShowing()){
this.width=-1;
var mb=dojo.html.getMarginBox(this.domNode);
this.resizeTo(mb.width,mb.height);
}
if(this.windowState=="maximized"){
this.maximizeWindow();
this.show();
return;
}
if(this.windowState=="normal"){
this.show();
return;
}
if(this.windowState=="minimized"){
this.hide();
return;
}
this.windowState="minimized";
},_taskBarSetup:function(){
var _b22=dojo.widget.getWidgetById(this.taskBarId);
if(!_b22){
if(this._taskBarConnectAttempts<this._max_taskBarConnectAttempts){
dojo.lang.setTimeout(this,this._taskBarSetup,50);
this._taskBarConnectAttempts++;
}else{
dojo.debug("Unable to connect to the taskBar");
}
return;
}
_b22.addChild(this);
},showFloatingPane:function(){
this.bringToTop();
},onFloatingPaneShow:function(){
var mb=dojo.html.getMarginBox(this.domNode);
this.resizeTo(mb.width,mb.height);
},resizeTo:function(_b24,_b25){
dojo.html.setMarginBox(this.domNode,{width:_b24,height:_b25});
dojo.widget.html.layout(this.domNode,[{domNode:this.titleBar,layoutAlign:"top"},{domNode:this.resizeBar,layoutAlign:"bottom"},{domNode:this.containerNode,layoutAlign:"client"}]);
dojo.widget.html.layout(this.containerNode,this.children,"top-bottom");
this.bgIframe.onResized();
if(this.shadow){
this.shadow.size(_b24,_b25);
}
this.onResized();
},checkSize:function(){
},destroyFloatingPane:function(){
if(this.resizeHandle){
this.resizeHandle.destroy();
this.resizeHandle=null;
}
}});
dojo.widget.defineWidget("dojo.widget.FloatingPane",[dojo.widget.ContentPane,dojo.widget.FloatingPaneBase],{fillInTemplate:function(args,frag){
this.fillInFloatingPaneTemplate(args,frag);
dojo.widget.FloatingPane.superclass.fillInTemplate.call(this,args,frag);
},postCreate:function(){
dojo.widget.FloatingPaneBase.prototype.postCreate.apply(this,arguments);
dojo.widget.FloatingPane.superclass.postCreate.apply(this,arguments);
},show:function(){
dojo.widget.FloatingPane.superclass.show.apply(this,arguments);
this.showFloatingPane();
},onShow:function(){
dojo.widget.FloatingPane.superclass.onShow.call(this);
this.onFloatingPaneShow();
},destroy:function(){
this.destroyFloatingPane();
dojo.widget.FloatingPane.superclass.destroy.apply(this,arguments);
}});
dojo.widget.defineWidget("dojo.widget.ModalFloatingPane",[dojo.widget.FloatingPane,dojo.widget.ModalDialogBase],{windowState:"minimized",displayCloseAction:true,postCreate:function(){
dojo.widget.ModalDialogBase.prototype.postCreate.call(this);
dojo.widget.ModalFloatingPane.superclass.postCreate.call(this);
},show:function(){
this.showModalDialog();
dojo.widget.ModalFloatingPane.superclass.show.apply(this,arguments);
this.bg.style.zIndex=this.domNode.style.zIndex-1;
},hide:function(){
this.hideModalDialog();
dojo.widget.ModalFloatingPane.superclass.hide.apply(this,arguments);
},closeWindow:function(){
this.hide();
dojo.widget.ModalFloatingPane.superclass.closeWindow.apply(this,arguments);
}});
dojo.provide("dojo.widget.Editor2Plugin.AlwaysShowToolbar");
dojo.event.topic.subscribe("dojo.widget.Editor2::onLoad",function(_b28){
if(_b28.toolbarAlwaysVisible){
var p=new dojo.widget.Editor2Plugin.AlwaysShowToolbar(_b28);
}
});
dojo.declare("dojo.widget.Editor2Plugin.AlwaysShowToolbar",null,function(_b2a){
this.editor=_b2a;
this.editor.registerLoadedPlugin(this);
this.setup();
},{_scrollSetUp:false,_fixEnabled:false,_scrollThreshold:false,_handleScroll:true,setup:function(){
var tdn=this.editor.toolbarWidget;
if(!tdn.tbBgIframe){
tdn.tbBgIframe=new dojo.html.BackgroundIframe(tdn.domNode);
tdn.tbBgIframe.onResized();
}
this.scrollInterval=setInterval(dojo.lang.hitch(this,"globalOnScrollHandler"),100);
dojo.event.connect("before",this.editor.toolbarWidget,"destroy",this,"destroy");
},globalOnScrollHandler:function(){
var isIE=dojo.render.html.ie;
if(!this._handleScroll){
return;
}
var dh=dojo.html;
var tdn=this.editor.toolbarWidget.domNode;
var db=dojo.body();
if(!this._scrollSetUp){
this._scrollSetUp=true;
var _b30=dh.getMarginBox(this.editor.domNode).width;
this._scrollThreshold=dh.abs(tdn,true).y;
if((isIE)&&(db)&&(dh.getStyle(db,"background-image")=="none")){
with(db.style){
backgroundImage="url("+dojo.uri.dojoUri("src/widget/templates/images/blank.gif")+")";
backgroundAttachment="fixed";
}
}
}
var _b31=(window["pageYOffset"])?window["pageYOffset"]:(document["documentElement"]||document["body"]).scrollTop;
if(_b31>this._scrollThreshold){
if(!this._fixEnabled){
var _b32=dojo.html.getMarginBox(tdn);
this.editor.editorObject.style.marginTop=_b32.height+"px";
if(isIE){
tdn.style.left=dojo.html.abs(tdn,dojo.html.boxSizing.MARGIN_BOX).x;
if(tdn.previousSibling){
this._IEOriginalPos=["after",tdn.previousSibling];
}else{
if(tdn.nextSibling){
this._IEOriginalPos=["before",tdn.nextSibling];
}else{
this._IEOriginalPos=["",tdn.parentNode];
}
}
dojo.body().appendChild(tdn);
dojo.html.addClass(tdn,"IEFixedToolbar");
}else{
with(tdn.style){
position="fixed";
top="0px";
}
}
tdn.style.width=_b32.width+"px";
tdn.style.zIndex=1000;
this._fixEnabled=true;
}
if(!dojo.render.html.safari){
var _b33=(this.height)?parseInt(this.editor.height):this.editor._lastHeight;
if(_b31>(this._scrollThreshold+_b33)){
tdn.style.display="none";
}else{
tdn.style.display="";
}
}
}else{
if(this._fixEnabled){
(this.editor.object||this.editor.iframe).style.marginTop=null;
with(tdn.style){
position="";
top="";
zIndex="";
display="";
}
if(isIE){
tdn.style.left="";
dojo.html.removeClass(tdn,"IEFixedToolbar");
if(this._IEOriginalPos){
dojo.html.insertAtPosition(tdn,this._IEOriginalPos[1],this._IEOriginalPos[0]);
this._IEOriginalPos=null;
}else{
dojo.html.insertBefore(tdn,this.editor.object||this.editor.iframe);
}
}
tdn.style.width="";
this._fixEnabled=false;
}
}
},destroy:function(){
this._IEOriginalPos=null;
this._handleScroll=false;
clearInterval(this.scrollInterval);
this.editor.unregisterLoadedPlugin(this);
if(dojo.render.html.ie){
dojo.html.removeClass(this.editor.toolbarWidget.domNode,"IEFixedToolbar");
}
}});
dojo.provide("dojo.widget.Editor2");
dojo.widget.Editor2Manager=new dojo.widget.HandlerManager;
dojo.lang.mixin(dojo.widget.Editor2Manager,{_currentInstance:null,commandState:{Disabled:0,Latched:1,Enabled:2},getCurrentInstance:function(){
return this._currentInstance;
},setCurrentInstance:function(inst){
this._currentInstance=inst;
},getCommand:function(_b35,name){
var _b37;
name=name.toLowerCase();
for(var i=0;i<this._registeredHandlers.length;i++){
_b37=this._registeredHandlers[i](_b35,name);
if(_b37){
return _b37;
}
}
switch(name){
case "htmltoggle":
_b37=new dojo.widget.Editor2BrowserCommand(_b35,name);
break;
case "formatblock":
_b37=new dojo.widget.Editor2FormatBlockCommand(_b35,name);
break;
case "anchor":
_b37=new dojo.widget.Editor2Command(_b35,name);
break;
case "createlink":
_b37=new dojo.widget.Editor2DialogCommand(_b35,name,{contentFile:"dojo.widget.Editor2Plugin.CreateLinkDialog",contentClass:"Editor2CreateLinkDialog",title:"Insert/Edit Link",width:"300px",height:"200px"});
break;
case "insertimage":
_b37=new dojo.widget.Editor2DialogCommand(_b35,name,{contentFile:"dojo.widget.Editor2Plugin.InsertImageDialog",contentClass:"Editor2InsertImageDialog",title:"Insert/Edit Image",width:"400px",height:"270px"});
break;
default:
var _b39=this.getCurrentInstance();
if((_b39&&_b39.queryCommandAvailable(name))||(!_b39&&dojo.widget.Editor2.prototype.queryCommandAvailable(name))){
_b37=new dojo.widget.Editor2BrowserCommand(_b35,name);
}else{
dojo.debug("dojo.widget.Editor2Manager.getCommand: Unknown command "+name);
return;
}
}
return _b37;
},destroy:function(){
this._currentInstance=null;
dojo.widget.HandlerManager.prototype.destroy.call(this);
}});
dojo.addOnUnload(dojo.widget.Editor2Manager,"destroy");
dojo.lang.declare("dojo.widget.Editor2Command",null,function(_b3a,name){
this._editor=_b3a;
this._updateTime=0;
this._name=name;
},{_text:"Unknown",execute:function(para){
dojo.unimplemented("dojo.widget.Editor2Command.execute");
},getText:function(){
return this._text;
},getState:function(){
return dojo.widget.Editor2Manager.commandState.Enabled;
},destroy:function(){
}});
dojo.widget.Editor2BrowserCommandNames={"bold":"Bold","copy":"Copy","cut":"Cut","Delete":"Delete","indent":"Indent","inserthorizontalrule":"Horizental Rule","insertorderedlist":"Numbered List","insertunorderedlist":"Bullet List","italic":"Italic","justifycenter":"Align Center","justifyfull":"Justify","justifyleft":"Align Left","justifyright":"Align Right","outdent":"Outdent","paste":"Paste","redo":"Redo","removeformat":"Remove Format","selectall":"Select All","strikethrough":"Strikethrough","subscript":"Subscript","superscript":"Superscript","underline":"Underline","undo":"Undo","unlink":"Remove Link","createlink":"Create Link","insertimage":"Insert Image","htmltoggle":"HTML Source","forecolor":"Foreground Color","hilitecolor":"Background Color","plainformatblock":"Paragraph Style","formatblock":"Paragraph Style","fontsize":"Font Size","fontname":"Font Name"};
dojo.lang.declare("dojo.widget.Editor2BrowserCommand",dojo.widget.Editor2Command,function(_b3d,name){
var text=dojo.widget.Editor2BrowserCommandNames[name.toLowerCase()];
if(text){
this._text=text;
}
},{execute:function(para){
this._editor.execCommand(this._name,para);
},getState:function(){
if(this._editor._lastStateTimestamp>this._updateTime||this._state==undefined){
this._updateTime=this._editor._lastStateTimestamp;
try{
if(this._editor.queryCommandEnabled(this._name)){
if(this._editor.queryCommandState(this._name)){
this._state=dojo.widget.Editor2Manager.commandState.Latched;
}else{
this._state=dojo.widget.Editor2Manager.commandState.Enabled;
}
}else{
this._state=dojo.widget.Editor2Manager.commandState.Disabled;
}
}
catch(e){
this._state=dojo.widget.Editor2Manager.commandState.Enabled;
}
}
return this._state;
},getValue:function(){
try{
return this._editor.queryCommandValue(this._name);
}
catch(e){
}
}});
dojo.lang.declare("dojo.widget.Editor2FormatBlockCommand",dojo.widget.Editor2BrowserCommand,{});
dojo.widget.defineWidget("dojo.widget.Editor2Dialog",[dojo.widget.HtmlWidget,dojo.widget.FloatingPaneBase,dojo.widget.ModalDialogBase],{templatePath:dojo.uri.dojoUri("src/widget/templates/Editor2/EditorDialog.html"),modal:true,width:"",height:"",windowState:"minimized",displayCloseAction:true,contentFile:"",contentClass:"",fillInTemplate:function(args,frag){
this.fillInFloatingPaneTemplate(args,frag);
dojo.widget.Editor2Dialog.superclass.fillInTemplate.call(this,args,frag);
},postCreate:function(){
if(this.contentFile){
dojo.require(this.contentFile);
}
if(this.modal){
dojo.widget.ModalDialogBase.prototype.postCreate.call(this);
}else{
with(this.domNode.style){
zIndex=999;
display="none";
}
}
dojo.widget.FloatingPaneBase.prototype.postCreate.apply(this,arguments);
dojo.widget.Editor2Dialog.superclass.postCreate.call(this);
if(this.width&&this.height){
with(this.domNode.style){
width=this.width;
height=this.height;
}
}
},createContent:function(){
if(!this.contentWidget&&this.contentClass){
this.contentWidget=dojo.widget.createWidget(this.contentClass);
this.addChild(this.contentWidget);
}
},show:function(){
if(!this.contentWidget){
dojo.widget.Editor2Dialog.superclass.show.apply(this,arguments);
this.createContent();
dojo.widget.Editor2Dialog.superclass.hide.call(this);
}
if(!this.contentWidget||!this.contentWidget.loadContent()){
return;
}
this.showFloatingPane();
dojo.widget.Editor2Dialog.superclass.show.apply(this,arguments);
if(this.modal){
this.showModalDialog();
}
if(this.modal){
this.bg.style.zIndex=this.domNode.style.zIndex-1;
}
},onShow:function(){
dojo.widget.Editor2Dialog.superclass.onShow.call(this);
this.onFloatingPaneShow();
},closeWindow:function(){
this.hide();
dojo.widget.Editor2Dialog.superclass.closeWindow.apply(this,arguments);
},hide:function(){
if(this.modal){
this.hideModalDialog();
}
dojo.widget.Editor2Dialog.superclass.hide.call(this);
},checkSize:function(){
if(this.isShowing()){
if(this.modal){
this._sizeBackground();
}
this.placeModalDialog();
this.onResized();
}
}});
dojo.widget.defineWidget("dojo.widget.Editor2DialogContent",dojo.widget.HtmlWidget,{widgetsInTemplate:true,loadContent:function(){
return true;
},cancel:function(){
this.parent.hide();
}});
dojo.lang.declare("dojo.widget.Editor2DialogCommand",dojo.widget.Editor2BrowserCommand,function(_b43,name,_b45){
this.dialogParas=_b45;
},{execute:function(){
if(!this.dialog){
if(!this.dialogParas.contentFile||!this.dialogParas.contentClass){
alert("contentFile and contentClass should be set for dojo.widget.Editor2DialogCommand.dialogParas!");
return;
}
this.dialog=dojo.widget.createWidget("Editor2Dialog",this.dialogParas);
dojo.body().appendChild(this.dialog.domNode);
dojo.event.connect(this,"destroy",this.dialog,"destroy");
}
this.dialog.show();
},getText:function(){
return this.dialogParas.title||dojo.widget.Editor2DialogCommand.superclass.getText.call(this);
}});
dojo.widget.Editor2ToolbarGroups={};
dojo.widget.defineWidget("dojo.widget.Editor2",dojo.widget.RichText,function(){
this._loadedCommands={};
},{toolbarAlwaysVisible:false,toolbarWidget:null,scrollInterval:null,toolbarTemplatePath:dojo.uri.dojoUri("src/widget/templates/EditorToolbarOneline.html"),toolbarTemplateCssPath:null,toolbarPlaceHolder:"",_inSourceMode:false,_htmlEditNode:null,toolbarGroup:"",shareToolbar:false,contextMenuGroupSet:"",editorOnLoad:function(){
dojo.event.topic.publish("dojo.widget.Editor2::preLoadingToolbar",this);
if(this.toolbarAlwaysVisible){
dojo.require("dojo.widget.Editor2Plugin.AlwaysShowToolbar");
}
if(this.toolbarWidget){
this.toolbarWidget.show();
dojo.html.insertBefore(this.toolbarWidget.domNode,this.domNode.firstChild);
}else{
if(this.shareToolbar){
dojo.deprecated("Editor2:shareToolbar is deprecated in favor of toolbarGroup","0.5");
this.toolbarGroup="defaultDojoToolbarGroup";
}
if(this.toolbarGroup){
if(dojo.widget.Editor2ToolbarGroups[this.toolbarGroup]){
this.toolbarWidget=dojo.widget.Editor2ToolbarGroups[this.toolbarGroup];
}
}
if(!this.toolbarWidget){
var _b46={shareGroup:this.toolbarGroup,parent:this};
_b46.templatePath=this.toolbarTemplatePath;
if(this.toolbarTemplateCssPath){
_b46.templateCssPath=this.toolbarTemplateCssPath;
}
if(this.toolbarPlaceHolder){
this.toolbarWidget=dojo.widget.createWidget("Editor2Toolbar",_b46,dojo.byId(this.toolbarPlaceHolder),"after");
}else{
this.toolbarWidget=dojo.widget.createWidget("Editor2Toolbar",_b46,this.domNode.firstChild,"before");
}
if(this.toolbarGroup){
dojo.widget.Editor2ToolbarGroups[this.toolbarGroup]=this.toolbarWidget;
}
dojo.event.connect(this,"close",this.toolbarWidget,"hide");
this.toolbarLoaded();
}
}
dojo.event.topic.registerPublisher("Editor2.clobberFocus",this,"clobberFocus");
dojo.event.topic.subscribe("Editor2.clobberFocus",this,"setBlur");
dojo.event.topic.publish("dojo.widget.Editor2::onLoad",this);
},toolbarLoaded:function(){
},registerLoadedPlugin:function(obj){
if(!this.loadedPlugins){
this.loadedPlugins=[];
}
this.loadedPlugins.push(obj);
},unregisterLoadedPlugin:function(obj){
for(var i in this.loadedPlugins){
if(this.loadedPlugins[i]===obj){
delete this.loadedPlugins[i];
return;
}
}
dojo.debug("dojo.widget.Editor2.unregisterLoadedPlugin: unknow plugin object: "+obj);
},execCommand:function(_b4a,_b4b){
switch(_b4a.toLowerCase()){
case "htmltoggle":
this.toggleHtmlEditing();
break;
default:
dojo.widget.Editor2.superclass.execCommand.apply(this,arguments);
}
},queryCommandEnabled:function(_b4c,_b4d){
switch(_b4c.toLowerCase()){
case "htmltoggle":
return true;
default:
if(this._inSourceMode){
return false;
}
return dojo.widget.Editor2.superclass.queryCommandEnabled.apply(this,arguments);
}
},queryCommandState:function(_b4e,_b4f){
switch(_b4e.toLowerCase()){
case "htmltoggle":
return this._inSourceMode;
default:
return dojo.widget.Editor2.superclass.queryCommandState.apply(this,arguments);
}
},onClick:function(e){
dojo.widget.Editor2.superclass.onClick.call(this,e);
if(dojo.widget.PopupManager){
if(!e){
e=this.window.event;
}
dojo.widget.PopupManager.onClick(e);
}
},clobberFocus:function(){
},toggleHtmlEditing:function(){
if(this===dojo.widget.Editor2Manager.getCurrentInstance()){
if(!this._inSourceMode){
var html=this.getEditorContent();
this._inSourceMode=true;
if(!this._htmlEditNode){
this._htmlEditNode=dojo.doc().createElement("textarea");
dojo.html.insertAfter(this._htmlEditNode,this.editorObject);
}
this._htmlEditNode.style.display="";
this._htmlEditNode.style.width="100%";
this._htmlEditNode.style.height=dojo.html.getBorderBox(this.editNode).height+"px";
this._htmlEditNode.value=html;
with(this.editorObject.style){
position="absolute";
left="-2000px";
top="-2000px";
}
}else{
this._inSourceMode=false;
this._htmlEditNode.blur();
with(this.editorObject.style){
position="";
left="";
top="";
}
var html=this._htmlEditNode.value;
dojo.lang.setTimeout(this,"replaceEditorContent",1,html);
this._htmlEditNode.style.display="none";
this.focus();
}
this.onDisplayChanged(null,true);
}
},setFocus:function(){
if(dojo.widget.Editor2Manager.getCurrentInstance()===this){
return;
}
this.clobberFocus();
dojo.widget.Editor2Manager.setCurrentInstance(this);
},setBlur:function(){
},saveSelection:function(){
this._bookmark=null;
this._bookmark=dojo.withGlobal(this.window,dojo.html.selection.getBookmark);
},restoreSelection:function(){
if(this._bookmark){
this.focus();
dojo.withGlobal(this.window,"moveToBookmark",dojo.html.selection,[this._bookmark]);
this._bookmark=null;
}else{
dojo.debug("restoreSelection: no saved selection is found!");
}
},_updateToolbarLastRan:null,_updateToolbarTimer:null,_updateToolbarFrequency:500,updateToolbar:function(_b52){
if((!this.isLoaded)||(!this.toolbarWidget)){
return;
}
var diff=new Date()-this._updateToolbarLastRan;
if((!_b52)&&(this._updateToolbarLastRan)&&((diff<this._updateToolbarFrequency))){
clearTimeout(this._updateToolbarTimer);
var _b54=this;
this._updateToolbarTimer=setTimeout(function(){
_b54.updateToolbar();
},this._updateToolbarFrequency/2);
return;
}else{
this._updateToolbarLastRan=new Date();
}
if(dojo.widget.Editor2Manager.getCurrentInstance()!==this){
return;
}
this.toolbarWidget.update();
},destroy:function(_b55){
this._htmlEditNode=null;
dojo.event.disconnect(this,"close",this.toolbarWidget,"hide");
if(!_b55){
this.toolbarWidget.destroy();
}
dojo.widget.Editor2.superclass.destroy.call(this);
},_lastStateTimestamp:0,onDisplayChanged:function(e,_b57){
this._lastStateTimestamp=(new Date()).getTime();
dojo.widget.Editor2.superclass.onDisplayChanged.call(this,e);
this.updateToolbar(_b57);
},onLoad:function(){
try{
dojo.widget.Editor2.superclass.onLoad.call(this);
}
catch(e){
dojo.debug(e);
}
this.editorOnLoad();
},onFocus:function(){
dojo.widget.Editor2.superclass.onFocus.call(this);
this.setFocus();
},getEditorContent:function(){
if(this._inSourceMode){
return this._htmlEditNode.value;
}
return dojo.widget.Editor2.superclass.getEditorContent.call(this);
},replaceEditorContent:function(html){
if(this._inSourceMode){
this._htmlEditNode.value=html;
return;
}
dojo.widget.Editor2.superclass.replaceEditorContent.apply(this,arguments);
},getCommand:function(name){
if(this._loadedCommands[name]){
return this._loadedCommands[name];
}
var cmd=dojo.widget.Editor2Manager.getCommand(this,name);
this._loadedCommands[name]=cmd;
return cmd;
},shortcuts:[["bold"],["italic"],["underline"],["selectall","a"],["insertunorderedlist","\\"]],setupDefaultShortcuts:function(){
var exec=function(cmd){
return function(){
cmd.execute();
};
};
var self=this;
dojo.lang.forEach(this.shortcuts,function(item){
var cmd=self.getCommand(item[0]);
if(cmd){
self.addKeyHandler(item[1]?item[1]:item[0].charAt(0),item[2]==undefined?self.KEY_CTRL:item[2],exec(cmd));
}
});
}});
dojo.provide("dojo.string.Builder");
dojo.string.Builder=function(str){
this.arrConcat=(dojo.render.html.capable&&dojo.render.html["ie"]);
var a=[];
var b="";
var _b63=this.length=b.length;
if(this.arrConcat){
if(b.length>0){
a.push(b);
}
b="";
}
this.toString=this.valueOf=function(){
return (this.arrConcat)?a.join(""):b;
};
this.append=function(){
for(var x=0;x<arguments.length;x++){
var s=arguments[x];
if(dojo.lang.isArrayLike(s)){
this.append.apply(this,s);
}else{
if(this.arrConcat){
a.push(s);
}else{
b+=s;
}
_b63+=s.length;
this.length=_b63;
}
}
return this;
};
this.clear=function(){
a=[];
b="";
_b63=this.length=0;
return this;
};
this.remove=function(f,l){
var s="";
if(this.arrConcat){
b=a.join("");
}
a=[];
if(f>0){
s=b.substring(0,(f-1));
}
b=s+b.substring(f+l);
_b63=this.length=b.length;
if(this.arrConcat){
a.push(b);
b="";
}
return this;
};
this.replace=function(o,n){
if(this.arrConcat){
b=a.join("");
}
a=[];
b=b.replace(o,n);
_b63=this.length=b.length;
if(this.arrConcat){
a.push(b);
b="";
}
return this;
};
this.insert=function(idx,s){
if(this.arrConcat){
b=a.join("");
}
a=[];
if(idx==0){
b=s+b;
}else{
var t=b.split("");
t.splice(idx,0,s);
b=t.join("");
}
_b63=this.length=b.length;
if(this.arrConcat){
a.push(b);
b="";
}
return this;
};
this.append.apply(this,arguments);
};
dojo.provide("dojo.string.*");
dojo.provide("dojo.flash");
dojo.flash=function(){
};
dojo.flash={flash6_version:null,flash8_version:null,ready:false,_visible:true,_loadedListeners:new Array(),_installingListeners:new Array(),setSwf:function(_b6e){
if(_b6e==null||dojo.lang.isUndefined(_b6e)){
return;
}
if(_b6e.flash6!=null&&!dojo.lang.isUndefined(_b6e.flash6)){
this.flash6_version=_b6e.flash6;
}
if(_b6e.flash8!=null&&!dojo.lang.isUndefined(_b6e.flash8)){
this.flash8_version=_b6e.flash8;
}
if(!dojo.lang.isUndefined(_b6e.visible)){
this._visible=_b6e.visible;
}
this._initialize();
},useFlash6:function(){
if(this.flash6_version==null){
return false;
}else{
if(this.flash6_version!=null&&dojo.flash.info.commVersion==6){
return true;
}else{
return false;
}
}
},useFlash8:function(){
if(this.flash8_version==null){
return false;
}else{
if(this.flash8_version!=null&&dojo.flash.info.commVersion==8){
return true;
}else{
return false;
}
}
},addLoadedListener:function(_b6f){
this._loadedListeners.push(_b6f);
},addInstallingListener:function(_b70){
this._installingListeners.push(_b70);
},loaded:function(){
dojo.flash.ready=true;
if(dojo.flash._loadedListeners.length>0){
for(var i=0;i<dojo.flash._loadedListeners.length;i++){
dojo.flash._loadedListeners[i].call(null);
}
}
},installing:function(){
if(dojo.flash._installingListeners.length>0){
for(var i=0;i<dojo.flash._installingListeners.length;i++){
dojo.flash._installingListeners[i].call(null);
}
}
},_initialize:function(){
var _b73=new dojo.flash.Install();
dojo.flash.installer=_b73;
if(_b73.needed()==true){
_b73.install();
}else{
dojo.flash.obj=new dojo.flash.Embed(this._visible);
dojo.flash.obj.write(dojo.flash.info.commVersion);
dojo.flash.comm=new dojo.flash.Communicator();
}
}};
dojo.flash.Info=function(){
if(dojo.render.html.ie){
document.writeln("<script language=\"VBScript\" type=\"text/vbscript\">");
document.writeln("Function VBGetSwfVer(i)");
document.writeln("  on error resume next");
document.writeln("  Dim swControl, swVersion");
document.writeln("  swVersion = 0");
document.writeln("  set swControl = CreateObject(\"ShockwaveFlash.ShockwaveFlash.\" + CStr(i))");
document.writeln("  if (IsObject(swControl)) then");
document.writeln("    swVersion = swControl.GetVariable(\"$version\")");
document.writeln("  end if");
document.writeln("  VBGetSwfVer = swVersion");
document.writeln("End Function");
document.writeln("</script>");
}
this._detectVersion();
this._detectCommunicationVersion();
};
dojo.flash.Info.prototype={version:-1,versionMajor:-1,versionMinor:-1,versionRevision:-1,capable:false,commVersion:6,installing:false,isVersionOrAbove:function(_b74,_b75,_b76){
_b76=parseFloat("."+_b76);
if(this.versionMajor>=_b74&&this.versionMinor>=_b75&&this.versionRevision>=_b76){
return true;
}else{
return false;
}
},_detectVersion:function(){
var _b77;
for(var _b78=25;_b78>0;_b78--){
if(dojo.render.html.ie){
_b77=VBGetSwfVer(_b78);
}else{
_b77=this._JSFlashInfo(_b78);
}
if(_b77==-1){
this.capable=false;
return;
}else{
if(_b77!=0){
var _b79;
if(dojo.render.html.ie){
var _b7a=_b77.split(" ");
var _b7b=_b7a[1];
_b79=_b7b.split(",");
}else{
_b79=_b77.split(".");
}
this.versionMajor=_b79[0];
this.versionMinor=_b79[1];
this.versionRevision=_b79[2];
var _b7c=this.versionMajor+"."+this.versionRevision;
this.version=parseFloat(_b7c);
this.capable=true;
break;
}
}
}
},_JSFlashInfo:function(_b7d){
if(navigator.plugins!=null&&navigator.plugins.length>0){
if(navigator.plugins["Shockwave Flash 2.0"]||navigator.plugins["Shockwave Flash"]){
var _b7e=navigator.plugins["Shockwave Flash 2.0"]?" 2.0":"";
var _b7f=navigator.plugins["Shockwave Flash"+_b7e].description;
var _b80=_b7f.split(" ");
var _b81=_b80[2].split(".");
var _b82=_b81[0];
var _b83=_b81[1];
if(_b80[3]!=""){
var _b84=_b80[3].split("r");
}else{
var _b84=_b80[4].split("r");
}
var _b85=_b84[1]>0?_b84[1]:0;
var _b86=_b82+"."+_b83+"."+_b85;
return _b86;
}
}
return -1;
},_detectCommunicationVersion:function(){
if(this.capable==false){
this.commVersion=null;
return;
}
if(typeof djConfig["forceFlashComm"]!="undefined"&&typeof djConfig["forceFlashComm"]!=null){
this.commVersion=djConfig["forceFlashComm"];
return;
}
if(dojo.render.html.safari==true||dojo.render.html.opera==true){
this.commVersion=8;
}else{
this.commVersion=6;
}
}};
dojo.flash.Embed=function(_b87){
this._visible=_b87;
};
dojo.flash.Embed.prototype={width:215,height:138,id:"flashObject",_visible:true,protocol:function(){
switch(window.location.protocol){
case "https:":
return "https";
break;
default:
return "http";
break;
}
},write:function(_b88,_b89){
if(dojo.lang.isUndefined(_b89)){
_b89=false;
}
var _b8a=new dojo.string.Builder();
_b8a.append("width: "+this.width+"px; ");
_b8a.append("height: "+this.height+"px; ");
if(this._visible==false){
_b8a.append("position: absolute; ");
_b8a.append("z-index: 10000; ");
_b8a.append("top: -1000px; ");
_b8a.append("left: -1000px; ");
}
_b8a=_b8a.toString();
var _b8b;
var _b8c;
if(_b88==6){
_b8c=dojo.flash.flash6_version;
var _b8d=djConfig.baseRelativePath;
_b8c=_b8c+"?baseRelativePath="+escape(_b8d);
_b8b="<embed id=\""+this.id+"\" src=\""+_b8c+"\" "+"    quality=\"high\" bgcolor=\"#ffffff\" "+"    width=\""+this.width+"\" height=\""+this.height+"\" "+"    name=\""+this.id+"\" "+"    align=\"middle\" allowScriptAccess=\"sameDomain\" "+"    type=\"application/x-shockwave-flash\" swLiveConnect=\"true\" "+"    pluginspage=\""+this.protocol()+"://www.macromedia.com/go/getflashplayer\">";
}else{
_b8c=dojo.flash.flash8_version;
var _b8e=_b8c;
var _b8f=_b8c;
var _b8d=djConfig.baseRelativePath;
if(_b89){
var _b90=escape(window.location);
document.title=document.title.slice(0,47)+" - Flash Player Installation";
var _b91=escape(document.title);
_b8e+="?MMredirectURL="+_b90+"&MMplayerType=ActiveX"+"&MMdoctitle="+_b91+"&baseRelativePath="+escape(_b8d);
_b8f+="?MMredirectURL="+_b90+"&MMplayerType=PlugIn"+"&baseRelativePath="+escape(_b8d);
}
if(_b8f.indexOf("?")==-1){
_b8f+="?baseRelativePath="+escape(_b8d)+"' ";
}
_b8b="<object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" "+"codebase=\""+this.protocol()+"://fpdownload.macromedia.com/pub/shockwave/cabs/flash/"+"swflash.cab#version=8,0,0,0\" "+"width=\""+this.width+"\" "+"height=\""+this.height+"\" "+"id=\""+this.id+"\" "+"align=\"middle\"> "+"<param name=\"allowScriptAccess\" value=\"sameDomain\" /> "+"<param name=\"movie\" value=\""+_b8e+"\" /> "+"<param name=\"quality\" value=\"high\" /> "+"<param name=\"bgcolor\" value=\"#ffffff\" /> "+"<embed src=\""+_b8f+"' "+"quality=\"high\" "+"bgcolor=\"#ffffff\" "+"width=\""+this.width+"\" "+"height=\""+this.height+"\" "+"id=\""+this.id+"\" "+"name=\""+this.id+"\" "+"swLiveConnect=\"true\" "+"align=\"middle\" "+"allowScriptAccess=\"sameDomain\" "+"type=\"application/x-shockwave-flash\" "+"pluginspage=\""+this.protocol()+"://www.macromedia.com/go/getflashplayer\" />"+"</object>";
}
_b8b="<div id=\""+this.id+"Container\" style=\""+_b8a+"\"> "+_b8b+"</div>";
document.writeln(_b8b);
},get:function(){
return document.getElementById(this.id);
},setVisible:function(_b92){
var _b93=dojo.byId(this.id+"Container");
if(_b92==true){
_b93.style.visibility="visible";
}else{
_b93.style.position="absolute";
_b93.style.x="-1000px";
_b93.style.y="-1000px";
_b93.style.visibility="hidden";
}
},center:function(){
var _b94=this.width;
var _b95=this.height;
var _b96=dojo.html.getScroll().offset;
var _b97=dojo.html.getViewport();
var x=_b96.x+(_b97.width-_b94)/2;
var y=_b96.y+(_b97.height-_b95)/2;
var _b9a=dojo.byId(this.id+"Container");
_b9a.style.top=y+"px";
_b9a.style.left=x+"px";
}};
dojo.flash.Communicator=function(){
if(dojo.flash.useFlash6()){
this._writeFlash6();
}else{
if(dojo.flash.useFlash8()){
this._writeFlash8();
}
}
};
dojo.flash.Communicator.prototype={_writeFlash6:function(){
var id=dojo.flash.obj.id;
document.writeln("<script language=\"JavaScript\">");
document.writeln("  function "+id+"_DoFSCommand(command, args){ ");
document.writeln("    dojo.flash.comm._handleFSCommand(command, args); ");
document.writeln("}");
document.writeln("</script>");
if(dojo.render.html.ie){
document.writeln("<SCRIPT LANGUAGE=VBScript> ");
document.writeln("on error resume next ");
document.writeln("Sub "+id+"_FSCommand(ByVal command, ByVal args)");
document.writeln(" call "+id+"_DoFSCommand(command, args)");
document.writeln("end sub");
document.writeln("</SCRIPT> ");
}
},_writeFlash8:function(){
},_handleFSCommand:function(_b9c,args){
if(_b9c!=null&&!dojo.lang.isUndefined(_b9c)&&/^FSCommand:(.*)/.test(_b9c)==true){
_b9c=_b9c.match(/^FSCommand:(.*)/)[1];
}
if(_b9c=="addCallback"){
this._fscommandAddCallback(_b9c,args);
}else{
if(_b9c=="call"){
this._fscommandCall(_b9c,args);
}else{
if(_b9c=="fscommandReady"){
this._fscommandReady();
}
}
}
},_fscommandAddCallback:function(_b9e,args){
var _ba0=args;
var _ba1=function(){
return dojo.flash.comm._call(_ba0,arguments);
};
dojo.flash.comm[_ba0]=_ba1;
dojo.flash.obj.get().SetVariable("_succeeded",true);
},_fscommandCall:function(_ba2,args){
var _ba4=dojo.flash.obj.get();
var _ba5=args;
var _ba6=parseInt(_ba4.GetVariable("_numArgs"));
var _ba7=new Array();
for(var i=0;i<_ba6;i++){
var _ba9=_ba4.GetVariable("_"+i);
_ba7.push(_ba9);
}
var _baa;
if(_ba5.indexOf(".")==-1){
_baa=window[_ba5];
}else{
_baa=eval(_ba5);
}
var _bab=null;
if(!dojo.lang.isUndefined(_baa)&&_baa!=null){
_bab=_baa.apply(null,_ba7);
}
_ba4.SetVariable("_returnResult",_bab);
},_fscommandReady:function(){
var _bac=dojo.flash.obj.get();
_bac.SetVariable("fscommandReady","true");
},_call:function(_bad,args){
var _baf=dojo.flash.obj.get();
_baf.SetVariable("_functionName",_bad);
_baf.SetVariable("_numArgs",args.length);
for(var i=0;i<args.length;i++){
var _bb1=args[i];
_bb1=_bb1.replace(/\0/g,"\\0");
_baf.SetVariable("_"+i,_bb1);
}
_baf.TCallLabel("/_flashRunner","execute");
var _bb2=_baf.GetVariable("_returnResult");
_bb2=_bb2.replace(/\\0/g,"\x00");
return _bb2;
},_addExternalInterfaceCallback:function(_bb3){
var _bb4=function(){
var _bb5=new Array(arguments.length);
for(var i=0;i<arguments.length;i++){
_bb5[i]=arguments[i];
}
return dojo.flash.comm._execFlash(_bb3,_bb5);
};
dojo.flash.comm[_bb3]=_bb4;
},_encodeData:function(data){
var _bb8=/\&([^;]*)\;/g;
data=data.replace(_bb8,"&amp;$1;");
data=data.replace(/</g,"&lt;");
data=data.replace(/>/g,"&gt;");
data=data.replace("\\","&custom_backslash;&custom_backslash;");
data=data.replace(/\n/g,"\\n");
data=data.replace(/\r/g,"\\r");
data=data.replace(/\f/g,"\\f");
data=data.replace(/\0/g,"\\0");
data=data.replace(/\'/g,"\\'");
data=data.replace(/\"/g,"\\\"");
return data;
},_decodeData:function(data){
if(data==null||typeof data=="undefined"){
return data;
}
data=data.replace(/\&custom_lt\;/g,"<");
data=data.replace(/\&custom_gt\;/g,">");
data=eval("\""+data+"\"");
return data;
},_chunkArgumentData:function(_bba,_bbb){
var _bbc=dojo.flash.obj.get();
var _bbd=Math.ceil(_bba.length/1024);
for(var i=0;i<_bbd;i++){
var _bbf=i*1024;
var _bc0=i*1024+1024;
if(i==(_bbd-1)){
_bc0=i*1024+_bba.length;
}
var _bc1=_bba.substring(_bbf,_bc0);
_bc1=this._encodeData(_bc1);
_bbc.CallFunction("<invoke name=\"chunkArgumentData\" "+"returntype=\"javascript\">"+"<arguments>"+"<string>"+_bc1+"</string>"+"<number>"+_bbb+"</number>"+"</arguments>"+"</invoke>");
}
},_chunkReturnData:function(){
var _bc2=dojo.flash.obj.get();
var _bc3=_bc2.getReturnLength();
var _bc4=new Array();
for(var i=0;i<_bc3;i++){
var _bc6=_bc2.CallFunction("<invoke name=\"chunkReturnData\" "+"returntype=\"javascript\">"+"<arguments>"+"<number>"+i+"</number>"+"</arguments>"+"</invoke>");
if(_bc6=="\"\""||_bc6=="''"){
_bc6="";
}else{
_bc6=_bc6.substring(1,_bc6.length-1);
}
_bc4.push(_bc6);
}
var _bc7=_bc4.join("");
return _bc7;
},_execFlash:function(_bc8,_bc9){
var _bca=dojo.flash.obj.get();
_bca.startExec();
_bca.setNumberArguments(_bc9.length);
for(var i=0;i<_bc9.length;i++){
this._chunkArgumentData(_bc9[i],i);
}
_bca.exec(_bc8);
var _bcc=this._chunkReturnData();
_bcc=this._decodeData(_bcc);
_bca.endExec();
return _bcc;
}};
dojo.flash.Install=function(){
};
dojo.flash.Install.prototype={needed:function(){
if(dojo.flash.info.capable==false){
return true;
}
if(dojo.render.os.mac==true&&!dojo.flash.info.isVersionOrAbove(8,0,0)){
return true;
}
if(!dojo.flash.info.isVersionOrAbove(6,0,0)){
return true;
}
return false;
},install:function(){
dojo.flash.info.installing=true;
dojo.flash.installing();
if(dojo.flash.info.capable==false){
var _bcd=new dojo.flash.Embed(false);
_bcd.write(8);
}else{
if(dojo.flash.info.isVersionOrAbove(6,0,65)){
var _bcd=new dojo.flash.Embed(false);
_bcd.write(8,true);
_bcd.setVisible(true);
_bcd.center();
}else{
alert("This content requires a more recent version of the Macromedia "+" Flash Player.");
window.location.href=+dojo.flash.Embed.protocol()+"://www.macromedia.com/go/getflashplayer";
}
}
},_onInstallStatus:function(msg){
if(msg=="Download.Complete"){
dojo.flash._initialize();
}else{
if(msg=="Download.Cancelled"){
alert("This content requires a more recent version of the Macromedia "+" Flash Player.");
window.location.href=dojo.flash.Embed.protocol()+"://www.macromedia.com/go/getflashplayer";
}else{
if(msg=="Download.Failed"){
alert("There was an error downloading the Flash Player update. "+"Please try again later, or visit macromedia.com to download "+"the latest version of the Flash plugin.");
}
}
}
}};
dojo.flash.info=new dojo.flash.Info();
dojo.provide("dojo.storage");
dojo.storage=new function(){
};
dojo.declare("dojo.storage",null,{SUCCESS:"success",FAILED:"failed",PENDING:"pending",SIZE_NOT_AVAILABLE:"Size not available",SIZE_NO_LIMIT:"No size limit",namespace:"default",onHideSettingsUI:null,initialize:function(){
dojo.unimplemented("dojo.storage.initialize");
},isAvailable:function(){
dojo.unimplemented("dojo.storage.isAvailable");
},put:function(key,_bd0,_bd1){
dojo.unimplemented("dojo.storage.put");
},get:function(key){
dojo.unimplemented("dojo.storage.get");
},hasKey:function(key){
return (this.get(key)!=null);
},getKeys:function(){
dojo.unimplemented("dojo.storage.getKeys");
},clear:function(){
dojo.unimplemented("dojo.storage.clear");
},remove:function(key){
dojo.unimplemented("dojo.storage.remove");
},isPermanent:function(){
dojo.unimplemented("dojo.storage.isPermanent");
},getMaximumSize:function(){
dojo.unimplemented("dojo.storage.getMaximumSize");
},hasSettingsUI:function(){
return false;
},showSettingsUI:function(){
dojo.unimplemented("dojo.storage.showSettingsUI");
},hideSettingsUI:function(){
dojo.unimplemented("dojo.storage.hideSettingsUI");
},getType:function(){
dojo.unimplemented("dojo.storage.getType");
},isValidKey:function(_bd5){
if((_bd5==null)||(typeof _bd5=="undefined")){
return false;
}
return /^[0-9A-Za-z_]*$/.test(_bd5);
}});
dojo.storage.manager=new function(){
this.currentProvider=null;
this.available=false;
this._initialized=false;
this._providers=[];
this.namespace="default";
this.initialize=function(){
this.autodetect();
};
this.register=function(name,_bd7){
this._providers[this._providers.length]=_bd7;
this._providers[name]=_bd7;
};
this.setProvider=function(_bd8){
};
this.autodetect=function(){
if(this._initialized==true){
return;
}
var _bd9=null;
for(var i=0;i<this._providers.length;i++){
_bd9=this._providers[i];
if(dojo.lang.isUndefined(djConfig["forceStorageProvider"])==false&&_bd9.getType()==djConfig["forceStorageProvider"]){
_bd9.isAvailable();
break;
}else{
if(dojo.lang.isUndefined(djConfig["forceStorageProvider"])==true&&_bd9.isAvailable()){
break;
}
}
}
if(_bd9==null){
this._initialized=true;
this.available=false;
this.currentProvider=null;
dojo.raise("No storage provider found for this platform");
}
this.currentProvider=_bd9;
for(var i in _bd9){
dojo.storage[i]=_bd9[i];
}
dojo.storage.manager=this;
dojo.storage.initialize();
this._initialized=true;
this.available=true;
};
this.isAvailable=function(){
return this.available;
};
this.isInitialized=function(){
if(this.currentProvider.getType()=="dojo.storage.browser.FlashStorageProvider"&&dojo.flash.ready==false){
return false;
}else{
return this._initialized;
}
};
this.supportsProvider=function(_bdb){
try{
var _bdc=eval("new "+_bdb+"()");
var _bdd=_bdc.isAvailable();
if(_bdd==null||typeof _bdd=="undefined"){
return false;
}
return _bdd;
}
catch(exception){
return false;
}
};
this.getProvider=function(){
return this.currentProvider;
};
this.loaded=function(){
};
};
dojo.provide("dojo.json");
dojo.json={jsonRegistry:new dojo.AdapterRegistry(),register:function(name,_bdf,wrap,_be1){
dojo.json.jsonRegistry.register(name,_bdf,wrap,_be1);
},evalJson:function(json){
try{
return eval("("+json+")");
}
catch(e){
dojo.debug(e);
return json;
}
},serialize:function(o){
var _be4=typeof (o);
if(_be4=="undefined"){
return "undefined";
}else{
if((_be4=="number")||(_be4=="boolean")){
return o+"";
}else{
if(o===null){
return "null";
}
}
}
if(_be4=="string"){
return dojo.string.escapeString(o);
}
var me=arguments.callee;
var _be6;
if(typeof (o.__json__)=="function"){
_be6=o.__json__();
if(o!==_be6){
return me(_be6);
}
}
if(typeof (o.json)=="function"){
_be6=o.json();
if(o!==_be6){
return me(_be6);
}
}
if(_be4!="function"&&typeof (o.length)=="number"){
var res=[];
for(var i=0;i<o.length;i++){
var val=me(o[i]);
if(typeof (val)!="string"){
val="undefined";
}
res.push(val);
}
return "["+res.join(",")+"]";
}
try{
window.o=o;
_be6=dojo.json.jsonRegistry.match(o);
return me(_be6);
}
catch(e){
}
if(_be4=="function"){
return null;
}
res=[];
for(var k in o){
var _beb;
if(typeof (k)=="number"){
_beb="\""+k+"\"";
}else{
if(typeof (k)=="string"){
_beb=dojo.string.escapeString(k);
}else{
continue;
}
}
val=me(o[k]);
if(typeof (val)!="string"){
continue;
}
res.push(_beb+":"+val);
}
return "{"+res.join(",")+"}";
}};
dojo.provide("dojo.storage.browser");
dojo.storage.browser.WhatWGStorageProvider=function(){
};
dojo.inherits(dojo.storage.browser.WhatWGStorageProvider,dojo.storage);
dojo.lang.extend(dojo.storage.browser.WhatWGStorageProvider,{namespace:"default",initialized:false,_domain:null,_available:null,_statusHandler:null,initialize:function(){
if(djConfig["disableWhatWGStorage"]==true){
return;
}
this._domain=location.hostname;
this.initialized=true;
dojo.storage.manager.loaded();
},isAvailable:function(){
try{
var _bec=globalStorage[location.hostname];
}
catch(e){
this._available=false;
return this._available;
}
this._available=true;
return this._available;
},put:function(key,_bee,_bef){
if(this.isValidKey(key)==false){
dojo.raise("Invalid key given: "+key);
}
this._statusHandler=_bef;
if(dojo.lang.isString(_bee)){
_bee="string:"+_bee;
}else{
_bee=dojo.json.serialize(_bee);
}
window.addEventListener("storage",function(evt){
_bef.call(null,dojo.storage.SUCCESS,key);
},false);
try{
var _bf1=globalStorage[this._domain];
_bf1.setItem(key,_bee);
}
catch(e){
this._statusHandler.call(null,dojo.storage.FAILED,key,e.toString());
}
},get:function(key){
if(this.isValidKey(key)==false){
dojo.raise("Invalid key given: "+key);
}
var _bf3=globalStorage[this._domain];
var _bf4=_bf3.getItem(key);
if(_bf4==null){
return null;
}
_bf4=_bf4.value;
if(!dojo.lang.isUndefined(_bf4)&&_bf4!=null&&/^string:/.test(_bf4)){
_bf4=_bf4.substring("string:".length);
}else{
_bf4=dojo.json.evalJson(_bf4);
}
return _bf4;
},getKeys:function(){
var _bf5=globalStorage[this._domain];
var _bf6=new Array();
for(i=0;i<_bf5.length;i++){
_bf6[i]=_bf5.key(i);
}
return _bf6;
},clear:function(){
var _bf7=globalStorage[this._domain];
var keys=new Array();
for(var i=0;i<_bf7.length;i++){
keys[keys.length]=_bf7.key(i);
}
for(var i=0;i<keys.length;i++){
_bf7.removeItem(keys[i]);
}
},remove:function(key){
var _bfb=globalStorage[this._domain];
_bfb.removeItem(key);
},isPermanent:function(){
return true;
},getMaximumSize:function(){
return dojo.storage.SIZE_NO_LIMIT;
},hasSettingsUI:function(){
return false;
},showSettingsUI:function(){
dojo.raise(this.getType()+" does not support a storage settings user-interface");
},hideSettingsUI:function(){
dojo.raise(this.getType()+" does not support a storage settings user-interface");
},getType:function(){
return "dojo.storage.browser.WhatWGStorageProvider";
}});
dojo.storage.browser.FlashStorageProvider=function(){
};
dojo.inherits(dojo.storage.browser.FlashStorageProvider,dojo.storage);
dojo.lang.extend(dojo.storage.browser.FlashStorageProvider,{namespace:"default",initialized:false,_available:null,_statusHandler:null,initialize:function(){
if(djConfig["disableFlashStorage"]==true){
return;
}
var _bfc=function(){
dojo.storage._flashLoaded();
};
dojo.flash.addLoadedListener(_bfc);
var _bfd=dojo.uri.dojoUri("Storage_version6.swf").toString();
var _bfe=dojo.uri.dojoUri("Storage_version8.swf").toString();
dojo.flash.setSwf({flash6:_bfd,flash8:_bfe,visible:false});
},isAvailable:function(){
if(djConfig["disableFlashStorage"]==true){
this._available=false;
}else{
this._available=true;
}
return this._available;
},put:function(key,_c00,_c01){
if(this.isValidKey(key)==false){
dojo.raise("Invalid key given: "+key);
}
this._statusHandler=_c01;
if(dojo.lang.isString(_c00)){
_c00="string:"+_c00;
}else{
_c00=dojo.json.serialize(_c00);
}
dojo.flash.comm.put(key,_c00,this.namespace);
},get:function(key){
if(this.isValidKey(key)==false){
dojo.raise("Invalid key given: "+key);
}
var _c03=dojo.flash.comm.get(key,this.namespace);
if(_c03==""){
return null;
}
if(!dojo.lang.isUndefined(_c03)&&_c03!=null&&/^string:/.test(_c03)){
_c03=_c03.substring("string:".length);
}else{
_c03=dojo.json.evalJson(_c03);
}
return _c03;
},getKeys:function(){
var _c04=dojo.flash.comm.getKeys(this.namespace);
if(_c04==""){
return [];
}
return _c04.split(",");
},clear:function(){
dojo.flash.comm.clear(this.namespace);
},remove:function(key){
dojo.unimplemented("dojo.storage.browser.FlashStorageProvider.remove");
},isPermanent:function(){
return true;
},getMaximumSize:function(){
return dojo.storage.SIZE_NO_LIMIT;
},hasSettingsUI:function(){
return true;
},showSettingsUI:function(){
dojo.flash.comm.showSettings();
dojo.flash.obj.setVisible(true);
dojo.flash.obj.center();
},hideSettingsUI:function(){
dojo.flash.obj.setVisible(false);
if(dojo.storage.onHideSettingsUI!=null&&!dojo.lang.isUndefined(dojo.storage.onHideSettingsUI)){
dojo.storage.onHideSettingsUI.call(null);
}
},getType:function(){
return "dojo.storage.browser.FlashStorageProvider";
},_flashLoaded:function(){
this._initialized=true;
dojo.storage.manager.loaded();
},_onStatus:function(_c06,key){
var ds=dojo.storage;
var dfo=dojo.flash.obj;
if(_c06==ds.PENDING){
dfo.center();
dfo.setVisible(true);
}else{
dfo.setVisible(false);
}
if((!dj_undef("_statusHandler",ds))&&(ds._statusHandler!=null)){
ds._statusHandler.call(null,_c06,key);
}
}});
dojo.storage.manager.register("dojo.storage.browser.WhatWGStorageProvider",new dojo.storage.browser.WhatWGStorageProvider());
dojo.storage.manager.register("dojo.storage.browser.FlashStorageProvider",new dojo.storage.browser.FlashStorageProvider());
dojo.storage.manager.initialize();
dojo.provide("dojo.storage.*");


__CPAN_EDITION__ moxie build.txt

Files baked into this package:

dojoGuardStart.js,
../src/bootstrap1.js,
../src/loader.js,
dojoGuardEnd.js,
../src/hostenv_browser.js,
../src/bootstrap2.js,
../src/lang/common.js,
../src/dom.js,
../src/html/common.js,
../src/uri/Uri.js,
../src/html/style.js,
../src/html/__package__.js,
../src/html/display.js,
../src/html/layout.js,
../src/html/util.js,
../src/xml/Parse.js,
../src/lang/func.js,
../src/lang/array.js,
../src/lang/extras.js,
../src/lang/declare.js,
../src/ns.js,
../src/event/common.js,
../src/event/topic.js,
../src/event/browser.js,
../src/event/__package__.js,
../src/widget/Manager.js,
../src/uri/__package__.js,
../src/a11y.js,
../src/widget/Widget.js,
../src/widget/Parse.js,
../src/widget/DomWidget.js,
../src/gfx/color.js,
../src/lfx/Animation.js,
../src/html/color.js,
../src/lfx/html.js,
../src/lfx/__package__.js,
../src/lfx/toggle.js,
../src/widget/HtmlWidget.js,
../src/widget/__package__.js,
../src/string/common.js,
../src/string.js,
../src/io/common.js,
../src/string/extras.js,
../src/undo/browser.js,
../src/io/BrowserIO.js,
../src/io/cookie.js,
../src/io/__package__.js,
../src/html/selection.js,
../src/Deferred.js,
../src/widget/RichText.js,
../src/lang/type.js,
../src/lang/assert.js,
../src/AdapterRegistry.js,
../src/lang/repr.js,
../src/lang/__package__.js,
../src/html/iframe.js,
../src/widget/PopupContainer.js,
../src/widget/ColorPalette.js,
../src/widget/ContentPane.js,
../src/widget/Editor2Toolbar.js,
../src/lfx/shadow.js,
../src/widget/html/layout.js,
../src/dnd/DragAndDrop.js,
../src/dnd/HtmlDragManager.js,
../src/dnd/HtmlDragAndDrop.js,
../src/dnd/__package__.js,
../src/dnd/HtmlDragMove.js,
../src/widget/Dialog.js,
../src/widget/ResizeHandle.js,
../src/widget/FloatingPane.js,
../src/widget/Editor2Plugin/AlwaysShowToolbar.js,
../src/widget/Editor2.js,
../src/string/Builder.js,
../src/string/__package__.js,
../src/flash.js,
../src/storage.js,
../src/json.js,
../src/storage/browser.js,
../src/storage/__package__.js

		
__CPAN_EDITION__ storage dojo.js
/*
	Copyright (c) 2004-2006, The Dojo Foundation
	All Rights Reserved.

	Licensed under the Academic Free License version 2.1 or above OR the
	modified BSD license. For more information on Dojo licensing, see:

		http://dojotoolkit.org/community/licensing.shtml
*/

/*
	This is a compiled version of Dojo, built for deployment and not for
	development. To get an editable version, please visit:

		http://dojotoolkit.org

	for documentation and information on getting the source.
*/

if(typeof dojo=="undefined"){
var dj_global=this;
var dj_currentContext=this;
function dj_undef(_1,_2){
return (typeof (_2||dj_currentContext)[_1]=="undefined");
}
if(dj_undef("djConfig",this)){
var djConfig={};
}
if(dj_undef("dojo",this)){
var dojo={};
}
dojo.global=function(){
return dj_currentContext;
};
dojo.locale=djConfig.locale;
dojo.version={major:0,minor:4,patch:1,flag:"",revision:Number("$Rev: 6824 $".match(/[0-9]+/)[0]),toString:function(){
with(dojo.version){
return major+"."+minor+"."+patch+flag+" ("+revision+")";
}
}};
dojo.evalProp=function(_3,_4,_5){
if((!_4)||(!_3)){
return undefined;
}
if(!dj_undef(_3,_4)){
return _4[_3];
}
return (_5?(_4[_3]={}):undefined);
};
dojo.parseObjPath=function(_6,_7,_8){
var _9=(_7||dojo.global());
var _a=_6.split(".");
var _b=_a.pop();
for(var i=0,l=_a.length;i<l&&_9;i++){
_9=dojo.evalProp(_a[i],_9,_8);
}
return {obj:_9,prop:_b};
};
dojo.evalObjPath=function(_e,_f){
if(typeof _e!="string"){
return dojo.global();
}
if(_e.indexOf(".")==-1){
return dojo.evalProp(_e,dojo.global(),_f);
}
var ref=dojo.parseObjPath(_e,dojo.global(),_f);
if(ref){
return dojo.evalProp(ref.prop,ref.obj,_f);
}
return null;
};
dojo.errorToString=function(_11){
if(!dj_undef("message",_11)){
return _11.message;
}else{
if(!dj_undef("description",_11)){
return _11.description;
}else{
return _11;
}
}
};
dojo.raise=function(_12,_13){
if(_13){
_12=_12+": "+dojo.errorToString(_13);
}else{
_12=dojo.errorToString(_12);
}
try{
if(djConfig.isDebug){
dojo.hostenv.println("FATAL exception raised: "+_12);
}
}
catch(e){
}
throw _13||Error(_12);
};
dojo.debug=function(){
};
dojo.debugShallow=function(obj){
};
dojo.profile={start:function(){
},end:function(){
},stop:function(){
},dump:function(){
}};
function dj_eval(_15){
return dj_global.eval?dj_global.eval(_15):eval(_15);
}
dojo.unimplemented=function(_16,_17){
var _18="'"+_16+"' not implemented";
if(_17!=null){
_18+=" "+_17;
}
dojo.raise(_18);
};
dojo.deprecated=function(_19,_1a,_1b){
var _1c="DEPRECATED: "+_19;
if(_1a){
_1c+=" "+_1a;
}
if(_1b){
_1c+=" -- will be removed in version: "+_1b;
}
dojo.debug(_1c);
};
dojo.render=(function(){
function vscaffold(_1d,_1e){
var tmp={capable:false,support:{builtin:false,plugin:false},prefixes:_1d};
for(var i=0;i<_1e.length;i++){
tmp[_1e[i]]=false;
}
return tmp;
}
return {name:"",ver:dojo.version,os:{win:false,linux:false,osx:false},html:vscaffold(["html"],["ie","opera","khtml","safari","moz"]),svg:vscaffold(["svg"],["corel","adobe","batik"]),vml:vscaffold(["vml"],["ie"]),swf:vscaffold(["Swf","Flash","Mm"],["mm"]),swt:vscaffold(["Swt"],["ibm"])};
})();
dojo.hostenv=(function(){
var _21={isDebug:false,allowQueryConfig:false,baseScriptUri:"",baseRelativePath:"",libraryScriptUri:"",iePreventClobber:false,ieClobberMinimal:true,preventBackButtonFix:true,delayMozLoadingFix:false,searchIds:[],parseWidgets:true};
if(typeof djConfig=="undefined"){
djConfig=_21;
}else{
for(var _22 in _21){
if(typeof djConfig[_22]=="undefined"){
djConfig[_22]=_21[_22];
}
}
}
return {name_:"(unset)",version_:"(unset)",getName:function(){
return this.name_;
},getVersion:function(){
return this.version_;
},getText:function(uri){
dojo.unimplemented("getText","uri="+uri);
}};
})();
dojo.hostenv.getBaseScriptUri=function(){
if(djConfig.baseScriptUri.length){
return djConfig.baseScriptUri;
}
var uri=new String(djConfig.libraryScriptUri||djConfig.baseRelativePath);
if(!uri){
dojo.raise("Nothing returned by getLibraryScriptUri(): "+uri);
}
var _25=uri.lastIndexOf("/");
djConfig.baseScriptUri=djConfig.baseRelativePath;
return djConfig.baseScriptUri;
};
(function(){
var _26={pkgFileName:"__package__",loading_modules_:{},loaded_modules_:{},addedToLoadingCount:[],removedFromLoadingCount:[],inFlightCount:0,modulePrefixes_:{dojo:{name:"dojo",value:"src"}},setModulePrefix:function(_27,_28){
this.modulePrefixes_[_27]={name:_27,value:_28};
},moduleHasPrefix:function(_29){
var mp=this.modulePrefixes_;
return Boolean(mp[_29]&&mp[_29].value);
},getModulePrefix:function(_2b){
if(this.moduleHasPrefix(_2b)){
return this.modulePrefixes_[_2b].value;
}
return _2b;
},getTextStack:[],loadUriStack:[],loadedUris:[],post_load_:false,modulesLoadedListeners:[],unloadListeners:[],loadNotifying:false};
for(var _2c in _26){
dojo.hostenv[_2c]=_26[_2c];
}
})();
dojo.hostenv.loadPath=function(_2d,_2e,cb){
var uri;
if(_2d.charAt(0)=="/"||_2d.match(/^\w+:/)){
uri=_2d;
}else{
uri=this.getBaseScriptUri()+_2d;
}
if(djConfig.cacheBust&&dojo.render.html.capable){
uri+="?"+String(djConfig.cacheBust).replace(/\W+/g,"");
}
try{
return !_2e?this.loadUri(uri,cb):this.loadUriAndCheck(uri,_2e,cb);
}
catch(e){
dojo.debug(e);
return false;
}
};
dojo.hostenv.loadUri=function(uri,cb){
if(this.loadedUris[uri]){
return true;
}
var _33=this.getText(uri,null,true);
if(!_33){
return false;
}
this.loadedUris[uri]=true;
if(cb){
_33="("+_33+")";
}
var _34=dj_eval(_33);
if(cb){
cb(_34);
}
return true;
};
dojo.hostenv.loadUriAndCheck=function(uri,_36,cb){
var ok=true;
try{
ok=this.loadUri(uri,cb);
}
catch(e){
dojo.debug("failed loading ",uri," with error: ",e);
}
return Boolean(ok&&this.findModule(_36,false));
};
dojo.loaded=function(){
};
dojo.unloaded=function(){
};
dojo.hostenv.loaded=function(){
this.loadNotifying=true;
this.post_load_=true;
var mll=this.modulesLoadedListeners;
for(var x=0;x<mll.length;x++){
mll[x]();
}
this.modulesLoadedListeners=[];
this.loadNotifying=false;
dojo.loaded();
};
dojo.hostenv.unloaded=function(){
var mll=this.unloadListeners;
while(mll.length){
(mll.pop())();
}
dojo.unloaded();
};
dojo.addOnLoad=function(obj,_3d){
var dh=dojo.hostenv;
if(arguments.length==1){
dh.modulesLoadedListeners.push(obj);
}else{
if(arguments.length>1){
dh.modulesLoadedListeners.push(function(){
obj[_3d]();
});
}
}
if(dh.post_load_&&dh.inFlightCount==0&&!dh.loadNotifying){
dh.callLoaded();
}
};
dojo.addOnUnload=function(obj,_40){
var dh=dojo.hostenv;
if(arguments.length==1){
dh.unloadListeners.push(obj);
}else{
if(arguments.length>1){
dh.unloadListeners.push(function(){
obj[_40]();
});
}
}
};
dojo.hostenv.modulesLoaded=function(){
if(this.post_load_){
return;
}
if(this.loadUriStack.length==0&&this.getTextStack.length==0){
if(this.inFlightCount>0){
dojo.debug("files still in flight!");
return;
}
dojo.hostenv.callLoaded();
}
};
dojo.hostenv.callLoaded=function(){
if(typeof setTimeout=="object"){
setTimeout("dojo.hostenv.loaded();",0);
}else{
dojo.hostenv.loaded();
}
};
dojo.hostenv.getModuleSymbols=function(_42){
var _43=_42.split(".");
for(var i=_43.length;i>0;i--){
var _45=_43.slice(0,i).join(".");
if((i==1)&&!this.moduleHasPrefix(_45)){
_43[0]="../"+_43[0];
}else{
var _46=this.getModulePrefix(_45);
if(_46!=_45){
_43.splice(0,i,_46);
break;
}
}
}
return _43;
};
dojo.hostenv._global_omit_module_check=false;
dojo.hostenv.loadModule=function(_47,_48,_49){
if(!_47){
return;
}
_49=this._global_omit_module_check||_49;
var _4a=this.findModule(_47,false);
if(_4a){
return _4a;
}
if(dj_undef(_47,this.loading_modules_)){
this.addedToLoadingCount.push(_47);
}
this.loading_modules_[_47]=1;
var _4b=_47.replace(/\./g,"/")+".js";
var _4c=_47.split(".");
var _4d=this.getModuleSymbols(_47);
var _4e=((_4d[0].charAt(0)!="/")&&!_4d[0].match(/^\w+:/));
var _4f=_4d[_4d.length-1];
var ok;
if(_4f=="*"){
_47=_4c.slice(0,-1).join(".");
while(_4d.length){
_4d.pop();
_4d.push(this.pkgFileName);
_4b=_4d.join("/")+".js";
if(_4e&&_4b.charAt(0)=="/"){
_4b=_4b.slice(1);
}
ok=this.loadPath(_4b,!_49?_47:null);
if(ok){
break;
}
_4d.pop();
}
}else{
_4b=_4d.join("/")+".js";
_47=_4c.join(".");
var _51=!_49?_47:null;
ok=this.loadPath(_4b,_51);
if(!ok&&!_48){
_4d.pop();
while(_4d.length){
_4b=_4d.join("/")+".js";
ok=this.loadPath(_4b,_51);
if(ok){
break;
}
_4d.pop();
_4b=_4d.join("/")+"/"+this.pkgFileName+".js";
if(_4e&&_4b.charAt(0)=="/"){
_4b=_4b.slice(1);
}
ok=this.loadPath(_4b,_51);
if(ok){
break;
}
}
}
if(!ok&&!_49){
dojo.raise("Could not load '"+_47+"'; last tried '"+_4b+"'");
}
}
if(!_49&&!this["isXDomain"]){
_4a=this.findModule(_47,false);
if(!_4a){
dojo.raise("symbol '"+_47+"' is not defined after loading '"+_4b+"'");
}
}
return _4a;
};
dojo.hostenv.startPackage=function(_52){
var _53=String(_52);
var _54=_53;
var _55=_52.split(/\./);
if(_55[_55.length-1]=="*"){
_55.pop();
_54=_55.join(".");
}
var _56=dojo.evalObjPath(_54,true);
this.loaded_modules_[_53]=_56;
this.loaded_modules_[_54]=_56;
return _56;
};
dojo.hostenv.findModule=function(_57,_58){
var lmn=String(_57);
if(this.loaded_modules_[lmn]){
return this.loaded_modules_[lmn];
}
if(_58){
dojo.raise("no loaded module named '"+_57+"'");
}
return null;
};
dojo.kwCompoundRequire=function(_5a){
var _5b=_5a["common"]||[];
var _5c=_5a[dojo.hostenv.name_]?_5b.concat(_5a[dojo.hostenv.name_]||[]):_5b.concat(_5a["default"]||[]);
for(var x=0;x<_5c.length;x++){
var _5e=_5c[x];
if(_5e.constructor==Array){
dojo.hostenv.loadModule.apply(dojo.hostenv,_5e);
}else{
dojo.hostenv.loadModule(_5e);
}
}
};
dojo.require=function(_5f){
dojo.hostenv.loadModule.apply(dojo.hostenv,arguments);
};
dojo.requireIf=function(_60,_61){
var _62=arguments[0];
if((_62===true)||(_62=="common")||(_62&&dojo.render[_62].capable)){
var _63=[];
for(var i=1;i<arguments.length;i++){
_63.push(arguments[i]);
}
dojo.require.apply(dojo,_63);
}
};
dojo.requireAfterIf=dojo.requireIf;
dojo.provide=function(_65){
return dojo.hostenv.startPackage.apply(dojo.hostenv,arguments);
};
dojo.registerModulePath=function(_66,_67){
return dojo.hostenv.setModulePrefix(_66,_67);
};
dojo.setModulePrefix=function(_68,_69){
dojo.deprecated("dojo.setModulePrefix(\""+_68+"\", \""+_69+"\")","replaced by dojo.registerModulePath","0.5");
return dojo.registerModulePath(_68,_69);
};
dojo.exists=function(obj,_6b){
var p=_6b.split(".");
for(var i=0;i<p.length;i++){
if(!obj[p[i]]){
return false;
}
obj=obj[p[i]];
}
return true;
};
dojo.hostenv.normalizeLocale=function(_6e){
var _6f=_6e?_6e.toLowerCase():dojo.locale;
if(_6f=="root"){
_6f="ROOT";
}
return _6f;
};
dojo.hostenv.searchLocalePath=function(_70,_71,_72){
_70=dojo.hostenv.normalizeLocale(_70);
var _73=_70.split("-");
var _74=[];
for(var i=_73.length;i>0;i--){
_74.push(_73.slice(0,i).join("-"));
}
_74.push(false);
if(_71){
_74.reverse();
}
for(var j=_74.length-1;j>=0;j--){
var loc=_74[j]||"ROOT";
var _78=_72(loc);
if(_78){
break;
}
}
};
dojo.hostenv.localesGenerated;
dojo.hostenv.registerNlsPrefix=function(){
dojo.registerModulePath("nls","nls");
};
dojo.hostenv.preloadLocalizations=function(){
if(dojo.hostenv.localesGenerated){
dojo.hostenv.registerNlsPrefix();
function preload(_79){
_79=dojo.hostenv.normalizeLocale(_79);
dojo.hostenv.searchLocalePath(_79,true,function(loc){
for(var i=0;i<dojo.hostenv.localesGenerated.length;i++){
if(dojo.hostenv.localesGenerated[i]==loc){
dojo["require"]("nls.dojo_"+loc);
return true;
}
}
return false;
});
}
preload();
var _7c=djConfig.extraLocale||[];
for(var i=0;i<_7c.length;i++){
preload(_7c[i]);
}
}
dojo.hostenv.preloadLocalizations=function(){
};
};
dojo.requireLocalization=function(_7e,_7f,_80,_81){
dojo.hostenv.preloadLocalizations();
var _82=dojo.hostenv.normalizeLocale(_80);
var _83=[_7e,"nls",_7f].join(".");
var _84="";
if(_81){
var _85=_81.split(",");
for(var i=0;i<_85.length;i++){
if(_82.indexOf(_85[i])==0){
if(_85[i].length>_84.length){
_84=_85[i];
}
}
}
if(!_84){
_84="ROOT";
}
}
var _87=_81?_84:_82;
var _88=dojo.hostenv.findModule(_83);
var _89=null;
if(_88){
if(djConfig.localizationComplete&&_88._built){
return;
}
var _8a=_87.replace("-","_");
var _8b=_83+"."+_8a;
_89=dojo.hostenv.findModule(_8b);
}
if(!_89){
_88=dojo.hostenv.startPackage(_83);
var _8c=dojo.hostenv.getModuleSymbols(_7e);
var _8d=_8c.concat("nls").join("/");
var _8e;
dojo.hostenv.searchLocalePath(_87,_81,function(loc){
var _90=loc.replace("-","_");
var _91=_83+"."+_90;
var _92=false;
if(!dojo.hostenv.findModule(_91)){
dojo.hostenv.startPackage(_91);
var _93=[_8d];
if(loc!="ROOT"){
_93.push(loc);
}
_93.push(_7f);
var _94=_93.join("/")+".js";
_92=dojo.hostenv.loadPath(_94,null,function(_95){
var _96=function(){
};
_96.prototype=_8e;
_88[_90]=new _96();
for(var j in _95){
_88[_90][j]=_95[j];
}
});
}else{
_92=true;
}
if(_92&&_88[_90]){
_8e=_88[_90];
}else{
_88[_90]=_8e;
}
if(_81){
return true;
}
});
}
if(_81&&_82!=_84){
_88[_82.replace("-","_")]=_88[_84.replace("-","_")];
}
};
(function(){
var _98=djConfig.extraLocale;
if(_98){
if(!_98 instanceof Array){
_98=[_98];
}
var req=dojo.requireLocalization;
dojo.requireLocalization=function(m,b,_9c,_9d){
req(m,b,_9c,_9d);
if(_9c){
return;
}
for(var i=0;i<_98.length;i++){
req(m,b,_98[i],_9d);
}
};
}
})();
}
if(typeof window!="undefined"){
(function(){
if(djConfig.allowQueryConfig){
var _9f=document.location.toString();
var _a0=_9f.split("?",2);
if(_a0.length>1){
var _a1=_a0[1];
var _a2=_a1.split("&");
for(var x in _a2){
var sp=_a2[x].split("=");
if((sp[0].length>9)&&(sp[0].substr(0,9)=="djConfig.")){
var opt=sp[0].substr(9);
try{
djConfig[opt]=eval(sp[1]);
}
catch(e){
djConfig[opt]=sp[1];
}
}
}
}
}
if(((djConfig["baseScriptUri"]=="")||(djConfig["baseRelativePath"]==""))&&(document&&document.getElementsByTagName)){
var _a6=document.getElementsByTagName("script");
var _a7=/(__package__|dojo|bootstrap1)\.js([\?\.]|$)/i;
for(var i=0;i<_a6.length;i++){
var src=_a6[i].getAttribute("src");
if(!src){
continue;
}
var m=src.match(_a7);
if(m){
var _ab=src.substring(0,m.index);
if(src.indexOf("bootstrap1")>-1){
_ab+="../";
}
if(!this["djConfig"]){
djConfig={};
}
if(djConfig["baseScriptUri"]==""){
djConfig["baseScriptUri"]=_ab;
}
if(djConfig["baseRelativePath"]==""){
djConfig["baseRelativePath"]=_ab;
}
break;
}
}
}
var dr=dojo.render;
var drh=dojo.render.html;
var drs=dojo.render.svg;
var dua=(drh.UA=navigator.userAgent);
var dav=(drh.AV=navigator.appVersion);
var t=true;
var f=false;
drh.capable=t;
drh.support.builtin=t;
dr.ver=parseFloat(drh.AV);
dr.os.mac=dav.indexOf("Macintosh")>=0;
dr.os.win=dav.indexOf("Windows")>=0;
dr.os.linux=dav.indexOf("X11")>=0;
drh.opera=dua.indexOf("Opera")>=0;
drh.khtml=(dav.indexOf("Konqueror")>=0)||(dav.indexOf("Safari")>=0);
drh.safari=dav.indexOf("Safari")>=0;
var _b3=dua.indexOf("Gecko");
drh.mozilla=drh.moz=(_b3>=0)&&(!drh.khtml);
if(drh.mozilla){
drh.geckoVersion=dua.substring(_b3+6,_b3+14);
}
drh.ie=(document.all)&&(!drh.opera);
drh.ie50=drh.ie&&dav.indexOf("MSIE 5.0")>=0;
drh.ie55=drh.ie&&dav.indexOf("MSIE 5.5")>=0;
drh.ie60=drh.ie&&dav.indexOf("MSIE 6.0")>=0;
drh.ie70=drh.ie&&dav.indexOf("MSIE 7.0")>=0;
var cm=document["compatMode"];
drh.quirks=(cm=="BackCompat")||(cm=="QuirksMode")||drh.ie55||drh.ie50;
dojo.locale=dojo.locale||(drh.ie?navigator.userLanguage:navigator.language).toLowerCase();
dr.vml.capable=drh.ie;
drs.capable=f;
drs.support.plugin=f;
drs.support.builtin=f;
var _b5=window["document"];
var tdi=_b5["implementation"];
if((tdi)&&(tdi["hasFeature"])&&(tdi.hasFeature("org.w3c.dom.svg","1.0"))){
drs.capable=t;
drs.support.builtin=t;
drs.support.plugin=f;
}
if(drh.safari){
var tmp=dua.split("AppleWebKit/")[1];
var ver=parseFloat(tmp.split(" ")[0]);
if(ver>=420){
drs.capable=t;
drs.support.builtin=t;
drs.support.plugin=f;
}
}else{
}
})();
dojo.hostenv.startPackage("dojo.hostenv");
dojo.render.name=dojo.hostenv.name_="browser";
dojo.hostenv.searchIds=[];
dojo.hostenv._XMLHTTP_PROGIDS=["Msxml2.XMLHTTP","Microsoft.XMLHTTP","Msxml2.XMLHTTP.4.0"];
dojo.hostenv.getXmlhttpObject=function(){
var _b9=null;
var _ba=null;
try{
_b9=new XMLHttpRequest();
}
catch(e){
}
if(!_b9){
for(var i=0;i<3;++i){
var _bc=dojo.hostenv._XMLHTTP_PROGIDS[i];
try{
_b9=new ActiveXObject(_bc);
}
catch(e){
_ba=e;
}
if(_b9){
dojo.hostenv._XMLHTTP_PROGIDS=[_bc];
break;
}
}
}
if(!_b9){
return dojo.raise("XMLHTTP not available",_ba);
}
return _b9;
};
dojo.hostenv._blockAsync=false;
dojo.hostenv.getText=function(uri,_be,_bf){
if(!_be){
this._blockAsync=true;
}
var _c0=this.getXmlhttpObject();
function isDocumentOk(_c1){
var _c2=_c1["status"];
return Boolean((!_c2)||((200<=_c2)&&(300>_c2))||(_c2==304));
}
if(_be){
var _c3=this,_c4=null,gbl=dojo.global();
var xhr=dojo.evalObjPath("dojo.io.XMLHTTPTransport");
_c0.onreadystatechange=function(){
if(_c4){
gbl.clearTimeout(_c4);
_c4=null;
}
if(_c3._blockAsync||(xhr&&xhr._blockAsync)){
_c4=gbl.setTimeout(function(){
_c0.onreadystatechange.apply(this);
},10);
}else{
if(4==_c0.readyState){
if(isDocumentOk(_c0)){
_be(_c0.responseText);
}
}
}
};
}
_c0.open("GET",uri,_be?true:false);
try{
_c0.send(null);
if(_be){
return null;
}
if(!isDocumentOk(_c0)){
var err=Error("Unable to load "+uri+" status:"+_c0.status);
err.status=_c0.status;
err.responseText=_c0.responseText;
throw err;
}
}
catch(e){
this._blockAsync=false;
if((_bf)&&(!_be)){
return null;
}else{
throw e;
}
}
this._blockAsync=false;
return _c0.responseText;
};
dojo.hostenv.defaultDebugContainerId="dojoDebug";
dojo.hostenv._println_buffer=[];
dojo.hostenv._println_safe=false;
dojo.hostenv.println=function(_c8){
if(!dojo.hostenv._println_safe){
dojo.hostenv._println_buffer.push(_c8);
}else{
try{
var _c9=document.getElementById(djConfig.debugContainerId?djConfig.debugContainerId:dojo.hostenv.defaultDebugContainerId);
if(!_c9){
_c9=dojo.body();
}
var div=document.createElement("div");
div.appendChild(document.createTextNode(_c8));
_c9.appendChild(div);
}
catch(e){
try{
document.write("<div>"+_c8+"</div>");
}
catch(e2){
window.status=_c8;
}
}
}
};
dojo.addOnLoad(function(){
dojo.hostenv._println_safe=true;
while(dojo.hostenv._println_buffer.length>0){
dojo.hostenv.println(dojo.hostenv._println_buffer.shift());
}
});
function dj_addNodeEvtHdlr(_cb,_cc,fp){
var _ce=_cb["on"+_cc]||function(){
};
_cb["on"+_cc]=function(){
fp.apply(_cb,arguments);
_ce.apply(_cb,arguments);
};
return true;
}
function dj_load_init(e){
var _d0=(e&&e.type)?e.type.toLowerCase():"load";
if(arguments.callee.initialized||(_d0!="domcontentloaded"&&_d0!="load")){
return;
}
arguments.callee.initialized=true;
if(typeof (_timer)!="undefined"){
clearInterval(_timer);
delete _timer;
}
var _d1=function(){
if(dojo.render.html.ie){
dojo.hostenv.makeWidgets();
}
};
if(dojo.hostenv.inFlightCount==0){
_d1();
dojo.hostenv.modulesLoaded();
}else{
dojo.hostenv.modulesLoadedListeners.unshift(_d1);
}
}
if(document.addEventListener){
if(dojo.render.html.opera||(dojo.render.html.moz&&!djConfig.delayMozLoadingFix)){
document.addEventListener("DOMContentLoaded",dj_load_init,null);
}
window.addEventListener("load",dj_load_init,null);
}
if(dojo.render.html.ie&&dojo.render.os.win){
document.attachEvent("onreadystatechange",function(e){
if(document.readyState=="complete"){
dj_load_init();
}
});
}
if(/(WebKit|khtml)/i.test(navigator.userAgent)){
var _timer=setInterval(function(){
if(/loaded|complete/.test(document.readyState)){
dj_load_init();
}
},10);
}
if(dojo.render.html.ie){
dj_addNodeEvtHdlr(window,"beforeunload",function(){
dojo.hostenv._unloading=true;
window.setTimeout(function(){
dojo.hostenv._unloading=false;
},0);
});
}
dj_addNodeEvtHdlr(window,"unload",function(){
dojo.hostenv.unloaded();
if((!dojo.render.html.ie)||(dojo.render.html.ie&&dojo.hostenv._unloading)){
dojo.hostenv.unloaded();
}
});
dojo.hostenv.makeWidgets=function(){
var _d3=[];
if(djConfig.searchIds&&djConfig.searchIds.length>0){
_d3=_d3.concat(djConfig.searchIds);
}
if(dojo.hostenv.searchIds&&dojo.hostenv.searchIds.length>0){
_d3=_d3.concat(dojo.hostenv.searchIds);
}
if((djConfig.parseWidgets)||(_d3.length>0)){
if(dojo.evalObjPath("dojo.widget.Parse")){
var _d4=new dojo.xml.Parse();
if(_d3.length>0){
for(var x=0;x<_d3.length;x++){
var _d6=document.getElementById(_d3[x]);
if(!_d6){
continue;
}
var _d7=_d4.parseElement(_d6,null,true);
dojo.widget.getParser().createComponents(_d7);
}
}else{
if(djConfig.parseWidgets){
var _d7=_d4.parseElement(dojo.body(),null,true);
dojo.widget.getParser().createComponents(_d7);
}
}
}
}
};
dojo.addOnLoad(function(){
if(!dojo.render.html.ie){
dojo.hostenv.makeWidgets();
}
});
try{
if(dojo.render.html.ie){
document.namespaces.add("v","urn:schemas-microsoft-com:vml");
document.createStyleSheet().addRule("v\\:*","behavior:url(#default#VML)");
}
}
catch(e){
}
dojo.hostenv.writeIncludes=function(){
};
if(!dj_undef("document",this)){
dj_currentDocument=this.document;
}
dojo.doc=function(){
return dj_currentDocument;
};
dojo.body=function(){
return dojo.doc().body||dojo.doc().getElementsByTagName("body")[0];
};
dojo.byId=function(id,doc){
if((id)&&((typeof id=="string")||(id instanceof String))){
if(!doc){
doc=dj_currentDocument;
}
var ele=doc.getElementById(id);
if(ele&&(ele.id!=id)&&doc.all){
ele=null;
eles=doc.all[id];
if(eles){
if(eles.length){
for(var i=0;i<eles.length;i++){
if(eles[i].id==id){
ele=eles[i];
break;
}
}
}else{
ele=eles;
}
}
}
return ele;
}
return id;
};
dojo.setContext=function(_dc,_dd){
dj_currentContext=_dc;
dj_currentDocument=_dd;
};
dojo._fireCallback=function(_de,_df,_e0){
if((_df)&&((typeof _de=="string")||(_de instanceof String))){
_de=_df[_de];
}
return (_df?_de.apply(_df,_e0||[]):_de());
};
dojo.withGlobal=function(_e1,_e2,_e3,_e4){
var _e5;
var _e6=dj_currentContext;
var _e7=dj_currentDocument;
try{
dojo.setContext(_e1,_e1.document);
_e5=dojo._fireCallback(_e2,_e3,_e4);
}
finally{
dojo.setContext(_e6,_e7);
}
return _e5;
};
dojo.withDoc=function(_e8,_e9,_ea,_eb){
var _ec;
var _ed=dj_currentDocument;
try{
dj_currentDocument=_e8;
_ec=dojo._fireCallback(_e9,_ea,_eb);
}
finally{
dj_currentDocument=_ed;
}
return _ec;
};
}
(function(){
if(typeof dj_usingBootstrap!="undefined"){
return;
}
var _ee=false;
var _ef=false;
var _f0=false;
if((typeof this["load"]=="function")&&((typeof this["Packages"]=="function")||(typeof this["Packages"]=="object"))){
_ee=true;
}else{
if(typeof this["load"]=="function"){
_ef=true;
}else{
if(window.widget){
_f0=true;
}
}
}
var _f1=[];
if((this["djConfig"])&&((djConfig["isDebug"])||(djConfig["debugAtAllCosts"]))){
_f1.push("debug.js");
}
if((this["djConfig"])&&(djConfig["debugAtAllCosts"])&&(!_ee)&&(!_f0)){
_f1.push("browser_debug.js");
}
var _f2=djConfig["baseScriptUri"];
if((this["djConfig"])&&(djConfig["baseLoaderUri"])){
_f2=djConfig["baseLoaderUri"];
}
for(var x=0;x<_f1.length;x++){
var _f4=_f2+"src/"+_f1[x];
if(_ee||_ef){
load(_f4);
}else{
try{
document.write("<scr"+"ipt type='text/javascript' src='"+_f4+"'></scr"+"ipt>");
}
catch(e){
var _f5=document.createElement("script");
_f5.src=_f4;
document.getElementsByTagName("head")[0].appendChild(_f5);
}
}
}
})();
dojo.provide("dojo.lang.common");
dojo.lang.inherits=function(_f6,_f7){
if(!dojo.lang.isFunction(_f7)){
dojo.raise("dojo.inherits: superclass argument ["+_f7+"] must be a function (subclass: ["+_f6+"']");
}
_f6.prototype=new _f7();
_f6.prototype.constructor=_f6;
_f6.superclass=_f7.prototype;
_f6["super"]=_f7.prototype;
};
dojo.lang._mixin=function(obj,_f9){
var _fa={};
for(var x in _f9){
if((typeof _fa[x]=="undefined")||(_fa[x]!=_f9[x])){
obj[x]=_f9[x];
}
}
if(dojo.render.html.ie&&(typeof (_f9["toString"])=="function")&&(_f9["toString"]!=obj["toString"])&&(_f9["toString"]!=_fa["toString"])){
obj.toString=_f9.toString;
}
return obj;
};
dojo.lang.mixin=function(obj,_fd){
for(var i=1,l=arguments.length;i<l;i++){
dojo.lang._mixin(obj,arguments[i]);
}
return obj;
};
dojo.lang.extend=function(_100,_101){
for(var i=1,l=arguments.length;i<l;i++){
dojo.lang._mixin(_100.prototype,arguments[i]);
}
return _100;
};
dojo.inherits=dojo.lang.inherits;
dojo.mixin=dojo.lang.mixin;
dojo.extend=dojo.lang.extend;
dojo.lang.find=function(_104,_105,_106,_107){
if(!dojo.lang.isArrayLike(_104)&&dojo.lang.isArrayLike(_105)){
dojo.deprecated("dojo.lang.find(value, array)","use dojo.lang.find(array, value) instead","0.5");
var temp=_104;
_104=_105;
_105=temp;
}
var _109=dojo.lang.isString(_104);
if(_109){
_104=_104.split("");
}
if(_107){
var step=-1;
var i=_104.length-1;
var end=-1;
}else{
var step=1;
var i=0;
var end=_104.length;
}
if(_106){
while(i!=end){
if(_104[i]===_105){
return i;
}
i+=step;
}
}else{
while(i!=end){
if(_104[i]==_105){
return i;
}
i+=step;
}
}
return -1;
};
dojo.lang.indexOf=dojo.lang.find;
dojo.lang.findLast=function(_10d,_10e,_10f){
return dojo.lang.find(_10d,_10e,_10f,true);
};
dojo.lang.lastIndexOf=dojo.lang.findLast;
dojo.lang.inArray=function(_110,_111){
return dojo.lang.find(_110,_111)>-1;
};
dojo.lang.isObject=function(it){
if(typeof it=="undefined"){
return false;
}
return (typeof it=="object"||it===null||dojo.lang.isArray(it)||dojo.lang.isFunction(it));
};
dojo.lang.isArray=function(it){
return (it&&it instanceof Array||typeof it=="array");
};
dojo.lang.isArrayLike=function(it){
if((!it)||(dojo.lang.isUndefined(it))){
return false;
}
if(dojo.lang.isString(it)){
return false;
}
if(dojo.lang.isFunction(it)){
return false;
}
if(dojo.lang.isArray(it)){
return true;
}
if((it.tagName)&&(it.tagName.toLowerCase()=="form")){
return false;
}
if(dojo.lang.isNumber(it.length)&&isFinite(it.length)){
return true;
}
return false;
};
dojo.lang.isFunction=function(it){
return (it instanceof Function||typeof it=="function");
};
(function(){
if((dojo.render.html.capable)&&(dojo.render.html["safari"])){
dojo.lang.isFunction=function(it){
if((typeof (it)=="function")&&(it=="[object NodeList]")){
return false;
}
return (it instanceof Function||typeof it=="function");
};
}
})();
dojo.lang.isString=function(it){
return (typeof it=="string"||it instanceof String);
};
dojo.lang.isAlien=function(it){
if(!it){
return false;
}
return !dojo.lang.isFunction(it)&&/\{\s*\[native code\]\s*\}/.test(String(it));
};
dojo.lang.isBoolean=function(it){
return (it instanceof Boolean||typeof it=="boolean");
};
dojo.lang.isNumber=function(it){
return (it instanceof Number||typeof it=="number");
};
dojo.lang.isUndefined=function(it){
return ((typeof (it)=="undefined")&&(it==undefined));
};
dojo.provide("dojo.lang.array");
dojo.lang.mixin(dojo.lang,{has:function(obj,name){
try{
return typeof obj[name]!="undefined";
}
catch(e){
return false;
}
},isEmpty:function(obj){
if(dojo.lang.isObject(obj)){
var tmp={};
var _120=0;
for(var x in obj){
if(obj[x]&&(!tmp[x])){
_120++;
break;
}
}
return _120==0;
}else{
if(dojo.lang.isArrayLike(obj)||dojo.lang.isString(obj)){
return obj.length==0;
}
}
},map:function(arr,obj,_124){
var _125=dojo.lang.isString(arr);
if(_125){
arr=arr.split("");
}
if(dojo.lang.isFunction(obj)&&(!_124)){
_124=obj;
obj=dj_global;
}else{
if(dojo.lang.isFunction(obj)&&_124){
var _126=obj;
obj=_124;
_124=_126;
}
}
if(Array.map){
var _127=Array.map(arr,_124,obj);
}else{
var _127=[];
for(var i=0;i<arr.length;++i){
_127.push(_124.call(obj,arr[i]));
}
}
if(_125){
return _127.join("");
}else{
return _127;
}
},reduce:function(arr,_12a,obj,_12c){
var _12d=_12a;
if(arguments.length==1){
dojo.debug("dojo.lang.reduce called with too few arguments!");
return false;
}else{
if(arguments.length==2){
_12c=_12a;
_12d=arr.shift();
}else{
if(arguments.lenght==3){
if(dojo.lang.isFunction(obj)){
_12c=obj;
obj=null;
}
}else{
if(dojo.lang.isFunction(obj)){
var tmp=_12c;
_12c=obj;
obj=tmp;
}
}
}
}
var ob=obj?obj:dj_global;
dojo.lang.map(arr,function(val){
_12d=_12c.call(ob,_12d,val);
});
return _12d;
},forEach:function(_131,_132,_133){
if(dojo.lang.isString(_131)){
_131=_131.split("");
}
if(Array.forEach){
Array.forEach(_131,_132,_133);
}else{
if(!_133){
_133=dj_global;
}
for(var i=0,l=_131.length;i<l;i++){
_132.call(_133,_131[i],i,_131);
}
}
},_everyOrSome:function(_136,arr,_138,_139){
if(dojo.lang.isString(arr)){
arr=arr.split("");
}
if(Array.every){
return Array[_136?"every":"some"](arr,_138,_139);
}else{
if(!_139){
_139=dj_global;
}
for(var i=0,l=arr.length;i<l;i++){
var _13c=_138.call(_139,arr[i],i,arr);
if(_136&&!_13c){
return false;
}else{
if((!_136)&&(_13c)){
return true;
}
}
}
return Boolean(_136);
}
},every:function(arr,_13e,_13f){
return this._everyOrSome(true,arr,_13e,_13f);
},some:function(arr,_141,_142){
return this._everyOrSome(false,arr,_141,_142);
},filter:function(arr,_144,_145){
var _146=dojo.lang.isString(arr);
if(_146){
arr=arr.split("");
}
var _147;
if(Array.filter){
_147=Array.filter(arr,_144,_145);
}else{
if(!_145){
if(arguments.length>=3){
dojo.raise("thisObject doesn't exist!");
}
_145=dj_global;
}
_147=[];
for(var i=0;i<arr.length;i++){
if(_144.call(_145,arr[i],i,arr)){
_147.push(arr[i]);
}
}
}
if(_146){
return _147.join("");
}else{
return _147;
}
},unnest:function(){
var out=[];
for(var i=0;i<arguments.length;i++){
if(dojo.lang.isArrayLike(arguments[i])){
var add=dojo.lang.unnest.apply(this,arguments[i]);
out=out.concat(add);
}else{
out.push(arguments[i]);
}
}
return out;
},toArray:function(_14c,_14d){
var _14e=[];
for(var i=_14d||0;i<_14c.length;i++){
_14e.push(_14c[i]);
}
return _14e;
}});
dojo.provide("dojo.lang.extras");
dojo.lang.setTimeout=function(func,_151){
var _152=window,_153=2;
if(!dojo.lang.isFunction(func)){
_152=func;
func=_151;
_151=arguments[2];
_153++;
}
if(dojo.lang.isString(func)){
func=_152[func];
}
var args=[];
for(var i=_153;i<arguments.length;i++){
args.push(arguments[i]);
}
return dojo.global().setTimeout(function(){
func.apply(_152,args);
},_151);
};
dojo.lang.clearTimeout=function(_156){
dojo.global().clearTimeout(_156);
};
dojo.lang.getNameInObj=function(ns,item){
if(!ns){
ns=dj_global;
}
for(var x in ns){
if(ns[x]===item){
return new String(x);
}
}
return null;
};
dojo.lang.shallowCopy=function(obj,deep){
var i,ret;
if(obj===null){
return null;
}
if(dojo.lang.isObject(obj)){
ret=new obj.constructor();
for(i in obj){
if(dojo.lang.isUndefined(ret[i])){
ret[i]=deep?dojo.lang.shallowCopy(obj[i],deep):obj[i];
}
}
}else{
if(dojo.lang.isArray(obj)){
ret=[];
for(i=0;i<obj.length;i++){
ret[i]=deep?dojo.lang.shallowCopy(obj[i],deep):obj[i];
}
}else{
ret=obj;
}
}
return ret;
};
dojo.lang.firstValued=function(){
for(var i=0;i<arguments.length;i++){
if(typeof arguments[i]!="undefined"){
return arguments[i];
}
}
return undefined;
};
dojo.lang.getObjPathValue=function(_15f,_160,_161){
with(dojo.parseObjPath(_15f,_160,_161)){
return dojo.evalProp(prop,obj,_161);
}
};
dojo.lang.setObjPathValue=function(_162,_163,_164,_165){
dojo.deprecated("dojo.lang.setObjPathValue","use dojo.parseObjPath and the '=' operator","0.6");
if(arguments.length<4){
_165=true;
}
with(dojo.parseObjPath(_162,_164,_165)){
if(obj&&(_165||(prop in obj))){
obj[prop]=_163;
}
}
};
dojo.provide("dojo.lang.func");
dojo.lang.hitch=function(_166,_167){
var fcn=(dojo.lang.isString(_167)?_166[_167]:_167)||function(){
};
return function(){
return fcn.apply(_166,arguments);
};
};
dojo.lang.anonCtr=0;
dojo.lang.anon={};
dojo.lang.nameAnonFunc=function(_169,_16a,_16b){
var nso=(_16a||dojo.lang.anon);
if((_16b)||((dj_global["djConfig"])&&(djConfig["slowAnonFuncLookups"]==true))){
for(var x in nso){
try{
if(nso[x]===_169){
return x;
}
}
catch(e){
}
}
}
var ret="__"+dojo.lang.anonCtr++;
while(typeof nso[ret]!="undefined"){
ret="__"+dojo.lang.anonCtr++;
}
nso[ret]=_169;
return ret;
};
dojo.lang.forward=function(_16f){
return function(){
return this[_16f].apply(this,arguments);
};
};
dojo.lang.curry=function(_170,func){
var _172=[];
_170=_170||dj_global;
if(dojo.lang.isString(func)){
func=_170[func];
}
for(var x=2;x<arguments.length;x++){
_172.push(arguments[x]);
}
var _174=(func["__preJoinArity"]||func.length)-_172.length;
function gather(_175,_176,_177){
var _178=_177;
var _179=_176.slice(0);
for(var x=0;x<_175.length;x++){
_179.push(_175[x]);
}
_177=_177-_175.length;
if(_177<=0){
var res=func.apply(_170,_179);
_177=_178;
return res;
}else{
return function(){
return gather(arguments,_179,_177);
};
}
}
return gather([],_172,_174);
};
dojo.lang.curryArguments=function(_17c,func,args,_17f){
var _180=[];
var x=_17f||0;
for(x=_17f;x<args.length;x++){
_180.push(args[x]);
}
return dojo.lang.curry.apply(dojo.lang,[_17c,func].concat(_180));
};
dojo.lang.tryThese=function(){
for(var x=0;x<arguments.length;x++){
try{
if(typeof arguments[x]=="function"){
var ret=(arguments[x]());
if(ret){
return ret;
}
}
}
catch(e){
dojo.debug(e);
}
}
};
dojo.lang.delayThese=function(farr,cb,_186,_187){
if(!farr.length){
if(typeof _187=="function"){
_187();
}
return;
}
if((typeof _186=="undefined")&&(typeof cb=="number")){
_186=cb;
cb=function(){
};
}else{
if(!cb){
cb=function(){
};
if(!_186){
_186=0;
}
}
}
setTimeout(function(){
(farr.shift())();
cb();
dojo.lang.delayThese(farr,cb,_186,_187);
},_186);
};
dojo.provide("dojo.event.common");
dojo.event=new function(){
this._canTimeout=dojo.lang.isFunction(dj_global["setTimeout"])||dojo.lang.isAlien(dj_global["setTimeout"]);
function interpolateArgs(args,_189){
var dl=dojo.lang;
var ao={srcObj:dj_global,srcFunc:null,adviceObj:dj_global,adviceFunc:null,aroundObj:null,aroundFunc:null,adviceType:(args.length>2)?args[0]:"after",precedence:"last",once:false,delay:null,rate:0,adviceMsg:false};
switch(args.length){
case 0:
return;
case 1:
return;
case 2:
ao.srcFunc=args[0];
ao.adviceFunc=args[1];
break;
case 3:
if((dl.isObject(args[0]))&&(dl.isString(args[1]))&&(dl.isString(args[2]))){
ao.adviceType="after";
ao.srcObj=args[0];
ao.srcFunc=args[1];
ao.adviceFunc=args[2];
}else{
if((dl.isString(args[1]))&&(dl.isString(args[2]))){
ao.srcFunc=args[1];
ao.adviceFunc=args[2];
}else{
if((dl.isObject(args[0]))&&(dl.isString(args[1]))&&(dl.isFunction(args[2]))){
ao.adviceType="after";
ao.srcObj=args[0];
ao.srcFunc=args[1];
var _18c=dl.nameAnonFunc(args[2],ao.adviceObj,_189);
ao.adviceFunc=_18c;
}else{
if((dl.isFunction(args[0]))&&(dl.isObject(args[1]))&&(dl.isString(args[2]))){
ao.adviceType="after";
ao.srcObj=dj_global;
var _18c=dl.nameAnonFunc(args[0],ao.srcObj,_189);
ao.srcFunc=_18c;
ao.adviceObj=args[1];
ao.adviceFunc=args[2];
}
}
}
}
break;
case 4:
if((dl.isObject(args[0]))&&(dl.isObject(args[2]))){
ao.adviceType="after";
ao.srcObj=args[0];
ao.srcFunc=args[1];
ao.adviceObj=args[2];
ao.adviceFunc=args[3];
}else{
if((dl.isString(args[0]))&&(dl.isString(args[1]))&&(dl.isObject(args[2]))){
ao.adviceType=args[0];
ao.srcObj=dj_global;
ao.srcFunc=args[1];
ao.adviceObj=args[2];
ao.adviceFunc=args[3];
}else{
if((dl.isString(args[0]))&&(dl.isFunction(args[1]))&&(dl.isObject(args[2]))){
ao.adviceType=args[0];
ao.srcObj=dj_global;
var _18c=dl.nameAnonFunc(args[1],dj_global,_189);
ao.srcFunc=_18c;
ao.adviceObj=args[2];
ao.adviceFunc=args[3];
}else{
if((dl.isString(args[0]))&&(dl.isObject(args[1]))&&(dl.isString(args[2]))&&(dl.isFunction(args[3]))){
ao.srcObj=args[1];
ao.srcFunc=args[2];
var _18c=dl.nameAnonFunc(args[3],dj_global,_189);
ao.adviceObj=dj_global;
ao.adviceFunc=_18c;
}else{
if(dl.isObject(args[1])){
ao.srcObj=args[1];
ao.srcFunc=args[2];
ao.adviceObj=dj_global;
ao.adviceFunc=args[3];
}else{
if(dl.isObject(args[2])){
ao.srcObj=dj_global;
ao.srcFunc=args[1];
ao.adviceObj=args[2];
ao.adviceFunc=args[3];
}else{
ao.srcObj=ao.adviceObj=ao.aroundObj=dj_global;
ao.srcFunc=args[1];
ao.adviceFunc=args[2];
ao.aroundFunc=args[3];
}
}
}
}
}
}
break;
case 6:
ao.srcObj=args[1];
ao.srcFunc=args[2];
ao.adviceObj=args[3];
ao.adviceFunc=args[4];
ao.aroundFunc=args[5];
ao.aroundObj=dj_global;
break;
default:
ao.srcObj=args[1];
ao.srcFunc=args[2];
ao.adviceObj=args[3];
ao.adviceFunc=args[4];
ao.aroundObj=args[5];
ao.aroundFunc=args[6];
ao.once=args[7];
ao.delay=args[8];
ao.rate=args[9];
ao.adviceMsg=args[10];
break;
}
if(dl.isFunction(ao.aroundFunc)){
var _18c=dl.nameAnonFunc(ao.aroundFunc,ao.aroundObj,_189);
ao.aroundFunc=_18c;
}
if(dl.isFunction(ao.srcFunc)){
ao.srcFunc=dl.getNameInObj(ao.srcObj,ao.srcFunc);
}
if(dl.isFunction(ao.adviceFunc)){
ao.adviceFunc=dl.getNameInObj(ao.adviceObj,ao.adviceFunc);
}
if((ao.aroundObj)&&(dl.isFunction(ao.aroundFunc))){
ao.aroundFunc=dl.getNameInObj(ao.aroundObj,ao.aroundFunc);
}
if(!ao.srcObj){
dojo.raise("bad srcObj for srcFunc: "+ao.srcFunc);
}
if(!ao.adviceObj){
dojo.raise("bad adviceObj for adviceFunc: "+ao.adviceFunc);
}
if(!ao.adviceFunc){
dojo.debug("bad adviceFunc for srcFunc: "+ao.srcFunc);
dojo.debugShallow(ao);
}
return ao;
}
this.connect=function(){
if(arguments.length==1){
var ao=arguments[0];
}else{
var ao=interpolateArgs(arguments,true);
}
if(dojo.lang.isString(ao.srcFunc)&&(ao.srcFunc.toLowerCase()=="onkey")){
if(dojo.render.html.ie){
ao.srcFunc="onkeydown";
this.connect(ao);
}
ao.srcFunc="onkeypress";
}
if(dojo.lang.isArray(ao.srcObj)&&ao.srcObj!=""){
var _18e={};
for(var x in ao){
_18e[x]=ao[x];
}
var mjps=[];
dojo.lang.forEach(ao.srcObj,function(src){
if((dojo.render.html.capable)&&(dojo.lang.isString(src))){
src=dojo.byId(src);
}
_18e.srcObj=src;
mjps.push(dojo.event.connect.call(dojo.event,_18e));
});
return mjps;
}
var mjp=dojo.event.MethodJoinPoint.getForMethod(ao.srcObj,ao.srcFunc);
if(ao.adviceFunc){
var mjp2=dojo.event.MethodJoinPoint.getForMethod(ao.adviceObj,ao.adviceFunc);
}
mjp.kwAddAdvice(ao);
return mjp;
};
this.log=function(a1,a2){
var _196;
if((arguments.length==1)&&(typeof a1=="object")){
_196=a1;
}else{
_196={srcObj:a1,srcFunc:a2};
}
_196.adviceFunc=function(){
var _197=[];
for(var x=0;x<arguments.length;x++){
_197.push(arguments[x]);
}
dojo.debug("("+_196.srcObj+")."+_196.srcFunc,":",_197.join(", "));
};
this.kwConnect(_196);
};
this.connectBefore=function(){
var args=["before"];
for(var i=0;i<arguments.length;i++){
args.push(arguments[i]);
}
return this.connect.apply(this,args);
};
this.connectAround=function(){
var args=["around"];
for(var i=0;i<arguments.length;i++){
args.push(arguments[i]);
}
return this.connect.apply(this,args);
};
this.connectOnce=function(){
var ao=interpolateArgs(arguments,true);
ao.once=true;
return this.connect(ao);
};
this._kwConnectImpl=function(_19e,_19f){
var fn=(_19f)?"disconnect":"connect";
if(typeof _19e["srcFunc"]=="function"){
_19e.srcObj=_19e["srcObj"]||dj_global;
var _1a1=dojo.lang.nameAnonFunc(_19e.srcFunc,_19e.srcObj,true);
_19e.srcFunc=_1a1;
}
if(typeof _19e["adviceFunc"]=="function"){
_19e.adviceObj=_19e["adviceObj"]||dj_global;
var _1a1=dojo.lang.nameAnonFunc(_19e.adviceFunc,_19e.adviceObj,true);
_19e.adviceFunc=_1a1;
}
_19e.srcObj=_19e["srcObj"]||dj_global;
_19e.adviceObj=_19e["adviceObj"]||_19e["targetObj"]||dj_global;
_19e.adviceFunc=_19e["adviceFunc"]||_19e["targetFunc"];
return dojo.event[fn](_19e);
};
this.kwConnect=function(_1a2){
return this._kwConnectImpl(_1a2,false);
};
this.disconnect=function(){
if(arguments.length==1){
var ao=arguments[0];
}else{
var ao=interpolateArgs(arguments,true);
}
if(!ao.adviceFunc){
return;
}
if(dojo.lang.isString(ao.srcFunc)&&(ao.srcFunc.toLowerCase()=="onkey")){
if(dojo.render.html.ie){
ao.srcFunc="onkeydown";
this.disconnect(ao);
}
ao.srcFunc="onkeypress";
}
if(!ao.srcObj[ao.srcFunc]){
return null;
}
var mjp=dojo.event.MethodJoinPoint.getForMethod(ao.srcObj,ao.srcFunc,true);
mjp.removeAdvice(ao.adviceObj,ao.adviceFunc,ao.adviceType,ao.once);
return mjp;
};
this.kwDisconnect=function(_1a5){
return this._kwConnectImpl(_1a5,true);
};
};
dojo.event.MethodInvocation=function(_1a6,obj,args){
this.jp_=_1a6;
this.object=obj;
this.args=[];
for(var x=0;x<args.length;x++){
this.args[x]=args[x];
}
this.around_index=-1;
};
dojo.event.MethodInvocation.prototype.proceed=function(){
this.around_index++;
if(this.around_index>=this.jp_.around.length){
return this.jp_.object[this.jp_.methodname].apply(this.jp_.object,this.args);
}else{
var ti=this.jp_.around[this.around_index];
var mobj=ti[0]||dj_global;
var meth=ti[1];
return mobj[meth].call(mobj,this);
}
};
dojo.event.MethodJoinPoint=function(obj,_1ae){
this.object=obj||dj_global;
this.methodname=_1ae;
this.methodfunc=this.object[_1ae];
this.squelch=false;
};
dojo.event.MethodJoinPoint.getForMethod=function(obj,_1b0){
if(!obj){
obj=dj_global;
}
if(!obj[_1b0]){
obj[_1b0]=function(){
};
if(!obj[_1b0]){
dojo.raise("Cannot set do-nothing method on that object "+_1b0);
}
}else{
if((!dojo.lang.isFunction(obj[_1b0]))&&(!dojo.lang.isAlien(obj[_1b0]))){
return null;
}
}
var _1b1=_1b0+"$joinpoint";
var _1b2=_1b0+"$joinpoint$method";
var _1b3=obj[_1b1];
if(!_1b3){
var _1b4=false;
if(dojo.event["browser"]){
if((obj["attachEvent"])||(obj["nodeType"])||(obj["addEventListener"])){
_1b4=true;
dojo.event.browser.addClobberNodeAttrs(obj,[_1b1,_1b2,_1b0]);
}
}
var _1b5=obj[_1b0].length;
obj[_1b2]=obj[_1b0];
_1b3=obj[_1b1]=new dojo.event.MethodJoinPoint(obj,_1b2);
obj[_1b0]=function(){
var args=[];
if((_1b4)&&(!arguments.length)){
var evt=null;
try{
if(obj.ownerDocument){
evt=obj.ownerDocument.parentWindow.event;
}else{
if(obj.documentElement){
evt=obj.documentElement.ownerDocument.parentWindow.event;
}else{
if(obj.event){
evt=obj.event;
}else{
evt=window.event;
}
}
}
}
catch(e){
evt=window.event;
}
if(evt){
args.push(dojo.event.browser.fixEvent(evt,this));
}
}else{
for(var x=0;x<arguments.length;x++){
if((x==0)&&(_1b4)&&(dojo.event.browser.isEvent(arguments[x]))){
args.push(dojo.event.browser.fixEvent(arguments[x],this));
}else{
args.push(arguments[x]);
}
}
}
return _1b3.run.apply(_1b3,args);
};
obj[_1b0].__preJoinArity=_1b5;
}
return _1b3;
};
dojo.lang.extend(dojo.event.MethodJoinPoint,{unintercept:function(){
this.object[this.methodname]=this.methodfunc;
this.before=[];
this.after=[];
this.around=[];
},disconnect:dojo.lang.forward("unintercept"),run:function(){
var obj=this.object||dj_global;
var args=arguments;
var _1bb=[];
for(var x=0;x<args.length;x++){
_1bb[x]=args[x];
}
var _1bd=function(marr){
if(!marr){
dojo.debug("Null argument to unrollAdvice()");
return;
}
var _1bf=marr[0]||dj_global;
var _1c0=marr[1];
if(!_1bf[_1c0]){
dojo.raise("function \""+_1c0+"\" does not exist on \""+_1bf+"\"");
}
var _1c1=marr[2]||dj_global;
var _1c2=marr[3];
var msg=marr[6];
var _1c4;
var to={args:[],jp_:this,object:obj,proceed:function(){
return _1bf[_1c0].apply(_1bf,to.args);
}};
to.args=_1bb;
var _1c6=parseInt(marr[4]);
var _1c7=((!isNaN(_1c6))&&(marr[4]!==null)&&(typeof marr[4]!="undefined"));
if(marr[5]){
var rate=parseInt(marr[5]);
var cur=new Date();
var _1ca=false;
if((marr["last"])&&((cur-marr.last)<=rate)){
if(dojo.event._canTimeout){
if(marr["delayTimer"]){
clearTimeout(marr.delayTimer);
}
var tod=parseInt(rate*2);
var mcpy=dojo.lang.shallowCopy(marr);
marr.delayTimer=setTimeout(function(){
mcpy[5]=0;
_1bd(mcpy);
},tod);
}
return;
}else{
marr.last=cur;
}
}
if(_1c2){
_1c1[_1c2].call(_1c1,to);
}else{
if((_1c7)&&((dojo.render.html)||(dojo.render.svg))){
dj_global["setTimeout"](function(){
if(msg){
_1bf[_1c0].call(_1bf,to);
}else{
_1bf[_1c0].apply(_1bf,args);
}
},_1c6);
}else{
if(msg){
_1bf[_1c0].call(_1bf,to);
}else{
_1bf[_1c0].apply(_1bf,args);
}
}
}
};
var _1cd=function(){
if(this.squelch){
try{
return _1bd.apply(this,arguments);
}
catch(e){
dojo.debug(e);
}
}else{
return _1bd.apply(this,arguments);
}
};
if((this["before"])&&(this.before.length>0)){
dojo.lang.forEach(this.before.concat(new Array()),_1cd);
}
var _1ce;
try{
if((this["around"])&&(this.around.length>0)){
var mi=new dojo.event.MethodInvocation(this,obj,args);
_1ce=mi.proceed();
}else{
if(this.methodfunc){
_1ce=this.object[this.methodname].apply(this.object,args);
}
}
}
catch(e){
if(!this.squelch){
dojo.debug(e,"when calling",this.methodname,"on",this.object,"with arguments",args);
dojo.raise(e);
}
}
if((this["after"])&&(this.after.length>0)){
dojo.lang.forEach(this.after.concat(new Array()),_1cd);
}
return (this.methodfunc)?_1ce:null;
},getArr:function(kind){
var type="after";
if((typeof kind=="string")&&(kind.indexOf("before")!=-1)){
type="before";
}else{
if(kind=="around"){
type="around";
}
}
if(!this[type]){
this[type]=[];
}
return this[type];
},kwAddAdvice:function(args){
this.addAdvice(args["adviceObj"],args["adviceFunc"],args["aroundObj"],args["aroundFunc"],args["adviceType"],args["precedence"],args["once"],args["delay"],args["rate"],args["adviceMsg"]);
},addAdvice:function(_1d3,_1d4,_1d5,_1d6,_1d7,_1d8,once,_1da,rate,_1dc){
var arr=this.getArr(_1d7);
if(!arr){
dojo.raise("bad this: "+this);
}
var ao=[_1d3,_1d4,_1d5,_1d6,_1da,rate,_1dc];
if(once){
if(this.hasAdvice(_1d3,_1d4,_1d7,arr)>=0){
return;
}
}
if(_1d8=="first"){
arr.unshift(ao);
}else{
arr.push(ao);
}
},hasAdvice:function(_1df,_1e0,_1e1,arr){
if(!arr){
arr=this.getArr(_1e1);
}
var ind=-1;
for(var x=0;x<arr.length;x++){
var aao=(typeof _1e0=="object")?(new String(_1e0)).toString():_1e0;
var a1o=(typeof arr[x][1]=="object")?(new String(arr[x][1])).toString():arr[x][1];
if((arr[x][0]==_1df)&&(a1o==aao)){
ind=x;
}
}
return ind;
},removeAdvice:function(_1e7,_1e8,_1e9,once){
var arr=this.getArr(_1e9);
var ind=this.hasAdvice(_1e7,_1e8,_1e9,arr);
if(ind==-1){
return false;
}
while(ind!=-1){
arr.splice(ind,1);
if(once){
break;
}
ind=this.hasAdvice(_1e7,_1e8,_1e9,arr);
}
return true;
}});
dojo.provide("dojo.event.topic");
dojo.event.topic=new function(){
this.topics={};
this.getTopic=function(_1ed){
if(!this.topics[_1ed]){
this.topics[_1ed]=new this.TopicImpl(_1ed);
}
return this.topics[_1ed];
};
this.registerPublisher=function(_1ee,obj,_1f0){
var _1ee=this.getTopic(_1ee);
_1ee.registerPublisher(obj,_1f0);
};
this.subscribe=function(_1f1,obj,_1f3){
var _1f1=this.getTopic(_1f1);
_1f1.subscribe(obj,_1f3);
};
this.unsubscribe=function(_1f4,obj,_1f6){
var _1f4=this.getTopic(_1f4);
_1f4.unsubscribe(obj,_1f6);
};
this.destroy=function(_1f7){
this.getTopic(_1f7).destroy();
delete this.topics[_1f7];
};
this.publishApply=function(_1f8,args){
var _1f8=this.getTopic(_1f8);
_1f8.sendMessage.apply(_1f8,args);
};
this.publish=function(_1fa,_1fb){
var _1fa=this.getTopic(_1fa);
var args=[];
for(var x=1;x<arguments.length;x++){
args.push(arguments[x]);
}
_1fa.sendMessage.apply(_1fa,args);
};
};
dojo.event.topic.TopicImpl=function(_1fe){
this.topicName=_1fe;
this.subscribe=function(_1ff,_200){
var tf=_200||_1ff;
var to=(!_200)?dj_global:_1ff;
return dojo.event.kwConnect({srcObj:this,srcFunc:"sendMessage",adviceObj:to,adviceFunc:tf});
};
this.unsubscribe=function(_203,_204){
var tf=(!_204)?_203:_204;
var to=(!_204)?null:_203;
return dojo.event.kwDisconnect({srcObj:this,srcFunc:"sendMessage",adviceObj:to,adviceFunc:tf});
};
this._getJoinPoint=function(){
return dojo.event.MethodJoinPoint.getForMethod(this,"sendMessage");
};
this.setSquelch=function(_207){
this._getJoinPoint().squelch=_207;
};
this.destroy=function(){
this._getJoinPoint().disconnect();
};
this.registerPublisher=function(_208,_209){
dojo.event.connect(_208,_209,this,"sendMessage");
};
this.sendMessage=function(_20a){
};
};
dojo.provide("dojo.event.browser");
dojo._ie_clobber=new function(){
this.clobberNodes=[];
function nukeProp(node,prop){
try{
node[prop]=null;
}
catch(e){
}
try{
delete node[prop];
}
catch(e){
}
try{
node.removeAttribute(prop);
}
catch(e){
}
}
this.clobber=function(_20d){
var na;
var tna;
if(_20d){
tna=_20d.all||_20d.getElementsByTagName("*");
na=[_20d];
for(var x=0;x<tna.length;x++){
if(tna[x]["__doClobber__"]){
na.push(tna[x]);
}
}
}else{
try{
window.onload=null;
}
catch(e){
}
na=(this.clobberNodes.length)?this.clobberNodes:document.all;
}
tna=null;
var _211={};
for(var i=na.length-1;i>=0;i=i-1){
var el=na[i];
try{
if(el&&el["__clobberAttrs__"]){
for(var j=0;j<el.__clobberAttrs__.length;j++){
nukeProp(el,el.__clobberAttrs__[j]);
}
nukeProp(el,"__clobberAttrs__");
nukeProp(el,"__doClobber__");
}
}
catch(e){
}
}
na=null;
};
};
if(dojo.render.html.ie){
dojo.addOnUnload(function(){
dojo._ie_clobber.clobber();
try{
if((dojo["widget"])&&(dojo.widget["manager"])){
dojo.widget.manager.destroyAll();
}
}
catch(e){
}
if(dojo.widget){
for(var name in dojo.widget._templateCache){
if(dojo.widget._templateCache[name].node){
dojo.dom.destroyNode(dojo.widget._templateCache[name].node);
dojo.widget._templateCache[name].node=null;
delete dojo.widget._templateCache[name].node;
}
}
}
try{
window.onload=null;
}
catch(e){
}
try{
window.onunload=null;
}
catch(e){
}
dojo._ie_clobber.clobberNodes=[];
});
}
dojo.event.browser=new function(){
var _216=0;
this.normalizedEventName=function(_217){
switch(_217){
case "CheckboxStateChange":
case "DOMAttrModified":
case "DOMMenuItemActive":
case "DOMMenuItemInactive":
case "DOMMouseScroll":
case "DOMNodeInserted":
case "DOMNodeRemoved":
case "RadioStateChange":
return _217;
break;
default:
return _217.toLowerCase();
break;
}
};
this.clean=function(node){
if(dojo.render.html.ie){
dojo._ie_clobber.clobber(node);
}
};
this.addClobberNode=function(node){
if(!dojo.render.html.ie){
return;
}
if(!node["__doClobber__"]){
node.__doClobber__=true;
dojo._ie_clobber.clobberNodes.push(node);
node.__clobberAttrs__=[];
}
};
this.addClobberNodeAttrs=function(node,_21b){
if(!dojo.render.html.ie){
return;
}
this.addClobberNode(node);
for(var x=0;x<_21b.length;x++){
node.__clobberAttrs__.push(_21b[x]);
}
};
this.removeListener=function(node,_21e,fp,_220){
if(!_220){
var _220=false;
}
_21e=dojo.event.browser.normalizedEventName(_21e);
if((_21e=="onkey")||(_21e=="key")){
if(dojo.render.html.ie){
this.removeListener(node,"onkeydown",fp,_220);
}
_21e="onkeypress";
}
if(_21e.substr(0,2)=="on"){
_21e=_21e.substr(2);
}
if(node.removeEventListener){
node.removeEventListener(_21e,fp,_220);
}
};
this.addListener=function(node,_222,fp,_224,_225){
if(!node){
return;
}
if(!_224){
var _224=false;
}
_222=dojo.event.browser.normalizedEventName(_222);
if((_222=="onkey")||(_222=="key")){
if(dojo.render.html.ie){
this.addListener(node,"onkeydown",fp,_224,_225);
}
_222="onkeypress";
}
if(_222.substr(0,2)!="on"){
_222="on"+_222;
}
if(!_225){
var _226=function(evt){
if(!evt){
evt=window.event;
}
var ret=fp(dojo.event.browser.fixEvent(evt,this));
if(_224){
dojo.event.browser.stopEvent(evt);
}
return ret;
};
}else{
_226=fp;
}
if(node.addEventListener){
node.addEventListener(_222.substr(2),_226,_224);
return _226;
}else{
if(typeof node[_222]=="function"){
var _229=node[_222];
node[_222]=function(e){
_229(e);
return _226(e);
};
}else{
node[_222]=_226;
}
if(dojo.render.html.ie){
this.addClobberNodeAttrs(node,[_222]);
}
return _226;
}
};
this.isEvent=function(obj){
return (typeof obj!="undefined")&&(obj)&&(typeof Event!="undefined")&&(obj.eventPhase);
};
this.currentEvent=null;
this.callListener=function(_22c,_22d){
if(typeof _22c!="function"){
dojo.raise("listener not a function: "+_22c);
}
dojo.event.browser.currentEvent.currentTarget=_22d;
return _22c.call(_22d,dojo.event.browser.currentEvent);
};
this._stopPropagation=function(){
dojo.event.browser.currentEvent.cancelBubble=true;
};
this._preventDefault=function(){
dojo.event.browser.currentEvent.returnValue=false;
};
this.keys={KEY_BACKSPACE:8,KEY_TAB:9,KEY_CLEAR:12,KEY_ENTER:13,KEY_SHIFT:16,KEY_CTRL:17,KEY_ALT:18,KEY_PAUSE:19,KEY_CAPS_LOCK:20,KEY_ESCAPE:27,KEY_SPACE:32,KEY_PAGE_UP:33,KEY_PAGE_DOWN:34,KEY_END:35,KEY_HOME:36,KEY_LEFT_ARROW:37,KEY_UP_ARROW:38,KEY_RIGHT_ARROW:39,KEY_DOWN_ARROW:40,KEY_INSERT:45,KEY_DELETE:46,KEY_HELP:47,KEY_LEFT_WINDOW:91,KEY_RIGHT_WINDOW:92,KEY_SELECT:93,KEY_NUMPAD_0:96,KEY_NUMPAD_1:97,KEY_NUMPAD_2:98,KEY_NUMPAD_3:99,KEY_NUMPAD_4:100,KEY_NUMPAD_5:101,KEY_NUMPAD_6:102,KEY_NUMPAD_7:103,KEY_NUMPAD_8:104,KEY_NUMPAD_9:105,KEY_NUMPAD_MULTIPLY:106,KEY_NUMPAD_PLUS:107,KEY_NUMPAD_ENTER:108,KEY_NUMPAD_MINUS:109,KEY_NUMPAD_PERIOD:110,KEY_NUMPAD_DIVIDE:111,KEY_F1:112,KEY_F2:113,KEY_F3:114,KEY_F4:115,KEY_F5:116,KEY_F6:117,KEY_F7:118,KEY_F8:119,KEY_F9:120,KEY_F10:121,KEY_F11:122,KEY_F12:123,KEY_F13:124,KEY_F14:125,KEY_F15:126,KEY_NUM_LOCK:144,KEY_SCROLL_LOCK:145};
this.revKeys=[];
for(var key in this.keys){
this.revKeys[this.keys[key]]=key;
}
this.fixEvent=function(evt,_230){
if(!evt){
if(window["event"]){
evt=window.event;
}
}
if((evt["type"])&&(evt["type"].indexOf("key")==0)){
evt.keys=this.revKeys;
for(var key in this.keys){
evt[key]=this.keys[key];
}
if(evt["type"]=="keydown"&&dojo.render.html.ie){
switch(evt.keyCode){
case evt.KEY_SHIFT:
case evt.KEY_CTRL:
case evt.KEY_ALT:
case evt.KEY_CAPS_LOCK:
case evt.KEY_LEFT_WINDOW:
case evt.KEY_RIGHT_WINDOW:
case evt.KEY_SELECT:
case evt.KEY_NUM_LOCK:
case evt.KEY_SCROLL_LOCK:
case evt.KEY_NUMPAD_0:
case evt.KEY_NUMPAD_1:
case evt.KEY_NUMPAD_2:
case evt.KEY_NUMPAD_3:
case evt.KEY_NUMPAD_4:
case evt.KEY_NUMPAD_5:
case evt.KEY_NUMPAD_6:
case evt.KEY_NUMPAD_7:
case evt.KEY_NUMPAD_8:
case evt.KEY_NUMPAD_9:
case evt.KEY_NUMPAD_PERIOD:
break;
case evt.KEY_NUMPAD_MULTIPLY:
case evt.KEY_NUMPAD_PLUS:
case evt.KEY_NUMPAD_ENTER:
case evt.KEY_NUMPAD_MINUS:
case evt.KEY_NUMPAD_DIVIDE:
break;
case evt.KEY_PAUSE:
case evt.KEY_TAB:
case evt.KEY_BACKSPACE:
case evt.KEY_ENTER:
case evt.KEY_ESCAPE:
case evt.KEY_PAGE_UP:
case evt.KEY_PAGE_DOWN:
case evt.KEY_END:
case evt.KEY_HOME:
case evt.KEY_LEFT_ARROW:
case evt.KEY_UP_ARROW:
case evt.KEY_RIGHT_ARROW:
case evt.KEY_DOWN_ARROW:
case evt.KEY_INSERT:
case evt.KEY_DELETE:
case evt.KEY_F1:
case evt.KEY_F2:
case evt.KEY_F3:
case evt.KEY_F4:
case evt.KEY_F5:
case evt.KEY_F6:
case evt.KEY_F7:
case evt.KEY_F8:
case evt.KEY_F9:
case evt.KEY_F10:
case evt.KEY_F11:
case evt.KEY_F12:
case evt.KEY_F12:
case evt.KEY_F13:
case evt.KEY_F14:
case evt.KEY_F15:
case evt.KEY_CLEAR:
case evt.KEY_HELP:
evt.key=evt.keyCode;
break;
default:
if(evt.ctrlKey||evt.altKey){
var _232=evt.keyCode;
if(_232>=65&&_232<=90&&evt.shiftKey==false){
_232+=32;
}
if(_232>=1&&_232<=26&&evt.ctrlKey){
_232+=96;
}
evt.key=String.fromCharCode(_232);
}
}
}else{
if(evt["type"]=="keypress"){
if(dojo.render.html.opera){
if(evt.which==0){
evt.key=evt.keyCode;
}else{
if(evt.which>0){
switch(evt.which){
case evt.KEY_SHIFT:
case evt.KEY_CTRL:
case evt.KEY_ALT:
case evt.KEY_CAPS_LOCK:
case evt.KEY_NUM_LOCK:
case evt.KEY_SCROLL_LOCK:
break;
case evt.KEY_PAUSE:
case evt.KEY_TAB:
case evt.KEY_BACKSPACE:
case evt.KEY_ENTER:
case evt.KEY_ESCAPE:
evt.key=evt.which;
break;
default:
var _232=evt.which;
if((evt.ctrlKey||evt.altKey||evt.metaKey)&&(evt.which>=65&&evt.which<=90&&evt.shiftKey==false)){
_232+=32;
}
evt.key=String.fromCharCode(_232);
}
}
}
}else{
if(dojo.render.html.ie){
if(!evt.ctrlKey&&!evt.altKey&&evt.keyCode>=evt.KEY_SPACE){
evt.key=String.fromCharCode(evt.keyCode);
}
}else{
if(dojo.render.html.safari){
switch(evt.keyCode){
case 25:
evt.key=evt.KEY_TAB;
evt.shift=true;
break;
case 63232:
evt.key=evt.KEY_UP_ARROW;
break;
case 63233:
evt.key=evt.KEY_DOWN_ARROW;
break;
case 63234:
evt.key=evt.KEY_LEFT_ARROW;
break;
case 63235:
evt.key=evt.KEY_RIGHT_ARROW;
break;
case 63236:
evt.key=evt.KEY_F1;
break;
case 63237:
evt.key=evt.KEY_F2;
break;
case 63238:
evt.key=evt.KEY_F3;
break;
case 63239:
evt.key=evt.KEY_F4;
break;
case 63240:
evt.key=evt.KEY_F5;
break;
case 63241:
evt.key=evt.KEY_F6;
break;
case 63242:
evt.key=evt.KEY_F7;
break;
case 63243:
evt.key=evt.KEY_F8;
break;
case 63244:
evt.key=evt.KEY_F9;
break;
case 63245:
evt.key=evt.KEY_F10;
break;
case 63246:
evt.key=evt.KEY_F11;
break;
case 63247:
evt.key=evt.KEY_F12;
break;
case 63250:
evt.key=evt.KEY_PAUSE;
break;
case 63272:
evt.key=evt.KEY_DELETE;
break;
case 63273:
evt.key=evt.KEY_HOME;
break;
case 63275:
evt.key=evt.KEY_END;
break;
case 63276:
evt.key=evt.KEY_PAGE_UP;
break;
case 63277:
evt.key=evt.KEY_PAGE_DOWN;
break;
case 63302:
evt.key=evt.KEY_INSERT;
break;
case 63248:
case 63249:
case 63289:
break;
default:
evt.key=evt.charCode>=evt.KEY_SPACE?String.fromCharCode(evt.charCode):evt.keyCode;
}
}else{
evt.key=evt.charCode>0?String.fromCharCode(evt.charCode):evt.keyCode;
}
}
}
}
}
}
if(dojo.render.html.ie){
if(!evt.target){
evt.target=evt.srcElement;
}
if(!evt.currentTarget){
evt.currentTarget=(_230?_230:evt.srcElement);
}
if(!evt.layerX){
evt.layerX=evt.offsetX;
}
if(!evt.layerY){
evt.layerY=evt.offsetY;
}
var doc=(evt.srcElement&&evt.srcElement.ownerDocument)?evt.srcElement.ownerDocument:document;
var _234=((dojo.render.html.ie55)||(doc["compatMode"]=="BackCompat"))?doc.body:doc.documentElement;
if(!evt.pageX){
evt.pageX=evt.clientX+(_234.scrollLeft||0);
}
if(!evt.pageY){
evt.pageY=evt.clientY+(_234.scrollTop||0);
}
if(evt.type=="mouseover"){
evt.relatedTarget=evt.fromElement;
}
if(evt.type=="mouseout"){
evt.relatedTarget=evt.toElement;
}
this.currentEvent=evt;
evt.callListener=this.callListener;
evt.stopPropagation=this._stopPropagation;
evt.preventDefault=this._preventDefault;
}
return evt;
};
this.stopEvent=function(evt){
if(window.event){
evt.cancelBubble=true;
evt.returnValue=false;
}else{
evt.preventDefault();
evt.stopPropagation();
}
};
};
dojo.provide("dojo.event.*");
dojo.provide("dojo.string.common");
dojo.string.trim=function(str,wh){
if(!str.replace){
return str;
}
if(!str.length){
return str;
}
var re=(wh>0)?(/^\s+/):(wh<0)?(/\s+$/):(/^\s+|\s+$/g);
return str.replace(re,"");
};
dojo.string.trimStart=function(str){
return dojo.string.trim(str,1);
};
dojo.string.trimEnd=function(str){
return dojo.string.trim(str,-1);
};
dojo.string.repeat=function(str,_23c,_23d){
var out="";
for(var i=0;i<_23c;i++){
out+=str;
if(_23d&&i<_23c-1){
out+=_23d;
}
}
return out;
};
dojo.string.pad=function(str,len,c,dir){
var out=String(str);
if(!c){
c="0";
}
if(!dir){
dir=1;
}
while(out.length<len){
if(dir>0){
out=c+out;
}else{
out+=c;
}
}
return out;
};
dojo.string.padLeft=function(str,len,c){
return dojo.string.pad(str,len,c,1);
};
dojo.string.padRight=function(str,len,c){
return dojo.string.pad(str,len,c,-1);
};
dojo.provide("dojo.string");
dojo.provide("dojo.string.extras");
dojo.string.substituteParams=function(_24b,hash){
var map=(typeof hash=="object")?hash:dojo.lang.toArray(arguments,1);
return _24b.replace(/\%\{(\w+)\}/g,function(_24e,key){
if(typeof (map[key])!="undefined"&&map[key]!=null){
return map[key];
}
dojo.raise("Substitution not found: "+key);
});
};
dojo.string.capitalize=function(str){
if(!dojo.lang.isString(str)){
return "";
}
if(arguments.length==0){
str=this;
}
var _251=str.split(" ");
for(var i=0;i<_251.length;i++){
_251[i]=_251[i].charAt(0).toUpperCase()+_251[i].substring(1);
}
return _251.join(" ");
};
dojo.string.isBlank=function(str){
if(!dojo.lang.isString(str)){
return true;
}
return (dojo.string.trim(str).length==0);
};
dojo.string.encodeAscii=function(str){
if(!dojo.lang.isString(str)){
return str;
}
var ret="";
var _256=escape(str);
var _257,re=/%u([0-9A-F]{4})/i;
while((_257=_256.match(re))){
var num=Number("0x"+_257[1]);
var _25a=escape("&#"+num+";");
ret+=_256.substring(0,_257.index)+_25a;
_256=_256.substring(_257.index+_257[0].length);
}
ret+=_256.replace(/\+/g,"%2B");
return ret;
};
dojo.string.escape=function(type,str){
var args=dojo.lang.toArray(arguments,1);
switch(type.toLowerCase()){
case "xml":
case "html":
case "xhtml":
return dojo.string.escapeXml.apply(this,args);
case "sql":
return dojo.string.escapeSql.apply(this,args);
case "regexp":
case "regex":
return dojo.string.escapeRegExp.apply(this,args);
case "javascript":
case "jscript":
case "js":
return dojo.string.escapeJavaScript.apply(this,args);
case "ascii":
return dojo.string.encodeAscii.apply(this,args);
default:
return str;
}
};
dojo.string.escapeXml=function(str,_25f){
str=str.replace(/&/gm,"&amp;").replace(/</gm,"&lt;").replace(/>/gm,"&gt;").replace(/"/gm,"&quot;");
if(!_25f){
str=str.replace(/'/gm,"&#39;");
}
return str;
};
dojo.string.escapeSql=function(str){
return str.replace(/'/gm,"''");
};
dojo.string.escapeRegExp=function(str){
return str.replace(/\\/gm,"\\\\").replace(/([\f\b\n\t\r[\^$|?*+(){}])/gm,"\\$1");
};
dojo.string.escapeJavaScript=function(str){
return str.replace(/(["'\f\b\n\t\r])/gm,"\\$1");
};
dojo.string.escapeString=function(str){
return ("\""+str.replace(/(["\\])/g,"\\$1")+"\"").replace(/[\f]/g,"\\f").replace(/[\b]/g,"\\b").replace(/[\n]/g,"\\n").replace(/[\t]/g,"\\t").replace(/[\r]/g,"\\r");
};
dojo.string.summary=function(str,len){
if(!len||str.length<=len){
return str;
}
return str.substring(0,len).replace(/\.+$/,"")+"...";
};
dojo.string.endsWith=function(str,end,_268){
if(_268){
str=str.toLowerCase();
end=end.toLowerCase();
}
if((str.length-end.length)<0){
return false;
}
return str.lastIndexOf(end)==str.length-end.length;
};
dojo.string.endsWithAny=function(str){
for(var i=1;i<arguments.length;i++){
if(dojo.string.endsWith(str,arguments[i])){
return true;
}
}
return false;
};
dojo.string.startsWith=function(str,_26c,_26d){
if(_26d){
str=str.toLowerCase();
_26c=_26c.toLowerCase();
}
return str.indexOf(_26c)==0;
};
dojo.string.startsWithAny=function(str){
for(var i=1;i<arguments.length;i++){
if(dojo.string.startsWith(str,arguments[i])){
return true;
}
}
return false;
};
dojo.string.has=function(str){
for(var i=1;i<arguments.length;i++){
if(str.indexOf(arguments[i])>-1){
return true;
}
}
return false;
};
dojo.string.normalizeNewlines=function(text,_273){
if(_273=="\n"){
text=text.replace(/\r\n/g,"\n");
text=text.replace(/\r/g,"\n");
}else{
if(_273=="\r"){
text=text.replace(/\r\n/g,"\r");
text=text.replace(/\n/g,"\r");
}else{
text=text.replace(/([^\r])\n/g,"$1\r\n").replace(/\r([^\n])/g,"\r\n$1");
}
}
return text;
};
dojo.string.splitEscaped=function(str,_275){
var _276=[];
for(var i=0,_278=0;i<str.length;i++){
if(str.charAt(i)=="\\"){
i++;
continue;
}
if(str.charAt(i)==_275){
_276.push(str.substring(_278,i));
_278=i+1;
}
}
_276.push(str.substr(_278));
return _276;
};
dojo.provide("dojo.string.Builder");
dojo.string.Builder=function(str){
this.arrConcat=(dojo.render.html.capable&&dojo.render.html["ie"]);
var a=[];
var b="";
var _27c=this.length=b.length;
if(this.arrConcat){
if(b.length>0){
a.push(b);
}
b="";
}
this.toString=this.valueOf=function(){
return (this.arrConcat)?a.join(""):b;
};
this.append=function(){
for(var x=0;x<arguments.length;x++){
var s=arguments[x];
if(dojo.lang.isArrayLike(s)){
this.append.apply(this,s);
}else{
if(this.arrConcat){
a.push(s);
}else{
b+=s;
}
_27c+=s.length;
this.length=_27c;
}
}
return this;
};
this.clear=function(){
a=[];
b="";
_27c=this.length=0;
return this;
};
this.remove=function(f,l){
var s="";
if(this.arrConcat){
b=a.join("");
}
a=[];
if(f>0){
s=b.substring(0,(f-1));
}
b=s+b.substring(f+l);
_27c=this.length=b.length;
if(this.arrConcat){
a.push(b);
b="";
}
return this;
};
this.replace=function(o,n){
if(this.arrConcat){
b=a.join("");
}
a=[];
b=b.replace(o,n);
_27c=this.length=b.length;
if(this.arrConcat){
a.push(b);
b="";
}
return this;
};
this.insert=function(idx,s){
if(this.arrConcat){
b=a.join("");
}
a=[];
if(idx==0){
b=s+b;
}else{
var t=b.split("");
t.splice(idx,0,s);
b=t.join("");
}
_27c=this.length=b.length;
if(this.arrConcat){
a.push(b);
b="";
}
return this;
};
this.append.apply(this,arguments);
};
dojo.provide("dojo.string.*");
dojo.provide("dojo.uri.Uri");
dojo.uri=new function(){
this.dojoUri=function(uri){
return new dojo.uri.Uri(dojo.hostenv.getBaseScriptUri(),uri);
};
this.moduleUri=function(_288,uri){
var loc=dojo.hostenv.getModuleSymbols(_288).join("/");
if(!loc){
return null;
}
if(loc.lastIndexOf("/")!=loc.length-1){
loc+="/";
}
return new dojo.uri.Uri(dojo.hostenv.getBaseScriptUri()+loc,uri);
};
this.Uri=function(){
var uri=arguments[0];
for(var i=1;i<arguments.length;i++){
if(!arguments[i]){
continue;
}
var _28d=new dojo.uri.Uri(arguments[i].toString());
var _28e=new dojo.uri.Uri(uri.toString());
if((_28d.path=="")&&(_28d.scheme==null)&&(_28d.authority==null)&&(_28d.query==null)){
if(_28d.fragment!=null){
_28e.fragment=_28d.fragment;
}
_28d=_28e;
}else{
if(_28d.scheme==null){
_28d.scheme=_28e.scheme;
if(_28d.authority==null){
_28d.authority=_28e.authority;
if(_28d.path.charAt(0)!="/"){
var path=_28e.path.substring(0,_28e.path.lastIndexOf("/")+1)+_28d.path;
var segs=path.split("/");
for(var j=0;j<segs.length;j++){
if(segs[j]=="."){
if(j==segs.length-1){
segs[j]="";
}else{
segs.splice(j,1);
j--;
}
}else{
if(j>0&&!(j==1&&segs[0]=="")&&segs[j]==".."&&segs[j-1]!=".."){
if(j==segs.length-1){
segs.splice(j,1);
segs[j-1]="";
}else{
segs.splice(j-1,2);
j-=2;
}
}
}
}
_28d.path=segs.join("/");
}
}
}
}
uri="";
if(_28d.scheme!=null){
uri+=_28d.scheme+":";
}
if(_28d.authority!=null){
uri+="//"+_28d.authority;
}
uri+=_28d.path;
if(_28d.query!=null){
uri+="?"+_28d.query;
}
if(_28d.fragment!=null){
uri+="#"+_28d.fragment;
}
}
this.uri=uri.toString();
var _292="^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$";
var r=this.uri.match(new RegExp(_292));
this.scheme=r[2]||(r[1]?"":null);
this.authority=r[4]||(r[3]?"":null);
this.path=r[5];
this.query=r[7]||(r[6]?"":null);
this.fragment=r[9]||(r[8]?"":null);
if(this.authority!=null){
_292="^((([^:]+:)?([^@]+))@)?([^:]*)(:([0-9]+))?$";
r=this.authority.match(new RegExp(_292));
this.user=r[3]||null;
this.password=r[4]||null;
this.host=r[5];
this.port=r[7]||null;
}
this.toString=function(){
return this.uri;
};
};
};
dojo.provide("dojo.uri.*");
dojo.provide("dojo.dom");
dojo.dom.ELEMENT_NODE=1;
dojo.dom.ATTRIBUTE_NODE=2;
dojo.dom.TEXT_NODE=3;
dojo.dom.CDATA_SECTION_NODE=4;
dojo.dom.ENTITY_REFERENCE_NODE=5;
dojo.dom.ENTITY_NODE=6;
dojo.dom.PROCESSING_INSTRUCTION_NODE=7;
dojo.dom.COMMENT_NODE=8;
dojo.dom.DOCUMENT_NODE=9;
dojo.dom.DOCUMENT_TYPE_NODE=10;
dojo.dom.DOCUMENT_FRAGMENT_NODE=11;
dojo.dom.NOTATION_NODE=12;
dojo.dom.dojoml="http://www.dojotoolkit.org/2004/dojoml";
dojo.dom.xmlns={svg:"http://www.w3.org/2000/svg",smil:"http://www.w3.org/2001/SMIL20/",mml:"http://www.w3.org/1998/Math/MathML",cml:"http://www.xml-cml.org",xlink:"http://www.w3.org/1999/xlink",xhtml:"http://www.w3.org/1999/xhtml",xul:"http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul",xbl:"http://www.mozilla.org/xbl",fo:"http://www.w3.org/1999/XSL/Format",xsl:"http://www.w3.org/1999/XSL/Transform",xslt:"http://www.w3.org/1999/XSL/Transform",xi:"http://www.w3.org/2001/XInclude",xforms:"http://www.w3.org/2002/01/xforms",saxon:"http://icl.com/saxon",xalan:"http://xml.apache.org/xslt",xsd:"http://www.w3.org/2001/XMLSchema",dt:"http://www.w3.org/2001/XMLSchema-datatypes",xsi:"http://www.w3.org/2001/XMLSchema-instance",rdf:"http://www.w3.org/1999/02/22-rdf-syntax-ns#",rdfs:"http://www.w3.org/2000/01/rdf-schema#",dc:"http://purl.org/dc/elements/1.1/",dcq:"http://purl.org/dc/qualifiers/1.0","soap-env":"http://schemas.xmlsoap.org/soap/envelope/",wsdl:"http://schemas.xmlsoap.org/wsdl/",AdobeExtensions:"http://ns.adobe.com/AdobeSVGViewerExtensions/3.0/"};
dojo.dom.isNode=function(wh){
if(typeof Element=="function"){
try{
return wh instanceof Element;
}
catch(e){
}
}else{
return wh&&!isNaN(wh.nodeType);
}
};
dojo.dom.getUniqueId=function(){
var _295=dojo.doc();
do{
var id="dj_unique_"+(++arguments.callee._idIncrement);
}while(_295.getElementById(id));
return id;
};
dojo.dom.getUniqueId._idIncrement=0;
dojo.dom.firstElement=dojo.dom.getFirstChildElement=function(_297,_298){
var node=_297.firstChild;
while(node&&node.nodeType!=dojo.dom.ELEMENT_NODE){
node=node.nextSibling;
}
if(_298&&node&&node.tagName&&node.tagName.toLowerCase()!=_298.toLowerCase()){
node=dojo.dom.nextElement(node,_298);
}
return node;
};
dojo.dom.lastElement=dojo.dom.getLastChildElement=function(_29a,_29b){
var node=_29a.lastChild;
while(node&&node.nodeType!=dojo.dom.ELEMENT_NODE){
node=node.previousSibling;
}
if(_29b&&node&&node.tagName&&node.tagName.toLowerCase()!=_29b.toLowerCase()){
node=dojo.dom.prevElement(node,_29b);
}
return node;
};
dojo.dom.nextElement=dojo.dom.getNextSiblingElement=function(node,_29e){
if(!node){
return null;
}
do{
node=node.nextSibling;
}while(node&&node.nodeType!=dojo.dom.ELEMENT_NODE);
if(node&&_29e&&_29e.toLowerCase()!=node.tagName.toLowerCase()){
return dojo.dom.nextElement(node,_29e);
}
return node;
};
dojo.dom.prevElement=dojo.dom.getPreviousSiblingElement=function(node,_2a0){
if(!node){
return null;
}
if(_2a0){
_2a0=_2a0.toLowerCase();
}
do{
node=node.previousSibling;
}while(node&&node.nodeType!=dojo.dom.ELEMENT_NODE);
if(node&&_2a0&&_2a0.toLowerCase()!=node.tagName.toLowerCase()){
return dojo.dom.prevElement(node,_2a0);
}
return node;
};
dojo.dom.moveChildren=function(_2a1,_2a2,trim){
var _2a4=0;
if(trim){
while(_2a1.hasChildNodes()&&_2a1.firstChild.nodeType==dojo.dom.TEXT_NODE){
_2a1.removeChild(_2a1.firstChild);
}
while(_2a1.hasChildNodes()&&_2a1.lastChild.nodeType==dojo.dom.TEXT_NODE){
_2a1.removeChild(_2a1.lastChild);
}
}
while(_2a1.hasChildNodes()){
_2a2.appendChild(_2a1.firstChild);
_2a4++;
}
return _2a4;
};
dojo.dom.copyChildren=function(_2a5,_2a6,trim){
var _2a8=_2a5.cloneNode(true);
return this.moveChildren(_2a8,_2a6,trim);
};
dojo.dom.replaceChildren=function(node,_2aa){
var _2ab=[];
if(dojo.render.html.ie){
for(var i=0;i<node.childNodes.length;i++){
_2ab.push(node.childNodes[i]);
}
}
dojo.dom.removeChildren(node);
node.appendChild(_2aa);
for(var i=0;i<_2ab.length;i++){
dojo.dom.destroyNode(_2ab[i]);
}
};
dojo.dom.removeChildren=function(node){
var _2ae=node.childNodes.length;
while(node.hasChildNodes()){
dojo.dom.removeNode(node.firstChild);
}
return _2ae;
};
dojo.dom.replaceNode=function(node,_2b0){
return node.parentNode.replaceChild(_2b0,node);
};
dojo.dom.destroyNode=function(node){
if(node.parentNode){
node=dojo.dom.removeNode(node);
}
if(node.nodeType!=3){
if(dojo.evalObjPath("dojo.event.browser.clean",false)){
dojo.event.browser.clean(node);
}
if(dojo.render.html.ie){
node.outerHTML="";
}
}
};
dojo.dom.removeNode=function(node){
if(node&&node.parentNode){
return node.parentNode.removeChild(node);
}
};
dojo.dom.getAncestors=function(node,_2b4,_2b5){
var _2b6=[];
var _2b7=(_2b4&&(_2b4 instanceof Function||typeof _2b4=="function"));
while(node){
if(!_2b7||_2b4(node)){
_2b6.push(node);
}
if(_2b5&&_2b6.length>0){
return _2b6[0];
}
node=node.parentNode;
}
if(_2b5){
return null;
}
return _2b6;
};
dojo.dom.getAncestorsByTag=function(node,tag,_2ba){
tag=tag.toLowerCase();
return dojo.dom.getAncestors(node,function(el){
return ((el.tagName)&&(el.tagName.toLowerCase()==tag));
},_2ba);
};
dojo.dom.getFirstAncestorByTag=function(node,tag){
return dojo.dom.getAncestorsByTag(node,tag,true);
};
dojo.dom.isDescendantOf=function(node,_2bf,_2c0){
if(_2c0&&node){
node=node.parentNode;
}
while(node){
if(node==_2bf){
return true;
}
node=node.parentNode;
}
return false;
};
dojo.dom.innerXML=function(node){
if(node.innerXML){
return node.innerXML;
}else{
if(node.xml){
return node.xml;
}else{
if(typeof XMLSerializer!="undefined"){
return (new XMLSerializer()).serializeToString(node);
}
}
}
};
dojo.dom.createDocument=function(){
var doc=null;
var _2c3=dojo.doc();
if(!dj_undef("ActiveXObject")){
var _2c4=["MSXML2","Microsoft","MSXML","MSXML3"];
for(var i=0;i<_2c4.length;i++){
try{
doc=new ActiveXObject(_2c4[i]+".XMLDOM");
}
catch(e){
}
if(doc){
break;
}
}
}else{
if((_2c3.implementation)&&(_2c3.implementation.createDocument)){
doc=_2c3.implementation.createDocument("","",null);
}
}
return doc;
};
dojo.dom.createDocumentFromText=function(str,_2c7){
if(!_2c7){
_2c7="text/xml";
}
if(!dj_undef("DOMParser")){
var _2c8=new DOMParser();
return _2c8.parseFromString(str,_2c7);
}else{
if(!dj_undef("ActiveXObject")){
var _2c9=dojo.dom.createDocument();
if(_2c9){
_2c9.async=false;
_2c9.loadXML(str);
return _2c9;
}else{
dojo.debug("toXml didn't work?");
}
}else{
var _2ca=dojo.doc();
if(_2ca.createElement){
var tmp=_2ca.createElement("xml");
tmp.innerHTML=str;
if(_2ca.implementation&&_2ca.implementation.createDocument){
var _2cc=_2ca.implementation.createDocument("foo","",null);
for(var i=0;i<tmp.childNodes.length;i++){
_2cc.importNode(tmp.childNodes.item(i),true);
}
return _2cc;
}
return ((tmp.document)&&(tmp.document.firstChild?tmp.document.firstChild:tmp));
}
}
}
return null;
};
dojo.dom.prependChild=function(node,_2cf){
if(_2cf.firstChild){
_2cf.insertBefore(node,_2cf.firstChild);
}else{
_2cf.appendChild(node);
}
return true;
};
dojo.dom.insertBefore=function(node,ref,_2d2){
if((_2d2!=true)&&(node===ref||node.nextSibling===ref)){
return false;
}
var _2d3=ref.parentNode;
_2d3.insertBefore(node,ref);
return true;
};
dojo.dom.insertAfter=function(node,ref,_2d6){
var pn=ref.parentNode;
if(ref==pn.lastChild){
if((_2d6!=true)&&(node===ref)){
return false;
}
pn.appendChild(node);
}else{
return this.insertBefore(node,ref.nextSibling,_2d6);
}
return true;
};
dojo.dom.insertAtPosition=function(node,ref,_2da){
if((!node)||(!ref)||(!_2da)){
return false;
}
switch(_2da.toLowerCase()){
case "before":
return dojo.dom.insertBefore(node,ref);
case "after":
return dojo.dom.insertAfter(node,ref);
case "first":
if(ref.firstChild){
return dojo.dom.insertBefore(node,ref.firstChild);
}else{
ref.appendChild(node);
return true;
}
break;
default:
ref.appendChild(node);
return true;
}
};
dojo.dom.insertAtIndex=function(node,_2dc,_2dd){
var _2de=_2dc.childNodes;
if(!_2de.length||_2de.length==_2dd){
_2dc.appendChild(node);
return true;
}
if(_2dd==0){
return dojo.dom.prependChild(node,_2dc);
}
return dojo.dom.insertAfter(node,_2de[_2dd-1]);
};
dojo.dom.textContent=function(node,text){
if(arguments.length>1){
var _2e1=dojo.doc();
dojo.dom.replaceChildren(node,_2e1.createTextNode(text));
return text;
}else{
if(node.textContent!=undefined){
return node.textContent;
}
var _2e2="";
if(node==null){
return _2e2;
}
for(var i=0;i<node.childNodes.length;i++){
switch(node.childNodes[i].nodeType){
case 1:
case 5:
_2e2+=dojo.dom.textContent(node.childNodes[i]);
break;
case 3:
case 2:
case 4:
_2e2+=node.childNodes[i].nodeValue;
break;
default:
break;
}
}
return _2e2;
}
};
dojo.dom.hasParent=function(node){
return Boolean(node&&node.parentNode&&dojo.dom.isNode(node.parentNode));
};
dojo.dom.isTag=function(node){
if(node&&node.tagName){
for(var i=1;i<arguments.length;i++){
if(node.tagName==String(arguments[i])){
return String(arguments[i]);
}
}
}
return "";
};
dojo.dom.setAttributeNS=function(elem,_2e8,_2e9,_2ea){
if(elem==null||((elem==undefined)&&(typeof elem=="undefined"))){
dojo.raise("No element given to dojo.dom.setAttributeNS");
}
if(!((elem.setAttributeNS==undefined)&&(typeof elem.setAttributeNS=="undefined"))){
elem.setAttributeNS(_2e8,_2e9,_2ea);
}else{
var _2eb=elem.ownerDocument;
var _2ec=_2eb.createNode(2,_2e9,_2e8);
_2ec.nodeValue=_2ea;
elem.setAttributeNode(_2ec);
}
};
dojo.provide("dojo.html.common");
dojo.lang.mixin(dojo.html,dojo.dom);
dojo.html.body=function(){
dojo.deprecated("dojo.html.body() moved to dojo.body()","0.5");
return dojo.body();
};
dojo.html.getEventTarget=function(evt){
if(!evt){
evt=dojo.global().event||{};
}
var t=(evt.srcElement?evt.srcElement:(evt.target?evt.target:null));
while((t)&&(t.nodeType!=1)){
t=t.parentNode;
}
return t;
};
dojo.html.getViewport=function(){
var _2ef=dojo.global();
var _2f0=dojo.doc();
var w=0;
var h=0;
if(dojo.render.html.mozilla){
w=_2f0.documentElement.clientWidth;
h=_2ef.innerHeight;
}else{
if(!dojo.render.html.opera&&_2ef.innerWidth){
w=_2ef.innerWidth;
h=_2ef.innerHeight;
}else{
if(!dojo.render.html.opera&&dojo.exists(_2f0,"documentElement.clientWidth")){
var w2=_2f0.documentElement.clientWidth;
if(!w||w2&&w2<w){
w=w2;
}
h=_2f0.documentElement.clientHeight;
}else{
if(dojo.body().clientWidth){
w=dojo.body().clientWidth;
h=dojo.body().clientHeight;
}
}
}
}
return {width:w,height:h};
};
dojo.html.getScroll=function(){
var _2f4=dojo.global();
var _2f5=dojo.doc();
var top=_2f4.pageYOffset||_2f5.documentElement.scrollTop||dojo.body().scrollTop||0;
var left=_2f4.pageXOffset||_2f5.documentElement.scrollLeft||dojo.body().scrollLeft||0;
return {top:top,left:left,offset:{x:left,y:top}};
};
dojo.html.getParentByType=function(node,type){
var _2fa=dojo.doc();
var _2fb=dojo.byId(node);
type=type.toLowerCase();
while((_2fb)&&(_2fb.nodeName.toLowerCase()!=type)){
if(_2fb==(_2fa["body"]||_2fa["documentElement"])){
return null;
}
_2fb=_2fb.parentNode;
}
return _2fb;
};
dojo.html.getAttribute=function(node,attr){
node=dojo.byId(node);
if((!node)||(!node.getAttribute)){
return null;
}
var ta=typeof attr=="string"?attr:new String(attr);
var v=node.getAttribute(ta.toUpperCase());
if((v)&&(typeof v=="string")&&(v!="")){
return v;
}
if(v&&v.value){
return v.value;
}
if((node.getAttributeNode)&&(node.getAttributeNode(ta))){
return (node.getAttributeNode(ta)).value;
}else{
if(node.getAttribute(ta)){
return node.getAttribute(ta);
}else{
if(node.getAttribute(ta.toLowerCase())){
return node.getAttribute(ta.toLowerCase());
}
}
}
return null;
};
dojo.html.hasAttribute=function(node,attr){
return dojo.html.getAttribute(dojo.byId(node),attr)?true:false;
};
dojo.html.getCursorPosition=function(e){
e=e||dojo.global().event;
var _303={x:0,y:0};
if(e.pageX||e.pageY){
_303.x=e.pageX;
_303.y=e.pageY;
}else{
var de=dojo.doc().documentElement;
var db=dojo.body();
_303.x=e.clientX+((de||db)["scrollLeft"])-((de||db)["clientLeft"]);
_303.y=e.clientY+((de||db)["scrollTop"])-((de||db)["clientTop"]);
}
return _303;
};
dojo.html.isTag=function(node){
node=dojo.byId(node);
if(node&&node.tagName){
for(var i=1;i<arguments.length;i++){
if(node.tagName.toLowerCase()==String(arguments[i]).toLowerCase()){
return String(arguments[i]).toLowerCase();
}
}
}
return "";
};
if(dojo.render.html.ie&&!dojo.render.html.ie70){
if(window.location.href.substr(0,6).toLowerCase()!="https:"){
(function(){
var _308=dojo.doc().createElement("script");
_308.src="javascript:'dojo.html.createExternalElement=function(doc, tag){ return doc.createElement(tag); }'";
dojo.doc().getElementsByTagName("head")[0].appendChild(_308);
})();
}
}else{
dojo.html.createExternalElement=function(doc,tag){
return doc.createElement(tag);
};
}
dojo.html._callDeprecated=function(_30b,_30c,args,_30e,_30f){
dojo.deprecated("dojo.html."+_30b,"replaced by dojo.html."+_30c+"("+(_30e?"node, {"+_30e+": "+_30e+"}":"")+")"+(_30f?"."+_30f:""),"0.5");
var _310=[];
if(_30e){
var _311={};
_311[_30e]=args[1];
_310.push(args[0]);
_310.push(_311);
}else{
_310=args;
}
var ret=dojo.html[_30c].apply(dojo.html,args);
if(_30f){
return ret[_30f];
}else{
return ret;
}
};
dojo.html.getViewportWidth=function(){
return dojo.html._callDeprecated("getViewportWidth","getViewport",arguments,null,"width");
};
dojo.html.getViewportHeight=function(){
return dojo.html._callDeprecated("getViewportHeight","getViewport",arguments,null,"height");
};
dojo.html.getViewportSize=function(){
return dojo.html._callDeprecated("getViewportSize","getViewport",arguments);
};
dojo.html.getScrollTop=function(){
return dojo.html._callDeprecated("getScrollTop","getScroll",arguments,null,"top");
};
dojo.html.getScrollLeft=function(){
return dojo.html._callDeprecated("getScrollLeft","getScroll",arguments,null,"left");
};
dojo.html.getScrollOffset=function(){
return dojo.html._callDeprecated("getScrollOffset","getScroll",arguments,null,"offset");
};
dojo.provide("dojo.flash");
dojo.flash=function(){
};
dojo.flash={flash6_version:null,flash8_version:null,ready:false,_visible:true,_loadedListeners:new Array(),_installingListeners:new Array(),setSwf:function(_313){
if(_313==null||dojo.lang.isUndefined(_313)){
return;
}
if(_313.flash6!=null&&!dojo.lang.isUndefined(_313.flash6)){
this.flash6_version=_313.flash6;
}
if(_313.flash8!=null&&!dojo.lang.isUndefined(_313.flash8)){
this.flash8_version=_313.flash8;
}
if(!dojo.lang.isUndefined(_313.visible)){
this._visible=_313.visible;
}
this._initialize();
},useFlash6:function(){
if(this.flash6_version==null){
return false;
}else{
if(this.flash6_version!=null&&dojo.flash.info.commVersion==6){
return true;
}else{
return false;
}
}
},useFlash8:function(){
if(this.flash8_version==null){
return false;
}else{
if(this.flash8_version!=null&&dojo.flash.info.commVersion==8){
return true;
}else{
return false;
}
}
},addLoadedListener:function(_314){
this._loadedListeners.push(_314);
},addInstallingListener:function(_315){
this._installingListeners.push(_315);
},loaded:function(){
dojo.flash.ready=true;
if(dojo.flash._loadedListeners.length>0){
for(var i=0;i<dojo.flash._loadedListeners.length;i++){
dojo.flash._loadedListeners[i].call(null);
}
}
},installing:function(){
if(dojo.flash._installingListeners.length>0){
for(var i=0;i<dojo.flash._installingListeners.length;i++){
dojo.flash._installingListeners[i].call(null);
}
}
},_initialize:function(){
var _318=new dojo.flash.Install();
dojo.flash.installer=_318;
if(_318.needed()==true){
_318.install();
}else{
dojo.flash.obj=new dojo.flash.Embed(this._visible);
dojo.flash.obj.write(dojo.flash.info.commVersion);
dojo.flash.comm=new dojo.flash.Communicator();
}
}};
dojo.flash.Info=function(){
if(dojo.render.html.ie){
document.writeln("<script language=\"VBScript\" type=\"text/vbscript\">");
document.writeln("Function VBGetSwfVer(i)");
document.writeln("  on error resume next");
document.writeln("  Dim swControl, swVersion");
document.writeln("  swVersion = 0");
document.writeln("  set swControl = CreateObject(\"ShockwaveFlash.ShockwaveFlash.\" + CStr(i))");
document.writeln("  if (IsObject(swControl)) then");
document.writeln("    swVersion = swControl.GetVariable(\"$version\")");
document.writeln("  end if");
document.writeln("  VBGetSwfVer = swVersion");
document.writeln("End Function");
document.writeln("</script>");
}
this._detectVersion();
this._detectCommunicationVersion();
};
dojo.flash.Info.prototype={version:-1,versionMajor:-1,versionMinor:-1,versionRevision:-1,capable:false,commVersion:6,installing:false,isVersionOrAbove:function(_319,_31a,_31b){
_31b=parseFloat("."+_31b);
if(this.versionMajor>=_319&&this.versionMinor>=_31a&&this.versionRevision>=_31b){
return true;
}else{
return false;
}
},_detectVersion:function(){
var _31c;
for(var _31d=25;_31d>0;_31d--){
if(dojo.render.html.ie){
_31c=VBGetSwfVer(_31d);
}else{
_31c=this._JSFlashInfo(_31d);
}
if(_31c==-1){
this.capable=false;
return;
}else{
if(_31c!=0){
var _31e;
if(dojo.render.html.ie){
var _31f=_31c.split(" ");
var _320=_31f[1];
_31e=_320.split(",");
}else{
_31e=_31c.split(".");
}
this.versionMajor=_31e[0];
this.versionMinor=_31e[1];
this.versionRevision=_31e[2];
var _321=this.versionMajor+"."+this.versionRevision;
this.version=parseFloat(_321);
this.capable=true;
break;
}
}
}
},_JSFlashInfo:function(_322){
if(navigator.plugins!=null&&navigator.plugins.length>0){
if(navigator.plugins["Shockwave Flash 2.0"]||navigator.plugins["Shockwave Flash"]){
var _323=navigator.plugins["Shockwave Flash 2.0"]?" 2.0":"";
var _324=navigator.plugins["Shockwave Flash"+_323].description;
var _325=_324.split(" ");
var _326=_325[2].split(".");
var _327=_326[0];
var _328=_326[1];
if(_325[3]!=""){
var _329=_325[3].split("r");
}else{
var _329=_325[4].split("r");
}
var _32a=_329[1]>0?_329[1]:0;
var _32b=_327+"."+_328+"."+_32a;
return _32b;
}
}
return -1;
},_detectCommunicationVersion:function(){
if(this.capable==false){
this.commVersion=null;
return;
}
if(typeof djConfig["forceFlashComm"]!="undefined"&&typeof djConfig["forceFlashComm"]!=null){
this.commVersion=djConfig["forceFlashComm"];
return;
}
if(dojo.render.html.safari==true||dojo.render.html.opera==true){
this.commVersion=8;
}else{
this.commVersion=6;
}
}};
dojo.flash.Embed=function(_32c){
this._visible=_32c;
};
dojo.flash.Embed.prototype={width:215,height:138,id:"flashObject",_visible:true,protocol:function(){
switch(window.location.protocol){
case "https:":
return "https";
break;
default:
return "http";
break;
}
},write:function(_32d,_32e){
if(dojo.lang.isUndefined(_32e)){
_32e=false;
}
var _32f=new dojo.string.Builder();
_32f.append("width: "+this.width+"px; ");
_32f.append("height: "+this.height+"px; ");
if(this._visible==false){
_32f.append("position: absolute; ");
_32f.append("z-index: 10000; ");
_32f.append("top: -1000px; ");
_32f.append("left: -1000px; ");
}
_32f=_32f.toString();
var _330;
var _331;
if(_32d==6){
_331=dojo.flash.flash6_version;
var _332=djConfig.baseRelativePath;
_331=_331+"?baseRelativePath="+escape(_332);
_330="<embed id=\""+this.id+"\" src=\""+_331+"\" "+"    quality=\"high\" bgcolor=\"#ffffff\" "+"    width=\""+this.width+"\" height=\""+this.height+"\" "+"    name=\""+this.id+"\" "+"    align=\"middle\" allowScriptAccess=\"sameDomain\" "+"    type=\"application/x-shockwave-flash\" swLiveConnect=\"true\" "+"    pluginspage=\""+this.protocol()+"://www.macromedia.com/go/getflashplayer\">";
}else{
_331=dojo.flash.flash8_version;
var _333=_331;
var _334=_331;
var _332=djConfig.baseRelativePath;
if(_32e){
var _335=escape(window.location);
document.title=document.title.slice(0,47)+" - Flash Player Installation";
var _336=escape(document.title);
_333+="?MMredirectURL="+_335+"&MMplayerType=ActiveX"+"&MMdoctitle="+_336+"&baseRelativePath="+escape(_332);
_334+="?MMredirectURL="+_335+"&MMplayerType=PlugIn"+"&baseRelativePath="+escape(_332);
}
if(_334.indexOf("?")==-1){
_334+="?baseRelativePath="+escape(_332)+"' ";
}
_330="<object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" "+"codebase=\""+this.protocol()+"://fpdownload.macromedia.com/pub/shockwave/cabs/flash/"+"swflash.cab#version=8,0,0,0\" "+"width=\""+this.width+"\" "+"height=\""+this.height+"\" "+"id=\""+this.id+"\" "+"align=\"middle\"> "+"<param name=\"allowScriptAccess\" value=\"sameDomain\" /> "+"<param name=\"movie\" value=\""+_333+"\" /> "+"<param name=\"quality\" value=\"high\" /> "+"<param name=\"bgcolor\" value=\"#ffffff\" /> "+"<embed src=\""+_334+"' "+"quality=\"high\" "+"bgcolor=\"#ffffff\" "+"width=\""+this.width+"\" "+"height=\""+this.height+"\" "+"id=\""+this.id+"\" "+"name=\""+this.id+"\" "+"swLiveConnect=\"true\" "+"align=\"middle\" "+"allowScriptAccess=\"sameDomain\" "+"type=\"application/x-shockwave-flash\" "+"pluginspage=\""+this.protocol()+"://www.macromedia.com/go/getflashplayer\" />"+"</object>";
}
_330="<div id=\""+this.id+"Container\" style=\""+_32f+"\"> "+_330+"</div>";
document.writeln(_330);
},get:function(){
return document.getElementById(this.id);
},setVisible:function(_337){
var _338=dojo.byId(this.id+"Container");
if(_337==true){
_338.style.visibility="visible";
}else{
_338.style.position="absolute";
_338.style.x="-1000px";
_338.style.y="-1000px";
_338.style.visibility="hidden";
}
},center:function(){
var _339=this.width;
var _33a=this.height;
var _33b=dojo.html.getScroll().offset;
var _33c=dojo.html.getViewport();
var x=_33b.x+(_33c.width-_339)/2;
var y=_33b.y+(_33c.height-_33a)/2;
var _33f=dojo.byId(this.id+"Container");
_33f.style.top=y+"px";
_33f.style.left=x+"px";
}};
dojo.flash.Communicator=function(){
if(dojo.flash.useFlash6()){
this._writeFlash6();
}else{
if(dojo.flash.useFlash8()){
this._writeFlash8();
}
}
};
dojo.flash.Communicator.prototype={_writeFlash6:function(){
var id=dojo.flash.obj.id;
document.writeln("<script language=\"JavaScript\">");
document.writeln("  function "+id+"_DoFSCommand(command, args){ ");
document.writeln("    dojo.flash.comm._handleFSCommand(command, args); ");
document.writeln("}");
document.writeln("</script>");
if(dojo.render.html.ie){
document.writeln("<SCRIPT LANGUAGE=VBScript> ");
document.writeln("on error resume next ");
document.writeln("Sub "+id+"_FSCommand(ByVal command, ByVal args)");
document.writeln(" call "+id+"_DoFSCommand(command, args)");
document.writeln("end sub");
document.writeln("</SCRIPT> ");
}
},_writeFlash8:function(){
},_handleFSCommand:function(_341,args){
if(_341!=null&&!dojo.lang.isUndefined(_341)&&/^FSCommand:(.*)/.test(_341)==true){
_341=_341.match(/^FSCommand:(.*)/)[1];
}
if(_341=="addCallback"){
this._fscommandAddCallback(_341,args);
}else{
if(_341=="call"){
this._fscommandCall(_341,args);
}else{
if(_341=="fscommandReady"){
this._fscommandReady();
}
}
}
},_fscommandAddCallback:function(_343,args){
var _345=args;
var _346=function(){
return dojo.flash.comm._call(_345,arguments);
};
dojo.flash.comm[_345]=_346;
dojo.flash.obj.get().SetVariable("_succeeded",true);
},_fscommandCall:function(_347,args){
var _349=dojo.flash.obj.get();
var _34a=args;
var _34b=parseInt(_349.GetVariable("_numArgs"));
var _34c=new Array();
for(var i=0;i<_34b;i++){
var _34e=_349.GetVariable("_"+i);
_34c.push(_34e);
}
var _34f;
if(_34a.indexOf(".")==-1){
_34f=window[_34a];
}else{
_34f=eval(_34a);
}
var _350=null;
if(!dojo.lang.isUndefined(_34f)&&_34f!=null){
_350=_34f.apply(null,_34c);
}
_349.SetVariable("_returnResult",_350);
},_fscommandReady:function(){
var _351=dojo.flash.obj.get();
_351.SetVariable("fscommandReady","true");
},_call:function(_352,args){
var _354=dojo.flash.obj.get();
_354.SetVariable("_functionName",_352);
_354.SetVariable("_numArgs",args.length);
for(var i=0;i<args.length;i++){
var _356=args[i];
_356=_356.replace(/\0/g,"\\0");
_354.SetVariable("_"+i,_356);
}
_354.TCallLabel("/_flashRunner","execute");
var _357=_354.GetVariable("_returnResult");
_357=_357.replace(/\\0/g,"\x00");
return _357;
},_addExternalInterfaceCallback:function(_358){
var _359=function(){
var _35a=new Array(arguments.length);
for(var i=0;i<arguments.length;i++){
_35a[i]=arguments[i];
}
return dojo.flash.comm._execFlash(_358,_35a);
};
dojo.flash.comm[_358]=_359;
},_encodeData:function(data){
var _35d=/\&([^;]*)\;/g;
data=data.replace(_35d,"&amp;$1;");
data=data.replace(/</g,"&lt;");
data=data.replace(/>/g,"&gt;");
data=data.replace("\\","&custom_backslash;&custom_backslash;");
data=data.replace(/\n/g,"\\n");
data=data.replace(/\r/g,"\\r");
data=data.replace(/\f/g,"\\f");
data=data.replace(/\0/g,"\\0");
data=data.replace(/\'/g,"\\'");
data=data.replace(/\"/g,"\\\"");
return data;
},_decodeData:function(data){
if(data==null||typeof data=="undefined"){
return data;
}
data=data.replace(/\&custom_lt\;/g,"<");
data=data.replace(/\&custom_gt\;/g,">");
data=eval("\""+data+"\"");
return data;
},_chunkArgumentData:function(_35f,_360){
var _361=dojo.flash.obj.get();
var _362=Math.ceil(_35f.length/1024);
for(var i=0;i<_362;i++){
var _364=i*1024;
var _365=i*1024+1024;
if(i==(_362-1)){
_365=i*1024+_35f.length;
}
var _366=_35f.substring(_364,_365);
_366=this._encodeData(_366);
_361.CallFunction("<invoke name=\"chunkArgumentData\" "+"returntype=\"javascript\">"+"<arguments>"+"<string>"+_366+"</string>"+"<number>"+_360+"</number>"+"</arguments>"+"</invoke>");
}
},_chunkReturnData:function(){
var _367=dojo.flash.obj.get();
var _368=_367.getReturnLength();
var _369=new Array();
for(var i=0;i<_368;i++){
var _36b=_367.CallFunction("<invoke name=\"chunkReturnData\" "+"returntype=\"javascript\">"+"<arguments>"+"<number>"+i+"</number>"+"</arguments>"+"</invoke>");
if(_36b=="\"\""||_36b=="''"){
_36b="";
}else{
_36b=_36b.substring(1,_36b.length-1);
}
_369.push(_36b);
}
var _36c=_369.join("");
return _36c;
},_execFlash:function(_36d,_36e){
var _36f=dojo.flash.obj.get();
_36f.startExec();
_36f.setNumberArguments(_36e.length);
for(var i=0;i<_36e.length;i++){
this._chunkArgumentData(_36e[i],i);
}
_36f.exec(_36d);
var _371=this._chunkReturnData();
_371=this._decodeData(_371);
_36f.endExec();
return _371;
}};
dojo.flash.Install=function(){
};
dojo.flash.Install.prototype={needed:function(){
if(dojo.flash.info.capable==false){
return true;
}
if(dojo.render.os.mac==true&&!dojo.flash.info.isVersionOrAbove(8,0,0)){
return true;
}
if(!dojo.flash.info.isVersionOrAbove(6,0,0)){
return true;
}
return false;
},install:function(){
dojo.flash.info.installing=true;
dojo.flash.installing();
if(dojo.flash.info.capable==false){
var _372=new dojo.flash.Embed(false);
_372.write(8);
}else{
if(dojo.flash.info.isVersionOrAbove(6,0,65)){
var _372=new dojo.flash.Embed(false);
_372.write(8,true);
_372.setVisible(true);
_372.center();
}else{
alert("This content requires a more recent version of the Macromedia "+" Flash Player.");
window.location.href=+dojo.flash.Embed.protocol()+"://www.macromedia.com/go/getflashplayer";
}
}
},_onInstallStatus:function(msg){
if(msg=="Download.Complete"){
dojo.flash._initialize();
}else{
if(msg=="Download.Cancelled"){
alert("This content requires a more recent version of the Macromedia "+" Flash Player.");
window.location.href=dojo.flash.Embed.protocol()+"://www.macromedia.com/go/getflashplayer";
}else{
if(msg=="Download.Failed"){
alert("There was an error downloading the Flash Player update. "+"Please try again later, or visit macromedia.com to download "+"the latest version of the Flash plugin.");
}
}
}
}};
dojo.flash.info=new dojo.flash.Info();
dojo.provide("dojo.lang.type");
dojo.lang.whatAmI=function(_374){
dojo.deprecated("dojo.lang.whatAmI","use dojo.lang.getType instead","0.5");
return dojo.lang.getType(_374);
};
dojo.lang.whatAmI.custom={};
dojo.lang.getType=function(_375){
try{
if(dojo.lang.isArray(_375)){
return "array";
}
if(dojo.lang.isFunction(_375)){
return "function";
}
if(dojo.lang.isString(_375)){
return "string";
}
if(dojo.lang.isNumber(_375)){
return "number";
}
if(dojo.lang.isBoolean(_375)){
return "boolean";
}
if(dojo.lang.isAlien(_375)){
return "alien";
}
if(dojo.lang.isUndefined(_375)){
return "undefined";
}
for(var name in dojo.lang.whatAmI.custom){
if(dojo.lang.whatAmI.custom[name](_375)){
return name;
}
}
if(dojo.lang.isObject(_375)){
return "object";
}
}
catch(e){
}
return "unknown";
};
dojo.lang.isNumeric=function(_377){
return (!isNaN(_377)&&isFinite(_377)&&(_377!=null)&&!dojo.lang.isBoolean(_377)&&!dojo.lang.isArray(_377)&&!/^\s*$/.test(_377));
};
dojo.lang.isBuiltIn=function(_378){
return (dojo.lang.isArray(_378)||dojo.lang.isFunction(_378)||dojo.lang.isString(_378)||dojo.lang.isNumber(_378)||dojo.lang.isBoolean(_378)||(_378==null)||(_378 instanceof Error)||(typeof _378=="error"));
};
dojo.lang.isPureObject=function(_379){
return ((_379!=null)&&dojo.lang.isObject(_379)&&_379.constructor==Object);
};
dojo.lang.isOfType=function(_37a,type,_37c){
var _37d=false;
if(_37c){
_37d=_37c["optional"];
}
if(_37d&&((_37a===null)||dojo.lang.isUndefined(_37a))){
return true;
}
if(dojo.lang.isArray(type)){
var _37e=type;
for(var i in _37e){
var _380=_37e[i];
if(dojo.lang.isOfType(_37a,_380)){
return true;
}
}
return false;
}else{
if(dojo.lang.isString(type)){
type=type.toLowerCase();
}
switch(type){
case Array:
case "array":
return dojo.lang.isArray(_37a);
case Function:
case "function":
return dojo.lang.isFunction(_37a);
case String:
case "string":
return dojo.lang.isString(_37a);
case Number:
case "number":
return dojo.lang.isNumber(_37a);
case "numeric":
return dojo.lang.isNumeric(_37a);
case Boolean:
case "boolean":
return dojo.lang.isBoolean(_37a);
case Object:
case "object":
return dojo.lang.isObject(_37a);
case "pureobject":
return dojo.lang.isPureObject(_37a);
case "builtin":
return dojo.lang.isBuiltIn(_37a);
case "alien":
return dojo.lang.isAlien(_37a);
case "undefined":
return dojo.lang.isUndefined(_37a);
case null:
case "null":
return (_37a===null);
case "optional":
dojo.deprecated("dojo.lang.isOfType(value, [type, \"optional\"])","use dojo.lang.isOfType(value, type, {optional: true} ) instead","0.5");
return ((_37a===null)||dojo.lang.isUndefined(_37a));
default:
if(dojo.lang.isFunction(type)){
return (_37a instanceof type);
}else{
dojo.raise("dojo.lang.isOfType() was passed an invalid type");
}
}
}
dojo.raise("If we get here, it means a bug was introduced above.");
};
dojo.lang.getObject=function(str){
var _382=str.split("."),i=0,obj=dj_global;
do{
obj=obj[_382[i++]];
}while(i<_382.length&&obj);
return (obj!=dj_global)?obj:null;
};
dojo.lang.doesObjectExist=function(str){
var _386=str.split("."),i=0,obj=dj_global;
do{
obj=obj[_386[i++]];
}while(i<_386.length&&obj);
return (obj&&obj!=dj_global);
};
dojo.provide("dojo.lang.assert");
dojo.lang.assert=function(_389,_38a){
if(!_389){
var _38b="An assert statement failed.\n"+"The method dojo.lang.assert() was called with a 'false' value.\n";
if(_38a){
_38b+="Here's the assert message:\n"+_38a+"\n";
}
throw new Error(_38b);
}
};
dojo.lang.assertType=function(_38c,type,_38e){
if(dojo.lang.isString(_38e)){
dojo.deprecated("dojo.lang.assertType(value, type, \"message\")","use dojo.lang.assertType(value, type) instead","0.5");
}
if(!dojo.lang.isOfType(_38c,type,_38e)){
if(!dojo.lang.assertType._errorMessage){
dojo.lang.assertType._errorMessage="Type mismatch: dojo.lang.assertType() failed.";
}
dojo.lang.assert(false,dojo.lang.assertType._errorMessage);
}
};
dojo.lang.assertValidKeywords=function(_38f,_390,_391){
var key;
if(!_391){
if(!dojo.lang.assertValidKeywords._errorMessage){
dojo.lang.assertValidKeywords._errorMessage="In dojo.lang.assertValidKeywords(), found invalid keyword:";
}
_391=dojo.lang.assertValidKeywords._errorMessage;
}
if(dojo.lang.isArray(_390)){
for(key in _38f){
if(!dojo.lang.inArray(_390,key)){
dojo.lang.assert(false,_391+" "+key);
}
}
}else{
for(key in _38f){
if(!(key in _390)){
dojo.lang.assert(false,_391+" "+key);
}
}
}
};
dojo.provide("dojo.AdapterRegistry");
dojo.AdapterRegistry=function(_393){
this.pairs=[];
this.returnWrappers=_393||false;
};
dojo.lang.extend(dojo.AdapterRegistry,{register:function(name,_395,wrap,_397,_398){
var type=(_398)?"unshift":"push";
this.pairs[type]([name,_395,wrap,_397]);
},match:function(){
for(var i=0;i<this.pairs.length;i++){
var pair=this.pairs[i];
if(pair[1].apply(this,arguments)){
if((pair[3])||(this.returnWrappers)){
return pair[2];
}else{
return pair[2].apply(this,arguments);
}
}
}
throw new Error("No match found");
},unregister:function(name){
for(var i=0;i<this.pairs.length;i++){
var pair=this.pairs[i];
if(pair[0]==name){
this.pairs.splice(i,1);
return true;
}
}
return false;
}});
dojo.provide("dojo.lang.repr");
dojo.lang.reprRegistry=new dojo.AdapterRegistry();
dojo.lang.registerRepr=function(name,_3a0,wrap,_3a2){
dojo.lang.reprRegistry.register(name,_3a0,wrap,_3a2);
};
dojo.lang.repr=function(obj){
if(typeof (obj)=="undefined"){
return "undefined";
}else{
if(obj===null){
return "null";
}
}
try{
if(typeof (obj["__repr__"])=="function"){
return obj["__repr__"]();
}else{
if((typeof (obj["repr"])=="function")&&(obj.repr!=arguments.callee)){
return obj["repr"]();
}
}
return dojo.lang.reprRegistry.match(obj);
}
catch(e){
if(typeof (obj.NAME)=="string"&&(obj.toString==Function.prototype.toString||obj.toString==Object.prototype.toString)){
return obj.NAME;
}
}
if(typeof (obj)=="function"){
obj=(obj+"").replace(/^\s+/,"");
var idx=obj.indexOf("{");
if(idx!=-1){
obj=obj.substr(0,idx)+"{...}";
}
}
return obj+"";
};
dojo.lang.reprArrayLike=function(arr){
try{
var na=dojo.lang.map(arr,dojo.lang.repr);
return "["+na.join(", ")+"]";
}
catch(e){
}
};
(function(){
var m=dojo.lang;
m.registerRepr("arrayLike",m.isArrayLike,m.reprArrayLike);
m.registerRepr("string",m.isString,m.reprString);
m.registerRepr("numbers",m.isNumber,m.reprNumber);
m.registerRepr("boolean",m.isBoolean,m.reprNumber);
})();
dojo.provide("dojo.lang.declare");
dojo.lang.declare=function(_3a8,_3a9,init,_3ab){
if((dojo.lang.isFunction(_3ab))||((!_3ab)&&(!dojo.lang.isFunction(init)))){
var temp=_3ab;
_3ab=init;
init=temp;
}
var _3ad=[];
if(dojo.lang.isArray(_3a9)){
_3ad=_3a9;
_3a9=_3ad.shift();
}
if(!init){
init=dojo.evalObjPath(_3a8,false);
if((init)&&(!dojo.lang.isFunction(init))){
init=null;
}
}
var ctor=dojo.lang.declare._makeConstructor();
var scp=(_3a9?_3a9.prototype:null);
if(scp){
scp.prototyping=true;
ctor.prototype=new _3a9();
scp.prototyping=false;
}
ctor.superclass=scp;
ctor.mixins=_3ad;
for(var i=0,l=_3ad.length;i<l;i++){
dojo.lang.extend(ctor,_3ad[i].prototype);
}
ctor.prototype.initializer=null;
ctor.prototype.declaredClass=_3a8;
if(dojo.lang.isArray(_3ab)){
dojo.lang.extend.apply(dojo.lang,[ctor].concat(_3ab));
}else{
dojo.lang.extend(ctor,(_3ab)||{});
}
dojo.lang.extend(ctor,dojo.lang.declare._common);
ctor.prototype.constructor=ctor;
ctor.prototype.initializer=(ctor.prototype.initializer)||(init)||(function(){
});
var _3b2=dojo.parseObjPath(_3a8,null,true);
_3b2.obj[_3b2.prop]=ctor;
return ctor;
};
dojo.lang.declare._makeConstructor=function(){
return function(){
var self=this._getPropContext();
var s=self.constructor.superclass;
if((s)&&(s.constructor)){
if(s.constructor==arguments.callee){
this._inherited("constructor",arguments);
}else{
this._contextMethod(s,"constructor",arguments);
}
}
var ms=(self.constructor.mixins)||([]);
for(var i=0,m;(m=ms[i]);i++){
(((m.prototype)&&(m.prototype.initializer))||(m)).apply(this,arguments);
}
if((!this.prototyping)&&(self.initializer)){
self.initializer.apply(this,arguments);
}
};
};
dojo.lang.declare._common={_getPropContext:function(){
return (this.___proto||this);
},_contextMethod:function(_3b8,_3b9,args){
var _3bb,_3bc=this.___proto;
this.___proto=_3b8;
try{
_3bb=_3b8[_3b9].apply(this,(args||[]));
}
catch(e){
throw e;
}
finally{
this.___proto=_3bc;
}
return _3bb;
},_inherited:function(prop,args){
var p=this._getPropContext();
do{
if((!p.constructor)||(!p.constructor.superclass)){
return;
}
p=p.constructor.superclass;
}while(!(prop in p));
return (dojo.lang.isFunction(p[prop])?this._contextMethod(p,prop,args):p[prop]);
},inherited:function(prop,args){
dojo.deprecated("'inherited' method is dangerous, do not up-call! 'inherited' is slated for removal in 0.5; name your super class (or use superclass property) instead.","0.5");
this._inherited(prop,args);
}};
dojo.declare=dojo.lang.declare;
dojo.provide("dojo.lang.*");
dojo.provide("dojo.storage");
dojo.storage=new function(){
};
dojo.declare("dojo.storage",null,{SUCCESS:"success",FAILED:"failed",PENDING:"pending",SIZE_NOT_AVAILABLE:"Size not available",SIZE_NO_LIMIT:"No size limit",namespace:"default",onHideSettingsUI:null,initialize:function(){
dojo.unimplemented("dojo.storage.initialize");
},isAvailable:function(){
dojo.unimplemented("dojo.storage.isAvailable");
},put:function(key,_3c3,_3c4){
dojo.unimplemented("dojo.storage.put");
},get:function(key){
dojo.unimplemented("dojo.storage.get");
},hasKey:function(key){
return (this.get(key)!=null);
},getKeys:function(){
dojo.unimplemented("dojo.storage.getKeys");
},clear:function(){
dojo.unimplemented("dojo.storage.clear");
},remove:function(key){
dojo.unimplemented("dojo.storage.remove");
},isPermanent:function(){
dojo.unimplemented("dojo.storage.isPermanent");
},getMaximumSize:function(){
dojo.unimplemented("dojo.storage.getMaximumSize");
},hasSettingsUI:function(){
return false;
},showSettingsUI:function(){
dojo.unimplemented("dojo.storage.showSettingsUI");
},hideSettingsUI:function(){
dojo.unimplemented("dojo.storage.hideSettingsUI");
},getType:function(){
dojo.unimplemented("dojo.storage.getType");
},isValidKey:function(_3c8){
if((_3c8==null)||(typeof _3c8=="undefined")){
return false;
}
return /^[0-9A-Za-z_]*$/.test(_3c8);
}});
dojo.storage.manager=new function(){
this.currentProvider=null;
this.available=false;
this._initialized=false;
this._providers=[];
this.namespace="default";
this.initialize=function(){
this.autodetect();
};
this.register=function(name,_3ca){
this._providers[this._providers.length]=_3ca;
this._providers[name]=_3ca;
};
this.setProvider=function(_3cb){
};
this.autodetect=function(){
if(this._initialized==true){
return;
}
var _3cc=null;
for(var i=0;i<this._providers.length;i++){
_3cc=this._providers[i];
if(dojo.lang.isUndefined(djConfig["forceStorageProvider"])==false&&_3cc.getType()==djConfig["forceStorageProvider"]){
_3cc.isAvailable();
break;
}else{
if(dojo.lang.isUndefined(djConfig["forceStorageProvider"])==true&&_3cc.isAvailable()){
break;
}
}
}
if(_3cc==null){
this._initialized=true;
this.available=false;
this.currentProvider=null;
dojo.raise("No storage provider found for this platform");
}
this.currentProvider=_3cc;
for(var i in _3cc){
dojo.storage[i]=_3cc[i];
}
dojo.storage.manager=this;
dojo.storage.initialize();
this._initialized=true;
this.available=true;
};
this.isAvailable=function(){
return this.available;
};
this.isInitialized=function(){
if(this.currentProvider.getType()=="dojo.storage.browser.FlashStorageProvider"&&dojo.flash.ready==false){
return false;
}else{
return this._initialized;
}
};
this.supportsProvider=function(_3ce){
try{
var _3cf=eval("new "+_3ce+"()");
var _3d0=_3cf.isAvailable();
if(_3d0==null||typeof _3d0=="undefined"){
return false;
}
return _3d0;
}
catch(exception){
return false;
}
};
this.getProvider=function(){
return this.currentProvider;
};
this.loaded=function(){
};
};
dojo.provide("dojo.json");
dojo.json={jsonRegistry:new dojo.AdapterRegistry(),register:function(name,_3d2,wrap,_3d4){
dojo.json.jsonRegistry.register(name,_3d2,wrap,_3d4);
},evalJson:function(json){
try{
return eval("("+json+")");
}
catch(e){
dojo.debug(e);
return json;
}
},serialize:function(o){
var _3d7=typeof (o);
if(_3d7=="undefined"){
return "undefined";
}else{
if((_3d7=="number")||(_3d7=="boolean")){
return o+"";
}else{
if(o===null){
return "null";
}
}
}
if(_3d7=="string"){
return dojo.string.escapeString(o);
}
var me=arguments.callee;
var _3d9;
if(typeof (o.__json__)=="function"){
_3d9=o.__json__();
if(o!==_3d9){
return me(_3d9);
}
}
if(typeof (o.json)=="function"){
_3d9=o.json();
if(o!==_3d9){
return me(_3d9);
}
}
if(_3d7!="function"&&typeof (o.length)=="number"){
var res=[];
for(var i=0;i<o.length;i++){
var val=me(o[i]);
if(typeof (val)!="string"){
val="undefined";
}
res.push(val);
}
return "["+res.join(",")+"]";
}
try{
window.o=o;
_3d9=dojo.json.jsonRegistry.match(o);
return me(_3d9);
}
catch(e){
}
if(_3d7=="function"){
return null;
}
res=[];
for(var k in o){
var _3de;
if(typeof (k)=="number"){
_3de="\""+k+"\"";
}else{
if(typeof (k)=="string"){
_3de=dojo.string.escapeString(k);
}else{
continue;
}
}
val=me(o[k]);
if(typeof (val)!="string"){
continue;
}
res.push(_3de+":"+val);
}
return "{"+res.join(",")+"}";
}};
dojo.provide("dojo.storage.browser");
dojo.storage.browser.WhatWGStorageProvider=function(){
};
dojo.inherits(dojo.storage.browser.WhatWGStorageProvider,dojo.storage);
dojo.lang.extend(dojo.storage.browser.WhatWGStorageProvider,{namespace:"default",initialized:false,_domain:null,_available:null,_statusHandler:null,initialize:function(){
if(djConfig["disableWhatWGStorage"]==true){
return;
}
this._domain=location.hostname;
this.initialized=true;
dojo.storage.manager.loaded();
},isAvailable:function(){
try{
var _3df=globalStorage[location.hostname];
}
catch(e){
this._available=false;
return this._available;
}
this._available=true;
return this._available;
},put:function(key,_3e1,_3e2){
if(this.isValidKey(key)==false){
dojo.raise("Invalid key given: "+key);
}
this._statusHandler=_3e2;
if(dojo.lang.isString(_3e1)){
_3e1="string:"+_3e1;
}else{
_3e1=dojo.json.serialize(_3e1);
}
window.addEventListener("storage",function(evt){
_3e2.call(null,dojo.storage.SUCCESS,key);
},false);
try{
var _3e4=globalStorage[this._domain];
_3e4.setItem(key,_3e1);
}
catch(e){
this._statusHandler.call(null,dojo.storage.FAILED,key,e.toString());
}
},get:function(key){
if(this.isValidKey(key)==false){
dojo.raise("Invalid key given: "+key);
}
var _3e6=globalStorage[this._domain];
var _3e7=_3e6.getItem(key);
if(_3e7==null){
return null;
}
_3e7=_3e7.value;
if(!dojo.lang.isUndefined(_3e7)&&_3e7!=null&&/^string:/.test(_3e7)){
_3e7=_3e7.substring("string:".length);
}else{
_3e7=dojo.json.evalJson(_3e7);
}
return _3e7;
},getKeys:function(){
var _3e8=globalStorage[this._domain];
var _3e9=new Array();
for(i=0;i<_3e8.length;i++){
_3e9[i]=_3e8.key(i);
}
return _3e9;
},clear:function(){
var _3ea=globalStorage[this._domain];
var keys=new Array();
for(var i=0;i<_3ea.length;i++){
keys[keys.length]=_3ea.key(i);
}
for(var i=0;i<keys.length;i++){
_3ea.removeItem(keys[i]);
}
},remove:function(key){
var _3ee=globalStorage[this._domain];
_3ee.removeItem(key);
},isPermanent:function(){
return true;
},getMaximumSize:function(){
return dojo.storage.SIZE_NO_LIMIT;
},hasSettingsUI:function(){
return false;
},showSettingsUI:function(){
dojo.raise(this.getType()+" does not support a storage settings user-interface");
},hideSettingsUI:function(){
dojo.raise(this.getType()+" does not support a storage settings user-interface");
},getType:function(){
return "dojo.storage.browser.WhatWGStorageProvider";
}});
dojo.storage.browser.FlashStorageProvider=function(){
};
dojo.inherits(dojo.storage.browser.FlashStorageProvider,dojo.storage);
dojo.lang.extend(dojo.storage.browser.FlashStorageProvider,{namespace:"default",initialized:false,_available:null,_statusHandler:null,initialize:function(){
if(djConfig["disableFlashStorage"]==true){
return;
}
var _3ef=function(){
dojo.storage._flashLoaded();
};
dojo.flash.addLoadedListener(_3ef);
var _3f0=dojo.uri.dojoUri("Storage_version6.swf").toString();
var _3f1=dojo.uri.dojoUri("Storage_version8.swf").toString();
dojo.flash.setSwf({flash6:_3f0,flash8:_3f1,visible:false});
},isAvailable:function(){
if(djConfig["disableFlashStorage"]==true){
this._available=false;
}else{
this._available=true;
}
return this._available;
},put:function(key,_3f3,_3f4){
if(this.isValidKey(key)==false){
dojo.raise("Invalid key given: "+key);
}
this._statusHandler=_3f4;
if(dojo.lang.isString(_3f3)){
_3f3="string:"+_3f3;
}else{
_3f3=dojo.json.serialize(_3f3);
}
dojo.flash.comm.put(key,_3f3,this.namespace);
},get:function(key){
if(this.isValidKey(key)==false){
dojo.raise("Invalid key given: "+key);
}
var _3f6=dojo.flash.comm.get(key,this.namespace);
if(_3f6==""){
return null;
}
if(!dojo.lang.isUndefined(_3f6)&&_3f6!=null&&/^string:/.test(_3f6)){
_3f6=_3f6.substring("string:".length);
}else{
_3f6=dojo.json.evalJson(_3f6);
}
return _3f6;
},getKeys:function(){
var _3f7=dojo.flash.comm.getKeys(this.namespace);
if(_3f7==""){
return [];
}
return _3f7.split(",");
},clear:function(){
dojo.flash.comm.clear(this.namespace);
},remove:function(key){
dojo.unimplemented("dojo.storage.browser.FlashStorageProvider.remove");
},isPermanent:function(){
return true;
},getMaximumSize:function(){
return dojo.storage.SIZE_NO_LIMIT;
},hasSettingsUI:function(){
return true;
},showSettingsUI:function(){
dojo.flash.comm.showSettings();
dojo.flash.obj.setVisible(true);
dojo.flash.obj.center();
},hideSettingsUI:function(){
dojo.flash.obj.setVisible(false);
if(dojo.storage.onHideSettingsUI!=null&&!dojo.lang.isUndefined(dojo.storage.onHideSettingsUI)){
dojo.storage.onHideSettingsUI.call(null);
}
},getType:function(){
return "dojo.storage.browser.FlashStorageProvider";
},_flashLoaded:function(){
this._initialized=true;
dojo.storage.manager.loaded();
},_onStatus:function(_3f9,key){
var ds=dojo.storage;
var dfo=dojo.flash.obj;
if(_3f9==ds.PENDING){
dfo.center();
dfo.setVisible(true);
}else{
dfo.setVisible(false);
}
if((!dj_undef("_statusHandler",ds))&&(ds._statusHandler!=null)){
ds._statusHandler.call(null,_3f9,key);
}
}});
dojo.storage.manager.register("dojo.storage.browser.WhatWGStorageProvider",new dojo.storage.browser.WhatWGStorageProvider());
dojo.storage.manager.register("dojo.storage.browser.FlashStorageProvider",new dojo.storage.browser.FlashStorageProvider());
dojo.storage.manager.initialize();
dojo.provide("dojo.storage.*");


__CPAN_EDITION__ storage build.txt

Files baked into this package:

dojoGuardStart.js,
../src/bootstrap1.js,
../src/loader.js,
dojoGuardEnd.js,
../src/hostenv_browser.js,
../src/bootstrap2.js,
../src/lang/common.js,
../src/lang/array.js,
../src/lang/extras.js,
../src/lang/func.js,
../src/event/common.js,
../src/event/topic.js,
../src/event/browser.js,
../src/event/__package__.js,
../src/string/common.js,
../src/string.js,
../src/string/extras.js,
../src/string/Builder.js,
../src/string/__package__.js,
../src/uri/Uri.js,
../src/uri/__package__.js,
../src/dom.js,
../src/html/common.js,
../src/flash.js,
../src/lang/type.js,
../src/lang/assert.js,
../src/AdapterRegistry.js,
../src/lang/repr.js,
../src/lang/declare.js,
../src/lang/__package__.js,
../src/storage.js,
../src/json.js,
../src/storage/browser.js,
../src/storage/__package__.js

		
__CPAN_EDITION__ widget dojo.js
/*
	Copyright (c) 2004-2006, The Dojo Foundation
	All Rights Reserved.

	Licensed under the Academic Free License version 2.1 or above OR the
	modified BSD license. For more information on Dojo licensing, see:

		http://dojotoolkit.org/community/licensing.shtml
*/

/*
	This is a compiled version of Dojo, built for deployment and not for
	development. To get an editable version, please visit:

		http://dojotoolkit.org

	for documentation and information on getting the source.
*/

if(typeof dojo=="undefined"){
var dj_global=this;
var dj_currentContext=this;
function dj_undef(_1,_2){
return (typeof (_2||dj_currentContext)[_1]=="undefined");
}
if(dj_undef("djConfig",this)){
var djConfig={};
}
if(dj_undef("dojo",this)){
var dojo={};
}
dojo.global=function(){
return dj_currentContext;
};
dojo.locale=djConfig.locale;
dojo.version={major:0,minor:4,patch:1,flag:"",revision:Number("$Rev: 6824 $".match(/[0-9]+/)[0]),toString:function(){
with(dojo.version){
return major+"."+minor+"."+patch+flag+" ("+revision+")";
}
}};
dojo.evalProp=function(_3,_4,_5){
if((!_4)||(!_3)){
return undefined;
}
if(!dj_undef(_3,_4)){
return _4[_3];
}
return (_5?(_4[_3]={}):undefined);
};
dojo.parseObjPath=function(_6,_7,_8){
var _9=(_7||dojo.global());
var _a=_6.split(".");
var _b=_a.pop();
for(var i=0,l=_a.length;i<l&&_9;i++){
_9=dojo.evalProp(_a[i],_9,_8);
}
return {obj:_9,prop:_b};
};
dojo.evalObjPath=function(_e,_f){
if(typeof _e!="string"){
return dojo.global();
}
if(_e.indexOf(".")==-1){
return dojo.evalProp(_e,dojo.global(),_f);
}
var ref=dojo.parseObjPath(_e,dojo.global(),_f);
if(ref){
return dojo.evalProp(ref.prop,ref.obj,_f);
}
return null;
};
dojo.errorToString=function(_11){
if(!dj_undef("message",_11)){
return _11.message;
}else{
if(!dj_undef("description",_11)){
return _11.description;
}else{
return _11;
}
}
};
dojo.raise=function(_12,_13){
if(_13){
_12=_12+": "+dojo.errorToString(_13);
}else{
_12=dojo.errorToString(_12);
}
try{
if(djConfig.isDebug){
dojo.hostenv.println("FATAL exception raised: "+_12);
}
}
catch(e){
}
throw _13||Error(_12);
};
dojo.debug=function(){
};
dojo.debugShallow=function(obj){
};
dojo.profile={start:function(){
},end:function(){
},stop:function(){
},dump:function(){
}};
function dj_eval(_15){
return dj_global.eval?dj_global.eval(_15):eval(_15);
}
dojo.unimplemented=function(_16,_17){
var _18="'"+_16+"' not implemented";
if(_17!=null){
_18+=" "+_17;
}
dojo.raise(_18);
};
dojo.deprecated=function(_19,_1a,_1b){
var _1c="DEPRECATED: "+_19;
if(_1a){
_1c+=" "+_1a;
}
if(_1b){
_1c+=" -- will be removed in version: "+_1b;
}
dojo.debug(_1c);
};
dojo.render=(function(){
function vscaffold(_1d,_1e){
var tmp={capable:false,support:{builtin:false,plugin:false},prefixes:_1d};
for(var i=0;i<_1e.length;i++){
tmp[_1e[i]]=false;
}
return tmp;
}
return {name:"",ver:dojo.version,os:{win:false,linux:false,osx:false},html:vscaffold(["html"],["ie","opera","khtml","safari","moz"]),svg:vscaffold(["svg"],["corel","adobe","batik"]),vml:vscaffold(["vml"],["ie"]),swf:vscaffold(["Swf","Flash","Mm"],["mm"]),swt:vscaffold(["Swt"],["ibm"])};
})();
dojo.hostenv=(function(){
var _21={isDebug:false,allowQueryConfig:false,baseScriptUri:"",baseRelativePath:"",libraryScriptUri:"",iePreventClobber:false,ieClobberMinimal:true,preventBackButtonFix:true,delayMozLoadingFix:false,searchIds:[],parseWidgets:true};
if(typeof djConfig=="undefined"){
djConfig=_21;
}else{
for(var _22 in _21){
if(typeof djConfig[_22]=="undefined"){
djConfig[_22]=_21[_22];
}
}
}
return {name_:"(unset)",version_:"(unset)",getName:function(){
return this.name_;
},getVersion:function(){
return this.version_;
},getText:function(uri){
dojo.unimplemented("getText","uri="+uri);
}};
})();
dojo.hostenv.getBaseScriptUri=function(){
if(djConfig.baseScriptUri.length){
return djConfig.baseScriptUri;
}
var uri=new String(djConfig.libraryScriptUri||djConfig.baseRelativePath);
if(!uri){
dojo.raise("Nothing returned by getLibraryScriptUri(): "+uri);
}
var _25=uri.lastIndexOf("/");
djConfig.baseScriptUri=djConfig.baseRelativePath;
return djConfig.baseScriptUri;
};
(function(){
var _26={pkgFileName:"__package__",loading_modules_:{},loaded_modules_:{},addedToLoadingCount:[],removedFromLoadingCount:[],inFlightCount:0,modulePrefixes_:{dojo:{name:"dojo",value:"src"}},setModulePrefix:function(_27,_28){
this.modulePrefixes_[_27]={name:_27,value:_28};
},moduleHasPrefix:function(_29){
var mp=this.modulePrefixes_;
return Boolean(mp[_29]&&mp[_29].value);
},getModulePrefix:function(_2b){
if(this.moduleHasPrefix(_2b)){
return this.modulePrefixes_[_2b].value;
}
return _2b;
},getTextStack:[],loadUriStack:[],loadedUris:[],post_load_:false,modulesLoadedListeners:[],unloadListeners:[],loadNotifying:false};
for(var _2c in _26){
dojo.hostenv[_2c]=_26[_2c];
}
})();
dojo.hostenv.loadPath=function(_2d,_2e,cb){
var uri;
if(_2d.charAt(0)=="/"||_2d.match(/^\w+:/)){
uri=_2d;
}else{
uri=this.getBaseScriptUri()+_2d;
}
if(djConfig.cacheBust&&dojo.render.html.capable){
uri+="?"+String(djConfig.cacheBust).replace(/\W+/g,"");
}
try{
return !_2e?this.loadUri(uri,cb):this.loadUriAndCheck(uri,_2e,cb);
}
catch(e){
dojo.debug(e);
return false;
}
};
dojo.hostenv.loadUri=function(uri,cb){
if(this.loadedUris[uri]){
return true;
}
var _33=this.getText(uri,null,true);
if(!_33){
return false;
}
this.loadedUris[uri]=true;
if(cb){
_33="("+_33+")";
}
var _34=dj_eval(_33);
if(cb){
cb(_34);
}
return true;
};
dojo.hostenv.loadUriAndCheck=function(uri,_36,cb){
var ok=true;
try{
ok=this.loadUri(uri,cb);
}
catch(e){
dojo.debug("failed loading ",uri," with error: ",e);
}
return Boolean(ok&&this.findModule(_36,false));
};
dojo.loaded=function(){
};
dojo.unloaded=function(){
};
dojo.hostenv.loaded=function(){
this.loadNotifying=true;
this.post_load_=true;
var mll=this.modulesLoadedListeners;
for(var x=0;x<mll.length;x++){
mll[x]();
}
this.modulesLoadedListeners=[];
this.loadNotifying=false;
dojo.loaded();
};
dojo.hostenv.unloaded=function(){
var mll=this.unloadListeners;
while(mll.length){
(mll.pop())();
}
dojo.unloaded();
};
dojo.addOnLoad=function(obj,_3d){
var dh=dojo.hostenv;
if(arguments.length==1){
dh.modulesLoadedListeners.push(obj);
}else{
if(arguments.length>1){
dh.modulesLoadedListeners.push(function(){
obj[_3d]();
});
}
}
if(dh.post_load_&&dh.inFlightCount==0&&!dh.loadNotifying){
dh.callLoaded();
}
};
dojo.addOnUnload=function(obj,_40){
var dh=dojo.hostenv;
if(arguments.length==1){
dh.unloadListeners.push(obj);
}else{
if(arguments.length>1){
dh.unloadListeners.push(function(){
obj[_40]();
});
}
}
};
dojo.hostenv.modulesLoaded=function(){
if(this.post_load_){
return;
}
if(this.loadUriStack.length==0&&this.getTextStack.length==0){
if(this.inFlightCount>0){
dojo.debug("files still in flight!");
return;
}
dojo.hostenv.callLoaded();
}
};
dojo.hostenv.callLoaded=function(){
if(typeof setTimeout=="object"){
setTimeout("dojo.hostenv.loaded();",0);
}else{
dojo.hostenv.loaded();
}
};
dojo.hostenv.getModuleSymbols=function(_42){
var _43=_42.split(".");
for(var i=_43.length;i>0;i--){
var _45=_43.slice(0,i).join(".");
if((i==1)&&!this.moduleHasPrefix(_45)){
_43[0]="../"+_43[0];
}else{
var _46=this.getModulePrefix(_45);
if(_46!=_45){
_43.splice(0,i,_46);
break;
}
}
}
return _43;
};
dojo.hostenv._global_omit_module_check=false;
dojo.hostenv.loadModule=function(_47,_48,_49){
if(!_47){
return;
}
_49=this._global_omit_module_check||_49;
var _4a=this.findModule(_47,false);
if(_4a){
return _4a;
}
if(dj_undef(_47,this.loading_modules_)){
this.addedToLoadingCount.push(_47);
}
this.loading_modules_[_47]=1;
var _4b=_47.replace(/\./g,"/")+".js";
var _4c=_47.split(".");
var _4d=this.getModuleSymbols(_47);
var _4e=((_4d[0].charAt(0)!="/")&&!_4d[0].match(/^\w+:/));
var _4f=_4d[_4d.length-1];
var ok;
if(_4f=="*"){
_47=_4c.slice(0,-1).join(".");
while(_4d.length){
_4d.pop();
_4d.push(this.pkgFileName);
_4b=_4d.join("/")+".js";
if(_4e&&_4b.charAt(0)=="/"){
_4b=_4b.slice(1);
}
ok=this.loadPath(_4b,!_49?_47:null);
if(ok){
break;
}
_4d.pop();
}
}else{
_4b=_4d.join("/")+".js";
_47=_4c.join(".");
var _51=!_49?_47:null;
ok=this.loadPath(_4b,_51);
if(!ok&&!_48){
_4d.pop();
while(_4d.length){
_4b=_4d.join("/")+".js";
ok=this.loadPath(_4b,_51);
if(ok){
break;
}
_4d.pop();
_4b=_4d.join("/")+"/"+this.pkgFileName+".js";
if(_4e&&_4b.charAt(0)=="/"){
_4b=_4b.slice(1);
}
ok=this.loadPath(_4b,_51);
if(ok){
break;
}
}
}
if(!ok&&!_49){
dojo.raise("Could not load '"+_47+"'; last tried '"+_4b+"'");
}
}
if(!_49&&!this["isXDomain"]){
_4a=this.findModule(_47,false);
if(!_4a){
dojo.raise("symbol '"+_47+"' is not defined after loading '"+_4b+"'");
}
}
return _4a;
};
dojo.hostenv.startPackage=function(_52){
var _53=String(_52);
var _54=_53;
var _55=_52.split(/\./);
if(_55[_55.length-1]=="*"){
_55.pop();
_54=_55.join(".");
}
var _56=dojo.evalObjPath(_54,true);
this.loaded_modules_[_53]=_56;
this.loaded_modules_[_54]=_56;
return _56;
};
dojo.hostenv.findModule=function(_57,_58){
var lmn=String(_57);
if(this.loaded_modules_[lmn]){
return this.loaded_modules_[lmn];
}
if(_58){
dojo.raise("no loaded module named '"+_57+"'");
}
return null;
};
dojo.kwCompoundRequire=function(_5a){
var _5b=_5a["common"]||[];
var _5c=_5a[dojo.hostenv.name_]?_5b.concat(_5a[dojo.hostenv.name_]||[]):_5b.concat(_5a["default"]||[]);
for(var x=0;x<_5c.length;x++){
var _5e=_5c[x];
if(_5e.constructor==Array){
dojo.hostenv.loadModule.apply(dojo.hostenv,_5e);
}else{
dojo.hostenv.loadModule(_5e);
}
}
};
dojo.require=function(_5f){
dojo.hostenv.loadModule.apply(dojo.hostenv,arguments);
};
dojo.requireIf=function(_60,_61){
var _62=arguments[0];
if((_62===true)||(_62=="common")||(_62&&dojo.render[_62].capable)){
var _63=[];
for(var i=1;i<arguments.length;i++){
_63.push(arguments[i]);
}
dojo.require.apply(dojo,_63);
}
};
dojo.requireAfterIf=dojo.requireIf;
dojo.provide=function(_65){
return dojo.hostenv.startPackage.apply(dojo.hostenv,arguments);
};
dojo.registerModulePath=function(_66,_67){
return dojo.hostenv.setModulePrefix(_66,_67);
};
dojo.setModulePrefix=function(_68,_69){
dojo.deprecated("dojo.setModulePrefix(\""+_68+"\", \""+_69+"\")","replaced by dojo.registerModulePath","0.5");
return dojo.registerModulePath(_68,_69);
};
dojo.exists=function(obj,_6b){
var p=_6b.split(".");
for(var i=0;i<p.length;i++){
if(!obj[p[i]]){
return false;
}
obj=obj[p[i]];
}
return true;
};
dojo.hostenv.normalizeLocale=function(_6e){
var _6f=_6e?_6e.toLowerCase():dojo.locale;
if(_6f=="root"){
_6f="ROOT";
}
return _6f;
};
dojo.hostenv.searchLocalePath=function(_70,_71,_72){
_70=dojo.hostenv.normalizeLocale(_70);
var _73=_70.split("-");
var _74=[];
for(var i=_73.length;i>0;i--){
_74.push(_73.slice(0,i).join("-"));
}
_74.push(false);
if(_71){
_74.reverse();
}
for(var j=_74.length-1;j>=0;j--){
var loc=_74[j]||"ROOT";
var _78=_72(loc);
if(_78){
break;
}
}
};
dojo.hostenv.localesGenerated;
dojo.hostenv.registerNlsPrefix=function(){
dojo.registerModulePath("nls","nls");
};
dojo.hostenv.preloadLocalizations=function(){
if(dojo.hostenv.localesGenerated){
dojo.hostenv.registerNlsPrefix();
function preload(_79){
_79=dojo.hostenv.normalizeLocale(_79);
dojo.hostenv.searchLocalePath(_79,true,function(loc){
for(var i=0;i<dojo.hostenv.localesGenerated.length;i++){
if(dojo.hostenv.localesGenerated[i]==loc){
dojo["require"]("nls.dojo_"+loc);
return true;
}
}
return false;
});
}
preload();
var _7c=djConfig.extraLocale||[];
for(var i=0;i<_7c.length;i++){
preload(_7c[i]);
}
}
dojo.hostenv.preloadLocalizations=function(){
};
};
dojo.requireLocalization=function(_7e,_7f,_80,_81){
dojo.hostenv.preloadLocalizations();
var _82=dojo.hostenv.normalizeLocale(_80);
var _83=[_7e,"nls",_7f].join(".");
var _84="";
if(_81){
var _85=_81.split(",");
for(var i=0;i<_85.length;i++){
if(_82.indexOf(_85[i])==0){
if(_85[i].length>_84.length){
_84=_85[i];
}
}
}
if(!_84){
_84="ROOT";
}
}
var _87=_81?_84:_82;
var _88=dojo.hostenv.findModule(_83);
var _89=null;
if(_88){
if(djConfig.localizationComplete&&_88._built){
return;
}
var _8a=_87.replace("-","_");
var _8b=_83+"."+_8a;
_89=dojo.hostenv.findModule(_8b);
}
if(!_89){
_88=dojo.hostenv.startPackage(_83);
var _8c=dojo.hostenv.getModuleSymbols(_7e);
var _8d=_8c.concat("nls").join("/");
var _8e;
dojo.hostenv.searchLocalePath(_87,_81,function(loc){
var _90=loc.replace("-","_");
var _91=_83+"."+_90;
var _92=false;
if(!dojo.hostenv.findModule(_91)){
dojo.hostenv.startPackage(_91);
var _93=[_8d];
if(loc!="ROOT"){
_93.push(loc);
}
_93.push(_7f);
var _94=_93.join("/")+".js";
_92=dojo.hostenv.loadPath(_94,null,function(_95){
var _96=function(){
};
_96.prototype=_8e;
_88[_90]=new _96();
for(var j in _95){
_88[_90][j]=_95[j];
}
});
}else{
_92=true;
}
if(_92&&_88[_90]){
_8e=_88[_90];
}else{
_88[_90]=_8e;
}
if(_81){
return true;
}
});
}
if(_81&&_82!=_84){
_88[_82.replace("-","_")]=_88[_84.replace("-","_")];
}
};
(function(){
var _98=djConfig.extraLocale;
if(_98){
if(!_98 instanceof Array){
_98=[_98];
}
var req=dojo.requireLocalization;
dojo.requireLocalization=function(m,b,_9c,_9d){
req(m,b,_9c,_9d);
if(_9c){
return;
}
for(var i=0;i<_98.length;i++){
req(m,b,_98[i],_9d);
}
};
}
})();
}
if(typeof window!="undefined"){
(function(){
if(djConfig.allowQueryConfig){
var _9f=document.location.toString();
var _a0=_9f.split("?",2);
if(_a0.length>1){
var _a1=_a0[1];
var _a2=_a1.split("&");
for(var x in _a2){
var sp=_a2[x].split("=");
if((sp[0].length>9)&&(sp[0].substr(0,9)=="djConfig.")){
var opt=sp[0].substr(9);
try{
djConfig[opt]=eval(sp[1]);
}
catch(e){
djConfig[opt]=sp[1];
}
}
}
}
}
if(((djConfig["baseScriptUri"]=="")||(djConfig["baseRelativePath"]==""))&&(document&&document.getElementsByTagName)){
var _a6=document.getElementsByTagName("script");
var _a7=/(__package__|dojo|bootstrap1)\.js([\?\.]|$)/i;
for(var i=0;i<_a6.length;i++){
var src=_a6[i].getAttribute("src");
if(!src){
continue;
}
var m=src.match(_a7);
if(m){
var _ab=src.substring(0,m.index);
if(src.indexOf("bootstrap1")>-1){
_ab+="../";
}
if(!this["djConfig"]){
djConfig={};
}
if(djConfig["baseScriptUri"]==""){
djConfig["baseScriptUri"]=_ab;
}
if(djConfig["baseRelativePath"]==""){
djConfig["baseRelativePath"]=_ab;
}
break;
}
}
}
var dr=dojo.render;
var drh=dojo.render.html;
var drs=dojo.render.svg;
var dua=(drh.UA=navigator.userAgent);
var dav=(drh.AV=navigator.appVersion);
var t=true;
var f=false;
drh.capable=t;
drh.support.builtin=t;
dr.ver=parseFloat(drh.AV);
dr.os.mac=dav.indexOf("Macintosh")>=0;
dr.os.win=dav.indexOf("Windows")>=0;
dr.os.linux=dav.indexOf("X11")>=0;
drh.opera=dua.indexOf("Opera")>=0;
drh.khtml=(dav.indexOf("Konqueror")>=0)||(dav.indexOf("Safari")>=0);
drh.safari=dav.indexOf("Safari")>=0;
var _b3=dua.indexOf("Gecko");
drh.mozilla=drh.moz=(_b3>=0)&&(!drh.khtml);
if(drh.mozilla){
drh.geckoVersion=dua.substring(_b3+6,_b3+14);
}
drh.ie=(document.all)&&(!drh.opera);
drh.ie50=drh.ie&&dav.indexOf("MSIE 5.0")>=0;
drh.ie55=drh.ie&&dav.indexOf("MSIE 5.5")>=0;
drh.ie60=drh.ie&&dav.indexOf("MSIE 6.0")>=0;
drh.ie70=drh.ie&&dav.indexOf("MSIE 7.0")>=0;
var cm=document["compatMode"];
drh.quirks=(cm=="BackCompat")||(cm=="QuirksMode")||drh.ie55||drh.ie50;
dojo.locale=dojo.locale||(drh.ie?navigator.userLanguage:navigator.language).toLowerCase();
dr.vml.capable=drh.ie;
drs.capable=f;
drs.support.plugin=f;
drs.support.builtin=f;
var _b5=window["document"];
var tdi=_b5["implementation"];
if((tdi)&&(tdi["hasFeature"])&&(tdi.hasFeature("org.w3c.dom.svg","1.0"))){
drs.capable=t;
drs.support.builtin=t;
drs.support.plugin=f;
}
if(drh.safari){
var tmp=dua.split("AppleWebKit/")[1];
var ver=parseFloat(tmp.split(" ")[0]);
if(ver>=420){
drs.capable=t;
drs.support.builtin=t;
drs.support.plugin=f;
}
}else{
}
})();
dojo.hostenv.startPackage("dojo.hostenv");
dojo.render.name=dojo.hostenv.name_="browser";
dojo.hostenv.searchIds=[];
dojo.hostenv._XMLHTTP_PROGIDS=["Msxml2.XMLHTTP","Microsoft.XMLHTTP","Msxml2.XMLHTTP.4.0"];
dojo.hostenv.getXmlhttpObject=function(){
var _b9=null;
var _ba=null;
try{
_b9=new XMLHttpRequest();
}
catch(e){
}
if(!_b9){
for(var i=0;i<3;++i){
var _bc=dojo.hostenv._XMLHTTP_PROGIDS[i];
try{
_b9=new ActiveXObject(_bc);
}
catch(e){
_ba=e;
}
if(_b9){
dojo.hostenv._XMLHTTP_PROGIDS=[_bc];
break;
}
}
}
if(!_b9){
return dojo.raise("XMLHTTP not available",_ba);
}
return _b9;
};
dojo.hostenv._blockAsync=false;
dojo.hostenv.getText=function(uri,_be,_bf){
if(!_be){
this._blockAsync=true;
}
var _c0=this.getXmlhttpObject();
function isDocumentOk(_c1){
var _c2=_c1["status"];
return Boolean((!_c2)||((200<=_c2)&&(300>_c2))||(_c2==304));
}
if(_be){
var _c3=this,_c4=null,gbl=dojo.global();
var xhr=dojo.evalObjPath("dojo.io.XMLHTTPTransport");
_c0.onreadystatechange=function(){
if(_c4){
gbl.clearTimeout(_c4);
_c4=null;
}
if(_c3._blockAsync||(xhr&&xhr._blockAsync)){
_c4=gbl.setTimeout(function(){
_c0.onreadystatechange.apply(this);
},10);
}else{
if(4==_c0.readyState){
if(isDocumentOk(_c0)){
_be(_c0.responseText);
}
}
}
};
}
_c0.open("GET",uri,_be?true:false);
try{
_c0.send(null);
if(_be){
return null;
}
if(!isDocumentOk(_c0)){
var err=Error("Unable to load "+uri+" status:"+_c0.status);
err.status=_c0.status;
err.responseText=_c0.responseText;
throw err;
}
}
catch(e){
this._blockAsync=false;
if((_bf)&&(!_be)){
return null;
}else{
throw e;
}
}
this._blockAsync=false;
return _c0.responseText;
};
dojo.hostenv.defaultDebugContainerId="dojoDebug";
dojo.hostenv._println_buffer=[];
dojo.hostenv._println_safe=false;
dojo.hostenv.println=function(_c8){
if(!dojo.hostenv._println_safe){
dojo.hostenv._println_buffer.push(_c8);
}else{
try{
var _c9=document.getElementById(djConfig.debugContainerId?djConfig.debugContainerId:dojo.hostenv.defaultDebugContainerId);
if(!_c9){
_c9=dojo.body();
}
var div=document.createElement("div");
div.appendChild(document.createTextNode(_c8));
_c9.appendChild(div);
}
catch(e){
try{
document.write("<div>"+_c8+"</div>");
}
catch(e2){
window.status=_c8;
}
}
}
};
dojo.addOnLoad(function(){
dojo.hostenv._println_safe=true;
while(dojo.hostenv._println_buffer.length>0){
dojo.hostenv.println(dojo.hostenv._println_buffer.shift());
}
});
function dj_addNodeEvtHdlr(_cb,_cc,fp){
var _ce=_cb["on"+_cc]||function(){
};
_cb["on"+_cc]=function(){
fp.apply(_cb,arguments);
_ce.apply(_cb,arguments);
};
return true;
}
function dj_load_init(e){
var _d0=(e&&e.type)?e.type.toLowerCase():"load";
if(arguments.callee.initialized||(_d0!="domcontentloaded"&&_d0!="load")){
return;
}
arguments.callee.initialized=true;
if(typeof (_timer)!="undefined"){
clearInterval(_timer);
delete _timer;
}
var _d1=function(){
if(dojo.render.html.ie){
dojo.hostenv.makeWidgets();
}
};
if(dojo.hostenv.inFlightCount==0){
_d1();
dojo.hostenv.modulesLoaded();
}else{
dojo.hostenv.modulesLoadedListeners.unshift(_d1);
}
}
if(document.addEventListener){
if(dojo.render.html.opera||(dojo.render.html.moz&&!djConfig.delayMozLoadingFix)){
document.addEventListener("DOMContentLoaded",dj_load_init,null);
}
window.addEventListener("load",dj_load_init,null);
}
if(dojo.render.html.ie&&dojo.render.os.win){
document.attachEvent("onreadystatechange",function(e){
if(document.readyState=="complete"){
dj_load_init();
}
});
}
if(/(WebKit|khtml)/i.test(navigator.userAgent)){
var _timer=setInterval(function(){
if(/loaded|complete/.test(document.readyState)){
dj_load_init();
}
},10);
}
if(dojo.render.html.ie){
dj_addNodeEvtHdlr(window,"beforeunload",function(){
dojo.hostenv._unloading=true;
window.setTimeout(function(){
dojo.hostenv._unloading=false;
},0);
});
}
dj_addNodeEvtHdlr(window,"unload",function(){
dojo.hostenv.unloaded();
if((!dojo.render.html.ie)||(dojo.render.html.ie&&dojo.hostenv._unloading)){
dojo.hostenv.unloaded();
}
});
dojo.hostenv.makeWidgets=function(){
var _d3=[];
if(djConfig.searchIds&&djConfig.searchIds.length>0){
_d3=_d3.concat(djConfig.searchIds);
}
if(dojo.hostenv.searchIds&&dojo.hostenv.searchIds.length>0){
_d3=_d3.concat(dojo.hostenv.searchIds);
}
if((djConfig.parseWidgets)||(_d3.length>0)){
if(dojo.evalObjPath("dojo.widget.Parse")){
var _d4=new dojo.xml.Parse();
if(_d3.length>0){
for(var x=0;x<_d3.length;x++){
var _d6=document.getElementById(_d3[x]);
if(!_d6){
continue;
}
var _d7=_d4.parseElement(_d6,null,true);
dojo.widget.getParser().createComponents(_d7);
}
}else{
if(djConfig.parseWidgets){
var _d7=_d4.parseElement(dojo.body(),null,true);
dojo.widget.getParser().createComponents(_d7);
}
}
}
}
};
dojo.addOnLoad(function(){
if(!dojo.render.html.ie){
dojo.hostenv.makeWidgets();
}
});
try{
if(dojo.render.html.ie){
document.namespaces.add("v","urn:schemas-microsoft-com:vml");
document.createStyleSheet().addRule("v\\:*","behavior:url(#default#VML)");
}
}
catch(e){
}
dojo.hostenv.writeIncludes=function(){
};
if(!dj_undef("document",this)){
dj_currentDocument=this.document;
}
dojo.doc=function(){
return dj_currentDocument;
};
dojo.body=function(){
return dojo.doc().body||dojo.doc().getElementsByTagName("body")[0];
};
dojo.byId=function(id,doc){
if((id)&&((typeof id=="string")||(id instanceof String))){
if(!doc){
doc=dj_currentDocument;
}
var ele=doc.getElementById(id);
if(ele&&(ele.id!=id)&&doc.all){
ele=null;
eles=doc.all[id];
if(eles){
if(eles.length){
for(var i=0;i<eles.length;i++){
if(eles[i].id==id){
ele=eles[i];
break;
}
}
}else{
ele=eles;
}
}
}
return ele;
}
return id;
};
dojo.setContext=function(_dc,_dd){
dj_currentContext=_dc;
dj_currentDocument=_dd;
};
dojo._fireCallback=function(_de,_df,_e0){
if((_df)&&((typeof _de=="string")||(_de instanceof String))){
_de=_df[_de];
}
return (_df?_de.apply(_df,_e0||[]):_de());
};
dojo.withGlobal=function(_e1,_e2,_e3,_e4){
var _e5;
var _e6=dj_currentContext;
var _e7=dj_currentDocument;
try{
dojo.setContext(_e1,_e1.document);
_e5=dojo._fireCallback(_e2,_e3,_e4);
}
finally{
dojo.setContext(_e6,_e7);
}
return _e5;
};
dojo.withDoc=function(_e8,_e9,_ea,_eb){
var _ec;
var _ed=dj_currentDocument;
try{
dj_currentDocument=_e8;
_ec=dojo._fireCallback(_e9,_ea,_eb);
}
finally{
dj_currentDocument=_ed;
}
return _ec;
};
}
(function(){
if(typeof dj_usingBootstrap!="undefined"){
return;
}
var _ee=false;
var _ef=false;
var _f0=false;
if((typeof this["load"]=="function")&&((typeof this["Packages"]=="function")||(typeof this["Packages"]=="object"))){
_ee=true;
}else{
if(typeof this["load"]=="function"){
_ef=true;
}else{
if(window.widget){
_f0=true;
}
}
}
var _f1=[];
if((this["djConfig"])&&((djConfig["isDebug"])||(djConfig["debugAtAllCosts"]))){
_f1.push("debug.js");
}
if((this["djConfig"])&&(djConfig["debugAtAllCosts"])&&(!_ee)&&(!_f0)){
_f1.push("browser_debug.js");
}
var _f2=djConfig["baseScriptUri"];
if((this["djConfig"])&&(djConfig["baseLoaderUri"])){
_f2=djConfig["baseLoaderUri"];
}
for(var x=0;x<_f1.length;x++){
var _f4=_f2+"src/"+_f1[x];
if(_ee||_ef){
load(_f4);
}else{
try{
document.write("<scr"+"ipt type='text/javascript' src='"+_f4+"'></scr"+"ipt>");
}
catch(e){
var _f5=document.createElement("script");
_f5.src=_f4;
document.getElementsByTagName("head")[0].appendChild(_f5);
}
}
}
})();
dojo.provide("dojo.dom");
dojo.dom.ELEMENT_NODE=1;
dojo.dom.ATTRIBUTE_NODE=2;
dojo.dom.TEXT_NODE=3;
dojo.dom.CDATA_SECTION_NODE=4;
dojo.dom.ENTITY_REFERENCE_NODE=5;
dojo.dom.ENTITY_NODE=6;
dojo.dom.PROCESSING_INSTRUCTION_NODE=7;
dojo.dom.COMMENT_NODE=8;
dojo.dom.DOCUMENT_NODE=9;
dojo.dom.DOCUMENT_TYPE_NODE=10;
dojo.dom.DOCUMENT_FRAGMENT_NODE=11;
dojo.dom.NOTATION_NODE=12;
dojo.dom.dojoml="http://www.dojotoolkit.org/2004/dojoml";
dojo.dom.xmlns={svg:"http://www.w3.org/2000/svg",smil:"http://www.w3.org/2001/SMIL20/",mml:"http://www.w3.org/1998/Math/MathML",cml:"http://www.xml-cml.org",xlink:"http://www.w3.org/1999/xlink",xhtml:"http://www.w3.org/1999/xhtml",xul:"http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul",xbl:"http://www.mozilla.org/xbl",fo:"http://www.w3.org/1999/XSL/Format",xsl:"http://www.w3.org/1999/XSL/Transform",xslt:"http://www.w3.org/1999/XSL/Transform",xi:"http://www.w3.org/2001/XInclude",xforms:"http://www.w3.org/2002/01/xforms",saxon:"http://icl.com/saxon",xalan:"http://xml.apache.org/xslt",xsd:"http://www.w3.org/2001/XMLSchema",dt:"http://www.w3.org/2001/XMLSchema-datatypes",xsi:"http://www.w3.org/2001/XMLSchema-instance",rdf:"http://www.w3.org/1999/02/22-rdf-syntax-ns#",rdfs:"http://www.w3.org/2000/01/rdf-schema#",dc:"http://purl.org/dc/elements/1.1/",dcq:"http://purl.org/dc/qualifiers/1.0","soap-env":"http://schemas.xmlsoap.org/soap/envelope/",wsdl:"http://schemas.xmlsoap.org/wsdl/",AdobeExtensions:"http://ns.adobe.com/AdobeSVGViewerExtensions/3.0/"};
dojo.dom.isNode=function(wh){
if(typeof Element=="function"){
try{
return wh instanceof Element;
}
catch(e){
}
}else{
return wh&&!isNaN(wh.nodeType);
}
};
dojo.dom.getUniqueId=function(){
var _f7=dojo.doc();
do{
var id="dj_unique_"+(++arguments.callee._idIncrement);
}while(_f7.getElementById(id));
return id;
};
dojo.dom.getUniqueId._idIncrement=0;
dojo.dom.firstElement=dojo.dom.getFirstChildElement=function(_f9,_fa){
var _fb=_f9.firstChild;
while(_fb&&_fb.nodeType!=dojo.dom.ELEMENT_NODE){
_fb=_fb.nextSibling;
}
if(_fa&&_fb&&_fb.tagName&&_fb.tagName.toLowerCase()!=_fa.toLowerCase()){
_fb=dojo.dom.nextElement(_fb,_fa);
}
return _fb;
};
dojo.dom.lastElement=dojo.dom.getLastChildElement=function(_fc,_fd){
var _fe=_fc.lastChild;
while(_fe&&_fe.nodeType!=dojo.dom.ELEMENT_NODE){
_fe=_fe.previousSibling;
}
if(_fd&&_fe&&_fe.tagName&&_fe.tagName.toLowerCase()!=_fd.toLowerCase()){
_fe=dojo.dom.prevElement(_fe,_fd);
}
return _fe;
};
dojo.dom.nextElement=dojo.dom.getNextSiblingElement=function(_ff,_100){
if(!_ff){
return null;
}
do{
_ff=_ff.nextSibling;
}while(_ff&&_ff.nodeType!=dojo.dom.ELEMENT_NODE);
if(_ff&&_100&&_100.toLowerCase()!=_ff.tagName.toLowerCase()){
return dojo.dom.nextElement(_ff,_100);
}
return _ff;
};
dojo.dom.prevElement=dojo.dom.getPreviousSiblingElement=function(node,_102){
if(!node){
return null;
}
if(_102){
_102=_102.toLowerCase();
}
do{
node=node.previousSibling;
}while(node&&node.nodeType!=dojo.dom.ELEMENT_NODE);
if(node&&_102&&_102.toLowerCase()!=node.tagName.toLowerCase()){
return dojo.dom.prevElement(node,_102);
}
return node;
};
dojo.dom.moveChildren=function(_103,_104,trim){
var _106=0;
if(trim){
while(_103.hasChildNodes()&&_103.firstChild.nodeType==dojo.dom.TEXT_NODE){
_103.removeChild(_103.firstChild);
}
while(_103.hasChildNodes()&&_103.lastChild.nodeType==dojo.dom.TEXT_NODE){
_103.removeChild(_103.lastChild);
}
}
while(_103.hasChildNodes()){
_104.appendChild(_103.firstChild);
_106++;
}
return _106;
};
dojo.dom.copyChildren=function(_107,_108,trim){
var _10a=_107.cloneNode(true);
return this.moveChildren(_10a,_108,trim);
};
dojo.dom.replaceChildren=function(node,_10c){
var _10d=[];
if(dojo.render.html.ie){
for(var i=0;i<node.childNodes.length;i++){
_10d.push(node.childNodes[i]);
}
}
dojo.dom.removeChildren(node);
node.appendChild(_10c);
for(var i=0;i<_10d.length;i++){
dojo.dom.destroyNode(_10d[i]);
}
};
dojo.dom.removeChildren=function(node){
var _110=node.childNodes.length;
while(node.hasChildNodes()){
dojo.dom.removeNode(node.firstChild);
}
return _110;
};
dojo.dom.replaceNode=function(node,_112){
return node.parentNode.replaceChild(_112,node);
};
dojo.dom.destroyNode=function(node){
if(node.parentNode){
node=dojo.dom.removeNode(node);
}
if(node.nodeType!=3){
if(dojo.evalObjPath("dojo.event.browser.clean",false)){
dojo.event.browser.clean(node);
}
if(dojo.render.html.ie){
node.outerHTML="";
}
}
};
dojo.dom.removeNode=function(node){
if(node&&node.parentNode){
return node.parentNode.removeChild(node);
}
};
dojo.dom.getAncestors=function(node,_116,_117){
var _118=[];
var _119=(_116&&(_116 instanceof Function||typeof _116=="function"));
while(node){
if(!_119||_116(node)){
_118.push(node);
}
if(_117&&_118.length>0){
return _118[0];
}
node=node.parentNode;
}
if(_117){
return null;
}
return _118;
};
dojo.dom.getAncestorsByTag=function(node,tag,_11c){
tag=tag.toLowerCase();
return dojo.dom.getAncestors(node,function(el){
return ((el.tagName)&&(el.tagName.toLowerCase()==tag));
},_11c);
};
dojo.dom.getFirstAncestorByTag=function(node,tag){
return dojo.dom.getAncestorsByTag(node,tag,true);
};
dojo.dom.isDescendantOf=function(node,_121,_122){
if(_122&&node){
node=node.parentNode;
}
while(node){
if(node==_121){
return true;
}
node=node.parentNode;
}
return false;
};
dojo.dom.innerXML=function(node){
if(node.innerXML){
return node.innerXML;
}else{
if(node.xml){
return node.xml;
}else{
if(typeof XMLSerializer!="undefined"){
return (new XMLSerializer()).serializeToString(node);
}
}
}
};
dojo.dom.createDocument=function(){
var doc=null;
var _125=dojo.doc();
if(!dj_undef("ActiveXObject")){
var _126=["MSXML2","Microsoft","MSXML","MSXML3"];
for(var i=0;i<_126.length;i++){
try{
doc=new ActiveXObject(_126[i]+".XMLDOM");
}
catch(e){
}
if(doc){
break;
}
}
}else{
if((_125.implementation)&&(_125.implementation.createDocument)){
doc=_125.implementation.createDocument("","",null);
}
}
return doc;
};
dojo.dom.createDocumentFromText=function(str,_129){
if(!_129){
_129="text/xml";
}
if(!dj_undef("DOMParser")){
var _12a=new DOMParser();
return _12a.parseFromString(str,_129);
}else{
if(!dj_undef("ActiveXObject")){
var _12b=dojo.dom.createDocument();
if(_12b){
_12b.async=false;
_12b.loadXML(str);
return _12b;
}else{
dojo.debug("toXml didn't work?");
}
}else{
var _12c=dojo.doc();
if(_12c.createElement){
var tmp=_12c.createElement("xml");
tmp.innerHTML=str;
if(_12c.implementation&&_12c.implementation.createDocument){
var _12e=_12c.implementation.createDocument("foo","",null);
for(var i=0;i<tmp.childNodes.length;i++){
_12e.importNode(tmp.childNodes.item(i),true);
}
return _12e;
}
return ((tmp.document)&&(tmp.document.firstChild?tmp.document.firstChild:tmp));
}
}
}
return null;
};
dojo.dom.prependChild=function(node,_131){
if(_131.firstChild){
_131.insertBefore(node,_131.firstChild);
}else{
_131.appendChild(node);
}
return true;
};
dojo.dom.insertBefore=function(node,ref,_134){
if((_134!=true)&&(node===ref||node.nextSibling===ref)){
return false;
}
var _135=ref.parentNode;
_135.insertBefore(node,ref);
return true;
};
dojo.dom.insertAfter=function(node,ref,_138){
var pn=ref.parentNode;
if(ref==pn.lastChild){
if((_138!=true)&&(node===ref)){
return false;
}
pn.appendChild(node);
}else{
return this.insertBefore(node,ref.nextSibling,_138);
}
return true;
};
dojo.dom.insertAtPosition=function(node,ref,_13c){
if((!node)||(!ref)||(!_13c)){
return false;
}
switch(_13c.toLowerCase()){
case "before":
return dojo.dom.insertBefore(node,ref);
case "after":
return dojo.dom.insertAfter(node,ref);
case "first":
if(ref.firstChild){
return dojo.dom.insertBefore(node,ref.firstChild);
}else{
ref.appendChild(node);
return true;
}
break;
default:
ref.appendChild(node);
return true;
}
};
dojo.dom.insertAtIndex=function(node,_13e,_13f){
var _140=_13e.childNodes;
if(!_140.length||_140.length==_13f){
_13e.appendChild(node);
return true;
}
if(_13f==0){
return dojo.dom.prependChild(node,_13e);
}
return dojo.dom.insertAfter(node,_140[_13f-1]);
};
dojo.dom.textContent=function(node,text){
if(arguments.length>1){
var _143=dojo.doc();
dojo.dom.replaceChildren(node,_143.createTextNode(text));
return text;
}else{
if(node.textContent!=undefined){
return node.textContent;
}
var _144="";
if(node==null){
return _144;
}
for(var i=0;i<node.childNodes.length;i++){
switch(node.childNodes[i].nodeType){
case 1:
case 5:
_144+=dojo.dom.textContent(node.childNodes[i]);
break;
case 3:
case 2:
case 4:
_144+=node.childNodes[i].nodeValue;
break;
default:
break;
}
}
return _144;
}
};
dojo.dom.hasParent=function(node){
return Boolean(node&&node.parentNode&&dojo.dom.isNode(node.parentNode));
};
dojo.dom.isTag=function(node){
if(node&&node.tagName){
for(var i=1;i<arguments.length;i++){
if(node.tagName==String(arguments[i])){
return String(arguments[i]);
}
}
}
return "";
};
dojo.dom.setAttributeNS=function(elem,_14a,_14b,_14c){
if(elem==null||((elem==undefined)&&(typeof elem=="undefined"))){
dojo.raise("No element given to dojo.dom.setAttributeNS");
}
if(!((elem.setAttributeNS==undefined)&&(typeof elem.setAttributeNS=="undefined"))){
elem.setAttributeNS(_14a,_14b,_14c);
}else{
var _14d=elem.ownerDocument;
var _14e=_14d.createNode(2,_14b,_14a);
_14e.nodeValue=_14c;
elem.setAttributeNode(_14e);
}
};
dojo.provide("dojo.xml.Parse");
dojo.xml.Parse=function(){
var isIE=((dojo.render.html.capable)&&(dojo.render.html.ie));
function getTagName(node){
try{
return node.tagName.toLowerCase();
}
catch(e){
return "";
}
}
function getDojoTagName(node){
var _152=getTagName(node);
if(!_152){
return "";
}
if((dojo.widget)&&(dojo.widget.tags[_152])){
return _152;
}
var p=_152.indexOf(":");
if(p>=0){
return _152;
}
if(_152.substr(0,5)=="dojo:"){
return _152;
}
if(dojo.render.html.capable&&dojo.render.html.ie&&node.scopeName!="HTML"){
return node.scopeName.toLowerCase()+":"+_152;
}
if(_152.substr(0,4)=="dojo"){
return "dojo:"+_152.substring(4);
}
var djt=node.getAttribute("dojoType")||node.getAttribute("dojotype");
if(djt){
if(djt.indexOf(":")<0){
djt="dojo:"+djt;
}
return djt.toLowerCase();
}
djt=node.getAttributeNS&&node.getAttributeNS(dojo.dom.dojoml,"type");
if(djt){
return "dojo:"+djt.toLowerCase();
}
try{
djt=node.getAttribute("dojo:type");
}
catch(e){
}
if(djt){
return "dojo:"+djt.toLowerCase();
}
if((dj_global["djConfig"])&&(!djConfig["ignoreClassNames"])){
var _155=node.className||node.getAttribute("class");
if((_155)&&(_155.indexOf)&&(_155.indexOf("dojo-")!=-1)){
var _156=_155.split(" ");
for(var x=0,c=_156.length;x<c;x++){
if(_156[x].slice(0,5)=="dojo-"){
return "dojo:"+_156[x].substr(5).toLowerCase();
}
}
}
}
return "";
}
this.parseElement=function(node,_15a,_15b,_15c){
var _15d=getTagName(node);
if(isIE&&_15d.indexOf("/")==0){
return null;
}
try{
var attr=node.getAttribute("parseWidgets");
if(attr&&attr.toLowerCase()=="false"){
return {};
}
}
catch(e){
}
var _15f=true;
if(_15b){
var _160=getDojoTagName(node);
_15d=_160||_15d;
_15f=Boolean(_160);
}
var _161={};
_161[_15d]=[];
var pos=_15d.indexOf(":");
if(pos>0){
var ns=_15d.substring(0,pos);
_161["ns"]=ns;
if((dojo.ns)&&(!dojo.ns.allow(ns))){
_15f=false;
}
}
if(_15f){
var _164=this.parseAttributes(node);
for(var attr in _164){
if((!_161[_15d][attr])||(typeof _161[_15d][attr]!="array")){
_161[_15d][attr]=[];
}
_161[_15d][attr].push(_164[attr]);
}
_161[_15d].nodeRef=node;
_161.tagName=_15d;
_161.index=_15c||0;
}
var _165=0;
for(var i=0;i<node.childNodes.length;i++){
var tcn=node.childNodes.item(i);
switch(tcn.nodeType){
case dojo.dom.ELEMENT_NODE:
var ctn=getDojoTagName(tcn)||getTagName(tcn);
if(!_161[ctn]){
_161[ctn]=[];
}
_161[ctn].push(this.parseElement(tcn,true,_15b,_165));
if((tcn.childNodes.length==1)&&(tcn.childNodes.item(0).nodeType==dojo.dom.TEXT_NODE)){
_161[ctn][_161[ctn].length-1].value=tcn.childNodes.item(0).nodeValue;
}
_165++;
break;
case dojo.dom.TEXT_NODE:
if(node.childNodes.length==1){
_161[_15d].push({value:node.childNodes.item(0).nodeValue});
}
break;
default:
break;
}
}
return _161;
};
this.parseAttributes=function(node){
var _16a={};
var atts=node.attributes;
var _16c,i=0;
while((_16c=atts[i++])){
if(isIE){
if(!_16c){
continue;
}
if((typeof _16c=="object")&&(typeof _16c.nodeValue=="undefined")||(_16c.nodeValue==null)||(_16c.nodeValue=="")){
continue;
}
}
var nn=_16c.nodeName.split(":");
nn=(nn.length==2)?nn[1]:_16c.nodeName;
_16a[nn]={value:_16c.nodeValue};
}
return _16a;
};
};
dojo.provide("dojo.lang.common");
dojo.lang.inherits=function(_16f,_170){
if(!dojo.lang.isFunction(_170)){
dojo.raise("dojo.inherits: superclass argument ["+_170+"] must be a function (subclass: ["+_16f+"']");
}
_16f.prototype=new _170();
_16f.prototype.constructor=_16f;
_16f.superclass=_170.prototype;
_16f["super"]=_170.prototype;
};
dojo.lang._mixin=function(obj,_172){
var tobj={};
for(var x in _172){
if((typeof tobj[x]=="undefined")||(tobj[x]!=_172[x])){
obj[x]=_172[x];
}
}
if(dojo.render.html.ie&&(typeof (_172["toString"])=="function")&&(_172["toString"]!=obj["toString"])&&(_172["toString"]!=tobj["toString"])){
obj.toString=_172.toString;
}
return obj;
};
dojo.lang.mixin=function(obj,_176){
for(var i=1,l=arguments.length;i<l;i++){
dojo.lang._mixin(obj,arguments[i]);
}
return obj;
};
dojo.lang.extend=function(_179,_17a){
for(var i=1,l=arguments.length;i<l;i++){
dojo.lang._mixin(_179.prototype,arguments[i]);
}
return _179;
};
dojo.inherits=dojo.lang.inherits;
dojo.mixin=dojo.lang.mixin;
dojo.extend=dojo.lang.extend;
dojo.lang.find=function(_17d,_17e,_17f,_180){
if(!dojo.lang.isArrayLike(_17d)&&dojo.lang.isArrayLike(_17e)){
dojo.deprecated("dojo.lang.find(value, array)","use dojo.lang.find(array, value) instead","0.5");
var temp=_17d;
_17d=_17e;
_17e=temp;
}
var _182=dojo.lang.isString(_17d);
if(_182){
_17d=_17d.split("");
}
if(_180){
var step=-1;
var i=_17d.length-1;
var end=-1;
}else{
var step=1;
var i=0;
var end=_17d.length;
}
if(_17f){
while(i!=end){
if(_17d[i]===_17e){
return i;
}
i+=step;
}
}else{
while(i!=end){
if(_17d[i]==_17e){
return i;
}
i+=step;
}
}
return -1;
};
dojo.lang.indexOf=dojo.lang.find;
dojo.lang.findLast=function(_186,_187,_188){
return dojo.lang.find(_186,_187,_188,true);
};
dojo.lang.lastIndexOf=dojo.lang.findLast;
dojo.lang.inArray=function(_189,_18a){
return dojo.lang.find(_189,_18a)>-1;
};
dojo.lang.isObject=function(it){
if(typeof it=="undefined"){
return false;
}
return (typeof it=="object"||it===null||dojo.lang.isArray(it)||dojo.lang.isFunction(it));
};
dojo.lang.isArray=function(it){
return (it&&it instanceof Array||typeof it=="array");
};
dojo.lang.isArrayLike=function(it){
if((!it)||(dojo.lang.isUndefined(it))){
return false;
}
if(dojo.lang.isString(it)){
return false;
}
if(dojo.lang.isFunction(it)){
return false;
}
if(dojo.lang.isArray(it)){
return true;
}
if((it.tagName)&&(it.tagName.toLowerCase()=="form")){
return false;
}
if(dojo.lang.isNumber(it.length)&&isFinite(it.length)){
return true;
}
return false;
};
dojo.lang.isFunction=function(it){
return (it instanceof Function||typeof it=="function");
};
(function(){
if((dojo.render.html.capable)&&(dojo.render.html["safari"])){
dojo.lang.isFunction=function(it){
if((typeof (it)=="function")&&(it=="[object NodeList]")){
return false;
}
return (it instanceof Function||typeof it=="function");
};
}
})();
dojo.lang.isString=function(it){
return (typeof it=="string"||it instanceof String);
};
dojo.lang.isAlien=function(it){
if(!it){
return false;
}
return !dojo.lang.isFunction(it)&&/\{\s*\[native code\]\s*\}/.test(String(it));
};
dojo.lang.isBoolean=function(it){
return (it instanceof Boolean||typeof it=="boolean");
};
dojo.lang.isNumber=function(it){
return (it instanceof Number||typeof it=="number");
};
dojo.lang.isUndefined=function(it){
return ((typeof (it)=="undefined")&&(it==undefined));
};
dojo.provide("dojo.lang.func");
dojo.lang.hitch=function(_195,_196){
var fcn=(dojo.lang.isString(_196)?_195[_196]:_196)||function(){
};
return function(){
return fcn.apply(_195,arguments);
};
};
dojo.lang.anonCtr=0;
dojo.lang.anon={};
dojo.lang.nameAnonFunc=function(_198,_199,_19a){
var nso=(_199||dojo.lang.anon);
if((_19a)||((dj_global["djConfig"])&&(djConfig["slowAnonFuncLookups"]==true))){
for(var x in nso){
try{
if(nso[x]===_198){
return x;
}
}
catch(e){
}
}
}
var ret="__"+dojo.lang.anonCtr++;
while(typeof nso[ret]!="undefined"){
ret="__"+dojo.lang.anonCtr++;
}
nso[ret]=_198;
return ret;
};
dojo.lang.forward=function(_19e){
return function(){
return this[_19e].apply(this,arguments);
};
};
dojo.lang.curry=function(_19f,func){
var _1a1=[];
_19f=_19f||dj_global;
if(dojo.lang.isString(func)){
func=_19f[func];
}
for(var x=2;x<arguments.length;x++){
_1a1.push(arguments[x]);
}
var _1a3=(func["__preJoinArity"]||func.length)-_1a1.length;
function gather(_1a4,_1a5,_1a6){
var _1a7=_1a6;
var _1a8=_1a5.slice(0);
for(var x=0;x<_1a4.length;x++){
_1a8.push(_1a4[x]);
}
_1a6=_1a6-_1a4.length;
if(_1a6<=0){
var res=func.apply(_19f,_1a8);
_1a6=_1a7;
return res;
}else{
return function(){
return gather(arguments,_1a8,_1a6);
};
}
}
return gather([],_1a1,_1a3);
};
dojo.lang.curryArguments=function(_1ab,func,args,_1ae){
var _1af=[];
var x=_1ae||0;
for(x=_1ae;x<args.length;x++){
_1af.push(args[x]);
}
return dojo.lang.curry.apply(dojo.lang,[_1ab,func].concat(_1af));
};
dojo.lang.tryThese=function(){
for(var x=0;x<arguments.length;x++){
try{
if(typeof arguments[x]=="function"){
var ret=(arguments[x]());
if(ret){
return ret;
}
}
}
catch(e){
dojo.debug(e);
}
}
};
dojo.lang.delayThese=function(farr,cb,_1b5,_1b6){
if(!farr.length){
if(typeof _1b6=="function"){
_1b6();
}
return;
}
if((typeof _1b5=="undefined")&&(typeof cb=="number")){
_1b5=cb;
cb=function(){
};
}else{
if(!cb){
cb=function(){
};
if(!_1b5){
_1b5=0;
}
}
}
setTimeout(function(){
(farr.shift())();
cb();
dojo.lang.delayThese(farr,cb,_1b5,_1b6);
},_1b5);
};
dojo.provide("dojo.lang.array");
dojo.lang.mixin(dojo.lang,{has:function(obj,name){
try{
return typeof obj[name]!="undefined";
}
catch(e){
return false;
}
},isEmpty:function(obj){
if(dojo.lang.isObject(obj)){
var tmp={};
var _1bb=0;
for(var x in obj){
if(obj[x]&&(!tmp[x])){
_1bb++;
break;
}
}
return _1bb==0;
}else{
if(dojo.lang.isArrayLike(obj)||dojo.lang.isString(obj)){
return obj.length==0;
}
}
},map:function(arr,obj,_1bf){
var _1c0=dojo.lang.isString(arr);
if(_1c0){
arr=arr.split("");
}
if(dojo.lang.isFunction(obj)&&(!_1bf)){
_1bf=obj;
obj=dj_global;
}else{
if(dojo.lang.isFunction(obj)&&_1bf){
var _1c1=obj;
obj=_1bf;
_1bf=_1c1;
}
}
if(Array.map){
var _1c2=Array.map(arr,_1bf,obj);
}else{
var _1c2=[];
for(var i=0;i<arr.length;++i){
_1c2.push(_1bf.call(obj,arr[i]));
}
}
if(_1c0){
return _1c2.join("");
}else{
return _1c2;
}
},reduce:function(arr,_1c5,obj,_1c7){
var _1c8=_1c5;
if(arguments.length==1){
dojo.debug("dojo.lang.reduce called with too few arguments!");
return false;
}else{
if(arguments.length==2){
_1c7=_1c5;
_1c8=arr.shift();
}else{
if(arguments.lenght==3){
if(dojo.lang.isFunction(obj)){
_1c7=obj;
obj=null;
}
}else{
if(dojo.lang.isFunction(obj)){
var tmp=_1c7;
_1c7=obj;
obj=tmp;
}
}
}
}
var ob=obj?obj:dj_global;
dojo.lang.map(arr,function(val){
_1c8=_1c7.call(ob,_1c8,val);
});
return _1c8;
},forEach:function(_1cc,_1cd,_1ce){
if(dojo.lang.isString(_1cc)){
_1cc=_1cc.split("");
}
if(Array.forEach){
Array.forEach(_1cc,_1cd,_1ce);
}else{
if(!_1ce){
_1ce=dj_global;
}
for(var i=0,l=_1cc.length;i<l;i++){
_1cd.call(_1ce,_1cc[i],i,_1cc);
}
}
},_everyOrSome:function(_1d1,arr,_1d3,_1d4){
if(dojo.lang.isString(arr)){
arr=arr.split("");
}
if(Array.every){
return Array[_1d1?"every":"some"](arr,_1d3,_1d4);
}else{
if(!_1d4){
_1d4=dj_global;
}
for(var i=0,l=arr.length;i<l;i++){
var _1d7=_1d3.call(_1d4,arr[i],i,arr);
if(_1d1&&!_1d7){
return false;
}else{
if((!_1d1)&&(_1d7)){
return true;
}
}
}
return Boolean(_1d1);
}
},every:function(arr,_1d9,_1da){
return this._everyOrSome(true,arr,_1d9,_1da);
},some:function(arr,_1dc,_1dd){
return this._everyOrSome(false,arr,_1dc,_1dd);
},filter:function(arr,_1df,_1e0){
var _1e1=dojo.lang.isString(arr);
if(_1e1){
arr=arr.split("");
}
var _1e2;
if(Array.filter){
_1e2=Array.filter(arr,_1df,_1e0);
}else{
if(!_1e0){
if(arguments.length>=3){
dojo.raise("thisObject doesn't exist!");
}
_1e0=dj_global;
}
_1e2=[];
for(var i=0;i<arr.length;i++){
if(_1df.call(_1e0,arr[i],i,arr)){
_1e2.push(arr[i]);
}
}
}
if(_1e1){
return _1e2.join("");
}else{
return _1e2;
}
},unnest:function(){
var out=[];
for(var i=0;i<arguments.length;i++){
if(dojo.lang.isArrayLike(arguments[i])){
var add=dojo.lang.unnest.apply(this,arguments[i]);
out=out.concat(add);
}else{
out.push(arguments[i]);
}
}
return out;
},toArray:function(_1e7,_1e8){
var _1e9=[];
for(var i=_1e8||0;i<_1e7.length;i++){
_1e9.push(_1e7[i]);
}
return _1e9;
}});
dojo.provide("dojo.lang.extras");
dojo.lang.setTimeout=function(func,_1ec){
var _1ed=window,_1ee=2;
if(!dojo.lang.isFunction(func)){
_1ed=func;
func=_1ec;
_1ec=arguments[2];
_1ee++;
}
if(dojo.lang.isString(func)){
func=_1ed[func];
}
var args=[];
for(var i=_1ee;i<arguments.length;i++){
args.push(arguments[i]);
}
return dojo.global().setTimeout(function(){
func.apply(_1ed,args);
},_1ec);
};
dojo.lang.clearTimeout=function(_1f1){
dojo.global().clearTimeout(_1f1);
};
dojo.lang.getNameInObj=function(ns,item){
if(!ns){
ns=dj_global;
}
for(var x in ns){
if(ns[x]===item){
return new String(x);
}
}
return null;
};
dojo.lang.shallowCopy=function(obj,deep){
var i,ret;
if(obj===null){
return null;
}
if(dojo.lang.isObject(obj)){
ret=new obj.constructor();
for(i in obj){
if(dojo.lang.isUndefined(ret[i])){
ret[i]=deep?dojo.lang.shallowCopy(obj[i],deep):obj[i];
}
}
}else{
if(dojo.lang.isArray(obj)){
ret=[];
for(i=0;i<obj.length;i++){
ret[i]=deep?dojo.lang.shallowCopy(obj[i],deep):obj[i];
}
}else{
ret=obj;
}
}
return ret;
};
dojo.lang.firstValued=function(){
for(var i=0;i<arguments.length;i++){
if(typeof arguments[i]!="undefined"){
return arguments[i];
}
}
return undefined;
};
dojo.lang.getObjPathValue=function(_1fa,_1fb,_1fc){
with(dojo.parseObjPath(_1fa,_1fb,_1fc)){
return dojo.evalProp(prop,obj,_1fc);
}
};
dojo.lang.setObjPathValue=function(_1fd,_1fe,_1ff,_200){
dojo.deprecated("dojo.lang.setObjPathValue","use dojo.parseObjPath and the '=' operator","0.6");
if(arguments.length<4){
_200=true;
}
with(dojo.parseObjPath(_1fd,_1ff,_200)){
if(obj&&(_200||(prop in obj))){
obj[prop]=_1fe;
}
}
};
dojo.provide("dojo.lang.declare");
dojo.lang.declare=function(_201,_202,init,_204){
if((dojo.lang.isFunction(_204))||((!_204)&&(!dojo.lang.isFunction(init)))){
var temp=_204;
_204=init;
init=temp;
}
var _206=[];
if(dojo.lang.isArray(_202)){
_206=_202;
_202=_206.shift();
}
if(!init){
init=dojo.evalObjPath(_201,false);
if((init)&&(!dojo.lang.isFunction(init))){
init=null;
}
}
var ctor=dojo.lang.declare._makeConstructor();
var scp=(_202?_202.prototype:null);
if(scp){
scp.prototyping=true;
ctor.prototype=new _202();
scp.prototyping=false;
}
ctor.superclass=scp;
ctor.mixins=_206;
for(var i=0,l=_206.length;i<l;i++){
dojo.lang.extend(ctor,_206[i].prototype);
}
ctor.prototype.initializer=null;
ctor.prototype.declaredClass=_201;
if(dojo.lang.isArray(_204)){
dojo.lang.extend.apply(dojo.lang,[ctor].concat(_204));
}else{
dojo.lang.extend(ctor,(_204)||{});
}
dojo.lang.extend(ctor,dojo.lang.declare._common);
ctor.prototype.constructor=ctor;
ctor.prototype.initializer=(ctor.prototype.initializer)||(init)||(function(){
});
var _20b=dojo.parseObjPath(_201,null,true);
_20b.obj[_20b.prop]=ctor;
return ctor;
};
dojo.lang.declare._makeConstructor=function(){
return function(){
var self=this._getPropContext();
var s=self.constructor.superclass;
if((s)&&(s.constructor)){
if(s.constructor==arguments.callee){
this._inherited("constructor",arguments);
}else{
this._contextMethod(s,"constructor",arguments);
}
}
var ms=(self.constructor.mixins)||([]);
for(var i=0,m;(m=ms[i]);i++){
(((m.prototype)&&(m.prototype.initializer))||(m)).apply(this,arguments);
}
if((!this.prototyping)&&(self.initializer)){
self.initializer.apply(this,arguments);
}
};
};
dojo.lang.declare._common={_getPropContext:function(){
return (this.___proto||this);
},_contextMethod:function(_211,_212,args){
var _214,_215=this.___proto;
this.___proto=_211;
try{
_214=_211[_212].apply(this,(args||[]));
}
catch(e){
throw e;
}
finally{
this.___proto=_215;
}
return _214;
},_inherited:function(prop,args){
var p=this._getPropContext();
do{
if((!p.constructor)||(!p.constructor.superclass)){
return;
}
p=p.constructor.superclass;
}while(!(prop in p));
return (dojo.lang.isFunction(p[prop])?this._contextMethod(p,prop,args):p[prop]);
},inherited:function(prop,args){
dojo.deprecated("'inherited' method is dangerous, do not up-call! 'inherited' is slated for removal in 0.5; name your super class (or use superclass property) instead.","0.5");
this._inherited(prop,args);
}};
dojo.declare=dojo.lang.declare;
dojo.provide("dojo.ns");
dojo.ns={namespaces:{},failed:{},loading:{},loaded:{},register:function(name,_21c,_21d,_21e){
if(!_21e||!this.namespaces[name]){
this.namespaces[name]=new dojo.ns.Ns(name,_21c,_21d);
}
},allow:function(name){
if(this.failed[name]){
return false;
}
if((djConfig.excludeNamespace)&&(dojo.lang.inArray(djConfig.excludeNamespace,name))){
return false;
}
return ((name==this.dojo)||(!djConfig.includeNamespace)||(dojo.lang.inArray(djConfig.includeNamespace,name)));
},get:function(name){
return this.namespaces[name];
},require:function(name){
var ns=this.namespaces[name];
if((ns)&&(this.loaded[name])){
return ns;
}
if(!this.allow(name)){
return false;
}
if(this.loading[name]){
dojo.debug("dojo.namespace.require: re-entrant request to load namespace \""+name+"\" must fail.");
return false;
}
var req=dojo.require;
this.loading[name]=true;
try{
if(name=="dojo"){
req("dojo.namespaces.dojo");
}else{
if(!dojo.hostenv.moduleHasPrefix(name)){
dojo.registerModulePath(name,"../"+name);
}
req([name,"manifest"].join("."),false,true);
}
if(!this.namespaces[name]){
this.failed[name]=true;
}
}
finally{
this.loading[name]=false;
}
return this.namespaces[name];
}};
dojo.ns.Ns=function(name,_225,_226){
this.name=name;
this.module=_225;
this.resolver=_226;
this._loaded=[];
this._failed=[];
};
dojo.ns.Ns.prototype.resolve=function(name,_228,_229){
if(!this.resolver||djConfig["skipAutoRequire"]){
return false;
}
var _22a=this.resolver(name,_228);
if((_22a)&&(!this._loaded[_22a])&&(!this._failed[_22a])){
var req=dojo.require;
req(_22a,false,true);
if(dojo.hostenv.findModule(_22a,false)){
this._loaded[_22a]=true;
}else{
if(!_229){
dojo.raise("dojo.ns.Ns.resolve: module '"+_22a+"' not found after loading via namespace '"+this.name+"'");
}
this._failed[_22a]=true;
}
}
return Boolean(this._loaded[_22a]);
};
dojo.registerNamespace=function(name,_22d,_22e){
dojo.ns.register.apply(dojo.ns,arguments);
};
dojo.registerNamespaceResolver=function(name,_230){
var n=dojo.ns.namespaces[name];
if(n){
n.resolver=_230;
}
};
dojo.registerNamespaceManifest=function(_232,path,name,_235,_236){
dojo.registerModulePath(name,path);
dojo.registerNamespace(name,_235,_236);
};
dojo.registerNamespace("dojo","dojo.widget");
dojo.provide("dojo.event.common");
dojo.event=new function(){
this._canTimeout=dojo.lang.isFunction(dj_global["setTimeout"])||dojo.lang.isAlien(dj_global["setTimeout"]);
function interpolateArgs(args,_238){
var dl=dojo.lang;
var ao={srcObj:dj_global,srcFunc:null,adviceObj:dj_global,adviceFunc:null,aroundObj:null,aroundFunc:null,adviceType:(args.length>2)?args[0]:"after",precedence:"last",once:false,delay:null,rate:0,adviceMsg:false};
switch(args.length){
case 0:
return;
case 1:
return;
case 2:
ao.srcFunc=args[0];
ao.adviceFunc=args[1];
break;
case 3:
if((dl.isObject(args[0]))&&(dl.isString(args[1]))&&(dl.isString(args[2]))){
ao.adviceType="after";
ao.srcObj=args[0];
ao.srcFunc=args[1];
ao.adviceFunc=args[2];
}else{
if((dl.isString(args[1]))&&(dl.isString(args[2]))){
ao.srcFunc=args[1];
ao.adviceFunc=args[2];
}else{
if((dl.isObject(args[0]))&&(dl.isString(args[1]))&&(dl.isFunction(args[2]))){
ao.adviceType="after";
ao.srcObj=args[0];
ao.srcFunc=args[1];
var _23b=dl.nameAnonFunc(args[2],ao.adviceObj,_238);
ao.adviceFunc=_23b;
}else{
if((dl.isFunction(args[0]))&&(dl.isObject(args[1]))&&(dl.isString(args[2]))){
ao.adviceType="after";
ao.srcObj=dj_global;
var _23b=dl.nameAnonFunc(args[0],ao.srcObj,_238);
ao.srcFunc=_23b;
ao.adviceObj=args[1];
ao.adviceFunc=args[2];
}
}
}
}
break;
case 4:
if((dl.isObject(args[0]))&&(dl.isObject(args[2]))){
ao.adviceType="after";
ao.srcObj=args[0];
ao.srcFunc=args[1];
ao.adviceObj=args[2];
ao.adviceFunc=args[3];
}else{
if((dl.isString(args[0]))&&(dl.isString(args[1]))&&(dl.isObject(args[2]))){
ao.adviceType=args[0];
ao.srcObj=dj_global;
ao.srcFunc=args[1];
ao.adviceObj=args[2];
ao.adviceFunc=args[3];
}else{
if((dl.isString(args[0]))&&(dl.isFunction(args[1]))&&(dl.isObject(args[2]))){
ao.adviceType=args[0];
ao.srcObj=dj_global;
var _23b=dl.nameAnonFunc(args[1],dj_global,_238);
ao.srcFunc=_23b;
ao.adviceObj=args[2];
ao.adviceFunc=args[3];
}else{
if((dl.isString(args[0]))&&(dl.isObject(args[1]))&&(dl.isString(args[2]))&&(dl.isFunction(args[3]))){
ao.srcObj=args[1];
ao.srcFunc=args[2];
var _23b=dl.nameAnonFunc(args[3],dj_global,_238);
ao.adviceObj=dj_global;
ao.adviceFunc=_23b;
}else{
if(dl.isObject(args[1])){
ao.srcObj=args[1];
ao.srcFunc=args[2];
ao.adviceObj=dj_global;
ao.adviceFunc=args[3];
}else{
if(dl.isObject(args[2])){
ao.srcObj=dj_global;
ao.srcFunc=args[1];
ao.adviceObj=args[2];
ao.adviceFunc=args[3];
}else{
ao.srcObj=ao.adviceObj=ao.aroundObj=dj_global;
ao.srcFunc=args[1];
ao.adviceFunc=args[2];
ao.aroundFunc=args[3];
}
}
}
}
}
}
break;
case 6:
ao.srcObj=args[1];
ao.srcFunc=args[2];
ao.adviceObj=args[3];
ao.adviceFunc=args[4];
ao.aroundFunc=args[5];
ao.aroundObj=dj_global;
break;
default:
ao.srcObj=args[1];
ao.srcFunc=args[2];
ao.adviceObj=args[3];
ao.adviceFunc=args[4];
ao.aroundObj=args[5];
ao.aroundFunc=args[6];
ao.once=args[7];
ao.delay=args[8];
ao.rate=args[9];
ao.adviceMsg=args[10];
break;
}
if(dl.isFunction(ao.aroundFunc)){
var _23b=dl.nameAnonFunc(ao.aroundFunc,ao.aroundObj,_238);
ao.aroundFunc=_23b;
}
if(dl.isFunction(ao.srcFunc)){
ao.srcFunc=dl.getNameInObj(ao.srcObj,ao.srcFunc);
}
if(dl.isFunction(ao.adviceFunc)){
ao.adviceFunc=dl.getNameInObj(ao.adviceObj,ao.adviceFunc);
}
if((ao.aroundObj)&&(dl.isFunction(ao.aroundFunc))){
ao.aroundFunc=dl.getNameInObj(ao.aroundObj,ao.aroundFunc);
}
if(!ao.srcObj){
dojo.raise("bad srcObj for srcFunc: "+ao.srcFunc);
}
if(!ao.adviceObj){
dojo.raise("bad adviceObj for adviceFunc: "+ao.adviceFunc);
}
if(!ao.adviceFunc){
dojo.debug("bad adviceFunc for srcFunc: "+ao.srcFunc);
dojo.debugShallow(ao);
}
return ao;
}
this.connect=function(){
if(arguments.length==1){
var ao=arguments[0];
}else{
var ao=interpolateArgs(arguments,true);
}
if(dojo.lang.isString(ao.srcFunc)&&(ao.srcFunc.toLowerCase()=="onkey")){
if(dojo.render.html.ie){
ao.srcFunc="onkeydown";
this.connect(ao);
}
ao.srcFunc="onkeypress";
}
if(dojo.lang.isArray(ao.srcObj)&&ao.srcObj!=""){
var _23d={};
for(var x in ao){
_23d[x]=ao[x];
}
var mjps=[];
dojo.lang.forEach(ao.srcObj,function(src){
if((dojo.render.html.capable)&&(dojo.lang.isString(src))){
src=dojo.byId(src);
}
_23d.srcObj=src;
mjps.push(dojo.event.connect.call(dojo.event,_23d));
});
return mjps;
}
var mjp=dojo.event.MethodJoinPoint.getForMethod(ao.srcObj,ao.srcFunc);
if(ao.adviceFunc){
var mjp2=dojo.event.MethodJoinPoint.getForMethod(ao.adviceObj,ao.adviceFunc);
}
mjp.kwAddAdvice(ao);
return mjp;
};
this.log=function(a1,a2){
var _245;
if((arguments.length==1)&&(typeof a1=="object")){
_245=a1;
}else{
_245={srcObj:a1,srcFunc:a2};
}
_245.adviceFunc=function(){
var _246=[];
for(var x=0;x<arguments.length;x++){
_246.push(arguments[x]);
}
dojo.debug("("+_245.srcObj+")."+_245.srcFunc,":",_246.join(", "));
};
this.kwConnect(_245);
};
this.connectBefore=function(){
var args=["before"];
for(var i=0;i<arguments.length;i++){
args.push(arguments[i]);
}
return this.connect.apply(this,args);
};
this.connectAround=function(){
var args=["around"];
for(var i=0;i<arguments.length;i++){
args.push(arguments[i]);
}
return this.connect.apply(this,args);
};
this.connectOnce=function(){
var ao=interpolateArgs(arguments,true);
ao.once=true;
return this.connect(ao);
};
this._kwConnectImpl=function(_24d,_24e){
var fn=(_24e)?"disconnect":"connect";
if(typeof _24d["srcFunc"]=="function"){
_24d.srcObj=_24d["srcObj"]||dj_global;
var _250=dojo.lang.nameAnonFunc(_24d.srcFunc,_24d.srcObj,true);
_24d.srcFunc=_250;
}
if(typeof _24d["adviceFunc"]=="function"){
_24d.adviceObj=_24d["adviceObj"]||dj_global;
var _250=dojo.lang.nameAnonFunc(_24d.adviceFunc,_24d.adviceObj,true);
_24d.adviceFunc=_250;
}
_24d.srcObj=_24d["srcObj"]||dj_global;
_24d.adviceObj=_24d["adviceObj"]||_24d["targetObj"]||dj_global;
_24d.adviceFunc=_24d["adviceFunc"]||_24d["targetFunc"];
return dojo.event[fn](_24d);
};
this.kwConnect=function(_251){
return this._kwConnectImpl(_251,false);
};
this.disconnect=function(){
if(arguments.length==1){
var ao=arguments[0];
}else{
var ao=interpolateArgs(arguments,true);
}
if(!ao.adviceFunc){
return;
}
if(dojo.lang.isString(ao.srcFunc)&&(ao.srcFunc.toLowerCase()=="onkey")){
if(dojo.render.html.ie){
ao.srcFunc="onkeydown";
this.disconnect(ao);
}
ao.srcFunc="onkeypress";
}
if(!ao.srcObj[ao.srcFunc]){
return null;
}
var mjp=dojo.event.MethodJoinPoint.getForMethod(ao.srcObj,ao.srcFunc,true);
mjp.removeAdvice(ao.adviceObj,ao.adviceFunc,ao.adviceType,ao.once);
return mjp;
};
this.kwDisconnect=function(_254){
return this._kwConnectImpl(_254,true);
};
};
dojo.event.MethodInvocation=function(_255,obj,args){
this.jp_=_255;
this.object=obj;
this.args=[];
for(var x=0;x<args.length;x++){
this.args[x]=args[x];
}
this.around_index=-1;
};
dojo.event.MethodInvocation.prototype.proceed=function(){
this.around_index++;
if(this.around_index>=this.jp_.around.length){
return this.jp_.object[this.jp_.methodname].apply(this.jp_.object,this.args);
}else{
var ti=this.jp_.around[this.around_index];
var mobj=ti[0]||dj_global;
var meth=ti[1];
return mobj[meth].call(mobj,this);
}
};
dojo.event.MethodJoinPoint=function(obj,_25d){
this.object=obj||dj_global;
this.methodname=_25d;
this.methodfunc=this.object[_25d];
this.squelch=false;
};
dojo.event.MethodJoinPoint.getForMethod=function(obj,_25f){
if(!obj){
obj=dj_global;
}
if(!obj[_25f]){
obj[_25f]=function(){
};
if(!obj[_25f]){
dojo.raise("Cannot set do-nothing method on that object "+_25f);
}
}else{
if((!dojo.lang.isFunction(obj[_25f]))&&(!dojo.lang.isAlien(obj[_25f]))){
return null;
}
}
var _260=_25f+"$joinpoint";
var _261=_25f+"$joinpoint$method";
var _262=obj[_260];
if(!_262){
var _263=false;
if(dojo.event["browser"]){
if((obj["attachEvent"])||(obj["nodeType"])||(obj["addEventListener"])){
_263=true;
dojo.event.browser.addClobberNodeAttrs(obj,[_260,_261,_25f]);
}
}
var _264=obj[_25f].length;
obj[_261]=obj[_25f];
_262=obj[_260]=new dojo.event.MethodJoinPoint(obj,_261);
obj[_25f]=function(){
var args=[];
if((_263)&&(!arguments.length)){
var evt=null;
try{
if(obj.ownerDocument){
evt=obj.ownerDocument.parentWindow.event;
}else{
if(obj.documentElement){
evt=obj.documentElement.ownerDocument.parentWindow.event;
}else{
if(obj.event){
evt=obj.event;
}else{
evt=window.event;
}
}
}
}
catch(e){
evt=window.event;
}
if(evt){
args.push(dojo.event.browser.fixEvent(evt,this));
}
}else{
for(var x=0;x<arguments.length;x++){
if((x==0)&&(_263)&&(dojo.event.browser.isEvent(arguments[x]))){
args.push(dojo.event.browser.fixEvent(arguments[x],this));
}else{
args.push(arguments[x]);
}
}
}
return _262.run.apply(_262,args);
};
obj[_25f].__preJoinArity=_264;
}
return _262;
};
dojo.lang.extend(dojo.event.MethodJoinPoint,{unintercept:function(){
this.object[this.methodname]=this.methodfunc;
this.before=[];
this.after=[];
this.around=[];
},disconnect:dojo.lang.forward("unintercept"),run:function(){
var obj=this.object||dj_global;
var args=arguments;
var _26a=[];
for(var x=0;x<args.length;x++){
_26a[x]=args[x];
}
var _26c=function(marr){
if(!marr){
dojo.debug("Null argument to unrollAdvice()");
return;
}
var _26e=marr[0]||dj_global;
var _26f=marr[1];
if(!_26e[_26f]){
dojo.raise("function \""+_26f+"\" does not exist on \""+_26e+"\"");
}
var _270=marr[2]||dj_global;
var _271=marr[3];
var msg=marr[6];
var _273;
var to={args:[],jp_:this,object:obj,proceed:function(){
return _26e[_26f].apply(_26e,to.args);
}};
to.args=_26a;
var _275=parseInt(marr[4]);
var _276=((!isNaN(_275))&&(marr[4]!==null)&&(typeof marr[4]!="undefined"));
if(marr[5]){
var rate=parseInt(marr[5]);
var cur=new Date();
var _279=false;
if((marr["last"])&&((cur-marr.last)<=rate)){
if(dojo.event._canTimeout){
if(marr["delayTimer"]){
clearTimeout(marr.delayTimer);
}
var tod=parseInt(rate*2);
var mcpy=dojo.lang.shallowCopy(marr);
marr.delayTimer=setTimeout(function(){
mcpy[5]=0;
_26c(mcpy);
},tod);
}
return;
}else{
marr.last=cur;
}
}
if(_271){
_270[_271].call(_270,to);
}else{
if((_276)&&((dojo.render.html)||(dojo.render.svg))){
dj_global["setTimeout"](function(){
if(msg){
_26e[_26f].call(_26e,to);
}else{
_26e[_26f].apply(_26e,args);
}
},_275);
}else{
if(msg){
_26e[_26f].call(_26e,to);
}else{
_26e[_26f].apply(_26e,args);
}
}
}
};
var _27c=function(){
if(this.squelch){
try{
return _26c.apply(this,arguments);
}
catch(e){
dojo.debug(e);
}
}else{
return _26c.apply(this,arguments);
}
};
if((this["before"])&&(this.before.length>0)){
dojo.lang.forEach(this.before.concat(new Array()),_27c);
}
var _27d;
try{
if((this["around"])&&(this.around.length>0)){
var mi=new dojo.event.MethodInvocation(this,obj,args);
_27d=mi.proceed();
}else{
if(this.methodfunc){
_27d=this.object[this.methodname].apply(this.object,args);
}
}
}
catch(e){
if(!this.squelch){
dojo.debug(e,"when calling",this.methodname,"on",this.object,"with arguments",args);
dojo.raise(e);
}
}
if((this["after"])&&(this.after.length>0)){
dojo.lang.forEach(this.after.concat(new Array()),_27c);
}
return (this.methodfunc)?_27d:null;
},getArr:function(kind){
var type="after";
if((typeof kind=="string")&&(kind.indexOf("before")!=-1)){
type="before";
}else{
if(kind=="around"){
type="around";
}
}
if(!this[type]){
this[type]=[];
}
return this[type];
},kwAddAdvice:function(args){
this.addAdvice(args["adviceObj"],args["adviceFunc"],args["aroundObj"],args["aroundFunc"],args["adviceType"],args["precedence"],args["once"],args["delay"],args["rate"],args["adviceMsg"]);
},addAdvice:function(_282,_283,_284,_285,_286,_287,once,_289,rate,_28b){
var arr=this.getArr(_286);
if(!arr){
dojo.raise("bad this: "+this);
}
var ao=[_282,_283,_284,_285,_289,rate,_28b];
if(once){
if(this.hasAdvice(_282,_283,_286,arr)>=0){
return;
}
}
if(_287=="first"){
arr.unshift(ao);
}else{
arr.push(ao);
}
},hasAdvice:function(_28e,_28f,_290,arr){
if(!arr){
arr=this.getArr(_290);
}
var ind=-1;
for(var x=0;x<arr.length;x++){
var aao=(typeof _28f=="object")?(new String(_28f)).toString():_28f;
var a1o=(typeof arr[x][1]=="object")?(new String(arr[x][1])).toString():arr[x][1];
if((arr[x][0]==_28e)&&(a1o==aao)){
ind=x;
}
}
return ind;
},removeAdvice:function(_296,_297,_298,once){
var arr=this.getArr(_298);
var ind=this.hasAdvice(_296,_297,_298,arr);
if(ind==-1){
return false;
}
while(ind!=-1){
arr.splice(ind,1);
if(once){
break;
}
ind=this.hasAdvice(_296,_297,_298,arr);
}
return true;
}});
dojo.provide("dojo.event.topic");
dojo.event.topic=new function(){
this.topics={};
this.getTopic=function(_29c){
if(!this.topics[_29c]){
this.topics[_29c]=new this.TopicImpl(_29c);
}
return this.topics[_29c];
};
this.registerPublisher=function(_29d,obj,_29f){
var _29d=this.getTopic(_29d);
_29d.registerPublisher(obj,_29f);
};
this.subscribe=function(_2a0,obj,_2a2){
var _2a0=this.getTopic(_2a0);
_2a0.subscribe(obj,_2a2);
};
this.unsubscribe=function(_2a3,obj,_2a5){
var _2a3=this.getTopic(_2a3);
_2a3.unsubscribe(obj,_2a5);
};
this.destroy=function(_2a6){
this.getTopic(_2a6).destroy();
delete this.topics[_2a6];
};
this.publishApply=function(_2a7,args){
var _2a7=this.getTopic(_2a7);
_2a7.sendMessage.apply(_2a7,args);
};
this.publish=function(_2a9,_2aa){
var _2a9=this.getTopic(_2a9);
var args=[];
for(var x=1;x<arguments.length;x++){
args.push(arguments[x]);
}
_2a9.sendMessage.apply(_2a9,args);
};
};
dojo.event.topic.TopicImpl=function(_2ad){
this.topicName=_2ad;
this.subscribe=function(_2ae,_2af){
var tf=_2af||_2ae;
var to=(!_2af)?dj_global:_2ae;
return dojo.event.kwConnect({srcObj:this,srcFunc:"sendMessage",adviceObj:to,adviceFunc:tf});
};
this.unsubscribe=function(_2b2,_2b3){
var tf=(!_2b3)?_2b2:_2b3;
var to=(!_2b3)?null:_2b2;
return dojo.event.kwDisconnect({srcObj:this,srcFunc:"sendMessage",adviceObj:to,adviceFunc:tf});
};
this._getJoinPoint=function(){
return dojo.event.MethodJoinPoint.getForMethod(this,"sendMessage");
};
this.setSquelch=function(_2b6){
this._getJoinPoint().squelch=_2b6;
};
this.destroy=function(){
this._getJoinPoint().disconnect();
};
this.registerPublisher=function(_2b7,_2b8){
dojo.event.connect(_2b7,_2b8,this,"sendMessage");
};
this.sendMessage=function(_2b9){
};
};
dojo.provide("dojo.event.browser");
dojo._ie_clobber=new function(){
this.clobberNodes=[];
function nukeProp(node,prop){
try{
node[prop]=null;
}
catch(e){
}
try{
delete node[prop];
}
catch(e){
}
try{
node.removeAttribute(prop);
}
catch(e){
}
}
this.clobber=function(_2bc){
var na;
var tna;
if(_2bc){
tna=_2bc.all||_2bc.getElementsByTagName("*");
na=[_2bc];
for(var x=0;x<tna.length;x++){
if(tna[x]["__doClobber__"]){
na.push(tna[x]);
}
}
}else{
try{
window.onload=null;
}
catch(e){
}
na=(this.clobberNodes.length)?this.clobberNodes:document.all;
}
tna=null;
var _2c0={};
for(var i=na.length-1;i>=0;i=i-1){
var el=na[i];
try{
if(el&&el["__clobberAttrs__"]){
for(var j=0;j<el.__clobberAttrs__.length;j++){
nukeProp(el,el.__clobberAttrs__[j]);
}
nukeProp(el,"__clobberAttrs__");
nukeProp(el,"__doClobber__");
}
}
catch(e){
}
}
na=null;
};
};
if(dojo.render.html.ie){
dojo.addOnUnload(function(){
dojo._ie_clobber.clobber();
try{
if((dojo["widget"])&&(dojo.widget["manager"])){
dojo.widget.manager.destroyAll();
}
}
catch(e){
}
if(dojo.widget){
for(var name in dojo.widget._templateCache){
if(dojo.widget._templateCache[name].node){
dojo.dom.destroyNode(dojo.widget._templateCache[name].node);
dojo.widget._templateCache[name].node=null;
delete dojo.widget._templateCache[name].node;
}
}
}
try{
window.onload=null;
}
catch(e){
}
try{
window.onunload=null;
}
catch(e){
}
dojo._ie_clobber.clobberNodes=[];
});
}
dojo.event.browser=new function(){
var _2c5=0;
this.normalizedEventName=function(_2c6){
switch(_2c6){
case "CheckboxStateChange":
case "DOMAttrModified":
case "DOMMenuItemActive":
case "DOMMenuItemInactive":
case "DOMMouseScroll":
case "DOMNodeInserted":
case "DOMNodeRemoved":
case "RadioStateChange":
return _2c6;
break;
default:
return _2c6.toLowerCase();
break;
}
};
this.clean=function(node){
if(dojo.render.html.ie){
dojo._ie_clobber.clobber(node);
}
};
this.addClobberNode=function(node){
if(!dojo.render.html.ie){
return;
}
if(!node["__doClobber__"]){
node.__doClobber__=true;
dojo._ie_clobber.clobberNodes.push(node);
node.__clobberAttrs__=[];
}
};
this.addClobberNodeAttrs=function(node,_2ca){
if(!dojo.render.html.ie){
return;
}
this.addClobberNode(node);
for(var x=0;x<_2ca.length;x++){
node.__clobberAttrs__.push(_2ca[x]);
}
};
this.removeListener=function(node,_2cd,fp,_2cf){
if(!_2cf){
var _2cf=false;
}
_2cd=dojo.event.browser.normalizedEventName(_2cd);
if((_2cd=="onkey")||(_2cd=="key")){
if(dojo.render.html.ie){
this.removeListener(node,"onkeydown",fp,_2cf);
}
_2cd="onkeypress";
}
if(_2cd.substr(0,2)=="on"){
_2cd=_2cd.substr(2);
}
if(node.removeEventListener){
node.removeEventListener(_2cd,fp,_2cf);
}
};
this.addListener=function(node,_2d1,fp,_2d3,_2d4){
if(!node){
return;
}
if(!_2d3){
var _2d3=false;
}
_2d1=dojo.event.browser.normalizedEventName(_2d1);
if((_2d1=="onkey")||(_2d1=="key")){
if(dojo.render.html.ie){
this.addListener(node,"onkeydown",fp,_2d3,_2d4);
}
_2d1="onkeypress";
}
if(_2d1.substr(0,2)!="on"){
_2d1="on"+_2d1;
}
if(!_2d4){
var _2d5=function(evt){
if(!evt){
evt=window.event;
}
var ret=fp(dojo.event.browser.fixEvent(evt,this));
if(_2d3){
dojo.event.browser.stopEvent(evt);
}
return ret;
};
}else{
_2d5=fp;
}
if(node.addEventListener){
node.addEventListener(_2d1.substr(2),_2d5,_2d3);
return _2d5;
}else{
if(typeof node[_2d1]=="function"){
var _2d8=node[_2d1];
node[_2d1]=function(e){
_2d8(e);
return _2d5(e);
};
}else{
node[_2d1]=_2d5;
}
if(dojo.render.html.ie){
this.addClobberNodeAttrs(node,[_2d1]);
}
return _2d5;
}
};
this.isEvent=function(obj){
return (typeof obj!="undefined")&&(obj)&&(typeof Event!="undefined")&&(obj.eventPhase);
};
this.currentEvent=null;
this.callListener=function(_2db,_2dc){
if(typeof _2db!="function"){
dojo.raise("listener not a function: "+_2db);
}
dojo.event.browser.currentEvent.currentTarget=_2dc;
return _2db.call(_2dc,dojo.event.browser.currentEvent);
};
this._stopPropagation=function(){
dojo.event.browser.currentEvent.cancelBubble=true;
};
this._preventDefault=function(){
dojo.event.browser.currentEvent.returnValue=false;
};
this.keys={KEY_BACKSPACE:8,KEY_TAB:9,KEY_CLEAR:12,KEY_ENTER:13,KEY_SHIFT:16,KEY_CTRL:17,KEY_ALT:18,KEY_PAUSE:19,KEY_CAPS_LOCK:20,KEY_ESCAPE:27,KEY_SPACE:32,KEY_PAGE_UP:33,KEY_PAGE_DOWN:34,KEY_END:35,KEY_HOME:36,KEY_LEFT_ARROW:37,KEY_UP_ARROW:38,KEY_RIGHT_ARROW:39,KEY_DOWN_ARROW:40,KEY_INSERT:45,KEY_DELETE:46,KEY_HELP:47,KEY_LEFT_WINDOW:91,KEY_RIGHT_WINDOW:92,KEY_SELECT:93,KEY_NUMPAD_0:96,KEY_NUMPAD_1:97,KEY_NUMPAD_2:98,KEY_NUMPAD_3:99,KEY_NUMPAD_4:100,KEY_NUMPAD_5:101,KEY_NUMPAD_6:102,KEY_NUMPAD_7:103,KEY_NUMPAD_8:104,KEY_NUMPAD_9:105,KEY_NUMPAD_MULTIPLY:106,KEY_NUMPAD_PLUS:107,KEY_NUMPAD_ENTER:108,KEY_NUMPAD_MINUS:109,KEY_NUMPAD_PERIOD:110,KEY_NUMPAD_DIVIDE:111,KEY_F1:112,KEY_F2:113,KEY_F3:114,KEY_F4:115,KEY_F5:116,KEY_F6:117,KEY_F7:118,KEY_F8:119,KEY_F9:120,KEY_F10:121,KEY_F11:122,KEY_F12:123,KEY_F13:124,KEY_F14:125,KEY_F15:126,KEY_NUM_LOCK:144,KEY_SCROLL_LOCK:145};
this.revKeys=[];
for(var key in this.keys){
this.revKeys[this.keys[key]]=key;
}
this.fixEvent=function(evt,_2df){
if(!evt){
if(window["event"]){
evt=window.event;
}
}
if((evt["type"])&&(evt["type"].indexOf("key")==0)){
evt.keys=this.revKeys;
for(var key in this.keys){
evt[key]=this.keys[key];
}
if(evt["type"]=="keydown"&&dojo.render.html.ie){
switch(evt.keyCode){
case evt.KEY_SHIFT:
case evt.KEY_CTRL:
case evt.KEY_ALT:
case evt.KEY_CAPS_LOCK:
case evt.KEY_LEFT_WINDOW:
case evt.KEY_RIGHT_WINDOW:
case evt.KEY_SELECT:
case evt.KEY_NUM_LOCK:
case evt.KEY_SCROLL_LOCK:
case evt.KEY_NUMPAD_0:
case evt.KEY_NUMPAD_1:
case evt.KEY_NUMPAD_2:
case evt.KEY_NUMPAD_3:
case evt.KEY_NUMPAD_4:
case evt.KEY_NUMPAD_5:
case evt.KEY_NUMPAD_6:
case evt.KEY_NUMPAD_7:
case evt.KEY_NUMPAD_8:
case evt.KEY_NUMPAD_9:
case evt.KEY_NUMPAD_PERIOD:
break;
case evt.KEY_NUMPAD_MULTIPLY:
case evt.KEY_NUMPAD_PLUS:
case evt.KEY_NUMPAD_ENTER:
case evt.KEY_NUMPAD_MINUS:
case evt.KEY_NUMPAD_DIVIDE:
break;
case evt.KEY_PAUSE:
case evt.KEY_TAB:
case evt.KEY_BACKSPACE:
case evt.KEY_ENTER:
case evt.KEY_ESCAPE:
case evt.KEY_PAGE_UP:
case evt.KEY_PAGE_DOWN:
case evt.KEY_END:
case evt.KEY_HOME:
case evt.KEY_LEFT_ARROW:
case evt.KEY_UP_ARROW:
case evt.KEY_RIGHT_ARROW:
case evt.KEY_DOWN_ARROW:
case evt.KEY_INSERT:
case evt.KEY_DELETE:
case evt.KEY_F1:
case evt.KEY_F2:
case evt.KEY_F3:
case evt.KEY_F4:
case evt.KEY_F5:
case evt.KEY_F6:
case evt.KEY_F7:
case evt.KEY_F8:
case evt.KEY_F9:
case evt.KEY_F10:
case evt.KEY_F11:
case evt.KEY_F12:
case evt.KEY_F12:
case evt.KEY_F13:
case evt.KEY_F14:
case evt.KEY_F15:
case evt.KEY_CLEAR:
case evt.KEY_HELP:
evt.key=evt.keyCode;
break;
default:
if(evt.ctrlKey||evt.altKey){
var _2e1=evt.keyCode;
if(_2e1>=65&&_2e1<=90&&evt.shiftKey==false){
_2e1+=32;
}
if(_2e1>=1&&_2e1<=26&&evt.ctrlKey){
_2e1+=96;
}
evt.key=String.fromCharCode(_2e1);
}
}
}else{
if(evt["type"]=="keypress"){
if(dojo.render.html.opera){
if(evt.which==0){
evt.key=evt.keyCode;
}else{
if(evt.which>0){
switch(evt.which){
case evt.KEY_SHIFT:
case evt.KEY_CTRL:
case evt.KEY_ALT:
case evt.KEY_CAPS_LOCK:
case evt.KEY_NUM_LOCK:
case evt.KEY_SCROLL_LOCK:
break;
case evt.KEY_PAUSE:
case evt.KEY_TAB:
case evt.KEY_BACKSPACE:
case evt.KEY_ENTER:
case evt.KEY_ESCAPE:
evt.key=evt.which;
break;
default:
var _2e1=evt.which;
if((evt.ctrlKey||evt.altKey||evt.metaKey)&&(evt.which>=65&&evt.which<=90&&evt.shiftKey==false)){
_2e1+=32;
}
evt.key=String.fromCharCode(_2e1);
}
}
}
}else{
if(dojo.render.html.ie){
if(!evt.ctrlKey&&!evt.altKey&&evt.keyCode>=evt.KEY_SPACE){
evt.key=String.fromCharCode(evt.keyCode);
}
}else{
if(dojo.render.html.safari){
switch(evt.keyCode){
case 25:
evt.key=evt.KEY_TAB;
evt.shift=true;
break;
case 63232:
evt.key=evt.KEY_UP_ARROW;
break;
case 63233:
evt.key=evt.KEY_DOWN_ARROW;
break;
case 63234:
evt.key=evt.KEY_LEFT_ARROW;
break;
case 63235:
evt.key=evt.KEY_RIGHT_ARROW;
break;
case 63236:
evt.key=evt.KEY_F1;
break;
case 63237:
evt.key=evt.KEY_F2;
break;
case 63238:
evt.key=evt.KEY_F3;
break;
case 63239:
evt.key=evt.KEY_F4;
break;
case 63240:
evt.key=evt.KEY_F5;
break;
case 63241:
evt.key=evt.KEY_F6;
break;
case 63242:
evt.key=evt.KEY_F7;
break;
case 63243:
evt.key=evt.KEY_F8;
break;
case 63244:
evt.key=evt.KEY_F9;
break;
case 63245:
evt.key=evt.KEY_F10;
break;
case 63246:
evt.key=evt.KEY_F11;
break;
case 63247:
evt.key=evt.KEY_F12;
break;
case 63250:
evt.key=evt.KEY_PAUSE;
break;
case 63272:
evt.key=evt.KEY_DELETE;
break;
case 63273:
evt.key=evt.KEY_HOME;
break;
case 63275:
evt.key=evt.KEY_END;
break;
case 63276:
evt.key=evt.KEY_PAGE_UP;
break;
case 63277:
evt.key=evt.KEY_PAGE_DOWN;
break;
case 63302:
evt.key=evt.KEY_INSERT;
break;
case 63248:
case 63249:
case 63289:
break;
default:
evt.key=evt.charCode>=evt.KEY_SPACE?String.fromCharCode(evt.charCode):evt.keyCode;
}
}else{
evt.key=evt.charCode>0?String.fromCharCode(evt.charCode):evt.keyCode;
}
}
}
}
}
}
if(dojo.render.html.ie){
if(!evt.target){
evt.target=evt.srcElement;
}
if(!evt.currentTarget){
evt.currentTarget=(_2df?_2df:evt.srcElement);
}
if(!evt.layerX){
evt.layerX=evt.offsetX;
}
if(!evt.layerY){
evt.layerY=evt.offsetY;
}
var doc=(evt.srcElement&&evt.srcElement.ownerDocument)?evt.srcElement.ownerDocument:document;
var _2e3=((dojo.render.html.ie55)||(doc["compatMode"]=="BackCompat"))?doc.body:doc.documentElement;
if(!evt.pageX){
evt.pageX=evt.clientX+(_2e3.scrollLeft||0);
}
if(!evt.pageY){
evt.pageY=evt.clientY+(_2e3.scrollTop||0);
}
if(evt.type=="mouseover"){
evt.relatedTarget=evt.fromElement;
}
if(evt.type=="mouseout"){
evt.relatedTarget=evt.toElement;
}
this.currentEvent=evt;
evt.callListener=this.callListener;
evt.stopPropagation=this._stopPropagation;
evt.preventDefault=this._preventDefault;
}
return evt;
};
this.stopEvent=function(evt){
if(window.event){
evt.cancelBubble=true;
evt.returnValue=false;
}else{
evt.preventDefault();
evt.stopPropagation();
}
};
};
dojo.provide("dojo.event.*");
dojo.provide("dojo.widget.Manager");
dojo.widget.manager=new function(){
this.widgets=[];
this.widgetIds=[];
this.topWidgets={};
var _2e5={};
var _2e6=[];
this.getUniqueId=function(_2e7){
var _2e8;
do{
_2e8=_2e7+"_"+(_2e5[_2e7]!=undefined?++_2e5[_2e7]:_2e5[_2e7]=0);
}while(this.getWidgetById(_2e8));
return _2e8;
};
this.add=function(_2e9){
this.widgets.push(_2e9);
if(!_2e9.extraArgs["id"]){
_2e9.extraArgs["id"]=_2e9.extraArgs["ID"];
}
if(_2e9.widgetId==""){
if(_2e9["id"]){
_2e9.widgetId=_2e9["id"];
}else{
if(_2e9.extraArgs["id"]){
_2e9.widgetId=_2e9.extraArgs["id"];
}else{
_2e9.widgetId=this.getUniqueId(_2e9.ns+"_"+_2e9.widgetType);
}
}
}
if(this.widgetIds[_2e9.widgetId]){
dojo.debug("widget ID collision on ID: "+_2e9.widgetId);
}
this.widgetIds[_2e9.widgetId]=_2e9;
};
this.destroyAll=function(){
for(var x=this.widgets.length-1;x>=0;x--){
try{
this.widgets[x].destroy(true);
delete this.widgets[x];
}
catch(e){
}
}
};
this.remove=function(_2eb){
if(dojo.lang.isNumber(_2eb)){
var tw=this.widgets[_2eb].widgetId;
delete this.widgetIds[tw];
this.widgets.splice(_2eb,1);
}else{
this.removeById(_2eb);
}
};
this.removeById=function(id){
if(!dojo.lang.isString(id)){
id=id["widgetId"];
if(!id){
dojo.debug("invalid widget or id passed to removeById");
return;
}
}
for(var i=0;i<this.widgets.length;i++){
if(this.widgets[i].widgetId==id){
this.remove(i);
break;
}
}
};
this.getWidgetById=function(id){
if(dojo.lang.isString(id)){
return this.widgetIds[id];
}
return id;
};
this.getWidgetsByType=function(type){
var lt=type.toLowerCase();
var _2f2=(type.indexOf(":")<0?function(x){
return x.widgetType.toLowerCase();
}:function(x){
return x.getNamespacedType();
});
var ret=[];
dojo.lang.forEach(this.widgets,function(x){
if(_2f2(x)==lt){
ret.push(x);
}
});
return ret;
};
this.getWidgetsByFilter=function(_2f7,_2f8){
var ret=[];
dojo.lang.every(this.widgets,function(x){
if(_2f7(x)){
ret.push(x);
if(_2f8){
return false;
}
}
return true;
});
return (_2f8?ret[0]:ret);
};
this.getAllWidgets=function(){
return this.widgets.concat();
};
this.getWidgetByNode=function(node){
var w=this.getAllWidgets();
node=dojo.byId(node);
for(var i=0;i<w.length;i++){
if(w[i].domNode==node){
return w[i];
}
}
return null;
};
this.byId=this.getWidgetById;
this.byType=this.getWidgetsByType;
this.byFilter=this.getWidgetsByFilter;
this.byNode=this.getWidgetByNode;
var _2fe={};
var _2ff=["dojo.widget"];
for(var i=0;i<_2ff.length;i++){
_2ff[_2ff[i]]=true;
}
this.registerWidgetPackage=function(_301){
if(!_2ff[_301]){
_2ff[_301]=true;
_2ff.push(_301);
}
};
this.getWidgetPackageList=function(){
return dojo.lang.map(_2ff,function(elt){
return (elt!==true?elt:undefined);
});
};
this.getImplementation=function(_303,_304,_305,ns){
var impl=this.getImplementationName(_303,ns);
if(impl){
var ret=_304?new impl(_304):new impl();
return ret;
}
};
function buildPrefixCache(){
for(var _309 in dojo.render){
if(dojo.render[_309]["capable"]===true){
var _30a=dojo.render[_309].prefixes;
for(var i=0;i<_30a.length;i++){
_2e6.push(_30a[i].toLowerCase());
}
}
}
}
var _30c=function(_30d,_30e){
if(!_30e){
return null;
}
for(var i=0,l=_2e6.length,_311;i<=l;i++){
_311=(i<l?_30e[_2e6[i]]:_30e);
if(!_311){
continue;
}
for(var name in _311){
if(name.toLowerCase()==_30d){
return _311[name];
}
}
}
return null;
};
var _313=function(_314,_315){
var _316=dojo.evalObjPath(_315,false);
return (_316?_30c(_314,_316):null);
};
this.getImplementationName=function(_317,ns){
var _319=_317.toLowerCase();
ns=ns||"dojo";
var imps=_2fe[ns]||(_2fe[ns]={});
var impl=imps[_319];
if(impl){
return impl;
}
if(!_2e6.length){
buildPrefixCache();
}
var _31c=dojo.ns.get(ns);
if(!_31c){
dojo.ns.register(ns,ns+".widget");
_31c=dojo.ns.get(ns);
}
if(_31c){
_31c.resolve(_317);
}
impl=_313(_319,_31c.module);
if(impl){
return (imps[_319]=impl);
}
_31c=dojo.ns.require(ns);
if((_31c)&&(_31c.resolver)){
_31c.resolve(_317);
impl=_313(_319,_31c.module);
if(impl){
return (imps[_319]=impl);
}
}
dojo.deprecated("dojo.widget.Manager.getImplementationName","Could not locate widget implementation for \""+_317+"\" in \""+_31c.module+"\" registered to namespace \""+_31c.name+"\". "+"Developers must specify correct namespaces for all non-Dojo widgets","0.5");
for(var i=0;i<_2ff.length;i++){
impl=_313(_319,_2ff[i]);
if(impl){
return (imps[_319]=impl);
}
}
throw new Error("Could not locate widget implementation for \""+_317+"\" in \""+_31c.module+"\" registered to namespace \""+_31c.name+"\"");
};
this.resizing=false;
this.onWindowResized=function(){
if(this.resizing){
return;
}
try{
this.resizing=true;
for(var id in this.topWidgets){
var _31f=this.topWidgets[id];
if(_31f.checkSize){
_31f.checkSize();
}
}
}
catch(e){
}
finally{
this.resizing=false;
}
};
if(typeof window!="undefined"){
dojo.addOnLoad(this,"onWindowResized");
dojo.event.connect(window,"onresize",this,"onWindowResized");
}
};
(function(){
var dw=dojo.widget;
var dwm=dw.manager;
var h=dojo.lang.curry(dojo.lang,"hitch",dwm);
var g=function(_324,_325){
dw[(_325||_324)]=h(_324);
};
g("add","addWidget");
g("destroyAll","destroyAllWidgets");
g("remove","removeWidget");
g("removeById","removeWidgetById");
g("getWidgetById");
g("getWidgetById","byId");
g("getWidgetsByType");
g("getWidgetsByFilter");
g("getWidgetsByType","byType");
g("getWidgetsByFilter","byFilter");
g("getWidgetByNode","byNode");
dw.all=function(n){
var _327=dwm.getAllWidgets.apply(dwm,arguments);
if(arguments.length>0){
return _327[n];
}
return _327;
};
g("registerWidgetPackage");
g("getImplementation","getWidgetImplementation");
g("getImplementationName","getWidgetImplementationName");
dw.widgets=dwm.widgets;
dw.widgetIds=dwm.widgetIds;
dw.root=dwm.root;
})();
dojo.provide("dojo.uri.Uri");
dojo.uri=new function(){
this.dojoUri=function(uri){
return new dojo.uri.Uri(dojo.hostenv.getBaseScriptUri(),uri);
};
this.moduleUri=function(_329,uri){
var loc=dojo.hostenv.getModuleSymbols(_329).join("/");
if(!loc){
return null;
}
if(loc.lastIndexOf("/")!=loc.length-1){
loc+="/";
}
return new dojo.uri.Uri(dojo.hostenv.getBaseScriptUri()+loc,uri);
};
this.Uri=function(){
var uri=arguments[0];
for(var i=1;i<arguments.length;i++){
if(!arguments[i]){
continue;
}
var _32e=new dojo.uri.Uri(arguments[i].toString());
var _32f=new dojo.uri.Uri(uri.toString());
if((_32e.path=="")&&(_32e.scheme==null)&&(_32e.authority==null)&&(_32e.query==null)){
if(_32e.fragment!=null){
_32f.fragment=_32e.fragment;
}
_32e=_32f;
}else{
if(_32e.scheme==null){
_32e.scheme=_32f.scheme;
if(_32e.authority==null){
_32e.authority=_32f.authority;
if(_32e.path.charAt(0)!="/"){
var path=_32f.path.substring(0,_32f.path.lastIndexOf("/")+1)+_32e.path;
var segs=path.split("/");
for(var j=0;j<segs.length;j++){
if(segs[j]=="."){
if(j==segs.length-1){
segs[j]="";
}else{
segs.splice(j,1);
j--;
}
}else{
if(j>0&&!(j==1&&segs[0]=="")&&segs[j]==".."&&segs[j-1]!=".."){
if(j==segs.length-1){
segs.splice(j,1);
segs[j-1]="";
}else{
segs.splice(j-1,2);
j-=2;
}
}
}
}
_32e.path=segs.join("/");
}
}
}
}
uri="";
if(_32e.scheme!=null){
uri+=_32e.scheme+":";
}
if(_32e.authority!=null){
uri+="//"+_32e.authority;
}
uri+=_32e.path;
if(_32e.query!=null){
uri+="?"+_32e.query;
}
if(_32e.fragment!=null){
uri+="#"+_32e.fragment;
}
}
this.uri=uri.toString();
var _333="^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$";
var r=this.uri.match(new RegExp(_333));
this.scheme=r[2]||(r[1]?"":null);
this.authority=r[4]||(r[3]?"":null);
this.path=r[5];
this.query=r[7]||(r[6]?"":null);
this.fragment=r[9]||(r[8]?"":null);
if(this.authority!=null){
_333="^((([^:]+:)?([^@]+))@)?([^:]*)(:([0-9]+))?$";
r=this.authority.match(new RegExp(_333));
this.user=r[3]||null;
this.password=r[4]||null;
this.host=r[5];
this.port=r[7]||null;
}
this.toString=function(){
return this.uri;
};
};
};
dojo.provide("dojo.uri.*");
dojo.provide("dojo.html.common");
dojo.lang.mixin(dojo.html,dojo.dom);
dojo.html.body=function(){
dojo.deprecated("dojo.html.body() moved to dojo.body()","0.5");
return dojo.body();
};
dojo.html.getEventTarget=function(evt){
if(!evt){
evt=dojo.global().event||{};
}
var t=(evt.srcElement?evt.srcElement:(evt.target?evt.target:null));
while((t)&&(t.nodeType!=1)){
t=t.parentNode;
}
return t;
};
dojo.html.getViewport=function(){
var _337=dojo.global();
var _338=dojo.doc();
var w=0;
var h=0;
if(dojo.render.html.mozilla){
w=_338.documentElement.clientWidth;
h=_337.innerHeight;
}else{
if(!dojo.render.html.opera&&_337.innerWidth){
w=_337.innerWidth;
h=_337.innerHeight;
}else{
if(!dojo.render.html.opera&&dojo.exists(_338,"documentElement.clientWidth")){
var w2=_338.documentElement.clientWidth;
if(!w||w2&&w2<w){
w=w2;
}
h=_338.documentElement.clientHeight;
}else{
if(dojo.body().clientWidth){
w=dojo.body().clientWidth;
h=dojo.body().clientHeight;
}
}
}
}
return {width:w,height:h};
};
dojo.html.getScroll=function(){
var _33c=dojo.global();
var _33d=dojo.doc();
var top=_33c.pageYOffset||_33d.documentElement.scrollTop||dojo.body().scrollTop||0;
var left=_33c.pageXOffset||_33d.documentElement.scrollLeft||dojo.body().scrollLeft||0;
return {top:top,left:left,offset:{x:left,y:top}};
};
dojo.html.getParentByType=function(node,type){
var _342=dojo.doc();
var _343=dojo.byId(node);
type=type.toLowerCase();
while((_343)&&(_343.nodeName.toLowerCase()!=type)){
if(_343==(_342["body"]||_342["documentElement"])){
return null;
}
_343=_343.parentNode;
}
return _343;
};
dojo.html.getAttribute=function(node,attr){
node=dojo.byId(node);
if((!node)||(!node.getAttribute)){
return null;
}
var ta=typeof attr=="string"?attr:new String(attr);
var v=node.getAttribute(ta.toUpperCase());
if((v)&&(typeof v=="string")&&(v!="")){
return v;
}
if(v&&v.value){
return v.value;
}
if((node.getAttributeNode)&&(node.getAttributeNode(ta))){
return (node.getAttributeNode(ta)).value;
}else{
if(node.getAttribute(ta)){
return node.getAttribute(ta);
}else{
if(node.getAttribute(ta.toLowerCase())){
return node.getAttribute(ta.toLowerCase());
}
}
}
return null;
};
dojo.html.hasAttribute=function(node,attr){
return dojo.html.getAttribute(dojo.byId(node),attr)?true:false;
};
dojo.html.getCursorPosition=function(e){
e=e||dojo.global().event;
var _34b={x:0,y:0};
if(e.pageX||e.pageY){
_34b.x=e.pageX;
_34b.y=e.pageY;
}else{
var de=dojo.doc().documentElement;
var db=dojo.body();
_34b.x=e.clientX+((de||db)["scrollLeft"])-((de||db)["clientLeft"]);
_34b.y=e.clientY+((de||db)["scrollTop"])-((de||db)["clientTop"]);
}
return _34b;
};
dojo.html.isTag=function(node){
node=dojo.byId(node);
if(node&&node.tagName){
for(var i=1;i<arguments.length;i++){
if(node.tagName.toLowerCase()==String(arguments[i]).toLowerCase()){
return String(arguments[i]).toLowerCase();
}
}
}
return "";
};
if(dojo.render.html.ie&&!dojo.render.html.ie70){
if(window.location.href.substr(0,6).toLowerCase()!="https:"){
(function(){
var _350=dojo.doc().createElement("script");
_350.src="javascript:'dojo.html.createExternalElement=function(doc, tag){ return doc.createElement(tag); }'";
dojo.doc().getElementsByTagName("head")[0].appendChild(_350);
})();
}
}else{
dojo.html.createExternalElement=function(doc,tag){
return doc.createElement(tag);
};
}
dojo.html._callDeprecated=function(_353,_354,args,_356,_357){
dojo.deprecated("dojo.html."+_353,"replaced by dojo.html."+_354+"("+(_356?"node, {"+_356+": "+_356+"}":"")+")"+(_357?"."+_357:""),"0.5");
var _358=[];
if(_356){
var _359={};
_359[_356]=args[1];
_358.push(args[0]);
_358.push(_359);
}else{
_358=args;
}
var ret=dojo.html[_354].apply(dojo.html,args);
if(_357){
return ret[_357];
}else{
return ret;
}
};
dojo.html.getViewportWidth=function(){
return dojo.html._callDeprecated("getViewportWidth","getViewport",arguments,null,"width");
};
dojo.html.getViewportHeight=function(){
return dojo.html._callDeprecated("getViewportHeight","getViewport",arguments,null,"height");
};
dojo.html.getViewportSize=function(){
return dojo.html._callDeprecated("getViewportSize","getViewport",arguments);
};
dojo.html.getScrollTop=function(){
return dojo.html._callDeprecated("getScrollTop","getScroll",arguments,null,"top");
};
dojo.html.getScrollLeft=function(){
return dojo.html._callDeprecated("getScrollLeft","getScroll",arguments,null,"left");
};
dojo.html.getScrollOffset=function(){
return dojo.html._callDeprecated("getScrollOffset","getScroll",arguments,null,"offset");
};
dojo.provide("dojo.a11y");
dojo.a11y={imgPath:dojo.uri.dojoUri("src/widget/templates/images"),doAccessibleCheck:true,accessible:null,checkAccessible:function(){
if(this.accessible===null){
this.accessible=false;
if(this.doAccessibleCheck==true){
this.accessible=this.testAccessible();
}
}
return this.accessible;
},testAccessible:function(){
this.accessible=false;
if(dojo.render.html.ie||dojo.render.html.mozilla){
var div=document.createElement("div");
div.style.backgroundImage="url(\""+this.imgPath+"/tab_close.gif\")";
dojo.body().appendChild(div);
var _35c=null;
if(window.getComputedStyle){
var _35d=getComputedStyle(div,"");
_35c=_35d.getPropertyValue("background-image");
}else{
_35c=div.currentStyle.backgroundImage;
}
var _35e=false;
if(_35c!=null&&(_35c=="none"||_35c=="url(invalid-url:)")){
this.accessible=true;
}
dojo.body().removeChild(div);
}
return this.accessible;
},setCheckAccessible:function(_35f){
this.doAccessibleCheck=_35f;
},setAccessibleMode:function(){
if(this.accessible===null){
if(this.checkAccessible()){
dojo.render.html.prefixes.unshift("a11y");
}
}
return this.accessible;
}};
dojo.provide("dojo.widget.Widget");
dojo.declare("dojo.widget.Widget",null,function(){
this.children=[];
this.extraArgs={};
},{parent:null,isTopLevel:false,disabled:false,isContainer:false,widgetId:"",widgetType:"Widget",ns:"dojo",getNamespacedType:function(){
return (this.ns?this.ns+":"+this.widgetType:this.widgetType).toLowerCase();
},toString:function(){
return "[Widget "+this.getNamespacedType()+", "+(this.widgetId||"NO ID")+"]";
},repr:function(){
return this.toString();
},enable:function(){
this.disabled=false;
},disable:function(){
this.disabled=true;
},onResized:function(){
this.notifyChildrenOfResize();
},notifyChildrenOfResize:function(){
for(var i=0;i<this.children.length;i++){
var _361=this.children[i];
if(_361.onResized){
_361.onResized();
}
}
},create:function(args,_363,_364,ns){
if(ns){
this.ns=ns;
}
this.satisfyPropertySets(args,_363,_364);
this.mixInProperties(args,_363,_364);
this.postMixInProperties(args,_363,_364);
dojo.widget.manager.add(this);
this.buildRendering(args,_363,_364);
this.initialize(args,_363,_364);
this.postInitialize(args,_363,_364);
this.postCreate(args,_363,_364);
return this;
},destroy:function(_366){
if(this.parent){
this.parent.removeChild(this);
}
this.destroyChildren();
this.uninitialize();
this.destroyRendering(_366);
dojo.widget.manager.removeById(this.widgetId);
},destroyChildren:function(){
var _367;
var i=0;
while(this.children.length>i){
_367=this.children[i];
if(_367 instanceof dojo.widget.Widget){
this.removeChild(_367);
_367.destroy();
continue;
}
i++;
}
},getChildrenOfType:function(type,_36a){
var ret=[];
var _36c=dojo.lang.isFunction(type);
if(!_36c){
type=type.toLowerCase();
}
for(var x=0;x<this.children.length;x++){
if(_36c){
if(this.children[x] instanceof type){
ret.push(this.children[x]);
}
}else{
if(this.children[x].widgetType.toLowerCase()==type){
ret.push(this.children[x]);
}
}
if(_36a){
ret=ret.concat(this.children[x].getChildrenOfType(type,_36a));
}
}
return ret;
},getDescendants:function(){
var _36e=[];
var _36f=[this];
var elem;
while((elem=_36f.pop())){
_36e.push(elem);
if(elem.children){
dojo.lang.forEach(elem.children,function(elem){
_36f.push(elem);
});
}
}
return _36e;
},isFirstChild:function(){
return this===this.parent.children[0];
},isLastChild:function(){
return this===this.parent.children[this.parent.children.length-1];
},satisfyPropertySets:function(args){
return args;
},mixInProperties:function(args,frag){
if((args["fastMixIn"])||(frag["fastMixIn"])){
for(var x in args){
this[x]=args[x];
}
return;
}
var _376;
var _377=dojo.widget.lcArgsCache[this.widgetType];
if(_377==null){
_377={};
for(var y in this){
_377[((new String(y)).toLowerCase())]=y;
}
dojo.widget.lcArgsCache[this.widgetType]=_377;
}
var _379={};
for(var x in args){
if(!this[x]){
var y=_377[(new String(x)).toLowerCase()];
if(y){
args[y]=args[x];
x=y;
}
}
if(_379[x]){
continue;
}
_379[x]=true;
if((typeof this[x])!=(typeof _376)){
if(typeof args[x]!="string"){
this[x]=args[x];
}else{
if(dojo.lang.isString(this[x])){
this[x]=args[x];
}else{
if(dojo.lang.isNumber(this[x])){
this[x]=new Number(args[x]);
}else{
if(dojo.lang.isBoolean(this[x])){
this[x]=(args[x].toLowerCase()=="false")?false:true;
}else{
if(dojo.lang.isFunction(this[x])){
if(args[x].search(/[^\w\.]+/i)==-1){
this[x]=dojo.evalObjPath(args[x],false);
}else{
var tn=dojo.lang.nameAnonFunc(new Function(args[x]),this);
dojo.event.kwConnect({srcObj:this,srcFunc:x,adviceObj:this,adviceFunc:tn});
}
}else{
if(dojo.lang.isArray(this[x])){
this[x]=args[x].split(";");
}else{
if(this[x] instanceof Date){
this[x]=new Date(Number(args[x]));
}else{
if(typeof this[x]=="object"){
if(this[x] instanceof dojo.uri.Uri){
this[x]=dojo.uri.dojoUri(args[x]);
}else{
var _37b=args[x].split(";");
for(var y=0;y<_37b.length;y++){
var si=_37b[y].indexOf(":");
if((si!=-1)&&(_37b[y].length>si)){
this[x][_37b[y].substr(0,si).replace(/^\s+|\s+$/g,"")]=_37b[y].substr(si+1);
}
}
}
}else{
this[x]=args[x];
}
}
}
}
}
}
}
}
}else{
this.extraArgs[x.toLowerCase()]=args[x];
}
}
},postMixInProperties:function(args,frag,_37f){
},initialize:function(args,frag,_382){
return false;
},postInitialize:function(args,frag,_385){
return false;
},postCreate:function(args,frag,_388){
return false;
},uninitialize:function(){
return false;
},buildRendering:function(args,frag,_38b){
dojo.unimplemented("dojo.widget.Widget.buildRendering, on "+this.toString()+", ");
return false;
},destroyRendering:function(){
dojo.unimplemented("dojo.widget.Widget.destroyRendering");
return false;
},addedTo:function(_38c){
},addChild:function(_38d){
dojo.unimplemented("dojo.widget.Widget.addChild");
return false;
},removeChild:function(_38e){
for(var x=0;x<this.children.length;x++){
if(this.children[x]===_38e){
this.children.splice(x,1);
_38e.parent=null;
break;
}
}
return _38e;
},getPreviousSibling:function(){
var idx=this.getParentIndex();
if(idx<=0){
return null;
}
return this.parent.children[idx-1];
},getSiblings:function(){
return this.parent.children;
},getParentIndex:function(){
return dojo.lang.indexOf(this.parent.children,this,true);
},getNextSibling:function(){
var idx=this.getParentIndex();
if(idx==this.parent.children.length-1){
return null;
}
if(idx<0){
return null;
}
return this.parent.children[idx+1];
}});
dojo.widget.lcArgsCache={};
dojo.widget.tags={};
dojo.widget.tags.addParseTreeHandler=function(type){
dojo.deprecated("addParseTreeHandler",". ParseTreeHandlers are now reserved for components. Any unfiltered DojoML tag without a ParseTreeHandler is assumed to be a widget","0.5");
};
dojo.widget.tags["dojo:propertyset"]=function(_393,_394,_395){
var _396=_394.parseProperties(_393["dojo:propertyset"]);
};
dojo.widget.tags["dojo:connect"]=function(_397,_398,_399){
var _39a=_398.parseProperties(_397["dojo:connect"]);
};
dojo.widget.buildWidgetFromParseTree=function(type,frag,_39d,_39e,_39f,_3a0){
dojo.a11y.setAccessibleMode();
var _3a1=type.split(":");
_3a1=(_3a1.length==2)?_3a1[1]:type;
var _3a2=_3a0||_39d.parseProperties(frag[frag["ns"]+":"+_3a1]);
var _3a3=dojo.widget.manager.getImplementation(_3a1,null,null,frag["ns"]);
if(!_3a3){
throw new Error("cannot find \""+type+"\" widget");
}else{
if(!_3a3.create){
throw new Error("\""+type+"\" widget object has no \"create\" method and does not appear to implement *Widget");
}
}
_3a2["dojoinsertionindex"]=_39f;
var ret=_3a3.create(_3a2,frag,_39e,frag["ns"]);
return ret;
};
dojo.widget.defineWidget=function(_3a5,_3a6,_3a7,init,_3a9){
if(dojo.lang.isString(arguments[3])){
dojo.widget._defineWidget(arguments[0],arguments[3],arguments[1],arguments[4],arguments[2]);
}else{
var args=[arguments[0]],p=3;
if(dojo.lang.isString(arguments[1])){
args.push(arguments[1],arguments[2]);
}else{
args.push("",arguments[1]);
p=2;
}
if(dojo.lang.isFunction(arguments[p])){
args.push(arguments[p],arguments[p+1]);
}else{
args.push(null,arguments[p]);
}
dojo.widget._defineWidget.apply(this,args);
}
};
dojo.widget.defineWidget.renderers="html|svg|vml";
dojo.widget._defineWidget=function(_3ac,_3ad,_3ae,init,_3b0){
var _3b1=_3ac.split(".");
var type=_3b1.pop();
var regx="\\.("+(_3ad?_3ad+"|":"")+dojo.widget.defineWidget.renderers+")\\.";
var r=_3ac.search(new RegExp(regx));
_3b1=(r<0?_3b1.join("."):_3ac.substr(0,r));
dojo.widget.manager.registerWidgetPackage(_3b1);
var pos=_3b1.indexOf(".");
var _3b6=(pos>-1)?_3b1.substring(0,pos):_3b1;
_3b0=(_3b0)||{};
_3b0.widgetType=type;
if((!init)&&(_3b0["classConstructor"])){
init=_3b0.classConstructor;
delete _3b0.classConstructor;
}
dojo.declare(_3ac,_3ae,init,_3b0);
};
dojo.provide("dojo.widget.Parse");
dojo.widget.Parse=function(_3b7){
this.propertySetsList=[];
this.fragment=_3b7;
this.createComponents=function(frag,_3b9){
var _3ba=[];
var _3bb=false;
try{
if(frag&&frag.tagName&&(frag!=frag.nodeRef)){
var _3bc=dojo.widget.tags;
var tna=String(frag.tagName).split(";");
for(var x=0;x<tna.length;x++){
var ltn=tna[x].replace(/^\s+|\s+$/g,"").toLowerCase();
frag.tagName=ltn;
var ret;
if(_3bc[ltn]){
_3bb=true;
ret=_3bc[ltn](frag,this,_3b9,frag.index);
_3ba.push(ret);
}else{
if(ltn.indexOf(":")==-1){
ltn="dojo:"+ltn;
}
ret=dojo.widget.buildWidgetFromParseTree(ltn,frag,this,_3b9,frag.index);
if(ret){
_3bb=true;
_3ba.push(ret);
}
}
}
}
}
catch(e){
dojo.debug("dojo.widget.Parse: error:",e);
}
if(!_3bb){
_3ba=_3ba.concat(this.createSubComponents(frag,_3b9));
}
return _3ba;
};
this.createSubComponents=function(_3c1,_3c2){
var frag,_3c4=[];
for(var item in _3c1){
frag=_3c1[item];
if(frag&&typeof frag=="object"&&(frag!=_3c1.nodeRef)&&(frag!=_3c1.tagName)&&(!dojo.dom.isNode(frag))){
_3c4=_3c4.concat(this.createComponents(frag,_3c2));
}
}
return _3c4;
};
this.parsePropertySets=function(_3c6){
return [];
};
this.parseProperties=function(_3c7){
var _3c8={};
for(var item in _3c7){
if((_3c7[item]==_3c7.tagName)||(_3c7[item]==_3c7.nodeRef)){
}else{
var frag=_3c7[item];
if(frag.tagName&&dojo.widget.tags[frag.tagName.toLowerCase()]){
}else{
if(frag[0]&&frag[0].value!=""&&frag[0].value!=null){
try{
if(item.toLowerCase()=="dataprovider"){
var _3cb=this;
this.getDataProvider(_3cb,frag[0].value);
_3c8.dataProvider=this.dataProvider;
}
_3c8[item]=frag[0].value;
var _3cc=this.parseProperties(frag);
for(var _3cd in _3cc){
_3c8[_3cd]=_3cc[_3cd];
}
}
catch(e){
dojo.debug(e);
}
}
}
switch(item.toLowerCase()){
case "checked":
case "disabled":
if(typeof _3c8[item]!="boolean"){
_3c8[item]=true;
}
break;
}
}
}
return _3c8;
};
this.getDataProvider=function(_3ce,_3cf){
dojo.io.bind({url:_3cf,load:function(type,_3d1){
if(type=="load"){
_3ce.dataProvider=_3d1;
}
},mimetype:"text/javascript",sync:true});
};
this.getPropertySetById=function(_3d2){
for(var x=0;x<this.propertySetsList.length;x++){
if(_3d2==this.propertySetsList[x]["id"][0].value){
return this.propertySetsList[x];
}
}
return "";
};
this.getPropertySetsByType=function(_3d4){
var _3d5=[];
for(var x=0;x<this.propertySetsList.length;x++){
var cpl=this.propertySetsList[x];
var cpcc=cpl.componentClass||cpl.componentType||null;
var _3d9=this.propertySetsList[x]["id"][0].value;
if(cpcc&&(_3d9==cpcc[0].value)){
_3d5.push(cpl);
}
}
return _3d5;
};
this.getPropertySets=function(_3da){
var ppl="dojo:propertyproviderlist";
var _3dc=[];
var _3dd=_3da.tagName;
if(_3da[ppl]){
var _3de=_3da[ppl].value.split(" ");
for(var _3df in _3de){
if((_3df.indexOf("..")==-1)&&(_3df.indexOf("://")==-1)){
var _3e0=this.getPropertySetById(_3df);
if(_3e0!=""){
_3dc.push(_3e0);
}
}else{
}
}
}
return this.getPropertySetsByType(_3dd).concat(_3dc);
};
this.createComponentFromScript=function(_3e1,_3e2,_3e3,ns){
_3e3.fastMixIn=true;
var ltn=(ns||"dojo")+":"+_3e2.toLowerCase();
if(dojo.widget.tags[ltn]){
return [dojo.widget.tags[ltn](_3e3,this,null,null,_3e3)];
}
return [dojo.widget.buildWidgetFromParseTree(ltn,_3e3,this,null,null,_3e3)];
};
};
dojo.widget._parser_collection={"dojo":new dojo.widget.Parse()};
dojo.widget.getParser=function(name){
if(!name){
name="dojo";
}
if(!this._parser_collection[name]){
this._parser_collection[name]=new dojo.widget.Parse();
}
return this._parser_collection[name];
};
dojo.widget.createWidget=function(name,_3e8,_3e9,_3ea){
var _3eb=false;
var _3ec=(typeof name=="string");
if(_3ec){
var pos=name.indexOf(":");
var ns=(pos>-1)?name.substring(0,pos):"dojo";
if(pos>-1){
name=name.substring(pos+1);
}
var _3ef=name.toLowerCase();
var _3f0=ns+":"+_3ef;
_3eb=(dojo.byId(name)&&!dojo.widget.tags[_3f0]);
}
if((arguments.length==1)&&(_3eb||!_3ec)){
var xp=new dojo.xml.Parse();
var tn=_3eb?dojo.byId(name):name;
return dojo.widget.getParser().createComponents(xp.parseElement(tn,null,true))[0];
}
function fromScript(_3f3,name,_3f5,ns){
_3f5[_3f0]={dojotype:[{value:_3ef}],nodeRef:_3f3,fastMixIn:true};
_3f5.ns=ns;
return dojo.widget.getParser().createComponentFromScript(_3f3,name,_3f5,ns);
}
_3e8=_3e8||{};
var _3f7=false;
var tn=null;
var h=dojo.render.html.capable;
if(h){
tn=document.createElement("span");
}
if(!_3e9){
_3f7=true;
_3e9=tn;
if(h){
dojo.body().appendChild(_3e9);
}
}else{
if(_3ea){
dojo.dom.insertAtPosition(tn,_3e9,_3ea);
}else{
tn=_3e9;
}
}
var _3f9=fromScript(tn,name.toLowerCase(),_3e8,ns);
if((!_3f9)||(!_3f9[0])||(typeof _3f9[0].widgetType=="undefined")){
throw new Error("createWidget: Creation of \""+name+"\" widget failed.");
}
try{
if(_3f7&&_3f9[0].domNode.parentNode){
_3f9[0].domNode.parentNode.removeChild(_3f9[0].domNode);
}
}
catch(e){
dojo.debug(e);
}
return _3f9[0];
};
dojo.provide("dojo.html.style");
dojo.html.getClass=function(node){
node=dojo.byId(node);
if(!node){
return "";
}
var cs="";
if(node.className){
cs=node.className;
}else{
if(dojo.html.hasAttribute(node,"class")){
cs=dojo.html.getAttribute(node,"class");
}
}
return cs.replace(/^\s+|\s+$/g,"");
};
dojo.html.getClasses=function(node){
var c=dojo.html.getClass(node);
return (c=="")?[]:c.split(/\s+/g);
};
dojo.html.hasClass=function(node,_3ff){
return (new RegExp("(^|\\s+)"+_3ff+"(\\s+|$)")).test(dojo.html.getClass(node));
};
dojo.html.prependClass=function(node,_401){
_401+=" "+dojo.html.getClass(node);
return dojo.html.setClass(node,_401);
};
dojo.html.addClass=function(node,_403){
if(dojo.html.hasClass(node,_403)){
return false;
}
_403=(dojo.html.getClass(node)+" "+_403).replace(/^\s+|\s+$/g,"");
return dojo.html.setClass(node,_403);
};
dojo.html.setClass=function(node,_405){
node=dojo.byId(node);
var cs=new String(_405);
try{
if(typeof node.className=="string"){
node.className=cs;
}else{
if(node.setAttribute){
node.setAttribute("class",_405);
node.className=cs;
}else{
return false;
}
}
}
catch(e){
dojo.debug("dojo.html.setClass() failed",e);
}
return true;
};
dojo.html.removeClass=function(node,_408,_409){
try{
if(!_409){
var _40a=dojo.html.getClass(node).replace(new RegExp("(^|\\s+)"+_408+"(\\s+|$)"),"$1$2");
}else{
var _40a=dojo.html.getClass(node).replace(_408,"");
}
dojo.html.setClass(node,_40a);
}
catch(e){
dojo.debug("dojo.html.removeClass() failed",e);
}
return true;
};
dojo.html.replaceClass=function(node,_40c,_40d){
dojo.html.removeClass(node,_40d);
dojo.html.addClass(node,_40c);
};
dojo.html.classMatchType={ContainsAll:0,ContainsAny:1,IsOnly:2};
dojo.html.getElementsByClass=function(_40e,_40f,_410,_411,_412){
_412=false;
var _413=dojo.doc();
_40f=dojo.byId(_40f)||_413;
var _414=_40e.split(/\s+/g);
var _415=[];
if(_411!=1&&_411!=2){
_411=0;
}
var _416=new RegExp("(\\s|^)(("+_414.join(")|(")+"))(\\s|$)");
var _417=_414.join(" ").length;
var _418=[];
if(!_412&&_413.evaluate){
var _419=".//"+(_410||"*")+"[contains(";
if(_411!=dojo.html.classMatchType.ContainsAny){
_419+="concat(' ',@class,' '), ' "+_414.join(" ') and contains(concat(' ',@class,' '), ' ")+" ')";
if(_411==2){
_419+=" and string-length(@class)="+_417+"]";
}else{
_419+="]";
}
}else{
_419+="concat(' ',@class,' '), ' "+_414.join(" ') or contains(concat(' ',@class,' '), ' ")+" ')]";
}
var _41a=_413.evaluate(_419,_40f,null,XPathResult.ANY_TYPE,null);
var _41b=_41a.iterateNext();
while(_41b){
try{
_418.push(_41b);
_41b=_41a.iterateNext();
}
catch(e){
break;
}
}
return _418;
}else{
if(!_410){
_410="*";
}
_418=_40f.getElementsByTagName(_410);
var node,i=0;
outer:
while(node=_418[i++]){
var _41e=dojo.html.getClasses(node);
if(_41e.length==0){
continue outer;
}
var _41f=0;
for(var j=0;j<_41e.length;j++){
if(_416.test(_41e[j])){
if(_411==dojo.html.classMatchType.ContainsAny){
_415.push(node);
continue outer;
}else{
_41f++;
}
}else{
if(_411==dojo.html.classMatchType.IsOnly){
continue outer;
}
}
}
if(_41f==_414.length){
if((_411==dojo.html.classMatchType.IsOnly)&&(_41f==_41e.length)){
_415.push(node);
}else{
if(_411==dojo.html.classMatchType.ContainsAll){
_415.push(node);
}
}
}
}
return _415;
}
};
dojo.html.getElementsByClassName=dojo.html.getElementsByClass;
dojo.html.toCamelCase=function(_421){
var arr=_421.split("-"),cc=arr[0];
for(var i=1;i<arr.length;i++){
cc+=arr[i].charAt(0).toUpperCase()+arr[i].substring(1);
}
return cc;
};
dojo.html.toSelectorCase=function(_425){
return _425.replace(/([A-Z])/g,"-$1").toLowerCase();
};
dojo.html.getComputedStyle=function(node,_427,_428){
node=dojo.byId(node);
var _427=dojo.html.toSelectorCase(_427);
var _429=dojo.html.toCamelCase(_427);
if(!node||!node.style){
return _428;
}else{
if(document.defaultView&&dojo.html.isDescendantOf(node,node.ownerDocument)){
try{
var cs=document.defaultView.getComputedStyle(node,"");
if(cs){
return cs.getPropertyValue(_427);
}
}
catch(e){
if(node.style.getPropertyValue){
return node.style.getPropertyValue(_427);
}else{
return _428;
}
}
}else{
if(node.currentStyle){
return node.currentStyle[_429];
}
}
}
if(node.style.getPropertyValue){
return node.style.getPropertyValue(_427);
}else{
return _428;
}
};
dojo.html.getStyleProperty=function(node,_42c){
node=dojo.byId(node);
return (node&&node.style?node.style[dojo.html.toCamelCase(_42c)]:undefined);
};
dojo.html.getStyle=function(node,_42e){
var _42f=dojo.html.getStyleProperty(node,_42e);
return (_42f?_42f:dojo.html.getComputedStyle(node,_42e));
};
dojo.html.setStyle=function(node,_431,_432){
node=dojo.byId(node);
if(node&&node.style){
var _433=dojo.html.toCamelCase(_431);
node.style[_433]=_432;
}
};
dojo.html.setStyleText=function(_434,text){
try{
_434.style.cssText=text;
}
catch(e){
_434.setAttribute("style",text);
}
};
dojo.html.copyStyle=function(_436,_437){
if(!_437.style.cssText){
_436.setAttribute("style",_437.getAttribute("style"));
}else{
_436.style.cssText=_437.style.cssText;
}
dojo.html.addClass(_436,dojo.html.getClass(_437));
};
dojo.html.getUnitValue=function(node,_439,_43a){
var s=dojo.html.getComputedStyle(node,_439);
if((!s)||((s=="auto")&&(_43a))){
return {value:0,units:"px"};
}
var _43c=s.match(/(\-?[\d.]+)([a-z%]*)/i);
if(!_43c){
return dojo.html.getUnitValue.bad;
}
return {value:Number(_43c[1]),units:_43c[2].toLowerCase()};
};
dojo.html.getUnitValue.bad={value:NaN,units:""};
dojo.html.getPixelValue=function(node,_43e,_43f){
var _440=dojo.html.getUnitValue(node,_43e,_43f);
if(isNaN(_440.value)){
return 0;
}
if((_440.value)&&(_440.units!="px")){
return NaN;
}
return _440.value;
};
dojo.html.setPositivePixelValue=function(node,_442,_443){
if(isNaN(_443)){
return false;
}
node.style[_442]=Math.max(0,_443)+"px";
return true;
};
dojo.html.styleSheet=null;
dojo.html.insertCssRule=function(_444,_445,_446){
if(!dojo.html.styleSheet){
if(document.createStyleSheet){
dojo.html.styleSheet=document.createStyleSheet();
}else{
if(document.styleSheets[0]){
dojo.html.styleSheet=document.styleSheets[0];
}else{
return null;
}
}
}
if(arguments.length<3){
if(dojo.html.styleSheet.cssRules){
_446=dojo.html.styleSheet.cssRules.length;
}else{
if(dojo.html.styleSheet.rules){
_446=dojo.html.styleSheet.rules.length;
}else{
return null;
}
}
}
if(dojo.html.styleSheet.insertRule){
var rule=_444+" { "+_445+" }";
return dojo.html.styleSheet.insertRule(rule,_446);
}else{
if(dojo.html.styleSheet.addRule){
return dojo.html.styleSheet.addRule(_444,_445,_446);
}else{
return null;
}
}
};
dojo.html.removeCssRule=function(_448){
if(!dojo.html.styleSheet){
dojo.debug("no stylesheet defined for removing rules");
return false;
}
if(dojo.render.html.ie){
if(!_448){
_448=dojo.html.styleSheet.rules.length;
dojo.html.styleSheet.removeRule(_448);
}
}else{
if(document.styleSheets[0]){
if(!_448){
_448=dojo.html.styleSheet.cssRules.length;
}
dojo.html.styleSheet.deleteRule(_448);
}
}
return true;
};
dojo.html._insertedCssFiles=[];
dojo.html.insertCssFile=function(URI,doc,_44b,_44c){
if(!URI){
return;
}
if(!doc){
doc=document;
}
var _44d=dojo.hostenv.getText(URI,false,_44c);
if(_44d===null){
return;
}
_44d=dojo.html.fixPathsInCssText(_44d,URI);
if(_44b){
var idx=-1,node,ent=dojo.html._insertedCssFiles;
for(var i=0;i<ent.length;i++){
if((ent[i].doc==doc)&&(ent[i].cssText==_44d)){
idx=i;
node=ent[i].nodeRef;
break;
}
}
if(node){
var _452=doc.getElementsByTagName("style");
for(var i=0;i<_452.length;i++){
if(_452[i]==node){
return;
}
}
dojo.html._insertedCssFiles.shift(idx,1);
}
}
var _453=dojo.html.insertCssText(_44d,doc);
dojo.html._insertedCssFiles.push({"doc":doc,"cssText":_44d,"nodeRef":_453});
if(_453&&djConfig.isDebug){
_453.setAttribute("dbgHref",URI);
}
return _453;
};
dojo.html.insertCssText=function(_454,doc,URI){
if(!_454){
return;
}
if(!doc){
doc=document;
}
if(URI){
_454=dojo.html.fixPathsInCssText(_454,URI);
}
var _457=doc.createElement("style");
_457.setAttribute("type","text/css");
var head=doc.getElementsByTagName("head")[0];
if(!head){
dojo.debug("No head tag in document, aborting styles");
return;
}else{
head.appendChild(_457);
}
if(_457.styleSheet){
var _459=function(){
try{
_457.styleSheet.cssText=_454;
}
catch(e){
dojo.debug(e);
}
};
if(_457.styleSheet.disabled){
setTimeout(_459,10);
}else{
_459();
}
}else{
var _45a=doc.createTextNode(_454);
_457.appendChild(_45a);
}
return _457;
};
dojo.html.fixPathsInCssText=function(_45b,URI){
if(!_45b||!URI){
return;
}
var _45d,str="",url="",_460="[\\t\\s\\w\\(\\)\\/\\.\\\\'\"-:#=&?~]+";
var _461=new RegExp("url\\(\\s*("+_460+")\\s*\\)");
var _462=/(file|https?|ftps?):\/\//;
regexTrim=new RegExp("^[\\s]*(['\"]?)("+_460+")\\1[\\s]*?$");
if(dojo.render.html.ie55||dojo.render.html.ie60){
var _463=new RegExp("AlphaImageLoader\\((.*)src=['\"]("+_460+")['\"]");
while(_45d=_463.exec(_45b)){
url=_45d[2].replace(regexTrim,"$2");
if(!_462.exec(url)){
url=(new dojo.uri.Uri(URI,url).toString());
}
str+=_45b.substring(0,_45d.index)+"AlphaImageLoader("+_45d[1]+"src='"+url+"'";
_45b=_45b.substr(_45d.index+_45d[0].length);
}
_45b=str+_45b;
str="";
}
while(_45d=_461.exec(_45b)){
url=_45d[1].replace(regexTrim,"$2");
if(!_462.exec(url)){
url=(new dojo.uri.Uri(URI,url).toString());
}
str+=_45b.substring(0,_45d.index)+"url("+url+")";
_45b=_45b.substr(_45d.index+_45d[0].length);
}
return str+_45b;
};
dojo.html.setActiveStyleSheet=function(_464){
var i=0,a,els=dojo.doc().getElementsByTagName("link");
while(a=els[i++]){
if(a.getAttribute("rel").indexOf("style")!=-1&&a.getAttribute("title")){
a.disabled=true;
if(a.getAttribute("title")==_464){
a.disabled=false;
}
}
}
};
dojo.html.getActiveStyleSheet=function(){
var i=0,a,els=dojo.doc().getElementsByTagName("link");
while(a=els[i++]){
if(a.getAttribute("rel").indexOf("style")!=-1&&a.getAttribute("title")&&!a.disabled){
return a.getAttribute("title");
}
}
return null;
};
dojo.html.getPreferredStyleSheet=function(){
var i=0,a,els=dojo.doc().getElementsByTagName("link");
while(a=els[i++]){
if(a.getAttribute("rel").indexOf("style")!=-1&&a.getAttribute("rel").indexOf("alt")==-1&&a.getAttribute("title")){
return a.getAttribute("title");
}
}
return null;
};
dojo.html.applyBrowserClass=function(node){
var drh=dojo.render.html;
var _470={dj_ie:drh.ie,dj_ie55:drh.ie55,dj_ie6:drh.ie60,dj_ie7:drh.ie70,dj_iequirks:drh.ie&&drh.quirks,dj_opera:drh.opera,dj_opera8:drh.opera&&(Math.floor(dojo.render.version)==8),dj_opera9:drh.opera&&(Math.floor(dojo.render.version)==9),dj_khtml:drh.khtml,dj_safari:drh.safari,dj_gecko:drh.mozilla};
for(var p in _470){
if(_470[p]){
dojo.html.addClass(node,p);
}
}
};
dojo.provide("dojo.widget.DomWidget");
dojo.widget._cssFiles={};
dojo.widget._cssStrings={};
dojo.widget._templateCache={};
dojo.widget.defaultStrings={dojoRoot:dojo.hostenv.getBaseScriptUri(),baseScriptUri:dojo.hostenv.getBaseScriptUri()};
dojo.widget.fillFromTemplateCache=function(obj,_473,_474,_475){
var _476=_473||obj.templatePath;
var _477=dojo.widget._templateCache;
if(!_476&&!obj["widgetType"]){
do{
var _478="__dummyTemplate__"+dojo.widget._templateCache.dummyCount++;
}while(_477[_478]);
obj.widgetType=_478;
}
var wt=_476?_476.toString():obj.widgetType;
var ts=_477[wt];
if(!ts){
_477[wt]={"string":null,"node":null};
if(_475){
ts={};
}else{
ts=_477[wt];
}
}
if((!obj.templateString)&&(!_475)){
obj.templateString=_474||ts["string"];
}
if((!obj.templateNode)&&(!_475)){
obj.templateNode=ts["node"];
}
if((!obj.templateNode)&&(!obj.templateString)&&(_476)){
var _47b=dojo.hostenv.getText(_476);
if(_47b){
_47b=_47b.replace(/^\s*<\?xml(\s)+version=[\'\"](\d)*.(\d)*[\'\"](\s)*\?>/im,"");
var _47c=_47b.match(/<body[^>]*>\s*([\s\S]+)\s*<\/body>/im);
if(_47c){
_47b=_47c[1];
}
}else{
_47b="";
}
obj.templateString=_47b;
if(!_475){
_477[wt]["string"]=_47b;
}
}
if((!ts["string"])&&(!_475)){
ts.string=obj.templateString;
}
};
dojo.widget._templateCache.dummyCount=0;
dojo.widget.attachProperties=["dojoAttachPoint","id"];
dojo.widget.eventAttachProperty="dojoAttachEvent";
dojo.widget.onBuildProperty="dojoOnBuild";
dojo.widget.waiNames=["waiRole","waiState"];
dojo.widget.wai={waiRole:{name:"waiRole","namespace":"http://www.w3.org/TR/xhtml2",alias:"x2",prefix:"wairole:"},waiState:{name:"waiState","namespace":"http://www.w3.org/2005/07/aaa",alias:"aaa",prefix:""},setAttr:function(node,ns,attr,_480){
if(dojo.render.html.ie){
node.setAttribute(this[ns].alias+":"+attr,this[ns].prefix+_480);
}else{
node.setAttributeNS(this[ns]["namespace"],attr,this[ns].prefix+_480);
}
},getAttr:function(node,ns,attr){
if(dojo.render.html.ie){
return node.getAttribute(this[ns].alias+":"+attr);
}else{
return node.getAttributeNS(this[ns]["namespace"],attr);
}
},removeAttr:function(node,ns,attr){
var _487=true;
if(dojo.render.html.ie){
_487=node.removeAttribute(this[ns].alias+":"+attr);
}else{
node.removeAttributeNS(this[ns]["namespace"],attr);
}
return _487;
}};
dojo.widget.attachTemplateNodes=function(_488,_489,_48a){
var _48b=dojo.dom.ELEMENT_NODE;
function trim(str){
return str.replace(/^\s+|\s+$/g,"");
}
if(!_488){
_488=_489.domNode;
}
if(_488.nodeType!=_48b){
return;
}
var _48d=_488.all||_488.getElementsByTagName("*");
var _48e=_489;
for(var x=-1;x<_48d.length;x++){
var _490=(x==-1)?_488:_48d[x];
var _491=[];
if(!_489.widgetsInTemplate||!_490.getAttribute("dojoType")){
for(var y=0;y<this.attachProperties.length;y++){
var _493=_490.getAttribute(this.attachProperties[y]);
if(_493){
_491=_493.split(";");
for(var z=0;z<_491.length;z++){
if(dojo.lang.isArray(_489[_491[z]])){
_489[_491[z]].push(_490);
}else{
_489[_491[z]]=_490;
}
}
break;
}
}
var _495=_490.getAttribute(this.eventAttachProperty);
if(_495){
var evts=_495.split(";");
for(var y=0;y<evts.length;y++){
if((!evts[y])||(!evts[y].length)){
continue;
}
var _497=null;
var tevt=trim(evts[y]);
if(evts[y].indexOf(":")>=0){
var _499=tevt.split(":");
tevt=trim(_499[0]);
_497=trim(_499[1]);
}
if(!_497){
_497=tevt;
}
var tf=function(){
var ntf=new String(_497);
return function(evt){
if(_48e[ntf]){
_48e[ntf](dojo.event.browser.fixEvent(evt,this));
}
};
}();
dojo.event.browser.addListener(_490,tevt,tf,false,true);
}
}
for(var y=0;y<_48a.length;y++){
var _49d=_490.getAttribute(_48a[y]);
if((_49d)&&(_49d.length)){
var _497=null;
var _49e=_48a[y].substr(4);
_497=trim(_49d);
var _49f=[_497];
if(_497.indexOf(";")>=0){
_49f=dojo.lang.map(_497.split(";"),trim);
}
for(var z=0;z<_49f.length;z++){
if(!_49f[z].length){
continue;
}
var tf=function(){
var ntf=new String(_49f[z]);
return function(evt){
if(_48e[ntf]){
_48e[ntf](dojo.event.browser.fixEvent(evt,this));
}
};
}();
dojo.event.browser.addListener(_490,_49e,tf,false,true);
}
}
}
}
var _4a2=_490.getAttribute(this.templateProperty);
if(_4a2){
_489[_4a2]=_490;
}
dojo.lang.forEach(dojo.widget.waiNames,function(name){
var wai=dojo.widget.wai[name];
var val=_490.getAttribute(wai.name);
if(val){
if(val.indexOf("-")==-1){
dojo.widget.wai.setAttr(_490,wai.name,"role",val);
}else{
var _4a6=val.split("-");
dojo.widget.wai.setAttr(_490,wai.name,_4a6[0],_4a6[1]);
}
}
},this);
var _4a7=_490.getAttribute(this.onBuildProperty);
if(_4a7){
eval("var node = baseNode; var widget = targetObj; "+_4a7);
}
}
};
dojo.widget.getDojoEventsFromStr=function(str){
var re=/(dojoOn([a-z]+)(\s?))=/gi;
var evts=str?str.match(re)||[]:[];
var ret=[];
var lem={};
for(var x=0;x<evts.length;x++){
if(evts[x].length<1){
continue;
}
var cm=evts[x].replace(/\s/,"");
cm=(cm.slice(0,cm.length-1));
if(!lem[cm]){
lem[cm]=true;
ret.push(cm);
}
}
return ret;
};
dojo.declare("dojo.widget.DomWidget",dojo.widget.Widget,function(){
if((arguments.length>0)&&(typeof arguments[0]=="object")){
this.create(arguments[0]);
}
},{templateNode:null,templateString:null,templateCssString:null,preventClobber:false,domNode:null,containerNode:null,widgetsInTemplate:false,addChild:function(_4af,_4b0,pos,ref,_4b3){
if(!this.isContainer){
dojo.debug("dojo.widget.DomWidget.addChild() attempted on non-container widget");
return null;
}else{
if(_4b3==undefined){
_4b3=this.children.length;
}
this.addWidgetAsDirectChild(_4af,_4b0,pos,ref,_4b3);
this.registerChild(_4af,_4b3);
}
return _4af;
},addWidgetAsDirectChild:function(_4b4,_4b5,pos,ref,_4b8){
if((!this.containerNode)&&(!_4b5)){
this.containerNode=this.domNode;
}
var cn=(_4b5)?_4b5:this.containerNode;
if(!pos){
pos="after";
}
if(!ref){
if(!cn){
cn=dojo.body();
}
ref=cn.lastChild;
}
if(!_4b8){
_4b8=0;
}
_4b4.domNode.setAttribute("dojoinsertionindex",_4b8);
if(!ref){
cn.appendChild(_4b4.domNode);
}else{
if(pos=="insertAtIndex"){
dojo.dom.insertAtIndex(_4b4.domNode,ref.parentNode,_4b8);
}else{
if((pos=="after")&&(ref===cn.lastChild)){
cn.appendChild(_4b4.domNode);
}else{
dojo.dom.insertAtPosition(_4b4.domNode,cn,pos);
}
}
}
},registerChild:function(_4ba,_4bb){
_4ba.dojoInsertionIndex=_4bb;
var idx=-1;
for(var i=0;i<this.children.length;i++){
if(this.children[i].dojoInsertionIndex<=_4bb){
idx=i;
}
}
this.children.splice(idx+1,0,_4ba);
_4ba.parent=this;
_4ba.addedTo(this,idx+1);
delete dojo.widget.manager.topWidgets[_4ba.widgetId];
},removeChild:function(_4be){
dojo.dom.removeNode(_4be.domNode);
return dojo.widget.DomWidget.superclass.removeChild.call(this,_4be);
},getFragNodeRef:function(frag){
if(!frag){
return null;
}
if(!frag[this.getNamespacedType()]){
dojo.raise("Error: no frag for widget type "+this.getNamespacedType()+", id "+this.widgetId+" (maybe a widget has set it's type incorrectly)");
}
return frag[this.getNamespacedType()]["nodeRef"];
},postInitialize:function(args,frag,_4c2){
var _4c3=this.getFragNodeRef(frag);
if(_4c2&&(_4c2.snarfChildDomOutput||!_4c3)){
_4c2.addWidgetAsDirectChild(this,"","insertAtIndex","",args["dojoinsertionindex"],_4c3);
}else{
if(_4c3){
if(this.domNode&&(this.domNode!==_4c3)){
this._sourceNodeRef=dojo.dom.replaceNode(_4c3,this.domNode);
}
}
}
if(_4c2){
_4c2.registerChild(this,args.dojoinsertionindex);
}else{
dojo.widget.manager.topWidgets[this.widgetId]=this;
}
if(this.widgetsInTemplate){
var _4c4=new dojo.xml.Parse();
var _4c5;
var _4c6=this.domNode.getElementsByTagName("*");
for(var i=0;i<_4c6.length;i++){
if(_4c6[i].getAttribute("dojoAttachPoint")=="subContainerWidget"){
_4c5=_4c6[i];
}
if(_4c6[i].getAttribute("dojoType")){
_4c6[i].setAttribute("isSubWidget",true);
}
}
if(this.isContainer&&!this.containerNode){
if(_4c5){
var src=this.getFragNodeRef(frag);
if(src){
dojo.dom.moveChildren(src,_4c5);
frag["dojoDontFollow"]=true;
}
}else{
dojo.debug("No subContainerWidget node can be found in template file for widget "+this);
}
}
var _4c9=_4c4.parseElement(this.domNode,null,true);
dojo.widget.getParser().createSubComponents(_4c9,this);
var _4ca=[];
var _4cb=[this];
var w;
while((w=_4cb.pop())){
for(var i=0;i<w.children.length;i++){
var _4cd=w.children[i];
if(_4cd._processedSubWidgets||!_4cd.extraArgs["issubwidget"]){
continue;
}
_4ca.push(_4cd);
if(_4cd.isContainer){
_4cb.push(_4cd);
}
}
}
for(var i=0;i<_4ca.length;i++){
var _4ce=_4ca[i];
if(_4ce._processedSubWidgets){
dojo.debug("This should not happen: widget._processedSubWidgets is already true!");
return;
}
_4ce._processedSubWidgets=true;
if(_4ce.extraArgs["dojoattachevent"]){
var evts=_4ce.extraArgs["dojoattachevent"].split(";");
for(var j=0;j<evts.length;j++){
var _4d1=null;
var tevt=dojo.string.trim(evts[j]);
if(tevt.indexOf(":")>=0){
var _4d3=tevt.split(":");
tevt=dojo.string.trim(_4d3[0]);
_4d1=dojo.string.trim(_4d3[1]);
}
if(!_4d1){
_4d1=tevt;
}
if(dojo.lang.isFunction(_4ce[tevt])){
dojo.event.kwConnect({srcObj:_4ce,srcFunc:tevt,targetObj:this,targetFunc:_4d1});
}else{
alert(tevt+" is not a function in widget "+_4ce);
}
}
}
if(_4ce.extraArgs["dojoattachpoint"]){
this[_4ce.extraArgs["dojoattachpoint"]]=_4ce;
}
}
}
if(this.isContainer&&!frag["dojoDontFollow"]){
dojo.widget.getParser().createSubComponents(frag,this);
}
},buildRendering:function(args,frag){
var ts=dojo.widget._templateCache[this.widgetType];
if(args["templatecsspath"]){
args["templateCssPath"]=args["templatecsspath"];
}
var _4d7=args["templateCssPath"]||this.templateCssPath;
if(_4d7&&!dojo.widget._cssFiles[_4d7.toString()]){
if((!this.templateCssString)&&(_4d7)){
this.templateCssString=dojo.hostenv.getText(_4d7);
this.templateCssPath=null;
}
dojo.widget._cssFiles[_4d7.toString()]=true;
}
if((this["templateCssString"])&&(!dojo.widget._cssStrings[this.templateCssString])){
dojo.html.insertCssText(this.templateCssString,null,_4d7);
dojo.widget._cssStrings[this.templateCssString]=true;
}
if((!this.preventClobber)&&((this.templatePath)||(this.templateNode)||((this["templateString"])&&(this.templateString.length))||((typeof ts!="undefined")&&((ts["string"])||(ts["node"]))))){
this.buildFromTemplate(args,frag);
}else{
this.domNode=this.getFragNodeRef(frag);
}
this.fillInTemplate(args,frag);
},buildFromTemplate:function(args,frag){
var _4da=false;
if(args["templatepath"]){
args["templatePath"]=args["templatepath"];
}
dojo.widget.fillFromTemplateCache(this,args["templatePath"],null,_4da);
var ts=dojo.widget._templateCache[this.templatePath?this.templatePath.toString():this.widgetType];
if((ts)&&(!_4da)){
if(!this.templateString.length){
this.templateString=ts["string"];
}
if(!this.templateNode){
this.templateNode=ts["node"];
}
}
var _4dc=false;
var node=null;
var tstr=this.templateString;
if((!this.templateNode)&&(this.templateString)){
_4dc=this.templateString.match(/\$\{([^\}]+)\}/g);
if(_4dc){
var hash=this.strings||{};
for(var key in dojo.widget.defaultStrings){
if(dojo.lang.isUndefined(hash[key])){
hash[key]=dojo.widget.defaultStrings[key];
}
}
for(var i=0;i<_4dc.length;i++){
var key=_4dc[i];
key=key.substring(2,key.length-1);
var kval=(key.substring(0,5)=="this.")?dojo.lang.getObjPathValue(key.substring(5),this):hash[key];
var _4e3;
if((kval)||(dojo.lang.isString(kval))){
_4e3=new String((dojo.lang.isFunction(kval))?kval.call(this,key,this.templateString):kval);
while(_4e3.indexOf("\"")>-1){
_4e3=_4e3.replace("\"","&quot;");
}
tstr=tstr.replace(_4dc[i],_4e3);
}
}
}else{
this.templateNode=this.createNodesFromText(this.templateString,true)[0];
if(!_4da){
ts.node=this.templateNode;
}
}
}
if((!this.templateNode)&&(!_4dc)){
dojo.debug("DomWidget.buildFromTemplate: could not create template");
return false;
}else{
if(!_4dc){
node=this.templateNode.cloneNode(true);
if(!node){
return false;
}
}else{
node=this.createNodesFromText(tstr,true)[0];
}
}
this.domNode=node;
this.attachTemplateNodes();
if(this.isContainer&&this.containerNode){
var src=this.getFragNodeRef(frag);
if(src){
dojo.dom.moveChildren(src,this.containerNode);
}
}
},attachTemplateNodes:function(_4e5,_4e6){
if(!_4e5){
_4e5=this.domNode;
}
if(!_4e6){
_4e6=this;
}
return dojo.widget.attachTemplateNodes(_4e5,_4e6,dojo.widget.getDojoEventsFromStr(this.templateString));
},fillInTemplate:function(){
},destroyRendering:function(){
try{
dojo.dom.destroyNode(this.domNode);
delete this.domNode;
}
catch(e){
}
if(this._sourceNodeRef){
try{
dojo.dom.destroyNode(this._sourceNodeRef);
}
catch(e){
}
}
},createNodesFromText:function(){
dojo.unimplemented("dojo.widget.DomWidget.createNodesFromText");
}});
dojo.provide("dojo.html.display");
dojo.html._toggle=function(node,_4e8,_4e9){
node=dojo.byId(node);
_4e9(node,!_4e8(node));
return _4e8(node);
};
dojo.html.show=function(node){
node=dojo.byId(node);
if(dojo.html.getStyleProperty(node,"display")=="none"){
dojo.html.setStyle(node,"display",(node.dojoDisplayCache||""));
node.dojoDisplayCache=undefined;
}
};
dojo.html.hide=function(node){
node=dojo.byId(node);
if(typeof node["dojoDisplayCache"]=="undefined"){
var d=dojo.html.getStyleProperty(node,"display");
if(d!="none"){
node.dojoDisplayCache=d;
}
}
dojo.html.setStyle(node,"display","none");
};
dojo.html.setShowing=function(node,_4ee){
dojo.html[(_4ee?"show":"hide")](node);
};
dojo.html.isShowing=function(node){
return (dojo.html.getStyleProperty(node,"display")!="none");
};
dojo.html.toggleShowing=function(node){
return dojo.html._toggle(node,dojo.html.isShowing,dojo.html.setShowing);
};
dojo.html.displayMap={tr:"",td:"",th:"",img:"inline",span:"inline",input:"inline",button:"inline"};
dojo.html.suggestDisplayByTagName=function(node){
node=dojo.byId(node);
if(node&&node.tagName){
var tag=node.tagName.toLowerCase();
return (tag in dojo.html.displayMap?dojo.html.displayMap[tag]:"block");
}
};
dojo.html.setDisplay=function(node,_4f4){
dojo.html.setStyle(node,"display",((_4f4 instanceof String||typeof _4f4=="string")?_4f4:(_4f4?dojo.html.suggestDisplayByTagName(node):"none")));
};
dojo.html.isDisplayed=function(node){
return (dojo.html.getComputedStyle(node,"display")!="none");
};
dojo.html.toggleDisplay=function(node){
return dojo.html._toggle(node,dojo.html.isDisplayed,dojo.html.setDisplay);
};
dojo.html.setVisibility=function(node,_4f8){
dojo.html.setStyle(node,"visibility",((_4f8 instanceof String||typeof _4f8=="string")?_4f8:(_4f8?"visible":"hidden")));
};
dojo.html.isVisible=function(node){
return (dojo.html.getComputedStyle(node,"visibility")!="hidden");
};
dojo.html.toggleVisibility=function(node){
return dojo.html._toggle(node,dojo.html.isVisible,dojo.html.setVisibility);
};
dojo.html.setOpacity=function(node,_4fc,_4fd){
node=dojo.byId(node);
var h=dojo.render.html;
if(!_4fd){
if(_4fc>=1){
if(h.ie){
dojo.html.clearOpacity(node);
return;
}else{
_4fc=0.999999;
}
}else{
if(_4fc<0){
_4fc=0;
}
}
}
if(h.ie){
if(node.nodeName.toLowerCase()=="tr"){
var tds=node.getElementsByTagName("td");
for(var x=0;x<tds.length;x++){
tds[x].style.filter="Alpha(Opacity="+_4fc*100+")";
}
}
node.style.filter="Alpha(Opacity="+_4fc*100+")";
}else{
if(h.moz){
node.style.opacity=_4fc;
node.style.MozOpacity=_4fc;
}else{
if(h.safari){
node.style.opacity=_4fc;
node.style.KhtmlOpacity=_4fc;
}else{
node.style.opacity=_4fc;
}
}
}
};
dojo.html.clearOpacity=function(node){
node=dojo.byId(node);
var ns=node.style;
var h=dojo.render.html;
if(h.ie){
try{
if(node.filters&&node.filters.alpha){
ns.filter="";
}
}
catch(e){
}
}else{
if(h.moz){
ns.opacity=1;
ns.MozOpacity=1;
}else{
if(h.safari){
ns.opacity=1;
ns.KhtmlOpacity=1;
}else{
ns.opacity=1;
}
}
}
};
dojo.html.getOpacity=function(node){
node=dojo.byId(node);
var h=dojo.render.html;
if(h.ie){
var opac=(node.filters&&node.filters.alpha&&typeof node.filters.alpha.opacity=="number"?node.filters.alpha.opacity:100)/100;
}else{
var opac=node.style.opacity||node.style.MozOpacity||node.style.KhtmlOpacity||1;
}
return opac>=0.999999?1:Number(opac);
};
dojo.provide("dojo.html.layout");
dojo.html.sumAncestorProperties=function(node,prop){
node=dojo.byId(node);
if(!node){
return 0;
}
var _509=0;
while(node){
if(dojo.html.getComputedStyle(node,"position")=="fixed"){
return 0;
}
var val=node[prop];
if(val){
_509+=val-0;
if(node==dojo.body()){
break;
}
}
node=node.parentNode;
}
return _509;
};
dojo.html.setStyleAttributes=function(node,_50c){
node=dojo.byId(node);
var _50d=_50c.replace(/(;)?\s*$/,"").split(";");
for(var i=0;i<_50d.length;i++){
var _50f=_50d[i].split(":");
var name=_50f[0].replace(/\s*$/,"").replace(/^\s*/,"").toLowerCase();
var _511=_50f[1].replace(/\s*$/,"").replace(/^\s*/,"");
switch(name){
case "opacity":
dojo.html.setOpacity(node,_511);
break;
case "content-height":
dojo.html.setContentBox(node,{height:_511});
break;
case "content-width":
dojo.html.setContentBox(node,{width:_511});
break;
case "outer-height":
dojo.html.setMarginBox(node,{height:_511});
break;
case "outer-width":
dojo.html.setMarginBox(node,{width:_511});
break;
default:
node.style[dojo.html.toCamelCase(name)]=_511;
}
}
};
dojo.html.boxSizing={MARGIN_BOX:"margin-box",BORDER_BOX:"border-box",PADDING_BOX:"padding-box",CONTENT_BOX:"content-box"};
dojo.html.getAbsolutePosition=dojo.html.abs=function(node,_513,_514){
node=dojo.byId(node,node.ownerDocument);
var ret={x:0,y:0};
var bs=dojo.html.boxSizing;
if(!_514){
_514=bs.CONTENT_BOX;
}
var _517=2;
var _518;
switch(_514){
case bs.MARGIN_BOX:
_518=3;
break;
case bs.BORDER_BOX:
_518=2;
break;
case bs.PADDING_BOX:
default:
_518=1;
break;
case bs.CONTENT_BOX:
_518=0;
break;
}
var h=dojo.render.html;
var db=document["body"]||document["documentElement"];
if(h.ie){
with(node.getBoundingClientRect()){
ret.x=left-2;
ret.y=top-2;
}
}else{
if(document.getBoxObjectFor){
_517=1;
try{
var bo=document.getBoxObjectFor(node);
ret.x=bo.x-dojo.html.sumAncestorProperties(node,"scrollLeft");
ret.y=bo.y-dojo.html.sumAncestorProperties(node,"scrollTop");
}
catch(e){
}
}else{
if(node["offsetParent"]){
var _51c;
if((h.safari)&&(node.style.getPropertyValue("position")=="absolute")&&(node.parentNode==db)){
_51c=db;
}else{
_51c=db.parentNode;
}
if(node.parentNode!=db){
var nd=node;
if(dojo.render.html.opera){
nd=db;
}
ret.x-=dojo.html.sumAncestorProperties(nd,"scrollLeft");
ret.y-=dojo.html.sumAncestorProperties(nd,"scrollTop");
}
var _51e=node;
do{
var n=_51e["offsetLeft"];
if(!h.opera||n>0){
ret.x+=isNaN(n)?0:n;
}
var m=_51e["offsetTop"];
ret.y+=isNaN(m)?0:m;
_51e=_51e.offsetParent;
}while((_51e!=_51c)&&(_51e!=null));
}else{
if(node["x"]&&node["y"]){
ret.x+=isNaN(node.x)?0:node.x;
ret.y+=isNaN(node.y)?0:node.y;
}
}
}
}
if(_513){
var _521=dojo.html.getScroll();
ret.y+=_521.top;
ret.x+=_521.left;
}
var _522=[dojo.html.getPaddingExtent,dojo.html.getBorderExtent,dojo.html.getMarginExtent];
if(_517>_518){
for(var i=_518;i<_517;++i){
ret.y+=_522[i](node,"top");
ret.x+=_522[i](node,"left");
}
}else{
if(_517<_518){
for(var i=_518;i>_517;--i){
ret.y-=_522[i-1](node,"top");
ret.x-=_522[i-1](node,"left");
}
}
}
ret.top=ret.y;
ret.left=ret.x;
return ret;
};
dojo.html.isPositionAbsolute=function(node){
return (dojo.html.getComputedStyle(node,"position")=="absolute");
};
dojo.html._sumPixelValues=function(node,_526,_527){
var _528=0;
for(var x=0;x<_526.length;x++){
_528+=dojo.html.getPixelValue(node,_526[x],_527);
}
return _528;
};
dojo.html.getMargin=function(node){
return {width:dojo.html._sumPixelValues(node,["margin-left","margin-right"],(dojo.html.getComputedStyle(node,"position")=="absolute")),height:dojo.html._sumPixelValues(node,["margin-top","margin-bottom"],(dojo.html.getComputedStyle(node,"position")=="absolute"))};
};
dojo.html.getBorder=function(node){
return {width:dojo.html.getBorderExtent(node,"left")+dojo.html.getBorderExtent(node,"right"),height:dojo.html.getBorderExtent(node,"top")+dojo.html.getBorderExtent(node,"bottom")};
};
dojo.html.getBorderExtent=function(node,side){
return (dojo.html.getStyle(node,"border-"+side+"-style")=="none"?0:dojo.html.getPixelValue(node,"border-"+side+"-width"));
};
dojo.html.getMarginExtent=function(node,side){
return dojo.html._sumPixelValues(node,["margin-"+side],dojo.html.isPositionAbsolute(node));
};
dojo.html.getPaddingExtent=function(node,side){
return dojo.html._sumPixelValues(node,["padding-"+side],true);
};
dojo.html.getPadding=function(node){
return {width:dojo.html._sumPixelValues(node,["padding-left","padding-right"],true),height:dojo.html._sumPixelValues(node,["padding-top","padding-bottom"],true)};
};
dojo.html.getPadBorder=function(node){
var pad=dojo.html.getPadding(node);
var _535=dojo.html.getBorder(node);
return {width:pad.width+_535.width,height:pad.height+_535.height};
};
dojo.html.getBoxSizing=function(node){
var h=dojo.render.html;
var bs=dojo.html.boxSizing;
if(((h.ie)||(h.opera))&&node.nodeName!="IMG"){
var cm=document["compatMode"];
if((cm=="BackCompat")||(cm=="QuirksMode")){
return bs.BORDER_BOX;
}else{
return bs.CONTENT_BOX;
}
}else{
if(arguments.length==0){
node=document.documentElement;
}
var _53a=dojo.html.getStyle(node,"-moz-box-sizing");
if(!_53a){
_53a=dojo.html.getStyle(node,"box-sizing");
}
return (_53a?_53a:bs.CONTENT_BOX);
}
};
dojo.html.isBorderBox=function(node){
return (dojo.html.getBoxSizing(node)==dojo.html.boxSizing.BORDER_BOX);
};
dojo.html.getBorderBox=function(node){
node=dojo.byId(node);
return {width:node.offsetWidth,height:node.offsetHeight};
};
dojo.html.getPaddingBox=function(node){
var box=dojo.html.getBorderBox(node);
var _53f=dojo.html.getBorder(node);
return {width:box.width-_53f.width,height:box.height-_53f.height};
};
dojo.html.getContentBox=function(node){
node=dojo.byId(node);
var _541=dojo.html.getPadBorder(node);
return {width:node.offsetWidth-_541.width,height:node.offsetHeight-_541.height};
};
dojo.html.setContentBox=function(node,args){
node=dojo.byId(node);
var _544=0;
var _545=0;
var isbb=dojo.html.isBorderBox(node);
var _547=(isbb?dojo.html.getPadBorder(node):{width:0,height:0});
var ret={};
if(typeof args.width!="undefined"){
_544=args.width+_547.width;
ret.width=dojo.html.setPositivePixelValue(node,"width",_544);
}
if(typeof args.height!="undefined"){
_545=args.height+_547.height;
ret.height=dojo.html.setPositivePixelValue(node,"height",_545);
}
return ret;
};
dojo.html.getMarginBox=function(node){
var _54a=dojo.html.getBorderBox(node);
var _54b=dojo.html.getMargin(node);
return {width:_54a.width+_54b.width,height:_54a.height+_54b.height};
};
dojo.html.setMarginBox=function(node,args){
node=dojo.byId(node);
var _54e=0;
var _54f=0;
var isbb=dojo.html.isBorderBox(node);
var _551=(!isbb?dojo.html.getPadBorder(node):{width:0,height:0});
var _552=dojo.html.getMargin(node);
var ret={};
if(typeof args.width!="undefined"){
_54e=args.width-_551.width;
_54e-=_552.width;
ret.width=dojo.html.setPositivePixelValue(node,"width",_54e);
}
if(typeof args.height!="undefined"){
_54f=args.height-_551.height;
_54f-=_552.height;
ret.height=dojo.html.setPositivePixelValue(node,"height",_54f);
}
return ret;
};
dojo.html.getElementBox=function(node,type){
var bs=dojo.html.boxSizing;
switch(type){
case bs.MARGIN_BOX:
return dojo.html.getMarginBox(node);
case bs.BORDER_BOX:
return dojo.html.getBorderBox(node);
case bs.PADDING_BOX:
return dojo.html.getPaddingBox(node);
case bs.CONTENT_BOX:
default:
return dojo.html.getContentBox(node);
}
};
dojo.html.toCoordinateObject=dojo.html.toCoordinateArray=function(_557,_558,_559){
if(_557 instanceof Array||typeof _557=="array"){
dojo.deprecated("dojo.html.toCoordinateArray","use dojo.html.toCoordinateObject({left: , top: , width: , height: }) instead","0.5");
while(_557.length<4){
_557.push(0);
}
while(_557.length>4){
_557.pop();
}
var ret={left:_557[0],top:_557[1],width:_557[2],height:_557[3]};
}else{
if(!_557.nodeType&&!(_557 instanceof String||typeof _557=="string")&&("width" in _557||"height" in _557||"left" in _557||"x" in _557||"top" in _557||"y" in _557)){
var ret={left:_557.left||_557.x||0,top:_557.top||_557.y||0,width:_557.width||0,height:_557.height||0};
}else{
var node=dojo.byId(_557);
var pos=dojo.html.abs(node,_558,_559);
var _55d=dojo.html.getMarginBox(node);
var ret={left:pos.left,top:pos.top,width:_55d.width,height:_55d.height};
}
}
ret.x=ret.left;
ret.y=ret.top;
return ret;
};
dojo.html.setMarginBoxWidth=dojo.html.setOuterWidth=function(node,_55f){
return dojo.html._callDeprecated("setMarginBoxWidth","setMarginBox",arguments,"width");
};
dojo.html.setMarginBoxHeight=dojo.html.setOuterHeight=function(){
return dojo.html._callDeprecated("setMarginBoxHeight","setMarginBox",arguments,"height");
};
dojo.html.getMarginBoxWidth=dojo.html.getOuterWidth=function(){
return dojo.html._callDeprecated("getMarginBoxWidth","getMarginBox",arguments,null,"width");
};
dojo.html.getMarginBoxHeight=dojo.html.getOuterHeight=function(){
return dojo.html._callDeprecated("getMarginBoxHeight","getMarginBox",arguments,null,"height");
};
dojo.html.getTotalOffset=function(node,type,_562){
return dojo.html._callDeprecated("getTotalOffset","getAbsolutePosition",arguments,null,type);
};
dojo.html.getAbsoluteX=function(node,_564){
return dojo.html._callDeprecated("getAbsoluteX","getAbsolutePosition",arguments,null,"x");
};
dojo.html.getAbsoluteY=function(node,_566){
return dojo.html._callDeprecated("getAbsoluteY","getAbsolutePosition",arguments,null,"y");
};
dojo.html.totalOffsetLeft=function(node,_568){
return dojo.html._callDeprecated("totalOffsetLeft","getAbsolutePosition",arguments,null,"left");
};
dojo.html.totalOffsetTop=function(node,_56a){
return dojo.html._callDeprecated("totalOffsetTop","getAbsolutePosition",arguments,null,"top");
};
dojo.html.getMarginWidth=function(node){
return dojo.html._callDeprecated("getMarginWidth","getMargin",arguments,null,"width");
};
dojo.html.getMarginHeight=function(node){
return dojo.html._callDeprecated("getMarginHeight","getMargin",arguments,null,"height");
};
dojo.html.getBorderWidth=function(node){
return dojo.html._callDeprecated("getBorderWidth","getBorder",arguments,null,"width");
};
dojo.html.getBorderHeight=function(node){
return dojo.html._callDeprecated("getBorderHeight","getBorder",arguments,null,"height");
};
dojo.html.getPaddingWidth=function(node){
return dojo.html._callDeprecated("getPaddingWidth","getPadding",arguments,null,"width");
};
dojo.html.getPaddingHeight=function(node){
return dojo.html._callDeprecated("getPaddingHeight","getPadding",arguments,null,"height");
};
dojo.html.getPadBorderWidth=function(node){
return dojo.html._callDeprecated("getPadBorderWidth","getPadBorder",arguments,null,"width");
};
dojo.html.getPadBorderHeight=function(node){
return dojo.html._callDeprecated("getPadBorderHeight","getPadBorder",arguments,null,"height");
};
dojo.html.getBorderBoxWidth=dojo.html.getInnerWidth=function(){
return dojo.html._callDeprecated("getBorderBoxWidth","getBorderBox",arguments,null,"width");
};
dojo.html.getBorderBoxHeight=dojo.html.getInnerHeight=function(){
return dojo.html._callDeprecated("getBorderBoxHeight","getBorderBox",arguments,null,"height");
};
dojo.html.getContentBoxWidth=dojo.html.getContentWidth=function(){
return dojo.html._callDeprecated("getContentBoxWidth","getContentBox",arguments,null,"width");
};
dojo.html.getContentBoxHeight=dojo.html.getContentHeight=function(){
return dojo.html._callDeprecated("getContentBoxHeight","getContentBox",arguments,null,"height");
};
dojo.html.setContentBoxWidth=dojo.html.setContentWidth=function(node,_574){
return dojo.html._callDeprecated("setContentBoxWidth","setContentBox",arguments,"width");
};
dojo.html.setContentBoxHeight=dojo.html.setContentHeight=function(node,_576){
return dojo.html._callDeprecated("setContentBoxHeight","setContentBox",arguments,"height");
};
dojo.provide("dojo.html.util");
dojo.html.getElementWindow=function(_577){
return dojo.html.getDocumentWindow(_577.ownerDocument);
};
dojo.html.getDocumentWindow=function(doc){
if(dojo.render.html.safari&&!doc._parentWindow){
var fix=function(win){
win.document._parentWindow=win;
for(var i=0;i<win.frames.length;i++){
fix(win.frames[i]);
}
};
fix(window.top);
}
if(dojo.render.html.ie&&window!==document.parentWindow&&!doc._parentWindow){
doc.parentWindow.execScript("document._parentWindow = window;","Javascript");
var win=doc._parentWindow;
doc._parentWindow=null;
return win;
}
return doc._parentWindow||doc.parentWindow||doc.defaultView;
};
dojo.html.gravity=function(node,e){
node=dojo.byId(node);
var _57f=dojo.html.getCursorPosition(e);
with(dojo.html){
var _580=getAbsolutePosition(node,true);
var bb=getBorderBox(node);
var _582=_580.x+(bb.width/2);
var _583=_580.y+(bb.height/2);
}
with(dojo.html.gravity){
return ((_57f.x<_582?WEST:EAST)|(_57f.y<_583?NORTH:SOUTH));
}
};
dojo.html.gravity.NORTH=1;
dojo.html.gravity.SOUTH=1<<1;
dojo.html.gravity.EAST=1<<2;
dojo.html.gravity.WEST=1<<3;
dojo.html.overElement=function(_584,e){
_584=dojo.byId(_584);
var _586=dojo.html.getCursorPosition(e);
var bb=dojo.html.getBorderBox(_584);
var _588=dojo.html.getAbsolutePosition(_584,true,dojo.html.boxSizing.BORDER_BOX);
var top=_588.y;
var _58a=top+bb.height;
var left=_588.x;
var _58c=left+bb.width;
return (_586.x>=left&&_586.x<=_58c&&_586.y>=top&&_586.y<=_58a);
};
dojo.html.renderedTextContent=function(node){
node=dojo.byId(node);
var _58e="";
if(node==null){
return _58e;
}
for(var i=0;i<node.childNodes.length;i++){
switch(node.childNodes[i].nodeType){
case 1:
case 5:
var _590="unknown";
try{
_590=dojo.html.getStyle(node.childNodes[i],"display");
}
catch(E){
}
switch(_590){
case "block":
case "list-item":
case "run-in":
case "table":
case "table-row-group":
case "table-header-group":
case "table-footer-group":
case "table-row":
case "table-column-group":
case "table-column":
case "table-cell":
case "table-caption":
_58e+="\n";
_58e+=dojo.html.renderedTextContent(node.childNodes[i]);
_58e+="\n";
break;
case "none":
break;
default:
if(node.childNodes[i].tagName&&node.childNodes[i].tagName.toLowerCase()=="br"){
_58e+="\n";
}else{
_58e+=dojo.html.renderedTextContent(node.childNodes[i]);
}
break;
}
break;
case 3:
case 2:
case 4:
var text=node.childNodes[i].nodeValue;
var _592="unknown";
try{
_592=dojo.html.getStyle(node,"text-transform");
}
catch(E){
}
switch(_592){
case "capitalize":
var _593=text.split(" ");
for(var i=0;i<_593.length;i++){
_593[i]=_593[i].charAt(0).toUpperCase()+_593[i].substring(1);
}
text=_593.join(" ");
break;
case "uppercase":
text=text.toUpperCase();
break;
case "lowercase":
text=text.toLowerCase();
break;
default:
break;
}
switch(_592){
case "nowrap":
break;
case "pre-wrap":
break;
case "pre-line":
break;
case "pre":
break;
default:
text=text.replace(/\s+/," ");
if(/\s$/.test(_58e)){
text.replace(/^\s/,"");
}
break;
}
_58e+=text;
break;
default:
break;
}
}
return _58e;
};
dojo.html.createNodesFromText=function(txt,trim){
if(trim){
txt=txt.replace(/^\s+|\s+$/g,"");
}
var tn=dojo.doc().createElement("div");
tn.style.visibility="hidden";
dojo.body().appendChild(tn);
var _597="none";
if((/^<t[dh][\s\r\n>]/i).test(txt.replace(/^\s+/))){
txt="<table><tbody><tr>"+txt+"</tr></tbody></table>";
_597="cell";
}else{
if((/^<tr[\s\r\n>]/i).test(txt.replace(/^\s+/))){
txt="<table><tbody>"+txt+"</tbody></table>";
_597="row";
}else{
if((/^<(thead|tbody|tfoot)[\s\r\n>]/i).test(txt.replace(/^\s+/))){
txt="<table>"+txt+"</table>";
_597="section";
}
}
}
tn.innerHTML=txt;
if(tn["normalize"]){
tn.normalize();
}
var _598=null;
switch(_597){
case "cell":
_598=tn.getElementsByTagName("tr")[0];
break;
case "row":
_598=tn.getElementsByTagName("tbody")[0];
break;
case "section":
_598=tn.getElementsByTagName("table")[0];
break;
default:
_598=tn;
break;
}
var _599=[];
for(var x=0;x<_598.childNodes.length;x++){
_599.push(_598.childNodes[x].cloneNode(true));
}
tn.style.display="none";
dojo.html.destroyNode(tn);
return _599;
};
dojo.html.placeOnScreen=function(node,_59c,_59d,_59e,_59f,_5a0,_5a1){
if(_59c instanceof Array||typeof _59c=="array"){
_5a1=_5a0;
_5a0=_59f;
_59f=_59e;
_59e=_59d;
_59d=_59c[1];
_59c=_59c[0];
}
if(_5a0 instanceof String||typeof _5a0=="string"){
_5a0=_5a0.split(",");
}
if(!isNaN(_59e)){
_59e=[Number(_59e),Number(_59e)];
}else{
if(!(_59e instanceof Array||typeof _59e=="array")){
_59e=[0,0];
}
}
var _5a2=dojo.html.getScroll().offset;
var view=dojo.html.getViewport();
node=dojo.byId(node);
var _5a4=node.style.display;
node.style.display="";
var bb=dojo.html.getBorderBox(node);
var w=bb.width;
var h=bb.height;
node.style.display=_5a4;
if(!(_5a0 instanceof Array||typeof _5a0=="array")){
_5a0=["TL"];
}
var _5a8,_5a9,_5aa=Infinity,_5ab;
for(var _5ac=0;_5ac<_5a0.length;++_5ac){
var _5ad=_5a0[_5ac];
var _5ae=true;
var tryX=_59c-(_5ad.charAt(1)=="L"?0:w)+_59e[0]*(_5ad.charAt(1)=="L"?1:-1);
var tryY=_59d-(_5ad.charAt(0)=="T"?0:h)+_59e[1]*(_5ad.charAt(0)=="T"?1:-1);
if(_59f){
tryX-=_5a2.x;
tryY-=_5a2.y;
}
if(tryX<0){
tryX=0;
_5ae=false;
}
if(tryY<0){
tryY=0;
_5ae=false;
}
var x=tryX+w;
if(x>view.width){
x=view.width-w;
_5ae=false;
}else{
x=tryX;
}
x=Math.max(_59e[0],x)+_5a2.x;
var y=tryY+h;
if(y>view.height){
y=view.height-h;
_5ae=false;
}else{
y=tryY;
}
y=Math.max(_59e[1],y)+_5a2.y;
if(_5ae){
_5a8=x;
_5a9=y;
_5aa=0;
_5ab=_5ad;
break;
}else{
var dist=Math.pow(x-tryX-_5a2.x,2)+Math.pow(y-tryY-_5a2.y,2);
if(_5aa>dist){
_5aa=dist;
_5a8=x;
_5a9=y;
_5ab=_5ad;
}
}
}
if(!_5a1){
node.style.left=_5a8+"px";
node.style.top=_5a9+"px";
}
return {left:_5a8,top:_5a9,x:_5a8,y:_5a9,dist:_5aa,corner:_5ab};
};
dojo.html.placeOnScreenPoint=function(node,_5b5,_5b6,_5b7,_5b8){
dojo.deprecated("dojo.html.placeOnScreenPoint","use dojo.html.placeOnScreen() instead","0.5");
return dojo.html.placeOnScreen(node,_5b5,_5b6,_5b7,_5b8,["TL","TR","BL","BR"]);
};
dojo.html.placeOnScreenAroundElement=function(node,_5ba,_5bb,_5bc,_5bd,_5be){
var best,_5c0=Infinity;
_5ba=dojo.byId(_5ba);
var _5c1=_5ba.style.display;
_5ba.style.display="";
var mb=dojo.html.getElementBox(_5ba,_5bc);
var _5c3=mb.width;
var _5c4=mb.height;
var _5c5=dojo.html.getAbsolutePosition(_5ba,true,_5bc);
_5ba.style.display=_5c1;
for(var _5c6 in _5bd){
var pos,_5c8,_5c9;
var _5ca=_5bd[_5c6];
_5c8=_5c5.x+(_5c6.charAt(1)=="L"?0:_5c3);
_5c9=_5c5.y+(_5c6.charAt(0)=="T"?0:_5c4);
pos=dojo.html.placeOnScreen(node,_5c8,_5c9,_5bb,true,_5ca,true);
if(pos.dist==0){
best=pos;
break;
}else{
if(_5c0>pos.dist){
_5c0=pos.dist;
best=pos;
}
}
}
if(!_5be){
node.style.left=best.left+"px";
node.style.top=best.top+"px";
}
return best;
};
dojo.html.scrollIntoView=function(node){
if(!node){
return;
}
if(dojo.render.html.ie){
if(dojo.html.getBorderBox(node.parentNode).height<=node.parentNode.scrollHeight){
node.scrollIntoView(false);
}
}else{
if(dojo.render.html.mozilla){
node.scrollIntoView(false);
}else{
var _5cc=node.parentNode;
var _5cd=_5cc.scrollTop+dojo.html.getBorderBox(_5cc).height;
var _5ce=node.offsetTop+dojo.html.getMarginBox(node).height;
if(_5cd<_5ce){
_5cc.scrollTop+=(_5ce-_5cd);
}else{
if(_5cc.scrollTop>node.offsetTop){
_5cc.scrollTop-=(_5cc.scrollTop-node.offsetTop);
}
}
}
}
};
dojo.provide("dojo.gfx.color");
dojo.gfx.color.Color=function(r,g,b,a){
if(dojo.lang.isArray(r)){
this.r=r[0];
this.g=r[1];
this.b=r[2];
this.a=r[3]||1;
}else{
if(dojo.lang.isString(r)){
var rgb=dojo.gfx.color.extractRGB(r);
this.r=rgb[0];
this.g=rgb[1];
this.b=rgb[2];
this.a=g||1;
}else{
if(r instanceof dojo.gfx.color.Color){
this.r=r.r;
this.b=r.b;
this.g=r.g;
this.a=r.a;
}else{
this.r=r;
this.g=g;
this.b=b;
this.a=a;
}
}
}
};
dojo.gfx.color.Color.fromArray=function(arr){
return new dojo.gfx.color.Color(arr[0],arr[1],arr[2],arr[3]);
};
dojo.extend(dojo.gfx.color.Color,{toRgb:function(_5d5){
if(_5d5){
return this.toRgba();
}else{
return [this.r,this.g,this.b];
}
},toRgba:function(){
return [this.r,this.g,this.b,this.a];
},toHex:function(){
return dojo.gfx.color.rgb2hex(this.toRgb());
},toCss:function(){
return "rgb("+this.toRgb().join()+")";
},toString:function(){
return this.toHex();
},blend:function(_5d6,_5d7){
var rgb=null;
if(dojo.lang.isArray(_5d6)){
rgb=_5d6;
}else{
if(_5d6 instanceof dojo.gfx.color.Color){
rgb=_5d6.toRgb();
}else{
rgb=new dojo.gfx.color.Color(_5d6).toRgb();
}
}
return dojo.gfx.color.blend(this.toRgb(),rgb,_5d7);
}});
dojo.gfx.color.named={white:[255,255,255],black:[0,0,0],red:[255,0,0],green:[0,255,0],lime:[0,255,0],blue:[0,0,255],navy:[0,0,128],gray:[128,128,128],silver:[192,192,192]};
dojo.gfx.color.blend=function(a,b,_5db){
if(typeof a=="string"){
return dojo.gfx.color.blendHex(a,b,_5db);
}
if(!_5db){
_5db=0;
}
_5db=Math.min(Math.max(-1,_5db),1);
_5db=((_5db+1)/2);
var c=[];
for(var x=0;x<3;x++){
c[x]=parseInt(b[x]+((a[x]-b[x])*_5db));
}
return c;
};
dojo.gfx.color.blendHex=function(a,b,_5e0){
return dojo.gfx.color.rgb2hex(dojo.gfx.color.blend(dojo.gfx.color.hex2rgb(a),dojo.gfx.color.hex2rgb(b),_5e0));
};
dojo.gfx.color.extractRGB=function(_5e1){
var hex="0123456789abcdef";
_5e1=_5e1.toLowerCase();
if(_5e1.indexOf("rgb")==0){
var _5e3=_5e1.match(/rgba*\((\d+), *(\d+), *(\d+)/i);
var ret=_5e3.splice(1,3);
return ret;
}else{
var _5e5=dojo.gfx.color.hex2rgb(_5e1);
if(_5e5){
return _5e5;
}else{
return dojo.gfx.color.named[_5e1]||[255,255,255];
}
}
};
dojo.gfx.color.hex2rgb=function(hex){
var _5e7="0123456789ABCDEF";
var rgb=new Array(3);
if(hex.indexOf("#")==0){
hex=hex.substring(1);
}
hex=hex.toUpperCase();
if(hex.replace(new RegExp("["+_5e7+"]","g"),"")!=""){
return null;
}
if(hex.length==3){
rgb[0]=hex.charAt(0)+hex.charAt(0);
rgb[1]=hex.charAt(1)+hex.charAt(1);
rgb[2]=hex.charAt(2)+hex.charAt(2);
}else{
rgb[0]=hex.substring(0,2);
rgb[1]=hex.substring(2,4);
rgb[2]=hex.substring(4);
}
for(var i=0;i<rgb.length;i++){
rgb[i]=_5e7.indexOf(rgb[i].charAt(0))*16+_5e7.indexOf(rgb[i].charAt(1));
}
return rgb;
};
dojo.gfx.color.rgb2hex=function(r,g,b){
if(dojo.lang.isArray(r)){
g=r[1]||0;
b=r[2]||0;
r=r[0]||0;
}
var ret=dojo.lang.map([r,g,b],function(x){
x=new Number(x);
var s=x.toString(16);
while(s.length<2){
s="0"+s;
}
return s;
});
ret.unshift("#");
return ret.join("");
};
dojo.provide("dojo.lfx.Animation");
dojo.lfx.Line=function(_5f0,end){
this.start=_5f0;
this.end=end;
if(dojo.lang.isArray(_5f0)){
var diff=[];
dojo.lang.forEach(this.start,function(s,i){
diff[i]=this.end[i]-s;
},this);
this.getValue=function(n){
var res=[];
dojo.lang.forEach(this.start,function(s,i){
res[i]=(diff[i]*n)+s;
},this);
return res;
};
}else{
var diff=end-_5f0;
this.getValue=function(n){
return (diff*n)+this.start;
};
}
};
dojo.lfx.easeDefault=function(n){
if(dojo.render.html.khtml){
return (parseFloat("0.5")+((Math.sin((n+parseFloat("1.5"))*Math.PI))/2));
}else{
return (0.5+((Math.sin((n+1.5)*Math.PI))/2));
}
};
dojo.lfx.easeIn=function(n){
return Math.pow(n,3);
};
dojo.lfx.easeOut=function(n){
return (1-Math.pow(1-n,3));
};
dojo.lfx.easeInOut=function(n){
return ((3*Math.pow(n,2))-(2*Math.pow(n,3)));
};
dojo.lfx.IAnimation=function(){
};
dojo.lang.extend(dojo.lfx.IAnimation,{curve:null,duration:1000,easing:null,repeatCount:0,rate:25,handler:null,beforeBegin:null,onBegin:null,onAnimate:null,onEnd:null,onPlay:null,onPause:null,onStop:null,play:null,pause:null,stop:null,connect:function(evt,_5ff,_600){
if(!_600){
_600=_5ff;
_5ff=this;
}
_600=dojo.lang.hitch(_5ff,_600);
var _601=this[evt]||function(){
};
this[evt]=function(){
var ret=_601.apply(this,arguments);
_600.apply(this,arguments);
return ret;
};
return this;
},fire:function(evt,args){
if(this[evt]){
this[evt].apply(this,(args||[]));
}
return this;
},repeat:function(_605){
this.repeatCount=_605;
return this;
},_active:false,_paused:false});
dojo.lfx.Animation=function(_606,_607,_608,_609,_60a,rate){
dojo.lfx.IAnimation.call(this);
if(dojo.lang.isNumber(_606)||(!_606&&_607.getValue)){
rate=_60a;
_60a=_609;
_609=_608;
_608=_607;
_607=_606;
_606=null;
}else{
if(_606.getValue||dojo.lang.isArray(_606)){
rate=_609;
_60a=_608;
_609=_607;
_608=_606;
_607=null;
_606=null;
}
}
if(dojo.lang.isArray(_608)){
this.curve=new dojo.lfx.Line(_608[0],_608[1]);
}else{
this.curve=_608;
}
if(_607!=null&&_607>0){
this.duration=_607;
}
if(_60a){
this.repeatCount=_60a;
}
if(rate){
this.rate=rate;
}
if(_606){
dojo.lang.forEach(["handler","beforeBegin","onBegin","onEnd","onPlay","onStop","onAnimate"],function(item){
if(_606[item]){
this.connect(item,_606[item]);
}
},this);
}
if(_609&&dojo.lang.isFunction(_609)){
this.easing=_609;
}
};
dojo.inherits(dojo.lfx.Animation,dojo.lfx.IAnimation);
dojo.lang.extend(dojo.lfx.Animation,{_startTime:null,_endTime:null,_timer:null,_percent:0,_startRepeatCount:0,play:function(_60d,_60e){
if(_60e){
clearTimeout(this._timer);
this._active=false;
this._paused=false;
this._percent=0;
}else{
if(this._active&&!this._paused){
return this;
}
}
this.fire("handler",["beforeBegin"]);
this.fire("beforeBegin");
if(_60d>0){
setTimeout(dojo.lang.hitch(this,function(){
this.play(null,_60e);
}),_60d);
return this;
}
this._startTime=new Date().valueOf();
if(this._paused){
this._startTime-=(this.duration*this._percent/100);
}
this._endTime=this._startTime+this.duration;
this._active=true;
this._paused=false;
var step=this._percent/100;
var _610=this.curve.getValue(step);
if(this._percent==0){
if(!this._startRepeatCount){
this._startRepeatCount=this.repeatCount;
}
this.fire("handler",["begin",_610]);
this.fire("onBegin",[_610]);
}
this.fire("handler",["play",_610]);
this.fire("onPlay",[_610]);
this._cycle();
return this;
},pause:function(){
clearTimeout(this._timer);
if(!this._active){
return this;
}
this._paused=true;
var _611=this.curve.getValue(this._percent/100);
this.fire("handler",["pause",_611]);
this.fire("onPause",[_611]);
return this;
},gotoPercent:function(pct,_613){
clearTimeout(this._timer);
this._active=true;
this._paused=true;
this._percent=pct;
if(_613){
this.play();
}
return this;
},stop:function(_614){
clearTimeout(this._timer);
var step=this._percent/100;
if(_614){
step=1;
}
var _616=this.curve.getValue(step);
this.fire("handler",["stop",_616]);
this.fire("onStop",[_616]);
this._active=false;
this._paused=false;
return this;
},status:function(){
if(this._active){
return this._paused?"paused":"playing";
}else{
return "stopped";
}
return this;
},_cycle:function(){
clearTimeout(this._timer);
if(this._active){
var curr=new Date().valueOf();
var step=(curr-this._startTime)/(this._endTime-this._startTime);
if(step>=1){
step=1;
this._percent=100;
}else{
this._percent=step*100;
}
if((this.easing)&&(dojo.lang.isFunction(this.easing))){
step=this.easing(step);
}
var _619=this.curve.getValue(step);
this.fire("handler",["animate",_619]);
this.fire("onAnimate",[_619]);
if(step<1){
this._timer=setTimeout(dojo.lang.hitch(this,"_cycle"),this.rate);
}else{
this._active=false;
this.fire("handler",["end"]);
this.fire("onEnd");
if(this.repeatCount>0){
this.repeatCount--;
this.play(null,true);
}else{
if(this.repeatCount==-1){
this.play(null,true);
}else{
if(this._startRepeatCount){
this.repeatCount=this._startRepeatCount;
this._startRepeatCount=0;
}
}
}
}
}
return this;
}});
dojo.lfx.Combine=function(_61a){
dojo.lfx.IAnimation.call(this);
this._anims=[];
this._animsEnded=0;
var _61b=arguments;
if(_61b.length==1&&(dojo.lang.isArray(_61b[0])||dojo.lang.isArrayLike(_61b[0]))){
_61b=_61b[0];
}
dojo.lang.forEach(_61b,function(anim){
this._anims.push(anim);
anim.connect("onEnd",dojo.lang.hitch(this,"_onAnimsEnded"));
},this);
};
dojo.inherits(dojo.lfx.Combine,dojo.lfx.IAnimation);
dojo.lang.extend(dojo.lfx.Combine,{_animsEnded:0,play:function(_61d,_61e){
if(!this._anims.length){
return this;
}
this.fire("beforeBegin");
if(_61d>0){
setTimeout(dojo.lang.hitch(this,function(){
this.play(null,_61e);
}),_61d);
return this;
}
if(_61e||this._anims[0].percent==0){
this.fire("onBegin");
}
this.fire("onPlay");
this._animsCall("play",null,_61e);
return this;
},pause:function(){
this.fire("onPause");
this._animsCall("pause");
return this;
},stop:function(_61f){
this.fire("onStop");
this._animsCall("stop",_61f);
return this;
},_onAnimsEnded:function(){
this._animsEnded++;
if(this._animsEnded>=this._anims.length){
this.fire("onEnd");
}
return this;
},_animsCall:function(_620){
var args=[];
if(arguments.length>1){
for(var i=1;i<arguments.length;i++){
args.push(arguments[i]);
}
}
var _623=this;
dojo.lang.forEach(this._anims,function(anim){
anim[_620](args);
},_623);
return this;
}});
dojo.lfx.Chain=function(_625){
dojo.lfx.IAnimation.call(this);
this._anims=[];
this._currAnim=-1;
var _626=arguments;
if(_626.length==1&&(dojo.lang.isArray(_626[0])||dojo.lang.isArrayLike(_626[0]))){
_626=_626[0];
}
var _627=this;
dojo.lang.forEach(_626,function(anim,i,_62a){
this._anims.push(anim);
if(i<_62a.length-1){
anim.connect("onEnd",dojo.lang.hitch(this,"_playNext"));
}else{
anim.connect("onEnd",dojo.lang.hitch(this,function(){
this.fire("onEnd");
}));
}
},this);
};
dojo.inherits(dojo.lfx.Chain,dojo.lfx.IAnimation);
dojo.lang.extend(dojo.lfx.Chain,{_currAnim:-1,play:function(_62b,_62c){
if(!this._anims.length){
return this;
}
if(_62c||!this._anims[this._currAnim]){
this._currAnim=0;
}
var _62d=this._anims[this._currAnim];
this.fire("beforeBegin");
if(_62b>0){
setTimeout(dojo.lang.hitch(this,function(){
this.play(null,_62c);
}),_62b);
return this;
}
if(_62d){
if(this._currAnim==0){
this.fire("handler",["begin",this._currAnim]);
this.fire("onBegin",[this._currAnim]);
}
this.fire("onPlay",[this._currAnim]);
_62d.play(null,_62c);
}
return this;
},pause:function(){
if(this._anims[this._currAnim]){
this._anims[this._currAnim].pause();
this.fire("onPause",[this._currAnim]);
}
return this;
},playPause:function(){
if(this._anims.length==0){
return this;
}
if(this._currAnim==-1){
this._currAnim=0;
}
var _62e=this._anims[this._currAnim];
if(_62e){
if(!_62e._active||_62e._paused){
this.play();
}else{
this.pause();
}
}
return this;
},stop:function(){
var _62f=this._anims[this._currAnim];
if(_62f){
_62f.stop();
this.fire("onStop",[this._currAnim]);
}
return _62f;
},_playNext:function(){
if(this._currAnim==-1||this._anims.length==0){
return this;
}
this._currAnim++;
if(this._anims[this._currAnim]){
this._anims[this._currAnim].play(null,true);
}
return this;
}});
dojo.lfx.combine=function(_630){
var _631=arguments;
if(dojo.lang.isArray(arguments[0])){
_631=arguments[0];
}
if(_631.length==1){
return _631[0];
}
return new dojo.lfx.Combine(_631);
};
dojo.lfx.chain=function(_632){
var _633=arguments;
if(dojo.lang.isArray(arguments[0])){
_633=arguments[0];
}
if(_633.length==1){
return _633[0];
}
return new dojo.lfx.Chain(_633);
};
dojo.provide("dojo.html.color");
dojo.html.getBackgroundColor=function(node){
node=dojo.byId(node);
var _635;
do{
_635=dojo.html.getStyle(node,"background-color");
if(_635.toLowerCase()=="rgba(0, 0, 0, 0)"){
_635="transparent";
}
if(node==document.getElementsByTagName("body")[0]){
node=null;
break;
}
node=node.parentNode;
}while(node&&dojo.lang.inArray(["transparent",""],_635));
if(_635=="transparent"){
_635=[255,255,255,0];
}else{
_635=dojo.gfx.color.extractRGB(_635);
}
return _635;
};
dojo.provide("dojo.lfx.html");
dojo.lfx.html._byId=function(_636){
if(!_636){
return [];
}
if(dojo.lang.isArrayLike(_636)){
if(!_636.alreadyChecked){
var n=[];
dojo.lang.forEach(_636,function(node){
n.push(dojo.byId(node));
});
n.alreadyChecked=true;
return n;
}else{
return _636;
}
}else{
var n=[];
n.push(dojo.byId(_636));
n.alreadyChecked=true;
return n;
}
};
dojo.lfx.html.propertyAnimation=function(_639,_63a,_63b,_63c,_63d){
_639=dojo.lfx.html._byId(_639);
var _63e={"propertyMap":_63a,"nodes":_639,"duration":_63b,"easing":_63c||dojo.lfx.easeDefault};
var _63f=function(args){
if(args.nodes.length==1){
var pm=args.propertyMap;
if(!dojo.lang.isArray(args.propertyMap)){
var parr=[];
for(var _643 in pm){
pm[_643].property=_643;
parr.push(pm[_643]);
}
pm=args.propertyMap=parr;
}
dojo.lang.forEach(pm,function(prop){
if(dj_undef("start",prop)){
if(prop.property!="opacity"){
prop.start=parseInt(dojo.html.getComputedStyle(args.nodes[0],prop.property));
}else{
prop.start=dojo.html.getOpacity(args.nodes[0]);
}
}
});
}
};
var _645=function(_646){
var _647=[];
dojo.lang.forEach(_646,function(c){
_647.push(Math.round(c));
});
return _647;
};
var _649=function(n,_64b){
n=dojo.byId(n);
if(!n||!n.style){
return;
}
for(var s in _64b){
try{
if(s=="opacity"){
dojo.html.setOpacity(n,_64b[s]);
}else{
n.style[s]=_64b[s];
}
}
catch(e){
dojo.debug(e);
}
}
};
var _64d=function(_64e){
this._properties=_64e;
this.diffs=new Array(_64e.length);
dojo.lang.forEach(_64e,function(prop,i){
if(dojo.lang.isFunction(prop.start)){
prop.start=prop.start(prop,i);
}
if(dojo.lang.isFunction(prop.end)){
prop.end=prop.end(prop,i);
}
if(dojo.lang.isArray(prop.start)){
this.diffs[i]=null;
}else{
if(prop.start instanceof dojo.gfx.color.Color){
prop.startRgb=prop.start.toRgb();
prop.endRgb=prop.end.toRgb();
}else{
this.diffs[i]=prop.end-prop.start;
}
}
},this);
this.getValue=function(n){
var ret={};
dojo.lang.forEach(this._properties,function(prop,i){
var _655=null;
if(dojo.lang.isArray(prop.start)){
}else{
if(prop.start instanceof dojo.gfx.color.Color){
_655=(prop.units||"rgb")+"(";
for(var j=0;j<prop.startRgb.length;j++){
_655+=Math.round(((prop.endRgb[j]-prop.startRgb[j])*n)+prop.startRgb[j])+(j<prop.startRgb.length-1?",":"");
}
_655+=")";
}else{
_655=((this.diffs[i])*n)+prop.start+(prop.property!="opacity"?prop.units||"px":"");
}
}
ret[dojo.html.toCamelCase(prop.property)]=_655;
},this);
return ret;
};
};
var anim=new dojo.lfx.Animation({beforeBegin:function(){
_63f(_63e);
anim.curve=new _64d(_63e.propertyMap);
},onAnimate:function(_658){
dojo.lang.forEach(_63e.nodes,function(node){
_649(node,_658);
});
}},_63e.duration,null,_63e.easing);
if(_63d){
for(var x in _63d){
if(dojo.lang.isFunction(_63d[x])){
anim.connect(x,anim,_63d[x]);
}
}
}
return anim;
};
dojo.lfx.html._makeFadeable=function(_65b){
var _65c=function(node){
if(dojo.render.html.ie){
if((node.style.zoom.length==0)&&(dojo.html.getStyle(node,"zoom")=="normal")){
node.style.zoom="1";
}
if((node.style.width.length==0)&&(dojo.html.getStyle(node,"width")=="auto")){
node.style.width="auto";
}
}
};
if(dojo.lang.isArrayLike(_65b)){
dojo.lang.forEach(_65b,_65c);
}else{
_65c(_65b);
}
};
dojo.lfx.html.fade=function(_65e,_65f,_660,_661,_662){
_65e=dojo.lfx.html._byId(_65e);
var _663={property:"opacity"};
if(!dj_undef("start",_65f)){
_663.start=_65f.start;
}else{
_663.start=function(){
return dojo.html.getOpacity(_65e[0]);
};
}
if(!dj_undef("end",_65f)){
_663.end=_65f.end;
}else{
dojo.raise("dojo.lfx.html.fade needs an end value");
}
var anim=dojo.lfx.propertyAnimation(_65e,[_663],_660,_661);
anim.connect("beforeBegin",function(){
dojo.lfx.html._makeFadeable(_65e);
});
if(_662){
anim.connect("onEnd",function(){
_662(_65e,anim);
});
}
return anim;
};
dojo.lfx.html.fadeIn=function(_665,_666,_667,_668){
return dojo.lfx.html.fade(_665,{end:1},_666,_667,_668);
};
dojo.lfx.html.fadeOut=function(_669,_66a,_66b,_66c){
return dojo.lfx.html.fade(_669,{end:0},_66a,_66b,_66c);
};
dojo.lfx.html.fadeShow=function(_66d,_66e,_66f,_670){
_66d=dojo.lfx.html._byId(_66d);
dojo.lang.forEach(_66d,function(node){
dojo.html.setOpacity(node,0);
});
var anim=dojo.lfx.html.fadeIn(_66d,_66e,_66f,_670);
anim.connect("beforeBegin",function(){
if(dojo.lang.isArrayLike(_66d)){
dojo.lang.forEach(_66d,dojo.html.show);
}else{
dojo.html.show(_66d);
}
});
return anim;
};
dojo.lfx.html.fadeHide=function(_673,_674,_675,_676){
var anim=dojo.lfx.html.fadeOut(_673,_674,_675,function(){
if(dojo.lang.isArrayLike(_673)){
dojo.lang.forEach(_673,dojo.html.hide);
}else{
dojo.html.hide(_673);
}
if(_676){
_676(_673,anim);
}
});
return anim;
};
dojo.lfx.html.wipeIn=function(_678,_679,_67a,_67b){
_678=dojo.lfx.html._byId(_678);
var _67c=[];
dojo.lang.forEach(_678,function(node){
var _67e={};
var _67f,_680,_681;
with(node.style){
_67f=top;
_680=left;
_681=position;
top="-9999px";
left="-9999px";
position="absolute";
display="";
}
var _682=dojo.html.getBorderBox(node).height;
with(node.style){
top=_67f;
left=_680;
position=_681;
display="none";
}
var anim=dojo.lfx.propertyAnimation(node,{"height":{start:1,end:function(){
return _682;
}}},_679,_67a);
anim.connect("beforeBegin",function(){
_67e.overflow=node.style.overflow;
_67e.height=node.style.height;
with(node.style){
overflow="hidden";
_682="1px";
}
dojo.html.show(node);
});
anim.connect("onEnd",function(){
with(node.style){
overflow=_67e.overflow;
_682=_67e.height;
}
if(_67b){
_67b(node,anim);
}
});
_67c.push(anim);
});
return dojo.lfx.combine(_67c);
};
dojo.lfx.html.wipeOut=function(_684,_685,_686,_687){
_684=dojo.lfx.html._byId(_684);
var _688=[];
dojo.lang.forEach(_684,function(node){
var _68a={};
var anim=dojo.lfx.propertyAnimation(node,{"height":{start:function(){
return dojo.html.getContentBox(node).height;
},end:1}},_685,_686,{"beforeBegin":function(){
_68a.overflow=node.style.overflow;
_68a.height=node.style.height;
with(node.style){
overflow="hidden";
}
dojo.html.show(node);
},"onEnd":function(){
dojo.html.hide(node);
with(node.style){
overflow=_68a.overflow;
height=_68a.height;
}
if(_687){
_687(node,anim);
}
}});
_688.push(anim);
});
return dojo.lfx.combine(_688);
};
dojo.lfx.html.slideTo=function(_68c,_68d,_68e,_68f,_690){
_68c=dojo.lfx.html._byId(_68c);
var _691=[];
var _692=dojo.html.getComputedStyle;
if(dojo.lang.isArray(_68d)){
dojo.deprecated("dojo.lfx.html.slideTo(node, array)","use dojo.lfx.html.slideTo(node, {top: value, left: value});","0.5");
_68d={top:_68d[0],left:_68d[1]};
}
dojo.lang.forEach(_68c,function(node){
var top=null;
var left=null;
var init=(function(){
var _697=node;
return function(){
var pos=_692(_697,"position");
top=(pos=="absolute"?node.offsetTop:parseInt(_692(node,"top"))||0);
left=(pos=="absolute"?node.offsetLeft:parseInt(_692(node,"left"))||0);
if(!dojo.lang.inArray(["absolute","relative"],pos)){
var ret=dojo.html.abs(_697,true);
dojo.html.setStyleAttributes(_697,"position:absolute;top:"+ret.y+"px;left:"+ret.x+"px;");
top=ret.y;
left=ret.x;
}
};
})();
init();
var anim=dojo.lfx.propertyAnimation(node,{"top":{start:top,end:(_68d.top||0)},"left":{start:left,end:(_68d.left||0)}},_68e,_68f,{"beforeBegin":init});
if(_690){
anim.connect("onEnd",function(){
_690(_68c,anim);
});
}
_691.push(anim);
});
return dojo.lfx.combine(_691);
};
dojo.lfx.html.slideBy=function(_69b,_69c,_69d,_69e,_69f){
_69b=dojo.lfx.html._byId(_69b);
var _6a0=[];
var _6a1=dojo.html.getComputedStyle;
if(dojo.lang.isArray(_69c)){
dojo.deprecated("dojo.lfx.html.slideBy(node, array)","use dojo.lfx.html.slideBy(node, {top: value, left: value});","0.5");
_69c={top:_69c[0],left:_69c[1]};
}
dojo.lang.forEach(_69b,function(node){
var top=null;
var left=null;
var init=(function(){
var _6a6=node;
return function(){
var pos=_6a1(_6a6,"position");
top=(pos=="absolute"?node.offsetTop:parseInt(_6a1(node,"top"))||0);
left=(pos=="absolute"?node.offsetLeft:parseInt(_6a1(node,"left"))||0);
if(!dojo.lang.inArray(["absolute","relative"],pos)){
var ret=dojo.html.abs(_6a6,true);
dojo.html.setStyleAttributes(_6a6,"position:absolute;top:"+ret.y+"px;left:"+ret.x+"px;");
top=ret.y;
left=ret.x;
}
};
})();
init();
var anim=dojo.lfx.propertyAnimation(node,{"top":{start:top,end:top+(_69c.top||0)},"left":{start:left,end:left+(_69c.left||0)}},_69d,_69e).connect("beforeBegin",init);
if(_69f){
anim.connect("onEnd",function(){
_69f(_69b,anim);
});
}
_6a0.push(anim);
});
return dojo.lfx.combine(_6a0);
};
dojo.lfx.html.explode=function(_6aa,_6ab,_6ac,_6ad,_6ae){
var h=dojo.html;
_6aa=dojo.byId(_6aa);
_6ab=dojo.byId(_6ab);
var _6b0=h.toCoordinateObject(_6aa,true);
var _6b1=document.createElement("div");
h.copyStyle(_6b1,_6ab);
if(_6ab.explodeClassName){
_6b1.className=_6ab.explodeClassName;
}
with(_6b1.style){
position="absolute";
display="none";
var _6b2=h.getStyle(_6aa,"background-color");
backgroundColor=_6b2?_6b2.toLowerCase():"transparent";
backgroundColor=(backgroundColor=="transparent")?"rgb(221, 221, 221)":backgroundColor;
}
dojo.body().appendChild(_6b1);
with(_6ab.style){
visibility="hidden";
display="block";
}
var _6b3=h.toCoordinateObject(_6ab,true);
with(_6ab.style){
display="none";
visibility="visible";
}
var _6b4={opacity:{start:0.5,end:1}};
dojo.lang.forEach(["height","width","top","left"],function(type){
_6b4[type]={start:_6b0[type],end:_6b3[type]};
});
var anim=new dojo.lfx.propertyAnimation(_6b1,_6b4,_6ac,_6ad,{"beforeBegin":function(){
h.setDisplay(_6b1,"block");
},"onEnd":function(){
h.setDisplay(_6ab,"block");
_6b1.parentNode.removeChild(_6b1);
}});
if(_6ae){
anim.connect("onEnd",function(){
_6ae(_6ab,anim);
});
}
return anim;
};
dojo.lfx.html.implode=function(_6b7,end,_6b9,_6ba,_6bb){
var h=dojo.html;
_6b7=dojo.byId(_6b7);
end=dojo.byId(end);
var _6bd=dojo.html.toCoordinateObject(_6b7,true);
var _6be=dojo.html.toCoordinateObject(end,true);
var _6bf=document.createElement("div");
dojo.html.copyStyle(_6bf,_6b7);
if(_6b7.explodeClassName){
_6bf.className=_6b7.explodeClassName;
}
dojo.html.setOpacity(_6bf,0.3);
with(_6bf.style){
position="absolute";
display="none";
backgroundColor=h.getStyle(_6b7,"background-color").toLowerCase();
}
dojo.body().appendChild(_6bf);
var _6c0={opacity:{start:1,end:0.5}};
dojo.lang.forEach(["height","width","top","left"],function(type){
_6c0[type]={start:_6bd[type],end:_6be[type]};
});
var anim=new dojo.lfx.propertyAnimation(_6bf,_6c0,_6b9,_6ba,{"beforeBegin":function(){
dojo.html.hide(_6b7);
dojo.html.show(_6bf);
},"onEnd":function(){
_6bf.parentNode.removeChild(_6bf);
}});
if(_6bb){
anim.connect("onEnd",function(){
_6bb(_6b7,anim);
});
}
return anim;
};
dojo.lfx.html.highlight=function(_6c3,_6c4,_6c5,_6c6,_6c7){
_6c3=dojo.lfx.html._byId(_6c3);
var _6c8=[];
dojo.lang.forEach(_6c3,function(node){
var _6ca=dojo.html.getBackgroundColor(node);
var bg=dojo.html.getStyle(node,"background-color").toLowerCase();
var _6cc=dojo.html.getStyle(node,"background-image");
var _6cd=(bg=="transparent"||bg=="rgba(0, 0, 0, 0)");
while(_6ca.length>3){
_6ca.pop();
}
var rgb=new dojo.gfx.color.Color(_6c4);
var _6cf=new dojo.gfx.color.Color(_6ca);
var anim=dojo.lfx.propertyAnimation(node,{"background-color":{start:rgb,end:_6cf}},_6c5,_6c6,{"beforeBegin":function(){
if(_6cc){
node.style.backgroundImage="none";
}
node.style.backgroundColor="rgb("+rgb.toRgb().join(",")+")";
},"onEnd":function(){
if(_6cc){
node.style.backgroundImage=_6cc;
}
if(_6cd){
node.style.backgroundColor="transparent";
}
if(_6c7){
_6c7(node,anim);
}
}});
_6c8.push(anim);
});
return dojo.lfx.combine(_6c8);
};
dojo.lfx.html.unhighlight=function(_6d1,_6d2,_6d3,_6d4,_6d5){
_6d1=dojo.lfx.html._byId(_6d1);
var _6d6=[];
dojo.lang.forEach(_6d1,function(node){
var _6d8=new dojo.gfx.color.Color(dojo.html.getBackgroundColor(node));
var rgb=new dojo.gfx.color.Color(_6d2);
var _6da=dojo.html.getStyle(node,"background-image");
var anim=dojo.lfx.propertyAnimation(node,{"background-color":{start:_6d8,end:rgb}},_6d3,_6d4,{"beforeBegin":function(){
if(_6da){
node.style.backgroundImage="none";
}
node.style.backgroundColor="rgb("+_6d8.toRgb().join(",")+")";
},"onEnd":function(){
if(_6d5){
_6d5(node,anim);
}
}});
_6d6.push(anim);
});
return dojo.lfx.combine(_6d6);
};
dojo.lang.mixin(dojo.lfx,dojo.lfx.html);
dojo.provide("dojo.lfx.*");
dojo.provide("dojo.lfx.toggle");
dojo.lfx.toggle.plain={show:function(node,_6dd,_6de,_6df){
dojo.html.show(node);
if(dojo.lang.isFunction(_6df)){
_6df();
}
},hide:function(node,_6e1,_6e2,_6e3){
dojo.html.hide(node);
if(dojo.lang.isFunction(_6e3)){
_6e3();
}
}};
dojo.lfx.toggle.fade={show:function(node,_6e5,_6e6,_6e7){
dojo.lfx.fadeShow(node,_6e5,_6e6,_6e7).play();
},hide:function(node,_6e9,_6ea,_6eb){
dojo.lfx.fadeHide(node,_6e9,_6ea,_6eb).play();
}};
dojo.lfx.toggle.wipe={show:function(node,_6ed,_6ee,_6ef){
dojo.lfx.wipeIn(node,_6ed,_6ee,_6ef).play();
},hide:function(node,_6f1,_6f2,_6f3){
dojo.lfx.wipeOut(node,_6f1,_6f2,_6f3).play();
}};
dojo.lfx.toggle.explode={show:function(node,_6f5,_6f6,_6f7,_6f8){
dojo.lfx.explode(_6f8||{x:0,y:0,width:0,height:0},node,_6f5,_6f6,_6f7).play();
},hide:function(node,_6fa,_6fb,_6fc,_6fd){
dojo.lfx.implode(node,_6fd||{x:0,y:0,width:0,height:0},_6fa,_6fb,_6fc).play();
}};
dojo.provide("dojo.widget.HtmlWidget");
dojo.declare("dojo.widget.HtmlWidget",dojo.widget.DomWidget,{templateCssPath:null,templatePath:null,lang:"",toggle:"plain",toggleDuration:150,initialize:function(args,frag){
},postMixInProperties:function(args,frag){
if(this.lang===""){
this.lang=null;
}
this.toggleObj=dojo.lfx.toggle[this.toggle.toLowerCase()]||dojo.lfx.toggle.plain;
},createNodesFromText:function(txt,wrap){
return dojo.html.createNodesFromText(txt,wrap);
},destroyRendering:function(_704){
try{
if(this.bgIframe){
this.bgIframe.remove();
delete this.bgIframe;
}
if(!_704&&this.domNode){
dojo.event.browser.clean(this.domNode);
}
dojo.widget.HtmlWidget.superclass.destroyRendering.call(this);
}
catch(e){
}
},isShowing:function(){
return dojo.html.isShowing(this.domNode);
},toggleShowing:function(){
if(this.isShowing()){
this.hide();
}else{
this.show();
}
},show:function(){
if(this.isShowing()){
return;
}
this.animationInProgress=true;
this.toggleObj.show(this.domNode,this.toggleDuration,null,dojo.lang.hitch(this,this.onShow),this.explodeSrc);
},onShow:function(){
this.animationInProgress=false;
this.checkSize();
},hide:function(){
if(!this.isShowing()){
return;
}
this.animationInProgress=true;
this.toggleObj.hide(this.domNode,this.toggleDuration,null,dojo.lang.hitch(this,this.onHide),this.explodeSrc);
},onHide:function(){
this.animationInProgress=false;
},_isResized:function(w,h){
if(!this.isShowing()){
return false;
}
var wh=dojo.html.getMarginBox(this.domNode);
var _708=w||wh.width;
var _709=h||wh.height;
if(this.width==_708&&this.height==_709){
return false;
}
this.width=_708;
this.height=_709;
return true;
},checkSize:function(){
if(!this._isResized()){
return;
}
this.onResized();
},resizeTo:function(w,h){
dojo.html.setMarginBox(this.domNode,{width:w,height:h});
if(this.isShowing()){
this.onResized();
}
},resizeSoon:function(){
if(this.isShowing()){
dojo.lang.setTimeout(this,this.onResized,0);
}
},onResized:function(){
dojo.lang.forEach(this.children,function(_70c){
if(_70c.checkSize){
_70c.checkSize();
}
});
}});
dojo.provide("dojo.widget.*");
dojo.provide("dojo.string.common");
dojo.string.trim=function(str,wh){
if(!str.replace){
return str;
}
if(!str.length){
return str;
}
var re=(wh>0)?(/^\s+/):(wh<0)?(/\s+$/):(/^\s+|\s+$/g);
return str.replace(re,"");
};
dojo.string.trimStart=function(str){
return dojo.string.trim(str,1);
};
dojo.string.trimEnd=function(str){
return dojo.string.trim(str,-1);
};
dojo.string.repeat=function(str,_713,_714){
var out="";
for(var i=0;i<_713;i++){
out+=str;
if(_714&&i<_713-1){
out+=_714;
}
}
return out;
};
dojo.string.pad=function(str,len,c,dir){
var out=String(str);
if(!c){
c="0";
}
if(!dir){
dir=1;
}
while(out.length<len){
if(dir>0){
out=c+out;
}else{
out+=c;
}
}
return out;
};
dojo.string.padLeft=function(str,len,c){
return dojo.string.pad(str,len,c,1);
};
dojo.string.padRight=function(str,len,c){
return dojo.string.pad(str,len,c,-1);
};
dojo.provide("dojo.string");
dojo.provide("dojo.io.common");
dojo.io.transports=[];
dojo.io.hdlrFuncNames=["load","error","timeout"];
dojo.io.Request=function(url,_723,_724,_725){
if((arguments.length==1)&&(arguments[0].constructor==Object)){
this.fromKwArgs(arguments[0]);
}else{
this.url=url;
if(_723){
this.mimetype=_723;
}
if(_724){
this.transport=_724;
}
if(arguments.length>=4){
this.changeUrl=_725;
}
}
};
dojo.lang.extend(dojo.io.Request,{url:"",mimetype:"text/plain",method:"GET",content:undefined,transport:undefined,changeUrl:undefined,formNode:undefined,sync:false,bindSuccess:false,useCache:false,preventCache:false,load:function(type,data,_728,_729){
},error:function(type,_72b,_72c,_72d){
},timeout:function(type,_72f,_730,_731){
},handle:function(type,data,_734,_735){
},timeoutSeconds:0,abort:function(){
},fromKwArgs:function(_736){
if(_736["url"]){
_736.url=_736.url.toString();
}
if(_736["formNode"]){
_736.formNode=dojo.byId(_736.formNode);
}
if(!_736["method"]&&_736["formNode"]&&_736["formNode"].method){
_736.method=_736["formNode"].method;
}
if(!_736["handle"]&&_736["handler"]){
_736.handle=_736.handler;
}
if(!_736["load"]&&_736["loaded"]){
_736.load=_736.loaded;
}
if(!_736["changeUrl"]&&_736["changeURL"]){
_736.changeUrl=_736.changeURL;
}
_736.encoding=dojo.lang.firstValued(_736["encoding"],djConfig["bindEncoding"],"");
_736.sendTransport=dojo.lang.firstValued(_736["sendTransport"],djConfig["ioSendTransport"],false);
var _737=dojo.lang.isFunction;
for(var x=0;x<dojo.io.hdlrFuncNames.length;x++){
var fn=dojo.io.hdlrFuncNames[x];
if(_736[fn]&&_737(_736[fn])){
continue;
}
if(_736["handle"]&&_737(_736["handle"])){
_736[fn]=_736.handle;
}
}
dojo.lang.mixin(this,_736);
}});
dojo.io.Error=function(msg,type,num){
this.message=msg;
this.type=type||"unknown";
this.number=num||0;
};
dojo.io.transports.addTransport=function(name){
this.push(name);
this[name]=dojo.io[name];
};
dojo.io.bind=function(_73e){
if(!(_73e instanceof dojo.io.Request)){
try{
_73e=new dojo.io.Request(_73e);
}
catch(e){
dojo.debug(e);
}
}
var _73f="";
if(_73e["transport"]){
_73f=_73e["transport"];
if(!this[_73f]){
dojo.io.sendBindError(_73e,"No dojo.io.bind() transport with name '"+_73e["transport"]+"'.");
return _73e;
}
if(!this[_73f].canHandle(_73e)){
dojo.io.sendBindError(_73e,"dojo.io.bind() transport with name '"+_73e["transport"]+"' cannot handle this type of request.");
return _73e;
}
}else{
for(var x=0;x<dojo.io.transports.length;x++){
var tmp=dojo.io.transports[x];
if((this[tmp])&&(this[tmp].canHandle(_73e))){
_73f=tmp;
break;
}
}
if(_73f==""){
dojo.io.sendBindError(_73e,"None of the loaded transports for dojo.io.bind()"+" can handle the request.");
return _73e;
}
}
this[_73f].bind(_73e);
_73e.bindSuccess=true;
return _73e;
};
dojo.io.sendBindError=function(_742,_743){
if((typeof _742.error=="function"||typeof _742.handle=="function")&&(typeof setTimeout=="function"||typeof setTimeout=="object")){
var _744=new dojo.io.Error(_743);
setTimeout(function(){
_742[(typeof _742.error=="function")?"error":"handle"]("error",_744,null,_742);
},50);
}else{
dojo.raise(_743);
}
};
dojo.io.queueBind=function(_745){
if(!(_745 instanceof dojo.io.Request)){
try{
_745=new dojo.io.Request(_745);
}
catch(e){
dojo.debug(e);
}
}
var _746=_745.load;
_745.load=function(){
dojo.io._queueBindInFlight=false;
var ret=_746.apply(this,arguments);
dojo.io._dispatchNextQueueBind();
return ret;
};
var _748=_745.error;
_745.error=function(){
dojo.io._queueBindInFlight=false;
var ret=_748.apply(this,arguments);
dojo.io._dispatchNextQueueBind();
return ret;
};
dojo.io._bindQueue.push(_745);
dojo.io._dispatchNextQueueBind();
return _745;
};
dojo.io._dispatchNextQueueBind=function(){
if(!dojo.io._queueBindInFlight){
dojo.io._queueBindInFlight=true;
if(dojo.io._bindQueue.length>0){
dojo.io.bind(dojo.io._bindQueue.shift());
}else{
dojo.io._queueBindInFlight=false;
}
}
};
dojo.io._bindQueue=[];
dojo.io._queueBindInFlight=false;
dojo.io.argsFromMap=function(map,_74b,last){
var enc=/utf/i.test(_74b||"")?encodeURIComponent:dojo.string.encodeAscii;
var _74e=[];
var _74f=new Object();
for(var name in map){
var _751=function(elt){
var val=enc(name)+"="+enc(elt);
_74e[(last==name)?"push":"unshift"](val);
};
if(!_74f[name]){
var _754=map[name];
if(dojo.lang.isArray(_754)){
dojo.lang.forEach(_754,_751);
}else{
_751(_754);
}
}
}
return _74e.join("&");
};
dojo.io.setIFrameSrc=function(_755,src,_757){
try{
var r=dojo.render.html;
if(!_757){
if(r.safari){
_755.location=src;
}else{
frames[_755.name].location=src;
}
}else{
var idoc;
if(r.ie){
idoc=_755.contentWindow.document;
}else{
if(r.safari){
idoc=_755.document;
}else{
idoc=_755.contentWindow;
}
}
if(!idoc){
_755.location=src;
return;
}else{
idoc.location.replace(src);
}
}
}
catch(e){
dojo.debug(e);
dojo.debug("setIFrameSrc: "+e);
}
};
dojo.provide("dojo.string.extras");
dojo.string.substituteParams=function(_75a,hash){
var map=(typeof hash=="object")?hash:dojo.lang.toArray(arguments,1);
return _75a.replace(/\%\{(\w+)\}/g,function(_75d,key){
if(typeof (map[key])!="undefined"&&map[key]!=null){
return map[key];
}
dojo.raise("Substitution not found: "+key);
});
};
dojo.string.capitalize=function(str){
if(!dojo.lang.isString(str)){
return "";
}
if(arguments.length==0){
str=this;
}
var _760=str.split(" ");
for(var i=0;i<_760.length;i++){
_760[i]=_760[i].charAt(0).toUpperCase()+_760[i].substring(1);
}
return _760.join(" ");
};
dojo.string.isBlank=function(str){
if(!dojo.lang.isString(str)){
return true;
}
return (dojo.string.trim(str).length==0);
};
dojo.string.encodeAscii=function(str){
if(!dojo.lang.isString(str)){
return str;
}
var ret="";
var _765=escape(str);
var _766,re=/%u([0-9A-F]{4})/i;
while((_766=_765.match(re))){
var num=Number("0x"+_766[1]);
var _769=escape("&#"+num+";");
ret+=_765.substring(0,_766.index)+_769;
_765=_765.substring(_766.index+_766[0].length);
}
ret+=_765.replace(/\+/g,"%2B");
return ret;
};
dojo.string.escape=function(type,str){
var args=dojo.lang.toArray(arguments,1);
switch(type.toLowerCase()){
case "xml":
case "html":
case "xhtml":
return dojo.string.escapeXml.apply(this,args);
case "sql":
return dojo.string.escapeSql.apply(this,args);
case "regexp":
case "regex":
return dojo.string.escapeRegExp.apply(this,args);
case "javascript":
case "jscript":
case "js":
return dojo.string.escapeJavaScript.apply(this,args);
case "ascii":
return dojo.string.encodeAscii.apply(this,args);
default:
return str;
}
};
dojo.string.escapeXml=function(str,_76e){
str=str.replace(/&/gm,"&amp;").replace(/</gm,"&lt;").replace(/>/gm,"&gt;").replace(/"/gm,"&quot;");
if(!_76e){
str=str.replace(/'/gm,"&#39;");
}
return str;
};
dojo.string.escapeSql=function(str){
return str.replace(/'/gm,"''");
};
dojo.string.escapeRegExp=function(str){
return str.replace(/\\/gm,"\\\\").replace(/([\f\b\n\t\r[\^$|?*+(){}])/gm,"\\$1");
};
dojo.string.escapeJavaScript=function(str){
return str.replace(/(["'\f\b\n\t\r])/gm,"\\$1");
};
dojo.string.escapeString=function(str){
return ("\""+str.replace(/(["\\])/g,"\\$1")+"\"").replace(/[\f]/g,"\\f").replace(/[\b]/g,"\\b").replace(/[\n]/g,"\\n").replace(/[\t]/g,"\\t").replace(/[\r]/g,"\\r");
};
dojo.string.summary=function(str,len){
if(!len||str.length<=len){
return str;
}
return str.substring(0,len).replace(/\.+$/,"")+"...";
};
dojo.string.endsWith=function(str,end,_777){
if(_777){
str=str.toLowerCase();
end=end.toLowerCase();
}
if((str.length-end.length)<0){
return false;
}
return str.lastIndexOf(end)==str.length-end.length;
};
dojo.string.endsWithAny=function(str){
for(var i=1;i<arguments.length;i++){
if(dojo.string.endsWith(str,arguments[i])){
return true;
}
}
return false;
};
dojo.string.startsWith=function(str,_77b,_77c){
if(_77c){
str=str.toLowerCase();
_77b=_77b.toLowerCase();
}
return str.indexOf(_77b)==0;
};
dojo.string.startsWithAny=function(str){
for(var i=1;i<arguments.length;i++){
if(dojo.string.startsWith(str,arguments[i])){
return true;
}
}
return false;
};
dojo.string.has=function(str){
for(var i=1;i<arguments.length;i++){
if(str.indexOf(arguments[i])>-1){
return true;
}
}
return false;
};
dojo.string.normalizeNewlines=function(text,_782){
if(_782=="\n"){
text=text.replace(/\r\n/g,"\n");
text=text.replace(/\r/g,"\n");
}else{
if(_782=="\r"){
text=text.replace(/\r\n/g,"\r");
text=text.replace(/\n/g,"\r");
}else{
text=text.replace(/([^\r])\n/g,"$1\r\n").replace(/\r([^\n])/g,"\r\n$1");
}
}
return text;
};
dojo.string.splitEscaped=function(str,_784){
var _785=[];
for(var i=0,_787=0;i<str.length;i++){
if(str.charAt(i)=="\\"){
i++;
continue;
}
if(str.charAt(i)==_784){
_785.push(str.substring(_787,i));
_787=i+1;
}
}
_785.push(str.substr(_787));
return _785;
};
dojo.provide("dojo.undo.browser");
try{
if((!djConfig["preventBackButtonFix"])&&(!dojo.hostenv.post_load_)){
document.write("<iframe style='border: 0px; width: 1px; height: 1px; position: absolute; bottom: 0px; right: 0px; visibility: visible;' name='djhistory' id='djhistory' src='"+(dojo.hostenv.getBaseScriptUri()+"iframe_history.html")+"'></iframe>");
}
}
catch(e){
}
if(dojo.render.html.opera){
dojo.debug("Opera is not supported with dojo.undo.browser, so back/forward detection will not work.");
}
dojo.undo.browser={initialHref:(!dj_undef("window"))?window.location.href:"",initialHash:(!dj_undef("window"))?window.location.hash:"",moveForward:false,historyStack:[],forwardStack:[],historyIframe:null,bookmarkAnchor:null,locationTimer:null,setInitialState:function(args){
this.initialState=this._createState(this.initialHref,args,this.initialHash);
},addToHistory:function(args){
this.forwardStack=[];
var hash=null;
var url=null;
if(!this.historyIframe){
this.historyIframe=window.frames["djhistory"];
}
if(!this.bookmarkAnchor){
this.bookmarkAnchor=document.createElement("a");
dojo.body().appendChild(this.bookmarkAnchor);
this.bookmarkAnchor.style.display="none";
}
if(args["changeUrl"]){
hash="#"+((args["changeUrl"]!==true)?args["changeUrl"]:(new Date()).getTime());
if(this.historyStack.length==0&&this.initialState.urlHash==hash){
this.initialState=this._createState(url,args,hash);
return;
}else{
if(this.historyStack.length>0&&this.historyStack[this.historyStack.length-1].urlHash==hash){
this.historyStack[this.historyStack.length-1]=this._createState(url,args,hash);
return;
}
}
this.changingUrl=true;
setTimeout("window.location.href = '"+hash+"'; dojo.undo.browser.changingUrl = false;",1);
this.bookmarkAnchor.href=hash;
if(dojo.render.html.ie){
url=this._loadIframeHistory();
var _78c=args["back"]||args["backButton"]||args["handle"];
var tcb=function(_78e){
if(window.location.hash!=""){
setTimeout("window.location.href = '"+hash+"';",1);
}
_78c.apply(this,[_78e]);
};
if(args["back"]){
args.back=tcb;
}else{
if(args["backButton"]){
args.backButton=tcb;
}else{
if(args["handle"]){
args.handle=tcb;
}
}
}
var _78f=args["forward"]||args["forwardButton"]||args["handle"];
var tfw=function(_791){
if(window.location.hash!=""){
window.location.href=hash;
}
if(_78f){
_78f.apply(this,[_791]);
}
};
if(args["forward"]){
args.forward=tfw;
}else{
if(args["forwardButton"]){
args.forwardButton=tfw;
}else{
if(args["handle"]){
args.handle=tfw;
}
}
}
}else{
if(dojo.render.html.moz){
if(!this.locationTimer){
this.locationTimer=setInterval("dojo.undo.browser.checkLocation();",200);
}
}
}
}else{
url=this._loadIframeHistory();
}
this.historyStack.push(this._createState(url,args,hash));
},checkLocation:function(){
if(!this.changingUrl){
var hsl=this.historyStack.length;
if((window.location.hash==this.initialHash||window.location.href==this.initialHref)&&(hsl==1)){
this.handleBackButton();
return;
}
if(this.forwardStack.length>0){
if(this.forwardStack[this.forwardStack.length-1].urlHash==window.location.hash){
this.handleForwardButton();
return;
}
}
if((hsl>=2)&&(this.historyStack[hsl-2])){
if(this.historyStack[hsl-2].urlHash==window.location.hash){
this.handleBackButton();
return;
}
}
}
},iframeLoaded:function(evt,_794){
if(!dojo.render.html.opera){
var _795=this._getUrlQuery(_794.href);
if(_795==null){
if(this.historyStack.length==1){
this.handleBackButton();
}
return;
}
if(this.moveForward){
this.moveForward=false;
return;
}
if(this.historyStack.length>=2&&_795==this._getUrlQuery(this.historyStack[this.historyStack.length-2].url)){
this.handleBackButton();
}else{
if(this.forwardStack.length>0&&_795==this._getUrlQuery(this.forwardStack[this.forwardStack.length-1].url)){
this.handleForwardButton();
}
}
}
},handleBackButton:function(){
var _796=this.historyStack.pop();
if(!_796){
return;
}
var last=this.historyStack[this.historyStack.length-1];
if(!last&&this.historyStack.length==0){
last=this.initialState;
}
if(last){
if(last.kwArgs["back"]){
last.kwArgs["back"]();
}else{
if(last.kwArgs["backButton"]){
last.kwArgs["backButton"]();
}else{
if(last.kwArgs["handle"]){
last.kwArgs.handle("back");
}
}
}
}
this.forwardStack.push(_796);
},handleForwardButton:function(){
var last=this.forwardStack.pop();
if(!last){
return;
}
if(last.kwArgs["forward"]){
last.kwArgs.forward();
}else{
if(last.kwArgs["forwardButton"]){
last.kwArgs.forwardButton();
}else{
if(last.kwArgs["handle"]){
last.kwArgs.handle("forward");
}
}
}
this.historyStack.push(last);
},_createState:function(url,args,hash){
return {"url":url,"kwArgs":args,"urlHash":hash};
},_getUrlQuery:function(url){
var _79d=url.split("?");
if(_79d.length<2){
return null;
}else{
return _79d[1];
}
},_loadIframeHistory:function(){
var url=dojo.hostenv.getBaseScriptUri()+"iframe_history.html?"+(new Date()).getTime();
this.moveForward=true;
dojo.io.setIFrameSrc(this.historyIframe,url,false);
return url;
}};
dojo.provide("dojo.io.BrowserIO");
if(!dj_undef("window")){
dojo.io.checkChildrenForFile=function(node){
var _7a0=false;
var _7a1=node.getElementsByTagName("input");
dojo.lang.forEach(_7a1,function(_7a2){
if(_7a0){
return;
}
if(_7a2.getAttribute("type")=="file"){
_7a0=true;
}
});
return _7a0;
};
dojo.io.formHasFile=function(_7a3){
return dojo.io.checkChildrenForFile(_7a3);
};
dojo.io.updateNode=function(node,_7a5){
node=dojo.byId(node);
var args=_7a5;
if(dojo.lang.isString(_7a5)){
args={url:_7a5};
}
args.mimetype="text/html";
args.load=function(t,d,e){
while(node.firstChild){
dojo.dom.destroyNode(node.firstChild);
}
node.innerHTML=d;
};
dojo.io.bind(args);
};
dojo.io.formFilter=function(node){
var type=(node.type||"").toLowerCase();
return !node.disabled&&node.name&&!dojo.lang.inArray(["file","submit","image","reset","button"],type);
};
dojo.io.encodeForm=function(_7ac,_7ad,_7ae){
if((!_7ac)||(!_7ac.tagName)||(!_7ac.tagName.toLowerCase()=="form")){
dojo.raise("Attempted to encode a non-form element.");
}
if(!_7ae){
_7ae=dojo.io.formFilter;
}
var enc=/utf/i.test(_7ad||"")?encodeURIComponent:dojo.string.encodeAscii;
var _7b0=[];
for(var i=0;i<_7ac.elements.length;i++){
var elm=_7ac.elements[i];
if(!elm||elm.tagName.toLowerCase()=="fieldset"||!_7ae(elm)){
continue;
}
var name=enc(elm.name);
var type=elm.type.toLowerCase();
if(type=="select-multiple"){
for(var j=0;j<elm.options.length;j++){
if(elm.options[j].selected){
_7b0.push(name+"="+enc(elm.options[j].value));
}
}
}else{
if(dojo.lang.inArray(["radio","checkbox"],type)){
if(elm.checked){
_7b0.push(name+"="+enc(elm.value));
}
}else{
_7b0.push(name+"="+enc(elm.value));
}
}
}
var _7b6=_7ac.getElementsByTagName("input");
for(var i=0;i<_7b6.length;i++){
var _7b7=_7b6[i];
if(_7b7.type.toLowerCase()=="image"&&_7b7.form==_7ac&&_7ae(_7b7)){
var name=enc(_7b7.name);
_7b0.push(name+"="+enc(_7b7.value));
_7b0.push(name+".x=0");
_7b0.push(name+".y=0");
}
}
return _7b0.join("&")+"&";
};
dojo.io.FormBind=function(args){
this.bindArgs={};
if(args&&args.formNode){
this.init(args);
}else{
if(args){
this.init({formNode:args});
}
}
};
dojo.lang.extend(dojo.io.FormBind,{form:null,bindArgs:null,clickedButton:null,init:function(args){
var form=dojo.byId(args.formNode);
if(!form||!form.tagName||form.tagName.toLowerCase()!="form"){
throw new Error("FormBind: Couldn't apply, invalid form");
}else{
if(this.form==form){
return;
}else{
if(this.form){
throw new Error("FormBind: Already applied to a form");
}
}
}
dojo.lang.mixin(this.bindArgs,args);
this.form=form;
this.connect(form,"onsubmit","submit");
for(var i=0;i<form.elements.length;i++){
var node=form.elements[i];
if(node&&node.type&&dojo.lang.inArray(["submit","button"],node.type.toLowerCase())){
this.connect(node,"onclick","click");
}
}
var _7bd=form.getElementsByTagName("input");
for(var i=0;i<_7bd.length;i++){
var _7be=_7bd[i];
if(_7be.type.toLowerCase()=="image"&&_7be.form==form){
this.connect(_7be,"onclick","click");
}
}
},onSubmit:function(form){
return true;
},submit:function(e){
e.preventDefault();
if(this.onSubmit(this.form)){
dojo.io.bind(dojo.lang.mixin(this.bindArgs,{formFilter:dojo.lang.hitch(this,"formFilter")}));
}
},click:function(e){
var node=e.currentTarget;
if(node.disabled){
return;
}
this.clickedButton=node;
},formFilter:function(node){
var type=(node.type||"").toLowerCase();
var _7c5=false;
if(node.disabled||!node.name){
_7c5=false;
}else{
if(dojo.lang.inArray(["submit","button","image"],type)){
if(!this.clickedButton){
this.clickedButton=node;
}
_7c5=node==this.clickedButton;
}else{
_7c5=!dojo.lang.inArray(["file","submit","reset","button"],type);
}
}
return _7c5;
},connect:function(_7c6,_7c7,_7c8){
if(dojo.evalObjPath("dojo.event.connect")){
dojo.event.connect(_7c6,_7c7,this,_7c8);
}else{
var fcn=dojo.lang.hitch(this,_7c8);
_7c6[_7c7]=function(e){
if(!e){
e=window.event;
}
if(!e.currentTarget){
e.currentTarget=e.srcElement;
}
if(!e.preventDefault){
e.preventDefault=function(){
window.event.returnValue=false;
};
}
fcn(e);
};
}
}});
dojo.io.XMLHTTPTransport=new function(){
var _7cb=this;
var _7cc={};
this.useCache=false;
this.preventCache=false;
function getCacheKey(url,_7ce,_7cf){
return url+"|"+_7ce+"|"+_7cf.toLowerCase();
}
function addToCache(url,_7d1,_7d2,http){
_7cc[getCacheKey(url,_7d1,_7d2)]=http;
}
function getFromCache(url,_7d5,_7d6){
return _7cc[getCacheKey(url,_7d5,_7d6)];
}
this.clearCache=function(){
_7cc={};
};
function doLoad(_7d7,http,url,_7da,_7db){
if(((http.status>=200)&&(http.status<300))||(http.status==304)||(location.protocol=="file:"&&(http.status==0||http.status==undefined))||(location.protocol=="chrome:"&&(http.status==0||http.status==undefined))){
var ret;
if(_7d7.method.toLowerCase()=="head"){
var _7dd=http.getAllResponseHeaders();
ret={};
ret.toString=function(){
return _7dd;
};
var _7de=_7dd.split(/[\r\n]+/g);
for(var i=0;i<_7de.length;i++){
var pair=_7de[i].match(/^([^:]+)\s*:\s*(.+)$/i);
if(pair){
ret[pair[1]]=pair[2];
}
}
}else{
if(_7d7.mimetype=="text/javascript"){
try{
ret=dj_eval(http.responseText);
}
catch(e){
dojo.debug(e);
dojo.debug(http.responseText);
ret=null;
}
}else{
if(_7d7.mimetype=="text/json"||_7d7.mimetype=="application/json"){
try{
ret=dj_eval("("+http.responseText+")");
}
catch(e){
dojo.debug(e);
dojo.debug(http.responseText);
ret=false;
}
}else{
if((_7d7.mimetype=="application/xml")||(_7d7.mimetype=="text/xml")){
ret=http.responseXML;
if(!ret||typeof ret=="string"||!http.getResponseHeader("Content-Type")){
ret=dojo.dom.createDocumentFromText(http.responseText);
}
}else{
ret=http.responseText;
}
}
}
}
if(_7db){
addToCache(url,_7da,_7d7.method,http);
}
_7d7[(typeof _7d7.load=="function")?"load":"handle"]("load",ret,http,_7d7);
}else{
var _7e1=new dojo.io.Error("XMLHttpTransport Error: "+http.status+" "+http.statusText);
_7d7[(typeof _7d7.error=="function")?"error":"handle"]("error",_7e1,http,_7d7);
}
}
function setHeaders(http,_7e3){
if(_7e3["headers"]){
for(var _7e4 in _7e3["headers"]){
if(_7e4.toLowerCase()=="content-type"&&!_7e3["contentType"]){
_7e3["contentType"]=_7e3["headers"][_7e4];
}else{
http.setRequestHeader(_7e4,_7e3["headers"][_7e4]);
}
}
}
}
this.inFlight=[];
this.inFlightTimer=null;
this.startWatchingInFlight=function(){
if(!this.inFlightTimer){
this.inFlightTimer=setTimeout("dojo.io.XMLHTTPTransport.watchInFlight();",10);
}
};
this.watchInFlight=function(){
var now=null;
if(!dojo.hostenv._blockAsync&&!_7cb._blockAsync){
for(var x=this.inFlight.length-1;x>=0;x--){
try{
var tif=this.inFlight[x];
if(!tif||tif.http._aborted||!tif.http.readyState){
this.inFlight.splice(x,1);
continue;
}
if(4==tif.http.readyState){
this.inFlight.splice(x,1);
doLoad(tif.req,tif.http,tif.url,tif.query,tif.useCache);
}else{
if(tif.startTime){
if(!now){
now=(new Date()).getTime();
}
if(tif.startTime+(tif.req.timeoutSeconds*1000)<now){
if(typeof tif.http.abort=="function"){
tif.http.abort();
}
this.inFlight.splice(x,1);
tif.req[(typeof tif.req.timeout=="function")?"timeout":"handle"]("timeout",null,tif.http,tif.req);
}
}
}
}
catch(e){
try{
var _7e8=new dojo.io.Error("XMLHttpTransport.watchInFlight Error: "+e);
tif.req[(typeof tif.req.error=="function")?"error":"handle"]("error",_7e8,tif.http,tif.req);
}
catch(e2){
dojo.debug("XMLHttpTransport error callback failed: "+e2);
}
}
}
}
clearTimeout(this.inFlightTimer);
if(this.inFlight.length==0){
this.inFlightTimer=null;
return;
}
this.inFlightTimer=setTimeout("dojo.io.XMLHTTPTransport.watchInFlight();",10);
};
var _7e9=dojo.hostenv.getXmlhttpObject()?true:false;
this.canHandle=function(_7ea){
return _7e9&&dojo.lang.inArray(["text/plain","text/html","application/xml","text/xml","text/javascript","text/json","application/json"],(_7ea["mimetype"].toLowerCase()||""))&&!(_7ea["formNode"]&&dojo.io.formHasFile(_7ea["formNode"]));
};
this.multipartBoundary="45309FFF-BD65-4d50-99C9-36986896A96F";
this.bind=function(_7eb){
if(!_7eb["url"]){
if(!_7eb["formNode"]&&(_7eb["backButton"]||_7eb["back"]||_7eb["changeUrl"]||_7eb["watchForURL"])&&(!djConfig.preventBackButtonFix)){
dojo.deprecated("Using dojo.io.XMLHTTPTransport.bind() to add to browser history without doing an IO request","Use dojo.undo.browser.addToHistory() instead.","0.4");
dojo.undo.browser.addToHistory(_7eb);
return true;
}
}
var url=_7eb.url;
var _7ed="";
if(_7eb["formNode"]){
var ta=_7eb.formNode.getAttribute("action");
if((ta)&&(!_7eb["url"])){
url=ta;
}
var tp=_7eb.formNode.getAttribute("method");
if((tp)&&(!_7eb["method"])){
_7eb.method=tp;
}
_7ed+=dojo.io.encodeForm(_7eb.formNode,_7eb.encoding,_7eb["formFilter"]);
}
if(url.indexOf("#")>-1){
dojo.debug("Warning: dojo.io.bind: stripping hash values from url:",url);
url=url.split("#")[0];
}
if(_7eb["file"]){
_7eb.method="post";
}
if(!_7eb["method"]){
_7eb.method="get";
}
if(_7eb.method.toLowerCase()=="get"){
_7eb.multipart=false;
}else{
if(_7eb["file"]){
_7eb.multipart=true;
}else{
if(!_7eb["multipart"]){
_7eb.multipart=false;
}
}
}
if(_7eb["backButton"]||_7eb["back"]||_7eb["changeUrl"]){
dojo.undo.browser.addToHistory(_7eb);
}
var _7f0=_7eb["content"]||{};
if(_7eb.sendTransport){
_7f0["dojo.transport"]="xmlhttp";
}
do{
if(_7eb.postContent){
_7ed=_7eb.postContent;
break;
}
if(_7f0){
_7ed+=dojo.io.argsFromMap(_7f0,_7eb.encoding);
}
if(_7eb.method.toLowerCase()=="get"||!_7eb.multipart){
break;
}
var t=[];
if(_7ed.length){
var q=_7ed.split("&");
for(var i=0;i<q.length;++i){
if(q[i].length){
var p=q[i].split("=");
t.push("--"+this.multipartBoundary,"Content-Disposition: form-data; name=\""+p[0]+"\"","",p[1]);
}
}
}
if(_7eb.file){
if(dojo.lang.isArray(_7eb.file)){
for(var i=0;i<_7eb.file.length;++i){
var o=_7eb.file[i];
t.push("--"+this.multipartBoundary,"Content-Disposition: form-data; name=\""+o.name+"\"; filename=\""+("fileName" in o?o.fileName:o.name)+"\"","Content-Type: "+("contentType" in o?o.contentType:"application/octet-stream"),"",o.content);
}
}else{
var o=_7eb.file;
t.push("--"+this.multipartBoundary,"Content-Disposition: form-data; name=\""+o.name+"\"; filename=\""+("fileName" in o?o.fileName:o.name)+"\"","Content-Type: "+("contentType" in o?o.contentType:"application/octet-stream"),"",o.content);
}
}
if(t.length){
t.push("--"+this.multipartBoundary+"--","");
_7ed=t.join("\r\n");
}
}while(false);
var _7f6=_7eb["sync"]?false:true;
var _7f7=_7eb["preventCache"]||(this.preventCache==true&&_7eb["preventCache"]!=false);
var _7f8=_7eb["useCache"]==true||(this.useCache==true&&_7eb["useCache"]!=false);
if(!_7f7&&_7f8){
var _7f9=getFromCache(url,_7ed,_7eb.method);
if(_7f9){
doLoad(_7eb,_7f9,url,_7ed,false);
return;
}
}
var http=dojo.hostenv.getXmlhttpObject(_7eb);
var _7fb=false;
if(_7f6){
var _7fc=this.inFlight.push({"req":_7eb,"http":http,"url":url,"query":_7ed,"useCache":_7f8,"startTime":_7eb.timeoutSeconds?(new Date()).getTime():0});
this.startWatchingInFlight();
}else{
_7cb._blockAsync=true;
}
if(_7eb.method.toLowerCase()=="post"){
if(!_7eb.user){
http.open("POST",url,_7f6);
}else{
http.open("POST",url,_7f6,_7eb.user,_7eb.password);
}
setHeaders(http,_7eb);
http.setRequestHeader("Content-Type",_7eb.multipart?("multipart/form-data; boundary="+this.multipartBoundary):(_7eb.contentType||"application/x-www-form-urlencoded"));
try{
http.send(_7ed);
}
catch(e){
if(typeof http.abort=="function"){
http.abort();
}
doLoad(_7eb,{status:404},url,_7ed,_7f8);
}
}else{
var _7fd=url;
if(_7ed!=""){
_7fd+=(_7fd.indexOf("?")>-1?"&":"?")+_7ed;
}
if(_7f7){
_7fd+=(dojo.string.endsWithAny(_7fd,"?","&")?"":(_7fd.indexOf("?")>-1?"&":"?"))+"dojo.preventCache="+new Date().valueOf();
}
if(!_7eb.user){
http.open(_7eb.method.toUpperCase(),_7fd,_7f6);
}else{
http.open(_7eb.method.toUpperCase(),_7fd,_7f6,_7eb.user,_7eb.password);
}
setHeaders(http,_7eb);
try{
http.send(null);
}
catch(e){
if(typeof http.abort=="function"){
http.abort();
}
doLoad(_7eb,{status:404},url,_7ed,_7f8);
}
}
if(!_7f6){
doLoad(_7eb,http,url,_7ed,_7f8);
_7cb._blockAsync=false;
}
_7eb.abort=function(){
try{
http._aborted=true;
}
catch(e){
}
return http.abort();
};
return;
};
dojo.io.transports.addTransport("XMLHTTPTransport");
};
}
dojo.provide("dojo.io.cookie");
dojo.io.cookie.setCookie=function(name,_7ff,days,path,_802,_803){
var _804=-1;
if((typeof days=="number")&&(days>=0)){
var d=new Date();
d.setTime(d.getTime()+(days*24*60*60*1000));
_804=d.toGMTString();
}
_7ff=escape(_7ff);
document.cookie=name+"="+_7ff+";"+(_804!=-1?" expires="+_804+";":"")+(path?"path="+path:"")+(_802?"; domain="+_802:"")+(_803?"; secure":"");
};
dojo.io.cookie.set=dojo.io.cookie.setCookie;
dojo.io.cookie.getCookie=function(name){
var idx=document.cookie.lastIndexOf(name+"=");
if(idx==-1){
return null;
}
var _808=document.cookie.substring(idx+name.length+1);
var end=_808.indexOf(";");
if(end==-1){
end=_808.length;
}
_808=_808.substring(0,end);
_808=unescape(_808);
return _808;
};
dojo.io.cookie.get=dojo.io.cookie.getCookie;
dojo.io.cookie.deleteCookie=function(name){
dojo.io.cookie.setCookie(name,"-",0);
};
dojo.io.cookie.setObjectCookie=function(name,obj,days,path,_80f,_810,_811){
if(arguments.length==5){
_811=_80f;
_80f=null;
_810=null;
}
var _812=[],_813,_814="";
if(!_811){
_813=dojo.io.cookie.getObjectCookie(name);
}
if(days>=0){
if(!_813){
_813={};
}
for(var prop in obj){
if(obj[prop]==null){
delete _813[prop];
}else{
if((typeof obj[prop]=="string")||(typeof obj[prop]=="number")){
_813[prop]=obj[prop];
}
}
}
prop=null;
for(var prop in _813){
_812.push(escape(prop)+"="+escape(_813[prop]));
}
_814=_812.join("&");
}
dojo.io.cookie.setCookie(name,_814,days,path,_80f,_810);
};
dojo.io.cookie.getObjectCookie=function(name){
var _817=null,_818=dojo.io.cookie.getCookie(name);
if(_818){
_817={};
var _819=_818.split("&");
for(var i=0;i<_819.length;i++){
var pair=_819[i].split("=");
var _81c=pair[1];
if(isNaN(_81c)){
_81c=unescape(pair[1]);
}
_817[unescape(pair[0])]=_81c;
}
}
return _817;
};
dojo.io.cookie.isSupported=function(){
if(typeof navigator.cookieEnabled!="boolean"){
dojo.io.cookie.setCookie("__TestingYourBrowserForCookieSupport__","CookiesAllowed",90,null);
var _81d=dojo.io.cookie.getCookie("__TestingYourBrowserForCookieSupport__");
navigator.cookieEnabled=(_81d=="CookiesAllowed");
if(navigator.cookieEnabled){
this.deleteCookie("__TestingYourBrowserForCookieSupport__");
}
}
return navigator.cookieEnabled;
};
if(!dojo.io.cookies){
dojo.io.cookies=dojo.io.cookie;
}
dojo.provide("dojo.io.*");


__CPAN_EDITION__ widget build.txt

Files baked into this package:

dojoGuardStart.js,
../src/bootstrap1.js,
../src/loader.js,
dojoGuardEnd.js,
../src/hostenv_browser.js,
../src/bootstrap2.js,
../src/dom.js,
../src/xml/Parse.js,
../src/lang/common.js,
../src/lang/func.js,
../src/lang/array.js,
../src/lang/extras.js,
../src/lang/declare.js,
../src/ns.js,
../src/event/common.js,
../src/event/topic.js,
../src/event/browser.js,
../src/event/__package__.js,
../src/widget/Manager.js,
../src/uri/Uri.js,
../src/uri/__package__.js,
../src/html/common.js,
../src/a11y.js,
../src/widget/Widget.js,
../src/widget/Parse.js,
../src/html/style.js,
../src/widget/DomWidget.js,
../src/html/display.js,
../src/html/layout.js,
../src/html/util.js,
../src/gfx/color.js,
../src/lfx/Animation.js,
../src/html/color.js,
../src/lfx/html.js,
../src/lfx/__package__.js,
../src/lfx/toggle.js,
../src/widget/HtmlWidget.js,
../src/widget/__package__.js,
../src/string/common.js,
../src/string.js,
../src/io/common.js,
../src/string/extras.js,
../src/undo/browser.js,
../src/io/BrowserIO.js,
../src/io/cookie.js,
../src/io/__package__.js

		
__CPAN_EDITION__ ajax dojo.js
/*
	Copyright (c) 2004-2006, The Dojo Foundation
	All Rights Reserved.

	Licensed under the Academic Free License version 2.1 or above OR the
	modified BSD license. For more information on Dojo licensing, see:

		http://dojotoolkit.org/community/licensing.shtml
*/

/*
	This is a compiled version of Dojo, built for deployment and not for
	development. To get an editable version, please visit:

		http://dojotoolkit.org

	for documentation and information on getting the source.
*/

if(typeof dojo=="undefined"){
var dj_global=this;
var dj_currentContext=this;
function dj_undef(_1,_2){
return (typeof (_2||dj_currentContext)[_1]=="undefined");
}
if(dj_undef("djConfig",this)){
var djConfig={};
}
if(dj_undef("dojo",this)){
var dojo={};
}
dojo.global=function(){
return dj_currentContext;
};
dojo.locale=djConfig.locale;
dojo.version={major:0,minor:4,patch:1,flag:"xdomain",revision:Number("$Rev: 6824 $".match(/[0-9]+/)[0]),toString:function(){
with(dojo.version){
return major+"."+minor+"."+patch+flag+" ("+revision+")";
}
}};
dojo.evalProp=function(_3,_4,_5){
if((!_4)||(!_3)){
return undefined;
}
if(!dj_undef(_3,_4)){
return _4[_3];
}
return (_5?(_4[_3]={}):undefined);
};
dojo.parseObjPath=function(_6,_7,_8){
var _9=(_7||dojo.global());
var _a=_6.split(".");
var _b=_a.pop();
for(var i=0,l=_a.length;i<l&&_9;i++){
_9=dojo.evalProp(_a[i],_9,_8);
}
return {obj:_9,prop:_b};
};
dojo.evalObjPath=function(_e,_f){
if(typeof _e!="string"){
return dojo.global();
}
if(_e.indexOf(".")==-1){
return dojo.evalProp(_e,dojo.global(),_f);
}
var ref=dojo.parseObjPath(_e,dojo.global(),_f);
if(ref){
return dojo.evalProp(ref.prop,ref.obj,_f);
}
return null;
};
dojo.errorToString=function(_11){
if(!dj_undef("message",_11)){
return _11.message;
}else{
if(!dj_undef("description",_11)){
return _11.description;
}else{
return _11;
}
}
};
dojo.raise=function(_12,_13){
if(_13){
_12=_12+": "+dojo.errorToString(_13);
}else{
_12=dojo.errorToString(_12);
}
try{
if(djConfig.isDebug){
dojo.hostenv.println("FATAL exception raised: "+_12);
}
}
catch(e){
}
throw _13||Error(_12);
};
dojo.debug=function(){
};
dojo.debugShallow=function(obj){
};
dojo.profile={start:function(){
},end:function(){
},stop:function(){
},dump:function(){
}};
function dj_eval(_15){
return dj_global.eval?dj_global.eval(_15):eval(_15);
}
dojo.unimplemented=function(_16,_17){
var _18="'"+_16+"' not implemented";
if(_17!=null){
_18+=" "+_17;
}
dojo.raise(_18);
};
dojo.deprecated=function(_19,_1a,_1b){
var _1c="DEPRECATED: "+_19;
if(_1a){
_1c+=" "+_1a;
}
if(_1b){
_1c+=" -- will be removed in version: "+_1b;
}
dojo.debug(_1c);
};
dojo.render=(function(){
function vscaffold(_1d,_1e){
var tmp={capable:false,support:{builtin:false,plugin:false},prefixes:_1d};
for(var i=0;i<_1e.length;i++){
tmp[_1e[i]]=false;
}
return tmp;
}
return {name:"",ver:dojo.version,os:{win:false,linux:false,osx:false},html:vscaffold(["html"],["ie","opera","khtml","safari","moz"]),svg:vscaffold(["svg"],["corel","adobe","batik"]),vml:vscaffold(["vml"],["ie"]),swf:vscaffold(["Swf","Flash","Mm"],["mm"]),swt:vscaffold(["Swt"],["ibm"])};
})();
dojo.hostenv=(function(){
var _21={isDebug:false,allowQueryConfig:false,baseScriptUri:"",baseRelativePath:"",libraryScriptUri:"",iePreventClobber:false,ieClobberMinimal:true,preventBackButtonFix:true,delayMozLoadingFix:false,searchIds:[],parseWidgets:true};
if(typeof djConfig=="undefined"){
djConfig=_21;
}else{
for(var _22 in _21){
if(typeof djConfig[_22]=="undefined"){
djConfig[_22]=_21[_22];
}
}
}
return {name_:"(unset)",version_:"(unset)",getName:function(){
return this.name_;
},getVersion:function(){
return this.version_;
},getText:function(uri){
dojo.unimplemented("getText","uri="+uri);
}};
})();
dojo.hostenv.getBaseScriptUri=function(){
if(djConfig.baseScriptUri.length){
return djConfig.baseScriptUri;
}
var uri=new String(djConfig.libraryScriptUri||djConfig.baseRelativePath);
if(!uri){
dojo.raise("Nothing returned by getLibraryScriptUri(): "+uri);
}
var _25=uri.lastIndexOf("/");
djConfig.baseScriptUri=djConfig.baseRelativePath;
return djConfig.baseScriptUri;
};
(function(){
var _26={pkgFileName:"__package__",loading_modules_:{},loaded_modules_:{},addedToLoadingCount:[],removedFromLoadingCount:[],inFlightCount:0,modulePrefixes_:{dojo:{name:"dojo",value:"src"}},setModulePrefix:function(_27,_28){
this.modulePrefixes_[_27]={name:_27,value:_28};
},moduleHasPrefix:function(_29){
var mp=this.modulePrefixes_;
return Boolean(mp[_29]&&mp[_29].value);
},getModulePrefix:function(_2b){
if(this.moduleHasPrefix(_2b)){
return this.modulePrefixes_[_2b].value;
}
return _2b;
},getTextStack:[],loadUriStack:[],loadedUris:[],post_load_:false,modulesLoadedListeners:[],unloadListeners:[],loadNotifying:false};
for(var _2c in _26){
dojo.hostenv[_2c]=_26[_2c];
}
})();
dojo.hostenv.loadPath=function(_2d,_2e,cb){
var uri;
if(_2d.charAt(0)=="/"||_2d.match(/^\w+:/)){
uri=_2d;
}else{
uri=this.getBaseScriptUri()+_2d;
}
if(djConfig.cacheBust&&dojo.render.html.capable){
uri+="?"+String(djConfig.cacheBust).replace(/\W+/g,"");
}
try{
return !_2e?this.loadUri(uri,cb):this.loadUriAndCheck(uri,_2e,cb);
}
catch(e){
dojo.debug(e);
return false;
}
};
dojo.hostenv.loadUri=function(uri,cb){
if(this.loadedUris[uri]){
return true;
}
var _33=this.getText(uri,null,true);
if(!_33){
return false;
}
this.loadedUris[uri]=true;
if(cb){
_33="("+_33+")";
}
var _34=dj_eval(_33);
if(cb){
cb(_34);
}
return true;
};
dojo.hostenv.loadUriAndCheck=function(uri,_36,cb){
var ok=true;
try{
ok=this.loadUri(uri,cb);
}
catch(e){
dojo.debug("failed loading ",uri," with error: ",e);
}
return Boolean(ok&&this.findModule(_36,false));
};
dojo.loaded=function(){
};
dojo.unloaded=function(){
};
dojo.hostenv.loaded=function(){
this.loadNotifying=true;
this.post_load_=true;
var mll=this.modulesLoadedListeners;
for(var x=0;x<mll.length;x++){
mll[x]();
}
this.modulesLoadedListeners=[];
this.loadNotifying=false;
dojo.loaded();
};
dojo.hostenv.unloaded=function(){
var mll=this.unloadListeners;
while(mll.length){
(mll.pop())();
}
dojo.unloaded();
};
dojo.addOnLoad=function(obj,_3d){
var dh=dojo.hostenv;
if(arguments.length==1){
dh.modulesLoadedListeners.push(obj);
}else{
if(arguments.length>1){
dh.modulesLoadedListeners.push(function(){
obj[_3d]();
});
}
}
if(dh.post_load_&&dh.inFlightCount==0&&!dh.loadNotifying){
dh.callLoaded();
}
};
dojo.addOnUnload=function(obj,_40){
var dh=dojo.hostenv;
if(arguments.length==1){
dh.unloadListeners.push(obj);
}else{
if(arguments.length>1){
dh.unloadListeners.push(function(){
obj[_40]();
});
}
}
};
dojo.hostenv.modulesLoaded=function(){
if(this.post_load_){
return;
}
if(this.loadUriStack.length==0&&this.getTextStack.length==0){
if(this.inFlightCount>0){
dojo.debug("files still in flight!");
return;
}
dojo.hostenv.callLoaded();
}
};
dojo.hostenv.callLoaded=function(){
if(typeof setTimeout=="object"){
setTimeout("dojo.hostenv.loaded();",0);
}else{
dojo.hostenv.loaded();
}
};
dojo.hostenv.getModuleSymbols=function(_42){
var _43=_42.split(".");
for(var i=_43.length;i>0;i--){
var _45=_43.slice(0,i).join(".");
if((i==1)&&!this.moduleHasPrefix(_45)){
_43[0]="../"+_43[0];
}else{
var _46=this.getModulePrefix(_45);
if(_46!=_45){
_43.splice(0,i,_46);
break;
}
}
}
return _43;
};
dojo.hostenv._global_omit_module_check=false;
dojo.hostenv.loadModule=function(_47,_48,_49){
if(!_47){
return;
}
_49=this._global_omit_module_check||_49;
var _4a=this.findModule(_47,false);
if(_4a){
return _4a;
}
if(dj_undef(_47,this.loading_modules_)){
this.addedToLoadingCount.push(_47);
}
this.loading_modules_[_47]=1;
var _4b=_47.replace(/\./g,"/")+".js";
var _4c=_47.split(".");
var _4d=this.getModuleSymbols(_47);
var _4e=((_4d[0].charAt(0)!="/")&&!_4d[0].match(/^\w+:/));
var _4f=_4d[_4d.length-1];
var ok;
if(_4f=="*"){
_47=_4c.slice(0,-1).join(".");
while(_4d.length){
_4d.pop();
_4d.push(this.pkgFileName);
_4b=_4d.join("/")+".js";
if(_4e&&_4b.charAt(0)=="/"){
_4b=_4b.slice(1);
}
ok=this.loadPath(_4b,!_49?_47:null);
if(ok){
break;
}
_4d.pop();
}
}else{
_4b=_4d.join("/")+".js";
_47=_4c.join(".");
var _51=!_49?_47:null;
ok=this.loadPath(_4b,_51);
if(!ok&&!_48){
_4d.pop();
while(_4d.length){
_4b=_4d.join("/")+".js";
ok=this.loadPath(_4b,_51);
if(ok){
break;
}
_4d.pop();
_4b=_4d.join("/")+"/"+this.pkgFileName+".js";
if(_4e&&_4b.charAt(0)=="/"){
_4b=_4b.slice(1);
}
ok=this.loadPath(_4b,_51);
if(ok){
break;
}
}
}
if(!ok&&!_49){
dojo.raise("Could not load '"+_47+"'; last tried '"+_4b+"'");
}
}
if(!_49&&!this["isXDomain"]){
_4a=this.findModule(_47,false);
if(!_4a){
dojo.raise("symbol '"+_47+"' is not defined after loading '"+_4b+"'");
}
}
return _4a;
};
dojo.hostenv.startPackage=function(_52){
var _53=String(_52);
var _54=_53;
var _55=_52.split(/\./);
if(_55[_55.length-1]=="*"){
_55.pop();
_54=_55.join(".");
}
var _56=dojo.evalObjPath(_54,true);
this.loaded_modules_[_53]=_56;
this.loaded_modules_[_54]=_56;
return _56;
};
dojo.hostenv.findModule=function(_57,_58){
var lmn=String(_57);
if(this.loaded_modules_[lmn]){
return this.loaded_modules_[lmn];
}
if(_58){
dojo.raise("no loaded module named '"+_57+"'");
}
return null;
};
dojo.kwCompoundRequire=function(_5a){
var _5b=_5a["common"]||[];
var _5c=_5a[dojo.hostenv.name_]?_5b.concat(_5a[dojo.hostenv.name_]||[]):_5b.concat(_5a["default"]||[]);
for(var x=0;x<_5c.length;x++){
var _5e=_5c[x];
if(_5e.constructor==Array){
dojo.hostenv.loadModule.apply(dojo.hostenv,_5e);
}else{
dojo.hostenv.loadModule(_5e);
}
}
};
dojo.require=function(_5f){
dojo.hostenv.loadModule.apply(dojo.hostenv,arguments);
};
dojo.requireIf=function(_60,_61){
var _62=arguments[0];
if((_62===true)||(_62=="common")||(_62&&dojo.render[_62].capable)){
var _63=[];
for(var i=1;i<arguments.length;i++){
_63.push(arguments[i]);
}
dojo.require.apply(dojo,_63);
}
};
dojo.requireAfterIf=dojo.requireIf;
dojo.provide=function(_65){
return dojo.hostenv.startPackage.apply(dojo.hostenv,arguments);
};
dojo.registerModulePath=function(_66,_67){
return dojo.hostenv.setModulePrefix(_66,_67);
};
dojo.setModulePrefix=function(_68,_69){
dojo.deprecated("dojo.setModulePrefix(\""+_68+"\", \""+_69+"\")","replaced by dojo.registerModulePath","0.5");
return dojo.registerModulePath(_68,_69);
};
dojo.exists=function(obj,_6b){
var p=_6b.split(".");
for(var i=0;i<p.length;i++){
if(!obj[p[i]]){
return false;
}
obj=obj[p[i]];
}
return true;
};
dojo.hostenv.normalizeLocale=function(_6e){
var _6f=_6e?_6e.toLowerCase():dojo.locale;
if(_6f=="root"){
_6f="ROOT";
}
return _6f;
};
dojo.hostenv.searchLocalePath=function(_70,_71,_72){
_70=dojo.hostenv.normalizeLocale(_70);
var _73=_70.split("-");
var _74=[];
for(var i=_73.length;i>0;i--){
_74.push(_73.slice(0,i).join("-"));
}
_74.push(false);
if(_71){
_74.reverse();
}
for(var j=_74.length-1;j>=0;j--){
var loc=_74[j]||"ROOT";
var _78=_72(loc);
if(_78){
break;
}
}
};
dojo.hostenv.localesGenerated;
dojo.hostenv.registerNlsPrefix=function(){
dojo.registerModulePath("nls","nls");
};
dojo.hostenv.preloadLocalizations=function(){
if(dojo.hostenv.localesGenerated){
dojo.hostenv.registerNlsPrefix();
function preload(_79){
_79=dojo.hostenv.normalizeLocale(_79);
dojo.hostenv.searchLocalePath(_79,true,function(loc){
for(var i=0;i<dojo.hostenv.localesGenerated.length;i++){
if(dojo.hostenv.localesGenerated[i]==loc){
dojo["require"]("nls.dojo_"+loc);
return true;
}
}
return false;
});
}
preload();
var _7c=djConfig.extraLocale||[];
for(var i=0;i<_7c.length;i++){
preload(_7c[i]);
}
}
dojo.hostenv.preloadLocalizations=function(){
};
};
dojo.requireLocalization=function(_7e,_7f,_80,_81){
dojo.hostenv.preloadLocalizations();
var _82=dojo.hostenv.normalizeLocale(_80);
var _83=[_7e,"nls",_7f].join(".");
var _84="";
if(_81){
var _85=_81.split(",");
for(var i=0;i<_85.length;i++){
if(_82.indexOf(_85[i])==0){
if(_85[i].length>_84.length){
_84=_85[i];
}
}
}
if(!_84){
_84="ROOT";
}
}
var _87=_81?_84:_82;
var _88=dojo.hostenv.findModule(_83);
var _89=null;
if(_88){
if(djConfig.localizationComplete&&_88._built){
return;
}
var _8a=_87.replace("-","_");
var _8b=_83+"."+_8a;
_89=dojo.hostenv.findModule(_8b);
}
if(!_89){
_88=dojo.hostenv.startPackage(_83);
var _8c=dojo.hostenv.getModuleSymbols(_7e);
var _8d=_8c.concat("nls").join("/");
var _8e;
dojo.hostenv.searchLocalePath(_87,_81,function(loc){
var _90=loc.replace("-","_");
var _91=_83+"."+_90;
var _92=false;
if(!dojo.hostenv.findModule(_91)){
dojo.hostenv.startPackage(_91);
var _93=[_8d];
if(loc!="ROOT"){
_93.push(loc);
}
_93.push(_7f);
var _94=_93.join("/")+".js";
_92=dojo.hostenv.loadPath(_94,null,function(_95){
var _96=function(){
};
_96.prototype=_8e;
_88[_90]=new _96();
for(var j in _95){
_88[_90][j]=_95[j];
}
});
}else{
_92=true;
}
if(_92&&_88[_90]){
_8e=_88[_90];
}else{
_88[_90]=_8e;
}
if(_81){
return true;
}
});
}
if(_81&&_82!=_84){
_88[_82.replace("-","_")]=_88[_84.replace("-","_")];
}
};
(function(){
var _98=djConfig.extraLocale;
if(_98){
if(!_98 instanceof Array){
_98=[_98];
}
var req=dojo.requireLocalization;
dojo.requireLocalization=function(m,b,_9c,_9d){
req(m,b,_9c,_9d);
if(_9c){
return;
}
for(var i=0;i<_98.length;i++){
req(m,b,_98[i],_9d);
}
};
}
})();
dojo.hostenv.resetXd=function(){
this.isXDomain=djConfig.forceXDomain||false;
this.xdTimer=0;
this.xdInFlight={};
this.xdOrderedReqs=[];
this.xdDepMap={};
this.xdContents=[];
};
dojo.hostenv.resetXd();
dojo.hostenv.createXdPackage=function(_9f){
var _a0=[];
var _a1=/dojo.(require|requireIf|requireAll|provide|requireAfterIf|requireAfter|kwCompoundRequire|conditionalRequire|hostenv\.conditionalLoadModule|.hostenv\.loadModule|hostenv\.moduleLoaded)\(([\w\W]*?)\)/mg;
var _a2;
while((_a2=_a1.exec(_9f))!=null){
_a0.push("\""+_a2[1]+"\", "+_a2[2]);
}
var _a3=[];
_a3.push("dojo.hostenv.packageLoaded({\n");
if(_a0.length>0){
_a3.push("depends: [");
for(var i=0;i<_a0.length;i++){
if(i>0){
_a3.push(",\n");
}
_a3.push("["+_a0[i]+"]");
}
_a3.push("],");
}
_a3.push("\ndefinePackage: function(dojo){");
_a3.push(_9f);
_a3.push("\n}});");
return _a3.join("");
};
dojo.hostenv.loadPath=function(_a5,_a6,cb){
var _a8=_a5.indexOf(":");
var _a9=_a5.indexOf("/");
var uri;
var _ab=false;
if(_a8>0&&_a8<_a9){
uri=_a5;
this.isXDomain=_ab=true;
}else{
uri=this.getBaseScriptUri()+_a5;
_a8=uri.indexOf(":");
_a9=uri.indexOf("/");
if(_a8>0&&_a8<_a9&&(!location.host||uri.indexOf("http://"+location.host)!=0)){
this.isXDomain=_ab=true;
}
}
if(djConfig.cacheBust&&dojo.render.html.capable){
uri+="?"+String(djConfig.cacheBust).replace(/\W+/g,"");
}
try{
return ((!_a6||this.isXDomain)?this.loadUri(uri,cb,_ab,_a6):this.loadUriAndCheck(uri,_a6,cb));
}
catch(e){
dojo.debug(e);
return false;
}
};
dojo.hostenv.loadUri=function(uri,cb,_ae,_af){
if(this.loadedUris[uri]){
return 1;
}
if(this.isXDomain){
this.xdOrderedReqs.push(_af);
if(uri.indexOf("__package__")!=-1){
_af+=".*";
}
this.xdInFlight[_af]=true;
this.inFlightCount++;
if(!this.xdTimer){
this.xdTimer=setInterval("dojo.hostenv.watchInFlightXDomain();",100);
}
this.xdStartTime=(new Date()).getTime();
}
if(_ae){
var _b0=uri.lastIndexOf(".");
if(_b0<=0){
_b0=uri.length-1;
}
var _b1=uri.substring(0,_b0)+".xd";
if(_b0!=uri.length-1){
_b1+=uri.substring(_b0,uri.length);
}
var _b2=document.createElement("script");
_b2.type="text/javascript";
_b2.src=_b1;
if(!this.headElement){
this.headElement=document.getElementsByTagName("head")[0];
}
this.headElement.appendChild(_b2);
}else{
var _b3=this.getText(uri,null,true);
if(_b3==null){
return 0;
}
if(this.isXDomain){
var pkg=this.createXdPackage(_b3);
dj_eval(pkg);
}else{
if(cb){
_b3="("+_b3+")";
}
var _b5=dj_eval(_b3);
if(cb){
cb(_b5);
}
}
}
this.loadedUris[uri]=true;
return 1;
};
dojo.hostenv.packageLoaded=function(pkg){
var _b7=pkg.depends;
var _b8=null;
var _b9=null;
var _ba=[];
if(_b7&&_b7.length>0){
var dep=null;
var _bc=0;
var _bd=false;
for(var i=0;i<_b7.length;i++){
dep=_b7[i];
if(dep[0]=="provide"||dep[0]=="hostenv.moduleLoaded"){
_ba.push(dep[1]);
}else{
if(!_b8){
_b8=[];
}
if(!_b9){
_b9=[];
}
var _bf=this.unpackXdDependency(dep);
if(_bf.requires){
_b8=_b8.concat(_bf.requires);
}
if(_bf.requiresAfter){
_b9=_b9.concat(_bf.requiresAfter);
}
}
var _c0=dep[0];
var _c1=_c0.split(".");
if(_c1.length==2){
dojo[_c1[0]][_c1[1]].apply(dojo[_c1[0]],dep.slice(1));
}else{
dojo[_c0].apply(dojo,dep.slice(1));
}
}
var _c2=this.xdContents.push({content:pkg.definePackage,isDefined:false})-1;
for(var i=0;i<_ba.length;i++){
this.xdDepMap[_ba[i]]={requires:_b8,requiresAfter:_b9,contentIndex:_c2};
}
for(var i=0;i<_ba.length;i++){
this.xdInFlight[_ba[i]]=false;
}
}
};
dojo.hostenv.xdLoadFlattenedBundle=function(_c3,_c4,_c5,_c6){
_c5=_c5||"root";
var _c7=dojo.hostenv.normalizeLocale(_c5).replace("-","_");
var _c8=[_c3,"nls",_c4].join(".");
var _c9=dojo.hostenv.startPackage(_c8);
_c9[_c7]=_c6;
var _ca=[_c3,_c7,_c4].join(".");
var _cb=dojo.hostenv.xdBundleMap[_ca];
if(_cb){
for(var _cc in _cb){
_c9[_cc]=_c6;
}
}
};
dojo.hostenv.xdBundleMap={};
dojo.xdRequireLocalization=function(_cd,_ce,_cf,_d0){
var _d1=_d0.split(",");
var _d2=dojo.hostenv.normalizeLocale(_cf);
var _d3="";
for(var i=0;i<_d1.length;i++){
if(_d2.indexOf(_d1[i])==0){
if(_d1[i].length>_d3.length){
_d3=_d1[i];
}
}
}
var _d5=_d3.replace("-","_");
var _d6=dojo.evalObjPath([_cd,"nls",_ce].join("."));
if(_d6&&_d6[_d5]){
bundle[_d2.replace("-","_")]=_d6[_d5];
}else{
var _d7=[_cd,(_d5||"root"),_ce].join(".");
var _d8=dojo.hostenv.xdBundleMap[_d7];
if(!_d8){
_d8=dojo.hostenv.xdBundleMap[_d7]={};
}
_d8[_d2.replace("-","_")]=true;
dojo.require(_cd+".nls"+(_d3?"."+_d3:"")+"."+_ce);
}
};
(function(){
var _d9=djConfig.extraLocale;
if(_d9){
if(!_d9 instanceof Array){
_d9=[_d9];
}
dojo._xdReqLoc=dojo.xdRequireLocalization;
dojo.xdRequireLocalization=function(m,b,_dc,_dd){
dojo._xdReqLoc(m,b,_dc,_dd);
if(_dc){
return;
}
for(var i=0;i<_d9.length;i++){
dojo._xdReqLoc(m,b,_d9[i],_dd);
}
};
}
})();
dojo.hostenv.unpackXdDependency=function(dep){
var _e0=null;
var _e1=null;
switch(dep[0]){
case "requireIf":
case "requireAfterIf":
case "conditionalRequire":
if((dep[1]===true)||(dep[1]=="common")||(dep[1]&&dojo.render[dep[1]].capable)){
_e0=[{name:dep[2],content:null}];
}
break;
case "requireAll":
dep.shift();
_e0=dep;
dojo.hostenv.flattenRequireArray(_e0);
break;
case "kwCompoundRequire":
case "hostenv.conditionalLoadModule":
var _e2=dep[1];
var _e3=_e2["common"]||[];
var _e0=(_e2[dojo.hostenv.name_])?_e3.concat(_e2[dojo.hostenv.name_]||[]):_e3.concat(_e2["default"]||[]);
dojo.hostenv.flattenRequireArray(_e0);
break;
case "require":
case "requireAfter":
case "hostenv.loadModule":
_e0=[{name:dep[1],content:null}];
break;
}
if(dep[0]=="requireAfterIf"){
_e1=_e0;
_e0=null;
}
return {requires:_e0,requiresAfter:_e1};
};
dojo.hostenv.xdWalkReqs=function(){
var _e4=null;
var req;
for(var i=0;i<this.xdOrderedReqs.length;i++){
req=this.xdOrderedReqs[i];
if(this.xdDepMap[req]){
_e4=[req];
_e4[req]=true;
this.xdEvalReqs(_e4);
}
}
};
dojo.hostenv.xdTraceReqs=function(_e7,_e8){
if(_e7&&_e7.length>0){
var _e9;
for(var i=0;i<_e7.length;i++){
_e9=_e7[i].name;
if(_e9&&!_e8[_e9]){
_e8.push(_e9);
_e8[_e9]=true;
this.xdEvalReqs(_e8);
}
}
}
};
dojo.hostenv.xdEvalReqs=function(_eb){
if(_eb.length>0){
var req=_eb[_eb.length-1];
var pkg=this.xdDepMap[req];
if(pkg){
this.xdTraceReqs(pkg.requires,_eb);
var _ee=this.xdContents[pkg.contentIndex];
if(!_ee.isDefined){
_ee.content(dojo);
_ee.isDefined=true;
}
this.xdDepMap[req]=null;
this.xdTraceReqs(pkg.requiresAfter,_eb);
}
_eb.pop();
this.xdEvalReqs(_eb);
}
};
dojo.hostenv.clearXdInterval=function(){
clearInterval(this.xdTimer);
this.xdTimer=0;
};
dojo.hostenv.watchInFlightXDomain=function(){
var _ef=(djConfig.xdWaitSeconds||30)*1000;
if(this.xdStartTime+_ef<(new Date()).getTime()){
this.clearXdInterval();
var _f0="";
for(var _f1 in this.xdInFlight){
if(this.xdInFlight[_f1]){
_f0+=_f1+" ";
}
}
dojo.raise("Could not load cross-domain packages: "+_f0);
}
for(var _f1 in this.xdInFlight){
if(this.xdInFlight[_f1]){
return;
}
}
this.clearXdInterval();
this.xdWalkReqs();
for(var i=0;i<this.xdContents.length;i++){
var _f3=this.xdContents[i];
if(_f3.content&&!_f3.isDefined){
_f3.content(dojo);
}
}
this.resetXd();
this.inFlightCount=0;
this.callLoaded();
};
dojo.hostenv.flattenRequireArray=function(_f4){
if(_f4){
for(var i=0;i<_f4.length;i++){
if(_f4[i] instanceof Array){
_f4[i]={name:_f4[i][0],content:null};
}else{
_f4[i]={name:_f4[i],content:null};
}
}
}
};
dojo.hostenv.xdHasCalledPreload=false;
dojo.hostenv.xdRealCallLoaded=dojo.hostenv.callLoaded;
dojo.hostenv.callLoaded=function(){
if(this.xdHasCalledPreload||dojo.hostenv.getModulePrefix("dojo")=="src"||!this.localesGenerated){
this.xdRealCallLoaded();
this.xdHasCalledPreload=true;
}else{
if(this.localesGenerated){
this.registerNlsPrefix=function(){
dojo.registerModulePath("nls",dojo.hostenv.getModulePrefix("dojo")+"/../nls");
};
this.preloadLocalizations();
}
this.xdHasCalledPreload=true;
}
};
}
if(typeof window!="undefined"){
(function(){
if(djConfig.allowQueryConfig){
var _f6=document.location.toString();
var _f7=_f6.split("?",2);
if(_f7.length>1){
var _f8=_f7[1];
var _f9=_f8.split("&");
for(var x in _f9){
var sp=_f9[x].split("=");
if((sp[0].length>9)&&(sp[0].substr(0,9)=="djConfig.")){
var opt=sp[0].substr(9);
try{
djConfig[opt]=eval(sp[1]);
}
catch(e){
djConfig[opt]=sp[1];
}
}
}
}
}
if(((djConfig["baseScriptUri"]=="")||(djConfig["baseRelativePath"]==""))&&(document&&document.getElementsByTagName)){
var _fd=document.getElementsByTagName("script");
var _fe=/(__package__|dojo|bootstrap1)\.js([\?\.]|$)/i;
for(var i=0;i<_fd.length;i++){
var src=_fd[i].getAttribute("src");
if(!src){
continue;
}
var m=src.match(_fe);
if(m){
var root=src.substring(0,m.index);
if(src.indexOf("bootstrap1")>-1){
root+="../";
}
if(!this["djConfig"]){
djConfig={};
}
if(djConfig["baseScriptUri"]==""){
djConfig["baseScriptUri"]=root;
}
if(djConfig["baseRelativePath"]==""){
djConfig["baseRelativePath"]=root;
}
break;
}
}
}
var dr=dojo.render;
var drh=dojo.render.html;
var drs=dojo.render.svg;
var dua=(drh.UA=navigator.userAgent);
var dav=(drh.AV=navigator.appVersion);
var t=true;
var f=false;
drh.capable=t;
drh.support.builtin=t;
dr.ver=parseFloat(drh.AV);
dr.os.mac=dav.indexOf("Macintosh")>=0;
dr.os.win=dav.indexOf("Windows")>=0;
dr.os.linux=dav.indexOf("X11")>=0;
drh.opera=dua.indexOf("Opera")>=0;
drh.khtml=(dav.indexOf("Konqueror")>=0)||(dav.indexOf("Safari")>=0);
drh.safari=dav.indexOf("Safari")>=0;
var _10a=dua.indexOf("Gecko");
drh.mozilla=drh.moz=(_10a>=0)&&(!drh.khtml);
if(drh.mozilla){
drh.geckoVersion=dua.substring(_10a+6,_10a+14);
}
drh.ie=(document.all)&&(!drh.opera);
drh.ie50=drh.ie&&dav.indexOf("MSIE 5.0")>=0;
drh.ie55=drh.ie&&dav.indexOf("MSIE 5.5")>=0;
drh.ie60=drh.ie&&dav.indexOf("MSIE 6.0")>=0;
drh.ie70=drh.ie&&dav.indexOf("MSIE 7.0")>=0;
var cm=document["compatMode"];
drh.quirks=(cm=="BackCompat")||(cm=="QuirksMode")||drh.ie55||drh.ie50;
dojo.locale=dojo.locale||(drh.ie?navigator.userLanguage:navigator.language).toLowerCase();
dr.vml.capable=drh.ie;
drs.capable=f;
drs.support.plugin=f;
drs.support.builtin=f;
var tdoc=window["document"];
var tdi=tdoc["implementation"];
if((tdi)&&(tdi["hasFeature"])&&(tdi.hasFeature("org.w3c.dom.svg","1.0"))){
drs.capable=t;
drs.support.builtin=t;
drs.support.plugin=f;
}
if(drh.safari){
var tmp=dua.split("AppleWebKit/")[1];
var ver=parseFloat(tmp.split(" ")[0]);
if(ver>=420){
drs.capable=t;
drs.support.builtin=t;
drs.support.plugin=f;
}
}else{
}
})();
dojo.hostenv.startPackage("dojo.hostenv");
dojo.render.name=dojo.hostenv.name_="browser";
dojo.hostenv.searchIds=[];
dojo.hostenv._XMLHTTP_PROGIDS=["Msxml2.XMLHTTP","Microsoft.XMLHTTP","Msxml2.XMLHTTP.4.0"];
dojo.hostenv.getXmlhttpObject=function(){
var http=null;
var _111=null;
try{
http=new XMLHttpRequest();
}
catch(e){
}
if(!http){
for(var i=0;i<3;++i){
var _113=dojo.hostenv._XMLHTTP_PROGIDS[i];
try{
http=new ActiveXObject(_113);
}
catch(e){
_111=e;
}
if(http){
dojo.hostenv._XMLHTTP_PROGIDS=[_113];
break;
}
}
}
if(!http){
return dojo.raise("XMLHTTP not available",_111);
}
return http;
};
dojo.hostenv._blockAsync=false;
dojo.hostenv.getText=function(uri,_115,_116){
if(!_115){
this._blockAsync=true;
}
var http=this.getXmlhttpObject();
function isDocumentOk(http){
var stat=http["status"];
return Boolean((!stat)||((200<=stat)&&(300>stat))||(stat==304));
}
if(_115){
var _11a=this,_11b=null,gbl=dojo.global();
var xhr=dojo.evalObjPath("dojo.io.XMLHTTPTransport");
http.onreadystatechange=function(){
if(_11b){
gbl.clearTimeout(_11b);
_11b=null;
}
if(_11a._blockAsync||(xhr&&xhr._blockAsync)){
_11b=gbl.setTimeout(function(){
http.onreadystatechange.apply(this);
},10);
}else{
if(4==http.readyState){
if(isDocumentOk(http)){
_115(http.responseText);
}
}
}
};
}
http.open("GET",uri,_115?true:false);
try{
http.send(null);
if(_115){
return null;
}
if(!isDocumentOk(http)){
var err=Error("Unable to load "+uri+" status:"+http.status);
err.status=http.status;
err.responseText=http.responseText;
throw err;
}
}
catch(e){
this._blockAsync=false;
if((_116)&&(!_115)){
return null;
}else{
throw e;
}
}
this._blockAsync=false;
return http.responseText;
};
dojo.hostenv.defaultDebugContainerId="dojoDebug";
dojo.hostenv._println_buffer=[];
dojo.hostenv._println_safe=false;
dojo.hostenv.println=function(line){
if(!dojo.hostenv._println_safe){
dojo.hostenv._println_buffer.push(line);
}else{
try{
var _120=document.getElementById(djConfig.debugContainerId?djConfig.debugContainerId:dojo.hostenv.defaultDebugContainerId);
if(!_120){
_120=dojo.body();
}
var div=document.createElement("div");
div.appendChild(document.createTextNode(line));
_120.appendChild(div);
}
catch(e){
try{
document.write("<div>"+line+"</div>");
}
catch(e2){
window.status=line;
}
}
}
};
dojo.addOnLoad(function(){
dojo.hostenv._println_safe=true;
while(dojo.hostenv._println_buffer.length>0){
dojo.hostenv.println(dojo.hostenv._println_buffer.shift());
}
});
function dj_addNodeEvtHdlr(node,_123,fp){
var _125=node["on"+_123]||function(){
};
node["on"+_123]=function(){
fp.apply(node,arguments);
_125.apply(node,arguments);
};
return true;
}
function dj_load_init(e){
var type=(e&&e.type)?e.type.toLowerCase():"load";
if(arguments.callee.initialized||(type!="domcontentloaded"&&type!="load")){
return;
}
arguments.callee.initialized=true;
if(typeof (_timer)!="undefined"){
clearInterval(_timer);
delete _timer;
}
var _128=function(){
if(dojo.render.html.ie){
dojo.hostenv.makeWidgets();
}
};
if(dojo.hostenv.inFlightCount==0){
_128();
dojo.hostenv.modulesLoaded();
}else{
dojo.hostenv.modulesLoadedListeners.unshift(_128);
}
}
if(document.addEventListener){
if(dojo.render.html.opera||(dojo.render.html.moz&&!djConfig.delayMozLoadingFix)){
document.addEventListener("DOMContentLoaded",dj_load_init,null);
}
window.addEventListener("load",dj_load_init,null);
}
if(dojo.render.html.ie&&dojo.render.os.win){
document.attachEvent("onreadystatechange",function(e){
if(document.readyState=="complete"){
dj_load_init();
}
});
}
if(/(WebKit|khtml)/i.test(navigator.userAgent)){
var _timer=setInterval(function(){
if(/loaded|complete/.test(document.readyState)){
dj_load_init();
}
},10);
}
if(dojo.render.html.ie){
dj_addNodeEvtHdlr(window,"beforeunload",function(){
dojo.hostenv._unloading=true;
window.setTimeout(function(){
dojo.hostenv._unloading=false;
},0);
});
}
dj_addNodeEvtHdlr(window,"unload",function(){
dojo.hostenv.unloaded();
if((!dojo.render.html.ie)||(dojo.render.html.ie&&dojo.hostenv._unloading)){
dojo.hostenv.unloaded();
}
});
dojo.hostenv.makeWidgets=function(){
var sids=[];
if(djConfig.searchIds&&djConfig.searchIds.length>0){
sids=sids.concat(djConfig.searchIds);
}
if(dojo.hostenv.searchIds&&dojo.hostenv.searchIds.length>0){
sids=sids.concat(dojo.hostenv.searchIds);
}
if((djConfig.parseWidgets)||(sids.length>0)){
if(dojo.evalObjPath("dojo.widget.Parse")){
var _12b=new dojo.xml.Parse();
if(sids.length>0){
for(var x=0;x<sids.length;x++){
var _12d=document.getElementById(sids[x]);
if(!_12d){
continue;
}
var frag=_12b.parseElement(_12d,null,true);
dojo.widget.getParser().createComponents(frag);
}
}else{
if(djConfig.parseWidgets){
var frag=_12b.parseElement(dojo.body(),null,true);
dojo.widget.getParser().createComponents(frag);
}
}
}
}
};
dojo.addOnLoad(function(){
if(!dojo.render.html.ie){
dojo.hostenv.makeWidgets();
}
});
try{
if(dojo.render.html.ie){
document.namespaces.add("v","urn:schemas-microsoft-com:vml");
document.createStyleSheet().addRule("v\\:*","behavior:url(#default#VML)");
}
}
catch(e){
}
dojo.hostenv.writeIncludes=function(){
};
if(!dj_undef("document",this)){
dj_currentDocument=this.document;
}
dojo.doc=function(){
return dj_currentDocument;
};
dojo.body=function(){
return dojo.doc().body||dojo.doc().getElementsByTagName("body")[0];
};
dojo.byId=function(id,doc){
if((id)&&((typeof id=="string")||(id instanceof String))){
if(!doc){
doc=dj_currentDocument;
}
var ele=doc.getElementById(id);
if(ele&&(ele.id!=id)&&doc.all){
ele=null;
eles=doc.all[id];
if(eles){
if(eles.length){
for(var i=0;i<eles.length;i++){
if(eles[i].id==id){
ele=eles[i];
break;
}
}
}else{
ele=eles;
}
}
}
return ele;
}
return id;
};
dojo.setContext=function(_133,_134){
dj_currentContext=_133;
dj_currentDocument=_134;
};
dojo._fireCallback=function(_135,_136,_137){
if((_136)&&((typeof _135=="string")||(_135 instanceof String))){
_135=_136[_135];
}
return (_136?_135.apply(_136,_137||[]):_135());
};
dojo.withGlobal=function(_138,_139,_13a,_13b){
var rval;
var _13d=dj_currentContext;
var _13e=dj_currentDocument;
try{
dojo.setContext(_138,_138.document);
rval=dojo._fireCallback(_139,_13a,_13b);
}
finally{
dojo.setContext(_13d,_13e);
}
return rval;
};
dojo.withDoc=function(_13f,_140,_141,_142){
var rval;
var _144=dj_currentDocument;
try{
dj_currentDocument=_13f;
rval=dojo._fireCallback(_140,_141,_142);
}
finally{
dj_currentDocument=_144;
}
return rval;
};
}
(function(){
if(typeof dj_usingBootstrap!="undefined"){
return;
}
var _145=false;
var _146=false;
var _147=false;
if((typeof this["load"]=="function")&&((typeof this["Packages"]=="function")||(typeof this["Packages"]=="object"))){
_145=true;
}else{
if(typeof this["load"]=="function"){
_146=true;
}else{
if(window.widget){
_147=true;
}
}
}
var tmps=[];
if((this["djConfig"])&&((djConfig["isDebug"])||(djConfig["debugAtAllCosts"]))){
tmps.push("debug.js");
}
if((this["djConfig"])&&(djConfig["debugAtAllCosts"])&&(!_145)&&(!_147)){
tmps.push("browser_debug.js");
}
var _149=djConfig["baseScriptUri"];
if((this["djConfig"])&&(djConfig["baseLoaderUri"])){
_149=djConfig["baseLoaderUri"];
}
for(var x=0;x<tmps.length;x++){
var _14b=_149+"src/"+tmps[x];
if(_145||_146){
load(_14b);
}else{
try{
document.write("<scr"+"ipt type='text/javascript' src='"+_14b+"'></scr"+"ipt>");
}
catch(e){
var _14c=document.createElement("script");
_14c.src=_14b;
document.getElementsByTagName("head")[0].appendChild(_14c);
}
}
}
})();
dojo.provide("dojo.string.common");
dojo.string.trim=function(str,wh){
if(!str.replace){
return str;
}
if(!str.length){
return str;
}
var re=(wh>0)?(/^\s+/):(wh<0)?(/\s+$/):(/^\s+|\s+$/g);
return str.replace(re,"");
};
dojo.string.trimStart=function(str){
return dojo.string.trim(str,1);
};
dojo.string.trimEnd=function(str){
return dojo.string.trim(str,-1);
};
dojo.string.repeat=function(str,_153,_154){
var out="";
for(var i=0;i<_153;i++){
out+=str;
if(_154&&i<_153-1){
out+=_154;
}
}
return out;
};
dojo.string.pad=function(str,len,c,dir){
var out=String(str);
if(!c){
c="0";
}
if(!dir){
dir=1;
}
while(out.length<len){
if(dir>0){
out=c+out;
}else{
out+=c;
}
}
return out;
};
dojo.string.padLeft=function(str,len,c){
return dojo.string.pad(str,len,c,1);
};
dojo.string.padRight=function(str,len,c){
return dojo.string.pad(str,len,c,-1);
};
dojo.provide("dojo.string");
dojo.provide("dojo.lang.common");
dojo.lang.inherits=function(_162,_163){
if(!dojo.lang.isFunction(_163)){
dojo.raise("dojo.inherits: superclass argument ["+_163+"] must be a function (subclass: ["+_162+"']");
}
_162.prototype=new _163();
_162.prototype.constructor=_162;
_162.superclass=_163.prototype;
_162["super"]=_163.prototype;
};
dojo.lang._mixin=function(obj,_165){
var tobj={};
for(var x in _165){
if((typeof tobj[x]=="undefined")||(tobj[x]!=_165[x])){
obj[x]=_165[x];
}
}
if(dojo.render.html.ie&&(typeof (_165["toString"])=="function")&&(_165["toString"]!=obj["toString"])&&(_165["toString"]!=tobj["toString"])){
obj.toString=_165.toString;
}
return obj;
};
dojo.lang.mixin=function(obj,_169){
for(var i=1,l=arguments.length;i<l;i++){
dojo.lang._mixin(obj,arguments[i]);
}
return obj;
};
dojo.lang.extend=function(_16c,_16d){
for(var i=1,l=arguments.length;i<l;i++){
dojo.lang._mixin(_16c.prototype,arguments[i]);
}
return _16c;
};
dojo.inherits=dojo.lang.inherits;
dojo.mixin=dojo.lang.mixin;
dojo.extend=dojo.lang.extend;
dojo.lang.find=function(_170,_171,_172,_173){
if(!dojo.lang.isArrayLike(_170)&&dojo.lang.isArrayLike(_171)){
dojo.deprecated("dojo.lang.find(value, array)","use dojo.lang.find(array, value) instead","0.5");
var temp=_170;
_170=_171;
_171=temp;
}
var _175=dojo.lang.isString(_170);
if(_175){
_170=_170.split("");
}
if(_173){
var step=-1;
var i=_170.length-1;
var end=-1;
}else{
var step=1;
var i=0;
var end=_170.length;
}
if(_172){
while(i!=end){
if(_170[i]===_171){
return i;
}
i+=step;
}
}else{
while(i!=end){
if(_170[i]==_171){
return i;
}
i+=step;
}
}
return -1;
};
dojo.lang.indexOf=dojo.lang.find;
dojo.lang.findLast=function(_179,_17a,_17b){
return dojo.lang.find(_179,_17a,_17b,true);
};
dojo.lang.lastIndexOf=dojo.lang.findLast;
dojo.lang.inArray=function(_17c,_17d){
return dojo.lang.find(_17c,_17d)>-1;
};
dojo.lang.isObject=function(it){
if(typeof it=="undefined"){
return false;
}
return (typeof it=="object"||it===null||dojo.lang.isArray(it)||dojo.lang.isFunction(it));
};
dojo.lang.isArray=function(it){
return (it&&it instanceof Array||typeof it=="array");
};
dojo.lang.isArrayLike=function(it){
if((!it)||(dojo.lang.isUndefined(it))){
return false;
}
if(dojo.lang.isString(it)){
return false;
}
if(dojo.lang.isFunction(it)){
return false;
}
if(dojo.lang.isArray(it)){
return true;
}
if((it.tagName)&&(it.tagName.toLowerCase()=="form")){
return false;
}
if(dojo.lang.isNumber(it.length)&&isFinite(it.length)){
return true;
}
return false;
};
dojo.lang.isFunction=function(it){
return (it instanceof Function||typeof it=="function");
};
(function(){
if((dojo.render.html.capable)&&(dojo.render.html["safari"])){
dojo.lang.isFunction=function(it){
if((typeof (it)=="function")&&(it=="[object NodeList]")){
return false;
}
return (it instanceof Function||typeof it=="function");
};
}
})();
dojo.lang.isString=function(it){
return (typeof it=="string"||it instanceof String);
};
dojo.lang.isAlien=function(it){
if(!it){
return false;
}
return !dojo.lang.isFunction(it)&&/\{\s*\[native code\]\s*\}/.test(String(it));
};
dojo.lang.isBoolean=function(it){
return (it instanceof Boolean||typeof it=="boolean");
};
dojo.lang.isNumber=function(it){
return (it instanceof Number||typeof it=="number");
};
dojo.lang.isUndefined=function(it){
return ((typeof (it)=="undefined")&&(it==undefined));
};
dojo.provide("dojo.lang.extras");
dojo.lang.setTimeout=function(func,_189){
var _18a=window,_18b=2;
if(!dojo.lang.isFunction(func)){
_18a=func;
func=_189;
_189=arguments[2];
_18b++;
}
if(dojo.lang.isString(func)){
func=_18a[func];
}
var args=[];
for(var i=_18b;i<arguments.length;i++){
args.push(arguments[i]);
}
return dojo.global().setTimeout(function(){
func.apply(_18a,args);
},_189);
};
dojo.lang.clearTimeout=function(_18e){
dojo.global().clearTimeout(_18e);
};
dojo.lang.getNameInObj=function(ns,item){
if(!ns){
ns=dj_global;
}
for(var x in ns){
if(ns[x]===item){
return new String(x);
}
}
return null;
};
dojo.lang.shallowCopy=function(obj,deep){
var i,ret;
if(obj===null){
return null;
}
if(dojo.lang.isObject(obj)){
ret=new obj.constructor();
for(i in obj){
if(dojo.lang.isUndefined(ret[i])){
ret[i]=deep?dojo.lang.shallowCopy(obj[i],deep):obj[i];
}
}
}else{
if(dojo.lang.isArray(obj)){
ret=[];
for(i=0;i<obj.length;i++){
ret[i]=deep?dojo.lang.shallowCopy(obj[i],deep):obj[i];
}
}else{
ret=obj;
}
}
return ret;
};
dojo.lang.firstValued=function(){
for(var i=0;i<arguments.length;i++){
if(typeof arguments[i]!="undefined"){
return arguments[i];
}
}
return undefined;
};
dojo.lang.getObjPathValue=function(_197,_198,_199){
with(dojo.parseObjPath(_197,_198,_199)){
return dojo.evalProp(prop,obj,_199);
}
};
dojo.lang.setObjPathValue=function(_19a,_19b,_19c,_19d){
dojo.deprecated("dojo.lang.setObjPathValue","use dojo.parseObjPath and the '=' operator","0.6");
if(arguments.length<4){
_19d=true;
}
with(dojo.parseObjPath(_19a,_19c,_19d)){
if(obj&&(_19d||(prop in obj))){
obj[prop]=_19b;
}
}
};
dojo.provide("dojo.io.common");
dojo.io.transports=[];
dojo.io.hdlrFuncNames=["load","error","timeout"];
dojo.io.Request=function(url,_19f,_1a0,_1a1){
if((arguments.length==1)&&(arguments[0].constructor==Object)){
this.fromKwArgs(arguments[0]);
}else{
this.url=url;
if(_19f){
this.mimetype=_19f;
}
if(_1a0){
this.transport=_1a0;
}
if(arguments.length>=4){
this.changeUrl=_1a1;
}
}
};
dojo.lang.extend(dojo.io.Request,{url:"",mimetype:"text/plain",method:"GET",content:undefined,transport:undefined,changeUrl:undefined,formNode:undefined,sync:false,bindSuccess:false,useCache:false,preventCache:false,load:function(type,data,_1a4,_1a5){
},error:function(type,_1a7,_1a8,_1a9){
},timeout:function(type,_1ab,_1ac,_1ad){
},handle:function(type,data,_1b0,_1b1){
},timeoutSeconds:0,abort:function(){
},fromKwArgs:function(_1b2){
if(_1b2["url"]){
_1b2.url=_1b2.url.toString();
}
if(_1b2["formNode"]){
_1b2.formNode=dojo.byId(_1b2.formNode);
}
if(!_1b2["method"]&&_1b2["formNode"]&&_1b2["formNode"].method){
_1b2.method=_1b2["formNode"].method;
}
if(!_1b2["handle"]&&_1b2["handler"]){
_1b2.handle=_1b2.handler;
}
if(!_1b2["load"]&&_1b2["loaded"]){
_1b2.load=_1b2.loaded;
}
if(!_1b2["changeUrl"]&&_1b2["changeURL"]){
_1b2.changeUrl=_1b2.changeURL;
}
_1b2.encoding=dojo.lang.firstValued(_1b2["encoding"],djConfig["bindEncoding"],"");
_1b2.sendTransport=dojo.lang.firstValued(_1b2["sendTransport"],djConfig["ioSendTransport"],false);
var _1b3=dojo.lang.isFunction;
for(var x=0;x<dojo.io.hdlrFuncNames.length;x++){
var fn=dojo.io.hdlrFuncNames[x];
if(_1b2[fn]&&_1b3(_1b2[fn])){
continue;
}
if(_1b2["handle"]&&_1b3(_1b2["handle"])){
_1b2[fn]=_1b2.handle;
}
}
dojo.lang.mixin(this,_1b2);
}});
dojo.io.Error=function(msg,type,num){
this.message=msg;
this.type=type||"unknown";
this.number=num||0;
};
dojo.io.transports.addTransport=function(name){
this.push(name);
this[name]=dojo.io[name];
};
dojo.io.bind=function(_1ba){
if(!(_1ba instanceof dojo.io.Request)){
try{
_1ba=new dojo.io.Request(_1ba);
}
catch(e){
dojo.debug(e);
}
}
var _1bb="";
if(_1ba["transport"]){
_1bb=_1ba["transport"];
if(!this[_1bb]){
dojo.io.sendBindError(_1ba,"No dojo.io.bind() transport with name '"+_1ba["transport"]+"'.");
return _1ba;
}
if(!this[_1bb].canHandle(_1ba)){
dojo.io.sendBindError(_1ba,"dojo.io.bind() transport with name '"+_1ba["transport"]+"' cannot handle this type of request.");
return _1ba;
}
}else{
for(var x=0;x<dojo.io.transports.length;x++){
var tmp=dojo.io.transports[x];
if((this[tmp])&&(this[tmp].canHandle(_1ba))){
_1bb=tmp;
break;
}
}
if(_1bb==""){
dojo.io.sendBindError(_1ba,"None of the loaded transports for dojo.io.bind()"+" can handle the request.");
return _1ba;
}
}
this[_1bb].bind(_1ba);
_1ba.bindSuccess=true;
return _1ba;
};
dojo.io.sendBindError=function(_1be,_1bf){
if((typeof _1be.error=="function"||typeof _1be.handle=="function")&&(typeof setTimeout=="function"||typeof setTimeout=="object")){
var _1c0=new dojo.io.Error(_1bf);
setTimeout(function(){
_1be[(typeof _1be.error=="function")?"error":"handle"]("error",_1c0,null,_1be);
},50);
}else{
dojo.raise(_1bf);
}
};
dojo.io.queueBind=function(_1c1){
if(!(_1c1 instanceof dojo.io.Request)){
try{
_1c1=new dojo.io.Request(_1c1);
}
catch(e){
dojo.debug(e);
}
}
var _1c2=_1c1.load;
_1c1.load=function(){
dojo.io._queueBindInFlight=false;
var ret=_1c2.apply(this,arguments);
dojo.io._dispatchNextQueueBind();
return ret;
};
var _1c4=_1c1.error;
_1c1.error=function(){
dojo.io._queueBindInFlight=false;
var ret=_1c4.apply(this,arguments);
dojo.io._dispatchNextQueueBind();
return ret;
};
dojo.io._bindQueue.push(_1c1);
dojo.io._dispatchNextQueueBind();
return _1c1;
};
dojo.io._dispatchNextQueueBind=function(){
if(!dojo.io._queueBindInFlight){
dojo.io._queueBindInFlight=true;
if(dojo.io._bindQueue.length>0){
dojo.io.bind(dojo.io._bindQueue.shift());
}else{
dojo.io._queueBindInFlight=false;
}
}
};
dojo.io._bindQueue=[];
dojo.io._queueBindInFlight=false;
dojo.io.argsFromMap=function(map,_1c7,last){
var enc=/utf/i.test(_1c7||"")?encodeURIComponent:dojo.string.encodeAscii;
var _1ca=[];
var _1cb=new Object();
for(var name in map){
var _1cd=function(elt){
var val=enc(name)+"="+enc(elt);
_1ca[(last==name)?"push":"unshift"](val);
};
if(!_1cb[name]){
var _1d0=map[name];
if(dojo.lang.isArray(_1d0)){
dojo.lang.forEach(_1d0,_1cd);
}else{
_1cd(_1d0);
}
}
}
return _1ca.join("&");
};
dojo.io.setIFrameSrc=function(_1d1,src,_1d3){
try{
var r=dojo.render.html;
if(!_1d3){
if(r.safari){
_1d1.location=src;
}else{
frames[_1d1.name].location=src;
}
}else{
var idoc;
if(r.ie){
idoc=_1d1.contentWindow.document;
}else{
if(r.safari){
idoc=_1d1.document;
}else{
idoc=_1d1.contentWindow;
}
}
if(!idoc){
_1d1.location=src;
return;
}else{
idoc.location.replace(src);
}
}
}
catch(e){
dojo.debug(e);
dojo.debug("setIFrameSrc: "+e);
}
};
dojo.provide("dojo.lang.array");
dojo.lang.mixin(dojo.lang,{has:function(obj,name){
try{
return typeof obj[name]!="undefined";
}
catch(e){
return false;
}
},isEmpty:function(obj){
if(dojo.lang.isObject(obj)){
var tmp={};
var _1da=0;
for(var x in obj){
if(obj[x]&&(!tmp[x])){
_1da++;
break;
}
}
return _1da==0;
}else{
if(dojo.lang.isArrayLike(obj)||dojo.lang.isString(obj)){
return obj.length==0;
}
}
},map:function(arr,obj,_1de){
var _1df=dojo.lang.isString(arr);
if(_1df){
arr=arr.split("");
}
if(dojo.lang.isFunction(obj)&&(!_1de)){
_1de=obj;
obj=dj_global;
}else{
if(dojo.lang.isFunction(obj)&&_1de){
var _1e0=obj;
obj=_1de;
_1de=_1e0;
}
}
if(Array.map){
var _1e1=Array.map(arr,_1de,obj);
}else{
var _1e1=[];
for(var i=0;i<arr.length;++i){
_1e1.push(_1de.call(obj,arr[i]));
}
}
if(_1df){
return _1e1.join("");
}else{
return _1e1;
}
},reduce:function(arr,_1e4,obj,_1e6){
var _1e7=_1e4;
if(arguments.length==1){
dojo.debug("dojo.lang.reduce called with too few arguments!");
return false;
}else{
if(arguments.length==2){
_1e6=_1e4;
_1e7=arr.shift();
}else{
if(arguments.lenght==3){
if(dojo.lang.isFunction(obj)){
_1e6=obj;
obj=null;
}
}else{
if(dojo.lang.isFunction(obj)){
var tmp=_1e6;
_1e6=obj;
obj=tmp;
}
}
}
}
var ob=obj?obj:dj_global;
dojo.lang.map(arr,function(val){
_1e7=_1e6.call(ob,_1e7,val);
});
return _1e7;
},forEach:function(_1eb,_1ec,_1ed){
if(dojo.lang.isString(_1eb)){
_1eb=_1eb.split("");
}
if(Array.forEach){
Array.forEach(_1eb,_1ec,_1ed);
}else{
if(!_1ed){
_1ed=dj_global;
}
for(var i=0,l=_1eb.length;i<l;i++){
_1ec.call(_1ed,_1eb[i],i,_1eb);
}
}
},_everyOrSome:function(_1f0,arr,_1f2,_1f3){
if(dojo.lang.isString(arr)){
arr=arr.split("");
}
if(Array.every){
return Array[_1f0?"every":"some"](arr,_1f2,_1f3);
}else{
if(!_1f3){
_1f3=dj_global;
}
for(var i=0,l=arr.length;i<l;i++){
var _1f6=_1f2.call(_1f3,arr[i],i,arr);
if(_1f0&&!_1f6){
return false;
}else{
if((!_1f0)&&(_1f6)){
return true;
}
}
}
return Boolean(_1f0);
}
},every:function(arr,_1f8,_1f9){
return this._everyOrSome(true,arr,_1f8,_1f9);
},some:function(arr,_1fb,_1fc){
return this._everyOrSome(false,arr,_1fb,_1fc);
},filter:function(arr,_1fe,_1ff){
var _200=dojo.lang.isString(arr);
if(_200){
arr=arr.split("");
}
var _201;
if(Array.filter){
_201=Array.filter(arr,_1fe,_1ff);
}else{
if(!_1ff){
if(arguments.length>=3){
dojo.raise("thisObject doesn't exist!");
}
_1ff=dj_global;
}
_201=[];
for(var i=0;i<arr.length;i++){
if(_1fe.call(_1ff,arr[i],i,arr)){
_201.push(arr[i]);
}
}
}
if(_200){
return _201.join("");
}else{
return _201;
}
},unnest:function(){
var out=[];
for(var i=0;i<arguments.length;i++){
if(dojo.lang.isArrayLike(arguments[i])){
var add=dojo.lang.unnest.apply(this,arguments[i]);
out=out.concat(add);
}else{
out.push(arguments[i]);
}
}
return out;
},toArray:function(_206,_207){
var _208=[];
for(var i=_207||0;i<_206.length;i++){
_208.push(_206[i]);
}
return _208;
}});
dojo.provide("dojo.lang.func");
dojo.lang.hitch=function(_20a,_20b){
var fcn=(dojo.lang.isString(_20b)?_20a[_20b]:_20b)||function(){
};
return function(){
return fcn.apply(_20a,arguments);
};
};
dojo.lang.anonCtr=0;
dojo.lang.anon={};
dojo.lang.nameAnonFunc=function(_20d,_20e,_20f){
var nso=(_20e||dojo.lang.anon);
if((_20f)||((dj_global["djConfig"])&&(djConfig["slowAnonFuncLookups"]==true))){
for(var x in nso){
try{
if(nso[x]===_20d){
return x;
}
}
catch(e){
}
}
}
var ret="__"+dojo.lang.anonCtr++;
while(typeof nso[ret]!="undefined"){
ret="__"+dojo.lang.anonCtr++;
}
nso[ret]=_20d;
return ret;
};
dojo.lang.forward=function(_213){
return function(){
return this[_213].apply(this,arguments);
};
};
dojo.lang.curry=function(_214,func){
var _216=[];
_214=_214||dj_global;
if(dojo.lang.isString(func)){
func=_214[func];
}
for(var x=2;x<arguments.length;x++){
_216.push(arguments[x]);
}
var _218=(func["__preJoinArity"]||func.length)-_216.length;
function gather(_219,_21a,_21b){
var _21c=_21b;
var _21d=_21a.slice(0);
for(var x=0;x<_219.length;x++){
_21d.push(_219[x]);
}
_21b=_21b-_219.length;
if(_21b<=0){
var res=func.apply(_214,_21d);
_21b=_21c;
return res;
}else{
return function(){
return gather(arguments,_21d,_21b);
};
}
}
return gather([],_216,_218);
};
dojo.lang.curryArguments=function(_220,func,args,_223){
var _224=[];
var x=_223||0;
for(x=_223;x<args.length;x++){
_224.push(args[x]);
}
return dojo.lang.curry.apply(dojo.lang,[_220,func].concat(_224));
};
dojo.lang.tryThese=function(){
for(var x=0;x<arguments.length;x++){
try{
if(typeof arguments[x]=="function"){
var ret=(arguments[x]());
if(ret){
return ret;
}
}
}
catch(e){
dojo.debug(e);
}
}
};
dojo.lang.delayThese=function(farr,cb,_22a,_22b){
if(!farr.length){
if(typeof _22b=="function"){
_22b();
}
return;
}
if((typeof _22a=="undefined")&&(typeof cb=="number")){
_22a=cb;
cb=function(){
};
}else{
if(!cb){
cb=function(){
};
if(!_22a){
_22a=0;
}
}
}
setTimeout(function(){
(farr.shift())();
cb();
dojo.lang.delayThese(farr,cb,_22a,_22b);
},_22a);
};
dojo.provide("dojo.string.extras");
dojo.string.substituteParams=function(_22c,hash){
var map=(typeof hash=="object")?hash:dojo.lang.toArray(arguments,1);
return _22c.replace(/\%\{(\w+)\}/g,function(_22f,key){
if(typeof (map[key])!="undefined"&&map[key]!=null){
return map[key];
}
dojo.raise("Substitution not found: "+key);
});
};
dojo.string.capitalize=function(str){
if(!dojo.lang.isString(str)){
return "";
}
if(arguments.length==0){
str=this;
}
var _232=str.split(" ");
for(var i=0;i<_232.length;i++){
_232[i]=_232[i].charAt(0).toUpperCase()+_232[i].substring(1);
}
return _232.join(" ");
};
dojo.string.isBlank=function(str){
if(!dojo.lang.isString(str)){
return true;
}
return (dojo.string.trim(str).length==0);
};
dojo.string.encodeAscii=function(str){
if(!dojo.lang.isString(str)){
return str;
}
var ret="";
var _237=escape(str);
var _238,re=/%u([0-9A-F]{4})/i;
while((_238=_237.match(re))){
var num=Number("0x"+_238[1]);
var _23b=escape("&#"+num+";");
ret+=_237.substring(0,_238.index)+_23b;
_237=_237.substring(_238.index+_238[0].length);
}
ret+=_237.replace(/\+/g,"%2B");
return ret;
};
dojo.string.escape=function(type,str){
var args=dojo.lang.toArray(arguments,1);
switch(type.toLowerCase()){
case "xml":
case "html":
case "xhtml":
return dojo.string.escapeXml.apply(this,args);
case "sql":
return dojo.string.escapeSql.apply(this,args);
case "regexp":
case "regex":
return dojo.string.escapeRegExp.apply(this,args);
case "javascript":
case "jscript":
case "js":
return dojo.string.escapeJavaScript.apply(this,args);
case "ascii":
return dojo.string.encodeAscii.apply(this,args);
default:
return str;
}
};
dojo.string.escapeXml=function(str,_240){
str=str.replace(/&/gm,"&amp;").replace(/</gm,"&lt;").replace(/>/gm,"&gt;").replace(/"/gm,"&quot;");
if(!_240){
str=str.replace(/'/gm,"&#39;");
}
return str;
};
dojo.string.escapeSql=function(str){
return str.replace(/'/gm,"''");
};
dojo.string.escapeRegExp=function(str){
return str.replace(/\\/gm,"\\\\").replace(/([\f\b\n\t\r[\^$|?*+(){}])/gm,"\\$1");
};
dojo.string.escapeJavaScript=function(str){
return str.replace(/(["'\f\b\n\t\r])/gm,"\\$1");
};
dojo.string.escapeString=function(str){
return ("\""+str.replace(/(["\\])/g,"\\$1")+"\"").replace(/[\f]/g,"\\f").replace(/[\b]/g,"\\b").replace(/[\n]/g,"\\n").replace(/[\t]/g,"\\t").replace(/[\r]/g,"\\r");
};
dojo.string.summary=function(str,len){
if(!len||str.length<=len){
return str;
}
return str.substring(0,len).replace(/\.+$/,"")+"...";
};
dojo.string.endsWith=function(str,end,_249){
if(_249){
str=str.toLowerCase();
end=end.toLowerCase();
}
if((str.length-end.length)<0){
return false;
}
return str.lastIndexOf(end)==str.length-end.length;
};
dojo.string.endsWithAny=function(str){
for(var i=1;i<arguments.length;i++){
if(dojo.string.endsWith(str,arguments[i])){
return true;
}
}
return false;
};
dojo.string.startsWith=function(str,_24d,_24e){
if(_24e){
str=str.toLowerCase();
_24d=_24d.toLowerCase();
}
return str.indexOf(_24d)==0;
};
dojo.string.startsWithAny=function(str){
for(var i=1;i<arguments.length;i++){
if(dojo.string.startsWith(str,arguments[i])){
return true;
}
}
return false;
};
dojo.string.has=function(str){
for(var i=1;i<arguments.length;i++){
if(str.indexOf(arguments[i])>-1){
return true;
}
}
return false;
};
dojo.string.normalizeNewlines=function(text,_254){
if(_254=="\n"){
text=text.replace(/\r\n/g,"\n");
text=text.replace(/\r/g,"\n");
}else{
if(_254=="\r"){
text=text.replace(/\r\n/g,"\r");
text=text.replace(/\n/g,"\r");
}else{
text=text.replace(/([^\r])\n/g,"$1\r\n").replace(/\r([^\n])/g,"\r\n$1");
}
}
return text;
};
dojo.string.splitEscaped=function(str,_256){
var _257=[];
for(var i=0,_259=0;i<str.length;i++){
if(str.charAt(i)=="\\"){
i++;
continue;
}
if(str.charAt(i)==_256){
_257.push(str.substring(_259,i));
_259=i+1;
}
}
_257.push(str.substr(_259));
return _257;
};
dojo.provide("dojo.dom");
dojo.dom.ELEMENT_NODE=1;
dojo.dom.ATTRIBUTE_NODE=2;
dojo.dom.TEXT_NODE=3;
dojo.dom.CDATA_SECTION_NODE=4;
dojo.dom.ENTITY_REFERENCE_NODE=5;
dojo.dom.ENTITY_NODE=6;
dojo.dom.PROCESSING_INSTRUCTION_NODE=7;
dojo.dom.COMMENT_NODE=8;
dojo.dom.DOCUMENT_NODE=9;
dojo.dom.DOCUMENT_TYPE_NODE=10;
dojo.dom.DOCUMENT_FRAGMENT_NODE=11;
dojo.dom.NOTATION_NODE=12;
dojo.dom.dojoml="http://www.dojotoolkit.org/2004/dojoml";
dojo.dom.xmlns={svg:"http://www.w3.org/2000/svg",smil:"http://www.w3.org/2001/SMIL20/",mml:"http://www.w3.org/1998/Math/MathML",cml:"http://www.xml-cml.org",xlink:"http://www.w3.org/1999/xlink",xhtml:"http://www.w3.org/1999/xhtml",xul:"http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul",xbl:"http://www.mozilla.org/xbl",fo:"http://www.w3.org/1999/XSL/Format",xsl:"http://www.w3.org/1999/XSL/Transform",xslt:"http://www.w3.org/1999/XSL/Transform",xi:"http://www.w3.org/2001/XInclude",xforms:"http://www.w3.org/2002/01/xforms",saxon:"http://icl.com/saxon",xalan:"http://xml.apache.org/xslt",xsd:"http://www.w3.org/2001/XMLSchema",dt:"http://www.w3.org/2001/XMLSchema-datatypes",xsi:"http://www.w3.org/2001/XMLSchema-instance",rdf:"http://www.w3.org/1999/02/22-rdf-syntax-ns#",rdfs:"http://www.w3.org/2000/01/rdf-schema#",dc:"http://purl.org/dc/elements/1.1/",dcq:"http://purl.org/dc/qualifiers/1.0","soap-env":"http://schemas.xmlsoap.org/soap/envelope/",wsdl:"http://schemas.xmlsoap.org/wsdl/",AdobeExtensions:"http://ns.adobe.com/AdobeSVGViewerExtensions/3.0/"};
dojo.dom.isNode=function(wh){
if(typeof Element=="function"){
try{
return wh instanceof Element;
}
catch(e){
}
}else{
return wh&&!isNaN(wh.nodeType);
}
};
dojo.dom.getUniqueId=function(){
var _25b=dojo.doc();
do{
var id="dj_unique_"+(++arguments.callee._idIncrement);
}while(_25b.getElementById(id));
return id;
};
dojo.dom.getUniqueId._idIncrement=0;
dojo.dom.firstElement=dojo.dom.getFirstChildElement=function(_25d,_25e){
var node=_25d.firstChild;
while(node&&node.nodeType!=dojo.dom.ELEMENT_NODE){
node=node.nextSibling;
}
if(_25e&&node&&node.tagName&&node.tagName.toLowerCase()!=_25e.toLowerCase()){
node=dojo.dom.nextElement(node,_25e);
}
return node;
};
dojo.dom.lastElement=dojo.dom.getLastChildElement=function(_260,_261){
var node=_260.lastChild;
while(node&&node.nodeType!=dojo.dom.ELEMENT_NODE){
node=node.previousSibling;
}
if(_261&&node&&node.tagName&&node.tagName.toLowerCase()!=_261.toLowerCase()){
node=dojo.dom.prevElement(node,_261);
}
return node;
};
dojo.dom.nextElement=dojo.dom.getNextSiblingElement=function(node,_264){
if(!node){
return null;
}
do{
node=node.nextSibling;
}while(node&&node.nodeType!=dojo.dom.ELEMENT_NODE);
if(node&&_264&&_264.toLowerCase()!=node.tagName.toLowerCase()){
return dojo.dom.nextElement(node,_264);
}
return node;
};
dojo.dom.prevElement=dojo.dom.getPreviousSiblingElement=function(node,_266){
if(!node){
return null;
}
if(_266){
_266=_266.toLowerCase();
}
do{
node=node.previousSibling;
}while(node&&node.nodeType!=dojo.dom.ELEMENT_NODE);
if(node&&_266&&_266.toLowerCase()!=node.tagName.toLowerCase()){
return dojo.dom.prevElement(node,_266);
}
return node;
};
dojo.dom.moveChildren=function(_267,_268,trim){
var _26a=0;
if(trim){
while(_267.hasChildNodes()&&_267.firstChild.nodeType==dojo.dom.TEXT_NODE){
_267.removeChild(_267.firstChild);
}
while(_267.hasChildNodes()&&_267.lastChild.nodeType==dojo.dom.TEXT_NODE){
_267.removeChild(_267.lastChild);
}
}
while(_267.hasChildNodes()){
_268.appendChild(_267.firstChild);
_26a++;
}
return _26a;
};
dojo.dom.copyChildren=function(_26b,_26c,trim){
var _26e=_26b.cloneNode(true);
return this.moveChildren(_26e,_26c,trim);
};
dojo.dom.replaceChildren=function(node,_270){
var _271=[];
if(dojo.render.html.ie){
for(var i=0;i<node.childNodes.length;i++){
_271.push(node.childNodes[i]);
}
}
dojo.dom.removeChildren(node);
node.appendChild(_270);
for(var i=0;i<_271.length;i++){
dojo.dom.destroyNode(_271[i]);
}
};
dojo.dom.removeChildren=function(node){
var _274=node.childNodes.length;
while(node.hasChildNodes()){
dojo.dom.removeNode(node.firstChild);
}
return _274;
};
dojo.dom.replaceNode=function(node,_276){
return node.parentNode.replaceChild(_276,node);
};
dojo.dom.destroyNode=function(node){
if(node.parentNode){
node=dojo.dom.removeNode(node);
}
if(node.nodeType!=3){
if(dojo.evalObjPath("dojo.event.browser.clean",false)){
dojo.event.browser.clean(node);
}
if(dojo.render.html.ie){
node.outerHTML="";
}
}
};
dojo.dom.removeNode=function(node){
if(node&&node.parentNode){
return node.parentNode.removeChild(node);
}
};
dojo.dom.getAncestors=function(node,_27a,_27b){
var _27c=[];
var _27d=(_27a&&(_27a instanceof Function||typeof _27a=="function"));
while(node){
if(!_27d||_27a(node)){
_27c.push(node);
}
if(_27b&&_27c.length>0){
return _27c[0];
}
node=node.parentNode;
}
if(_27b){
return null;
}
return _27c;
};
dojo.dom.getAncestorsByTag=function(node,tag,_280){
tag=tag.toLowerCase();
return dojo.dom.getAncestors(node,function(el){
return ((el.tagName)&&(el.tagName.toLowerCase()==tag));
},_280);
};
dojo.dom.getFirstAncestorByTag=function(node,tag){
return dojo.dom.getAncestorsByTag(node,tag,true);
};
dojo.dom.isDescendantOf=function(node,_285,_286){
if(_286&&node){
node=node.parentNode;
}
while(node){
if(node==_285){
return true;
}
node=node.parentNode;
}
return false;
};
dojo.dom.innerXML=function(node){
if(node.innerXML){
return node.innerXML;
}else{
if(node.xml){
return node.xml;
}else{
if(typeof XMLSerializer!="undefined"){
return (new XMLSerializer()).serializeToString(node);
}
}
}
};
dojo.dom.createDocument=function(){
var doc=null;
var _289=dojo.doc();
if(!dj_undef("ActiveXObject")){
var _28a=["MSXML2","Microsoft","MSXML","MSXML3"];
for(var i=0;i<_28a.length;i++){
try{
doc=new ActiveXObject(_28a[i]+".XMLDOM");
}
catch(e){
}
if(doc){
break;
}
}
}else{
if((_289.implementation)&&(_289.implementation.createDocument)){
doc=_289.implementation.createDocument("","",null);
}
}
return doc;
};
dojo.dom.createDocumentFromText=function(str,_28d){
if(!_28d){
_28d="text/xml";
}
if(!dj_undef("DOMParser")){
var _28e=new DOMParser();
return _28e.parseFromString(str,_28d);
}else{
if(!dj_undef("ActiveXObject")){
var _28f=dojo.dom.createDocument();
if(_28f){
_28f.async=false;
_28f.loadXML(str);
return _28f;
}else{
dojo.debug("toXml didn't work?");
}
}else{
var _290=dojo.doc();
if(_290.createElement){
var tmp=_290.createElement("xml");
tmp.innerHTML=str;
if(_290.implementation&&_290.implementation.createDocument){
var _292=_290.implementation.createDocument("foo","",null);
for(var i=0;i<tmp.childNodes.length;i++){
_292.importNode(tmp.childNodes.item(i),true);
}
return _292;
}
return ((tmp.document)&&(tmp.document.firstChild?tmp.document.firstChild:tmp));
}
}
}
return null;
};
dojo.dom.prependChild=function(node,_295){
if(_295.firstChild){
_295.insertBefore(node,_295.firstChild);
}else{
_295.appendChild(node);
}
return true;
};
dojo.dom.insertBefore=function(node,ref,_298){
if((_298!=true)&&(node===ref||node.nextSibling===ref)){
return false;
}
var _299=ref.parentNode;
_299.insertBefore(node,ref);
return true;
};
dojo.dom.insertAfter=function(node,ref,_29c){
var pn=ref.parentNode;
if(ref==pn.lastChild){
if((_29c!=true)&&(node===ref)){
return false;
}
pn.appendChild(node);
}else{
return this.insertBefore(node,ref.nextSibling,_29c);
}
return true;
};
dojo.dom.insertAtPosition=function(node,ref,_2a0){
if((!node)||(!ref)||(!_2a0)){
return false;
}
switch(_2a0.toLowerCase()){
case "before":
return dojo.dom.insertBefore(node,ref);
case "after":
return dojo.dom.insertAfter(node,ref);
case "first":
if(ref.firstChild){
return dojo.dom.insertBefore(node,ref.firstChild);
}else{
ref.appendChild(node);
return true;
}
break;
default:
ref.appendChild(node);
return true;
}
};
dojo.dom.insertAtIndex=function(node,_2a2,_2a3){
var _2a4=_2a2.childNodes;
if(!_2a4.length||_2a4.length==_2a3){
_2a2.appendChild(node);
return true;
}
if(_2a3==0){
return dojo.dom.prependChild(node,_2a2);
}
return dojo.dom.insertAfter(node,_2a4[_2a3-1]);
};
dojo.dom.textContent=function(node,text){
if(arguments.length>1){
var _2a7=dojo.doc();
dojo.dom.replaceChildren(node,_2a7.createTextNode(text));
return text;
}else{
if(node.textContent!=undefined){
return node.textContent;
}
var _2a8="";
if(node==null){
return _2a8;
}
for(var i=0;i<node.childNodes.length;i++){
switch(node.childNodes[i].nodeType){
case 1:
case 5:
_2a8+=dojo.dom.textContent(node.childNodes[i]);
break;
case 3:
case 2:
case 4:
_2a8+=node.childNodes[i].nodeValue;
break;
default:
break;
}
}
return _2a8;
}
};
dojo.dom.hasParent=function(node){
return Boolean(node&&node.parentNode&&dojo.dom.isNode(node.parentNode));
};
dojo.dom.isTag=function(node){
if(node&&node.tagName){
for(var i=1;i<arguments.length;i++){
if(node.tagName==String(arguments[i])){
return String(arguments[i]);
}
}
}
return "";
};
dojo.dom.setAttributeNS=function(elem,_2ae,_2af,_2b0){
if(elem==null||((elem==undefined)&&(typeof elem=="undefined"))){
dojo.raise("No element given to dojo.dom.setAttributeNS");
}
if(!((elem.setAttributeNS==undefined)&&(typeof elem.setAttributeNS=="undefined"))){
elem.setAttributeNS(_2ae,_2af,_2b0);
}else{
var _2b1=elem.ownerDocument;
var _2b2=_2b1.createNode(2,_2af,_2ae);
_2b2.nodeValue=_2b0;
elem.setAttributeNode(_2b2);
}
};
dojo.provide("dojo.undo.browser");
try{
if((!djConfig["preventBackButtonFix"])&&(!dojo.hostenv.post_load_)){
document.write("<iframe style='border: 0px; width: 1px; height: 1px; position: absolute; bottom: 0px; right: 0px; visibility: visible;' name='djhistory' id='djhistory' src='"+(dojo.hostenv.getBaseScriptUri()+"iframe_history.html")+"'></iframe>");
}
}
catch(e){
}
if(dojo.render.html.opera){
dojo.debug("Opera is not supported with dojo.undo.browser, so back/forward detection will not work.");
}
dojo.undo.browser={initialHref:(!dj_undef("window"))?window.location.href:"",initialHash:(!dj_undef("window"))?window.location.hash:"",moveForward:false,historyStack:[],forwardStack:[],historyIframe:null,bookmarkAnchor:null,locationTimer:null,setInitialState:function(args){
this.initialState=this._createState(this.initialHref,args,this.initialHash);
},addToHistory:function(args){
this.forwardStack=[];
var hash=null;
var url=null;
if(!this.historyIframe){
this.historyIframe=window.frames["djhistory"];
}
if(!this.bookmarkAnchor){
this.bookmarkAnchor=document.createElement("a");
dojo.body().appendChild(this.bookmarkAnchor);
this.bookmarkAnchor.style.display="none";
}
if(args["changeUrl"]){
hash="#"+((args["changeUrl"]!==true)?args["changeUrl"]:(new Date()).getTime());
if(this.historyStack.length==0&&this.initialState.urlHash==hash){
this.initialState=this._createState(url,args,hash);
return;
}else{
if(this.historyStack.length>0&&this.historyStack[this.historyStack.length-1].urlHash==hash){
this.historyStack[this.historyStack.length-1]=this._createState(url,args,hash);
return;
}
}
this.changingUrl=true;
setTimeout("window.location.href = '"+hash+"'; dojo.undo.browser.changingUrl = false;",1);
this.bookmarkAnchor.href=hash;
if(dojo.render.html.ie){
url=this._loadIframeHistory();
var _2b7=args["back"]||args["backButton"]||args["handle"];
var tcb=function(_2b9){
if(window.location.hash!=""){
setTimeout("window.location.href = '"+hash+"';",1);
}
_2b7.apply(this,[_2b9]);
};
if(args["back"]){
args.back=tcb;
}else{
if(args["backButton"]){
args.backButton=tcb;
}else{
if(args["handle"]){
args.handle=tcb;
}
}
}
var _2ba=args["forward"]||args["forwardButton"]||args["handle"];
var tfw=function(_2bc){
if(window.location.hash!=""){
window.location.href=hash;
}
if(_2ba){
_2ba.apply(this,[_2bc]);
}
};
if(args["forward"]){
args.forward=tfw;
}else{
if(args["forwardButton"]){
args.forwardButton=tfw;
}else{
if(args["handle"]){
args.handle=tfw;
}
}
}
}else{
if(dojo.render.html.moz){
if(!this.locationTimer){
this.locationTimer=setInterval("dojo.undo.browser.checkLocation();",200);
}
}
}
}else{
url=this._loadIframeHistory();
}
this.historyStack.push(this._createState(url,args,hash));
},checkLocation:function(){
if(!this.changingUrl){
var hsl=this.historyStack.length;
if((window.location.hash==this.initialHash||window.location.href==this.initialHref)&&(hsl==1)){
this.handleBackButton();
return;
}
if(this.forwardStack.length>0){
if(this.forwardStack[this.forwardStack.length-1].urlHash==window.location.hash){
this.handleForwardButton();
return;
}
}
if((hsl>=2)&&(this.historyStack[hsl-2])){
if(this.historyStack[hsl-2].urlHash==window.location.hash){
this.handleBackButton();
return;
}
}
}
},iframeLoaded:function(evt,_2bf){
if(!dojo.render.html.opera){
var _2c0=this._getUrlQuery(_2bf.href);
if(_2c0==null){
if(this.historyStack.length==1){
this.handleBackButton();
}
return;
}
if(this.moveForward){
this.moveForward=false;
return;
}
if(this.historyStack.length>=2&&_2c0==this._getUrlQuery(this.historyStack[this.historyStack.length-2].url)){
this.handleBackButton();
}else{
if(this.forwardStack.length>0&&_2c0==this._getUrlQuery(this.forwardStack[this.forwardStack.length-1].url)){
this.handleForwardButton();
}
}
}
},handleBackButton:function(){
var _2c1=this.historyStack.pop();
if(!_2c1){
return;
}
var last=this.historyStack[this.historyStack.length-1];
if(!last&&this.historyStack.length==0){
last=this.initialState;
}
if(last){
if(last.kwArgs["back"]){
last.kwArgs["back"]();
}else{
if(last.kwArgs["backButton"]){
last.kwArgs["backButton"]();
}else{
if(last.kwArgs["handle"]){
last.kwArgs.handle("back");
}
}
}
}
this.forwardStack.push(_2c1);
},handleForwardButton:function(){
var last=this.forwardStack.pop();
if(!last){
return;
}
if(last.kwArgs["forward"]){
last.kwArgs.forward();
}else{
if(last.kwArgs["forwardButton"]){
last.kwArgs.forwardButton();
}else{
if(last.kwArgs["handle"]){
last.kwArgs.handle("forward");
}
}
}
this.historyStack.push(last);
},_createState:function(url,args,hash){
return {"url":url,"kwArgs":args,"urlHash":hash};
},_getUrlQuery:function(url){
var _2c8=url.split("?");
if(_2c8.length<2){
return null;
}else{
return _2c8[1];
}
},_loadIframeHistory:function(){
var url=dojo.hostenv.getBaseScriptUri()+"iframe_history.html?"+(new Date()).getTime();
this.moveForward=true;
dojo.io.setIFrameSrc(this.historyIframe,url,false);
return url;
}};
dojo.provide("dojo.io.BrowserIO");
if(!dj_undef("window")){
dojo.io.checkChildrenForFile=function(node){
var _2cb=false;
var _2cc=node.getElementsByTagName("input");
dojo.lang.forEach(_2cc,function(_2cd){
if(_2cb){
return;
}
if(_2cd.getAttribute("type")=="file"){
_2cb=true;
}
});
return _2cb;
};
dojo.io.formHasFile=function(_2ce){
return dojo.io.checkChildrenForFile(_2ce);
};
dojo.io.updateNode=function(node,_2d0){
node=dojo.byId(node);
var args=_2d0;
if(dojo.lang.isString(_2d0)){
args={url:_2d0};
}
args.mimetype="text/html";
args.load=function(t,d,e){
while(node.firstChild){
dojo.dom.destroyNode(node.firstChild);
}
node.innerHTML=d;
};
dojo.io.bind(args);
};
dojo.io.formFilter=function(node){
var type=(node.type||"").toLowerCase();
return !node.disabled&&node.name&&!dojo.lang.inArray(["file","submit","image","reset","button"],type);
};
dojo.io.encodeForm=function(_2d7,_2d8,_2d9){
if((!_2d7)||(!_2d7.tagName)||(!_2d7.tagName.toLowerCase()=="form")){
dojo.raise("Attempted to encode a non-form element.");
}
if(!_2d9){
_2d9=dojo.io.formFilter;
}
var enc=/utf/i.test(_2d8||"")?encodeURIComponent:dojo.string.encodeAscii;
var _2db=[];
for(var i=0;i<_2d7.elements.length;i++){
var elm=_2d7.elements[i];
if(!elm||elm.tagName.toLowerCase()=="fieldset"||!_2d9(elm)){
continue;
}
var name=enc(elm.name);
var type=elm.type.toLowerCase();
if(type=="select-multiple"){
for(var j=0;j<elm.options.length;j++){
if(elm.options[j].selected){
_2db.push(name+"="+enc(elm.options[j].value));
}
}
}else{
if(dojo.lang.inArray(["radio","checkbox"],type)){
if(elm.checked){
_2db.push(name+"="+enc(elm.value));
}
}else{
_2db.push(name+"="+enc(elm.value));
}
}
}
var _2e1=_2d7.getElementsByTagName("input");
for(var i=0;i<_2e1.length;i++){
var _2e2=_2e1[i];
if(_2e2.type.toLowerCase()=="image"&&_2e2.form==_2d7&&_2d9(_2e2)){
var name=enc(_2e2.name);
_2db.push(name+"="+enc(_2e2.value));
_2db.push(name+".x=0");
_2db.push(name+".y=0");
}
}
return _2db.join("&")+"&";
};
dojo.io.FormBind=function(args){
this.bindArgs={};
if(args&&args.formNode){
this.init(args);
}else{
if(args){
this.init({formNode:args});
}
}
};
dojo.lang.extend(dojo.io.FormBind,{form:null,bindArgs:null,clickedButton:null,init:function(args){
var form=dojo.byId(args.formNode);
if(!form||!form.tagName||form.tagName.toLowerCase()!="form"){
throw new Error("FormBind: Couldn't apply, invalid form");
}else{
if(this.form==form){
return;
}else{
if(this.form){
throw new Error("FormBind: Already applied to a form");
}
}
}
dojo.lang.mixin(this.bindArgs,args);
this.form=form;
this.connect(form,"onsubmit","submit");
for(var i=0;i<form.elements.length;i++){
var node=form.elements[i];
if(node&&node.type&&dojo.lang.inArray(["submit","button"],node.type.toLowerCase())){
this.connect(node,"onclick","click");
}
}
var _2e8=form.getElementsByTagName("input");
for(var i=0;i<_2e8.length;i++){
var _2e9=_2e8[i];
if(_2e9.type.toLowerCase()=="image"&&_2e9.form==form){
this.connect(_2e9,"onclick","click");
}
}
},onSubmit:function(form){
return true;
},submit:function(e){
e.preventDefault();
if(this.onSubmit(this.form)){
dojo.io.bind(dojo.lang.mixin(this.bindArgs,{formFilter:dojo.lang.hitch(this,"formFilter")}));
}
},click:function(e){
var node=e.currentTarget;
if(node.disabled){
return;
}
this.clickedButton=node;
},formFilter:function(node){
var type=(node.type||"").toLowerCase();
var _2f0=false;
if(node.disabled||!node.name){
_2f0=false;
}else{
if(dojo.lang.inArray(["submit","button","image"],type)){
if(!this.clickedButton){
this.clickedButton=node;
}
_2f0=node==this.clickedButton;
}else{
_2f0=!dojo.lang.inArray(["file","submit","reset","button"],type);
}
}
return _2f0;
},connect:function(_2f1,_2f2,_2f3){
if(dojo.evalObjPath("dojo.event.connect")){
dojo.event.connect(_2f1,_2f2,this,_2f3);
}else{
var fcn=dojo.lang.hitch(this,_2f3);
_2f1[_2f2]=function(e){
if(!e){
e=window.event;
}
if(!e.currentTarget){
e.currentTarget=e.srcElement;
}
if(!e.preventDefault){
e.preventDefault=function(){
window.event.returnValue=false;
};
}
fcn(e);
};
}
}});
dojo.io.XMLHTTPTransport=new function(){
var _2f6=this;
var _2f7={};
this.useCache=false;
this.preventCache=false;
function getCacheKey(url,_2f9,_2fa){
return url+"|"+_2f9+"|"+_2fa.toLowerCase();
}
function addToCache(url,_2fc,_2fd,http){
_2f7[getCacheKey(url,_2fc,_2fd)]=http;
}
function getFromCache(url,_300,_301){
return _2f7[getCacheKey(url,_300,_301)];
}
this.clearCache=function(){
_2f7={};
};
function doLoad(_302,http,url,_305,_306){
if(((http.status>=200)&&(http.status<300))||(http.status==304)||(location.protocol=="file:"&&(http.status==0||http.status==undefined))||(location.protocol=="chrome:"&&(http.status==0||http.status==undefined))){
var ret;
if(_302.method.toLowerCase()=="head"){
var _308=http.getAllResponseHeaders();
ret={};
ret.toString=function(){
return _308;
};
var _309=_308.split(/[\r\n]+/g);
for(var i=0;i<_309.length;i++){
var pair=_309[i].match(/^([^:]+)\s*:\s*(.+)$/i);
if(pair){
ret[pair[1]]=pair[2];
}
}
}else{
if(_302.mimetype=="text/javascript"){
try{
ret=dj_eval(http.responseText);
}
catch(e){
dojo.debug(e);
dojo.debug(http.responseText);
ret=null;
}
}else{
if(_302.mimetype=="text/json"||_302.mimetype=="application/json"){
try{
ret=dj_eval("("+http.responseText+")");
}
catch(e){
dojo.debug(e);
dojo.debug(http.responseText);
ret=false;
}
}else{
if((_302.mimetype=="application/xml")||(_302.mimetype=="text/xml")){
ret=http.responseXML;
if(!ret||typeof ret=="string"||!http.getResponseHeader("Content-Type")){
ret=dojo.dom.createDocumentFromText(http.responseText);
}
}else{
ret=http.responseText;
}
}
}
}
if(_306){
addToCache(url,_305,_302.method,http);
}
_302[(typeof _302.load=="function")?"load":"handle"]("load",ret,http,_302);
}else{
var _30c=new dojo.io.Error("XMLHttpTransport Error: "+http.status+" "+http.statusText);
_302[(typeof _302.error=="function")?"error":"handle"]("error",_30c,http,_302);
}
}
function setHeaders(http,_30e){
if(_30e["headers"]){
for(var _30f in _30e["headers"]){
if(_30f.toLowerCase()=="content-type"&&!_30e["contentType"]){
_30e["contentType"]=_30e["headers"][_30f];
}else{
http.setRequestHeader(_30f,_30e["headers"][_30f]);
}
}
}
}
this.inFlight=[];
this.inFlightTimer=null;
this.startWatchingInFlight=function(){
if(!this.inFlightTimer){
this.inFlightTimer=setTimeout("dojo.io.XMLHTTPTransport.watchInFlight();",10);
}
};
this.watchInFlight=function(){
var now=null;
if(!dojo.hostenv._blockAsync&&!_2f6._blockAsync){
for(var x=this.inFlight.length-1;x>=0;x--){
try{
var tif=this.inFlight[x];
if(!tif||tif.http._aborted||!tif.http.readyState){
this.inFlight.splice(x,1);
continue;
}
if(4==tif.http.readyState){
this.inFlight.splice(x,1);
doLoad(tif.req,tif.http,tif.url,tif.query,tif.useCache);
}else{
if(tif.startTime){
if(!now){
now=(new Date()).getTime();
}
if(tif.startTime+(tif.req.timeoutSeconds*1000)<now){
if(typeof tif.http.abort=="function"){
tif.http.abort();
}
this.inFlight.splice(x,1);
tif.req[(typeof tif.req.timeout=="function")?"timeout":"handle"]("timeout",null,tif.http,tif.req);
}
}
}
}
catch(e){
try{
var _313=new dojo.io.Error("XMLHttpTransport.watchInFlight Error: "+e);
tif.req[(typeof tif.req.error=="function")?"error":"handle"]("error",_313,tif.http,tif.req);
}
catch(e2){
dojo.debug("XMLHttpTransport error callback failed: "+e2);
}
}
}
}
clearTimeout(this.inFlightTimer);
if(this.inFlight.length==0){
this.inFlightTimer=null;
return;
}
this.inFlightTimer=setTimeout("dojo.io.XMLHTTPTransport.watchInFlight();",10);
};
var _314=dojo.hostenv.getXmlhttpObject()?true:false;
this.canHandle=function(_315){
return _314&&dojo.lang.inArray(["text/plain","text/html","application/xml","text/xml","text/javascript","text/json","application/json"],(_315["mimetype"].toLowerCase()||""))&&!(_315["formNode"]&&dojo.io.formHasFile(_315["formNode"]));
};
this.multipartBoundary="45309FFF-BD65-4d50-99C9-36986896A96F";
this.bind=function(_316){
if(!_316["url"]){
if(!_316["formNode"]&&(_316["backButton"]||_316["back"]||_316["changeUrl"]||_316["watchForURL"])&&(!djConfig.preventBackButtonFix)){
dojo.deprecated("Using dojo.io.XMLHTTPTransport.bind() to add to browser history without doing an IO request","Use dojo.undo.browser.addToHistory() instead.","0.4");
dojo.undo.browser.addToHistory(_316);
return true;
}
}
var url=_316.url;
var _318="";
if(_316["formNode"]){
var ta=_316.formNode.getAttribute("action");
if((ta)&&(!_316["url"])){
url=ta;
}
var tp=_316.formNode.getAttribute("method");
if((tp)&&(!_316["method"])){
_316.method=tp;
}
_318+=dojo.io.encodeForm(_316.formNode,_316.encoding,_316["formFilter"]);
}
if(url.indexOf("#")>-1){
dojo.debug("Warning: dojo.io.bind: stripping hash values from url:",url);
url=url.split("#")[0];
}
if(_316["file"]){
_316.method="post";
}
if(!_316["method"]){
_316.method="get";
}
if(_316.method.toLowerCase()=="get"){
_316.multipart=false;
}else{
if(_316["file"]){
_316.multipart=true;
}else{
if(!_316["multipart"]){
_316.multipart=false;
}
}
}
if(_316["backButton"]||_316["back"]||_316["changeUrl"]){
dojo.undo.browser.addToHistory(_316);
}
var _31b=_316["content"]||{};
if(_316.sendTransport){
_31b["dojo.transport"]="xmlhttp";
}
do{
if(_316.postContent){
_318=_316.postContent;
break;
}
if(_31b){
_318+=dojo.io.argsFromMap(_31b,_316.encoding);
}
if(_316.method.toLowerCase()=="get"||!_316.multipart){
break;
}
var t=[];
if(_318.length){
var q=_318.split("&");
for(var i=0;i<q.length;++i){
if(q[i].length){
var p=q[i].split("=");
t.push("--"+this.multipartBoundary,"Content-Disposition: form-data; name=\""+p[0]+"\"","",p[1]);
}
}
}
if(_316.file){
if(dojo.lang.isArray(_316.file)){
for(var i=0;i<_316.file.length;++i){
var o=_316.file[i];
t.push("--"+this.multipartBoundary,"Content-Disposition: form-data; name=\""+o.name+"\"; filename=\""+("fileName" in o?o.fileName:o.name)+"\"","Content-Type: "+("contentType" in o?o.contentType:"application/octet-stream"),"",o.content);
}
}else{
var o=_316.file;
t.push("--"+this.multipartBoundary,"Content-Disposition: form-data; name=\""+o.name+"\"; filename=\""+("fileName" in o?o.fileName:o.name)+"\"","Content-Type: "+("contentType" in o?o.contentType:"application/octet-stream"),"",o.content);
}
}
if(t.length){
t.push("--"+this.multipartBoundary+"--","");
_318=t.join("\r\n");
}
}while(false);
var _321=_316["sync"]?false:true;
var _322=_316["preventCache"]||(this.preventCache==true&&_316["preventCache"]!=false);
var _323=_316["useCache"]==true||(this.useCache==true&&_316["useCache"]!=false);
if(!_322&&_323){
var _324=getFromCache(url,_318,_316.method);
if(_324){
doLoad(_316,_324,url,_318,false);
return;
}
}
var http=dojo.hostenv.getXmlhttpObject(_316);
var _326=false;
if(_321){
var _327=this.inFlight.push({"req":_316,"http":http,"url":url,"query":_318,"useCache":_323,"startTime":_316.timeoutSeconds?(new Date()).getTime():0});
this.startWatchingInFlight();
}else{
_2f6._blockAsync=true;
}
if(_316.method.toLowerCase()=="post"){
if(!_316.user){
http.open("POST",url,_321);
}else{
http.open("POST",url,_321,_316.user,_316.password);
}
setHeaders(http,_316);
http.setRequestHeader("Content-Type",_316.multipart?("multipart/form-data; boundary="+this.multipartBoundary):(_316.contentType||"application/x-www-form-urlencoded"));
try{
http.send(_318);
}
catch(e){
if(typeof http.abort=="function"){
http.abort();
}
doLoad(_316,{status:404},url,_318,_323);
}
}else{
var _328=url;
if(_318!=""){
_328+=(_328.indexOf("?")>-1?"&":"?")+_318;
}
if(_322){
_328+=(dojo.string.endsWithAny(_328,"?","&")?"":(_328.indexOf("?")>-1?"&":"?"))+"dojo.preventCache="+new Date().valueOf();
}
if(!_316.user){
http.open(_316.method.toUpperCase(),_328,_321);
}else{
http.open(_316.method.toUpperCase(),_328,_321,_316.user,_316.password);
}
setHeaders(http,_316);
try{
http.send(null);
}
catch(e){
if(typeof http.abort=="function"){
http.abort();
}
doLoad(_316,{status:404},url,_318,_323);
}
}
if(!_321){
doLoad(_316,http,url,_318,_323);
_2f6._blockAsync=false;
}
_316.abort=function(){
try{
http._aborted=true;
}
catch(e){
}
return http.abort();
};
return;
};
dojo.io.transports.addTransport("XMLHTTPTransport");
};
}
dojo.provide("dojo.io.cookie");
dojo.io.cookie.setCookie=function(name,_32a,days,path,_32d,_32e){
var _32f=-1;
if((typeof days=="number")&&(days>=0)){
var d=new Date();
d.setTime(d.getTime()+(days*24*60*60*1000));
_32f=d.toGMTString();
}
_32a=escape(_32a);
document.cookie=name+"="+_32a+";"+(_32f!=-1?" expires="+_32f+";":"")+(path?"path="+path:"")+(_32d?"; domain="+_32d:"")+(_32e?"; secure":"");
};
dojo.io.cookie.set=dojo.io.cookie.setCookie;
dojo.io.cookie.getCookie=function(name){
var idx=document.cookie.lastIndexOf(name+"=");
if(idx==-1){
return null;
}
var _333=document.cookie.substring(idx+name.length+1);
var end=_333.indexOf(";");
if(end==-1){
end=_333.length;
}
_333=_333.substring(0,end);
_333=unescape(_333);
return _333;
};
dojo.io.cookie.get=dojo.io.cookie.getCookie;
dojo.io.cookie.deleteCookie=function(name){
dojo.io.cookie.setCookie(name,"-",0);
};
dojo.io.cookie.setObjectCookie=function(name,obj,days,path,_33a,_33b,_33c){
if(arguments.length==5){
_33c=_33a;
_33a=null;
_33b=null;
}
var _33d=[],_33e,_33f="";
if(!_33c){
_33e=dojo.io.cookie.getObjectCookie(name);
}
if(days>=0){
if(!_33e){
_33e={};
}
for(var prop in obj){
if(obj[prop]==null){
delete _33e[prop];
}else{
if((typeof obj[prop]=="string")||(typeof obj[prop]=="number")){
_33e[prop]=obj[prop];
}
}
}
prop=null;
for(var prop in _33e){
_33d.push(escape(prop)+"="+escape(_33e[prop]));
}
_33f=_33d.join("&");
}
dojo.io.cookie.setCookie(name,_33f,days,path,_33a,_33b);
};
dojo.io.cookie.getObjectCookie=function(name){
var _342=null,_343=dojo.io.cookie.getCookie(name);
if(_343){
_342={};
var _344=_343.split("&");
for(var i=0;i<_344.length;i++){
var pair=_344[i].split("=");
var _347=pair[1];
if(isNaN(_347)){
_347=unescape(pair[1]);
}
_342[unescape(pair[0])]=_347;
}
}
return _342;
};
dojo.io.cookie.isSupported=function(){
if(typeof navigator.cookieEnabled!="boolean"){
dojo.io.cookie.setCookie("__TestingYourBrowserForCookieSupport__","CookiesAllowed",90,null);
var _348=dojo.io.cookie.getCookie("__TestingYourBrowserForCookieSupport__");
navigator.cookieEnabled=(_348=="CookiesAllowed");
if(navigator.cookieEnabled){
this.deleteCookie("__TestingYourBrowserForCookieSupport__");
}
}
return navigator.cookieEnabled;
};
if(!dojo.io.cookies){
dojo.io.cookies=dojo.io.cookie;
}
dojo.provide("dojo.io.*");
dojo.provide("dojo.event.common");
dojo.event=new function(){
this._canTimeout=dojo.lang.isFunction(dj_global["setTimeout"])||dojo.lang.isAlien(dj_global["setTimeout"]);
function interpolateArgs(args,_34a){
var dl=dojo.lang;
var ao={srcObj:dj_global,srcFunc:null,adviceObj:dj_global,adviceFunc:null,aroundObj:null,aroundFunc:null,adviceType:(args.length>2)?args[0]:"after",precedence:"last",once:false,delay:null,rate:0,adviceMsg:false};
switch(args.length){
case 0:
return;
case 1:
return;
case 2:
ao.srcFunc=args[0];
ao.adviceFunc=args[1];
break;
case 3:
if((dl.isObject(args[0]))&&(dl.isString(args[1]))&&(dl.isString(args[2]))){
ao.adviceType="after";
ao.srcObj=args[0];
ao.srcFunc=args[1];
ao.adviceFunc=args[2];
}else{
if((dl.isString(args[1]))&&(dl.isString(args[2]))){
ao.srcFunc=args[1];
ao.adviceFunc=args[2];
}else{
if((dl.isObject(args[0]))&&(dl.isString(args[1]))&&(dl.isFunction(args[2]))){
ao.adviceType="after";
ao.srcObj=args[0];
ao.srcFunc=args[1];
var _34d=dl.nameAnonFunc(args[2],ao.adviceObj,_34a);
ao.adviceFunc=_34d;
}else{
if((dl.isFunction(args[0]))&&(dl.isObject(args[1]))&&(dl.isString(args[2]))){
ao.adviceType="after";
ao.srcObj=dj_global;
var _34d=dl.nameAnonFunc(args[0],ao.srcObj,_34a);
ao.srcFunc=_34d;
ao.adviceObj=args[1];
ao.adviceFunc=args[2];
}
}
}
}
break;
case 4:
if((dl.isObject(args[0]))&&(dl.isObject(args[2]))){
ao.adviceType="after";
ao.srcObj=args[0];
ao.srcFunc=args[1];
ao.adviceObj=args[2];
ao.adviceFunc=args[3];
}else{
if((dl.isString(args[0]))&&(dl.isString(args[1]))&&(dl.isObject(args[2]))){
ao.adviceType=args[0];
ao.srcObj=dj_global;
ao.srcFunc=args[1];
ao.adviceObj=args[2];
ao.adviceFunc=args[3];
}else{
if((dl.isString(args[0]))&&(dl.isFunction(args[1]))&&(dl.isObject(args[2]))){
ao.adviceType=args[0];
ao.srcObj=dj_global;
var _34d=dl.nameAnonFunc(args[1],dj_global,_34a);
ao.srcFunc=_34d;
ao.adviceObj=args[2];
ao.adviceFunc=args[3];
}else{
if((dl.isString(args[0]))&&(dl.isObject(args[1]))&&(dl.isString(args[2]))&&(dl.isFunction(args[3]))){
ao.srcObj=args[1];
ao.srcFunc=args[2];
var _34d=dl.nameAnonFunc(args[3],dj_global,_34a);
ao.adviceObj=dj_global;
ao.adviceFunc=_34d;
}else{
if(dl.isObject(args[1])){
ao.srcObj=args[1];
ao.srcFunc=args[2];
ao.adviceObj=dj_global;
ao.adviceFunc=args[3];
}else{
if(dl.isObject(args[2])){
ao.srcObj=dj_global;
ao.srcFunc=args[1];
ao.adviceObj=args[2];
ao.adviceFunc=args[3];
}else{
ao.srcObj=ao.adviceObj=ao.aroundObj=dj_global;
ao.srcFunc=args[1];
ao.adviceFunc=args[2];
ao.aroundFunc=args[3];
}
}
}
}
}
}
break;
case 6:
ao.srcObj=args[1];
ao.srcFunc=args[2];
ao.adviceObj=args[3];
ao.adviceFunc=args[4];
ao.aroundFunc=args[5];
ao.aroundObj=dj_global;
break;
default:
ao.srcObj=args[1];
ao.srcFunc=args[2];
ao.adviceObj=args[3];
ao.adviceFunc=args[4];
ao.aroundObj=args[5];
ao.aroundFunc=args[6];
ao.once=args[7];
ao.delay=args[8];
ao.rate=args[9];
ao.adviceMsg=args[10];
break;
}
if(dl.isFunction(ao.aroundFunc)){
var _34d=dl.nameAnonFunc(ao.aroundFunc,ao.aroundObj,_34a);
ao.aroundFunc=_34d;
}
if(dl.isFunction(ao.srcFunc)){
ao.srcFunc=dl.getNameInObj(ao.srcObj,ao.srcFunc);
}
if(dl.isFunction(ao.adviceFunc)){
ao.adviceFunc=dl.getNameInObj(ao.adviceObj,ao.adviceFunc);
}
if((ao.aroundObj)&&(dl.isFunction(ao.aroundFunc))){
ao.aroundFunc=dl.getNameInObj(ao.aroundObj,ao.aroundFunc);
}
if(!ao.srcObj){
dojo.raise("bad srcObj for srcFunc: "+ao.srcFunc);
}
if(!ao.adviceObj){
dojo.raise("bad adviceObj for adviceFunc: "+ao.adviceFunc);
}
if(!ao.adviceFunc){
dojo.debug("bad adviceFunc for srcFunc: "+ao.srcFunc);
dojo.debugShallow(ao);
}
return ao;
}
this.connect=function(){
if(arguments.length==1){
var ao=arguments[0];
}else{
var ao=interpolateArgs(arguments,true);
}
if(dojo.lang.isString(ao.srcFunc)&&(ao.srcFunc.toLowerCase()=="onkey")){
if(dojo.render.html.ie){
ao.srcFunc="onkeydown";
this.connect(ao);
}
ao.srcFunc="onkeypress";
}
if(dojo.lang.isArray(ao.srcObj)&&ao.srcObj!=""){
var _34f={};
for(var x in ao){
_34f[x]=ao[x];
}
var mjps=[];
dojo.lang.forEach(ao.srcObj,function(src){
if((dojo.render.html.capable)&&(dojo.lang.isString(src))){
src=dojo.byId(src);
}
_34f.srcObj=src;
mjps.push(dojo.event.connect.call(dojo.event,_34f));
});
return mjps;
}
var mjp=dojo.event.MethodJoinPoint.getForMethod(ao.srcObj,ao.srcFunc);
if(ao.adviceFunc){
var mjp2=dojo.event.MethodJoinPoint.getForMethod(ao.adviceObj,ao.adviceFunc);
}
mjp.kwAddAdvice(ao);
return mjp;
};
this.log=function(a1,a2){
var _357;
if((arguments.length==1)&&(typeof a1=="object")){
_357=a1;
}else{
_357={srcObj:a1,srcFunc:a2};
}
_357.adviceFunc=function(){
var _358=[];
for(var x=0;x<arguments.length;x++){
_358.push(arguments[x]);
}
dojo.debug("("+_357.srcObj+")."+_357.srcFunc,":",_358.join(", "));
};
this.kwConnect(_357);
};
this.connectBefore=function(){
var args=["before"];
for(var i=0;i<arguments.length;i++){
args.push(arguments[i]);
}
return this.connect.apply(this,args);
};
this.connectAround=function(){
var args=["around"];
for(var i=0;i<arguments.length;i++){
args.push(arguments[i]);
}
return this.connect.apply(this,args);
};
this.connectOnce=function(){
var ao=interpolateArgs(arguments,true);
ao.once=true;
return this.connect(ao);
};
this._kwConnectImpl=function(_35f,_360){
var fn=(_360)?"disconnect":"connect";
if(typeof _35f["srcFunc"]=="function"){
_35f.srcObj=_35f["srcObj"]||dj_global;
var _362=dojo.lang.nameAnonFunc(_35f.srcFunc,_35f.srcObj,true);
_35f.srcFunc=_362;
}
if(typeof _35f["adviceFunc"]=="function"){
_35f.adviceObj=_35f["adviceObj"]||dj_global;
var _362=dojo.lang.nameAnonFunc(_35f.adviceFunc,_35f.adviceObj,true);
_35f.adviceFunc=_362;
}
_35f.srcObj=_35f["srcObj"]||dj_global;
_35f.adviceObj=_35f["adviceObj"]||_35f["targetObj"]||dj_global;
_35f.adviceFunc=_35f["adviceFunc"]||_35f["targetFunc"];
return dojo.event[fn](_35f);
};
this.kwConnect=function(_363){
return this._kwConnectImpl(_363,false);
};
this.disconnect=function(){
if(arguments.length==1){
var ao=arguments[0];
}else{
var ao=interpolateArgs(arguments,true);
}
if(!ao.adviceFunc){
return;
}
if(dojo.lang.isString(ao.srcFunc)&&(ao.srcFunc.toLowerCase()=="onkey")){
if(dojo.render.html.ie){
ao.srcFunc="onkeydown";
this.disconnect(ao);
}
ao.srcFunc="onkeypress";
}
if(!ao.srcObj[ao.srcFunc]){
return null;
}
var mjp=dojo.event.MethodJoinPoint.getForMethod(ao.srcObj,ao.srcFunc,true);
mjp.removeAdvice(ao.adviceObj,ao.adviceFunc,ao.adviceType,ao.once);
return mjp;
};
this.kwDisconnect=function(_366){
return this._kwConnectImpl(_366,true);
};
};
dojo.event.MethodInvocation=function(_367,obj,args){
this.jp_=_367;
this.object=obj;
this.args=[];
for(var x=0;x<args.length;x++){
this.args[x]=args[x];
}
this.around_index=-1;
};
dojo.event.MethodInvocation.prototype.proceed=function(){
this.around_index++;
if(this.around_index>=this.jp_.around.length){
return this.jp_.object[this.jp_.methodname].apply(this.jp_.object,this.args);
}else{
var ti=this.jp_.around[this.around_index];
var mobj=ti[0]||dj_global;
var meth=ti[1];
return mobj[meth].call(mobj,this);
}
};
dojo.event.MethodJoinPoint=function(obj,_36f){
this.object=obj||dj_global;
this.methodname=_36f;
this.methodfunc=this.object[_36f];
this.squelch=false;
};
dojo.event.MethodJoinPoint.getForMethod=function(obj,_371){
if(!obj){
obj=dj_global;
}
if(!obj[_371]){
obj[_371]=function(){
};
if(!obj[_371]){
dojo.raise("Cannot set do-nothing method on that object "+_371);
}
}else{
if((!dojo.lang.isFunction(obj[_371]))&&(!dojo.lang.isAlien(obj[_371]))){
return null;
}
}
var _372=_371+"$joinpoint";
var _373=_371+"$joinpoint$method";
var _374=obj[_372];
if(!_374){
var _375=false;
if(dojo.event["browser"]){
if((obj["attachEvent"])||(obj["nodeType"])||(obj["addEventListener"])){
_375=true;
dojo.event.browser.addClobberNodeAttrs(obj,[_372,_373,_371]);
}
}
var _376=obj[_371].length;
obj[_373]=obj[_371];
_374=obj[_372]=new dojo.event.MethodJoinPoint(obj,_373);
obj[_371]=function(){
var args=[];
if((_375)&&(!arguments.length)){
var evt=null;
try{
if(obj.ownerDocument){
evt=obj.ownerDocument.parentWindow.event;
}else{
if(obj.documentElement){
evt=obj.documentElement.ownerDocument.parentWindow.event;
}else{
if(obj.event){
evt=obj.event;
}else{
evt=window.event;
}
}
}
}
catch(e){
evt=window.event;
}
if(evt){
args.push(dojo.event.browser.fixEvent(evt,this));
}
}else{
for(var x=0;x<arguments.length;x++){
if((x==0)&&(_375)&&(dojo.event.browser.isEvent(arguments[x]))){
args.push(dojo.event.browser.fixEvent(arguments[x],this));
}else{
args.push(arguments[x]);
}
}
}
return _374.run.apply(_374,args);
};
obj[_371].__preJoinArity=_376;
}
return _374;
};
dojo.lang.extend(dojo.event.MethodJoinPoint,{unintercept:function(){
this.object[this.methodname]=this.methodfunc;
this.before=[];
this.after=[];
this.around=[];
},disconnect:dojo.lang.forward("unintercept"),run:function(){
var obj=this.object||dj_global;
var args=arguments;
var _37c=[];
for(var x=0;x<args.length;x++){
_37c[x]=args[x];
}
var _37e=function(marr){
if(!marr){
dojo.debug("Null argument to unrollAdvice()");
return;
}
var _380=marr[0]||dj_global;
var _381=marr[1];
if(!_380[_381]){
dojo.raise("function \""+_381+"\" does not exist on \""+_380+"\"");
}
var _382=marr[2]||dj_global;
var _383=marr[3];
var msg=marr[6];
var _385;
var to={args:[],jp_:this,object:obj,proceed:function(){
return _380[_381].apply(_380,to.args);
}};
to.args=_37c;
var _387=parseInt(marr[4]);
var _388=((!isNaN(_387))&&(marr[4]!==null)&&(typeof marr[4]!="undefined"));
if(marr[5]){
var rate=parseInt(marr[5]);
var cur=new Date();
var _38b=false;
if((marr["last"])&&((cur-marr.last)<=rate)){
if(dojo.event._canTimeout){
if(marr["delayTimer"]){
clearTimeout(marr.delayTimer);
}
var tod=parseInt(rate*2);
var mcpy=dojo.lang.shallowCopy(marr);
marr.delayTimer=setTimeout(function(){
mcpy[5]=0;
_37e(mcpy);
},tod);
}
return;
}else{
marr.last=cur;
}
}
if(_383){
_382[_383].call(_382,to);
}else{
if((_388)&&((dojo.render.html)||(dojo.render.svg))){
dj_global["setTimeout"](function(){
if(msg){
_380[_381].call(_380,to);
}else{
_380[_381].apply(_380,args);
}
},_387);
}else{
if(msg){
_380[_381].call(_380,to);
}else{
_380[_381].apply(_380,args);
}
}
}
};
var _38e=function(){
if(this.squelch){
try{
return _37e.apply(this,arguments);
}
catch(e){
dojo.debug(e);
}
}else{
return _37e.apply(this,arguments);
}
};
if((this["before"])&&(this.before.length>0)){
dojo.lang.forEach(this.before.concat(new Array()),_38e);
}
var _38f;
try{
if((this["around"])&&(this.around.length>0)){
var mi=new dojo.event.MethodInvocation(this,obj,args);
_38f=mi.proceed();
}else{
if(this.methodfunc){
_38f=this.object[this.methodname].apply(this.object,args);
}
}
}
catch(e){
if(!this.squelch){
dojo.debug(e,"when calling",this.methodname,"on",this.object,"with arguments",args);
dojo.raise(e);
}
}
if((this["after"])&&(this.after.length>0)){
dojo.lang.forEach(this.after.concat(new Array()),_38e);
}
return (this.methodfunc)?_38f:null;
},getArr:function(kind){
var type="after";
if((typeof kind=="string")&&(kind.indexOf("before")!=-1)){
type="before";
}else{
if(kind=="around"){
type="around";
}
}
if(!this[type]){
this[type]=[];
}
return this[type];
},kwAddAdvice:function(args){
this.addAdvice(args["adviceObj"],args["adviceFunc"],args["aroundObj"],args["aroundFunc"],args["adviceType"],args["precedence"],args["once"],args["delay"],args["rate"],args["adviceMsg"]);
},addAdvice:function(_394,_395,_396,_397,_398,_399,once,_39b,rate,_39d){
var arr=this.getArr(_398);
if(!arr){
dojo.raise("bad this: "+this);
}
var ao=[_394,_395,_396,_397,_39b,rate,_39d];
if(once){
if(this.hasAdvice(_394,_395,_398,arr)>=0){
return;
}
}
if(_399=="first"){
arr.unshift(ao);
}else{
arr.push(ao);
}
},hasAdvice:function(_3a0,_3a1,_3a2,arr){
if(!arr){
arr=this.getArr(_3a2);
}
var ind=-1;
for(var x=0;x<arr.length;x++){
var aao=(typeof _3a1=="object")?(new String(_3a1)).toString():_3a1;
var a1o=(typeof arr[x][1]=="object")?(new String(arr[x][1])).toString():arr[x][1];
if((arr[x][0]==_3a0)&&(a1o==aao)){
ind=x;
}
}
return ind;
},removeAdvice:function(_3a8,_3a9,_3aa,once){
var arr=this.getArr(_3aa);
var ind=this.hasAdvice(_3a8,_3a9,_3aa,arr);
if(ind==-1){
return false;
}
while(ind!=-1){
arr.splice(ind,1);
if(once){
break;
}
ind=this.hasAdvice(_3a8,_3a9,_3aa,arr);
}
return true;
}});
dojo.provide("dojo.event.topic");
dojo.event.topic=new function(){
this.topics={};
this.getTopic=function(_3ae){
if(!this.topics[_3ae]){
this.topics[_3ae]=new this.TopicImpl(_3ae);
}
return this.topics[_3ae];
};
this.registerPublisher=function(_3af,obj,_3b1){
var _3af=this.getTopic(_3af);
_3af.registerPublisher(obj,_3b1);
};
this.subscribe=function(_3b2,obj,_3b4){
var _3b2=this.getTopic(_3b2);
_3b2.subscribe(obj,_3b4);
};
this.unsubscribe=function(_3b5,obj,_3b7){
var _3b5=this.getTopic(_3b5);
_3b5.unsubscribe(obj,_3b7);
};
this.destroy=function(_3b8){
this.getTopic(_3b8).destroy();
delete this.topics[_3b8];
};
this.publishApply=function(_3b9,args){
var _3b9=this.getTopic(_3b9);
_3b9.sendMessage.apply(_3b9,args);
};
this.publish=function(_3bb,_3bc){
var _3bb=this.getTopic(_3bb);
var args=[];
for(var x=1;x<arguments.length;x++){
args.push(arguments[x]);
}
_3bb.sendMessage.apply(_3bb,args);
};
};
dojo.event.topic.TopicImpl=function(_3bf){
this.topicName=_3bf;
this.subscribe=function(_3c0,_3c1){
var tf=_3c1||_3c0;
var to=(!_3c1)?dj_global:_3c0;
return dojo.event.kwConnect({srcObj:this,srcFunc:"sendMessage",adviceObj:to,adviceFunc:tf});
};
this.unsubscribe=function(_3c4,_3c5){
var tf=(!_3c5)?_3c4:_3c5;
var to=(!_3c5)?null:_3c4;
return dojo.event.kwDisconnect({srcObj:this,srcFunc:"sendMessage",adviceObj:to,adviceFunc:tf});
};
this._getJoinPoint=function(){
return dojo.event.MethodJoinPoint.getForMethod(this,"sendMessage");
};
this.setSquelch=function(_3c8){
this._getJoinPoint().squelch=_3c8;
};
this.destroy=function(){
this._getJoinPoint().disconnect();
};
this.registerPublisher=function(_3c9,_3ca){
dojo.event.connect(_3c9,_3ca,this,"sendMessage");
};
this.sendMessage=function(_3cb){
};
};
dojo.provide("dojo.event.browser");
dojo._ie_clobber=new function(){
this.clobberNodes=[];
function nukeProp(node,prop){
try{
node[prop]=null;
}
catch(e){
}
try{
delete node[prop];
}
catch(e){
}
try{
node.removeAttribute(prop);
}
catch(e){
}
}
this.clobber=function(_3ce){
var na;
var tna;
if(_3ce){
tna=_3ce.all||_3ce.getElementsByTagName("*");
na=[_3ce];
for(var x=0;x<tna.length;x++){
if(tna[x]["__doClobber__"]){
na.push(tna[x]);
}
}
}else{
try{
window.onload=null;
}
catch(e){
}
na=(this.clobberNodes.length)?this.clobberNodes:document.all;
}
tna=null;
var _3d2={};
for(var i=na.length-1;i>=0;i=i-1){
var el=na[i];
try{
if(el&&el["__clobberAttrs__"]){
for(var j=0;j<el.__clobberAttrs__.length;j++){
nukeProp(el,el.__clobberAttrs__[j]);
}
nukeProp(el,"__clobberAttrs__");
nukeProp(el,"__doClobber__");
}
}
catch(e){
}
}
na=null;
};
};
if(dojo.render.html.ie){
dojo.addOnUnload(function(){
dojo._ie_clobber.clobber();
try{
if((dojo["widget"])&&(dojo.widget["manager"])){
dojo.widget.manager.destroyAll();
}
}
catch(e){
}
if(dojo.widget){
for(var name in dojo.widget._templateCache){
if(dojo.widget._templateCache[name].node){
dojo.dom.destroyNode(dojo.widget._templateCache[name].node);
dojo.widget._templateCache[name].node=null;
delete dojo.widget._templateCache[name].node;
}
}
}
try{
window.onload=null;
}
catch(e){
}
try{
window.onunload=null;
}
catch(e){
}
dojo._ie_clobber.clobberNodes=[];
});
}
dojo.event.browser=new function(){
var _3d7=0;
this.normalizedEventName=function(_3d8){
switch(_3d8){
case "CheckboxStateChange":
case "DOMAttrModified":
case "DOMMenuItemActive":
case "DOMMenuItemInactive":
case "DOMMouseScroll":
case "DOMNodeInserted":
case "DOMNodeRemoved":
case "RadioStateChange":
return _3d8;
break;
default:
return _3d8.toLowerCase();
break;
}
};
this.clean=function(node){
if(dojo.render.html.ie){
dojo._ie_clobber.clobber(node);
}
};
this.addClobberNode=function(node){
if(!dojo.render.html.ie){
return;
}
if(!node["__doClobber__"]){
node.__doClobber__=true;
dojo._ie_clobber.clobberNodes.push(node);
node.__clobberAttrs__=[];
}
};
this.addClobberNodeAttrs=function(node,_3dc){
if(!dojo.render.html.ie){
return;
}
this.addClobberNode(node);
for(var x=0;x<_3dc.length;x++){
node.__clobberAttrs__.push(_3dc[x]);
}
};
this.removeListener=function(node,_3df,fp,_3e1){
if(!_3e1){
var _3e1=false;
}
_3df=dojo.event.browser.normalizedEventName(_3df);
if((_3df=="onkey")||(_3df=="key")){
if(dojo.render.html.ie){
this.removeListener(node,"onkeydown",fp,_3e1);
}
_3df="onkeypress";
}
if(_3df.substr(0,2)=="on"){
_3df=_3df.substr(2);
}
if(node.removeEventListener){
node.removeEventListener(_3df,fp,_3e1);
}
};
this.addListener=function(node,_3e3,fp,_3e5,_3e6){
if(!node){
return;
}
if(!_3e5){
var _3e5=false;
}
_3e3=dojo.event.browser.normalizedEventName(_3e3);
if((_3e3=="onkey")||(_3e3=="key")){
if(dojo.render.html.ie){
this.addListener(node,"onkeydown",fp,_3e5,_3e6);
}
_3e3="onkeypress";
}
if(_3e3.substr(0,2)!="on"){
_3e3="on"+_3e3;
}
if(!_3e6){
var _3e7=function(evt){
if(!evt){
evt=window.event;
}
var ret=fp(dojo.event.browser.fixEvent(evt,this));
if(_3e5){
dojo.event.browser.stopEvent(evt);
}
return ret;
};
}else{
_3e7=fp;
}
if(node.addEventListener){
node.addEventListener(_3e3.substr(2),_3e7,_3e5);
return _3e7;
}else{
if(typeof node[_3e3]=="function"){
var _3ea=node[_3e3];
node[_3e3]=function(e){
_3ea(e);
return _3e7(e);
};
}else{
node[_3e3]=_3e7;
}
if(dojo.render.html.ie){
this.addClobberNodeAttrs(node,[_3e3]);
}
return _3e7;
}
};
this.isEvent=function(obj){
return (typeof obj!="undefined")&&(obj)&&(typeof Event!="undefined")&&(obj.eventPhase);
};
this.currentEvent=null;
this.callListener=function(_3ed,_3ee){
if(typeof _3ed!="function"){
dojo.raise("listener not a function: "+_3ed);
}
dojo.event.browser.currentEvent.currentTarget=_3ee;
return _3ed.call(_3ee,dojo.event.browser.currentEvent);
};
this._stopPropagation=function(){
dojo.event.browser.currentEvent.cancelBubble=true;
};
this._preventDefault=function(){
dojo.event.browser.currentEvent.returnValue=false;
};
this.keys={KEY_BACKSPACE:8,KEY_TAB:9,KEY_CLEAR:12,KEY_ENTER:13,KEY_SHIFT:16,KEY_CTRL:17,KEY_ALT:18,KEY_PAUSE:19,KEY_CAPS_LOCK:20,KEY_ESCAPE:27,KEY_SPACE:32,KEY_PAGE_UP:33,KEY_PAGE_DOWN:34,KEY_END:35,KEY_HOME:36,KEY_LEFT_ARROW:37,KEY_UP_ARROW:38,KEY_RIGHT_ARROW:39,KEY_DOWN_ARROW:40,KEY_INSERT:45,KEY_DELETE:46,KEY_HELP:47,KEY_LEFT_WINDOW:91,KEY_RIGHT_WINDOW:92,KEY_SELECT:93,KEY_NUMPAD_0:96,KEY_NUMPAD_1:97,KEY_NUMPAD_2:98,KEY_NUMPAD_3:99,KEY_NUMPAD_4:100,KEY_NUMPAD_5:101,KEY_NUMPAD_6:102,KEY_NUMPAD_7:103,KEY_NUMPAD_8:104,KEY_NUMPAD_9:105,KEY_NUMPAD_MULTIPLY:106,KEY_NUMPAD_PLUS:107,KEY_NUMPAD_ENTER:108,KEY_NUMPAD_MINUS:109,KEY_NUMPAD_PERIOD:110,KEY_NUMPAD_DIVIDE:111,KEY_F1:112,KEY_F2:113,KEY_F3:114,KEY_F4:115,KEY_F5:116,KEY_F6:117,KEY_F7:118,KEY_F8:119,KEY_F9:120,KEY_F10:121,KEY_F11:122,KEY_F12:123,KEY_F13:124,KEY_F14:125,KEY_F15:126,KEY_NUM_LOCK:144,KEY_SCROLL_LOCK:145};
this.revKeys=[];
for(var key in this.keys){
this.revKeys[this.keys[key]]=key;
}
this.fixEvent=function(evt,_3f1){
if(!evt){
if(window["event"]){
evt=window.event;
}
}
if((evt["type"])&&(evt["type"].indexOf("key")==0)){
evt.keys=this.revKeys;
for(var key in this.keys){
evt[key]=this.keys[key];
}
if(evt["type"]=="keydown"&&dojo.render.html.ie){
switch(evt.keyCode){
case evt.KEY_SHIFT:
case evt.KEY_CTRL:
case evt.KEY_ALT:
case evt.KEY_CAPS_LOCK:
case evt.KEY_LEFT_WINDOW:
case evt.KEY_RIGHT_WINDOW:
case evt.KEY_SELECT:
case evt.KEY_NUM_LOCK:
case evt.KEY_SCROLL_LOCK:
case evt.KEY_NUMPAD_0:
case evt.KEY_NUMPAD_1:
case evt.KEY_NUMPAD_2:
case evt.KEY_NUMPAD_3:
case evt.KEY_NUMPAD_4:
case evt.KEY_NUMPAD_5:
case evt.KEY_NUMPAD_6:
case evt.KEY_NUMPAD_7:
case evt.KEY_NUMPAD_8:
case evt.KEY_NUMPAD_9:
case evt.KEY_NUMPAD_PERIOD:
break;
case evt.KEY_NUMPAD_MULTIPLY:
case evt.KEY_NUMPAD_PLUS:
case evt.KEY_NUMPAD_ENTER:
case evt.KEY_NUMPAD_MINUS:
case evt.KEY_NUMPAD_DIVIDE:
break;
case evt.KEY_PAUSE:
case evt.KEY_TAB:
case evt.KEY_BACKSPACE:
case evt.KEY_ENTER:
case evt.KEY_ESCAPE:
case evt.KEY_PAGE_UP:
case evt.KEY_PAGE_DOWN:
case evt.KEY_END:
case evt.KEY_HOME:
case evt.KEY_LEFT_ARROW:
case evt.KEY_UP_ARROW:
case evt.KEY_RIGHT_ARROW:
case evt.KEY_DOWN_ARROW:
case evt.KEY_INSERT:
case evt.KEY_DELETE:
case evt.KEY_F1:
case evt.KEY_F2:
case evt.KEY_F3:
case evt.KEY_F4:
case evt.KEY_F5:
case evt.KEY_F6:
case evt.KEY_F7:
case evt.KEY_F8:
case evt.KEY_F9:
case evt.KEY_F10:
case evt.KEY_F11:
case evt.KEY_F12:
case evt.KEY_F12:
case evt.KEY_F13:
case evt.KEY_F14:
case evt.KEY_F15:
case evt.KEY_CLEAR:
case evt.KEY_HELP:
evt.key=evt.keyCode;
break;
default:
if(evt.ctrlKey||evt.altKey){
var _3f3=evt.keyCode;
if(_3f3>=65&&_3f3<=90&&evt.shiftKey==false){
_3f3+=32;
}
if(_3f3>=1&&_3f3<=26&&evt.ctrlKey){
_3f3+=96;
}
evt.key=String.fromCharCode(_3f3);
}
}
}else{
if(evt["type"]=="keypress"){
if(dojo.render.html.opera){
if(evt.which==0){
evt.key=evt.keyCode;
}else{
if(evt.which>0){
switch(evt.which){
case evt.KEY_SHIFT:
case evt.KEY_CTRL:
case evt.KEY_ALT:
case evt.KEY_CAPS_LOCK:
case evt.KEY_NUM_LOCK:
case evt.KEY_SCROLL_LOCK:
break;
case evt.KEY_PAUSE:
case evt.KEY_TAB:
case evt.KEY_BACKSPACE:
case evt.KEY_ENTER:
case evt.KEY_ESCAPE:
evt.key=evt.which;
break;
default:
var _3f3=evt.which;
if((evt.ctrlKey||evt.altKey||evt.metaKey)&&(evt.which>=65&&evt.which<=90&&evt.shiftKey==false)){
_3f3+=32;
}
evt.key=String.fromCharCode(_3f3);
}
}
}
}else{
if(dojo.render.html.ie){
if(!evt.ctrlKey&&!evt.altKey&&evt.keyCode>=evt.KEY_SPACE){
evt.key=String.fromCharCode(evt.keyCode);
}
}else{
if(dojo.render.html.safari){
switch(evt.keyCode){
case 25:
evt.key=evt.KEY_TAB;
evt.shift=true;
break;
case 63232:
evt.key=evt.KEY_UP_ARROW;
break;
case 63233:
evt.key=evt.KEY_DOWN_ARROW;
break;
case 63234:
evt.key=evt.KEY_LEFT_ARROW;
break;
case 63235:
evt.key=evt.KEY_RIGHT_ARROW;
break;
case 63236:
evt.key=evt.KEY_F1;
break;
case 63237:
evt.key=evt.KEY_F2;
break;
case 63238:
evt.key=evt.KEY_F3;
break;
case 63239:
evt.key=evt.KEY_F4;
break;
case 63240:
evt.key=evt.KEY_F5;
break;
case 63241:
evt.key=evt.KEY_F6;
break;
case 63242:
evt.key=evt.KEY_F7;
break;
case 63243:
evt.key=evt.KEY_F8;
break;
case 63244:
evt.key=evt.KEY_F9;
break;
case 63245:
evt.key=evt.KEY_F10;
break;
case 63246:
evt.key=evt.KEY_F11;
break;
case 63247:
evt.key=evt.KEY_F12;
break;
case 63250:
evt.key=evt.KEY_PAUSE;
break;
case 63272:
evt.key=evt.KEY_DELETE;
break;
case 63273:
evt.key=evt.KEY_HOME;
break;
case 63275:
evt.key=evt.KEY_END;
break;
case 63276:
evt.key=evt.KEY_PAGE_UP;
break;
case 63277:
evt.key=evt.KEY_PAGE_DOWN;
break;
case 63302:
evt.key=evt.KEY_INSERT;
break;
case 63248:
case 63249:
case 63289:
break;
default:
evt.key=evt.charCode>=evt.KEY_SPACE?String.fromCharCode(evt.charCode):evt.keyCode;
}
}else{
evt.key=evt.charCode>0?String.fromCharCode(evt.charCode):evt.keyCode;
}
}
}
}
}
}
if(dojo.render.html.ie){
if(!evt.target){
evt.target=evt.srcElement;
}
if(!evt.currentTarget){
evt.currentTarget=(_3f1?_3f1:evt.srcElement);
}
if(!evt.layerX){
evt.layerX=evt.offsetX;
}
if(!evt.layerY){
evt.layerY=evt.offsetY;
}
var doc=(evt.srcElement&&evt.srcElement.ownerDocument)?evt.srcElement.ownerDocument:document;
var _3f5=((dojo.render.html.ie55)||(doc["compatMode"]=="BackCompat"))?doc.body:doc.documentElement;
if(!evt.pageX){
evt.pageX=evt.clientX+(_3f5.scrollLeft||0);
}
if(!evt.pageY){
evt.pageY=evt.clientY+(_3f5.scrollTop||0);
}
if(evt.type=="mouseover"){
evt.relatedTarget=evt.fromElement;
}
if(evt.type=="mouseout"){
evt.relatedTarget=evt.toElement;
}
this.currentEvent=evt;
evt.callListener=this.callListener;
evt.stopPropagation=this._stopPropagation;
evt.preventDefault=this._preventDefault;
}
return evt;
};
this.stopEvent=function(evt){
if(window.event){
evt.cancelBubble=true;
evt.returnValue=false;
}else{
evt.preventDefault();
evt.stopPropagation();
}
};
};
dojo.provide("dojo.event.*");
dojo.provide("dojo.gfx.color");
dojo.gfx.color.Color=function(r,g,b,a){
if(dojo.lang.isArray(r)){
this.r=r[0];
this.g=r[1];
this.b=r[2];
this.a=r[3]||1;
}else{
if(dojo.lang.isString(r)){
var rgb=dojo.gfx.color.extractRGB(r);
this.r=rgb[0];
this.g=rgb[1];
this.b=rgb[2];
this.a=g||1;
}else{
if(r instanceof dojo.gfx.color.Color){
this.r=r.r;
this.b=r.b;
this.g=r.g;
this.a=r.a;
}else{
this.r=r;
this.g=g;
this.b=b;
this.a=a;
}
}
}
};
dojo.gfx.color.Color.fromArray=function(arr){
return new dojo.gfx.color.Color(arr[0],arr[1],arr[2],arr[3]);
};
dojo.extend(dojo.gfx.color.Color,{toRgb:function(_3fd){
if(_3fd){
return this.toRgba();
}else{
return [this.r,this.g,this.b];
}
},toRgba:function(){
return [this.r,this.g,this.b,this.a];
},toHex:function(){
return dojo.gfx.color.rgb2hex(this.toRgb());
},toCss:function(){
return "rgb("+this.toRgb().join()+")";
},toString:function(){
return this.toHex();
},blend:function(_3fe,_3ff){
var rgb=null;
if(dojo.lang.isArray(_3fe)){
rgb=_3fe;
}else{
if(_3fe instanceof dojo.gfx.color.Color){
rgb=_3fe.toRgb();
}else{
rgb=new dojo.gfx.color.Color(_3fe).toRgb();
}
}
return dojo.gfx.color.blend(this.toRgb(),rgb,_3ff);
}});
dojo.gfx.color.named={white:[255,255,255],black:[0,0,0],red:[255,0,0],green:[0,255,0],lime:[0,255,0],blue:[0,0,255],navy:[0,0,128],gray:[128,128,128],silver:[192,192,192]};
dojo.gfx.color.blend=function(a,b,_403){
if(typeof a=="string"){
return dojo.gfx.color.blendHex(a,b,_403);
}
if(!_403){
_403=0;
}
_403=Math.min(Math.max(-1,_403),1);
_403=((_403+1)/2);
var c=[];
for(var x=0;x<3;x++){
c[x]=parseInt(b[x]+((a[x]-b[x])*_403));
}
return c;
};
dojo.gfx.color.blendHex=function(a,b,_408){
return dojo.gfx.color.rgb2hex(dojo.gfx.color.blend(dojo.gfx.color.hex2rgb(a),dojo.gfx.color.hex2rgb(b),_408));
};
dojo.gfx.color.extractRGB=function(_409){
var hex="0123456789abcdef";
_409=_409.toLowerCase();
if(_409.indexOf("rgb")==0){
var _40b=_409.match(/rgba*\((\d+), *(\d+), *(\d+)/i);
var ret=_40b.splice(1,3);
return ret;
}else{
var _40d=dojo.gfx.color.hex2rgb(_409);
if(_40d){
return _40d;
}else{
return dojo.gfx.color.named[_409]||[255,255,255];
}
}
};
dojo.gfx.color.hex2rgb=function(hex){
var _40f="0123456789ABCDEF";
var rgb=new Array(3);
if(hex.indexOf("#")==0){
hex=hex.substring(1);
}
hex=hex.toUpperCase();
if(hex.replace(new RegExp("["+_40f+"]","g"),"")!=""){
return null;
}
if(hex.length==3){
rgb[0]=hex.charAt(0)+hex.charAt(0);
rgb[1]=hex.charAt(1)+hex.charAt(1);
rgb[2]=hex.charAt(2)+hex.charAt(2);
}else{
rgb[0]=hex.substring(0,2);
rgb[1]=hex.substring(2,4);
rgb[2]=hex.substring(4);
}
for(var i=0;i<rgb.length;i++){
rgb[i]=_40f.indexOf(rgb[i].charAt(0))*16+_40f.indexOf(rgb[i].charAt(1));
}
return rgb;
};
dojo.gfx.color.rgb2hex=function(r,g,b){
if(dojo.lang.isArray(r)){
g=r[1]||0;
b=r[2]||0;
r=r[0]||0;
}
var ret=dojo.lang.map([r,g,b],function(x){
x=new Number(x);
var s=x.toString(16);
while(s.length<2){
s="0"+s;
}
return s;
});
ret.unshift("#");
return ret.join("");
};
dojo.provide("dojo.lfx.Animation");
dojo.lfx.Line=function(_418,end){
this.start=_418;
this.end=end;
if(dojo.lang.isArray(_418)){
var diff=[];
dojo.lang.forEach(this.start,function(s,i){
diff[i]=this.end[i]-s;
},this);
this.getValue=function(n){
var res=[];
dojo.lang.forEach(this.start,function(s,i){
res[i]=(diff[i]*n)+s;
},this);
return res;
};
}else{
var diff=end-_418;
this.getValue=function(n){
return (diff*n)+this.start;
};
}
};
dojo.lfx.easeDefault=function(n){
if(dojo.render.html.khtml){
return (parseFloat("0.5")+((Math.sin((n+parseFloat("1.5"))*Math.PI))/2));
}else{
return (0.5+((Math.sin((n+1.5)*Math.PI))/2));
}
};
dojo.lfx.easeIn=function(n){
return Math.pow(n,3);
};
dojo.lfx.easeOut=function(n){
return (1-Math.pow(1-n,3));
};
dojo.lfx.easeInOut=function(n){
return ((3*Math.pow(n,2))-(2*Math.pow(n,3)));
};
dojo.lfx.IAnimation=function(){
};
dojo.lang.extend(dojo.lfx.IAnimation,{curve:null,duration:1000,easing:null,repeatCount:0,rate:25,handler:null,beforeBegin:null,onBegin:null,onAnimate:null,onEnd:null,onPlay:null,onPause:null,onStop:null,play:null,pause:null,stop:null,connect:function(evt,_427,_428){
if(!_428){
_428=_427;
_427=this;
}
_428=dojo.lang.hitch(_427,_428);
var _429=this[evt]||function(){
};
this[evt]=function(){
var ret=_429.apply(this,arguments);
_428.apply(this,arguments);
return ret;
};
return this;
},fire:function(evt,args){
if(this[evt]){
this[evt].apply(this,(args||[]));
}
return this;
},repeat:function(_42d){
this.repeatCount=_42d;
return this;
},_active:false,_paused:false});
dojo.lfx.Animation=function(_42e,_42f,_430,_431,_432,rate){
dojo.lfx.IAnimation.call(this);
if(dojo.lang.isNumber(_42e)||(!_42e&&_42f.getValue)){
rate=_432;
_432=_431;
_431=_430;
_430=_42f;
_42f=_42e;
_42e=null;
}else{
if(_42e.getValue||dojo.lang.isArray(_42e)){
rate=_431;
_432=_430;
_431=_42f;
_430=_42e;
_42f=null;
_42e=null;
}
}
if(dojo.lang.isArray(_430)){
this.curve=new dojo.lfx.Line(_430[0],_430[1]);
}else{
this.curve=_430;
}
if(_42f!=null&&_42f>0){
this.duration=_42f;
}
if(_432){
this.repeatCount=_432;
}
if(rate){
this.rate=rate;
}
if(_42e){
dojo.lang.forEach(["handler","beforeBegin","onBegin","onEnd","onPlay","onStop","onAnimate"],function(item){
if(_42e[item]){
this.connect(item,_42e[item]);
}
},this);
}
if(_431&&dojo.lang.isFunction(_431)){
this.easing=_431;
}
};
dojo.inherits(dojo.lfx.Animation,dojo.lfx.IAnimation);
dojo.lang.extend(dojo.lfx.Animation,{_startTime:null,_endTime:null,_timer:null,_percent:0,_startRepeatCount:0,play:function(_435,_436){
if(_436){
clearTimeout(this._timer);
this._active=false;
this._paused=false;
this._percent=0;
}else{
if(this._active&&!this._paused){
return this;
}
}
this.fire("handler",["beforeBegin"]);
this.fire("beforeBegin");
if(_435>0){
setTimeout(dojo.lang.hitch(this,function(){
this.play(null,_436);
}),_435);
return this;
}
this._startTime=new Date().valueOf();
if(this._paused){
this._startTime-=(this.duration*this._percent/100);
}
this._endTime=this._startTime+this.duration;
this._active=true;
this._paused=false;
var step=this._percent/100;
var _438=this.curve.getValue(step);
if(this._percent==0){
if(!this._startRepeatCount){
this._startRepeatCount=this.repeatCount;
}
this.fire("handler",["begin",_438]);
this.fire("onBegin",[_438]);
}
this.fire("handler",["play",_438]);
this.fire("onPlay",[_438]);
this._cycle();
return this;
},pause:function(){
clearTimeout(this._timer);
if(!this._active){
return this;
}
this._paused=true;
var _439=this.curve.getValue(this._percent/100);
this.fire("handler",["pause",_439]);
this.fire("onPause",[_439]);
return this;
},gotoPercent:function(pct,_43b){
clearTimeout(this._timer);
this._active=true;
this._paused=true;
this._percent=pct;
if(_43b){
this.play();
}
return this;
},stop:function(_43c){
clearTimeout(this._timer);
var step=this._percent/100;
if(_43c){
step=1;
}
var _43e=this.curve.getValue(step);
this.fire("handler",["stop",_43e]);
this.fire("onStop",[_43e]);
this._active=false;
this._paused=false;
return this;
},status:function(){
if(this._active){
return this._paused?"paused":"playing";
}else{
return "stopped";
}
return this;
},_cycle:function(){
clearTimeout(this._timer);
if(this._active){
var curr=new Date().valueOf();
var step=(curr-this._startTime)/(this._endTime-this._startTime);
if(step>=1){
step=1;
this._percent=100;
}else{
this._percent=step*100;
}
if((this.easing)&&(dojo.lang.isFunction(this.easing))){
step=this.easing(step);
}
var _441=this.curve.getValue(step);
this.fire("handler",["animate",_441]);
this.fire("onAnimate",[_441]);
if(step<1){
this._timer=setTimeout(dojo.lang.hitch(this,"_cycle"),this.rate);
}else{
this._active=false;
this.fire("handler",["end"]);
this.fire("onEnd");
if(this.repeatCount>0){
this.repeatCount--;
this.play(null,true);
}else{
if(this.repeatCount==-1){
this.play(null,true);
}else{
if(this._startRepeatCount){
this.repeatCount=this._startRepeatCount;
this._startRepeatCount=0;
}
}
}
}
}
return this;
}});
dojo.lfx.Combine=function(_442){
dojo.lfx.IAnimation.call(this);
this._anims=[];
this._animsEnded=0;
var _443=arguments;
if(_443.length==1&&(dojo.lang.isArray(_443[0])||dojo.lang.isArrayLike(_443[0]))){
_443=_443[0];
}
dojo.lang.forEach(_443,function(anim){
this._anims.push(anim);
anim.connect("onEnd",dojo.lang.hitch(this,"_onAnimsEnded"));
},this);
};
dojo.inherits(dojo.lfx.Combine,dojo.lfx.IAnimation);
dojo.lang.extend(dojo.lfx.Combine,{_animsEnded:0,play:function(_445,_446){
if(!this._anims.length){
return this;
}
this.fire("beforeBegin");
if(_445>0){
setTimeout(dojo.lang.hitch(this,function(){
this.play(null,_446);
}),_445);
return this;
}
if(_446||this._anims[0].percent==0){
this.fire("onBegin");
}
this.fire("onPlay");
this._animsCall("play",null,_446);
return this;
},pause:function(){
this.fire("onPause");
this._animsCall("pause");
return this;
},stop:function(_447){
this.fire("onStop");
this._animsCall("stop",_447);
return this;
},_onAnimsEnded:function(){
this._animsEnded++;
if(this._animsEnded>=this._anims.length){
this.fire("onEnd");
}
return this;
},_animsCall:function(_448){
var args=[];
if(arguments.length>1){
for(var i=1;i<arguments.length;i++){
args.push(arguments[i]);
}
}
var _44b=this;
dojo.lang.forEach(this._anims,function(anim){
anim[_448](args);
},_44b);
return this;
}});
dojo.lfx.Chain=function(_44d){
dojo.lfx.IAnimation.call(this);
this._anims=[];
this._currAnim=-1;
var _44e=arguments;
if(_44e.length==1&&(dojo.lang.isArray(_44e[0])||dojo.lang.isArrayLike(_44e[0]))){
_44e=_44e[0];
}
var _44f=this;
dojo.lang.forEach(_44e,function(anim,i,_452){
this._anims.push(anim);
if(i<_452.length-1){
anim.connect("onEnd",dojo.lang.hitch(this,"_playNext"));
}else{
anim.connect("onEnd",dojo.lang.hitch(this,function(){
this.fire("onEnd");
}));
}
},this);
};
dojo.inherits(dojo.lfx.Chain,dojo.lfx.IAnimation);
dojo.lang.extend(dojo.lfx.Chain,{_currAnim:-1,play:function(_453,_454){
if(!this._anims.length){
return this;
}
if(_454||!this._anims[this._currAnim]){
this._currAnim=0;
}
var _455=this._anims[this._currAnim];
this.fire("beforeBegin");
if(_453>0){
setTimeout(dojo.lang.hitch(this,function(){
this.play(null,_454);
}),_453);
return this;
}
if(_455){
if(this._currAnim==0){
this.fire("handler",["begin",this._currAnim]);
this.fire("onBegin",[this._currAnim]);
}
this.fire("onPlay",[this._currAnim]);
_455.play(null,_454);
}
return this;
},pause:function(){
if(this._anims[this._currAnim]){
this._anims[this._currAnim].pause();
this.fire("onPause",[this._currAnim]);
}
return this;
},playPause:function(){
if(this._anims.length==0){
return this;
}
if(this._currAnim==-1){
this._currAnim=0;
}
var _456=this._anims[this._currAnim];
if(_456){
if(!_456._active||_456._paused){
this.play();
}else{
this.pause();
}
}
return this;
},stop:function(){
var _457=this._anims[this._currAnim];
if(_457){
_457.stop();
this.fire("onStop",[this._currAnim]);
}
return _457;
},_playNext:function(){
if(this._currAnim==-1||this._anims.length==0){
return this;
}
this._currAnim++;
if(this._anims[this._currAnim]){
this._anims[this._currAnim].play(null,true);
}
return this;
}});
dojo.lfx.combine=function(_458){
var _459=arguments;
if(dojo.lang.isArray(arguments[0])){
_459=arguments[0];
}
if(_459.length==1){
return _459[0];
}
return new dojo.lfx.Combine(_459);
};
dojo.lfx.chain=function(_45a){
var _45b=arguments;
if(dojo.lang.isArray(arguments[0])){
_45b=arguments[0];
}
if(_45b.length==1){
return _45b[0];
}
return new dojo.lfx.Chain(_45b);
};
dojo.provide("dojo.html.common");
dojo.lang.mixin(dojo.html,dojo.dom);
dojo.html.body=function(){
dojo.deprecated("dojo.html.body() moved to dojo.body()","0.5");
return dojo.body();
};
dojo.html.getEventTarget=function(evt){
if(!evt){
evt=dojo.global().event||{};
}
var t=(evt.srcElement?evt.srcElement:(evt.target?evt.target:null));
while((t)&&(t.nodeType!=1)){
t=t.parentNode;
}
return t;
};
dojo.html.getViewport=function(){
var _45e=dojo.global();
var _45f=dojo.doc();
var w=0;
var h=0;
if(dojo.render.html.mozilla){
w=_45f.documentElement.clientWidth;
h=_45e.innerHeight;
}else{
if(!dojo.render.html.opera&&_45e.innerWidth){
w=_45e.innerWidth;
h=_45e.innerHeight;
}else{
if(!dojo.render.html.opera&&dojo.exists(_45f,"documentElement.clientWidth")){
var w2=_45f.documentElement.clientWidth;
if(!w||w2&&w2<w){
w=w2;
}
h=_45f.documentElement.clientHeight;
}else{
if(dojo.body().clientWidth){
w=dojo.body().clientWidth;
h=dojo.body().clientHeight;
}
}
}
}
return {width:w,height:h};
};
dojo.html.getScroll=function(){
var _463=dojo.global();
var _464=dojo.doc();
var top=_463.pageYOffset||_464.documentElement.scrollTop||dojo.body().scrollTop||0;
var left=_463.pageXOffset||_464.documentElement.scrollLeft||dojo.body().scrollLeft||0;
return {top:top,left:left,offset:{x:left,y:top}};
};
dojo.html.getParentByType=function(node,type){
var _469=dojo.doc();
var _46a=dojo.byId(node);
type=type.toLowerCase();
while((_46a)&&(_46a.nodeName.toLowerCase()!=type)){
if(_46a==(_469["body"]||_469["documentElement"])){
return null;
}
_46a=_46a.parentNode;
}
return _46a;
};
dojo.html.getAttribute=function(node,attr){
node=dojo.byId(node);
if((!node)||(!node.getAttribute)){
return null;
}
var ta=typeof attr=="string"?attr:new String(attr);
var v=node.getAttribute(ta.toUpperCase());
if((v)&&(typeof v=="string")&&(v!="")){
return v;
}
if(v&&v.value){
return v.value;
}
if((node.getAttributeNode)&&(node.getAttributeNode(ta))){
return (node.getAttributeNode(ta)).value;
}else{
if(node.getAttribute(ta)){
return node.getAttribute(ta);
}else{
if(node.getAttribute(ta.toLowerCase())){
return node.getAttribute(ta.toLowerCase());
}
}
}
return null;
};
dojo.html.hasAttribute=function(node,attr){
return dojo.html.getAttribute(dojo.byId(node),attr)?true:false;
};
dojo.html.getCursorPosition=function(e){
e=e||dojo.global().event;
var _472={x:0,y:0};
if(e.pageX||e.pageY){
_472.x=e.pageX;
_472.y=e.pageY;
}else{
var de=dojo.doc().documentElement;
var db=dojo.body();
_472.x=e.clientX+((de||db)["scrollLeft"])-((de||db)["clientLeft"]);
_472.y=e.clientY+((de||db)["scrollTop"])-((de||db)["clientTop"]);
}
return _472;
};
dojo.html.isTag=function(node){
node=dojo.byId(node);
if(node&&node.tagName){
for(var i=1;i<arguments.length;i++){
if(node.tagName.toLowerCase()==String(arguments[i]).toLowerCase()){
return String(arguments[i]).toLowerCase();
}
}
}
return "";
};
if(dojo.render.html.ie&&!dojo.render.html.ie70){
if(window.location.href.substr(0,6).toLowerCase()!="https:"){
(function(){
var _477=dojo.doc().createElement("script");
_477.src="javascript:'dojo.html.createExternalElement=function(doc, tag){ return doc.createElement(tag); }'";
dojo.doc().getElementsByTagName("head")[0].appendChild(_477);
})();
}
}else{
dojo.html.createExternalElement=function(doc,tag){
return doc.createElement(tag);
};
}
dojo.html._callDeprecated=function(_47a,_47b,args,_47d,_47e){
dojo.deprecated("dojo.html."+_47a,"replaced by dojo.html."+_47b+"("+(_47d?"node, {"+_47d+": "+_47d+"}":"")+")"+(_47e?"."+_47e:""),"0.5");
var _47f=[];
if(_47d){
var _480={};
_480[_47d]=args[1];
_47f.push(args[0]);
_47f.push(_480);
}else{
_47f=args;
}
var ret=dojo.html[_47b].apply(dojo.html,args);
if(_47e){
return ret[_47e];
}else{
return ret;
}
};
dojo.html.getViewportWidth=function(){
return dojo.html._callDeprecated("getViewportWidth","getViewport",arguments,null,"width");
};
dojo.html.getViewportHeight=function(){
return dojo.html._callDeprecated("getViewportHeight","getViewport",arguments,null,"height");
};
dojo.html.getViewportSize=function(){
return dojo.html._callDeprecated("getViewportSize","getViewport",arguments);
};
dojo.html.getScrollTop=function(){
return dojo.html._callDeprecated("getScrollTop","getScroll",arguments,null,"top");
};
dojo.html.getScrollLeft=function(){
return dojo.html._callDeprecated("getScrollLeft","getScroll",arguments,null,"left");
};
dojo.html.getScrollOffset=function(){
return dojo.html._callDeprecated("getScrollOffset","getScroll",arguments,null,"offset");
};
dojo.provide("dojo.uri.Uri");
dojo.uri=new function(){
this.dojoUri=function(uri){
return new dojo.uri.Uri(dojo.hostenv.getBaseScriptUri(),uri);
};
this.moduleUri=function(_483,uri){
var loc=dojo.hostenv.getModuleSymbols(_483).join("/");
if(!loc){
return null;
}
if(loc.lastIndexOf("/")!=loc.length-1){
loc+="/";
}
return new dojo.uri.Uri(dojo.hostenv.getBaseScriptUri()+loc,uri);
};
this.Uri=function(){
var uri=arguments[0];
for(var i=1;i<arguments.length;i++){
if(!arguments[i]){
continue;
}
var _488=new dojo.uri.Uri(arguments[i].toString());
var _489=new dojo.uri.Uri(uri.toString());
if((_488.path=="")&&(_488.scheme==null)&&(_488.authority==null)&&(_488.query==null)){
if(_488.fragment!=null){
_489.fragment=_488.fragment;
}
_488=_489;
}else{
if(_488.scheme==null){
_488.scheme=_489.scheme;
if(_488.authority==null){
_488.authority=_489.authority;
if(_488.path.charAt(0)!="/"){
var path=_489.path.substring(0,_489.path.lastIndexOf("/")+1)+_488.path;
var segs=path.split("/");
for(var j=0;j<segs.length;j++){
if(segs[j]=="."){
if(j==segs.length-1){
segs[j]="";
}else{
segs.splice(j,1);
j--;
}
}else{
if(j>0&&!(j==1&&segs[0]=="")&&segs[j]==".."&&segs[j-1]!=".."){
if(j==segs.length-1){
segs.splice(j,1);
segs[j-1]="";
}else{
segs.splice(j-1,2);
j-=2;
}
}
}
}
_488.path=segs.join("/");
}
}
}
}
uri="";
if(_488.scheme!=null){
uri+=_488.scheme+":";
}
if(_488.authority!=null){
uri+="//"+_488.authority;
}
uri+=_488.path;
if(_488.query!=null){
uri+="?"+_488.query;
}
if(_488.fragment!=null){
uri+="#"+_488.fragment;
}
}
this.uri=uri.toString();
var _48d="^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$";
var r=this.uri.match(new RegExp(_48d));
this.scheme=r[2]||(r[1]?"":null);
this.authority=r[4]||(r[3]?"":null);
this.path=r[5];
this.query=r[7]||(r[6]?"":null);
this.fragment=r[9]||(r[8]?"":null);
if(this.authority!=null){
_48d="^((([^:]+:)?([^@]+))@)?([^:]*)(:([0-9]+))?$";
r=this.authority.match(new RegExp(_48d));
this.user=r[3]||null;
this.password=r[4]||null;
this.host=r[5];
this.port=r[7]||null;
}
this.toString=function(){
return this.uri;
};
};
};
dojo.provide("dojo.html.style");
dojo.html.getClass=function(node){
node=dojo.byId(node);
if(!node){
return "";
}
var cs="";
if(node.className){
cs=node.className;
}else{
if(dojo.html.hasAttribute(node,"class")){
cs=dojo.html.getAttribute(node,"class");
}
}
return cs.replace(/^\s+|\s+$/g,"");
};
dojo.html.getClasses=function(node){
var c=dojo.html.getClass(node);
return (c=="")?[]:c.split(/\s+/g);
};
dojo.html.hasClass=function(node,_494){
return (new RegExp("(^|\\s+)"+_494+"(\\s+|$)")).test(dojo.html.getClass(node));
};
dojo.html.prependClass=function(node,_496){
_496+=" "+dojo.html.getClass(node);
return dojo.html.setClass(node,_496);
};
dojo.html.addClass=function(node,_498){
if(dojo.html.hasClass(node,_498)){
return false;
}
_498=(dojo.html.getClass(node)+" "+_498).replace(/^\s+|\s+$/g,"");
return dojo.html.setClass(node,_498);
};
dojo.html.setClass=function(node,_49a){
node=dojo.byId(node);
var cs=new String(_49a);
try{
if(typeof node.className=="string"){
node.className=cs;
}else{
if(node.setAttribute){
node.setAttribute("class",_49a);
node.className=cs;
}else{
return false;
}
}
}
catch(e){
dojo.debug("dojo.html.setClass() failed",e);
}
return true;
};
dojo.html.removeClass=function(node,_49d,_49e){
try{
if(!_49e){
var _49f=dojo.html.getClass(node).replace(new RegExp("(^|\\s+)"+_49d+"(\\s+|$)"),"$1$2");
}else{
var _49f=dojo.html.getClass(node).replace(_49d,"");
}
dojo.html.setClass(node,_49f);
}
catch(e){
dojo.debug("dojo.html.removeClass() failed",e);
}
return true;
};
dojo.html.replaceClass=function(node,_4a1,_4a2){
dojo.html.removeClass(node,_4a2);
dojo.html.addClass(node,_4a1);
};
dojo.html.classMatchType={ContainsAll:0,ContainsAny:1,IsOnly:2};
dojo.html.getElementsByClass=function(_4a3,_4a4,_4a5,_4a6,_4a7){
_4a7=false;
var _4a8=dojo.doc();
_4a4=dojo.byId(_4a4)||_4a8;
var _4a9=_4a3.split(/\s+/g);
var _4aa=[];
if(_4a6!=1&&_4a6!=2){
_4a6=0;
}
var _4ab=new RegExp("(\\s|^)(("+_4a9.join(")|(")+"))(\\s|$)");
var _4ac=_4a9.join(" ").length;
var _4ad=[];
if(!_4a7&&_4a8.evaluate){
var _4ae=".//"+(_4a5||"*")+"[contains(";
if(_4a6!=dojo.html.classMatchType.ContainsAny){
_4ae+="concat(' ',@class,' '), ' "+_4a9.join(" ') and contains(concat(' ',@class,' '), ' ")+" ')";
if(_4a6==2){
_4ae+=" and string-length(@class)="+_4ac+"]";
}else{
_4ae+="]";
}
}else{
_4ae+="concat(' ',@class,' '), ' "+_4a9.join(" ') or contains(concat(' ',@class,' '), ' ")+" ')]";
}
var _4af=_4a8.evaluate(_4ae,_4a4,null,XPathResult.ANY_TYPE,null);
var _4b0=_4af.iterateNext();
while(_4b0){
try{
_4ad.push(_4b0);
_4b0=_4af.iterateNext();
}
catch(e){
break;
}
}
return _4ad;
}else{
if(!_4a5){
_4a5="*";
}
_4ad=_4a4.getElementsByTagName(_4a5);
var node,i=0;
outer:
while(node=_4ad[i++]){
var _4b3=dojo.html.getClasses(node);
if(_4b3.length==0){
continue outer;
}
var _4b4=0;
for(var j=0;j<_4b3.length;j++){
if(_4ab.test(_4b3[j])){
if(_4a6==dojo.html.classMatchType.ContainsAny){
_4aa.push(node);
continue outer;
}else{
_4b4++;
}
}else{
if(_4a6==dojo.html.classMatchType.IsOnly){
continue outer;
}
}
}
if(_4b4==_4a9.length){
if((_4a6==dojo.html.classMatchType.IsOnly)&&(_4b4==_4b3.length)){
_4aa.push(node);
}else{
if(_4a6==dojo.html.classMatchType.ContainsAll){
_4aa.push(node);
}
}
}
}
return _4aa;
}
};
dojo.html.getElementsByClassName=dojo.html.getElementsByClass;
dojo.html.toCamelCase=function(_4b6){
var arr=_4b6.split("-"),cc=arr[0];
for(var i=1;i<arr.length;i++){
cc+=arr[i].charAt(0).toUpperCase()+arr[i].substring(1);
}
return cc;
};
dojo.html.toSelectorCase=function(_4ba){
return _4ba.replace(/([A-Z])/g,"-$1").toLowerCase();
};
dojo.html.getComputedStyle=function(node,_4bc,_4bd){
node=dojo.byId(node);
var _4bc=dojo.html.toSelectorCase(_4bc);
var _4be=dojo.html.toCamelCase(_4bc);
if(!node||!node.style){
return _4bd;
}else{
if(document.defaultView&&dojo.html.isDescendantOf(node,node.ownerDocument)){
try{
var cs=document.defaultView.getComputedStyle(node,"");
if(cs){
return cs.getPropertyValue(_4bc);
}
}
catch(e){
if(node.style.getPropertyValue){
return node.style.getPropertyValue(_4bc);
}else{
return _4bd;
}
}
}else{
if(node.currentStyle){
return node.currentStyle[_4be];
}
}
}
if(node.style.getPropertyValue){
return node.style.getPropertyValue(_4bc);
}else{
return _4bd;
}
};
dojo.html.getStyleProperty=function(node,_4c1){
node=dojo.byId(node);
return (node&&node.style?node.style[dojo.html.toCamelCase(_4c1)]:undefined);
};
dojo.html.getStyle=function(node,_4c3){
var _4c4=dojo.html.getStyleProperty(node,_4c3);
return (_4c4?_4c4:dojo.html.getComputedStyle(node,_4c3));
};
dojo.html.setStyle=function(node,_4c6,_4c7){
node=dojo.byId(node);
if(node&&node.style){
var _4c8=dojo.html.toCamelCase(_4c6);
node.style[_4c8]=_4c7;
}
};
dojo.html.setStyleText=function(_4c9,text){
try{
_4c9.style.cssText=text;
}
catch(e){
_4c9.setAttribute("style",text);
}
};
dojo.html.copyStyle=function(_4cb,_4cc){
if(!_4cc.style.cssText){
_4cb.setAttribute("style",_4cc.getAttribute("style"));
}else{
_4cb.style.cssText=_4cc.style.cssText;
}
dojo.html.addClass(_4cb,dojo.html.getClass(_4cc));
};
dojo.html.getUnitValue=function(node,_4ce,_4cf){
var s=dojo.html.getComputedStyle(node,_4ce);
if((!s)||((s=="auto")&&(_4cf))){
return {value:0,units:"px"};
}
var _4d1=s.match(/(\-?[\d.]+)([a-z%]*)/i);
if(!_4d1){
return dojo.html.getUnitValue.bad;
}
return {value:Number(_4d1[1]),units:_4d1[2].toLowerCase()};
};
dojo.html.getUnitValue.bad={value:NaN,units:""};
dojo.html.getPixelValue=function(node,_4d3,_4d4){
var _4d5=dojo.html.getUnitValue(node,_4d3,_4d4);
if(isNaN(_4d5.value)){
return 0;
}
if((_4d5.value)&&(_4d5.units!="px")){
return NaN;
}
return _4d5.value;
};
dojo.html.setPositivePixelValue=function(node,_4d7,_4d8){
if(isNaN(_4d8)){
return false;
}
node.style[_4d7]=Math.max(0,_4d8)+"px";
return true;
};
dojo.html.styleSheet=null;
dojo.html.insertCssRule=function(_4d9,_4da,_4db){
if(!dojo.html.styleSheet){
if(document.createStyleSheet){
dojo.html.styleSheet=document.createStyleSheet();
}else{
if(document.styleSheets[0]){
dojo.html.styleSheet=document.styleSheets[0];
}else{
return null;
}
}
}
if(arguments.length<3){
if(dojo.html.styleSheet.cssRules){
_4db=dojo.html.styleSheet.cssRules.length;
}else{
if(dojo.html.styleSheet.rules){
_4db=dojo.html.styleSheet.rules.length;
}else{
return null;
}
}
}
if(dojo.html.styleSheet.insertRule){
var rule=_4d9+" { "+_4da+" }";
return dojo.html.styleSheet.insertRule(rule,_4db);
}else{
if(dojo.html.styleSheet.addRule){
return dojo.html.styleSheet.addRule(_4d9,_4da,_4db);
}else{
return null;
}
}
};
dojo.html.removeCssRule=function(_4dd){
if(!dojo.html.styleSheet){
dojo.debug("no stylesheet defined for removing rules");
return false;
}
if(dojo.render.html.ie){
if(!_4dd){
_4dd=dojo.html.styleSheet.rules.length;
dojo.html.styleSheet.removeRule(_4dd);
}
}else{
if(document.styleSheets[0]){
if(!_4dd){
_4dd=dojo.html.styleSheet.cssRules.length;
}
dojo.html.styleSheet.deleteRule(_4dd);
}
}
return true;
};
dojo.html._insertedCssFiles=[];
dojo.html.insertCssFile=function(URI,doc,_4e0,_4e1){
if(!URI){
return;
}
if(!doc){
doc=document;
}
var _4e2=dojo.hostenv.getText(URI,false,_4e1);
if(_4e2===null){
return;
}
_4e2=dojo.html.fixPathsInCssText(_4e2,URI);
if(_4e0){
var idx=-1,node,ent=dojo.html._insertedCssFiles;
for(var i=0;i<ent.length;i++){
if((ent[i].doc==doc)&&(ent[i].cssText==_4e2)){
idx=i;
node=ent[i].nodeRef;
break;
}
}
if(node){
var _4e7=doc.getElementsByTagName("style");
for(var i=0;i<_4e7.length;i++){
if(_4e7[i]==node){
return;
}
}
dojo.html._insertedCssFiles.shift(idx,1);
}
}
var _4e8=dojo.html.insertCssText(_4e2,doc);
dojo.html._insertedCssFiles.push({"doc":doc,"cssText":_4e2,"nodeRef":_4e8});
if(_4e8&&djConfig.isDebug){
_4e8.setAttribute("dbgHref",URI);
}
return _4e8;
};
dojo.html.insertCssText=function(_4e9,doc,URI){
if(!_4e9){
return;
}
if(!doc){
doc=document;
}
if(URI){
_4e9=dojo.html.fixPathsInCssText(_4e9,URI);
}
var _4ec=doc.createElement("style");
_4ec.setAttribute("type","text/css");
var head=doc.getElementsByTagName("head")[0];
if(!head){
dojo.debug("No head tag in document, aborting styles");
return;
}else{
head.appendChild(_4ec);
}
if(_4ec.styleSheet){
var _4ee=function(){
try{
_4ec.styleSheet.cssText=_4e9;
}
catch(e){
dojo.debug(e);
}
};
if(_4ec.styleSheet.disabled){
setTimeout(_4ee,10);
}else{
_4ee();
}
}else{
var _4ef=doc.createTextNode(_4e9);
_4ec.appendChild(_4ef);
}
return _4ec;
};
dojo.html.fixPathsInCssText=function(_4f0,URI){
if(!_4f0||!URI){
return;
}
var _4f2,str="",url="",_4f5="[\\t\\s\\w\\(\\)\\/\\.\\\\'\"-:#=&?~]+";
var _4f6=new RegExp("url\\(\\s*("+_4f5+")\\s*\\)");
var _4f7=/(file|https?|ftps?):\/\//;
regexTrim=new RegExp("^[\\s]*(['\"]?)("+_4f5+")\\1[\\s]*?$");
if(dojo.render.html.ie55||dojo.render.html.ie60){
var _4f8=new RegExp("AlphaImageLoader\\((.*)src=['\"]("+_4f5+")['\"]");
while(_4f2=_4f8.exec(_4f0)){
url=_4f2[2].replace(regexTrim,"$2");
if(!_4f7.exec(url)){
url=(new dojo.uri.Uri(URI,url).toString());
}
str+=_4f0.substring(0,_4f2.index)+"AlphaImageLoader("+_4f2[1]+"src='"+url+"'";
_4f0=_4f0.substr(_4f2.index+_4f2[0].length);
}
_4f0=str+_4f0;
str="";
}
while(_4f2=_4f6.exec(_4f0)){
url=_4f2[1].replace(regexTrim,"$2");
if(!_4f7.exec(url)){
url=(new dojo.uri.Uri(URI,url).toString());
}
str+=_4f0.substring(0,_4f2.index)+"url("+url+")";
_4f0=_4f0.substr(_4f2.index+_4f2[0].length);
}
return str+_4f0;
};
dojo.html.setActiveStyleSheet=function(_4f9){
var i=0,a,els=dojo.doc().getElementsByTagName("link");
while(a=els[i++]){
if(a.getAttribute("rel").indexOf("style")!=-1&&a.getAttribute("title")){
a.disabled=true;
if(a.getAttribute("title")==_4f9){
a.disabled=false;
}
}
}
};
dojo.html.getActiveStyleSheet=function(){
var i=0,a,els=dojo.doc().getElementsByTagName("link");
while(a=els[i++]){
if(a.getAttribute("rel").indexOf("style")!=-1&&a.getAttribute("title")&&!a.disabled){
return a.getAttribute("title");
}
}
return null;
};
dojo.html.getPreferredStyleSheet=function(){
var i=0,a,els=dojo.doc().getElementsByTagName("link");
while(a=els[i++]){
if(a.getAttribute("rel").indexOf("style")!=-1&&a.getAttribute("rel").indexOf("alt")==-1&&a.getAttribute("title")){
return a.getAttribute("title");
}
}
return null;
};
dojo.html.applyBrowserClass=function(node){
var drh=dojo.render.html;
var _505={dj_ie:drh.ie,dj_ie55:drh.ie55,dj_ie6:drh.ie60,dj_ie7:drh.ie70,dj_iequirks:drh.ie&&drh.quirks,dj_opera:drh.opera,dj_opera8:drh.opera&&(Math.floor(dojo.render.version)==8),dj_opera9:drh.opera&&(Math.floor(dojo.render.version)==9),dj_khtml:drh.khtml,dj_safari:drh.safari,dj_gecko:drh.mozilla};
for(var p in _505){
if(_505[p]){
dojo.html.addClass(node,p);
}
}
};
dojo.provide("dojo.html.display");
dojo.html._toggle=function(node,_508,_509){
node=dojo.byId(node);
_509(node,!_508(node));
return _508(node);
};
dojo.html.show=function(node){
node=dojo.byId(node);
if(dojo.html.getStyleProperty(node,"display")=="none"){
dojo.html.setStyle(node,"display",(node.dojoDisplayCache||""));
node.dojoDisplayCache=undefined;
}
};
dojo.html.hide=function(node){
node=dojo.byId(node);
if(typeof node["dojoDisplayCache"]=="undefined"){
var d=dojo.html.getStyleProperty(node,"display");
if(d!="none"){
node.dojoDisplayCache=d;
}
}
dojo.html.setStyle(node,"display","none");
};
dojo.html.setShowing=function(node,_50e){
dojo.html[(_50e?"show":"hide")](node);
};
dojo.html.isShowing=function(node){
return (dojo.html.getStyleProperty(node,"display")!="none");
};
dojo.html.toggleShowing=function(node){
return dojo.html._toggle(node,dojo.html.isShowing,dojo.html.setShowing);
};
dojo.html.displayMap={tr:"",td:"",th:"",img:"inline",span:"inline",input:"inline",button:"inline"};
dojo.html.suggestDisplayByTagName=function(node){
node=dojo.byId(node);
if(node&&node.tagName){
var tag=node.tagName.toLowerCase();
return (tag in dojo.html.displayMap?dojo.html.displayMap[tag]:"block");
}
};
dojo.html.setDisplay=function(node,_514){
dojo.html.setStyle(node,"display",((_514 instanceof String||typeof _514=="string")?_514:(_514?dojo.html.suggestDisplayByTagName(node):"none")));
};
dojo.html.isDisplayed=function(node){
return (dojo.html.getComputedStyle(node,"display")!="none");
};
dojo.html.toggleDisplay=function(node){
return dojo.html._toggle(node,dojo.html.isDisplayed,dojo.html.setDisplay);
};
dojo.html.setVisibility=function(node,_518){
dojo.html.setStyle(node,"visibility",((_518 instanceof String||typeof _518=="string")?_518:(_518?"visible":"hidden")));
};
dojo.html.isVisible=function(node){
return (dojo.html.getComputedStyle(node,"visibility")!="hidden");
};
dojo.html.toggleVisibility=function(node){
return dojo.html._toggle(node,dojo.html.isVisible,dojo.html.setVisibility);
};
dojo.html.setOpacity=function(node,_51c,_51d){
node=dojo.byId(node);
var h=dojo.render.html;
if(!_51d){
if(_51c>=1){
if(h.ie){
dojo.html.clearOpacity(node);
return;
}else{
_51c=0.999999;
}
}else{
if(_51c<0){
_51c=0;
}
}
}
if(h.ie){
if(node.nodeName.toLowerCase()=="tr"){
var tds=node.getElementsByTagName("td");
for(var x=0;x<tds.length;x++){
tds[x].style.filter="Alpha(Opacity="+_51c*100+")";
}
}
node.style.filter="Alpha(Opacity="+_51c*100+")";
}else{
if(h.moz){
node.style.opacity=_51c;
node.style.MozOpacity=_51c;
}else{
if(h.safari){
node.style.opacity=_51c;
node.style.KhtmlOpacity=_51c;
}else{
node.style.opacity=_51c;
}
}
}
};
dojo.html.clearOpacity=function(node){
node=dojo.byId(node);
var ns=node.style;
var h=dojo.render.html;
if(h.ie){
try{
if(node.filters&&node.filters.alpha){
ns.filter="";
}
}
catch(e){
}
}else{
if(h.moz){
ns.opacity=1;
ns.MozOpacity=1;
}else{
if(h.safari){
ns.opacity=1;
ns.KhtmlOpacity=1;
}else{
ns.opacity=1;
}
}
}
};
dojo.html.getOpacity=function(node){
node=dojo.byId(node);
var h=dojo.render.html;
if(h.ie){
var opac=(node.filters&&node.filters.alpha&&typeof node.filters.alpha.opacity=="number"?node.filters.alpha.opacity:100)/100;
}else{
var opac=node.style.opacity||node.style.MozOpacity||node.style.KhtmlOpacity||1;
}
return opac>=0.999999?1:Number(opac);
};
dojo.provide("dojo.html.color");
dojo.html.getBackgroundColor=function(node){
node=dojo.byId(node);
var _528;
do{
_528=dojo.html.getStyle(node,"background-color");
if(_528.toLowerCase()=="rgba(0, 0, 0, 0)"){
_528="transparent";
}
if(node==document.getElementsByTagName("body")[0]){
node=null;
break;
}
node=node.parentNode;
}while(node&&dojo.lang.inArray(["transparent",""],_528));
if(_528=="transparent"){
_528=[255,255,255,0];
}else{
_528=dojo.gfx.color.extractRGB(_528);
}
return _528;
};
dojo.provide("dojo.html.layout");
dojo.html.sumAncestorProperties=function(node,prop){
node=dojo.byId(node);
if(!node){
return 0;
}
var _52b=0;
while(node){
if(dojo.html.getComputedStyle(node,"position")=="fixed"){
return 0;
}
var val=node[prop];
if(val){
_52b+=val-0;
if(node==dojo.body()){
break;
}
}
node=node.parentNode;
}
return _52b;
};
dojo.html.setStyleAttributes=function(node,_52e){
node=dojo.byId(node);
var _52f=_52e.replace(/(;)?\s*$/,"").split(";");
for(var i=0;i<_52f.length;i++){
var _531=_52f[i].split(":");
var name=_531[0].replace(/\s*$/,"").replace(/^\s*/,"").toLowerCase();
var _533=_531[1].replace(/\s*$/,"").replace(/^\s*/,"");
switch(name){
case "opacity":
dojo.html.setOpacity(node,_533);
break;
case "content-height":
dojo.html.setContentBox(node,{height:_533});
break;
case "content-width":
dojo.html.setContentBox(node,{width:_533});
break;
case "outer-height":
dojo.html.setMarginBox(node,{height:_533});
break;
case "outer-width":
dojo.html.setMarginBox(node,{width:_533});
break;
default:
node.style[dojo.html.toCamelCase(name)]=_533;
}
}
};
dojo.html.boxSizing={MARGIN_BOX:"margin-box",BORDER_BOX:"border-box",PADDING_BOX:"padding-box",CONTENT_BOX:"content-box"};
dojo.html.getAbsolutePosition=dojo.html.abs=function(node,_535,_536){
node=dojo.byId(node,node.ownerDocument);
var ret={x:0,y:0};
var bs=dojo.html.boxSizing;
if(!_536){
_536=bs.CONTENT_BOX;
}
var _539=2;
var _53a;
switch(_536){
case bs.MARGIN_BOX:
_53a=3;
break;
case bs.BORDER_BOX:
_53a=2;
break;
case bs.PADDING_BOX:
default:
_53a=1;
break;
case bs.CONTENT_BOX:
_53a=0;
break;
}
var h=dojo.render.html;
var db=document["body"]||document["documentElement"];
if(h.ie){
with(node.getBoundingClientRect()){
ret.x=left-2;
ret.y=top-2;
}
}else{
if(document.getBoxObjectFor){
_539=1;
try{
var bo=document.getBoxObjectFor(node);
ret.x=bo.x-dojo.html.sumAncestorProperties(node,"scrollLeft");
ret.y=bo.y-dojo.html.sumAncestorProperties(node,"scrollTop");
}
catch(e){
}
}else{
if(node["offsetParent"]){
var _53e;
if((h.safari)&&(node.style.getPropertyValue("position")=="absolute")&&(node.parentNode==db)){
_53e=db;
}else{
_53e=db.parentNode;
}
if(node.parentNode!=db){
var nd=node;
if(dojo.render.html.opera){
nd=db;
}
ret.x-=dojo.html.sumAncestorProperties(nd,"scrollLeft");
ret.y-=dojo.html.sumAncestorProperties(nd,"scrollTop");
}
var _540=node;
do{
var n=_540["offsetLeft"];
if(!h.opera||n>0){
ret.x+=isNaN(n)?0:n;
}
var m=_540["offsetTop"];
ret.y+=isNaN(m)?0:m;
_540=_540.offsetParent;
}while((_540!=_53e)&&(_540!=null));
}else{
if(node["x"]&&node["y"]){
ret.x+=isNaN(node.x)?0:node.x;
ret.y+=isNaN(node.y)?0:node.y;
}
}
}
}
if(_535){
var _543=dojo.html.getScroll();
ret.y+=_543.top;
ret.x+=_543.left;
}
var _544=[dojo.html.getPaddingExtent,dojo.html.getBorderExtent,dojo.html.getMarginExtent];
if(_539>_53a){
for(var i=_53a;i<_539;++i){
ret.y+=_544[i](node,"top");
ret.x+=_544[i](node,"left");
}
}else{
if(_539<_53a){
for(var i=_53a;i>_539;--i){
ret.y-=_544[i-1](node,"top");
ret.x-=_544[i-1](node,"left");
}
}
}
ret.top=ret.y;
ret.left=ret.x;
return ret;
};
dojo.html.isPositionAbsolute=function(node){
return (dojo.html.getComputedStyle(node,"position")=="absolute");
};
dojo.html._sumPixelValues=function(node,_548,_549){
var _54a=0;
for(var x=0;x<_548.length;x++){
_54a+=dojo.html.getPixelValue(node,_548[x],_549);
}
return _54a;
};
dojo.html.getMargin=function(node){
return {width:dojo.html._sumPixelValues(node,["margin-left","margin-right"],(dojo.html.getComputedStyle(node,"position")=="absolute")),height:dojo.html._sumPixelValues(node,["margin-top","margin-bottom"],(dojo.html.getComputedStyle(node,"position")=="absolute"))};
};
dojo.html.getBorder=function(node){
return {width:dojo.html.getBorderExtent(node,"left")+dojo.html.getBorderExtent(node,"right"),height:dojo.html.getBorderExtent(node,"top")+dojo.html.getBorderExtent(node,"bottom")};
};
dojo.html.getBorderExtent=function(node,side){
return (dojo.html.getStyle(node,"border-"+side+"-style")=="none"?0:dojo.html.getPixelValue(node,"border-"+side+"-width"));
};
dojo.html.getMarginExtent=function(node,side){
return dojo.html._sumPixelValues(node,["margin-"+side],dojo.html.isPositionAbsolute(node));
};
dojo.html.getPaddingExtent=function(node,side){
return dojo.html._sumPixelValues(node,["padding-"+side],true);
};
dojo.html.getPadding=function(node){
return {width:dojo.html._sumPixelValues(node,["padding-left","padding-right"],true),height:dojo.html._sumPixelValues(node,["padding-top","padding-bottom"],true)};
};
dojo.html.getPadBorder=function(node){
var pad=dojo.html.getPadding(node);
var _557=dojo.html.getBorder(node);
return {width:pad.width+_557.width,height:pad.height+_557.height};
};
dojo.html.getBoxSizing=function(node){
var h=dojo.render.html;
var bs=dojo.html.boxSizing;
if(((h.ie)||(h.opera))&&node.nodeName!="IMG"){
var cm=document["compatMode"];
if((cm=="BackCompat")||(cm=="QuirksMode")){
return bs.BORDER_BOX;
}else{
return bs.CONTENT_BOX;
}
}else{
if(arguments.length==0){
node=document.documentElement;
}
var _55c=dojo.html.getStyle(node,"-moz-box-sizing");
if(!_55c){
_55c=dojo.html.getStyle(node,"box-sizing");
}
return (_55c?_55c:bs.CONTENT_BOX);
}
};
dojo.html.isBorderBox=function(node){
return (dojo.html.getBoxSizing(node)==dojo.html.boxSizing.BORDER_BOX);
};
dojo.html.getBorderBox=function(node){
node=dojo.byId(node);
return {width:node.offsetWidth,height:node.offsetHeight};
};
dojo.html.getPaddingBox=function(node){
var box=dojo.html.getBorderBox(node);
var _561=dojo.html.getBorder(node);
return {width:box.width-_561.width,height:box.height-_561.height};
};
dojo.html.getContentBox=function(node){
node=dojo.byId(node);
var _563=dojo.html.getPadBorder(node);
return {width:node.offsetWidth-_563.width,height:node.offsetHeight-_563.height};
};
dojo.html.setContentBox=function(node,args){
node=dojo.byId(node);
var _566=0;
var _567=0;
var isbb=dojo.html.isBorderBox(node);
var _569=(isbb?dojo.html.getPadBorder(node):{width:0,height:0});
var ret={};
if(typeof args.width!="undefined"){
_566=args.width+_569.width;
ret.width=dojo.html.setPositivePixelValue(node,"width",_566);
}
if(typeof args.height!="undefined"){
_567=args.height+_569.height;
ret.height=dojo.html.setPositivePixelValue(node,"height",_567);
}
return ret;
};
dojo.html.getMarginBox=function(node){
var _56c=dojo.html.getBorderBox(node);
var _56d=dojo.html.getMargin(node);
return {width:_56c.width+_56d.width,height:_56c.height+_56d.height};
};
dojo.html.setMarginBox=function(node,args){
node=dojo.byId(node);
var _570=0;
var _571=0;
var isbb=dojo.html.isBorderBox(node);
var _573=(!isbb?dojo.html.getPadBorder(node):{width:0,height:0});
var _574=dojo.html.getMargin(node);
var ret={};
if(typeof args.width!="undefined"){
_570=args.width-_573.width;
_570-=_574.width;
ret.width=dojo.html.setPositivePixelValue(node,"width",_570);
}
if(typeof args.height!="undefined"){
_571=args.height-_573.height;
_571-=_574.height;
ret.height=dojo.html.setPositivePixelValue(node,"height",_571);
}
return ret;
};
dojo.html.getElementBox=function(node,type){
var bs=dojo.html.boxSizing;
switch(type){
case bs.MARGIN_BOX:
return dojo.html.getMarginBox(node);
case bs.BORDER_BOX:
return dojo.html.getBorderBox(node);
case bs.PADDING_BOX:
return dojo.html.getPaddingBox(node);
case bs.CONTENT_BOX:
default:
return dojo.html.getContentBox(node);
}
};
dojo.html.toCoordinateObject=dojo.html.toCoordinateArray=function(_579,_57a,_57b){
if(_579 instanceof Array||typeof _579=="array"){
dojo.deprecated("dojo.html.toCoordinateArray","use dojo.html.toCoordinateObject({left: , top: , width: , height: }) instead","0.5");
while(_579.length<4){
_579.push(0);
}
while(_579.length>4){
_579.pop();
}
var ret={left:_579[0],top:_579[1],width:_579[2],height:_579[3]};
}else{
if(!_579.nodeType&&!(_579 instanceof String||typeof _579=="string")&&("width" in _579||"height" in _579||"left" in _579||"x" in _579||"top" in _579||"y" in _579)){
var ret={left:_579.left||_579.x||0,top:_579.top||_579.y||0,width:_579.width||0,height:_579.height||0};
}else{
var node=dojo.byId(_579);
var pos=dojo.html.abs(node,_57a,_57b);
var _57f=dojo.html.getMarginBox(node);
var ret={left:pos.left,top:pos.top,width:_57f.width,height:_57f.height};
}
}
ret.x=ret.left;
ret.y=ret.top;
return ret;
};
dojo.html.setMarginBoxWidth=dojo.html.setOuterWidth=function(node,_581){
return dojo.html._callDeprecated("setMarginBoxWidth","setMarginBox",arguments,"width");
};
dojo.html.setMarginBoxHeight=dojo.html.setOuterHeight=function(){
return dojo.html._callDeprecated("setMarginBoxHeight","setMarginBox",arguments,"height");
};
dojo.html.getMarginBoxWidth=dojo.html.getOuterWidth=function(){
return dojo.html._callDeprecated("getMarginBoxWidth","getMarginBox",arguments,null,"width");
};
dojo.html.getMarginBoxHeight=dojo.html.getOuterHeight=function(){
return dojo.html._callDeprecated("getMarginBoxHeight","getMarginBox",arguments,null,"height");
};
dojo.html.getTotalOffset=function(node,type,_584){
return dojo.html._callDeprecated("getTotalOffset","getAbsolutePosition",arguments,null,type);
};
dojo.html.getAbsoluteX=function(node,_586){
return dojo.html._callDeprecated("getAbsoluteX","getAbsolutePosition",arguments,null,"x");
};
dojo.html.getAbsoluteY=function(node,_588){
return dojo.html._callDeprecated("getAbsoluteY","getAbsolutePosition",arguments,null,"y");
};
dojo.html.totalOffsetLeft=function(node,_58a){
return dojo.html._callDeprecated("totalOffsetLeft","getAbsolutePosition",arguments,null,"left");
};
dojo.html.totalOffsetTop=function(node,_58c){
return dojo.html._callDeprecated("totalOffsetTop","getAbsolutePosition",arguments,null,"top");
};
dojo.html.getMarginWidth=function(node){
return dojo.html._callDeprecated("getMarginWidth","getMargin",arguments,null,"width");
};
dojo.html.getMarginHeight=function(node){
return dojo.html._callDeprecated("getMarginHeight","getMargin",arguments,null,"height");
};
dojo.html.getBorderWidth=function(node){
return dojo.html._callDeprecated("getBorderWidth","getBorder",arguments,null,"width");
};
dojo.html.getBorderHeight=function(node){
return dojo.html._callDeprecated("getBorderHeight","getBorder",arguments,null,"height");
};
dojo.html.getPaddingWidth=function(node){
return dojo.html._callDeprecated("getPaddingWidth","getPadding",arguments,null,"width");
};
dojo.html.getPaddingHeight=function(node){
return dojo.html._callDeprecated("getPaddingHeight","getPadding",arguments,null,"height");
};
dojo.html.getPadBorderWidth=function(node){
return dojo.html._callDeprecated("getPadBorderWidth","getPadBorder",arguments,null,"width");
};
dojo.html.getPadBorderHeight=function(node){
return dojo.html._callDeprecated("getPadBorderHeight","getPadBorder",arguments,null,"height");
};
dojo.html.getBorderBoxWidth=dojo.html.getInnerWidth=function(){
return dojo.html._callDeprecated("getBorderBoxWidth","getBorderBox",arguments,null,"width");
};
dojo.html.getBorderBoxHeight=dojo.html.getInnerHeight=function(){
return dojo.html._callDeprecated("getBorderBoxHeight","getBorderBox",arguments,null,"height");
};
dojo.html.getContentBoxWidth=dojo.html.getContentWidth=function(){
return dojo.html._callDeprecated("getContentBoxWidth","getContentBox",arguments,null,"width");
};
dojo.html.getContentBoxHeight=dojo.html.getContentHeight=function(){
return dojo.html._callDeprecated("getContentBoxHeight","getContentBox",arguments,null,"height");
};
dojo.html.setContentBoxWidth=dojo.html.setContentWidth=function(node,_596){
return dojo.html._callDeprecated("setContentBoxWidth","setContentBox",arguments,"width");
};
dojo.html.setContentBoxHeight=dojo.html.setContentHeight=function(node,_598){
return dojo.html._callDeprecated("setContentBoxHeight","setContentBox",arguments,"height");
};
dojo.provide("dojo.lfx.html");
dojo.lfx.html._byId=function(_599){
if(!_599){
return [];
}
if(dojo.lang.isArrayLike(_599)){
if(!_599.alreadyChecked){
var n=[];
dojo.lang.forEach(_599,function(node){
n.push(dojo.byId(node));
});
n.alreadyChecked=true;
return n;
}else{
return _599;
}
}else{
var n=[];
n.push(dojo.byId(_599));
n.alreadyChecked=true;
return n;
}
};
dojo.lfx.html.propertyAnimation=function(_59c,_59d,_59e,_59f,_5a0){
_59c=dojo.lfx.html._byId(_59c);
var _5a1={"propertyMap":_59d,"nodes":_59c,"duration":_59e,"easing":_59f||dojo.lfx.easeDefault};
var _5a2=function(args){
if(args.nodes.length==1){
var pm=args.propertyMap;
if(!dojo.lang.isArray(args.propertyMap)){
var parr=[];
for(var _5a6 in pm){
pm[_5a6].property=_5a6;
parr.push(pm[_5a6]);
}
pm=args.propertyMap=parr;
}
dojo.lang.forEach(pm,function(prop){
if(dj_undef("start",prop)){
if(prop.property!="opacity"){
prop.start=parseInt(dojo.html.getComputedStyle(args.nodes[0],prop.property));
}else{
prop.start=dojo.html.getOpacity(args.nodes[0]);
}
}
});
}
};
var _5a8=function(_5a9){
var _5aa=[];
dojo.lang.forEach(_5a9,function(c){
_5aa.push(Math.round(c));
});
return _5aa;
};
var _5ac=function(n,_5ae){
n=dojo.byId(n);
if(!n||!n.style){
return;
}
for(var s in _5ae){
try{
if(s=="opacity"){
dojo.html.setOpacity(n,_5ae[s]);
}else{
n.style[s]=_5ae[s];
}
}
catch(e){
dojo.debug(e);
}
}
};
var _5b0=function(_5b1){
this._properties=_5b1;
this.diffs=new Array(_5b1.length);
dojo.lang.forEach(_5b1,function(prop,i){
if(dojo.lang.isFunction(prop.start)){
prop.start=prop.start(prop,i);
}
if(dojo.lang.isFunction(prop.end)){
prop.end=prop.end(prop,i);
}
if(dojo.lang.isArray(prop.start)){
this.diffs[i]=null;
}else{
if(prop.start instanceof dojo.gfx.color.Color){
prop.startRgb=prop.start.toRgb();
prop.endRgb=prop.end.toRgb();
}else{
this.diffs[i]=prop.end-prop.start;
}
}
},this);
this.getValue=function(n){
var ret={};
dojo.lang.forEach(this._properties,function(prop,i){
var _5b8=null;
if(dojo.lang.isArray(prop.start)){
}else{
if(prop.start instanceof dojo.gfx.color.Color){
_5b8=(prop.units||"rgb")+"(";
for(var j=0;j<prop.startRgb.length;j++){
_5b8+=Math.round(((prop.endRgb[j]-prop.startRgb[j])*n)+prop.startRgb[j])+(j<prop.startRgb.length-1?",":"");
}
_5b8+=")";
}else{
_5b8=((this.diffs[i])*n)+prop.start+(prop.property!="opacity"?prop.units||"px":"");
}
}
ret[dojo.html.toCamelCase(prop.property)]=_5b8;
},this);
return ret;
};
};
var anim=new dojo.lfx.Animation({beforeBegin:function(){
_5a2(_5a1);
anim.curve=new _5b0(_5a1.propertyMap);
},onAnimate:function(_5bb){
dojo.lang.forEach(_5a1.nodes,function(node){
_5ac(node,_5bb);
});
}},_5a1.duration,null,_5a1.easing);
if(_5a0){
for(var x in _5a0){
if(dojo.lang.isFunction(_5a0[x])){
anim.connect(x,anim,_5a0[x]);
}
}
}
return anim;
};
dojo.lfx.html._makeFadeable=function(_5be){
var _5bf=function(node){
if(dojo.render.html.ie){
if((node.style.zoom.length==0)&&(dojo.html.getStyle(node,"zoom")=="normal")){
node.style.zoom="1";
}
if((node.style.width.length==0)&&(dojo.html.getStyle(node,"width")=="auto")){
node.style.width="auto";
}
}
};
if(dojo.lang.isArrayLike(_5be)){
dojo.lang.forEach(_5be,_5bf);
}else{
_5bf(_5be);
}
};
dojo.lfx.html.fade=function(_5c1,_5c2,_5c3,_5c4,_5c5){
_5c1=dojo.lfx.html._byId(_5c1);
var _5c6={property:"opacity"};
if(!dj_undef("start",_5c2)){
_5c6.start=_5c2.start;
}else{
_5c6.start=function(){
return dojo.html.getOpacity(_5c1[0]);
};
}
if(!dj_undef("end",_5c2)){
_5c6.end=_5c2.end;
}else{
dojo.raise("dojo.lfx.html.fade needs an end value");
}
var anim=dojo.lfx.propertyAnimation(_5c1,[_5c6],_5c3,_5c4);
anim.connect("beforeBegin",function(){
dojo.lfx.html._makeFadeable(_5c1);
});
if(_5c5){
anim.connect("onEnd",function(){
_5c5(_5c1,anim);
});
}
return anim;
};
dojo.lfx.html.fadeIn=function(_5c8,_5c9,_5ca,_5cb){
return dojo.lfx.html.fade(_5c8,{end:1},_5c9,_5ca,_5cb);
};
dojo.lfx.html.fadeOut=function(_5cc,_5cd,_5ce,_5cf){
return dojo.lfx.html.fade(_5cc,{end:0},_5cd,_5ce,_5cf);
};
dojo.lfx.html.fadeShow=function(_5d0,_5d1,_5d2,_5d3){
_5d0=dojo.lfx.html._byId(_5d0);
dojo.lang.forEach(_5d0,function(node){
dojo.html.setOpacity(node,0);
});
var anim=dojo.lfx.html.fadeIn(_5d0,_5d1,_5d2,_5d3);
anim.connect("beforeBegin",function(){
if(dojo.lang.isArrayLike(_5d0)){
dojo.lang.forEach(_5d0,dojo.html.show);
}else{
dojo.html.show(_5d0);
}
});
return anim;
};
dojo.lfx.html.fadeHide=function(_5d6,_5d7,_5d8,_5d9){
var anim=dojo.lfx.html.fadeOut(_5d6,_5d7,_5d8,function(){
if(dojo.lang.isArrayLike(_5d6)){
dojo.lang.forEach(_5d6,dojo.html.hide);
}else{
dojo.html.hide(_5d6);
}
if(_5d9){
_5d9(_5d6,anim);
}
});
return anim;
};
dojo.lfx.html.wipeIn=function(_5db,_5dc,_5dd,_5de){
_5db=dojo.lfx.html._byId(_5db);
var _5df=[];
dojo.lang.forEach(_5db,function(node){
var _5e1={};
var _5e2,_5e3,_5e4;
with(node.style){
_5e2=top;
_5e3=left;
_5e4=position;
top="-9999px";
left="-9999px";
position="absolute";
display="";
}
var _5e5=dojo.html.getBorderBox(node).height;
with(node.style){
top=_5e2;
left=_5e3;
position=_5e4;
display="none";
}
var anim=dojo.lfx.propertyAnimation(node,{"height":{start:1,end:function(){
return _5e5;
}}},_5dc,_5dd);
anim.connect("beforeBegin",function(){
_5e1.overflow=node.style.overflow;
_5e1.height=node.style.height;
with(node.style){
overflow="hidden";
_5e5="1px";
}
dojo.html.show(node);
});
anim.connect("onEnd",function(){
with(node.style){
overflow=_5e1.overflow;
_5e5=_5e1.height;
}
if(_5de){
_5de(node,anim);
}
});
_5df.push(anim);
});
return dojo.lfx.combine(_5df);
};
dojo.lfx.html.wipeOut=function(_5e7,_5e8,_5e9,_5ea){
_5e7=dojo.lfx.html._byId(_5e7);
var _5eb=[];
dojo.lang.forEach(_5e7,function(node){
var _5ed={};
var anim=dojo.lfx.propertyAnimation(node,{"height":{start:function(){
return dojo.html.getContentBox(node).height;
},end:1}},_5e8,_5e9,{"beforeBegin":function(){
_5ed.overflow=node.style.overflow;
_5ed.height=node.style.height;
with(node.style){
overflow="hidden";
}
dojo.html.show(node);
},"onEnd":function(){
dojo.html.hide(node);
with(node.style){
overflow=_5ed.overflow;
height=_5ed.height;
}
if(_5ea){
_5ea(node,anim);
}
}});
_5eb.push(anim);
});
return dojo.lfx.combine(_5eb);
};
dojo.lfx.html.slideTo=function(_5ef,_5f0,_5f1,_5f2,_5f3){
_5ef=dojo.lfx.html._byId(_5ef);
var _5f4=[];
var _5f5=dojo.html.getComputedStyle;
if(dojo.lang.isArray(_5f0)){
dojo.deprecated("dojo.lfx.html.slideTo(node, array)","use dojo.lfx.html.slideTo(node, {top: value, left: value});","0.5");
_5f0={top:_5f0[0],left:_5f0[1]};
}
dojo.lang.forEach(_5ef,function(node){
var top=null;
var left=null;
var init=(function(){
var _5fa=node;
return function(){
var pos=_5f5(_5fa,"position");
top=(pos=="absolute"?node.offsetTop:parseInt(_5f5(node,"top"))||0);
left=(pos=="absolute"?node.offsetLeft:parseInt(_5f5(node,"left"))||0);
if(!dojo.lang.inArray(["absolute","relative"],pos)){
var ret=dojo.html.abs(_5fa,true);
dojo.html.setStyleAttributes(_5fa,"position:absolute;top:"+ret.y+"px;left:"+ret.x+"px;");
top=ret.y;
left=ret.x;
}
};
})();
init();
var anim=dojo.lfx.propertyAnimation(node,{"top":{start:top,end:(_5f0.top||0)},"left":{start:left,end:(_5f0.left||0)}},_5f1,_5f2,{"beforeBegin":init});
if(_5f3){
anim.connect("onEnd",function(){
_5f3(_5ef,anim);
});
}
_5f4.push(anim);
});
return dojo.lfx.combine(_5f4);
};
dojo.lfx.html.slideBy=function(_5fe,_5ff,_600,_601,_602){
_5fe=dojo.lfx.html._byId(_5fe);
var _603=[];
var _604=dojo.html.getComputedStyle;
if(dojo.lang.isArray(_5ff)){
dojo.deprecated("dojo.lfx.html.slideBy(node, array)","use dojo.lfx.html.slideBy(node, {top: value, left: value});","0.5");
_5ff={top:_5ff[0],left:_5ff[1]};
}
dojo.lang.forEach(_5fe,function(node){
var top=null;
var left=null;
var init=(function(){
var _609=node;
return function(){
var pos=_604(_609,"position");
top=(pos=="absolute"?node.offsetTop:parseInt(_604(node,"top"))||0);
left=(pos=="absolute"?node.offsetLeft:parseInt(_604(node,"left"))||0);
if(!dojo.lang.inArray(["absolute","relative"],pos)){
var ret=dojo.html.abs(_609,true);
dojo.html.setStyleAttributes(_609,"position:absolute;top:"+ret.y+"px;left:"+ret.x+"px;");
top=ret.y;
left=ret.x;
}
};
})();
init();
var anim=dojo.lfx.propertyAnimation(node,{"top":{start:top,end:top+(_5ff.top||0)},"left":{start:left,end:left+(_5ff.left||0)}},_600,_601).connect("beforeBegin",init);
if(_602){
anim.connect("onEnd",function(){
_602(_5fe,anim);
});
}
_603.push(anim);
});
return dojo.lfx.combine(_603);
};
dojo.lfx.html.explode=function(_60d,_60e,_60f,_610,_611){
var h=dojo.html;
_60d=dojo.byId(_60d);
_60e=dojo.byId(_60e);
var _613=h.toCoordinateObject(_60d,true);
var _614=document.createElement("div");
h.copyStyle(_614,_60e);
if(_60e.explodeClassName){
_614.className=_60e.explodeClassName;
}
with(_614.style){
position="absolute";
display="none";
var _615=h.getStyle(_60d,"background-color");
backgroundColor=_615?_615.toLowerCase():"transparent";
backgroundColor=(backgroundColor=="transparent")?"rgb(221, 221, 221)":backgroundColor;
}
dojo.body().appendChild(_614);
with(_60e.style){
visibility="hidden";
display="block";
}
var _616=h.toCoordinateObject(_60e,true);
with(_60e.style){
display="none";
visibility="visible";
}
var _617={opacity:{start:0.5,end:1}};
dojo.lang.forEach(["height","width","top","left"],function(type){
_617[type]={start:_613[type],end:_616[type]};
});
var anim=new dojo.lfx.propertyAnimation(_614,_617,_60f,_610,{"beforeBegin":function(){
h.setDisplay(_614,"block");
},"onEnd":function(){
h.setDisplay(_60e,"block");
_614.parentNode.removeChild(_614);
}});
if(_611){
anim.connect("onEnd",function(){
_611(_60e,anim);
});
}
return anim;
};
dojo.lfx.html.implode=function(_61a,end,_61c,_61d,_61e){
var h=dojo.html;
_61a=dojo.byId(_61a);
end=dojo.byId(end);
var _620=dojo.html.toCoordinateObject(_61a,true);
var _621=dojo.html.toCoordinateObject(end,true);
var _622=document.createElement("div");
dojo.html.copyStyle(_622,_61a);
if(_61a.explodeClassName){
_622.className=_61a.explodeClassName;
}
dojo.html.setOpacity(_622,0.3);
with(_622.style){
position="absolute";
display="none";
backgroundColor=h.getStyle(_61a,"background-color").toLowerCase();
}
dojo.body().appendChild(_622);
var _623={opacity:{start:1,end:0.5}};
dojo.lang.forEach(["height","width","top","left"],function(type){
_623[type]={start:_620[type],end:_621[type]};
});
var anim=new dojo.lfx.propertyAnimation(_622,_623,_61c,_61d,{"beforeBegin":function(){
dojo.html.hide(_61a);
dojo.html.show(_622);
},"onEnd":function(){
_622.parentNode.removeChild(_622);
}});
if(_61e){
anim.connect("onEnd",function(){
_61e(_61a,anim);
});
}
return anim;
};
dojo.lfx.html.highlight=function(_626,_627,_628,_629,_62a){
_626=dojo.lfx.html._byId(_626);
var _62b=[];
dojo.lang.forEach(_626,function(node){
var _62d=dojo.html.getBackgroundColor(node);
var bg=dojo.html.getStyle(node,"background-color").toLowerCase();
var _62f=dojo.html.getStyle(node,"background-image");
var _630=(bg=="transparent"||bg=="rgba(0, 0, 0, 0)");
while(_62d.length>3){
_62d.pop();
}
var rgb=new dojo.gfx.color.Color(_627);
var _632=new dojo.gfx.color.Color(_62d);
var anim=dojo.lfx.propertyAnimation(node,{"background-color":{start:rgb,end:_632}},_628,_629,{"beforeBegin":function(){
if(_62f){
node.style.backgroundImage="none";
}
node.style.backgroundColor="rgb("+rgb.toRgb().join(",")+")";
},"onEnd":function(){
if(_62f){
node.style.backgroundImage=_62f;
}
if(_630){
node.style.backgroundColor="transparent";
}
if(_62a){
_62a(node,anim);
}
}});
_62b.push(anim);
});
return dojo.lfx.combine(_62b);
};
dojo.lfx.html.unhighlight=function(_634,_635,_636,_637,_638){
_634=dojo.lfx.html._byId(_634);
var _639=[];
dojo.lang.forEach(_634,function(node){
var _63b=new dojo.gfx.color.Color(dojo.html.getBackgroundColor(node));
var rgb=new dojo.gfx.color.Color(_635);
var _63d=dojo.html.getStyle(node,"background-image");
var anim=dojo.lfx.propertyAnimation(node,{"background-color":{start:_63b,end:rgb}},_636,_637,{"beforeBegin":function(){
if(_63d){
node.style.backgroundImage="none";
}
node.style.backgroundColor="rgb("+_63b.toRgb().join(",")+")";
},"onEnd":function(){
if(_638){
_638(node,anim);
}
}});
_639.push(anim);
});
return dojo.lfx.combine(_639);
};
dojo.lang.mixin(dojo.lfx,dojo.lfx.html);
dojo.provide("dojo.lfx.*");


__CPAN_EDITION__ ajax build.txt

Files baked into this package:

dojoGuardStart.js,
../src/bootstrap1.js,
../src/loader.js,
../src/loader_xd.js,
dojoGuardEnd.js,
../src/hostenv_browser.js,
../src/bootstrap2.js,
../src/string/common.js,
../src/string.js,
../src/lang/common.js,
../src/lang/extras.js,
../src/io/common.js,
../src/lang/array.js,
../src/lang/func.js,
../src/string/extras.js,
../src/dom.js,
../src/undo/browser.js,
../src/io/BrowserIO.js,
../src/io/cookie.js,
../src/io/__package__.js,
../src/event/common.js,
../src/event/topic.js,
../src/event/browser.js,
../src/event/__package__.js,
../src/gfx/color.js,
../src/lfx/Animation.js,
../src/html/common.js,
../src/uri/Uri.js,
../src/html/style.js,
../src/html/display.js,
../src/html/color.js,
../src/html/layout.js,
../src/lfx/html.js,
../src/lfx/__package__.js

		
